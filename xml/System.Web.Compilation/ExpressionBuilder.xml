<Type Name="ExpressionBuilder" FullName="System.Web.Compilation.ExpressionBuilder">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a39e97c83d91647815f83d50e83bed7d53113de1" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39738948" /></Metadata><TypeSignature Language="C#" Value="public abstract class ExpressionBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ExpressionBuilder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Compilation.ExpressionBuilder" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ExpressionBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class ExpressionBuilder abstract" />
  <TypeSignature Language="F#" Value="type ExpressionBuilder = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="d2a91-101">Evalúa las expresiones durante el análisis de páginas.</span><span class="sxs-lookup"><span data-stu-id="d2a91-101">Evaluates expressions during page parsing.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2a91-102">El <xref:System.Web.Compilation.ExpressionBuilder> clase es la clase base para los generadores de expresiones, como la <xref:System.Web.Compilation.AppSettingsExpressionBuilder> (clase), que crea expresiones de código durante el análisis de página.</span><span class="sxs-lookup"><span data-stu-id="d2a91-102">The <xref:System.Web.Compilation.ExpressionBuilder> class is the base class for expression builders, such as the <xref:System.Web.Compilation.AppSettingsExpressionBuilder> class, that create code expressions during page parsing.</span></span>  
  
 <span data-ttu-id="d2a91-103">Generadores de expresiones analizan las expresiones declarativas y crean código para recuperar los valores enlazados a una propiedad de control.</span><span class="sxs-lookup"><span data-stu-id="d2a91-103">Expression builders parse declarative expressions and create code to retrieve values bound to a control property.</span></span> <span data-ttu-id="d2a91-104">En escenarios sin compilación, un generador de expresiones que admite una característica de no compilación evalúa la expresión durante el tiempo de ejecución.</span><span class="sxs-lookup"><span data-stu-id="d2a91-104">In no-compile scenarios, an expression builder that supports a no-compile feature evaluates the expression during run time.</span></span>  
  
 <span data-ttu-id="d2a91-105">Cuando el analizador de páginas encuentra una expresión delimitada con la cadena `<%$ %>`, crea un generador de expresiones para la expresión basándose en el prefijo de la cadena.</span><span class="sxs-lookup"><span data-stu-id="d2a91-105">When the page parser encounters an expression that is delimited with the string `<%$ %>`, it creates an expression builder for the expression based on the prefix in the string.</span></span> <span data-ttu-id="d2a91-106">El prefijo es la parte de la cadena a la izquierda de los dos puntos (:).</span><span class="sxs-lookup"><span data-stu-id="d2a91-106">The prefix is the portion of the string that is to the left of the colon (:).</span></span> <span data-ttu-id="d2a91-107">Por ejemplo, cuando el analizador encuentra la cadena `<%$ ConnectionStrings:MessageDB %>`, crea un <xref:System.Web.Compilation.ConnectionStringsExpressionBuilder> objeto.</span><span class="sxs-lookup"><span data-stu-id="d2a91-107">For example, when the parser encounters the string `<%$ ConnectionStrings:MessageDB %>`, it creates a <xref:System.Web.Compilation.ConnectionStringsExpressionBuilder> object.</span></span> <span data-ttu-id="d2a91-108">Los prefijos se asocian con los generadores de expresiones en el archivo Web.config en el <xref:System.Web.Configuration.CompilationSection.ExpressionBuilders%2A> sección.</span><span class="sxs-lookup"><span data-stu-id="d2a91-108">Prefixes are associated with expression builders in the Web.config file in the <xref:System.Web.Configuration.CompilationSection.ExpressionBuilders%2A> section.</span></span>  
  
 <span data-ttu-id="d2a91-109">El lado derecho de la expresión declarativa se pasa al generador de expresiones para la evaluación.</span><span class="sxs-lookup"><span data-stu-id="d2a91-109">The right side of the declarative expression is passed to the expression builder for evaluation.</span></span> <span data-ttu-id="d2a91-110">Invalidar el <xref:System.Web.Compilation.ExpressionBuilder.GetCodeExpression%2A> método para generar el código que se va a compilar con la página.</span><span class="sxs-lookup"><span data-stu-id="d2a91-110">Override the <xref:System.Web.Compilation.ExpressionBuilder.GetCodeExpression%2A> method to generate code that will be compiled with the page.</span></span>  
  
 <span data-ttu-id="d2a91-111">Si desea que el generador de expresiones personalizado para que estén activos en las páginas que no se compilan, también debe invalidar el <xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A> método devuelva un objeto que representa los resultados de la expresión.</span><span class="sxs-lookup"><span data-stu-id="d2a91-111">If you want the custom expression builder to be active on pages that are not compiled, you must also override the <xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A> method to return an object that represents the results of the expression.</span></span> <span data-ttu-id="d2a91-112">También debe invalidar el <xref:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate%2A> propiedad para indicar que el generador de expresiones personalizadas admite páginas sin compilación.</span><span class="sxs-lookup"><span data-stu-id="d2a91-112">You also must override the <xref:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate%2A> property to indicate that the custom expression builder does support no-compile pages.</span></span>  
  
 <span data-ttu-id="d2a91-113">Puede definir un conjunto de propiedades y métodos para seleccionar y evaluar una expresión que está asociada con una propiedad de control en tiempo de diseño mediante la implementación de un editor de expresiones.</span><span class="sxs-lookup"><span data-stu-id="d2a91-113">You can define a set of properties and methods for selecting and evaluating an expression that is associated with a control property at design time by implementing an expression editor.</span></span> <span data-ttu-id="d2a91-114">El editor está marcado en el generador de expresiones a través de los metadatos de nivel de clase.</span><span class="sxs-lookup"><span data-stu-id="d2a91-114">The editor is marked on the expression builder through class-level metadata.</span></span> <span data-ttu-id="d2a91-115">Para obtener más información, vea <xref:System.Web.UI.Design.ExpressionEditor>.</span><span class="sxs-lookup"><span data-stu-id="d2a91-115">For more information, see <xref:System.Web.UI.Design.ExpressionEditor>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d2a91-116">Ejemplos de código siguientes muestran cómo compilar un generador de expresiones personalizado implementando la <xref:System.Web.Compilation.ExpressionBuilder> clase abstracta.</span><span class="sxs-lookup"><span data-stu-id="d2a91-116">The following code examples demonstrate how to build a custom expression builder by implementing the <xref:System.Web.Compilation.ExpressionBuilder> abstract class.</span></span> <span data-ttu-id="d2a91-117">Esta implementación de <xref:System.Web.Compilation.ExpressionBuilder> devuelve una instrucción evaluada que se pasa a la expresión.</span><span class="sxs-lookup"><span data-stu-id="d2a91-117">This implementation of <xref:System.Web.Compilation.ExpressionBuilder> returns an evaluated statement that is passed to the expression.</span></span> <span data-ttu-id="d2a91-118">Para ejecutar este ejemplo, primero debe registrar el generador de expresiones personalizado en el archivo Web.config.</span><span class="sxs-lookup"><span data-stu-id="d2a91-118">To run this example, you must first register the custom expression builder in the Web.config file.</span></span> <span data-ttu-id="d2a91-119">El primer ejemplo de código muestra cómo registrar el generador de expresiones personalizado en el archivo Web.config.</span><span class="sxs-lookup"><span data-stu-id="d2a91-119">The first code example demonstrates how to register the custom expression builder in the Web.config file.</span></span>  
  
```  
<configuration>  
    <system.web>  
       <compilation>  
          <expressionBuilders>  
              <add expressionPrefix="MyCustomExpression"  
               type="MyCustomExpressionBuilder"/>  
          </expressionBuilders>  
       </compilation>  
    </system.web>  
</configuration>  
```  
  
 <span data-ttu-id="d2a91-120">El segundo ejemplo de código muestra cómo hacer referencia a la expresión en un archivo .aspx.</span><span class="sxs-lookup"><span data-stu-id="d2a91-120">The second code example demonstrates how to reference the expression in an .aspx file.</span></span>  
  
```  
<asp:Label ID="Label1" runat="server"   
Text="<%$ MyCustomExpression:Hello, world! %>" />  
```  
  
 <span data-ttu-id="d2a91-121">El tercer ejemplo de código muestra cómo desarrollar un generador de expresiones personalizado derivando de <xref:System.Web.Compilation.ExpressionBuilder>.</span><span class="sxs-lookup"><span data-stu-id="d2a91-121">The third code example demonstrates how to develop a customized expression builder by deriving from <xref:System.Web.Compilation.ExpressionBuilder>.</span></span> <span data-ttu-id="d2a91-122">Para ejecutar este ejemplo de código, debe colocar la clase en la carpeta App_Code.</span><span class="sxs-lookup"><span data-stu-id="d2a91-122">To run this code example, you must place the class in the App_Code folder.</span></span>  
  
 [!code-csharp[System.Web.Compilation.ExpressionBuilder#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.ExpressionBuilder/CS/MyExpressionBuilder.cs#1)] 
 [!code-vb[System.Web.Compilation.ExpressionBuilder#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.ExpressionBuilder/VB/MyExpressionBuilder.vb#1)]   
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><span data-ttu-id="d2a91-123"><para>Al heredar de la <see cref="T:System.Web.Compilation.ExpressionBuilder" /> (clase), debe invalidar el <see cref="M:System.Web.Compilation.ExpressionBuilder.GetCodeExpression(System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)" /> método.</para></span><span class="sxs-lookup"><span data-stu-id="d2a91-123"><para>When you inherit from the <see cref="T:System.Web.Compilation.ExpressionBuilder" /> class, you must override the <see cref="M:System.Web.Compilation.ExpressionBuilder.GetCodeExpression(System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)" /> method.</para></span></span></block>
    <altmember cref="T:System.Web.Compilation.ExpressionBuilderContext" />
    <altmember cref="T:System.Web.Configuration.ExpressionBuilder" />
    <altmember cref="T:System.Web.Configuration.ExpressionBuilderCollection" />
    <altmember cref="T:System.Web.Compilation.AppSettingsExpressionBuilder" />
    <altmember cref="T:System.Web.Compilation.ConnectionStringsExpressionBuilder" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ExpressionBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ExpressionBuilder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ExpressionBuilder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d2a91-124">Inicializa una nueva instancia de la clase <see cref="T:System.Web.Compilation.ExpressionBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="d2a91-124">Initializes a new instance of the <see cref="T:System.Web.Compilation.ExpressionBuilder" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2a91-125">Dado que el <xref:System.Web.Compilation.ExpressionBuilder> clase es abstracta y no se puede crear una instancia de <xref:System.Web.Compilation.ExpressionBuilder> directamente mediante el <xref:System.Web.Compilation.ExpressionBuilder.%23ctor%2A> constructor.</span><span class="sxs-lookup"><span data-stu-id="d2a91-125">Because the <xref:System.Web.Compilation.ExpressionBuilder> class is abstract, you cannot create an instance of <xref:System.Web.Compilation.ExpressionBuilder> directly by using the <xref:System.Web.Compilation.ExpressionBuilder.%23ctor%2A> constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="d2a91-126"><para>Al derivar de la <see cref="T:System.Web.Compilation.ExpressionBuilder" /> clase, invalide el <see cref="M:System.Web.Compilation.ExpressionBuilder.#ctor" /> constructor para implementar acciones de inicialización personalizadas para la implementación del generador de expresiones.</para></span><span class="sxs-lookup"><span data-stu-id="d2a91-126"><para>When deriving from the <see cref="T:System.Web.Compilation.ExpressionBuilder" /> class, override the <see cref="M:System.Web.Compilation.ExpressionBuilder.#ctor" /> constructor to implement custom initialization actions for your expression builder implementation.</para></span></span></block>
        <altmember cref="T:System.Web.Compilation.ExpressionBuilderContext" />
        <altmember cref="T:System.Web.Configuration.ExpressionBuilder" />
        <altmember cref="T:System.Web.Configuration.ExpressionBuilderCollection" />
        <altmember cref="T:System.Web.Compilation.AppSettingsExpressionBuilder" />
        <altmember cref="T:System.Web.Compilation.ConnectionStringsExpressionBuilder" />
      </Docs>
    </Member>
    <Member MemberName="EvaluateExpression">
      <MemberSignature Language="C#" Value="public virtual object EvaluateExpression (object target, System.Web.UI.BoundPropertyEntry entry, object parsedData, System.Web.Compilation.ExpressionBuilderContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object EvaluateExpression(object target, class System.Web.UI.BoundPropertyEntry entry, object parsedData, class System.Web.Compilation.ExpressionBuilderContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ExpressionBuilder.EvaluateExpression(System.Object,System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function EvaluateExpression (target As Object, entry As BoundPropertyEntry, parsedData As Object, context As ExpressionBuilderContext) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ EvaluateExpression(System::Object ^ target, System::Web::UI::BoundPropertyEntry ^ entry, System::Object ^ parsedData, System::Web::Compilation::ExpressionBuilderContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member EvaluateExpression : obj * System.Web.UI.BoundPropertyEntry * obj * System.Web.Compilation.ExpressionBuilderContext -&gt; obj&#xA;override this.EvaluateExpression : obj * System.Web.UI.BoundPropertyEntry * obj * System.Web.Compilation.ExpressionBuilderContext -&gt; obj" Usage="expressionBuilder.EvaluateExpression (target, entry, parsedData, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="entry" Type="System.Web.UI.BoundPropertyEntry" />
        <Parameter Name="parsedData" Type="System.Object" />
        <Parameter Name="context" Type="System.Web.Compilation.ExpressionBuilderContext" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="d2a91-127">Objeto que contiene la expresión.</span><span class="sxs-lookup"><span data-stu-id="d2a91-127">The object containing the expression.</span></span></param>
        <param name="entry"><span data-ttu-id="d2a91-128">Objeto que representa la información sobre la propiedad con la que se establece el enlace mediante la expresión.</span><span class="sxs-lookup"><span data-stu-id="d2a91-128">The object that represents information about the property bound to by the expression.</span></span></param>
        <param name="parsedData"><span data-ttu-id="d2a91-129">Objeto que contiene los datos analizados devuelto por <see cref="M:System.Web.Compilation.ExpressionBuilder.ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)" />.</span><span class="sxs-lookup"><span data-stu-id="d2a91-129">The object containing parsed data as returned by <see cref="M:System.Web.Compilation.ExpressionBuilder.ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)" />.</span></span></param>
        <param name="context"><span data-ttu-id="d2a91-130">Información de contexto para la evaluación de la expresión.</span><span class="sxs-lookup"><span data-stu-id="d2a91-130">Contextual information for the evaluation of the expression.</span></span></param>
        <summary><span data-ttu-id="d2a91-131">Cuando se reemplaza en una clase derivada, devuelve un objeto que representa una expresión evaluada.</span><span class="sxs-lookup"><span data-stu-id="d2a91-131">When overridden in a derived class, returns an object that represents an evaluated expression.</span></span></summary>
        <returns><span data-ttu-id="d2a91-132">Es un objeto que representa la expresión evaluada; de lo contrario, es <see langword="null" /> si el heredero no implementa <see cref="M:System.Web.Compilation.ExpressionBuilder.EvaluateExpression(System.Object,System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)" />.</span><span class="sxs-lookup"><span data-stu-id="d2a91-132">An object that represents the evaluated expression; otherwise, <see langword="null" /> if the inheritor does not implement <see cref="M:System.Web.Compilation.ExpressionBuilder.EvaluateExpression(System.Object,System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2a91-133">Si desea que su <xref:System.Web.Compilation.ExpressionBuilder> objetos estén activos en una página que admite la característica de no compilación, puede invalidar el <xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A> método y el <xref:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="d2a91-133">If you want your <xref:System.Web.Compilation.ExpressionBuilder> object to be active on a page that supports the no-compile feature, you can override the <xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A> method and the <xref:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate%2A> property.</span></span> <span data-ttu-id="d2a91-134">El <xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A> método debe devolver la evaluación de la expresión actual.</span><span class="sxs-lookup"><span data-stu-id="d2a91-134">The <xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A> method should return the evaluation of the current expression.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d2a91-135">En el ejemplo de código siguiente se muestra cómo usar invalidado <xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A> método para devolver una expresión evaluada.</span><span class="sxs-lookup"><span data-stu-id="d2a91-135">The following code example demonstrates how to use the overridden <xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A> method to return an evaluated expression.</span></span>  
  
 [!code-csharp[System.Web.Compilation.ExpressionBuilder#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.ExpressionBuilder/CS/MyExpressionBuilder.cs#3)]    
 [!code-vb[System.Web.Compilation.ExpressionBuilder#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.ExpressionBuilder/VB/MyExpressionBuilder.vb#3)]   
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="d2a91-136"><para>Si invalida el <see cref="M:System.Web.Compilation.ExpressionBuilder.EvaluateExpression(System.Object,System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)" /> método, también debe invalidar el <see cref="P:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate" /> propiedad.</para></span><span class="sxs-lookup"><span data-stu-id="d2a91-136"><para>If you override the <see cref="M:System.Web.Compilation.ExpressionBuilder.EvaluateExpression(System.Object,System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)" /> method, you must also override the <see cref="P:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate" /> property.</para></span></span></block>
      </Docs>
    </Member>
    <Member MemberName="GetCodeExpression">
      <MemberSignature Language="C#" Value="public abstract System.CodeDom.CodeExpression GetCodeExpression (System.Web.UI.BoundPropertyEntry entry, object parsedData, System.Web.Compilation.ExpressionBuilderContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.CodeDom.CodeExpression GetCodeExpression(class System.Web.UI.BoundPropertyEntry entry, object parsedData, class System.Web.Compilation.ExpressionBuilderContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ExpressionBuilder.GetCodeExpression(System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetCodeExpression (entry As BoundPropertyEntry, parsedData As Object, context As ExpressionBuilderContext) As CodeExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::CodeDom::CodeExpression ^ GetCodeExpression(System::Web::UI::BoundPropertyEntry ^ entry, System::Object ^ parsedData, System::Web::Compilation::ExpressionBuilderContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GetCodeExpression : System.Web.UI.BoundPropertyEntry * obj * System.Web.Compilation.ExpressionBuilderContext -&gt; System.CodeDom.CodeExpression" Usage="expressionBuilder.GetCodeExpression (entry, parsedData, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="System.Web.UI.BoundPropertyEntry" />
        <Parameter Name="parsedData" Type="System.Object" />
        <Parameter Name="context" Type="System.Web.Compilation.ExpressionBuilderContext" />
      </Parameters>
      <Docs>
        <param name="entry"><span data-ttu-id="d2a91-137">Objeto que representa la información sobre la propiedad con la que se establece el enlace mediante la expresión.</span><span class="sxs-lookup"><span data-stu-id="d2a91-137">The object that represents information about the property bound to by the expression.</span></span></param>
        <param name="parsedData"><span data-ttu-id="d2a91-138">Objeto que contiene los datos analizados devuelto por <see cref="M:System.Web.Compilation.ExpressionBuilder.ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)" />.</span><span class="sxs-lookup"><span data-stu-id="d2a91-138">The object containing parsed data as returned by <see cref="M:System.Web.Compilation.ExpressionBuilder.ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)" />.</span></span></param>
        <param name="context"><span data-ttu-id="d2a91-139">Información de contexto para la evaluación de la expresión.</span><span class="sxs-lookup"><span data-stu-id="d2a91-139">Contextual information for the evaluation of the expression.</span></span></param>
        <summary><span data-ttu-id="d2a91-140">Cuando se reemplaza en una clase derivada, devuelve código que se utiliza durante la ejecución de la página para obtener la expresión evaluada.</span><span class="sxs-lookup"><span data-stu-id="d2a91-140">When overridden in a derived class, returns code that is used during page execution to obtain the evaluated expression.</span></span></summary>
        <returns><span data-ttu-id="d2a91-141"><see cref="T:System.CodeDom.CodeExpression" /> utilizado para la asignación de propiedad.</span><span class="sxs-lookup"><span data-stu-id="d2a91-141">A <see cref="T:System.CodeDom.CodeExpression" /> that is used for property assignment.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2a91-142">Las clases que heredan de la <xref:System.Web.Compilation.ExpressionBuilder> clase debe implementar la <xref:System.Web.Compilation.ExpressionBuilder.GetCodeExpression%2A> método abstracto.</span><span class="sxs-lookup"><span data-stu-id="d2a91-142">Classes that inherit from the <xref:System.Web.Compilation.ExpressionBuilder> class must implement the <xref:System.Web.Compilation.ExpressionBuilder.GetCodeExpression%2A> abstract method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d2a91-143">En el ejemplo de código siguiente se muestra cómo devolver un <xref:System.CodeDom.CodeExpression> objeto invalidando el <xref:System.Web.Compilation.ExpressionBuilder.GetCodeExpression%2A> método.</span><span class="sxs-lookup"><span data-stu-id="d2a91-143">The following code example demonstrates how to return a <xref:System.CodeDom.CodeExpression> object by overriding the <xref:System.Web.Compilation.ExpressionBuilder.GetCodeExpression%2A> method.</span></span>  
  
 [!code-csharp[System.Web.Compilation.ExpressionBuilder#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.ExpressionBuilder/CS/MyExpressionBuilder.cs#4)] 
 [!code-vb[System.Web.Compilation.ExpressionBuilder#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.ExpressionBuilder/VB/MyExpressionBuilder.vb#4)]   
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="d2a91-144"><para>Si implementa un generador de expresiones personalizado, debe realizar la conversión de tipos adecuada para la propiedad de control y devolver la operación de conversión en el <see cref="T:System.CodeDom.CodeExpression" /> objeto.</para></span><span class="sxs-lookup"><span data-stu-id="d2a91-144"><para>If you implement a custom expression builder, you must perform the proper type casting for the control property and return the cast operation in the <see cref="T:System.CodeDom.CodeExpression" /> object.</para></span></span></block>
      </Docs>
    </Member>
    <Member MemberName="ParseExpression">
      <MemberSignature Language="C#" Value="public virtual object ParseExpression (string expression, Type propertyType, System.Web.Compilation.ExpressionBuilderContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ParseExpression(string expression, class System.Type propertyType, class System.Web.Compilation.ExpressionBuilderContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ExpressionBuilder.ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ParseExpression (expression As String, propertyType As Type, context As ExpressionBuilderContext) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ ParseExpression(System::String ^ expression, Type ^ propertyType, System::Web::Compilation::ExpressionBuilderContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member ParseExpression : string * Type * System.Web.Compilation.ExpressionBuilderContext -&gt; obj&#xA;override this.ParseExpression : string * Type * System.Web.Compilation.ExpressionBuilderContext -&gt; obj" Usage="expressionBuilder.ParseExpression (expression, propertyType, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.String" />
        <Parameter Name="propertyType" Type="System.Type" />
        <Parameter Name="context" Type="System.Web.Compilation.ExpressionBuilderContext" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="d2a91-145">Valor de la expresión declarativa.</span><span class="sxs-lookup"><span data-stu-id="d2a91-145">The value of the declarative expression.</span></span></param>
        <param name="propertyType"><span data-ttu-id="d2a91-146">Tipo de la propiedad a la que se establece un enlace mediante la expresión.</span><span class="sxs-lookup"><span data-stu-id="d2a91-146">The type of the property bound to by the expression.</span></span></param>
        <param name="context"><span data-ttu-id="d2a91-147">Información de contexto para la evaluación de la expresión.</span><span class="sxs-lookup"><span data-stu-id="d2a91-147">Contextual information for the evaluation of the expression.</span></span></param>
        <summary><span data-ttu-id="d2a91-148">Cuando se reemplaza en una clase derivada, devuelve un objeto que representa una expresión analizada.</span><span class="sxs-lookup"><span data-stu-id="d2a91-148">When overridden in a derived class, returns an object that represents the parsed expression.</span></span></summary>
        <returns><span data-ttu-id="d2a91-149">Es un objeto <see cref="T:System.Object" /> que contiene la representación analizada de la expresión; de lo contrario, es <see langword="null" /> si no se implementa <see cref="M:System.Web.Compilation.ExpressionBuilder.ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)" />.</span><span class="sxs-lookup"><span data-stu-id="d2a91-149">An <see cref="T:System.Object" /> containing the parsed representation of the expression; otherwise, <see langword="null" /> if <see cref="M:System.Web.Compilation.ExpressionBuilder.ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)" /> is not implemented.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2a91-150">Cuando se invalida en una clase derivada, este método analiza la expresión y lo devuelve como un objeto que puede usarse como el `parsedData` parámetro en un <xref:System.Web.Compilation.ExpressionBuilder.GetCodeExpression%2A> o <xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A> método.</span><span class="sxs-lookup"><span data-stu-id="d2a91-150">When overridden in a derived class, this method parses the expression and returns it as an object that can be used as the `parsedData` parameter in a <xref:System.Web.Compilation.ExpressionBuilder.GetCodeExpression%2A> or <xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsEvaluate">
      <MemberSignature Language="C#" Value="public virtual bool SupportsEvaluate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsEvaluate" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsEvaluate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsEvaluate { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsEvaluate : bool" Usage="System.Web.Compilation.ExpressionBuilder.SupportsEvaluate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d2a91-151">Cuando se reemplaza en una clase derivada, devuelve un valor que indica si el objeto <see cref="T:System.Web.Compilation.ExpressionBuilder" /> actual admite páginas sin compilación.</span><span class="sxs-lookup"><span data-stu-id="d2a91-151">When overridden in a derived class, returns a value indicating whether the current <see cref="T:System.Web.Compilation.ExpressionBuilder" /> object supports no-compile pages.</span></span></summary>
        <value><span data-ttu-id="d2a91-152">Es <see langword="true" /> si <see cref="T:System.Web.Compilation.ExpressionBuilder" /> admite la evaluación de expresiones; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d2a91-152"><see langword="true" /> if the <see cref="T:System.Web.Compilation.ExpressionBuilder" /> supports expression evaluation; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2a91-153">El valor predeterminado para el <xref:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate%2A> propiedad es `false`.</span><span class="sxs-lookup"><span data-stu-id="d2a91-153">The default value for the <xref:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate%2A> property is `false`.</span></span> <span data-ttu-id="d2a91-154">Para admitir páginas sin compilación, debe invalidar el <xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A> método y el <xref:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="d2a91-154">To support no-compile pages, you must override both the <xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A> method and the <xref:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d2a91-155">En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="d2a91-155">The following code example demonstrates how to use the <xref:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate%2A> property.</span></span>  
  
 [!code-csharp[System.Web.Compilation.ExpressionBuilder#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.ExpressionBuilder/CS/MyExpressionBuilder.cs#2)] 
 [!code-vb[System.Web.Compilation.ExpressionBuilder#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.ExpressionBuilder/VB/MyExpressionBuilder.vb#2)]   
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
<Type Name="Validator" FullName="System.ComponentModel.DataAnnotations.Validator">
  <Metadata><Meta Name="ms.openlocfilehash" Value="53176491918ad40bd5a507063623064524630290" /><Meta Name="ms.sourcegitcommit" Value="1bb00d2f4343e73ae8d58668f02297a3cf10a4c1" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="06/15/2019" /><Meta Name="ms.locfileid" Value="63904356" /></Metadata><TypeSignature Language="C#" Value="public static class Validator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Validator extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.DataAnnotations.Validator" />
  <TypeSignature Language="VB.NET" Value="Public Class Validator" />
  <TypeSignature Language="C++ CLI" Value="public ref class Validator abstract sealed" />
  <TypeSignature Language="F#" Value="type Validator = class" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="4466b-101">Define una clase del asistente que se puede usar para validar objetos, propiedades y métodos cuando está incluida en sus atributos <see cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute" /> asociados.</span><span class="sxs-lookup"><span data-stu-id="4466b-101">Defines a helper class that can be used to validate objects, properties, and methods when it is included in their associated <see cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute" /> attributes.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="TryValidateObject">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4466b-102">Determina si el objeto especificado es válido.</span><span class="sxs-lookup"><span data-stu-id="4466b-102">Determines whether the specified object is valid.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryValidateObject">
      <MemberSignature Language="C#" Value="public static bool TryValidateObject (object instance, System.ComponentModel.DataAnnotations.ValidationContext validationContext, System.Collections.Generic.ICollection&lt;System.ComponentModel.DataAnnotations.ValidationResult&gt; validationResults);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryValidateObject(object instance, class System.ComponentModel.DataAnnotations.ValidationContext validationContext, class System.Collections.Generic.ICollection`1&lt;class System.ComponentModel.DataAnnotations.ValidationResult&gt; validationResults) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DataAnnotations.Validator.TryValidateObject(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.ICollection{System.ComponentModel.DataAnnotations.ValidationResult})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryValidateObject(System::Object ^ instance, System::ComponentModel::DataAnnotations::ValidationContext ^ validationContext, System::Collections::Generic::ICollection&lt;System::ComponentModel::DataAnnotations::ValidationResult ^&gt; ^ validationResults);" />
      <MemberSignature Language="F#" Value="static member TryValidateObject : obj * System.ComponentModel.DataAnnotations.ValidationContext * System.Collections.Generic.ICollection&lt;System.ComponentModel.DataAnnotations.ValidationResult&gt; -&gt; bool" Usage="System.ComponentModel.DataAnnotations.Validator.TryValidateObject (instance, validationContext, validationResults)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="validationContext" Type="System.ComponentModel.DataAnnotations.ValidationContext" />
        <Parameter Name="validationResults" Type="System.Collections.Generic.ICollection&lt;System.ComponentModel.DataAnnotations.ValidationResult&gt;" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="4466b-103">Objeto que se va a validar.</span><span class="sxs-lookup"><span data-stu-id="4466b-103">The object to validate.</span></span></param>
        <param name="validationContext"><span data-ttu-id="4466b-104">Contexto que describe el objeto que se va a validar.</span><span class="sxs-lookup"><span data-stu-id="4466b-104">The context that describes the object to validate.</span></span></param>
        <param name="validationResults"><span data-ttu-id="4466b-105">Colección que va a contener todas las validaciones con error.</span><span class="sxs-lookup"><span data-stu-id="4466b-105">A collection to hold each failed validation.</span></span></param>
        <summary><span data-ttu-id="4466b-106">Determina si el objeto especificado es válido usando el contexto de validación y la colección de resultados de validación.</span><span class="sxs-lookup"><span data-stu-id="4466b-106">Determines whether the specified object is valid using the validation context and validation results collection.</span></span></summary>
        <returns><span data-ttu-id="4466b-107">Es <see langword="true" /> si el objeto es válido; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4466b-107"><see langword="true" /> if the object validates; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4466b-108">Este método evalúa cada <xref:System.ComponentModel.DataAnnotations.ValidationAttribute> instancia que está asociado al tipo de objeto.</span><span class="sxs-lookup"><span data-stu-id="4466b-108">This method evaluates each <xref:System.ComponentModel.DataAnnotations.ValidationAttribute> instance that is attached to the object type.</span></span> <span data-ttu-id="4466b-109">También comprueba si cada propiedad que está marcado con <xref:System.ComponentModel.DataAnnotations.RequiredAttribute> se proporciona.</span><span class="sxs-lookup"><span data-stu-id="4466b-109">It also checks whether each property that is marked with <xref:System.ComponentModel.DataAnnotations.RequiredAttribute> is provided.</span></span> <span data-ttu-id="4466b-110">No validar de forma recursiva los valores de propiedad del objeto.</span><span class="sxs-lookup"><span data-stu-id="4466b-110">It does not recursively validate the property values of the object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4466b-111"><paramref name="instance" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="4466b-111"><paramref name="instance" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryValidateObject">
      <MemberSignature Language="C#" Value="public static bool TryValidateObject (object instance, System.ComponentModel.DataAnnotations.ValidationContext validationContext, System.Collections.Generic.ICollection&lt;System.ComponentModel.DataAnnotations.ValidationResult&gt; validationResults, bool validateAllProperties);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryValidateObject(object instance, class System.ComponentModel.DataAnnotations.ValidationContext validationContext, class System.Collections.Generic.ICollection`1&lt;class System.ComponentModel.DataAnnotations.ValidationResult&gt; validationResults, bool validateAllProperties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DataAnnotations.Validator.TryValidateObject(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.ICollection{System.ComponentModel.DataAnnotations.ValidationResult},System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryValidateObject(System::Object ^ instance, System::ComponentModel::DataAnnotations::ValidationContext ^ validationContext, System::Collections::Generic::ICollection&lt;System::ComponentModel::DataAnnotations::ValidationResult ^&gt; ^ validationResults, bool validateAllProperties);" />
      <MemberSignature Language="F#" Value="static member TryValidateObject : obj * System.ComponentModel.DataAnnotations.ValidationContext * System.Collections.Generic.ICollection&lt;System.ComponentModel.DataAnnotations.ValidationResult&gt; * bool -&gt; bool" Usage="System.ComponentModel.DataAnnotations.Validator.TryValidateObject (instance, validationContext, validationResults, validateAllProperties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="validationContext" Type="System.ComponentModel.DataAnnotations.ValidationContext" />
        <Parameter Name="validationResults" Type="System.Collections.Generic.ICollection&lt;System.ComponentModel.DataAnnotations.ValidationResult&gt;" />
        <Parameter Name="validateAllProperties" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="4466b-112">Objeto que se va a validar.</span><span class="sxs-lookup"><span data-stu-id="4466b-112">The object to validate.</span></span></param>
        <param name="validationContext"><span data-ttu-id="4466b-113">Contexto que describe el objeto que se va a validar.</span><span class="sxs-lookup"><span data-stu-id="4466b-113">The context that describes the object to validate.</span></span></param>
        <param name="validationResults"><span data-ttu-id="4466b-114">Colección que va a contener todas las validaciones con error.</span><span class="sxs-lookup"><span data-stu-id="4466b-114">A collection to hold each failed validation.</span></span></param>
        <param name="validateAllProperties"><span data-ttu-id="4466b-115"><see langword="true" /> para validar todas las propiedades; si es <see langword="false" />, solo es necesario validar los atributos.</span><span class="sxs-lookup"><span data-stu-id="4466b-115"><see langword="true" /> to validate all properties; if <see langword="false" />, only required attributes are validated.</span></span></param>
        <summary><span data-ttu-id="4466b-116">Determina si el objeto especificado es válido usando el contexto de validación, la colección de resultados de validación y un valor que indica si se van a validar o no todas las propiedades.</span><span class="sxs-lookup"><span data-stu-id="4466b-116">Determines whether the specified object is valid using the validation context, validation results collection, and a value that specifies whether to validate all properties.</span></span></summary>
        <returns><span data-ttu-id="4466b-117">Es <see langword="true" /> si el objeto es válido; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4466b-117"><see langword="true" /> if the object validates; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4466b-118">Este método evalúa cada <xref:System.ComponentModel.DataAnnotations.ValidationAttribute> instancia que está asociado al tipo de objeto.</span><span class="sxs-lookup"><span data-stu-id="4466b-118">This method evaluates each <xref:System.ComponentModel.DataAnnotations.ValidationAttribute> instance that is attached to the object type.</span></span> <span data-ttu-id="4466b-119">También comprueba si cada propiedad que está marcado con <xref:System.ComponentModel.DataAnnotations.RequiredAttribute> se proporciona.</span><span class="sxs-lookup"><span data-stu-id="4466b-119">It also checks whether each property that is marked with <xref:System.ComponentModel.DataAnnotations.RequiredAttribute> is provided.</span></span> <span data-ttu-id="4466b-120">Valida los valores de propiedad del objeto si `validateAllProperties` es `true` , pero no de forma recursiva valida las propiedades de los objetos devueltos por las propiedades.</span><span class="sxs-lookup"><span data-stu-id="4466b-120">It validates the property values of the object if `validateAllProperties` is `true` but does not recursively validate properties of the objects returned by the properties.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4466b-121"><paramref name="instance" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="4466b-121"><paramref name="instance" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryValidateProperty">
      <MemberSignature Language="C#" Value="public static bool TryValidateProperty (object value, System.ComponentModel.DataAnnotations.ValidationContext validationContext, System.Collections.Generic.ICollection&lt;System.ComponentModel.DataAnnotations.ValidationResult&gt; validationResults);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryValidateProperty(object value, class System.ComponentModel.DataAnnotations.ValidationContext validationContext, class System.Collections.Generic.ICollection`1&lt;class System.ComponentModel.DataAnnotations.ValidationResult&gt; validationResults) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DataAnnotations.Validator.TryValidateProperty(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.ICollection{System.ComponentModel.DataAnnotations.ValidationResult})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryValidateProperty(System::Object ^ value, System::ComponentModel::DataAnnotations::ValidationContext ^ validationContext, System::Collections::Generic::ICollection&lt;System::ComponentModel::DataAnnotations::ValidationResult ^&gt; ^ validationResults);" />
      <MemberSignature Language="F#" Value="static member TryValidateProperty : obj * System.ComponentModel.DataAnnotations.ValidationContext * System.Collections.Generic.ICollection&lt;System.ComponentModel.DataAnnotations.ValidationResult&gt; -&gt; bool" Usage="System.ComponentModel.DataAnnotations.Validator.TryValidateProperty (value, validationContext, validationResults)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="validationContext" Type="System.ComponentModel.DataAnnotations.ValidationContext" />
        <Parameter Name="validationResults" Type="System.Collections.Generic.ICollection&lt;System.ComponentModel.DataAnnotations.ValidationResult&gt;" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4466b-122">Valor que se va a validar.</span><span class="sxs-lookup"><span data-stu-id="4466b-122">The value to validate.</span></span></param>
        <param name="validationContext"><span data-ttu-id="4466b-123">Contexto que describe la propiedad que se va a validar.</span><span class="sxs-lookup"><span data-stu-id="4466b-123">The context that describes the property to validate.</span></span></param>
        <param name="validationResults"><span data-ttu-id="4466b-124">Colección que va a contener todas las validaciones con error.</span><span class="sxs-lookup"><span data-stu-id="4466b-124">A collection to hold each failed validation.</span></span></param>
        <summary><span data-ttu-id="4466b-125">Valida la propiedad.</span><span class="sxs-lookup"><span data-stu-id="4466b-125">Validates the property.</span></span></summary>
        <returns><span data-ttu-id="4466b-126">Es <see langword="true" /> si la propiedad es válida; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4466b-126"><see langword="true" /> if the property validates; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4466b-127">Este método comprueba cada <xref:System.ComponentModel.DataAnnotations.ValidationException.ValidationAttribute%2A> instancia que está asociada con la propiedad que se identifica mediante el `validationContext` parámetro.</span><span class="sxs-lookup"><span data-stu-id="4466b-127">This method tests each <xref:System.ComponentModel.DataAnnotations.ValidationException.ValidationAttribute%2A> instance that is associated with the property that is identified by the `validationContext` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4466b-128"><paramref name="value" /> no se puede asignar a la propiedad.</span><span class="sxs-lookup"><span data-stu-id="4466b-128"><paramref name="value" /> cannot be assigned to the property.</span></span>  
  
<span data-ttu-id="4466b-129">O bien</span><span class="sxs-lookup"><span data-stu-id="4466b-129">-or-</span></span> 
 <span data-ttu-id="4466b-130"><paramref name="value" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="4466b-130"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryValidateValue">
      <MemberSignature Language="C#" Value="public static bool TryValidateValue (object value, System.ComponentModel.DataAnnotations.ValidationContext validationContext, System.Collections.Generic.ICollection&lt;System.ComponentModel.DataAnnotations.ValidationResult&gt; validationResults, System.Collections.Generic.IEnumerable&lt;System.ComponentModel.DataAnnotations.ValidationAttribute&gt; validationAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryValidateValue(object value, class System.ComponentModel.DataAnnotations.ValidationContext validationContext, class System.Collections.Generic.ICollection`1&lt;class System.ComponentModel.DataAnnotations.ValidationResult&gt; validationResults, class System.Collections.Generic.IEnumerable`1&lt;class System.ComponentModel.DataAnnotations.ValidationAttribute&gt; validationAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DataAnnotations.Validator.TryValidateValue(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.ICollection{System.ComponentModel.DataAnnotations.ValidationResult},System.Collections.Generic.IEnumerable{System.ComponentModel.DataAnnotations.ValidationAttribute})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryValidateValue(System::Object ^ value, System::ComponentModel::DataAnnotations::ValidationContext ^ validationContext, System::Collections::Generic::ICollection&lt;System::ComponentModel::DataAnnotations::ValidationResult ^&gt; ^ validationResults, System::Collections::Generic::IEnumerable&lt;System::ComponentModel::DataAnnotations::ValidationAttribute ^&gt; ^ validationAttributes);" />
      <MemberSignature Language="F#" Value="static member TryValidateValue : obj * System.ComponentModel.DataAnnotations.ValidationContext * System.Collections.Generic.ICollection&lt;System.ComponentModel.DataAnnotations.ValidationResult&gt; * seq&lt;System.ComponentModel.DataAnnotations.ValidationAttribute&gt; -&gt; bool" Usage="System.ComponentModel.DataAnnotations.Validator.TryValidateValue (value, validationContext, validationResults, validationAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="validationContext" Type="System.ComponentModel.DataAnnotations.ValidationContext" />
        <Parameter Name="validationResults" Type="System.Collections.Generic.ICollection&lt;System.ComponentModel.DataAnnotations.ValidationResult&gt;" />
        <Parameter Name="validationAttributes" Type="System.Collections.Generic.IEnumerable&lt;System.ComponentModel.DataAnnotations.ValidationAttribute&gt;" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4466b-131">Valor que se va a validar.</span><span class="sxs-lookup"><span data-stu-id="4466b-131">The value to validate.</span></span></param>
        <param name="validationContext"><span data-ttu-id="4466b-132">Contexto que describe el objeto que se va a validar.</span><span class="sxs-lookup"><span data-stu-id="4466b-132">The context that describes the object to validate.</span></span></param>
        <param name="validationResults"><span data-ttu-id="4466b-133">Colección que va a contener las validaciones con error.</span><span class="sxs-lookup"><span data-stu-id="4466b-133">A collection to hold failed validations.</span></span></param>
        <param name="validationAttributes"><span data-ttu-id="4466b-134">Atributos de validación.</span><span class="sxs-lookup"><span data-stu-id="4466b-134">The validation attributes.</span></span></param>
        <summary><span data-ttu-id="4466b-135">Devuelve un valor que indica si el valor especificado es válido con los atributos indicados.</span><span class="sxs-lookup"><span data-stu-id="4466b-135">Returns a value that indicates whether the specified value is valid with the specified attributes.</span></span></summary>
        <returns><span data-ttu-id="4466b-136">Es <see langword="true" /> si el objeto es válido; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4466b-136"><see langword="true" /> if the object validates; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4466b-137">Este método comprueba cada atributo de validación en el `validationAttributes` parámetro contra los `value` parámetro.</span><span class="sxs-lookup"><span data-stu-id="4466b-137">This method tests each validation attribute in the `validationAttributes` parameter against the `value` parameter.</span></span> <span data-ttu-id="4466b-138">Si el `validationResults` parámetro no es `null`, este método agrega un <xref:System.ComponentModel.DataAnnotations.ValidationResult> objeto para cada error de validación para la validación da como resultado de colección.</span><span class="sxs-lookup"><span data-stu-id="4466b-138">If the `validationResults` parameter is not `null`, this method adds a <xref:System.ComponentModel.DataAnnotations.ValidationResult> object for each validation failure to the validation results collection.</span></span> <span data-ttu-id="4466b-139">Si el `validationResults` parámetro es `null`, este método no agrega un <xref:System.ComponentModel.DataAnnotations.ValidationResult> objeto a la colección.</span><span class="sxs-lookup"><span data-stu-id="4466b-139">If the `validationResults` parameter is `null`, this method does not add a <xref:System.ComponentModel.DataAnnotations.ValidationResult> object to the collection.</span></span> <span data-ttu-id="4466b-140">Si un <xref:System.ComponentModel.DataAnnotations.RequiredAttribute> atributo está incluido en el `validationAttributes` parámetro, el <xref:System.ComponentModel.DataAnnotations.RequiredAttribute> atributo se evalúa primero.</span><span class="sxs-lookup"><span data-stu-id="4466b-140">If a <xref:System.ComponentModel.DataAnnotations.RequiredAttribute> attribute is included in the `validationAttributes` parameter, the <xref:System.ComponentModel.DataAnnotations.RequiredAttribute> attribute is evaluated first.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ValidateObject">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4466b-141">Determina si el objeto especificado es válido.</span><span class="sxs-lookup"><span data-stu-id="4466b-141">Determines whether the specified object is valid.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ValidateObject">
      <MemberSignature Language="C#" Value="public static void ValidateObject (object instance, System.ComponentModel.DataAnnotations.ValidationContext validationContext);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ValidateObject(object instance, class System.ComponentModel.DataAnnotations.ValidationContext validationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DataAnnotations.Validator.ValidateObject(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ValidateObject(System::Object ^ instance, System::ComponentModel::DataAnnotations::ValidationContext ^ validationContext);" />
      <MemberSignature Language="F#" Value="static member ValidateObject : obj * System.ComponentModel.DataAnnotations.ValidationContext -&gt; unit" Usage="System.ComponentModel.DataAnnotations.Validator.ValidateObject (instance, validationContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="validationContext" Type="System.ComponentModel.DataAnnotations.ValidationContext" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="4466b-142">Objeto que se va a validar.</span><span class="sxs-lookup"><span data-stu-id="4466b-142">The object to validate.</span></span></param>
        <param name="validationContext"><span data-ttu-id="4466b-143">Contexto que describe el objeto que se va a validar.</span><span class="sxs-lookup"><span data-stu-id="4466b-143">The context that describes the object to validate.</span></span></param>
        <summary><span data-ttu-id="4466b-144">Determina si el objeto especificado es válido usando el contexto de validación.</span><span class="sxs-lookup"><span data-stu-id="4466b-144">Determines whether the specified object is valid using the validation context.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4466b-145">Este método evalúa cada <xref:System.ComponentModel.DataAnnotations.ValidationAttribute> instancia que está asociado al tipo de objeto.</span><span class="sxs-lookup"><span data-stu-id="4466b-145">This method evaluates each <xref:System.ComponentModel.DataAnnotations.ValidationAttribute> instance that is attached to the object type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.DataAnnotations.ValidationException"><span data-ttu-id="4466b-146">El objeto no es válido.</span><span class="sxs-lookup"><span data-stu-id="4466b-146">The object is not valid.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4466b-147"><paramref name="instance" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="4466b-147"><paramref name="instance" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ValidateObject">
      <MemberSignature Language="C#" Value="public static void ValidateObject (object instance, System.ComponentModel.DataAnnotations.ValidationContext validationContext, bool validateAllProperties);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ValidateObject(object instance, class System.ComponentModel.DataAnnotations.ValidationContext validationContext, bool validateAllProperties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DataAnnotations.Validator.ValidateObject(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ValidateObject(System::Object ^ instance, System::ComponentModel::DataAnnotations::ValidationContext ^ validationContext, bool validateAllProperties);" />
      <MemberSignature Language="F#" Value="static member ValidateObject : obj * System.ComponentModel.DataAnnotations.ValidationContext * bool -&gt; unit" Usage="System.ComponentModel.DataAnnotations.Validator.ValidateObject (instance, validationContext, validateAllProperties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="validationContext" Type="System.ComponentModel.DataAnnotations.ValidationContext" />
        <Parameter Name="validateAllProperties" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="4466b-148">Objeto que se va a validar.</span><span class="sxs-lookup"><span data-stu-id="4466b-148">The object to validate.</span></span></param>
        <param name="validationContext"><span data-ttu-id="4466b-149">Contexto que describe el objeto que se va a validar.</span><span class="sxs-lookup"><span data-stu-id="4466b-149">The context that describes the object to validate.</span></span></param>
        <param name="validateAllProperties"><span data-ttu-id="4466b-150">Es <see langword="true" /> para validar todas las propiedades; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4466b-150"><see langword="true" /> to validate all properties; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="4466b-151">Determina si el objeto especificado es válido usando el contexto de validación y un valor que indica si se van a validar o no todas las propiedades.</span><span class="sxs-lookup"><span data-stu-id="4466b-151">Determines whether the specified object is valid using the validation context, and a value that specifies whether to validate all properties.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4466b-152">Este método evalúa cada <xref:System.ComponentModel.DataAnnotations.ValidationAttribute> instancia que está asociado al tipo de objeto.</span><span class="sxs-lookup"><span data-stu-id="4466b-152">This method evaluates each <xref:System.ComponentModel.DataAnnotations.ValidationAttribute> instance that is attached to the object type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.DataAnnotations.ValidationException"><span data-ttu-id="4466b-153"><paramref name="instance" /> no es válido.</span><span class="sxs-lookup"><span data-stu-id="4466b-153"><paramref name="instance" /> is not valid.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4466b-154"><paramref name="instance" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="4466b-154"><paramref name="instance" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ValidateProperty">
      <MemberSignature Language="C#" Value="public static void ValidateProperty (object value, System.ComponentModel.DataAnnotations.ValidationContext validationContext);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ValidateProperty(object value, class System.ComponentModel.DataAnnotations.ValidationContext validationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DataAnnotations.Validator.ValidateProperty(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ValidateProperty(System::Object ^ value, System::ComponentModel::DataAnnotations::ValidationContext ^ validationContext);" />
      <MemberSignature Language="F#" Value="static member ValidateProperty : obj * System.ComponentModel.DataAnnotations.ValidationContext -&gt; unit" Usage="System.ComponentModel.DataAnnotations.Validator.ValidateProperty (value, validationContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="validationContext" Type="System.ComponentModel.DataAnnotations.ValidationContext" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4466b-155">Valor que se va a validar.</span><span class="sxs-lookup"><span data-stu-id="4466b-155">The value to validate.</span></span></param>
        <param name="validationContext"><span data-ttu-id="4466b-156">Contexto que describe la propiedad que se va a validar.</span><span class="sxs-lookup"><span data-stu-id="4466b-156">The context that describes the property to validate.</span></span></param>
        <summary><span data-ttu-id="4466b-157">Valida la propiedad.</span><span class="sxs-lookup"><span data-stu-id="4466b-157">Validates the property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4466b-158">Este método comprueba cada <xref:System.ComponentModel.DataAnnotations.ValidationException.ValidationAttribute%2A> instancia que está asociado a la propiedad identificada por el `validationContext` parámetro.</span><span class="sxs-lookup"><span data-stu-id="4466b-158">This method tests each <xref:System.ComponentModel.DataAnnotations.ValidationException.ValidationAttribute%2A> instance that is associated with the property identified by the `validationContext` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4466b-159"><paramref name="value" /> no se puede asignar a la propiedad.</span><span class="sxs-lookup"><span data-stu-id="4466b-159"><paramref name="value" /> cannot be assigned to the property.</span></span></exception>
        <exception cref="T:System.ComponentModel.DataAnnotations.ValidationException"><span data-ttu-id="4466b-160">El parámetro <paramref name="value" /> no es válido.</span><span class="sxs-lookup"><span data-stu-id="4466b-160">The <paramref name="value" /> parameter is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ValidateValue">
      <MemberSignature Language="C#" Value="public static void ValidateValue (object value, System.ComponentModel.DataAnnotations.ValidationContext validationContext, System.Collections.Generic.IEnumerable&lt;System.ComponentModel.DataAnnotations.ValidationAttribute&gt; validationAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ValidateValue(object value, class System.ComponentModel.DataAnnotations.ValidationContext validationContext, class System.Collections.Generic.IEnumerable`1&lt;class System.ComponentModel.DataAnnotations.ValidationAttribute&gt; validationAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DataAnnotations.Validator.ValidateValue(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.IEnumerable{System.ComponentModel.DataAnnotations.ValidationAttribute})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ValidateValue(System::Object ^ value, System::ComponentModel::DataAnnotations::ValidationContext ^ validationContext, System::Collections::Generic::IEnumerable&lt;System::ComponentModel::DataAnnotations::ValidationAttribute ^&gt; ^ validationAttributes);" />
      <MemberSignature Language="F#" Value="static member ValidateValue : obj * System.ComponentModel.DataAnnotations.ValidationContext * seq&lt;System.ComponentModel.DataAnnotations.ValidationAttribute&gt; -&gt; unit" Usage="System.ComponentModel.DataAnnotations.Validator.ValidateValue (value, validationContext, validationAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="validationContext" Type="System.ComponentModel.DataAnnotations.ValidationContext" />
        <Parameter Name="validationAttributes" Type="System.Collections.Generic.IEnumerable&lt;System.ComponentModel.DataAnnotations.ValidationAttribute&gt;" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4466b-161">Valor que se va a validar.</span><span class="sxs-lookup"><span data-stu-id="4466b-161">The value to validate.</span></span></param>
        <param name="validationContext"><span data-ttu-id="4466b-162">Contexto que describe el objeto que se va a validar.</span><span class="sxs-lookup"><span data-stu-id="4466b-162">The context that describes the object to validate.</span></span></param>
        <param name="validationAttributes"><span data-ttu-id="4466b-163">Atributos de validación.</span><span class="sxs-lookup"><span data-stu-id="4466b-163">The validation attributes.</span></span></param>
        <summary><span data-ttu-id="4466b-164">Valida los atributos especificados.</span><span class="sxs-lookup"><span data-stu-id="4466b-164">Validates the specified attributes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4466b-165">Este método comprueba cada atributo de validación en el `validationAttributes` parámetro contra los `value` parámetro.</span><span class="sxs-lookup"><span data-stu-id="4466b-165">This method tests each validation attribute in the `validationAttributes` parameter against the `value` parameter.</span></span>  <span data-ttu-id="4466b-166">Si un <xref:System.ComponentModel.DataAnnotations.RequiredAttribute> atributo está incluido, el <xref:System.ComponentModel.DataAnnotations.RequiredAttribute> atributo se evalúa primero.</span><span class="sxs-lookup"><span data-stu-id="4466b-166">If a <xref:System.ComponentModel.DataAnnotations.RequiredAttribute> attribute is included, the <xref:System.ComponentModel.DataAnnotations.RequiredAttribute> attribute is evaluated first.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4466b-167">El parámetro <paramref name="validationContext" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="4466b-167">The <paramref name="validationContext" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ComponentModel.DataAnnotations.ValidationException"><span data-ttu-id="4466b-168">El parámetro <paramref name="value" /> no se valida con el parámetro <paramref name="validationAttributes" />.</span><span class="sxs-lookup"><span data-stu-id="4466b-168">The <paramref name="value" /> parameter does not validate with the <paramref name="validationAttributes" /> parameter.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
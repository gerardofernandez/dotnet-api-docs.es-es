<Type Name="PlayRecordCallback" FullName="System.Drawing.Imaging.PlayRecordCallback">
  <Metadata><Meta Name="ms.openlocfilehash" Value="836c5c9caaa42a83fb6b6e0bee9e5aba79089d4c" /><Meta Name="ms.sourcegitcommit" Value="d40b35262cbc997b79bf76da3a39ccf59b738efc" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="12/05/2018" /><Meta Name="ms.locfileid" Value="52908908" /></Metadata><TypeSignature Language="C#" Value="public delegate void PlayRecordCallback(EmfPlusRecordType recordType, int flags, int dataSize, IntPtr recordData);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed PlayRecordCallback extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Imaging.PlayRecordCallback" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub PlayRecordCallback(recordType As EmfPlusRecordType, flags As Integer, dataSize As Integer, recordData As IntPtr)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void PlayRecordCallback(EmfPlusRecordType recordType, int flags, int dataSize, IntPtr recordData);" />
  <TypeSignature Language="F#" Value="type PlayRecordCallback = delegate of EmfPlusRecordType * int * int * nativeint -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Drawing.Common</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.1</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="recordType" Type="System.Drawing.Imaging.EmfPlusRecordType" />
    <Parameter Name="flags" Type="System.Int32" />
    <Parameter Name="dataSize" Type="System.Int32" />
    <Parameter Name="recordData" Type="System.IntPtr" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="recordType"><span data-ttu-id="93af3-101">No usado.</span><span class="sxs-lookup"><span data-stu-id="93af3-101">Not used.</span></span></param>
    <param name="flags"><span data-ttu-id="93af3-102">No usado.</span><span class="sxs-lookup"><span data-stu-id="93af3-102">Not used.</span></span></param>
    <param name="dataSize"><span data-ttu-id="93af3-103">No usado.</span><span class="sxs-lookup"><span data-stu-id="93af3-103">Not used.</span></span></param>
    <param name="recordData"><span data-ttu-id="93af3-104">No usado.</span><span class="sxs-lookup"><span data-stu-id="93af3-104">Not used.</span></span></param>
    <summary><span data-ttu-id="93af3-105">Este delegado no se utiliza.</span><span class="sxs-lookup"><span data-stu-id="93af3-105">This delegate is not used.</span></span> <span data-ttu-id="93af3-106">Para obtener un ejemplo de enumeraci√≥n de los registros de un metarchivo, vea <see cref="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Graphics.EnumerateMetafileProc)" />.</span><span class="sxs-lookup"><span data-stu-id="93af3-106">For an example of enumerating the records of a metafile, see <see cref="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Graphics.EnumerateMetafileProc)" />.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
</Type>
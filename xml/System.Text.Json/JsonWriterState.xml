<Type Name="JsonWriterState" FullName="System.Text.Json.JsonWriterState">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f3db0052b2f54ecda781db367a6ce02c5aeea00e" /><Meta Name="ms.sourcegitcommit" Value="e28b7b371ead27d99e20387b8243f09b0cdb9fb3" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="04/12/2019" /><Meta Name="ms.locfileid" Value="59541754" /></Metadata><TypeSignature Language="C#" Value="public struct JsonWriterState" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit JsonWriterState extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Text.Json.JsonWriterState" />
  <TypeSignature Language="VB.NET" Value="Public Structure JsonWriterState" />
  <TypeSignature Language="C++ CLI" Value="public value class JsonWriterState" />
  <TypeSignature Language="F#" Value="type JsonWriterState = struct" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Json</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="6a3c6-101">Define un tipo opaco que contiene y guarda toda la información de estado relevante que se debe proporcionar a la estructura <see cref="T:System.Text.Json.Utf8JsonWriter" /> para continuar escribiendo después de completar una operación de escritura parcial.</span><span class="sxs-lookup"><span data-stu-id="6a3c6-101">Defines an opaque type that holds and saves all the relevant state information which must be provided to the <see cref="T:System.Text.Json.Utf8JsonWriter" /> struct to continue writing after completing a partial write.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  

## Remarks

<span data-ttu-id="6a3c6-102">Este tipo es necesario para admitir la reentrada al escribir datos incompletos y continuar escribiendo en fragmentos.</span><span class="sxs-lookup"><span data-stu-id="6a3c6-102">This type is required to support reentrancy when writing incomplete data and to continue writing in chunks.</span></span> <span data-ttu-id="6a3c6-103">A diferencia de la <xref:System.Text.Json.Utf8JsonWriter" />, que es un struct ref, este tipo puede sobrevivir a través de límites de async y await y, por lo tanto, este tipo es necesario para proporcionar compatibilidad con escritura de forma asincrónica más texto JSON antes de continuar con una nueva instancia de la <xref:System.Text.Json.Utf8JsonWriter>.</span><span class="sxs-lookup"><span data-stu-id="6a3c6-103">Unlike the <xref:System.Text.Json.Utf8JsonWriter" />, which is a ref struct, this type can survive across async/await boundaries, and hence this type is required to provide support for writing more JSON text asynchronously before continuing with a new instance of the <xref:System.Text.Json.Utf8JsonWriter>.</span></span>

 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JsonWriterState (System.Text.Json.JsonWriterOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Text.Json.JsonWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonWriterState.#ctor(System.Text.Json.JsonWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (Optional options As JsonWriterOptions = null)" />
      <MemberSignature Language="F#" Value="new System.Text.Json.JsonWriterState : System.Text.Json.JsonWriterOptions -&gt; System.Text.Json.JsonWriterState" Usage="new System.Text.Json.JsonWriterState options" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="options" Type="System.Text.Json.JsonWriterOptions" />
      </Parameters>
      <Docs>
        <param name="options"><span data-ttu-id="6a3c6-104">Comportamiento personalizado de la estructura <see cref="T:System.Text.Json.Utf8JsonWriter" />.</span><span class="sxs-lookup"><span data-stu-id="6a3c6-104">The customized behavior of the <see cref="T:System.Text.Json.Utf8JsonWriter" /> struct.</span></span>
<span data-ttu-id="6a3c6-105">De forma predeterminada, <see cref="T:System.Text.Json.Utf8JsonWriter" /> escribe JSON minimizado (es decir, sin espacios en blanco adicionales) y valida que los datos JSON que se van a escribir son estructuralmente válidos según la RFC de JSON.</span><span class="sxs-lookup"><span data-stu-id="6a3c6-105">By default, the <see cref="T:System.Text.Json.Utf8JsonWriter" /> writes JSON minimized (that is, with no extra white space) and validates that the JSON data being written is structurally valid according to JSON RFC.</span></span></param>
        <summary><span data-ttu-id="6a3c6-106">Inicializa una nueva instancia del struct <see cref="T:System.Text.Json.JsonWriterState" />.</span><span class="sxs-lookup"><span data-stu-id="6a3c6-106">Initializes a new instance of the <see cref="T:System.Text.Json.JsonWriterState" /> struct.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  

## Remarks
        
<span data-ttu-id="6a3c6-107">Una instancia de este estado se debe pasar a la <xref:System.Text.Json.Utf8JsonWriter> constructor con el destino de salida.</span><span class="sxs-lookup"><span data-stu-id="6a3c6-107">An instance of this state must be passed to the <xref:System.Text.Json.Utf8JsonWriter> constructor with the output destination.</span></span>
<span data-ttu-id="6a3c6-108">A diferencia de la <xref:System.Text.Json.Utf8JsonWriter>, que es un struct ref, el estado puede sobrevivir a través de límites de async y await y, por lo tanto, este tipo es necesario para proporcionar soporte técnico para leer más datos de forma asincrónica antes de continuar con una nueva instancia de la <xref:System.Text.Json.Utf8JsonWriter> struct.</span><span class="sxs-lookup"><span data-stu-id="6a3c6-108">Unlike the <xref:System.Text.Json.Utf8JsonWriter>, which is a ref struct, the state can survive across async/await boundaries, and hence this type is required to provide support for reading more data asynchronously before continuing with a new instance of the <xref:System.Text.Json.Utf8JsonWriter> struct.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BytesCommitted">
      <MemberSignature Language="C#" Value="public long BytesCommitted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 BytesCommitted" />
      <MemberSignature Language="DocId" Value="P:System.Text.Json.JsonWriterState.BytesCommitted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BytesCommitted As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long BytesCommitted { long get(); };" />
      <MemberSignature Language="F#" Value="member this.BytesCommitted : int64" Usage="System.Text.Json.JsonWriterState.BytesCommitted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6a3c6-109">Obtiene el número total de bytes confirmados en la salida mediante la estructura <see cref="T:System.Text.Json.Utf8JsonWriter" /> hasta el momento.</span><span class="sxs-lookup"><span data-stu-id="6a3c6-109">Gets the total number of bytes committed to the output by the <see cref="T:System.Text.Json.Utf8JsonWriter" /> struct so far.</span></span> <span data-ttu-id="6a3c6-110">Esto indica cuánto ha avanzado <see cref="T:System.Buffers.IBufferWriter`1" />.</span><span class="sxs-lookup"><span data-stu-id="6a3c6-110">This indicates how much the <see cref="T:System.Buffers.IBufferWriter`1" /> has advanced.</span></span></summary>
        <value><span data-ttu-id="6a3c6-111">El número total de bytes confirmados en la salida.</span><span class="sxs-lookup"><span data-stu-id="6a3c6-111">The total number of bytes committed to the output.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BytesWritten">
      <MemberSignature Language="C#" Value="public long BytesWritten { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 BytesWritten" />
      <MemberSignature Language="DocId" Value="P:System.Text.Json.JsonWriterState.BytesWritten" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BytesWritten As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long BytesWritten { long get(); };" />
      <MemberSignature Language="F#" Value="member this.BytesWritten : int64" Usage="System.Text.Json.JsonWriterState.BytesWritten" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6a3c6-112">Obtiene el número total de bytes escritos por la estructura <see cref="T:System.Text.Json.Utf8JsonWriter" /> hasta el momento.</span><span class="sxs-lookup"><span data-stu-id="6a3c6-112">Gets the total number of bytes written by the <see cref="T:System.Text.Json.Utf8JsonWriter" /> struct so far.</span></span> <span data-ttu-id="6a3c6-113">Esto incluye los datos que se hayan escrito más allá de lo que ya se ha confirmado.</span><span class="sxs-lookup"><span data-stu-id="6a3c6-113">This includes data that has been written beyond what has already been committed.</span></span></summary>
        <value><span data-ttu-id="6a3c6-114">El número total de bytes escritos.</span><span class="sxs-lookup"><span data-stu-id="6a3c6-114">The total number of bytes written.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Options">
      <MemberSignature Language="C#" Value="public System.Text.Json.JsonWriterOptions Options { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Text.Json.JsonWriterOptions Options" />
      <MemberSignature Language="DocId" Value="P:System.Text.Json.JsonWriterState.Options" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Options As JsonWriterOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Json::JsonWriterOptions Options { System::Text::Json::JsonWriterOptions get(); };" />
      <MemberSignature Language="F#" Value="member this.Options : System.Text.Json.JsonWriterOptions" Usage="System.Text.Json.JsonWriterState.Options" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Json.JsonWriterOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6a3c6-115">Obtiene el comportamiento personalizado que se usa al escribir datos JSON mediante la estructura <see cref="T:System.Text.Json.Utf8JsonWriter" />.</span><span class="sxs-lookup"><span data-stu-id="6a3c6-115">Gets the custom behavior to use when writing JSON data using the <see cref="T:System.Text.Json.Utf8JsonWriter" /> struct.</span></span></summary>
        <value><span data-ttu-id="6a3c6-116">El comportamiento personalizado que se usará al escribir datos JSON.</span><span class="sxs-lookup"><span data-stu-id="6a3c6-116">The custom behavior to use when writing JSON data.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>

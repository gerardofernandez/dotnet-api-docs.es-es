<Type Name="WindowInteropHelper" FullName="System.Windows.Interop.WindowInteropHelper">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f97bd8f96d46969e1c27893e4f1c9820a887233d" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55387082" /></Metadata><TypeSignature Language="C#" Value="public sealed class WindowInteropHelper" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit WindowInteropHelper extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Interop.WindowInteropHelper" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class WindowInteropHelper" />
  <TypeSignature Language="C++ CLI" Value="public ref class WindowInteropHelper sealed" />
  <TypeSignature Language="F#" Value="type WindowInteropHelper = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="67ee9-101">Facilita la interoperación entre el código de Windows Presentation Foundation (WPF) y de Win32.</span><span class="sxs-lookup"><span data-stu-id="67ee9-101">Assists interoperation between Windows Presentation Foundation (WPF) and Win32 code.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67ee9-102">Los miembros de esta clase permite que el llamador tenga acceso a la [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] HWND y el HWND primario de un [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <xref:System.Windows.Window>.</span><span class="sxs-lookup"><span data-stu-id="67ee9-102">Members of this class allows the caller to have internal access to the [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] HWND and the parent HWND of a [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <xref:System.Windows.Window>.</span></span>  <span data-ttu-id="67ee9-103">Las comprobaciones de seguridad adecuados se realizan mediante esos miembros.</span><span class="sxs-lookup"><span data-stu-id="67ee9-103">The proper security checks are performed by those members.</span></span>  
  
 <span data-ttu-id="67ee9-104">Utilice esta clase siempre que necesite un objeto más específico en función de su HWND.</span><span class="sxs-lookup"><span data-stu-id="67ee9-104">Use this class whenever you need a more specific object based on its HWND.</span></span>  
  
 <span data-ttu-id="67ee9-105">Un escenario de ejemplo es si necesita para hospedar un [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] cuadro de diálogo en un [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] aplicación.</span><span class="sxs-lookup"><span data-stu-id="67ee9-105">An example scenario is if you need to host a [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] dialog box in a [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] application.</span></span> <span data-ttu-id="67ee9-106">Inicializar el <xref:System.Windows.Interop.WindowInteropHelper> con un [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] objeto de ventana del cuadro de diálogo.</span><span class="sxs-lookup"><span data-stu-id="67ee9-106">Initialize the <xref:System.Windows.Interop.WindowInteropHelper> with a [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] window object for the dialog box.</span></span> <span data-ttu-id="67ee9-107">A continuación, puede obtener el [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] del identificador de ventana (HWND) de la <xref:System.Windows.Interop.WindowInteropHelper.Handle%2A> propiedad y especifique el propietario de la [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] ventana con el <xref:System.Windows.Interop.WindowInteropHelper.Owner%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="67ee9-107">You can then get the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] window's handle (HWND) from the <xref:System.Windows.Interop.WindowInteropHelper.Handle%2A> property and specify the owner for the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] window with the <xref:System.Windows.Interop.WindowInteropHelper.Owner%2A> property.</span></span> <span data-ttu-id="67ee9-108">El ejemplo de código siguiente muestra cómo usar <xref:System.Windows.Interop.WindowInteropHelper> al hospedar un [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] cuadro de diálogo en un [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] aplicación.</span><span class="sxs-lookup"><span data-stu-id="67ee9-108">The following code example shows how to use <xref:System.Windows.Interop.WindowInteropHelper> when hosting a [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] dialog box in a [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] application.</span></span>  
  
 [!code-csharp[CorePseudocode#WindowInteropHelper](~/samples/snippets/csharp/VS_Snippets_Wpf/CorePseudocode/CSharp/corepseudocode.cs#windowinterophelper)]
 [!code-vb[CorePseudocode#WindowInteropHelper](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CorePseudocode/visualbasic/corepseudocode.vb#windowinterophelper)]  
  
 <span data-ttu-id="67ee9-109">Otro escenario admitido por esta clase es obtener un <xref:System.Windows.Interop.HwndSource> objeto desde un [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <xref:System.Windows.Window> objeto.</span><span class="sxs-lookup"><span data-stu-id="67ee9-109">Another scenario supported by this class is to obtain a <xref:System.Windows.Interop.HwndSource> object from a [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <xref:System.Windows.Window> object.</span></span> <span data-ttu-id="67ee9-110">El <xref:System.Windows.Interop.HwndSource> permite dirigir el procesamiento de [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] mensajes a través del <xref:System.Windows.Interop.HwndSource.AddHook%2A> método.</span><span class="sxs-lookup"><span data-stu-id="67ee9-110">The <xref:System.Windows.Interop.HwndSource> enables direct processing of [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] messages through the <xref:System.Windows.Interop.HwndSource.AddHook%2A> method.</span></span> <span data-ttu-id="67ee9-111">Mediante el uso de <xref:System.Windows.Interop.HwndSource> y <xref:System.Windows.Interop.HwndSource.AddHook%2A> en lugar de un <xref:System.Windows.Window> todavía puede controlar los mensajes que tienen no equivalente o control en [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)].</span><span class="sxs-lookup"><span data-stu-id="67ee9-111">By using <xref:System.Windows.Interop.HwndSource> and <xref:System.Windows.Interop.HwndSource.AddHook%2A> in place of a <xref:System.Windows.Window> you can still handle messages that have no equivalent or handling in [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)].</span></span> <span data-ttu-id="67ee9-112">Crear un <xref:System.Windows.Interop.WindowInteropHelper> con el <xref:System.Windows.Window> de origen, a continuación, llame a <xref:System.Windows.Interop.WindowInteropHelper.Handle%2A> en el <xref:System.Windows.Interop.WindowInteropHelper> obtener de HWND para <xref:System.Windows.Interop.HwndSource>.</span><span class="sxs-lookup"><span data-stu-id="67ee9-112">Create a <xref:System.Windows.Interop.WindowInteropHelper> with the <xref:System.Windows.Window> source, then call <xref:System.Windows.Interop.WindowInteropHelper.Handle%2A> on the <xref:System.Windows.Interop.WindowInteropHelper> to get from HWND to <xref:System.Windows.Interop.HwndSource>.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Window" />
    <altmember cref="T:System.Windows.Interop.HwndSource" />
    <altmember cref="M:System.Windows.Interop.HwndSource.AddHook(System.Windows.Interop.HwndSourceHook)" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WindowInteropHelper (System.Windows.Window window);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Window window) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.WindowInteropHelper.#ctor(System.Windows.Window)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WindowInteropHelper(System::Windows::Window ^ window);" />
      <MemberSignature Language="F#" Value="new System.Windows.Interop.WindowInteropHelper : System.Windows.Window -&gt; System.Windows.Interop.WindowInteropHelper" Usage="new System.Windows.Interop.WindowInteropHelper window" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="window" Type="System.Windows.Window" />
      </Parameters>
      <Docs>
        <param name="window"><span data-ttu-id="67ee9-113">Objeto de ventana de [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)].</span><span class="sxs-lookup"><span data-stu-id="67ee9-113">A [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] window object.</span></span></param>
        <summary><span data-ttu-id="67ee9-114">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Interop.WindowInteropHelper" /> para una ventana específica de [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)].</span><span class="sxs-lookup"><span data-stu-id="67ee9-114">Initializes a new instance of the <see cref="T:System.Windows.Interop.WindowInteropHelper" /> class for a specified [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] window.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67ee9-115">La ventana puede ser un cuadro de diálogo o una ventana que de lo contrario no es adecuada para que se hospeda dentro de los límites de un [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] aplicación.</span><span class="sxs-lookup"><span data-stu-id="67ee9-115">The window can be a dialog box, or a window that is otherwise not suitable for being hosted within the bounds of a [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] application.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnsureHandle">
      <MemberSignature Language="C#" Value="public IntPtr EnsureHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance native int EnsureHandle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.WindowInteropHelper.EnsureHandle" />
      <MemberSignature Language="VB.NET" Value="Public Function EnsureHandle () As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IntPtr EnsureHandle();" />
      <MemberSignature Language="F#" Value="member this.EnsureHandle : unit -&gt; nativeint" Usage="windowInteropHelper.EnsureHandle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="67ee9-116">Crea el identificador HWND de la ventana si aún no se ha creado.</span><span class="sxs-lookup"><span data-stu-id="67ee9-116">Creates the HWND of the window if the HWND has not been created yet.</span></span></summary>
        <returns><span data-ttu-id="67ee9-117"><see cref="T:System.IntPtr" /> que representa el identificador HWND.</span><span class="sxs-lookup"><span data-stu-id="67ee9-117">An <see cref="T:System.IntPtr" /> that represents the HWND.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67ee9-118">Use la <xref:System.Windows.Interop.WindowInteropHelper.EnsureHandle%2A> método cuando desee separar la creación del controlador (HWND) de ventana desde el que se muestra real de los recursos administrados <xref:System.Windows.Window>.</span><span class="sxs-lookup"><span data-stu-id="67ee9-118">Use the <xref:System.Windows.Interop.WindowInteropHelper.EnsureHandle%2A> method when you want to separate window handle (HWND) creation from the actual showing of the managed <xref:System.Windows.Window>.</span></span> <span data-ttu-id="67ee9-119">Esto es útil cuando tiene un cliente de automatización que puede llevar a cabo sus tareas sin la necesidad de mostrar una ventana.</span><span class="sxs-lookup"><span data-stu-id="67ee9-119">This is useful when you have an automation client that can accomplish its tasks without the need for showing a window.</span></span>  
  
 <span data-ttu-id="67ee9-120">Si aún no se ha creado la ventana nativa, este método crea la ventana nativa, Establece el <xref:System.Windows.Interop.WindowInteropHelper.Handle%2A> propiedad y devuelve el HWND.</span><span class="sxs-lookup"><span data-stu-id="67ee9-120">If the native window has not yet been created, this method creates the native window, sets the <xref:System.Windows.Interop.WindowInteropHelper.Handle%2A> property, and returns the HWND.</span></span> <span data-ttu-id="67ee9-121">Si ya se ha creado la ventana nativa, se devuelve el identificador de la ventana nativa existente.</span><span class="sxs-lookup"><span data-stu-id="67ee9-121">If the native window has been created already, the handle of the existing native window is returned.</span></span>  
  
 <span data-ttu-id="67ee9-122">Si la ventana nativa se crea como resultado de llamar a este método, el <xref:System.Windows.Window.SourceInitialized> provoca el evento.</span><span class="sxs-lookup"><span data-stu-id="67ee9-122">If the native window is created as a result of calling this method, the <xref:System.Windows.Window.SourceInitialized> event is raised.</span></span>  
  
 <span data-ttu-id="67ee9-123">Consultar el <xref:System.Windows.Interop.WindowInteropHelper.Handle%2A> propiedad después de la <xref:System.Windows.Interop.WindowInteropHelper.EnsureHandle%2A> se llama al método devuelve el identificador de ventana existente.</span><span class="sxs-lookup"><span data-stu-id="67ee9-123">Querying the <xref:System.Windows.Interop.WindowInteropHelper.Handle%2A> property after the <xref:System.Windows.Interop.WindowInteropHelper.EnsureHandle%2A> method is called returns the existing window handle.</span></span> <span data-ttu-id="67ee9-124">El árbol visual no está asociado a la ventana hasta después de la <xref:System.Windows.Window.Show%2A> se llama al método.</span><span class="sxs-lookup"><span data-stu-id="67ee9-124">The visual tree is not attached to the window until after the <xref:System.Windows.Window.Show%2A> method is called.</span></span>  
  
 <span data-ttu-id="67ee9-125">Una llamada a la <xref:System.Windows.Interop.WindowInteropHelper.EnsureHandle%2A> método más de una vez no crea nuevos identificadores de ventana.</span><span class="sxs-lookup"><span data-stu-id="67ee9-125">Calling the <xref:System.Windows.Interop.WindowInteropHelper.EnsureHandle%2A> method more than one time does not create new window handles.</span></span> <span data-ttu-id="67ee9-126">Una llamada a la <xref:System.Windows.Interop.WindowInteropHelper.EnsureHandle%2A> método cuando el identificador ya se ha creado mediante una llamada a la <xref:System.Windows.Window.Show%2A> método no crea un nuevo identificador de ventana.</span><span class="sxs-lookup"><span data-stu-id="67ee9-126">Calling the <xref:System.Windows.Interop.WindowInteropHelper.EnsureHandle%2A> method when the handle has already been created by a call to the <xref:System.Windows.Window.Show%2A> method does not create a new window handle.</span></span> <span data-ttu-id="67ee9-127">Solo se crea una ventana nativa cuando no existe ningún controlador cuando el <xref:System.Windows.Interop.WindowInteropHelper.EnsureHandle%2A> se llama al método.</span><span class="sxs-lookup"><span data-stu-id="67ee9-127">A native window is only created when no handle exists when the <xref:System.Windows.Interop.WindowInteropHelper.EnsureHandle%2A> method is called.</span></span>  
  
 <span data-ttu-id="67ee9-128">Propiedades de la ventana que se establecen mediante las API de ventana nativa a través de p/invoke no es posible que aparecen en la ventana administrada API.</span><span class="sxs-lookup"><span data-stu-id="67ee9-128">Window properties that are set by using native window APIs via p/invoke may not appear in the managed window APIs.</span></span> <span data-ttu-id="67ee9-129">Por ejemplo, si establece la ventana para que sea más alto mediante el uso de la marca MS_EX_TOPMOST nativo después de la <xref:System.Windows.Interop.WindowInteropHelper.EnsureHandle%2A> se invoca el <xref:System.Windows.Window.Topmost%2A> propiedad no se garantiza para reflejar la configuración nativa.</span><span class="sxs-lookup"><span data-stu-id="67ee9-129">For example, if you set the window to be topmost by using the native MS_EX_TOPMOST flag after the <xref:System.Windows.Interop.WindowInteropHelper.EnsureHandle%2A> method is called, the <xref:System.Windows.Window.Topmost%2A> property is not guaranteed to reflect the native setting.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="67ee9-130">Para crear y tener acceso a un identificador de ventana.</span><span class="sxs-lookup"><span data-stu-id="67ee9-130">to create and access a window handle.</span></span> <span data-ttu-id="67ee9-131">Enumeración asociada: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span><span class="sxs-lookup"><span data-stu-id="67ee9-131">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Handle">
      <MemberSignature Language="C#" Value="public IntPtr Handle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Handle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.WindowInteropHelper.Handle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Handle As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IntPtr Handle { IntPtr get(); };" />
      <MemberSignature Language="F#" Value="member this.Handle : nativeint" Usage="System.Windows.Interop.WindowInteropHelper.Handle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="67ee9-132">Obtiene el identificador de ventana de una ventana de [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] que se usa para crear <see cref="T:System.Windows.Interop.WindowInteropHelper" />.</span><span class="sxs-lookup"><span data-stu-id="67ee9-132">Gets the window handle for a [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] window that is used to create this <see cref="T:System.Windows.Interop.WindowInteropHelper" />.</span></span></summary>
        <value><span data-ttu-id="67ee9-133">El identificador de ventana de [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)].</span><span class="sxs-lookup"><span data-stu-id="67ee9-133">The [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] window handle (HWND).</span></span></value>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="67ee9-134">Para obtener un identificador de ventana.</span><span class="sxs-lookup"><span data-stu-id="67ee9-134">to obtain a window handle.</span></span> <span data-ttu-id="67ee9-135">Enumeración asociada: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span><span class="sxs-lookup"><span data-stu-id="67ee9-135">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span></span></permission>
        <altmember cref="T:System.Windows.Window" />
      </Docs>
    </Member>
    <Member MemberName="Owner">
      <MemberSignature Language="C#" Value="public IntPtr Owner { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Owner" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.WindowInteropHelper.Owner" />
      <MemberSignature Language="VB.NET" Value="Public Property Owner As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IntPtr Owner { IntPtr get(); void set(IntPtr value); };" />
      <MemberSignature Language="F#" Value="member this.Owner : nativeint with get, set" Usage="System.Windows.Interop.WindowInteropHelper.Owner" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="67ee9-136">Obtiene o establece el identificador de la ventana propietaria de [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)].</span><span class="sxs-lookup"><span data-stu-id="67ee9-136">Gets or sets the handle of the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] owner window.</span></span></summary>
        <value><span data-ttu-id="67ee9-137">El identificador de la ventana propietaria.</span><span class="sxs-lookup"><span data-stu-id="67ee9-137">The owner window handle (HWND).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67ee9-138">Puede cambiar el primario de windows mediante el establecimiento de esta propiedad.</span><span class="sxs-lookup"><span data-stu-id="67ee9-138">You can reparent windows by setting this property.</span></span> <span data-ttu-id="67ee9-139">Como es true para general [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] de programación, no cambiar el valor primario windows que ya están en uso.</span><span class="sxs-lookup"><span data-stu-id="67ee9-139">As is true for general [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] programming, do not reparent windows that are already in use.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="67ee9-140">Para obtener o establecer este valor de propiedad.</span><span class="sxs-lookup"><span data-stu-id="67ee9-140">to get or set this property value.</span></span> <span data-ttu-id="67ee9-141">Enumeración asociada: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span><span class="sxs-lookup"><span data-stu-id="67ee9-141">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span></span></permission>
        <altmember cref="T:System.Windows.Window" />
      </Docs>
    </Member>
  </Members>
</Type>
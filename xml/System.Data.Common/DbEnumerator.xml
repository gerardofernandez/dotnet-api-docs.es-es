<Type Name="DbEnumerator" FullName="System.Data.Common.DbEnumerator">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a1d6eb9fddf28f53f3b48a1fe421085a0998f7a3" /><Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="11/20/2018" /><Meta Name="ms.locfileid" Value="52247845" /></Metadata><TypeSignature Language="C#" Value="public class DbEnumerator : System.Collections.IEnumerator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DbEnumerator extends System.Object implements class System.Collections.IEnumerator" />
  <TypeSignature Language="DocId" Value="T:System.Data.Common.DbEnumerator" />
  <TypeSignature Language="VB.NET" Value="Public Class DbEnumerator&#xA;Implements IEnumerator" />
  <TypeSignature Language="C++ CLI" Value="public ref class DbEnumerator : System::Collections::IEnumerator" />
  <TypeSignature Language="F#" Value="type DbEnumerator = class&#xA;    interface IEnumerator" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerator</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="00671-101">Expone el método <see cref="M:System.Collections.IEnumerable.GetEnumerator" />, que admite una iteración simple sobre una colección mediante un proveedor de datos de .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="00671-101">Exposes the <see cref="M:System.Collections.IEnumerable.GetEnumerator" /> method, which supports a simple iteration over a collection by a .NET Framework data provider.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00671-102">La <xref:System.Data.Common.DbEnumerator> clase está implementada por un proveedor de datos de .NET Framework para proporcionar compatibilidad con enlaces de datos.</span><span class="sxs-lookup"><span data-stu-id="00671-102">The <xref:System.Data.Common.DbEnumerator> class is implemented by a .NET Framework data provider to provide data binding support.</span></span>  
  
 <span data-ttu-id="00671-103">Por diseño, la <xref:System.Data.Common.DbEnumerator> objeto está pensado para su uso con un solo conjunto de resultados.</span><span class="sxs-lookup"><span data-stu-id="00671-103">By design, the <xref:System.Data.Common.DbEnumerator> object is intended for use with only one resultset.</span></span> <span data-ttu-id="00671-104">Por ejemplo, si ejecuta una instrucción por lotes que contiene dos instrucciones SELECT de SQL que devuelven diferentes esquemas, la segunda instrucción podría no devolver todo el esquema.</span><span class="sxs-lookup"><span data-stu-id="00671-104">For example, if you execute a batch statement containing two SQL SELECT statements that return different schemas, the second statement might not retun the entire schema.</span></span> <span data-ttu-id="00671-105">Para evitar esta situación, obtener un <xref:System.Data.Common.DbEnumerator> para cada conjunto de resultados y, a continuación, llame el `NextResult` método de un objeto de DataReader del proveedor de datos de .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="00671-105">To avoid this situation, obtain a <xref:System.Data.Common.DbEnumerator> for each resultset, and then call the `NextResult` method of a .NET Framework data provider DataReader object.</span></span>  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="00671-106">Información general sobre ADO.NET</span><span class="sxs-lookup"><span data-stu-id="00671-106">ADO.NET Overview</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="00671-107">Inicializa una nueva instancia de la clase <see cref="T:System.Data.Common.DbEnumerator" />.</span><span class="sxs-lookup"><span data-stu-id="00671-107">Initializes a new instance of the <see cref="T:System.Data.Common.DbEnumerator" /> class.</span></span></summary>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="00671-108">Información general sobre ADO.NET</span><span class="sxs-lookup"><span data-stu-id="00671-108">ADO.NET Overview</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DbEnumerator (System.Data.Common.DbDataReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.Common.DbDataReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbEnumerator.#ctor(System.Data.Common.DbDataReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (reader As DbDataReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DbEnumerator(System::Data::Common::DbDataReader ^ reader);" />
      <MemberSignature Language="F#" Value="new System.Data.Common.DbEnumerator : System.Data.Common.DbDataReader -&gt; System.Data.Common.DbEnumerator" Usage="new System.Data.Common.DbEnumerator reader" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.Common.DbDataReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="00671-109">El DataReader a través del cual se va a iterar.</span><span class="sxs-lookup"><span data-stu-id="00671-109">The DataReader through which to iterate.</span></span></param>
        <summary><span data-ttu-id="00671-110">Inicializa una nueva instancia de la clase <see cref="T:System.Data.Common.DbEnumerator" /> con los el lector de datos especificado.</span><span class="sxs-lookup"><span data-stu-id="00671-110">Initializes a new instance of the <see cref="T:System.Data.Common.DbEnumerator" /> class with the give n data reader.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DbEnumerator (System.Data.IDataReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.IDataReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbEnumerator.#ctor(System.Data.IDataReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (reader As IDataReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DbEnumerator(System::Data::IDataReader ^ reader);" />
      <MemberSignature Language="F#" Value="new System.Data.Common.DbEnumerator : System.Data.IDataReader -&gt; System.Data.Common.DbEnumerator" Usage="new System.Data.Common.DbEnumerator reader" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.IDataReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="00671-111">El <see langword="DataReader" /> a través del cual se va a iterar.</span><span class="sxs-lookup"><span data-stu-id="00671-111">The <see langword="DataReader" /> through which to iterate.</span></span></param>
        <summary><span data-ttu-id="00671-112">Inicializa una nueva instancia de la clase <see cref="T:System.Data.Common.DbEnumerator" /> utilizando la clase <see langword="DataReader" /> especificada.</span><span class="sxs-lookup"><span data-stu-id="00671-112">Initializes a new instance of the <see cref="T:System.Data.Common.DbEnumerator" /> class using the specified <see langword="DataReader" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="00671-113">Información general sobre ADO.NET</span><span class="sxs-lookup"><span data-stu-id="00671-113">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DbEnumerator (System.Data.Common.DbDataReader reader, bool closeReader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.Common.DbDataReader reader, bool closeReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbEnumerator.#ctor(System.Data.Common.DbDataReader,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (reader As DbDataReader, closeReader As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DbEnumerator(System::Data::Common::DbDataReader ^ reader, bool closeReader);" />
      <MemberSignature Language="F#" Value="new System.Data.Common.DbEnumerator : System.Data.Common.DbDataReader * bool -&gt; System.Data.Common.DbEnumerator" Usage="new System.Data.Common.DbEnumerator (reader, closeReader)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.Common.DbDataReader" />
        <Parameter Name="closeReader" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="00671-114">El DataReader a través del cual se va a iterar.</span><span class="sxs-lookup"><span data-stu-id="00671-114">The DataReader through which to iterate.</span></span></param>
        <param name="closeReader"><span data-ttu-id="00671-115"><see langword="true" /> para cerrar DataReader automáticamente después de recorrer en iteración sus datos; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="00671-115"><see langword="true" /> to automatically close the DataReader after iterating through its data; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="00671-116">Inicializa una nueva instancia de la clase <see cref="T:System.Data.Common.DbEnumerator" /> con el lector especificado e indica si se va a cerrar automáticamente el lector después de recorrer en iteración sus datos.</span><span class="sxs-lookup"><span data-stu-id="00671-116">Initializes a new instance of the <see cref="T:System.Data.Common.DbEnumerator" /> class using the specified reader and indicates whether to automatically close the reader after iterating through its data.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DbEnumerator (System.Data.IDataReader reader, bool closeReader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.IDataReader reader, bool closeReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbEnumerator.#ctor(System.Data.IDataReader,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (reader As IDataReader, closeReader As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DbEnumerator(System::Data::IDataReader ^ reader, bool closeReader);" />
      <MemberSignature Language="F#" Value="new System.Data.Common.DbEnumerator : System.Data.IDataReader * bool -&gt; System.Data.Common.DbEnumerator" Usage="new System.Data.Common.DbEnumerator (reader, closeReader)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.IDataReader" />
        <Parameter Name="closeReader" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="00671-117">El <see langword="DataReader" /> a través del cual se va a iterar.</span><span class="sxs-lookup"><span data-stu-id="00671-117">The <see langword="DataReader" /> through which to iterate.</span></span></param>
        <param name="closeReader"><span data-ttu-id="00671-118"><see langword="true" /> para cerrar el <see langword="DataReader" /> automáticamente después de recorrer en iteración sus datos; si no, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="00671-118"><see langword="true" /> to automatically close the <see langword="DataReader" /> after iterating through its data; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="00671-119">Inicializa una nueva instancia de la clase <see cref="T:System.Data.Common.DbEnumerator" /> usando el <see langword="DataReader" /> especificado e indica si se debe cerrar automáticamente el <see langword="DataReader" /> después de recorrer en iteración sus datos.</span><span class="sxs-lookup"><span data-stu-id="00671-119">Initializes a new instance of the <see cref="T:System.Data.Common.DbEnumerator" /> class using the specified <see langword="DataReader" />, and indicates whether to automatically close the <see langword="DataReader" /> after iterating through its data.</span></span></summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="00671-120">Información general sobre ADO.NET</span><span class="sxs-lookup"><span data-stu-id="00671-120">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public object Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Current" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbEnumerator.Current" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Current As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Current { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Current : obj" Usage="System.Data.Common.DbEnumerator.Current" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IEnumerator.Current</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="00671-121">Obtiene el elemento actual de la colección.</span><span class="sxs-lookup"><span data-stu-id="00671-121">Gets the current element in the collection.</span></span></summary>
        <value><span data-ttu-id="00671-122">Elemento actual de la colección.</span><span class="sxs-lookup"><span data-stu-id="00671-122">The current element in the collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00671-123">Después de crea un enumerador o después de un <xref:System.Data.Common.DbEnumerator.Reset%2A>, <xref:System.Data.Common.DbEnumerator.MoveNext%2A> debe llamarse para hacer avanzar el enumerador hasta el primer elemento de la colección antes de leer el valor de <xref:System.Data.Common.DbEnumerator.Current%2A>; en caso contrario, <xref:System.Data.Common.DbEnumerator.Current%2A> es indefinido.</span><span class="sxs-lookup"><span data-stu-id="00671-123">After an enumerator is created or after a <xref:System.Data.Common.DbEnumerator.Reset%2A>, <xref:System.Data.Common.DbEnumerator.MoveNext%2A> must be called to advance the enumerator to the first element of the collection before reading the value of <xref:System.Data.Common.DbEnumerator.Current%2A>; otherwise, <xref:System.Data.Common.DbEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="00671-124"><xref:System.Data.Common.DbEnumerator.Current%2A> también produce una excepción si la última llamada a <xref:System.Data.Common.DbEnumerator.MoveNext%2A> devuelve false, lo que indica el final de la colección.</span><span class="sxs-lookup"><span data-stu-id="00671-124"><xref:System.Data.Common.DbEnumerator.Current%2A> also throws an exception if the last call to <xref:System.Data.Common.DbEnumerator.MoveNext%2A> returned false, which indicates the end of the collection.</span></span> <span data-ttu-id="00671-125"><xref:System.Data.Common.DbEnumerator.Current%2A> no se mueve la posición del enumerador y las llamadas consecutivas a <xref:System.Data.Common.DbEnumerator.Current%2A> devuelven el mismo objeto hasta que <xref:System.Data.Common.DbEnumerator.MoveNext%2A> o <xref:System.Data.Common.DbEnumerator.Reset%2A> se llama.</span><span class="sxs-lookup"><span data-stu-id="00671-125"><xref:System.Data.Common.DbEnumerator.Current%2A> does not move the position of the enumerator and consecutive calls to <xref:System.Data.Common.DbEnumerator.Current%2A> return the same object until either <xref:System.Data.Common.DbEnumerator.MoveNext%2A> or <xref:System.Data.Common.DbEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="00671-126">Un enumerador es válido mientras la colección no cambie.</span><span class="sxs-lookup"><span data-stu-id="00671-126">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="00671-127">Si se realizan cambios en la colección, como agregar, modificar o eliminar elementos, el enumerador queda invalidado y la siguiente llamada a <xref:System.Data.Common.DbEnumerator.MoveNext%2A> o <xref:System.Data.Common.DbEnumerator.Reset%2A> genera un <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="00671-127">If changes are made to the collection, such as adding, modifying or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Data.Common.DbEnumerator.MoveNext%2A> or <xref:System.Data.Common.DbEnumerator.Reset%2A> generates an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="00671-128">Si la colección se modifica entre <xref:System.Data.Common.DbEnumerator.MoveNext%2A> y <xref:System.Data.Common.DbEnumerator.Current%2A>, <xref:System.Data.Common.DbEnumerator.Current%2A> devuelve el elemento al que se establece, incluso si el enumerador ya se ha invalidado.</span><span class="sxs-lookup"><span data-stu-id="00671-128">If the collection is modified between <xref:System.Data.Common.DbEnumerator.MoveNext%2A> and <xref:System.Data.Common.DbEnumerator.Current%2A>, <xref:System.Data.Common.DbEnumerator.Current%2A> returns the element to which it is set, even if the enumerator is already invalidated.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="00671-129">El enumerador se coloca delante del primer elemento o detrás del último elemento de la colección.</span><span class="sxs-lookup"><span data-stu-id="00671-129">The enumerator is positioned before the first element of the collection or after the last element.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="00671-130">Información general sobre ADO.NET</span><span class="sxs-lookup"><span data-stu-id="00671-130">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public bool MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbEnumerator.MoveNext" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveNext () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MoveNext();" />
      <MemberSignature Language="F#" Value="abstract member MoveNext : unit -&gt; bool&#xA;override this.MoveNext : unit -&gt; bool" Usage="dbEnumerator.MoveNext " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerator.MoveNext</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="00671-131">Desplaza el enumerador al siguiente elemento de la colección.</span><span class="sxs-lookup"><span data-stu-id="00671-131">Advances the enumerator to the next element of the collection.</span></span></summary>
        <returns><span data-ttu-id="00671-132">Es <see langword="true" /> si el enumerador avanzó con éxito hasta el siguiente elemento; es <see langword="false" /> si el enumerador alcanzó el final de la colección.</span><span class="sxs-lookup"><span data-stu-id="00671-132"><see langword="true" /> if the enumerator was successfully advanced to the next element; <see langword="false" /> if the enumerator has passed the end of the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00671-133">Después de crea un enumerador o después de llamar a <xref:System.Data.Common.DbEnumerator.Reset%2A>, un enumerador se coloca antes del primer elemento de la colección y la primera llamada a <xref:System.Data.Common.DbEnumerator.MoveNext%2A> desplaza el enumerador hasta el primer elemento de la colección.</span><span class="sxs-lookup"><span data-stu-id="00671-133">After an enumerator is created or after a call to <xref:System.Data.Common.DbEnumerator.Reset%2A>, an enumerator is positioned before the first element of the collection, and the first call to <xref:System.Data.Common.DbEnumerator.MoveNext%2A> moves the enumerator over the first element of the collection.</span></span> <span data-ttu-id="00671-134">Tras el final de la colección, las siguientes llamadas a <xref:System.Data.Common.DbEnumerator.MoveNext%2A> devuelven false hasta que <xref:System.Data.Common.DbEnumerator.Reset%2A> se llama.</span><span class="sxs-lookup"><span data-stu-id="00671-134">After the end of the collection is passed, subsequent calls to <xref:System.Data.Common.DbEnumerator.MoveNext%2A> return false until <xref:System.Data.Common.DbEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="00671-135">Un enumerador es válido mientras la colección no cambie.</span><span class="sxs-lookup"><span data-stu-id="00671-135">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="00671-136">Si se realizan cambios en la colección, como agregar, modificar o eliminar elementos, el enumerador queda invalidado y la siguiente llamada a <xref:System.Data.Common.DbEnumerator.MoveNext%2A> o <xref:System.Data.Common.DbEnumerator.Reset%2A> produce una <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="00671-136">If changes are made to the collection, such as adding, modifying or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Data.Common.DbEnumerator.MoveNext%2A> or <xref:System.Data.Common.DbEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="00671-137">La colección se modificó después de que el enumerador se creara.</span><span class="sxs-lookup"><span data-stu-id="00671-137">The collection was modified after the enumerator was created.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="00671-138">Información general sobre ADO.NET</span><span class="sxs-lookup"><span data-stu-id="00671-138">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbEnumerator.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Reset();" />
      <MemberSignature Language="F#" Value="abstract member Reset : unit -&gt; unit&#xA;override this.Reset : unit -&gt; unit" Usage="dbEnumerator.Reset " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerator.Reset</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="00671-139">Establece el enumerador en su posición inicial (antes del primer elemento de la colección).</span><span class="sxs-lookup"><span data-stu-id="00671-139">Sets the enumerator to its initial position, which is before the first element in the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00671-140">Un enumerador es válido mientras la colección no cambie.</span><span class="sxs-lookup"><span data-stu-id="00671-140">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="00671-141">Si se realizan cambios en la colección, como agregar, modificar o eliminar elementos, el enumerador queda invalidado y la siguiente llamada a <xref:System.Data.Common.DbEnumerator.MoveNext%2A> o <xref:System.Data.Common.DbEnumerator.Reset%2A> produce una <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="00671-141">If changes are made to the collection, such as adding, modifying or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Data.Common.DbEnumerator.MoveNext%2A> or <xref:System.Data.Common.DbEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="00671-142">La colección se modificó después de que el enumerador se creara.</span><span class="sxs-lookup"><span data-stu-id="00671-142">The collection was modified after the enumerator was created.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="00671-143">Información general sobre ADO.NET</span><span class="sxs-lookup"><span data-stu-id="00671-143">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
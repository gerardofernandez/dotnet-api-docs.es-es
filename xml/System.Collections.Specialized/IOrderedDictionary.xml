<Type Name="IOrderedDictionary" FullName="System.Collections.Specialized.IOrderedDictionary">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8023895c2e82ee9f4d9bf9c64cd3814c783ec9a6" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58687406" /></Metadata><TypeSignature Language="C#" Value="public interface IOrderedDictionary : System.Collections.IDictionary" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IOrderedDictionary implements class System.Collections.ICollection, class System.Collections.IDictionary, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Specialized.IOrderedDictionary" />
  <TypeSignature Language="VB.NET" Value="Public Interface IOrderedDictionary&#xA;Implements IDictionary" />
  <TypeSignature Language="C++ CLI" Value="public interface class IOrderedDictionary : System::Collections::IDictionary" />
  <TypeSignature Language="F#" Value="type IOrderedDictionary = interface&#xA;    interface IDictionary&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.Specialized</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IDictionary</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="02afd-101">Representa una colección indizada de pares de clave y valor.</span><span class="sxs-lookup"><span data-stu-id="02afd-101">Represents an indexed collection of key/value pairs.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02afd-102"><xref:System.Collections.Specialized.IOrderedDictionary> pueden acceder a los elementos con la clave o con el índice.</span><span class="sxs-lookup"><span data-stu-id="02afd-102"><xref:System.Collections.Specialized.IOrderedDictionary> elements can be accessed either with the key or with the index.</span></span>  
  
 <span data-ttu-id="02afd-103">Cada elemento es un par clave/valor almacenado en un <xref:System.Collections.DictionaryEntry> estructura.</span><span class="sxs-lookup"><span data-stu-id="02afd-103">Each element is a key/value pair stored in a <xref:System.Collections.DictionaryEntry> structure.</span></span>  
  
 <span data-ttu-id="02afd-104">Cada par debe tener una clave única que no es `null`, pero el valor puede ser `null` y no tiene que ser único.</span><span class="sxs-lookup"><span data-stu-id="02afd-104">Each pair must have a unique key that is not `null`, but the value can be `null` and does not have to be unique.</span></span> <span data-ttu-id="02afd-105">El <xref:System.Collections.Specialized.IOrderedDictionary> interfaz permite que los valores que hay que enumerar y claves contenidas, pero no implica ningún orden determinado.</span><span class="sxs-lookup"><span data-stu-id="02afd-105">The <xref:System.Collections.Specialized.IOrderedDictionary> interface allows the contained keys and values to be enumerated, but it does not imply any particular sort order.</span></span>  
  
 <span data-ttu-id="02afd-106">El `foreach` instrucción del lenguaje C# (`For Each` en Visual Basic) devuelve un objeto del tipo de los elementos de la colección.</span><span class="sxs-lookup"><span data-stu-id="02afd-106">The `foreach` statement of the C# language (`For Each` in Visual Basic) returns an object of the type of the elements in the collection.</span></span> <span data-ttu-id="02afd-107">Dado que cada elemento de la <xref:System.Collections.IDictionary> es un par clave/valor, el tipo de elemento no es el tipo de la clave o el tipo del valor.</span><span class="sxs-lookup"><span data-stu-id="02afd-107">Because each element of the <xref:System.Collections.IDictionary> is a key/value pair, the element type is not the type of the key or the type of the value.</span></span> <span data-ttu-id="02afd-108">En su lugar, el tipo de elemento es <xref:System.Collections.DictionaryEntry>, tal y como se muestra en el ejemplo siguiente.</span><span class="sxs-lookup"><span data-stu-id="02afd-108">Instead, the element type is <xref:System.Collections.DictionaryEntry>, as the following example shows.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.IOrderedDictionary_Implementation#03](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.IOrderedDictionary_Implementation/cpp/remarks.cpp#03)]
 [!code-csharp[System.Collections.Specialized.IOrderedDictionary_Implementation#03](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.IOrderedDictionary_Implementation/cs/remarks.cs#03)]
 [!code-vb[System.Collections.Specialized.IOrderedDictionary_Implementation#03](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.IOrderedDictionary_Implementation/vb/remarks.vb#03)]  
  
 <span data-ttu-id="02afd-109">El `foreach` instrucción es un contenedor alrededor del enumerador, que permite solo lectura pero no escribir en la colección.</span><span class="sxs-lookup"><span data-stu-id="02afd-109">The `foreach` statement is a wrapper around the enumerator, which allows only reading from, not writing to, the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02afd-110">En el ejemplo de código siguiente se muestra la implementación de una sencilla <xref:System.Collections.Specialized.IOrderedDictionary> según la <xref:System.Collections.ArrayList> clase.</span><span class="sxs-lookup"><span data-stu-id="02afd-110">The following code example demonstrates the implementation of a simple <xref:System.Collections.Specialized.IOrderedDictionary> based on the <xref:System.Collections.ArrayList> class.</span></span> <span data-ttu-id="02afd-111">Implementada <xref:System.Collections.Specialized.IOrderedDictionary> almacena los nombres como las claves y los apellidos de los valores con el requisito agregado que cada nombre sea único.</span><span class="sxs-lookup"><span data-stu-id="02afd-111">The implemented <xref:System.Collections.Specialized.IOrderedDictionary> stores first names as the keys and last names as the values, with the added requirement that each first name is unique.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.IOrderedDictionary_Implementation#00](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.IOrderedDictionary_Implementation/cpp/iordereddictionary.cpp#00)]
 [!code-csharp[System.Collections.Specialized.IOrderedDictionary_Implementation#00](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.IOrderedDictionary_Implementation/cs/iordereddictionary.cs#00)]
 [!code-vb[System.Collections.Specialized.IOrderedDictionary_Implementation#00](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.IOrderedDictionary_Implementation/vb/iordereddictionary.vb#00)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="02afd-112">La clase de implementación debe tener un medio para comparar claves.</span><span class="sxs-lookup"><span data-stu-id="02afd-112">The implementing class must have a means to compare keys.</span></span></para></block>
    <altmember cref="T:System.Collections.ICollection" />
    <altmember cref="T:System.Collections.IDictionary" />
  </Docs>
  <Members>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IDictionaryEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IDictionaryEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.IOrderedDictionary.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IDictionaryEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IDictionaryEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IDictionaryEnumerator" Usage="iOrderedDictionary.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionaryEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="02afd-113">Devuelve un enumerador que itera por la colección <see cref="T:System.Collections.Specialized.IOrderedDictionary" />.</span><span class="sxs-lookup"><span data-stu-id="02afd-113">Returns an enumerator that iterates through the <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> collection.</span></span></summary>
        <returns><span data-ttu-id="02afd-114"><see cref="T:System.Collections.IDictionaryEnumerator" /> para toda la colección <see cref="T:System.Collections.Specialized.IOrderedDictionary" />.</span><span class="sxs-lookup"><span data-stu-id="02afd-114">An <see cref="T:System.Collections.IDictionaryEnumerator" /> for the entire <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02afd-115">[Visual Basic, C#]</span><span class="sxs-lookup"><span data-stu-id="02afd-115">[Visual Basic, C#]</span></span>  
  
 <span data-ttu-id="02afd-116">La instrucción `foreach` del lenguaje C# (`for each` en Visual Basic) oculta la complejidad de los enumeradores.</span><span class="sxs-lookup"><span data-stu-id="02afd-116">The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="02afd-117">Por lo tanto, uso `foreach` se recomienda en lugar de manipular directamente el enumerador.</span><span class="sxs-lookup"><span data-stu-id="02afd-117">Therefore, using `foreach` is recommended instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="02afd-118">Los enumeradores pueden usarse para leer los datos de la colección, pero no para modificar la colección subyacente.</span><span class="sxs-lookup"><span data-stu-id="02afd-118">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="02afd-119">En principio, el enumerador se coloca antes del primer elemento de la colección.</span><span class="sxs-lookup"><span data-stu-id="02afd-119">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="02afd-120"><xref:System.Collections.IEnumerator.Reset%2A> también devuelve el enumerador a esta posición.</span><span class="sxs-lookup"><span data-stu-id="02afd-120"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span>  <span data-ttu-id="02afd-121">En esta posición, el <xref:System.Collections.IEnumerator.Current%2A> propiedad no está definida.</span><span class="sxs-lookup"><span data-stu-id="02afd-121">At this position, the <xref:System.Collections.IEnumerator.Current%2A> property is undefined.</span></span> <span data-ttu-id="02afd-122">Por lo tanto, debe llamar a <xref:System.Collections.IEnumerator.MoveNext%2A> para adelantar el enumerador hasta el primer elemento de la colección antes de leer el valor de <xref:System.Collections.IEnumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="02afd-122">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="02afd-123"><xref:System.Collections.IEnumerator.Current%2A> devuelve el mismo objeto hasta que se llama a <xref:System.Collections.IEnumerator.MoveNext%2A> o a <xref:System.Collections.IEnumerator.Reset%2A>.</span><span class="sxs-lookup"><span data-stu-id="02afd-123"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="02afd-124"><xref:System.Collections.IEnumerator.MoveNext%2A> establece <xref:System.Collections.IEnumerator.Current%2A> en el siguiente elemento.</span><span class="sxs-lookup"><span data-stu-id="02afd-124"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="02afd-125">Si <xref:System.Collections.IEnumerator.MoveNext%2A> pasa el final de la colección, el enumerador se coloca después del último elemento de la colección y <xref:System.Collections.IEnumerator.MoveNext%2A> devuelve `false`.</span><span class="sxs-lookup"><span data-stu-id="02afd-125">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="02afd-126">Cuando el enumerador está en esta posición, las llamadas subsiguientes a <xref:System.Collections.IEnumerator.MoveNext%2A> también devolver `false`.</span><span class="sxs-lookup"><span data-stu-id="02afd-126">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="02afd-127">Si la última llamada a <xref:System.Collections.IEnumerator.MoveNext%2A> devuelve `false`, <xref:System.Collections.IEnumerator.Current%2A> es indefinido.</span><span class="sxs-lookup"><span data-stu-id="02afd-127">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="02afd-128">Para volver a establecer el valor de <xref:System.Collections.IEnumerator.Current%2A> en el primer elemento de la colección, se puede llamar primero a <xref:System.Collections.IEnumerator.Reset%2A> y después a <xref:System.Collections.IEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="02afd-128">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="02afd-129">Un enumerador es válido mientras la colección no cambie.</span><span class="sxs-lookup"><span data-stu-id="02afd-129">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="02afd-130">Si se hacen cambios en la colección (como agregar, modificar o eliminar elementos), el enumerador queda invalidado permanentemente y su comportamiento es indefinido.</span><span class="sxs-lookup"><span data-stu-id="02afd-130">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="02afd-131">El enumerador no tiene acceso exclusivo a la colección y, por tanto, la enumeración en una colección no es intrínsicamente un procedimiento seguro para subprocesos.</span><span class="sxs-lookup"><span data-stu-id="02afd-131">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="02afd-132">A fin de garantizar la seguridad de los subprocesos, se puede bloquear la colección durante toda la enumeración.</span><span class="sxs-lookup"><span data-stu-id="02afd-132">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="02afd-133">Para permitir que varios subprocesos obtengan acceso de lectura y escritura a la colección, debe implementar su propia sincronización.</span><span class="sxs-lookup"><span data-stu-id="02afd-133">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02afd-134">En el ejemplo de código siguiente se muestra la implementación de una sencilla <xref:System.Collections.Specialized.IOrderedDictionary> según la <xref:System.Collections.ArrayList> clase.</span><span class="sxs-lookup"><span data-stu-id="02afd-134">The following code example demonstrates the implementation of a simple <xref:System.Collections.Specialized.IOrderedDictionary> based on the <xref:System.Collections.ArrayList> class.</span></span> <span data-ttu-id="02afd-135">Implementada <xref:System.Collections.Specialized.IOrderedDictionary> almacena los nombres como las claves y los apellidos de los valores con el requisito agregado que cada nombre sea único.</span><span class="sxs-lookup"><span data-stu-id="02afd-135">The implemented <xref:System.Collections.Specialized.IOrderedDictionary> stores first names as the keys and last names as the values, with the added requirement that each first name is unique.</span></span> <span data-ttu-id="02afd-136">Este código forma parte de un ejemplo de código más extenso proporcionado para el <xref:System.Collections.Specialized.IOrderedDictionary> clase.</span><span class="sxs-lookup"><span data-stu-id="02afd-136">This code is part of a larger code example provided for the <xref:System.Collections.Specialized.IOrderedDictionary> class.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.IOrderedDictionary_Implementation#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.IOrderedDictionary_Implementation/cpp/iordereddictionary.cpp#01)]
 [!code-csharp[System.Collections.Specialized.IOrderedDictionary_Implementation#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.IOrderedDictionary_Implementation/cs/iordereddictionary.cs#01)]
 [!code-vb[System.Collections.Specialized.IOrderedDictionary_Implementation#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.IOrderedDictionary_Implementation/vb/iordereddictionary.vb#01)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, object key, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Insert(int32 index, object key, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.IOrderedDictionary.Insert(System.Int32,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, key As Object, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(int index, System::Object ^ key, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Insert : int * obj * obj -&gt; unit" Usage="iOrderedDictionary.Insert (index, key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="02afd-137">Índice de base cero donde se debe insertar el par de clave y valor.</span><span class="sxs-lookup"><span data-stu-id="02afd-137">The zero-based index at which the key/value pair should be inserted.</span></span></param>
        <param name="key"><span data-ttu-id="02afd-138">Objeto que se va a utilizar como clave del elemento que se va a agregar.</span><span class="sxs-lookup"><span data-stu-id="02afd-138">The object to use as the key of the element to add.</span></span></param>
        <param name="value"><span data-ttu-id="02afd-139">El objeto que se va a usar como valor del elemento que se va a agregar.</span><span class="sxs-lookup"><span data-stu-id="02afd-139">The object to use as the value of the element to add.</span></span>  <span data-ttu-id="02afd-140">El valor puede ser <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="02afd-140">The value can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="02afd-141">Inserta un par de clave y valor en la colección, en el índice especificado.</span><span class="sxs-lookup"><span data-stu-id="02afd-141">Inserts a key/value pair into the collection at the specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02afd-142"><xref:System.Collections.Specialized.IOrderedDictionary> acepta `null` como un valor válido y permite elementos duplicados.</span><span class="sxs-lookup"><span data-stu-id="02afd-142"><xref:System.Collections.Specialized.IOrderedDictionary> accepts `null` as a valid value and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="02afd-143">Si el `index` es igual al parámetro <xref:System.Collections.ICollection.Count%2A>, `value` parámetro se agrega al final de la <xref:System.Collections.Specialized.IOrderedDictionary> colección.</span><span class="sxs-lookup"><span data-stu-id="02afd-143">If the `index` parameter is equal to <xref:System.Collections.ICollection.Count%2A>, the `value` parameter is added to the end of the <xref:System.Collections.Specialized.IOrderedDictionary> collection.</span></span>  
  
 <span data-ttu-id="02afd-144">En colecciones de elementos contiguos, como listas, los elementos que van a continuación del punto de inserción se desplazan hacia abajo para alojar el elemento nuevo.</span><span class="sxs-lookup"><span data-stu-id="02afd-144">In collections of contiguous elements, such as lists, the elements that follow the insertion point move down to accommodate the new element.</span></span> <span data-ttu-id="02afd-145">Si la colección está indizada, también se actualizan los índices de los elementos que se han movido.</span><span class="sxs-lookup"><span data-stu-id="02afd-145">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="02afd-146">Este comportamiento no se aplica a las colecciones donde los elementos se agrupan conceptualmente, como una tabla hash.</span><span class="sxs-lookup"><span data-stu-id="02afd-146">This behavior does not apply to collections where elements are conceptually grouped together, such as a hash table.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02afd-147">En el ejemplo de código siguiente se muestra la implementación de una sencilla <xref:System.Collections.Specialized.IOrderedDictionary> según la <xref:System.Collections.ArrayList> clase.</span><span class="sxs-lookup"><span data-stu-id="02afd-147">The following code example demonstrates the implementation of a simple <xref:System.Collections.Specialized.IOrderedDictionary> based on the <xref:System.Collections.ArrayList> class.</span></span> <span data-ttu-id="02afd-148">Implementada <xref:System.Collections.Specialized.IOrderedDictionary> almacena los nombres como las claves y los apellidos de los valores con el requisito agregado que cada nombre sea único.</span><span class="sxs-lookup"><span data-stu-id="02afd-148">The implemented <xref:System.Collections.Specialized.IOrderedDictionary> stores first names as the keys and last names as the values, with the added requirement that each first name is unique.</span></span> <span data-ttu-id="02afd-149">Este código forma parte de un ejemplo de código más extenso proporcionado para el <xref:System.Collections.Specialized.IOrderedDictionary> clase.</span><span class="sxs-lookup"><span data-stu-id="02afd-149">This code is part of a larger code example provided for the <xref:System.Collections.Specialized.IOrderedDictionary> class.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.IOrderedDictionary_Implementation#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.IOrderedDictionary_Implementation/cpp/iordereddictionary.cpp#01)]
 [!code-csharp[System.Collections.Specialized.IOrderedDictionary_Implementation#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.IOrderedDictionary_Implementation/cs/iordereddictionary.cs#01)]
 [!code-vb[System.Collections.Specialized.IOrderedDictionary_Implementation#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.IOrderedDictionary_Implementation/vb/iordereddictionary.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="02afd-150"><paramref name="index" /> es menor que 0.</span><span class="sxs-lookup"><span data-stu-id="02afd-150"><paramref name="index" /> is less than 0.</span></span>  
  
<span data-ttu-id="02afd-151">O bien</span><span class="sxs-lookup"><span data-stu-id="02afd-151">-or-</span></span> 
 <span data-ttu-id="02afd-152"><paramref name="index" /> es mayor que <see cref="P:System.Collections.ICollection.Count" />.</span><span class="sxs-lookup"><span data-stu-id="02afd-152"><paramref name="index" /> is greater than <see cref="P:System.Collections.ICollection.Count" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="02afd-153"><paramref name="key" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="02afd-153"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="02afd-154">Ya existe un elemento con la misma clave en la colección <see cref="T:System.Collections.Specialized.IOrderedDictionary" />.</span><span class="sxs-lookup"><span data-stu-id="02afd-154">An element with the same key already exists in the <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> collection.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="02afd-155">La colección <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> es de sólo lectura.</span><span class="sxs-lookup"><span data-stu-id="02afd-155">The <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> collection is read-only.</span></span>  
  
<span data-ttu-id="02afd-156">O bien</span><span class="sxs-lookup"><span data-stu-id="02afd-156">-or-</span></span> 
<span data-ttu-id="02afd-157">La colección <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> tiene un tamaño fijo.</span><span class="sxs-lookup"><span data-stu-id="02afd-157">The <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> collection has a fixed size.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Specialized.IOrderedDictionary.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : obj with get, set" Usage="System.Collections.Specialized.IOrderedDictionary.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="02afd-158">Índice de base cero del elemento que se va a obtener o establecer.</span><span class="sxs-lookup"><span data-stu-id="02afd-158">The zero-based index of the element to get or set.</span></span></param>
        <summary><span data-ttu-id="02afd-159">Obtiene o establece el elemento en el índice especificado.</span><span class="sxs-lookup"><span data-stu-id="02afd-159">Gets or sets the element at the specified index.</span></span></summary>
        <value><span data-ttu-id="02afd-160">Elemento en el índice especificado.</span><span class="sxs-lookup"><span data-stu-id="02afd-160">The element at the specified index.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02afd-161"><xref:System.Collections.Specialized.IOrderedDictionary> acepta `null` como un valor válido y permite elementos duplicados.</span><span class="sxs-lookup"><span data-stu-id="02afd-161"><xref:System.Collections.Specialized.IOrderedDictionary> accepts `null` as a valid value and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="02afd-162">El lenguaje C# utiliza la palabra clave para definir los indizadores en lugar de implementar el <xref:System.Collections.Specialized.IOrderedDictionary.Item%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="02afd-162">The C# language uses the  keyword to define the indexers instead of implementing the <xref:System.Collections.Specialized.IOrderedDictionary.Item%2A> property.</span></span> <span data-ttu-id="02afd-163">Visual Basic implementa <xref:System.Collections.Specialized.IOrderedDictionary.Item%2A> como propiedad predeterminada, lo que proporciona la misma funcionalidad de indización.</span><span class="sxs-lookup"><span data-stu-id="02afd-163">Visual Basic implements <xref:System.Collections.Specialized.IOrderedDictionary.Item%2A> as a default property, which provides the same indexing functionality.</span></span>  
  
 <span data-ttu-id="02afd-164">Esta propiedad permite obtener acceso a un elemento específico de la colección utilizando la sintaxis siguiente:</span><span class="sxs-lookup"><span data-stu-id="02afd-164">This property allows you to access a specific element in the collection by using the following syntax:</span></span>  
  
 [!code-cpp[System.Collections.Specialized.IOrderedDictionary_Implementation#04](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.IOrderedDictionary_Implementation/cpp/remarks.cpp#04)]
 [!code-csharp[System.Collections.Specialized.IOrderedDictionary_Implementation#04](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.IOrderedDictionary_Implementation/cs/remarks.cs#04)]
 [!code-vb[System.Collections.Specialized.IOrderedDictionary_Implementation#04](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.IOrderedDictionary_Implementation/vb/remarks.vb#04)]  
  
   
  
## Examples  
 <span data-ttu-id="02afd-165">En el ejemplo de código siguiente se muestra la implementación de una sencilla <xref:System.Collections.Specialized.IOrderedDictionary> según la <xref:System.Collections.ArrayList> clase.</span><span class="sxs-lookup"><span data-stu-id="02afd-165">The following code example demonstrates the implementation of a simple <xref:System.Collections.Specialized.IOrderedDictionary> based on the <xref:System.Collections.ArrayList> class.</span></span> <span data-ttu-id="02afd-166">Implementada <xref:System.Collections.Specialized.IOrderedDictionary> almacena los nombres como las claves y los apellidos de los valores con el requisito agregado que cada nombre sea único.</span><span class="sxs-lookup"><span data-stu-id="02afd-166">The implemented <xref:System.Collections.Specialized.IOrderedDictionary> stores first names as the keys and last names as the values, with the added requirement that each first name is unique.</span></span> <span data-ttu-id="02afd-167">Este código forma parte de un ejemplo de código más extenso proporcionado para el <xref:System.Collections.Specialized.IOrderedDictionary> clase.</span><span class="sxs-lookup"><span data-stu-id="02afd-167">This code is part of a larger code example provided for the <xref:System.Collections.Specialized.IOrderedDictionary> class.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.IOrderedDictionary_Implementation#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.IOrderedDictionary_Implementation/cpp/iordereddictionary.cpp#01)]
 [!code-csharp[System.Collections.Specialized.IOrderedDictionary_Implementation#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.IOrderedDictionary_Implementation/cs/iordereddictionary.cs#01)]
 [!code-vb[System.Collections.Specialized.IOrderedDictionary_Implementation#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.IOrderedDictionary_Implementation/vb/iordereddictionary.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="02afd-168"><paramref name="index" /> es menor que 0.</span><span class="sxs-lookup"><span data-stu-id="02afd-168"><paramref name="index" /> is less than 0.</span></span>  
  
<span data-ttu-id="02afd-169">O bien</span><span class="sxs-lookup"><span data-stu-id="02afd-169">-or-</span></span> 
 <span data-ttu-id="02afd-170"><paramref name="index" /> es igual o mayor que <see cref="P:System.Collections.ICollection.Count" />.</span><span class="sxs-lookup"><span data-stu-id="02afd-170"><paramref name="index" /> is equal to or greater than <see cref="P:System.Collections.ICollection.Count" />.</span></span></exception>
        <altmember cref="P:System.Collections.ICollection.Count" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.IOrderedDictionary.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit" Usage="iOrderedDictionary.RemoveAt index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="02afd-171">Índice de base cero del elemento que se va a quitar.</span><span class="sxs-lookup"><span data-stu-id="02afd-171">The zero-based index of the element to remove.</span></span></param>
        <summary><span data-ttu-id="02afd-172">Quita el elemento en el índice especificado.</span><span class="sxs-lookup"><span data-stu-id="02afd-172">Removes the element at the specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02afd-173">En colecciones de elementos contiguos, como listas, los elementos que van a continuación del elemento eliminado se desplazan hacia arriba para ocupar el espacio libre.</span><span class="sxs-lookup"><span data-stu-id="02afd-173">In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</span></span> <span data-ttu-id="02afd-174">Si la colección está indizada, también se actualizan los índices de los elementos que se han movido.</span><span class="sxs-lookup"><span data-stu-id="02afd-174">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="02afd-175">Este comportamiento no se aplica a las colecciones donde los elementos se agrupan conceptualmente, como una tabla hash.</span><span class="sxs-lookup"><span data-stu-id="02afd-175">This behavior does not apply to collections where elements are conceptually grouped together, such as a hash table.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02afd-176">En el ejemplo de código siguiente se muestra la implementación de una sencilla <xref:System.Collections.Specialized.IOrderedDictionary> según la <xref:System.Collections.ArrayList> clase.</span><span class="sxs-lookup"><span data-stu-id="02afd-176">The following code example demonstrates the implementation of a simple <xref:System.Collections.Specialized.IOrderedDictionary> based on the <xref:System.Collections.ArrayList> class.</span></span> <span data-ttu-id="02afd-177">Implementada <xref:System.Collections.Specialized.IOrderedDictionary> almacena los nombres como las claves y los apellidos de los valores con el requisito agregado que cada nombre sea único.</span><span class="sxs-lookup"><span data-stu-id="02afd-177">The implemented <xref:System.Collections.Specialized.IOrderedDictionary> stores first names as the keys and last names as the values, with the added requirement that each first name is unique.</span></span> <span data-ttu-id="02afd-178">Este código forma parte de un ejemplo de código más extenso proporcionado para el <xref:System.Collections.Specialized.IOrderedDictionary> clase.</span><span class="sxs-lookup"><span data-stu-id="02afd-178">This code is part of a larger code example provided for the <xref:System.Collections.Specialized.IOrderedDictionary> class.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.IOrderedDictionary_Implementation#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.IOrderedDictionary_Implementation/cpp/iordereddictionary.cpp#01)]
 [!code-csharp[System.Collections.Specialized.IOrderedDictionary_Implementation#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.IOrderedDictionary_Implementation/cs/iordereddictionary.cs#01)]
 [!code-vb[System.Collections.Specialized.IOrderedDictionary_Implementation#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.IOrderedDictionary_Implementation/vb/iordereddictionary.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="02afd-179"><paramref name="index" /> es menor que 0.</span><span class="sxs-lookup"><span data-stu-id="02afd-179"><paramref name="index" /> is less than 0.</span></span>  
  
<span data-ttu-id="02afd-180">O bien</span><span class="sxs-lookup"><span data-stu-id="02afd-180">-or-</span></span> 
 <span data-ttu-id="02afd-181"><paramref name="index" /> es igual o mayor que <see cref="P:System.Collections.ICollection.Count" />.</span><span class="sxs-lookup"><span data-stu-id="02afd-181"><paramref name="index" /> is equal to or greater than <see cref="P:System.Collections.ICollection.Count" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="02afd-182">La colección <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> es de sólo lectura.</span><span class="sxs-lookup"><span data-stu-id="02afd-182">The <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> collection is read-only.</span></span>  
  
<span data-ttu-id="02afd-183">O bien</span><span class="sxs-lookup"><span data-stu-id="02afd-183">-or-</span></span> 
<span data-ttu-id="02afd-184">La colección <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> tiene un tamaño fijo.</span><span class="sxs-lookup"><span data-stu-id="02afd-184">The <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> collection has a fixed size.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
<Type Name="BitVector32" FullName="System.Collections.Specialized.BitVector32">
  <Metadata><Meta Name="ms.openlocfilehash" Value="baed288c19241aa5dfda22b880ebe034a1938d15" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39951203" /></Metadata><TypeSignature Language="C#" Value="public struct BitVector32" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit BitVector32 extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Specialized.BitVector32" />
  <TypeSignature Language="VB.NET" Value="Public Structure BitVector32" />
  <TypeSignature Language="C++ CLI" Value="public value class BitVector32" />
  <TypeSignature Language="F#" Value="type BitVector32 = struct" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.Specialized</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="ceda6-101">Proporciona una estructura simple que almacena valores booleanos y pequeños enteros en 32 bits de memoria.</span><span class="sxs-lookup"><span data-stu-id="ceda6-101">Provides a simple structure that stores Boolean values and small integers in 32 bits of memory.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ceda6-102"><xref:System.Collections.Specialized.BitVector32> es más eficaz que <xref:System.Collections.BitArray> para valores booleanos y pequeños enteros que se usan internamente.</span><span class="sxs-lookup"><span data-stu-id="ceda6-102"><xref:System.Collections.Specialized.BitVector32> is more efficient than <xref:System.Collections.BitArray> for Boolean values and small integers that are used internally.</span></span> <span data-ttu-id="ceda6-103">Un <xref:System.Collections.BitArray> puede aumentar indefinidamente según sea necesario, pero tiene la sobrecarga de memoria y rendimiento que requiere una instancia de clase.</span><span class="sxs-lookup"><span data-stu-id="ceda6-103">A <xref:System.Collections.BitArray> can grow indefinitely as needed, but it has the memory and performance overhead that a class instance requires.</span></span> <span data-ttu-id="ceda6-104">En cambio, un <xref:System.Collections.Specialized.BitVector32> usa sólo de 32 bits.</span><span class="sxs-lookup"><span data-stu-id="ceda6-104">In contrast, a <xref:System.Collections.Specialized.BitVector32> uses only 32 bits.</span></span>  
  
 <span data-ttu-id="ceda6-105">Un <xref:System.Collections.Specialized.BitVector32> estructura puede configurarse para contener secciones de pequeños enteros o marcas de bits para valores booleanos, pero no ambos.</span><span class="sxs-lookup"><span data-stu-id="ceda6-105">A <xref:System.Collections.Specialized.BitVector32> structure can be set up to contain either sections for small integers or bit flags for Booleans, but not both.</span></span> <span data-ttu-id="ceda6-106">Un <xref:System.Collections.Specialized.BitVector32.Section> es una ventana en la <xref:System.Collections.Specialized.BitVector32> y está formado por el menor número de bits consecutivos que puede contener el valor máximo especificado en <xref:System.Collections.Specialized.BitVector32.CreateSection%2A>.</span><span class="sxs-lookup"><span data-stu-id="ceda6-106">A <xref:System.Collections.Specialized.BitVector32.Section> is a window into the <xref:System.Collections.Specialized.BitVector32> and is composed of the smallest number of consecutive bits that can contain the maximum value specified in <xref:System.Collections.Specialized.BitVector32.CreateSection%2A>.</span></span> <span data-ttu-id="ceda6-107">Por ejemplo, una sección con un valor máximo de 1 se compone de un solo bit, mientras que una sección con un valor máximo de 5 se compone de tres bits.</span><span class="sxs-lookup"><span data-stu-id="ceda6-107">For example, a section with a maximum value of 1 is composed of only one bit, whereas a section with a maximum value of 5 is composed of three bits.</span></span> <span data-ttu-id="ceda6-108">Puede crear un <xref:System.Collections.Specialized.BitVector32.Section> con un valor máximo de 1 para que actúe como un valor booleano, lo que permite almacenar números enteros y valores booleanos en la misma <xref:System.Collections.Specialized.BitVector32>.</span><span class="sxs-lookup"><span data-stu-id="ceda6-108">You can create a <xref:System.Collections.Specialized.BitVector32.Section> with a maximum value of 1 to serve as a Boolean, thereby allowing you to store integers and Booleans in the same <xref:System.Collections.Specialized.BitVector32>.</span></span>  
  
 <span data-ttu-id="ceda6-109">Algunos miembros se pueden usar para un <xref:System.Collections.Specialized.BitVector32> que está configurado como secciones, aunque se pueden usar otros miembros de uno que está configurado como marcas de bits.</span><span class="sxs-lookup"><span data-stu-id="ceda6-109">Some members can be used for a <xref:System.Collections.Specialized.BitVector32> that is set up as sections, while other members can be used for one that is set up as bit flags.</span></span> <span data-ttu-id="ceda6-110">Por ejemplo, el <xref:System.Collections.Specialized.BitVector32.Item%2A?displayProperty=nameWithType> propiedad es el indizador para un <xref:System.Collections.Specialized.BitVector32> que está configurado como secciones y el <xref:System.Collections.Specialized.BitVector32.Item%2A?displayProperty=nameWithType> propiedad es el indizador para un <xref:System.Collections.Specialized.BitVector32> que está configurado en marcadores de bits.</span><span class="sxs-lookup"><span data-stu-id="ceda6-110">For example, the <xref:System.Collections.Specialized.BitVector32.Item%2A?displayProperty=nameWithType> property is the indexer for a <xref:System.Collections.Specialized.BitVector32> that is set up as sections, and the <xref:System.Collections.Specialized.BitVector32.Item%2A?displayProperty=nameWithType> property is the indexer for a <xref:System.Collections.Specialized.BitVector32> that is set up as bit flags.</span></span> <span data-ttu-id="ceda6-111"><xref:System.Collections.Specialized.BitVector32.CreateMask%2A> crea una serie de máscaras que pueden usarse para tener acceso a los bits individuales en un <xref:System.Collections.Specialized.BitVector32> que está configurado en marcadores de bits.</span><span class="sxs-lookup"><span data-stu-id="ceda6-111"><xref:System.Collections.Specialized.BitVector32.CreateMask%2A> creates a series of masks that can be used to access individual bits in a <xref:System.Collections.Specialized.BitVector32> that is set up as bit flags.</span></span>  
  
 <span data-ttu-id="ceda6-112">Uso de una máscara en un <xref:System.Collections.Specialized.BitVector32> que está configurado en secciones, puede causar resultados inesperados.</span><span class="sxs-lookup"><span data-stu-id="ceda6-112">Using a mask on a <xref:System.Collections.Specialized.BitVector32> that is set up as sections might cause unexpected results.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ceda6-113">El siguiente ejemplo de código utiliza un <xref:System.Collections.Specialized.BitVector32> como una colección de marcadores de bits.</span><span class="sxs-lookup"><span data-stu-id="ceda6-113">The following code example uses a <xref:System.Collections.Specialized.BitVector32> as a collection of bit flags.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.BitVector32_BitFlags#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.BitVector32_BitFlags/CPP/bitvector32_bitflags.cpp#1)]
 [!code-csharp[System.Collections.Specialized.BitVector32_BitFlags#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.BitVector32_BitFlags/CS/bitvector32_bitflags.cs#1)]
 [!code-vb[System.Collections.Specialized.BitVector32_BitFlags#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.BitVector32_BitFlags/VB/bitvector32_bitflags.vb#1)]  
  
 <span data-ttu-id="ceda6-114">El siguiente ejemplo de código utiliza un <xref:System.Collections.Specialized.BitVector32> como una colección de secciones.</span><span class="sxs-lookup"><span data-stu-id="ceda6-114">The following code example uses a <xref:System.Collections.Specialized.BitVector32> as a collection of sections.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.BitVector32_Sections#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.BitVector32_Sections/CPP/bitvector32_sections.cpp#1)]
 [!code-csharp[System.Collections.Specialized.BitVector32_Sections#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.BitVector32_Sections/CS/bitvector32_sections.cs#1)]
 [!code-vb[System.Collections.Specialized.BitVector32_Sections#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.BitVector32_Sections/VB/bitvector32_sections.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Collections.BitArray" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ceda6-115">Inicializa una nueva instancia de la estructura <see cref="T:System.Collections.Specialized.BitVector32" />.</span><span class="sxs-lookup"><span data-stu-id="ceda6-115">Initializes a new instance of the <see cref="T:System.Collections.Specialized.BitVector32" /> structure.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BitVector32 (System.Collections.Specialized.BitVector32 value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Collections.Specialized.BitVector32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.BitVector32.#ctor(System.Collections.Specialized.BitVector32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As BitVector32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BitVector32(System::Collections::Specialized::BitVector32 value);" />
      <MemberSignature Language="F#" Value="new System.Collections.Specialized.BitVector32 : System.Collections.Specialized.BitVector32 -&gt; System.Collections.Specialized.BitVector32" Usage="new System.Collections.Specialized.BitVector32 value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Collections.Specialized.BitVector32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ceda6-116">Estructura <see cref="T:System.Collections.Specialized.BitVector32" /> que contiene los datos que hay que copiar.</span><span class="sxs-lookup"><span data-stu-id="ceda6-116">A <see cref="T:System.Collections.Specialized.BitVector32" /> structure that contains the data to copy.</span></span></param>
        <summary><span data-ttu-id="ceda6-117">Inicializa una nueva instancia de la estructura <see cref="T:System.Collections.Specialized.BitVector32" /> que contiene los datos representados en una estructura <see cref="T:System.Collections.Specialized.BitVector32" /> existente.</span><span class="sxs-lookup"><span data-stu-id="ceda6-117">Initializes a new instance of the <see cref="T:System.Collections.Specialized.BitVector32" /> structure containing the data represented in an existing <see cref="T:System.Collections.Specialized.BitVector32" /> structure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ceda6-118">Este constructor es una operación o (1).</span><span class="sxs-lookup"><span data-stu-id="ceda6-118">This constructor is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BitVector32 (int data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.BitVector32.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (data As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BitVector32(int data);" />
      <MemberSignature Language="F#" Value="new System.Collections.Specialized.BitVector32 : int -&gt; System.Collections.Specialized.BitVector32" Usage="new System.Collections.Specialized.BitVector32 data" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="data" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="ceda6-119">Entero que representa los datos del nuevo <see cref="T:System.Collections.Specialized.BitVector32" />.</span><span class="sxs-lookup"><span data-stu-id="ceda6-119">An integer representing the data of the new <see cref="T:System.Collections.Specialized.BitVector32" />.</span></span></param>
        <summary><span data-ttu-id="ceda6-120">Inicializa una nueva instancia de la estructura <see cref="T:System.Collections.Specialized.BitVector32" /> que contiene los datos representados en un entero.</span><span class="sxs-lookup"><span data-stu-id="ceda6-120">Initializes a new instance of the <see cref="T:System.Collections.Specialized.BitVector32" /> structure containing the data represented in an integer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ceda6-121">Este constructor es una operación o (1).</span><span class="sxs-lookup"><span data-stu-id="ceda6-121">This constructor is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateMask">
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ceda6-122">Crea una serie de máscaras que pueden usarse para recuperar bits individuales en <see cref="T:System.Collections.Specialized.BitVector32" /> que está configurado en marcadores de bits.</span><span class="sxs-lookup"><span data-stu-id="ceda6-122">Creates a series of masks that can be used to retrieve individual bits in a <see cref="T:System.Collections.Specialized.BitVector32" /> that is set up as bit flags.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateMask">
      <MemberSignature Language="C#" Value="public static int CreateMask ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 CreateMask() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.BitVector32.CreateMask" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateMask () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int CreateMask();" />
      <MemberSignature Language="F#" Value="static member CreateMask : unit -&gt; int" Usage="System.Collections.Specialized.BitVector32.CreateMask " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ceda6-123">Crea la primera máscara de una serie, que puede usarse para recuperar bits individuales en <see cref="T:System.Collections.Specialized.BitVector32" /> que está configurado en marcadores de bits.</span><span class="sxs-lookup"><span data-stu-id="ceda6-123">Creates the first mask in a series of masks that can be used to retrieve individual bits in a <see cref="T:System.Collections.Specialized.BitVector32" /> that is set up as bit flags.</span></span></summary>
        <returns><span data-ttu-id="ceda6-124">Máscara que aísla el primer marcador de bits de <see cref="T:System.Collections.Specialized.BitVector32" />.</span><span class="sxs-lookup"><span data-stu-id="ceda6-124">A mask that isolates the first bit flag in the <see cref="T:System.Collections.Specialized.BitVector32" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ceda6-125">Use `CreateMask()` para crear la primera máscara de una serie y `CreateMask(int)` para todas las máscaras subsiguientes.</span><span class="sxs-lookup"><span data-stu-id="ceda6-125">Use `CreateMask()` to create the first mask in a series and `CreateMask(int)` for all subsequent masks.</span></span>  
  
 <span data-ttu-id="ceda6-126">Pueden crearse varias máscaras para hacer referencia a la misma marca de bits.</span><span class="sxs-lookup"><span data-stu-id="ceda6-126">Multiple masks can be created to refer to the same bit flag.</span></span>  
  
 <span data-ttu-id="ceda6-127">La máscara resultante aísla el marcador de bits única en el <xref:System.Collections.Specialized.BitVector32>.</span><span class="sxs-lookup"><span data-stu-id="ceda6-127">The resulting mask isolates only one bit flag in the <xref:System.Collections.Specialized.BitVector32>.</span></span> <span data-ttu-id="ceda6-128">Puede combinar máscaras mediante la operación OR bit a bit para crear una máscara que aísla varias marcas de bits en el <xref:System.Collections.Specialized.BitVector32>.</span><span class="sxs-lookup"><span data-stu-id="ceda6-128">You can combine masks using the bitwise OR operation to create a mask that isolates multiple bit flags in the <xref:System.Collections.Specialized.BitVector32>.</span></span>  
  
 <span data-ttu-id="ceda6-129">Uso de una máscara en un <xref:System.Collections.Specialized.BitVector32> que está configurado en secciones, puede causar resultados inesperados.</span><span class="sxs-lookup"><span data-stu-id="ceda6-129">Using a mask on a <xref:System.Collections.Specialized.BitVector32> that is set up as sections might cause unexpected results.</span></span>  
  
 <span data-ttu-id="ceda6-130">Este método es una operación o (1).</span><span class="sxs-lookup"><span data-stu-id="ceda6-130">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ceda6-131">El ejemplo de código siguiente muestra cómo crear y usar máscaras.</span><span class="sxs-lookup"><span data-stu-id="ceda6-131">The following code example shows how to create and use masks.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.BitVector32.CreateMasks#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.BitVector32.CreateMasks/CPP/bitvector32_createmasks.cpp#1)]
 [!code-csharp[System.Collections.Specialized.BitVector32.CreateMasks#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.BitVector32.CreateMasks/CS/bitvector32_createmasks.cs#1)]
 [!code-vb[System.Collections.Specialized.BitVector32.CreateMasks#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.BitVector32.CreateMasks/VB/bitvector32_createmasks.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateMask">
      <MemberSignature Language="C#" Value="public static int CreateMask (int previous);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 CreateMask(int32 previous) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.BitVector32.CreateMask(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateMask (previous As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int CreateMask(int previous);" />
      <MemberSignature Language="F#" Value="static member CreateMask : int -&gt; int" Usage="System.Collections.Specialized.BitVector32.CreateMask previous" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="previous" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="previous"><span data-ttu-id="ceda6-132">Máscara que muestra el marcador de bits previo.</span><span class="sxs-lookup"><span data-stu-id="ceda6-132">The mask that indicates the previous bit flag.</span></span></param>
        <summary><span data-ttu-id="ceda6-133">Crea una máscara adicional que sigue a la máscara especificada de una serie, que puede usarse para recuperar bits individuales en <see cref="T:System.Collections.Specialized.BitVector32" /> que está configurado como marcadores de bits.</span><span class="sxs-lookup"><span data-stu-id="ceda6-133">Creates an additional mask following the specified mask in a series of masks that can be used to retrieve individual bits in a <see cref="T:System.Collections.Specialized.BitVector32" /> that is set up as bit flags.</span></span></summary>
        <returns><span data-ttu-id="ceda6-134">Máscara que aísla el marcador de bits que sigue al que <paramref name="previous" /> apunta en <see cref="T:System.Collections.Specialized.BitVector32" />.</span><span class="sxs-lookup"><span data-stu-id="ceda6-134">A mask that isolates the bit flag following the one that <paramref name="previous" /> points to in <see cref="T:System.Collections.Specialized.BitVector32" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ceda6-135">Use `CreateMask()` para crear la primera máscara de una serie y `CreateMask(int)` para todas las máscaras subsiguientes.</span><span class="sxs-lookup"><span data-stu-id="ceda6-135">Use `CreateMask()` to create the first mask in a series and `CreateMask(int)` for all subsequent masks.</span></span>  
  
 <span data-ttu-id="ceda6-136">Pueden crearse varias máscaras para hacer referencia a la misma marca de bits.</span><span class="sxs-lookup"><span data-stu-id="ceda6-136">Multiple masks can be created to refer to the same bit flag.</span></span>  
  
 <span data-ttu-id="ceda6-137">La máscara resultante aísla el marcador de bits única en el <xref:System.Collections.Specialized.BitVector32>.</span><span class="sxs-lookup"><span data-stu-id="ceda6-137">The resulting mask isolates only one bit flag in the <xref:System.Collections.Specialized.BitVector32>.</span></span> <span data-ttu-id="ceda6-138">Puede combinar máscaras mediante la operación OR bit a bit para crear una máscara que aísla varias marcas de bits en el <xref:System.Collections.Specialized.BitVector32>.</span><span class="sxs-lookup"><span data-stu-id="ceda6-138">You can combine masks using the bitwise OR operation to create a mask that isolates multiple bit flags in the <xref:System.Collections.Specialized.BitVector32>.</span></span>  
  
 <span data-ttu-id="ceda6-139">Uso de una máscara en un <xref:System.Collections.Specialized.BitVector32> que está configurado en secciones, puede causar resultados inesperados.</span><span class="sxs-lookup"><span data-stu-id="ceda6-139">Using a mask on a <xref:System.Collections.Specialized.BitVector32> that is set up as sections might cause unexpected results.</span></span>  
  
 <span data-ttu-id="ceda6-140">Este método es una operación o (1).</span><span class="sxs-lookup"><span data-stu-id="ceda6-140">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ceda6-141">El ejemplo de código siguiente muestra cómo crear y usar máscaras.</span><span class="sxs-lookup"><span data-stu-id="ceda6-141">The following code example shows how to create and use masks.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.BitVector32.CreateMasks#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.BitVector32.CreateMasks/CPP/bitvector32_createmasks.cpp#1)]
 [!code-csharp[System.Collections.Specialized.BitVector32.CreateMasks#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.BitVector32.CreateMasks/CS/bitvector32_createmasks.cs#1)]
 [!code-vb[System.Collections.Specialized.BitVector32.CreateMasks#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.BitVector32.CreateMasks/VB/bitvector32_createmasks.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ceda6-142"><paramref name="previous" /> muestra el último marcador de bits de <see cref="T:System.Collections.Specialized.BitVector32" />.</span><span class="sxs-lookup"><span data-stu-id="ceda6-142"><paramref name="previous" /> indicates the last bit flag in the <see cref="T:System.Collections.Specialized.BitVector32" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateSection">
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ceda6-143">Crea una serie de secciones que contienen pequeños enteros.</span><span class="sxs-lookup"><span data-stu-id="ceda6-143">Creates a series of sections that contain small integers.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateSection">
      <MemberSignature Language="C#" Value="public static System.Collections.Specialized.BitVector32.Section CreateSection (short maxValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Specialized.BitVector32/Section CreateSection(int16 maxValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.BitVector32.CreateSection(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateSection (maxValue As Short) As BitVector32.Section" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Specialized::BitVector32::Section CreateSection(short maxValue);" />
      <MemberSignature Language="F#" Value="static member CreateSection : int16 -&gt; System.Collections.Specialized.BitVector32.Section" Usage="System.Collections.Specialized.BitVector32.CreateSection maxValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.BitVector32+Section</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="maxValue" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="maxValue"><span data-ttu-id="ceda6-144">Entero de 16 bits con signo, que especifica el valor máximo de la nueva <see cref="T:System.Collections.Specialized.BitVector32.Section" />.</span><span class="sxs-lookup"><span data-stu-id="ceda6-144">A 16-bit signed integer that specifies the maximum value for the new <see cref="T:System.Collections.Specialized.BitVector32.Section" />.</span></span></param>
        <summary><span data-ttu-id="ceda6-145">Crea la primera <see cref="T:System.Collections.Specialized.BitVector32.Section" /> de una serie de secciones que contienen pequeños enteros.</span><span class="sxs-lookup"><span data-stu-id="ceda6-145">Creates the first <see cref="T:System.Collections.Specialized.BitVector32.Section" /> in a series of sections that contain small integers.</span></span></summary>
        <returns><span data-ttu-id="ceda6-146"><see cref="T:System.Collections.Specialized.BitVector32.Section" /> que puede contener un número de cero a <paramref name="maxValue" />.</span><span class="sxs-lookup"><span data-stu-id="ceda6-146">A <see cref="T:System.Collections.Specialized.BitVector32.Section" /> that can hold a number from zero to <paramref name="maxValue" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ceda6-147">Un <xref:System.Collections.Specialized.BitVector32.Section> es una ventana en la <xref:System.Collections.Specialized.BitVector32> y está formado por el menor número de bits consecutivos que puede contener el valor máximo especificado en <xref:System.Collections.Specialized.BitVector32.CreateSection%2A>.</span><span class="sxs-lookup"><span data-stu-id="ceda6-147">A <xref:System.Collections.Specialized.BitVector32.Section> is a window into the <xref:System.Collections.Specialized.BitVector32> and is composed of the smallest number of consecutive bits that can contain the maximum value specified in <xref:System.Collections.Specialized.BitVector32.CreateSection%2A>.</span></span> <span data-ttu-id="ceda6-148">Por ejemplo, una sección con un valor máximo de 1 se compone de un solo bit, mientras que una sección con un valor máximo de 5 se compone de tres bits.</span><span class="sxs-lookup"><span data-stu-id="ceda6-148">For example, a section with a maximum value of 1 is composed of only one bit, whereas a section with a maximum value of 5 is composed of three bits.</span></span> <span data-ttu-id="ceda6-149">Puede crear un <xref:System.Collections.Specialized.BitVector32.Section> con un valor máximo de 1 para que actúe como un valor booleano, lo que permite almacenar números enteros y valores booleanos en la misma <xref:System.Collections.Specialized.BitVector32>.</span><span class="sxs-lookup"><span data-stu-id="ceda6-149">You can create a <xref:System.Collections.Specialized.BitVector32.Section> with a maximum value of 1 to serve as a Boolean, thereby allowing you to store integers and Booleans in the same <xref:System.Collections.Specialized.BitVector32>.</span></span>  
  
 <span data-ttu-id="ceda6-150">Si las secciones ya existen en el <xref:System.Collections.Specialized.BitVector32>, esas secciones que siguen siendo accesibles; sin embargo, las secciones superpuestas pueden provocar resultados inesperados.</span><span class="sxs-lookup"><span data-stu-id="ceda6-150">If sections already exist in the <xref:System.Collections.Specialized.BitVector32>, those sections are still accessible; however, overlapping sections might cause unexpected results.</span></span>  
  
 <span data-ttu-id="ceda6-151">Este método es una operación o (1).</span><span class="sxs-lookup"><span data-stu-id="ceda6-151">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ceda6-152">El siguiente ejemplo de código utiliza un <xref:System.Collections.Specialized.BitVector32> como una colección de secciones.</span><span class="sxs-lookup"><span data-stu-id="ceda6-152">The following code example uses a <xref:System.Collections.Specialized.BitVector32> as a collection of sections.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.BitVector32_Sections#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.BitVector32_Sections/CPP/bitvector32_sections.cpp#1)]
 [!code-csharp[System.Collections.Specialized.BitVector32_Sections#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.BitVector32_Sections/CS/bitvector32_sections.cs#1)]
 [!code-vb[System.Collections.Specialized.BitVector32_Sections#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.BitVector32_Sections/VB/bitvector32_sections.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ceda6-153"><paramref name="maxValue" /> es menor que 1.</span><span class="sxs-lookup"><span data-stu-id="ceda6-153"><paramref name="maxValue" /> is less than 1.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateSection">
      <MemberSignature Language="C#" Value="public static System.Collections.Specialized.BitVector32.Section CreateSection (short maxValue, System.Collections.Specialized.BitVector32.Section previous);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Specialized.BitVector32/Section CreateSection(int16 maxValue, valuetype System.Collections.Specialized.BitVector32/Section previous) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.BitVector32.CreateSection(System.Int16,System.Collections.Specialized.BitVector32.Section)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateSection (maxValue As Short, previous As BitVector32.Section) As BitVector32.Section" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Specialized::BitVector32::Section CreateSection(short maxValue, System::Collections::Specialized::BitVector32::Section previous);" />
      <MemberSignature Language="F#" Value="static member CreateSection : int16 * System.Collections.Specialized.BitVector32.Section -&gt; System.Collections.Specialized.BitVector32.Section" Usage="System.Collections.Specialized.BitVector32.CreateSection (maxValue, previous)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.BitVector32+Section</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="maxValue" Type="System.Int16" />
        <Parameter Name="previous" Type="System.Collections.Specialized.BitVector32+Section" />
      </Parameters>
      <Docs>
        <param name="maxValue"><span data-ttu-id="ceda6-154">Entero de 16 bits con signo, que especifica el valor máximo de la nueva <see cref="T:System.Collections.Specialized.BitVector32.Section" />.</span><span class="sxs-lookup"><span data-stu-id="ceda6-154">A 16-bit signed integer that specifies the maximum value for the new <see cref="T:System.Collections.Specialized.BitVector32.Section" />.</span></span></param>
        <param name="previous"><span data-ttu-id="ceda6-155"><see cref="T:System.Collections.Specialized.BitVector32.Section" /> previo en <see cref="T:System.Collections.Specialized.BitVector32" />.</span><span class="sxs-lookup"><span data-stu-id="ceda6-155">The previous <see cref="T:System.Collections.Specialized.BitVector32.Section" /> in the <see cref="T:System.Collections.Specialized.BitVector32" />.</span></span></param>
        <summary><span data-ttu-id="ceda6-156">Crea una nueva <see cref="T:System.Collections.Specialized.BitVector32.Section" /> que sigue a la <see cref="T:System.Collections.Specialized.BitVector32.Section" /> especificada de una serie de secciones que contienen pequeños enteros.</span><span class="sxs-lookup"><span data-stu-id="ceda6-156">Creates a new <see cref="T:System.Collections.Specialized.BitVector32.Section" /> following the specified <see cref="T:System.Collections.Specialized.BitVector32.Section" /> in a series of sections that contain small integers.</span></span></summary>
        <returns><span data-ttu-id="ceda6-157"><see cref="T:System.Collections.Specialized.BitVector32.Section" /> que puede contener un número de cero a <paramref name="maxValue" />.</span><span class="sxs-lookup"><span data-stu-id="ceda6-157">A <see cref="T:System.Collections.Specialized.BitVector32.Section" /> that can hold a number from zero to <paramref name="maxValue" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ceda6-158">Un <xref:System.Collections.Specialized.BitVector32.Section> es una ventana en la <xref:System.Collections.Specialized.BitVector32> y está formado por el menor número de bits consecutivos que puede contener el valor máximo especificado en <xref:System.Collections.Specialized.BitVector32.CreateSection%2A>.</span><span class="sxs-lookup"><span data-stu-id="ceda6-158">A <xref:System.Collections.Specialized.BitVector32.Section> is a window into the <xref:System.Collections.Specialized.BitVector32> and is composed of the smallest number of consecutive bits that can contain the maximum value specified in <xref:System.Collections.Specialized.BitVector32.CreateSection%2A>.</span></span> <span data-ttu-id="ceda6-159">Por ejemplo, una sección con un valor máximo de 1 se compone de un solo bit, mientras que una sección con un valor máximo de 5 se compone de tres bits.</span><span class="sxs-lookup"><span data-stu-id="ceda6-159">For example, a section with a maximum value of 1 is composed of only one bit, whereas a section with a maximum value of 5 is composed of three bits.</span></span> <span data-ttu-id="ceda6-160">Puede crear un <xref:System.Collections.Specialized.BitVector32.Section> con un valor máximo de 1 para que actúe como un valor booleano, lo que permite almacenar números enteros y valores booleanos en la misma <xref:System.Collections.Specialized.BitVector32>.</span><span class="sxs-lookup"><span data-stu-id="ceda6-160">You can create a <xref:System.Collections.Specialized.BitVector32.Section> with a maximum value of 1 to serve as a Boolean, thereby allowing you to store integers and Booleans in the same <xref:System.Collections.Specialized.BitVector32>.</span></span>  
  
 <span data-ttu-id="ceda6-161">Si ya existen las secciones después `previous` en el <xref:System.Collections.Specialized.BitVector32>, esas secciones que siguen siendo accesibles; sin embargo, las secciones superpuestas pueden provocar resultados inesperados.</span><span class="sxs-lookup"><span data-stu-id="ceda6-161">If sections already exist after `previous` in the <xref:System.Collections.Specialized.BitVector32>, those sections are still accessible; however, overlapping sections might cause unexpected results.</span></span>  
  
 <span data-ttu-id="ceda6-162">Este método es una operación o (1).</span><span class="sxs-lookup"><span data-stu-id="ceda6-162">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ceda6-163">El siguiente ejemplo de código utiliza un <xref:System.Collections.Specialized.BitVector32> como una colección de secciones.</span><span class="sxs-lookup"><span data-stu-id="ceda6-163">The following code example uses a <xref:System.Collections.Specialized.BitVector32> as a collection of sections.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.BitVector32_Sections#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.BitVector32_Sections/CPP/bitvector32_sections.cpp#1)]
 [!code-csharp[System.Collections.Specialized.BitVector32_Sections#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.BitVector32_Sections/CS/bitvector32_sections.cs#1)]
 [!code-vb[System.Collections.Specialized.BitVector32_Sections#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.BitVector32_Sections/VB/bitvector32_sections.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ceda6-164"><paramref name="maxValue" /> es menor que 1.</span><span class="sxs-lookup"><span data-stu-id="ceda6-164"><paramref name="maxValue" /> is less than 1.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ceda6-165"><paramref name="previous" /> incluye el bit final de <see cref="T:System.Collections.Specialized.BitVector32" />.</span><span class="sxs-lookup"><span data-stu-id="ceda6-165"><paramref name="previous" /> includes the final bit in the <see cref="T:System.Collections.Specialized.BitVector32" />.</span></span>  
  
<span data-ttu-id="ceda6-166">O bien</span><span class="sxs-lookup"><span data-stu-id="ceda6-166">-or-</span></span> 
 <span data-ttu-id="ceda6-167"><paramref name="maxValue" /> es mayor que el valor más alto que puede ser representado por el número de bits situados después de <paramref name="previous" />.</span><span class="sxs-lookup"><span data-stu-id="ceda6-167"><paramref name="maxValue" /> is greater than the highest value that can be represented by the number of bits after <paramref name="previous" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public int Data { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Data" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Specialized.BitVector32.Data" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Data As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Data { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Data : int" Usage="System.Collections.Specialized.BitVector32.Data" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ceda6-168">Obtiene el valor de <see cref="T:System.Collections.Specialized.BitVector32" /> como un entero.</span><span class="sxs-lookup"><span data-stu-id="ceda6-168">Gets the value of the <see cref="T:System.Collections.Specialized.BitVector32" /> as an integer.</span></span></summary>
        <value><span data-ttu-id="ceda6-169">Valor de <see cref="T:System.Collections.Specialized.BitVector32" /> como un entero.</span><span class="sxs-lookup"><span data-stu-id="ceda6-169">The value of the <see cref="T:System.Collections.Specialized.BitVector32" /> as an integer.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ceda6-170">Para obtener acceso al valor de las secciones individuales o marcas de bits, utilice el <xref:System.Collections.Specialized.BitVector32.Item%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="ceda6-170">To access the value of the individual sections or bit flags, use the <xref:System.Collections.Specialized.BitVector32.Item%2A> property.</span></span>  
  
 <span data-ttu-id="ceda6-171">La recuperación del valor de esta propiedad es una operación O(1).</span><span class="sxs-lookup"><span data-stu-id="ceda6-171">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.Specialized.BitVector32.Item(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.BitVector32.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="bitVector32.Equals o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o"><span data-ttu-id="ceda6-172">Objeto que se va a comparar con el objeto <see cref="T:System.Collections.Specialized.BitVector32" /> actual.</span><span class="sxs-lookup"><span data-stu-id="ceda6-172">The object to compare with the current <see cref="T:System.Collections.Specialized.BitVector32" />.</span></span></param>
        <summary><span data-ttu-id="ceda6-173">Determina si el objeto especificado es igual a <see cref="T:System.Collections.Specialized.BitVector32" />.</span><span class="sxs-lookup"><span data-stu-id="ceda6-173">Determines whether the specified object is equal to the <see cref="T:System.Collections.Specialized.BitVector32" />.</span></span></summary>
        <returns><span data-ttu-id="ceda6-174">Es <see langword="true" /> si el objeto especificado es igual a <see cref="T:System.Collections.Specialized.BitVector32" />; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ceda6-174"><see langword="true" /> if the specified object is equal to the <see cref="T:System.Collections.Specialized.BitVector32" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ceda6-175">El objeto `o` se considera igual a la <xref:System.Collections.Specialized.BitVector32> si el tipo de `o` es compatible con la <xref:System.Collections.Specialized.BitVector32> tipo y si el valor de `o` es igual al valor de <xref:System.Collections.Specialized.BitVector32.Data%2A>.</span><span class="sxs-lookup"><span data-stu-id="ceda6-175">The object `o` is considered equal to the <xref:System.Collections.Specialized.BitVector32> if the type of `o` is compatible with the <xref:System.Collections.Specialized.BitVector32> type and if the value of `o` is equal to the value of <xref:System.Collections.Specialized.BitVector32.Data%2A>.</span></span>  
  
 <span data-ttu-id="ceda6-176">Este método es una operación o (1).</span><span class="sxs-lookup"><span data-stu-id="ceda6-176">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ceda6-177">El siguiente código en el ejemplo se compara un <xref:System.Collections.Specialized.BitVector32> con otra <xref:System.Collections.Specialized.BitVector32> y con un <xref:System.Int32>.</span><span class="sxs-lookup"><span data-stu-id="ceda6-177">The following code example compares a <xref:System.Collections.Specialized.BitVector32> with another <xref:System.Collections.Specialized.BitVector32> and with an <xref:System.Int32>.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.BitVector32.Equals#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.BitVector32.Equals/CPP/bitvector32_equals.cpp#1)]
 [!code-csharp[System.Collections.Specialized.BitVector32.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.BitVector32.Equals/CS/bitvector32_equals.cs#1)]
 [!code-vb[System.Collections.Specialized.BitVector32.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.BitVector32.Equals/VB/bitvector32_equals.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.BitVector32.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="bitVector32.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ceda6-178">Sirve como función hash para <see cref="T:System.Collections.Specialized.BitVector32" />.</span><span class="sxs-lookup"><span data-stu-id="ceda6-178">Serves as a hash function for the <see cref="T:System.Collections.Specialized.BitVector32" />.</span></span></summary>
        <returns><span data-ttu-id="ceda6-179">Código hash para <see cref="T:System.Collections.Specialized.BitVector32" />.</span><span class="sxs-lookup"><span data-stu-id="ceda6-179">A hash code for the <see cref="T:System.Collections.Specialized.BitVector32" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ceda6-180">El código hash de un <xref:System.Collections.Specialized.BitVector32> se basa en el valor de <xref:System.Collections.Specialized.BitVector32.Data%2A>.</span><span class="sxs-lookup"><span data-stu-id="ceda6-180">The hash code of a <xref:System.Collections.Specialized.BitVector32> is based on the value of <xref:System.Collections.Specialized.BitVector32.Data%2A>.</span></span> <span data-ttu-id="ceda6-181">Dos instancias de <xref:System.Collections.Specialized.BitVector32> con el mismo valor para <xref:System.Collections.Specialized.BitVector32.Data%2A> también generará el mismo código hash.</span><span class="sxs-lookup"><span data-stu-id="ceda6-181">Two instances of <xref:System.Collections.Specialized.BitVector32> with the same value for <xref:System.Collections.Specialized.BitVector32.Data%2A> will also generate the same hash code.</span></span>  
  
 <span data-ttu-id="ceda6-182">Este método es una operación o (1).</span><span class="sxs-lookup"><span data-stu-id="ceda6-182">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ceda6-183">Obtiene o establece el valor de la sección especificada o del marcador de bits.</span><span class="sxs-lookup"><span data-stu-id="ceda6-183">Gets or sets the value of the specified section or bit flag.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public int this[System.Collections.Specialized.BitVector32.Section section] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Item(valuetype System.Collections.Specialized.BitVector32/Section)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Specialized.BitVector32.Item(System.Collections.Specialized.BitVector32.Section)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(section As BitVector32.Section) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int default[System::Collections::Specialized::BitVector32::Section] { int get(System::Collections::Specialized::BitVector32::Section section); void set(System::Collections::Specialized::BitVector32::Section section, int value); };" />
      <MemberSignature Language="F#" Value="member this.Item(System.Collections.Specialized.BitVector32.Section) : int with get, set" Usage="System.Collections.Specialized.BitVector32.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="section" Type="System.Collections.Specialized.BitVector32+Section" />
      </Parameters>
      <Docs>
        <param name="section"><span data-ttu-id="ceda6-184"><see cref="T:System.Collections.Specialized.BitVector32.Section" /> que contiene el valor que hay que obtener o establecer.</span><span class="sxs-lookup"><span data-stu-id="ceda6-184">A <see cref="T:System.Collections.Specialized.BitVector32.Section" /> that contains the value to get or set.</span></span></param>
        <summary><span data-ttu-id="ceda6-185">Obtiene o establece el valor almacenado en la <see cref="T:System.Collections.Specialized.BitVector32.Section" /> especificada.</span><span class="sxs-lookup"><span data-stu-id="ceda6-185">Gets or sets the value stored in the specified <see cref="T:System.Collections.Specialized.BitVector32.Section" />.</span></span></summary>
        <value><span data-ttu-id="ceda6-186">Valor almacenado en la <see cref="T:System.Collections.Specialized.BitVector32.Section" /> especificada.</span><span class="sxs-lookup"><span data-stu-id="ceda6-186">The value stored in the specified <see cref="T:System.Collections.Specialized.BitVector32.Section" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ceda6-187">El <xref:System.Collections.Specialized.BitVector32.Item%2A> propiedad [Section] es el indizador para un <xref:System.Collections.Specialized.BitVector32> que está configurado como secciones y el <xref:System.Collections.Specialized.BitVector32.Item%2A> propiedad [int] es el indizador para un <xref:System.Collections.Specialized.BitVector32> que está configurado en marcadores de bits.</span><span class="sxs-lookup"><span data-stu-id="ceda6-187">The <xref:System.Collections.Specialized.BitVector32.Item%2A> [Section] property is the indexer for a <xref:System.Collections.Specialized.BitVector32> that is set up as sections, and the <xref:System.Collections.Specialized.BitVector32.Item%2A> [int] property is the indexer for a <xref:System.Collections.Specialized.BitVector32> that is set up as bit flags.</span></span>  
  
 <span data-ttu-id="ceda6-188">Un <xref:System.Collections.Specialized.BitVector32.Section> es una ventana en la <xref:System.Collections.Specialized.BitVector32> y está formado por el menor número de bits consecutivos que puede contener el valor máximo especificado en <xref:System.Collections.Specialized.BitVector32.CreateSection%2A>.</span><span class="sxs-lookup"><span data-stu-id="ceda6-188">A <xref:System.Collections.Specialized.BitVector32.Section> is a window into the <xref:System.Collections.Specialized.BitVector32> and is composed of the smallest number of consecutive bits that can contain the maximum value specified in <xref:System.Collections.Specialized.BitVector32.CreateSection%2A>.</span></span> <span data-ttu-id="ceda6-189">Por ejemplo, una sección con un valor máximo de 1 se compone de un solo bit, mientras que una sección con un valor máximo de 5 se compone de tres bits.</span><span class="sxs-lookup"><span data-stu-id="ceda6-189">For example, a section with a maximum value of 1 is composed of only one bit, whereas a section with a maximum value of 5 is composed of three bits.</span></span> <span data-ttu-id="ceda6-190">Puede crear un <xref:System.Collections.Specialized.BitVector32.Section> con un valor máximo de 1 para que actúe como un valor booleano, lo que permite almacenar números enteros y valores booleanos en la misma <xref:System.Collections.Specialized.BitVector32>.</span><span class="sxs-lookup"><span data-stu-id="ceda6-190">You can create a <xref:System.Collections.Specialized.BitVector32.Section> with a maximum value of 1 to serve as a Boolean, thereby allowing you to store integers and Booleans in the same <xref:System.Collections.Specialized.BitVector32>.</span></span>  
  
 <span data-ttu-id="ceda6-191">El lenguaje C# utiliza la palabra clave para definir los indizadores en lugar de implementar el <xref:System.Collections.Specialized.BitVector32.Item%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="ceda6-191">The C# language uses the  keyword to define the indexers instead of implementing the <xref:System.Collections.Specialized.BitVector32.Item%2A> property.</span></span> <span data-ttu-id="ceda6-192">Visual Basic implementa <xref:System.Collections.Specialized.BitVector32.Item%2A> como propiedad predeterminada, lo que proporciona la misma funcionalidad de indización.</span><span class="sxs-lookup"><span data-stu-id="ceda6-192">Visual Basic implements <xref:System.Collections.Specialized.BitVector32.Item%2A> as a default property, which provides the same indexing functionality.</span></span>  
  
 <span data-ttu-id="ceda6-193">Recuperar el valor de esta propiedad es una operación o (1); establecer la propiedad también es una operación o (1).</span><span class="sxs-lookup"><span data-stu-id="ceda6-193">Retrieving the value of this property is an O(1) operation; setting the property is also an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Specialized.BitVector32.CreateSection(System.Int16)" />
        <altmember cref="T:System.Collections.Specialized.BitVector32.Section" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public bool this[int bit] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Specialized.BitVector32.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(bit As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool default[int] { bool get(int bit); void set(int bit, bool value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : bool with get, set" Usage="System.Collections.Specialized.BitVector32.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bit" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bit"><span data-ttu-id="ceda6-194">Máscara que indica el bit que hay que obtener o establecer.</span><span class="sxs-lookup"><span data-stu-id="ceda6-194">A mask that indicates the bit to get or set.</span></span></param>
        <summary><span data-ttu-id="ceda6-195">Obtiene o establece el estado del marcador de bits que indica la máscara especificada.</span><span class="sxs-lookup"><span data-stu-id="ceda6-195">Gets or sets the state of the bit flag indicated by the specified mask.</span></span></summary>
        <value><span data-ttu-id="ceda6-196"><see langword="true" /> si el marcador de bits especificado está activo (1); en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ceda6-196"><see langword="true" /> if the specified bit flag is on (1); otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ceda6-197">El <xref:System.Collections.Specialized.BitVector32.Item%2A> propiedad [Section] es el indizador para un <xref:System.Collections.Specialized.BitVector32> que está configurado como secciones y el <xref:System.Collections.Specialized.BitVector32.Item%2A> propiedad [int] es el indizador para un <xref:System.Collections.Specialized.BitVector32> que está configurado en marcadores de bits.</span><span class="sxs-lookup"><span data-stu-id="ceda6-197">The <xref:System.Collections.Specialized.BitVector32.Item%2A> [Section] property is the indexer for a <xref:System.Collections.Specialized.BitVector32> that is set up as sections, and the <xref:System.Collections.Specialized.BitVector32.Item%2A> [int] property is the indexer for a <xref:System.Collections.Specialized.BitVector32> that is set up as bit flags.</span></span>  
  
 <span data-ttu-id="ceda6-198">Uso de esta propiedad en un <xref:System.Collections.Specialized.BitVector32> que está configurado en secciones, puede causar resultados inesperados.</span><span class="sxs-lookup"><span data-stu-id="ceda6-198">Using this property on a <xref:System.Collections.Specialized.BitVector32> that is set up as sections might cause unexpected results.</span></span>  
  
 <span data-ttu-id="ceda6-199">El lenguaje C# utiliza la palabra clave para definir los indizadores en lugar de implementar el <xref:System.Collections.Specialized.BitVector32.Item%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="ceda6-199">The C# language uses the  keyword to define the indexers instead of implementing the <xref:System.Collections.Specialized.BitVector32.Item%2A> property.</span></span> <span data-ttu-id="ceda6-200">Visual Basic implementa <xref:System.Collections.Specialized.BitVector32.Item%2A> como propiedad predeterminada, lo que proporciona la misma funcionalidad de indización.</span><span class="sxs-lookup"><span data-stu-id="ceda6-200">Visual Basic implements <xref:System.Collections.Specialized.BitVector32.Item%2A> as a default property, which provides the same indexing functionality.</span></span>  
  
 <span data-ttu-id="ceda6-201">Recuperar el valor de esta propiedad es una operación o (1); establecer la propiedad también es una operación o (1).</span><span class="sxs-lookup"><span data-stu-id="ceda6-201">Retrieving the value of this property is an O(1) operation; setting the property is also an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Specialized.BitVector32.CreateMask" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ceda6-202">Devuelve una cadena que representa una estructura <see cref="T:System.Collections.Specialized.BitVector32" />.</span><span class="sxs-lookup"><span data-stu-id="ceda6-202">Returns a string that represents a <see cref="T:System.Collections.Specialized.BitVector32" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.BitVector32.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="bitVector32.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ceda6-203">Devuelve una cadena que representa el objeto <see cref="T:System.Collections.Specialized.BitVector32" /> actual.</span><span class="sxs-lookup"><span data-stu-id="ceda6-203">Returns a string that represents the current <see cref="T:System.Collections.Specialized.BitVector32" />.</span></span></summary>
        <returns><span data-ttu-id="ceda6-204">Cadena que representa el objeto <see cref="T:System.Collections.Specialized.BitVector32" /> actual.</span><span class="sxs-lookup"><span data-stu-id="ceda6-204">A string that represents the current <see cref="T:System.Collections.Specialized.BitVector32" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ceda6-205">Este método invalida <xref:System.Object.ToString%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ceda6-205">This method overrides <xref:System.Object.ToString%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="ceda6-206">Este método es una operación o (1).</span><span class="sxs-lookup"><span data-stu-id="ceda6-206">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.ToString" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (System.Collections.Specialized.BitVector32 value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(valuetype System.Collections.Specialized.BitVector32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.BitVector32.ToString(System.Collections.Specialized.BitVector32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As BitVector32) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::Collections::Specialized::BitVector32 value);" />
      <MemberSignature Language="F#" Value="static member ToString : System.Collections.Specialized.BitVector32 -&gt; string" Usage="System.Collections.Specialized.BitVector32.ToString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Collections.Specialized.BitVector32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ceda6-207">Estructura <see cref="T:System.Collections.Specialized.BitVector32" /> que se va a representar.</span><span class="sxs-lookup"><span data-stu-id="ceda6-207">The <see cref="T:System.Collections.Specialized.BitVector32" /> to represent.</span></span></param>
        <summary><span data-ttu-id="ceda6-208">Devuelve una cadena que representa la estructura <see cref="T:System.Collections.Specialized.BitVector32" /> especificada.</span><span class="sxs-lookup"><span data-stu-id="ceda6-208">Returns a string that represents the specified <see cref="T:System.Collections.Specialized.BitVector32" />.</span></span></summary>
        <returns><span data-ttu-id="ceda6-209">Una cadena que representa la estructura <see cref="T:System.Collections.Specialized.BitVector32" /> especificada.</span><span class="sxs-lookup"><span data-stu-id="ceda6-209">A string that represents the specified <see cref="T:System.Collections.Specialized.BitVector32" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ceda6-210">Este método es una operación o (1).</span><span class="sxs-lookup"><span data-stu-id="ceda6-210">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
  </Members>
</Type>
<Type Name="ListDictionary" FullName="System.Collections.Specialized.ListDictionary">
  <Metadata><Meta Name="ms.openlocfilehash" Value="301615296bc58a6467d3162d89fe2117dd4ca35f" /><Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="11/29/2018" /><Meta Name="ms.locfileid" Value="52614377" /></Metadata><TypeSignature Language="C#" Value="public class ListDictionary : System.Collections.IDictionary" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit ListDictionary extends System.Object implements class System.Collections.ICollection, class System.Collections.IDictionary, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Specialized.ListDictionary" />
  <TypeSignature Language="VB.NET" Value="Public Class ListDictionary&#xA;Implements IDictionary" />
  <TypeSignature Language="C++ CLI" Value="public ref class ListDictionary : System::Collections::IDictionary" />
  <TypeSignature Language="F#" Value="type ListDictionary = class&#xA;    interface IDictionary&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.Specialized</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IDictionary</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="07cb1-101">Implementa <see langword="IDictionary" /> utilizando una lista de vínculo única.</span><span class="sxs-lookup"><span data-stu-id="07cb1-101">Implements <see langword="IDictionary" /> using a singly linked list.</span></span> <span data-ttu-id="07cb1-102">Se recomienda para las colecciones que normalmente contienen menos de 10 elementos.</span><span class="sxs-lookup"><span data-stu-id="07cb1-102">Recommended for collections that typically include fewer than 10 items.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07cb1-103">Se trata de una implementación sencilla de <xref:System.Collections.IDictionary> mediante una lista vinculada individualmente.</span><span class="sxs-lookup"><span data-stu-id="07cb1-103">This is a simple implementation of <xref:System.Collections.IDictionary> using a singly linked list.</span></span> <span data-ttu-id="07cb1-104">Es más pequeño y más rápido que un <xref:System.Collections.Hashtable> si el número de elementos es de 10 o menos.</span><span class="sxs-lookup"><span data-stu-id="07cb1-104">It is smaller and faster than a <xref:System.Collections.Hashtable> if the number of elements is 10 or less.</span></span> <span data-ttu-id="07cb1-105">No debe usarse si el rendimiento es importante para un gran número de elementos.</span><span class="sxs-lookup"><span data-stu-id="07cb1-105">This should not be used if performance is important for large numbers of elements.</span></span>  
  
 <span data-ttu-id="07cb1-106">Los elementos de un <xref:System.Collections.Specialized.ListDictionary> no están en cualquier garantiza el orden; código no debe depender del pedido actual.</span><span class="sxs-lookup"><span data-stu-id="07cb1-106">Items in a <xref:System.Collections.Specialized.ListDictionary> are not in any guaranteed order; code should not depend on the current order.</span></span> <span data-ttu-id="07cb1-107">El <xref:System.Collections.Specialized.ListDictionary> se ha implementado de fast con clave de recuperación; el orden interno real de elementos es depende de la implementación y podría cambiar en futuras versiones del producto.</span><span class="sxs-lookup"><span data-stu-id="07cb1-107">The <xref:System.Collections.Specialized.ListDictionary> is implemented for fast keyed retrieval; the actual internal order of items is implementation-dependent and could change in future versions of the product.</span></span>  
  
 <span data-ttu-id="07cb1-108">Los miembros, como <xref:System.Collections.Specialized.ListDictionary.Item%2A>, <xref:System.Collections.Specialized.ListDictionary.Add%2A>, <xref:System.Collections.Specialized.ListDictionary.Remove%2A>, y <xref:System.Collections.Specialized.ListDictionary.Contains%2A> son O (`n`) las operaciones, donde `n` es <xref:System.Collections.Specialized.ListDictionary.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="07cb1-108">Members, such as <xref:System.Collections.Specialized.ListDictionary.Item%2A>, <xref:System.Collections.Specialized.ListDictionary.Add%2A>, <xref:System.Collections.Specialized.ListDictionary.Remove%2A>, and <xref:System.Collections.Specialized.ListDictionary.Contains%2A> are O(`n`) operations, where `n` is <xref:System.Collections.Specialized.ListDictionary.Count%2A>.</span></span>  
  
 <span data-ttu-id="07cb1-109">No puede ser una clave `null`, pero un valor Sí.</span><span class="sxs-lookup"><span data-stu-id="07cb1-109">A key cannot be `null`, but a value can.</span></span>  
  
 <span data-ttu-id="07cb1-110">El `foreach` instrucción del lenguaje C# (`for each` en Visual Basic) devuelve un objeto del tipo de los elementos de la colección.</span><span class="sxs-lookup"><span data-stu-id="07cb1-110">The `foreach` statement of the C# language (`for each` in Visual Basic) returns an object of the type of the elements in the collection.</span></span> <span data-ttu-id="07cb1-111">Puesto que cada elemento de la <xref:System.Collections.Specialized.ListDictionary> es un par clave/valor, el tipo de elemento no es el tipo de la clave o el tipo del valor.</span><span class="sxs-lookup"><span data-stu-id="07cb1-111">Since each element of the <xref:System.Collections.Specialized.ListDictionary> is a key/value pair, the element type is not the type of the key or the type of the value.</span></span> <span data-ttu-id="07cb1-112">En su lugar, el tipo de elemento es <xref:System.Collections.DictionaryEntry>.</span><span class="sxs-lookup"><span data-stu-id="07cb1-112">Instead, the element type is <xref:System.Collections.DictionaryEntry>.</span></span> <span data-ttu-id="07cb1-113">Por ejemplo:</span><span class="sxs-lookup"><span data-stu-id="07cb1-113">For example:</span></span>  
  
 [!code-cpp[System.Collections.Specialized.ListDictionary2#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.ListDictionary2/CPP/source2.cpp#3)]
 [!code-csharp[System.Collections.Specialized.ListDictionary2#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.ListDictionary2/CS/source2.cs#3)]
 [!code-vb[System.Collections.Specialized.ListDictionary2#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.ListDictionary2/VB/source2.vb#3)]  
  
 <span data-ttu-id="07cb1-114">El `foreach` instrucción es un contenedor del enumerador, que sólo permite la lectura desde no escribir en la colección.</span><span class="sxs-lookup"><span data-stu-id="07cb1-114">The `foreach` statement is a wrapper around the enumerator, which only allows reading from, not writing to, the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="07cb1-115">En el ejemplo de código siguiente se muestra algunas de las propiedades y métodos de <xref:System.Collections.Specialized.ListDictionary>.</span><span class="sxs-lookup"><span data-stu-id="07cb1-115">The following code example demonstrates several of the properties and methods of <xref:System.Collections.Specialized.ListDictionary>.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.ListDictionary2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.ListDictionary2/CPP/listdictionary.cpp#1)]
 [!code-csharp[System.Collections.Specialized.ListDictionary2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.ListDictionary2/CS/listdictionary.cs#1)]
 [!code-vb[System.Collections.Specialized.ListDictionary2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.ListDictionary2/VB/listdictionary.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="07cb1-116">Estáticos públicos (<see langword="Shared" /> en Visual Basic) los miembros de este tipo son seguros para subprocesos.</span><span class="sxs-lookup"><span data-stu-id="07cb1-116">Public static (<see langword="Shared" /> in Visual Basic) members of this type are thread safe.</span></span> <span data-ttu-id="07cb1-117">No se garantiza que los miembros de instancias sean seguros para la ejecución de subprocesos.</span><span class="sxs-lookup"><span data-stu-id="07cb1-117">Any instance members are not guaranteed to be thread safe.</span></span>  
  
<span data-ttu-id="07cb1-118">Esta implementación no proporciona un sincronizados contenedor (es seguro para subprocesos) para un <see cref="T:System.Collections.Specialized.ListDictionary" />, pero las clases derivadas pueden crear sus propias versiones sincronizadas de los <see cref="T:System.Collections.Specialized.ListDictionary" /> utilizando el <see cref="P:System.Collections.Specialized.ListDictionary.SyncRoot" /> propiedad.</span><span class="sxs-lookup"><span data-stu-id="07cb1-118">This implementation does not provide a synchronized (thread safe) wrapper for a <see cref="T:System.Collections.Specialized.ListDictionary" />, but derived classes can create their own synchronized versions of the <see cref="T:System.Collections.Specialized.ListDictionary" /> using the <see cref="P:System.Collections.Specialized.ListDictionary.SyncRoot" /> property.</span></span>  
  
<span data-ttu-id="07cb1-119">Enumerar una colección no es intrínsecamente un procedimiento seguro para subprocesos.</span><span class="sxs-lookup"><span data-stu-id="07cb1-119">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="07cb1-120">Incluso cuando una colección está sincronizada, otros subprocesos todavía pueden modificarla, lo que hace que el enumerador produzca una excepción.</span><span class="sxs-lookup"><span data-stu-id="07cb1-120">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="07cb1-121">Con el fin de garantizar la seguridad para la ejecución de subprocesos durante la enumeración, se puede bloquear la colección durante toda la enumeración o detectar las excepciones resultantes de los cambios realizados por otros subprocesos.</span><span class="sxs-lookup"><span data-stu-id="07cb1-121">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span></threadsafe>
    <altmember cref="T:System.Collections.IDictionary" />
    <altmember cref="T:System.Collections.Hashtable" />
    <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations.md"><span data-ttu-id="07cb1-122">Realizar operaciones de cadenas que no distinguen entre referencias culturales</span><span class="sxs-lookup"><span data-stu-id="07cb1-122">Performing Culture-Insensitive String Operations</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="07cb1-123">Inicializa una nueva instancia de la clase <see cref="T:System.Collections.Specialized.ListDictionary" />.</span><span class="sxs-lookup"><span data-stu-id="07cb1-123">Initializes a new instance of the <see cref="T:System.Collections.Specialized.ListDictionary" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListDictionary ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.ListDictionary.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListDictionary();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="07cb1-124">Crea un <see cref="T:System.Collections.Specialized.ListDictionary" /> vacío mediante el comparador predeterminado.</span><span class="sxs-lookup"><span data-stu-id="07cb1-124">Creates an empty <see cref="T:System.Collections.Specialized.ListDictionary" /> using the default comparer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07cb1-125">El comparador determina si dos claves son iguales.</span><span class="sxs-lookup"><span data-stu-id="07cb1-125">The comparer determines whether two keys are equal.</span></span> <span data-ttu-id="07cb1-126">Todas las claves de un <xref:System.Collections.Specialized.ListDictionary> deben ser únicos.</span><span class="sxs-lookup"><span data-stu-id="07cb1-126">Every key in a <xref:System.Collections.Specialized.ListDictionary> must be unique.</span></span> <span data-ttu-id="07cb1-127">El comparador predeterminado es la implementación de la clave <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="07cb1-127">The default comparer is the key's implementation of <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="07cb1-128">Este constructor es una operación o (1).</span><span class="sxs-lookup"><span data-stu-id="07cb1-128">This constructor is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="07cb1-129">En el ejemplo de código siguiente se muestra algunas de las propiedades y métodos de <xref:System.Collections.Specialized.ListDictionary>.</span><span class="sxs-lookup"><span data-stu-id="07cb1-129">The following code example demonstrates several of the properties and methods of <xref:System.Collections.Specialized.ListDictionary>.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.ListDictionary2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.ListDictionary2/CPP/listdictionary.cpp#1)]
 [!code-csharp[System.Collections.Specialized.ListDictionary2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.ListDictionary2/CS/listdictionary.cs#1)]
 [!code-vb[System.Collections.Specialized.ListDictionary2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.ListDictionary2/VB/listdictionary.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations.md"><span data-ttu-id="07cb1-130">Realizar operaciones de cadenas que no distinguen entre referencias culturales</span><span class="sxs-lookup"><span data-stu-id="07cb1-130">Performing Culture-Insensitive String Operations</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListDictionary (System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.ListDictionary.#ctor(System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (comparer As IComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListDictionary(System::Collections::IComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="new System.Collections.Specialized.ListDictionary : System.Collections.IComparer -&gt; System.Collections.Specialized.ListDictionary" Usage="new System.Collections.Specialized.ListDictionary comparer" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="comparer"><span data-ttu-id="07cb1-131"><see cref="T:System.Collections.IComparer" /> que se va a utilizar para determinar si dos claves son iguales.</span><span class="sxs-lookup"><span data-stu-id="07cb1-131">The <see cref="T:System.Collections.IComparer" /> to use to determine whether two keys are equal.</span></span>  
  
<span data-ttu-id="07cb1-132">O bien</span><span class="sxs-lookup"><span data-stu-id="07cb1-132">-or-</span></span> 
 <span data-ttu-id="07cb1-133"><see langword="null" /> para utilizar el comparador predeterminado, que es la implementación de cada clave de <see cref="M:System.Object.Equals(System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="07cb1-133"><see langword="null" /> to use the default comparer, which is each key's implementation of <see cref="M:System.Object.Equals(System.Object)" />.</span></span></param>
        <summary><span data-ttu-id="07cb1-134">Crea un <see cref="T:System.Collections.Specialized.ListDictionary" /> vacío mediante el comparador especificado.</span><span class="sxs-lookup"><span data-stu-id="07cb1-134">Creates an empty <see cref="T:System.Collections.Specialized.ListDictionary" /> using the specified comparer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07cb1-135">El comparador determina si dos claves son iguales.</span><span class="sxs-lookup"><span data-stu-id="07cb1-135">The comparer determines whether two keys are equal.</span></span> <span data-ttu-id="07cb1-136">Todas las claves de un <xref:System.Collections.Specialized.ListDictionary> deben ser únicos.</span><span class="sxs-lookup"><span data-stu-id="07cb1-136">Every key in a <xref:System.Collections.Specialized.ListDictionary> must be unique.</span></span> <span data-ttu-id="07cb1-137">El comparador predeterminado es la implementación de la clave <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="07cb1-137">The default comparer is the key's implementation of <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="07cb1-138">El comparador personalizado permite escenarios como realizar búsquedas con cadenas de mayúsculas y minúsculas.</span><span class="sxs-lookup"><span data-stu-id="07cb1-138">The custom comparer enables such scenarios as doing lookups with case-insensitive strings.</span></span>  
  
 <span data-ttu-id="07cb1-139">Este constructor es una operación o (1).</span><span class="sxs-lookup"><span data-stu-id="07cb1-139">This constructor is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="M:System.Object.Equals(System.Object)" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations.md"><span data-ttu-id="07cb1-140">Realizar operaciones de cadenas que no distinguen entre referencias culturales</span><span class="sxs-lookup"><span data-stu-id="07cb1-140">Performing Culture-Insensitive String Operations</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (object key, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(object key, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.ListDictionary.Add(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (key As Object, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(System::Object ^ key, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Add : obj * obj -&gt; unit&#xA;override this.Add : obj * obj -&gt; unit" Usage="listDictionary.Add (key, value)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Add(System.Object,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="07cb1-141">Clave de la entrada que se va a agregar.</span><span class="sxs-lookup"><span data-stu-id="07cb1-141">The key of the entry to add.</span></span></param>
        <param name="value"><span data-ttu-id="07cb1-142">Valor de la entrada que se va a agregar.</span><span class="sxs-lookup"><span data-stu-id="07cb1-142">The value of the entry to add.</span></span> <span data-ttu-id="07cb1-143">El valor puede ser <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="07cb1-143">The value can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="07cb1-144">Agrega una entrada con la clave y el valor especificados a <see cref="T:System.Collections.Specialized.ListDictionary" />.</span><span class="sxs-lookup"><span data-stu-id="07cb1-144">Adds an entry with the specified key and value into the <see cref="T:System.Collections.Specialized.ListDictionary" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07cb1-145">Un objeto que no tiene ninguna correlación entre su estado y su valor de código hash normalmente no se recomienda como clave.</span><span class="sxs-lookup"><span data-stu-id="07cb1-145">An object that has no correlation between its state and its hash code value should typically not be used as the key.</span></span> <span data-ttu-id="07cb1-146">Por ejemplo, objetos de cadena son mejores que los objetos de StringBuilder para su uso como claves.</span><span class="sxs-lookup"><span data-stu-id="07cb1-146">For example, String objects are better than StringBuilder objects for use as keys.</span></span>  
  
 <span data-ttu-id="07cb1-147">También puede usar el <xref:System.Collections.Specialized.ListDictionary.Item%2A> propiedad para agregar nuevos elementos estableciendo el valor de una clave que no existe en el <xref:System.Collections.Specialized.ListDictionary>; por ejemplo, `myCollection["myNonexistentKey"] = myValue`.</span><span class="sxs-lookup"><span data-stu-id="07cb1-147">You can also use the <xref:System.Collections.Specialized.ListDictionary.Item%2A> property to add new elements by setting the value of a key that does not exist in the <xref:System.Collections.Specialized.ListDictionary>; for example, `myCollection["myNonexistentKey"] = myValue`.</span></span> <span data-ttu-id="07cb1-148">Sin embargo, si la clave especificada ya existe en el <xref:System.Collections.Specialized.ListDictionary>, estableciendo el <xref:System.Collections.Specialized.ListDictionary.Item%2A> propiedad sobrescribe el valor anterior.</span><span class="sxs-lookup"><span data-stu-id="07cb1-148">However, if the specified key already exists in the <xref:System.Collections.Specialized.ListDictionary>, setting the <xref:System.Collections.Specialized.ListDictionary.Item%2A> property overwrites the old value.</span></span> <span data-ttu-id="07cb1-149">En cambio, el <xref:System.Collections.Specialized.ListDictionary.Add%2A> método no modifica los elementos existentes.</span><span class="sxs-lookup"><span data-stu-id="07cb1-149">In contrast, the <xref:System.Collections.Specialized.ListDictionary.Add%2A> method does not modify existing elements.</span></span>  
  
 <span data-ttu-id="07cb1-150">Este método es O (`n`) operación, donde `n` es <xref:System.Collections.Specialized.ListDictionary.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="07cb1-150">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.ListDictionary.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="07cb1-151">En el ejemplo de código siguiente se agrega a y quita elementos de un <xref:System.Collections.Specialized.ListDictionary>.</span><span class="sxs-lookup"><span data-stu-id="07cb1-151">The following code example adds to and removes elements from a <xref:System.Collections.Specialized.ListDictionary>.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.ListDictionary_AddRemove#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.ListDictionary_AddRemove/CPP/listdictionary_addremove.cpp#1)]
 [!code-csharp[System.Collections.Specialized.ListDictionary_AddRemove#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.ListDictionary_AddRemove/CS/listdictionary_addremove.cs#1)]
 [!code-vb[System.Collections.Specialized.ListDictionary_AddRemove#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.ListDictionary_AddRemove/VB/listdictionary_addremove.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="07cb1-152">El valor de <paramref name="key" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="07cb1-152"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="07cb1-153">Ya existe una entrada con la misma clave en <see cref="T:System.Collections.Specialized.ListDictionary" />.</span><span class="sxs-lookup"><span data-stu-id="07cb1-153">An entry with the same key already exists in the <see cref="T:System.Collections.Specialized.ListDictionary" />.</span></span></exception>
        <altmember cref="M:System.Collections.Specialized.ListDictionary.Remove(System.Object)" />
        <altmember cref="P:System.Collections.Specialized.ListDictionary.Item(System.Object)" />
        <altmember cref="M:System.Collections.IDictionary.Add(System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.ListDictionary.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="listDictionary.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="07cb1-154">Quita todas las entradas de <see cref="T:System.Collections.Specialized.ListDictionary" />.</span><span class="sxs-lookup"><span data-stu-id="07cb1-154">Removes all entries from the <see cref="T:System.Collections.Specialized.ListDictionary" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07cb1-155"><xref:System.Collections.Specialized.ListDictionary.Count%2A> está establecido en cero y también se liberan las referencias a otros objetos de elementos de la colección.</span><span class="sxs-lookup"><span data-stu-id="07cb1-155"><xref:System.Collections.Specialized.ListDictionary.Count%2A> is set to zero, and references to other objects from elements of the collection are also released.</span></span>  
  
 <span data-ttu-id="07cb1-156">Este método es una operación o (1).</span><span class="sxs-lookup"><span data-stu-id="07cb1-156">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="07cb1-157">En el ejemplo de código siguiente se agrega a y quita elementos de un <xref:System.Collections.Specialized.ListDictionary>.</span><span class="sxs-lookup"><span data-stu-id="07cb1-157">The following code example adds to and removes elements from a <xref:System.Collections.Specialized.ListDictionary>.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.ListDictionary_AddRemove#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.ListDictionary_AddRemove/CPP/listdictionary_addremove.cpp#1)]
 [!code-csharp[System.Collections.Specialized.ListDictionary_AddRemove#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.ListDictionary_AddRemove/CS/listdictionary_addremove.cs#1)]
 [!code-vb[System.Collections.Specialized.ListDictionary_AddRemove#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.ListDictionary_AddRemove/VB/listdictionary_addremove.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.IDictionary.Clear" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (object key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.ListDictionary.Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (key As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(System::Object ^ key);" />
      <MemberSignature Language="F#" Value="abstract member Contains : obj -&gt; bool&#xA;override this.Contains : obj -&gt; bool" Usage="listDictionary.Contains key" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="07cb1-158">Clave que se buscará en <see cref="T:System.Collections.Specialized.ListDictionary" />.</span><span class="sxs-lookup"><span data-stu-id="07cb1-158">The key to locate in the <see cref="T:System.Collections.Specialized.ListDictionary" />.</span></span></param>
        <summary><span data-ttu-id="07cb1-159">Determina si <see cref="T:System.Collections.Specialized.ListDictionary" /> contiene una clave específica.</span><span class="sxs-lookup"><span data-stu-id="07cb1-159">Determines whether the <see cref="T:System.Collections.Specialized.ListDictionary" /> contains a specific key.</span></span></summary>
        <returns><span data-ttu-id="07cb1-160">Es <see langword="true" /> si <see cref="T:System.Collections.Specialized.ListDictionary" /> contiene una entrada con la clave especificada; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="07cb1-160"><see langword="true" /> if the <see cref="T:System.Collections.Specialized.ListDictionary" /> contains an entry with the specified key; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07cb1-161">Este método es O (`n`) operación, donde `n` es <xref:System.Collections.Specialized.ListDictionary.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="07cb1-161">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.ListDictionary.Count%2A>.</span></span>  
  
 <span data-ttu-id="07cb1-162">A partir de .NET Framework 2.0, este método utiliza los objetos de la colección <xref:System.Object.Equals%2A> y <xref:System.IComparable.CompareTo%2A> métodos en `key` para determinar si `item` existe.</span><span class="sxs-lookup"><span data-stu-id="07cb1-162">Starting with the .NET Framework 2.0, this method uses the collection's objects' <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `key` to determine whether `item` exists.</span></span> <span data-ttu-id="07cb1-163">En las versiones anteriores de .NET Framework, esta determinación se realiza mediante el uso de la <xref:System.Object.Equals%2A> y <xref:System.IComparable.CompareTo%2A> métodos de la `item` parámetro en los objetos de la colección.</span><span class="sxs-lookup"><span data-stu-id="07cb1-163">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="07cb1-164">El siguiente código en el ejemplo se busca un elemento en un <xref:System.Collections.Specialized.ListDictionary>.</span><span class="sxs-lookup"><span data-stu-id="07cb1-164">The following code example searches for an element in a <xref:System.Collections.Specialized.ListDictionary>.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.ListDictionary_Contains#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.ListDictionary_Contains/CPP/listdictionary_contains.cpp#1)]
 [!code-csharp[System.Collections.Specialized.ListDictionary_Contains#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.ListDictionary_Contains/CS/listdictionary_contains.cs#1)]
 [!code-vb[System.Collections.Specialized.ListDictionary_Contains#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.ListDictionary_Contains/VB/listdictionary_contains.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="07cb1-165">El valor de <paramref name="key" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="07cb1-165"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Collections.IDictionary" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations.md"><span data-ttu-id="07cb1-166">Realizar operaciones de cadenas que no distinguen entre referencias culturales</span><span class="sxs-lookup"><span data-stu-id="07cb1-166">Performing Culture-Insensitive String Operations</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.ListDictionary.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array * int -&gt; unit&#xA;override this.CopyTo : Array * int -&gt; unit" Usage="listDictionary.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="07cb1-167"><see cref="T:System.Array" /> unidimensional que constituye el destino de los objetos <see cref="T:System.Collections.DictionaryEntry" /> copiados de <see cref="T:System.Collections.Specialized.ListDictionary" />.</span><span class="sxs-lookup"><span data-stu-id="07cb1-167">The one-dimensional <see cref="T:System.Array" /> that is the destination of the <see cref="T:System.Collections.DictionaryEntry" /> objects copied from <see cref="T:System.Collections.Specialized.ListDictionary" />.</span></span> <span data-ttu-id="07cb1-168"><see cref="T:System.Array" /> debe tener una indización de base cero.</span><span class="sxs-lookup"><span data-stu-id="07cb1-168">The <see cref="T:System.Array" /> must have zero-based indexing.</span></span></param>
        <param name="index"><span data-ttu-id="07cb1-169">Índice de base cero en la <paramref name="array" /> donde comienza la copia.</span><span class="sxs-lookup"><span data-stu-id="07cb1-169">The zero-based index in <paramref name="array" /> at which copying begins.</span></span></param>
        <summary><span data-ttu-id="07cb1-170">Copia las entradas de <see cref="T:System.Collections.Specialized.ListDictionary" /> a una instancia de <see cref="T:System.Array" /> unidimensional en el índice especificado.</span><span class="sxs-lookup"><span data-stu-id="07cb1-170">Copies the <see cref="T:System.Collections.Specialized.ListDictionary" /> entries to a one-dimensional <see cref="T:System.Array" /> instance at the specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07cb1-171">Los elementos se copian en el <xref:System.Array> en el mismo orden en que el enumerador recorre el <xref:System.Collections.Specialized.ListDictionary>.</span><span class="sxs-lookup"><span data-stu-id="07cb1-171">The elements are copied to the <xref:System.Array> in the same order in which the enumerator iterates through the <xref:System.Collections.Specialized.ListDictionary>.</span></span>  
  
 <span data-ttu-id="07cb1-172">Para copiar sólo las claves de la <xref:System.Collections.Specialized.ListDictionary>, utilice `ListDictionary.Keys.CopyTo`.</span><span class="sxs-lookup"><span data-stu-id="07cb1-172">To copy only the keys in the <xref:System.Collections.Specialized.ListDictionary>, use `ListDictionary.Keys.CopyTo`.</span></span>  
  
 <span data-ttu-id="07cb1-173">Para copiar sólo los valores de la <xref:System.Collections.Specialized.ListDictionary>, utilice `ListDictionary.Values.CopyTo`.</span><span class="sxs-lookup"><span data-stu-id="07cb1-173">To copy only the values in the <xref:System.Collections.Specialized.ListDictionary>, use `ListDictionary.Values.CopyTo`.</span></span>  
  
 <span data-ttu-id="07cb1-174">Este método es O (`n`) operación, donde `n` es <xref:System.Collections.Specialized.ListDictionary.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="07cb1-174">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.ListDictionary.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="07cb1-175">En el siguiente ejemplo copia los elementos de un <xref:System.Collections.Specialized.ListDictionary> a una matriz.</span><span class="sxs-lookup"><span data-stu-id="07cb1-175">The following code example copies the elements of a <xref:System.Collections.Specialized.ListDictionary> to an array.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.ListDictionary_CopyTo#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.ListDictionary_CopyTo/CPP/listdictionary_copyto.cpp#1)]
 [!code-csharp[System.Collections.Specialized.ListDictionary_CopyTo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.ListDictionary_CopyTo/CS/listdictionary_copyto.cs#1)]
 [!code-vb[System.Collections.Specialized.ListDictionary_CopyTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.ListDictionary_CopyTo/VB/listdictionary_copyto.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="07cb1-176">El valor de <paramref name="array" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="07cb1-176"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="07cb1-177"><paramref name="index" /> es menor que cero.</span><span class="sxs-lookup"><span data-stu-id="07cb1-177"><paramref name="index" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="07cb1-178"><paramref name="array" /> es multidimensional.</span><span class="sxs-lookup"><span data-stu-id="07cb1-178"><paramref name="array" /> is multidimensional.</span></span>  
  
<span data-ttu-id="07cb1-179">O bien</span><span class="sxs-lookup"><span data-stu-id="07cb1-179">-or-</span></span> 
<span data-ttu-id="07cb1-180">El número de elementos de la <see cref="T:System.Collections.Specialized.ListDictionary" /> de origen es mayor que el espacio disponible desde <paramref name="index" /> hasta el final de la <paramref name="array" /> de destino.</span><span class="sxs-lookup"><span data-stu-id="07cb1-180">The number of elements in the source <see cref="T:System.Collections.Specialized.ListDictionary" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="07cb1-181">El tipo de la <see cref="T:System.Collections.Specialized.ListDictionary" /> de origen no puede convertirse automáticamente al tipo de la <paramref name="array" /> de destino.</span><span class="sxs-lookup"><span data-stu-id="07cb1-181">The type of the source <see cref="T:System.Collections.Specialized.ListDictionary" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span></span></exception>
        <altmember cref="T:System.Array" />
        <altmember cref="T:System.Collections.DictionaryEntry" />
        <altmember cref="M:System.Collections.Specialized.ListDictionary.GetEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Specialized.ListDictionary.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Collections.Specialized.ListDictionary.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="07cb1-182">Obtiene el número de pares clave-valor incluidos en <see cref="T:System.Collections.Specialized.ListDictionary" />.</span><span class="sxs-lookup"><span data-stu-id="07cb1-182">Gets the number of key/value pairs contained in the <see cref="T:System.Collections.Specialized.ListDictionary" />.</span></span></summary>
        <value><span data-ttu-id="07cb1-183">Número de pares clave-valor incluidos en <see cref="T:System.Collections.Specialized.ListDictionary" />.</span><span class="sxs-lookup"><span data-stu-id="07cb1-183">The number of key/value pairs contained in the <see cref="T:System.Collections.Specialized.ListDictionary" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07cb1-184">La recuperación del valor de esta propiedad es una operación O(1).</span><span class="sxs-lookup"><span data-stu-id="07cb1-184">Retrieving the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="07cb1-185">El ejemplo de código siguiente enumera los elementos de un <xref:System.Collections.Specialized.ListDictionary>.</span><span class="sxs-lookup"><span data-stu-id="07cb1-185">The following code example enumerates the elements of a <xref:System.Collections.Specialized.ListDictionary>.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.ListDictionary_Enumerator#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.ListDictionary_Enumerator/CPP/listdictionary_enumerator.cpp#1)]
 [!code-csharp[System.Collections.Specialized.ListDictionary_Enumerator#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.ListDictionary_Enumerator/CS/listdictionary_enumerator.cs#1)]
 [!code-vb[System.Collections.Specialized.ListDictionary_Enumerator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.ListDictionary_Enumerator/VB/listdictionary_enumerator.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IDictionaryEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IDictionaryEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.ListDictionary.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IDictionaryEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IDictionaryEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IDictionaryEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IDictionaryEnumerator" Usage="listDictionary.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionaryEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="07cb1-186">Devuelve un objeto <see cref="T:System.Collections.IDictionaryEnumerator" /> que itera a través del objeto <see cref="T:System.Collections.Specialized.ListDictionary" />.</span><span class="sxs-lookup"><span data-stu-id="07cb1-186">Returns an <see cref="T:System.Collections.IDictionaryEnumerator" /> that iterates through the <see cref="T:System.Collections.Specialized.ListDictionary" />.</span></span></summary>
        <returns><span data-ttu-id="07cb1-187">Estructura <see cref="T:System.Collections.IDictionaryEnumerator" /> para la colección <see cref="T:System.Collections.Specialized.ListDictionary" />.</span><span class="sxs-lookup"><span data-stu-id="07cb1-187">An <see cref="T:System.Collections.IDictionaryEnumerator" /> for the <see cref="T:System.Collections.Specialized.ListDictionary" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07cb1-188">La instrucción `foreach` del lenguaje C# (`for each` en Visual Basic) oculta la complejidad de los enumeradores.</span><span class="sxs-lookup"><span data-stu-id="07cb1-188">The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="07cb1-189">Por lo tanto, se recomienda el uso de `foreach`, en lugar de manipular directamente el enumerador.</span><span class="sxs-lookup"><span data-stu-id="07cb1-189">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="07cb1-190">Los enumeradores pueden usarse para leer los datos de la colección, pero no para modificar la colección subyacente.</span><span class="sxs-lookup"><span data-stu-id="07cb1-190">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="07cb1-191">En principio, el enumerador se coloca antes del primer elemento de la colección.</span><span class="sxs-lookup"><span data-stu-id="07cb1-191">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="07cb1-192"><xref:System.Collections.IEnumerator.Reset%2A> también devuelve el enumerador a esta posición.</span><span class="sxs-lookup"><span data-stu-id="07cb1-192"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span>  <span data-ttu-id="07cb1-193">En esta posición, el valor de propiedad <xref:System.Collections.IEnumerator.Current%2A> está sin definir.</span><span class="sxs-lookup"><span data-stu-id="07cb1-193">At this position, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="07cb1-194">Por lo tanto, debe llamar a <xref:System.Collections.IEnumerator.MoveNext%2A> para adelantar el enumerador hasta el primer elemento de la colección antes de leer el valor de <xref:System.Collections.IEnumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="07cb1-194">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="07cb1-195"><xref:System.Collections.IEnumerator.Current%2A> devuelve el mismo objeto hasta que se llama a <xref:System.Collections.IEnumerator.MoveNext%2A> o a <xref:System.Collections.IEnumerator.Reset%2A>.</span><span class="sxs-lookup"><span data-stu-id="07cb1-195"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="07cb1-196"><xref:System.Collections.IEnumerator.MoveNext%2A> establece <xref:System.Collections.IEnumerator.Current%2A> en el siguiente elemento.</span><span class="sxs-lookup"><span data-stu-id="07cb1-196"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="07cb1-197">Si <xref:System.Collections.IEnumerator.MoveNext%2A> pasa el final de la colección, el enumerador se coloca después del último elemento de la colección y <xref:System.Collections.IEnumerator.MoveNext%2A> devuelve `false`.</span><span class="sxs-lookup"><span data-stu-id="07cb1-197">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="07cb1-198">Cuando el enumerador está en esta posición, las llamadas subsiguientes a <xref:System.Collections.IEnumerator.MoveNext%2A> también devolver `false`.</span><span class="sxs-lookup"><span data-stu-id="07cb1-198">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="07cb1-199">Si la última llamada a <xref:System.Collections.IEnumerator.MoveNext%2A> devuelve `false`, <xref:System.Collections.IEnumerator.Current%2A> es indefinido.</span><span class="sxs-lookup"><span data-stu-id="07cb1-199">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="07cb1-200">Para volver a establecer el valor de <xref:System.Collections.IEnumerator.Current%2A> en el primer elemento de la colección, se puede llamar primero a <xref:System.Collections.IEnumerator.Reset%2A> y después a <xref:System.Collections.IEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="07cb1-200">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="07cb1-201">Un enumerador es válido mientras la colección no cambie.</span><span class="sxs-lookup"><span data-stu-id="07cb1-201">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="07cb1-202">Si se hacen cambios en la colección (como agregar, modificar o eliminar elementos), el enumerador queda invalidado permanentemente y su comportamiento es indefinido.</span><span class="sxs-lookup"><span data-stu-id="07cb1-202">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="07cb1-203">El enumerador no tiene acceso exclusivo a la colección y, por tanto, la enumeración en una colección no es intrínsicamente un procedimiento seguro para subprocesos.</span><span class="sxs-lookup"><span data-stu-id="07cb1-203">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="07cb1-204">A fin de garantizar la seguridad de los subprocesos, se puede bloquear la colección durante toda la enumeración.</span><span class="sxs-lookup"><span data-stu-id="07cb1-204">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="07cb1-205">Para permitir que varios subprocesos obtengan acceso de lectura y escritura a la colección, debe implementar su propia sincronización.</span><span class="sxs-lookup"><span data-stu-id="07cb1-205">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="07cb1-206">Este método es una operación o (1).</span><span class="sxs-lookup"><span data-stu-id="07cb1-206">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="07cb1-207">El ejemplo de código siguiente enumera los elementos de un <xref:System.Collections.Specialized.ListDictionary>.</span><span class="sxs-lookup"><span data-stu-id="07cb1-207">The following code example enumerates the elements of a <xref:System.Collections.Specialized.ListDictionary>.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.ListDictionary_Enumerator#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.ListDictionary_Enumerator/CPP/listdictionary_enumerator.cpp#1)]
 [!code-csharp[System.Collections.Specialized.ListDictionary_Enumerator#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.ListDictionary_Enumerator/CS/listdictionary_enumerator.cs#1)]
 [!code-vb[System.Collections.Specialized.ListDictionary_Enumerator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.ListDictionary_Enumerator/VB/listdictionary_enumerator.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IDictionaryEnumerator" />
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="IsFixedSize">
      <MemberSignature Language="C#" Value="public bool IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Specialized.ListDictionary.IsFixedSize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFixedSize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsFixedSize : bool" Usage="System.Collections.Specialized.ListDictionary.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="07cb1-208">Obtiene un valor que indica si la interfaz <see cref="T:System.Collections.Specialized.ListDictionary" /> tiene un tamaño fijo.</span><span class="sxs-lookup"><span data-stu-id="07cb1-208">Gets a value indicating whether the <see cref="T:System.Collections.Specialized.ListDictionary" /> has a fixed size.</span></span></summary>
        <value><span data-ttu-id="07cb1-209">Esta propiedad devuelve siempre <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="07cb1-209">This property always returns <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07cb1-210"><xref:System.Collections.Specialized.ListDictionary> implementa el <xref:System.Collections.Specialized.ListDictionary.IsFixedSize%2A> propiedad porque es necesaria para la <xref:System.Collections.IDictionary?displayProperty=nameWithType> interfaz.</span><span class="sxs-lookup"><span data-stu-id="07cb1-210"><xref:System.Collections.Specialized.ListDictionary> implements the <xref:System.Collections.Specialized.ListDictionary.IsFixedSize%2A> property because it is required by the <xref:System.Collections.IDictionary?displayProperty=nameWithType> interface.</span></span>  
  
 <span data-ttu-id="07cb1-211">Una colección de tamaño fijo no permite agregar o quitar elementos una vez que se ha creado, pero sí permite modificar los elementos existentes.</span><span class="sxs-lookup"><span data-stu-id="07cb1-211">A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but it allows the modification of existing elements.</span></span>  
  
 <span data-ttu-id="07cb1-212">Una colección con un tamaño fijo es simplemente una colección con un contenedor que impide agregar y quitar elementos; por lo tanto, si se realizan cambios en la colección subyacente, incluida la adición o eliminación de elementos, la colección de tamaño fijo refleja los cambios.</span><span class="sxs-lookup"><span data-stu-id="07cb1-212">A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.</span></span>  
  
 <span data-ttu-id="07cb1-213">La recuperación del valor de esta propiedad es una operación O(1).</span><span class="sxs-lookup"><span data-stu-id="07cb1-213">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Specialized.ListDictionary.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Collections.Specialized.ListDictionary.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="07cb1-214">Obtiene un valor que indica si <see cref="T:System.Collections.Specialized.ListDictionary" /> es de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="07cb1-214">Gets a value indicating whether the <see cref="T:System.Collections.Specialized.ListDictionary" /> is read-only.</span></span></summary>
        <value><span data-ttu-id="07cb1-215">Esta propiedad devuelve siempre <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="07cb1-215">This property always returns <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07cb1-216"><xref:System.Collections.Specialized.ListDictionary> implementa el <xref:System.Collections.Specialized.ListDictionary.IsReadOnly%2A> propiedad porque es necesaria para la <xref:System.Collections.IDictionary?displayProperty=nameWithType> interfaz.</span><span class="sxs-lookup"><span data-stu-id="07cb1-216"><xref:System.Collections.Specialized.ListDictionary> implements the <xref:System.Collections.Specialized.ListDictionary.IsReadOnly%2A> property because it is required by the <xref:System.Collections.IDictionary?displayProperty=nameWithType> interface.</span></span>  
  
 <span data-ttu-id="07cb1-217">Una colección de solo lectura no permite que se agreguen, quiten o modifiquen elementos una vez que se ha creado.</span><span class="sxs-lookup"><span data-stu-id="07cb1-217">A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</span></span>  
  
 <span data-ttu-id="07cb1-218">Una colección es de solo lectura es simplemente una colección con un contenedor que evita la modificación de la colección; por lo tanto, si se realizan cambios en la colección subyacente, la colección de solo lectura refleja los cambios.</span><span class="sxs-lookup"><span data-stu-id="07cb1-218">A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</span></span>  
  
 <span data-ttu-id="07cb1-219">La recuperación del valor de esta propiedad es una operación O(1).</span><span class="sxs-lookup"><span data-stu-id="07cb1-219">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Specialized.ListDictionary.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSynchronized : bool" Usage="System.Collections.Specialized.ListDictionary.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="07cb1-220">Obtiene un valor que indica si <see cref="T:System.Collections.Specialized.ListDictionary" /> está sincronizado (es seguro para subprocesos).</span><span class="sxs-lookup"><span data-stu-id="07cb1-220">Gets a value indicating whether the <see cref="T:System.Collections.Specialized.ListDictionary" /> is synchronized (thread safe).</span></span></summary>
        <value><span data-ttu-id="07cb1-221">Esta propiedad devuelve siempre <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="07cb1-221">This property always returns <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07cb1-222"><xref:System.Collections.Specialized.ListDictionary> implementa el <xref:System.Collections.Specialized.ListDictionary.IsSynchronized%2A> propiedad porque es necesaria para la <xref:System.Collections.ICollection?displayProperty=nameWithType> interfaz.</span><span class="sxs-lookup"><span data-stu-id="07cb1-222"><xref:System.Collections.Specialized.ListDictionary> implements the <xref:System.Collections.Specialized.ListDictionary.IsSynchronized%2A> property because it is required by the <xref:System.Collections.ICollection?displayProperty=nameWithType> interface.</span></span>  
  
 <span data-ttu-id="07cb1-223">Las clases derivadas pueden proporcionar una versión sincronizada de la <xref:System.Collections.Specialized.ListDictionary> utilizando el <xref:System.Collections.Specialized.ListDictionary.SyncRoot%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="07cb1-223">Derived classes can provide a synchronized version of the <xref:System.Collections.Specialized.ListDictionary> using the <xref:System.Collections.Specialized.ListDictionary.SyncRoot%2A> property.</span></span>  
  
 <span data-ttu-id="07cb1-224">Enumerar una colección no es intrínsecamente un procedimiento seguro para subprocesos.</span><span class="sxs-lookup"><span data-stu-id="07cb1-224">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="07cb1-225">Incluso cuando una colección está sincronizada, otros subprocesos todavía pueden modificarla, lo que hace que el enumerador produzca una excepción.</span><span class="sxs-lookup"><span data-stu-id="07cb1-225">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="07cb1-226">Con el fin de garantizar la seguridad para la ejecución de subprocesos durante la enumeración, se puede bloquear la colección durante toda la enumeración o detectar las excepciones resultantes de los cambios realizados por otros subprocesos.</span><span class="sxs-lookup"><span data-stu-id="07cb1-226">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="07cb1-227">El ejemplo de código siguiente muestra cómo bloquear la colección utilizando el <xref:System.Collections.Specialized.ListDictionary.SyncRoot%2A> durante toda la enumeración.</span><span class="sxs-lookup"><span data-stu-id="07cb1-227">The following code example shows how to lock the collection using the <xref:System.Collections.Specialized.ListDictionary.SyncRoot%2A> during the entire enumeration.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.ListDictionary2#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.ListDictionary2/CPP/source2.cpp#2)]
 [!code-csharp[System.Collections.Specialized.ListDictionary2#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.ListDictionary2/CS/source2.cs#2)]
 [!code-vb[System.Collections.Specialized.ListDictionary2#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.ListDictionary2/VB/source2.vb#2)]  
  
 <span data-ttu-id="07cb1-228">La recuperación del valor de esta propiedad es una operación O(1).</span><span class="sxs-lookup"><span data-stu-id="07cb1-228">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.Specialized.ListDictionary.SyncRoot" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[object key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(object)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Specialized.ListDictionary.Item(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(key As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::Object ^] { System::Object ^ get(System::Object ^ key); void set(System::Object ^ key, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(obj) : obj with get, set" Usage="System.Collections.Specialized.ListDictionary.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.Item(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="07cb1-229">Clave cuyo valor se va a obtener o a establecer.</span><span class="sxs-lookup"><span data-stu-id="07cb1-229">The key whose value to get or set.</span></span></param>
        <summary><span data-ttu-id="07cb1-230">Obtiene o establece el valor asociado a la clave especificada.</span><span class="sxs-lookup"><span data-stu-id="07cb1-230">Gets or sets the value associated with the specified key.</span></span></summary>
        <value><span data-ttu-id="07cb1-231">Valor asociado a la clave especificada.</span><span class="sxs-lookup"><span data-stu-id="07cb1-231">The value associated with the specified key.</span></span> <span data-ttu-id="07cb1-232">Si no se encuentra la clave especificada, al intentar obtenerla, se devuelve <see langword="null" /> y, al intentar establecerla, se crea una nueva entrada con la clave especificada.</span><span class="sxs-lookup"><span data-stu-id="07cb1-232">If the specified key is not found, attempting to get it returns <see langword="null" />, and attempting to set it creates a new entry using the specified key.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07cb1-233">Esta propiedad permite obtener acceso a un elemento específico de la colección utilizando la sintaxis siguiente: `myCollection[key]`.</span><span class="sxs-lookup"><span data-stu-id="07cb1-233">This property provides the ability to access a specific element in the collection by using the following syntax: `myCollection[key]`.</span></span>  
  
 <span data-ttu-id="07cb1-234">También puede usar el <xref:System.Collections.Specialized.ListDictionary.Item%2A> propiedad para agregar nuevos elementos estableciendo el valor de una clave que no existe en el <xref:System.Collections.Specialized.ListDictionary>; por ejemplo, `myCollection["myNonexistentKey"] = myValue`.</span><span class="sxs-lookup"><span data-stu-id="07cb1-234">You can also use the <xref:System.Collections.Specialized.ListDictionary.Item%2A> property to add new elements by setting the value of a key that does not exist in the <xref:System.Collections.Specialized.ListDictionary>; for example, `myCollection["myNonexistentKey"] = myValue`.</span></span> <span data-ttu-id="07cb1-235">Sin embargo, si la clave especificada ya existe en el <xref:System.Collections.Specialized.ListDictionary>, estableciendo el <xref:System.Collections.Specialized.ListDictionary.Item%2A> propiedad sobrescribe el valor anterior.</span><span class="sxs-lookup"><span data-stu-id="07cb1-235">However, if the specified key already exists in the <xref:System.Collections.Specialized.ListDictionary>, setting the <xref:System.Collections.Specialized.ListDictionary.Item%2A> property overwrites the old value.</span></span> <span data-ttu-id="07cb1-236">En cambio, el <xref:System.Collections.Specialized.ListDictionary.Add%2A> método no modifica los elementos existentes.</span><span class="sxs-lookup"><span data-stu-id="07cb1-236">In contrast, the <xref:System.Collections.Specialized.ListDictionary.Add%2A> method does not modify existing elements.</span></span>  
  
 <span data-ttu-id="07cb1-237">No puede ser una clave `null`, pero un valor Sí.</span><span class="sxs-lookup"><span data-stu-id="07cb1-237">A key cannot be `null`, but a value can.</span></span> <span data-ttu-id="07cb1-238">Para distinguir entre `null` que se devuelve porque no se encuentra la clave especificada y `null` que se devuelve porque el valor de la clave especificada es `null`, utilice el <xref:System.Collections.Specialized.ListDictionary.Contains%2A> método para determinar si la clave existe en la lista.</span><span class="sxs-lookup"><span data-stu-id="07cb1-238">To distinguish between `null` that is returned because the specified key is not found and `null` that is returned because the value of the specified key is `null`, use the <xref:System.Collections.Specialized.ListDictionary.Contains%2A> method to determine if the key exists in the list.</span></span>  
  
 <span data-ttu-id="07cb1-239">El lenguaje C# utiliza la palabra clave para definir los indizadores en lugar de implementar el <xref:System.Collections.Specialized.ListDictionary.Item%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="07cb1-239">The C# language uses the  keyword to define the indexers instead of implementing the <xref:System.Collections.Specialized.ListDictionary.Item%2A> property.</span></span> <span data-ttu-id="07cb1-240">Visual Basic implementa <xref:System.Collections.Specialized.ListDictionary.Item%2A> como propiedad predeterminada, lo que proporciona la misma funcionalidad de indización.</span><span class="sxs-lookup"><span data-stu-id="07cb1-240">Visual Basic implements <xref:System.Collections.Specialized.ListDictionary.Item%2A> as a default property, which provides the same indexing functionality.</span></span>  
  
 <span data-ttu-id="07cb1-241">Este método es O (`n`) operación, donde `n` es <xref:System.Collections.Specialized.ListDictionary.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="07cb1-241">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.ListDictionary.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="07cb1-242">El ejemplo de código siguiente enumera los elementos de un <xref:System.Collections.Specialized.ListDictionary>.</span><span class="sxs-lookup"><span data-stu-id="07cb1-242">The following code example enumerates the elements of a <xref:System.Collections.Specialized.ListDictionary>.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.ListDictionary_Enumerator#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.ListDictionary_Enumerator/CPP/listdictionary_enumerator.cpp#1)]
 [!code-csharp[System.Collections.Specialized.ListDictionary_Enumerator#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.ListDictionary_Enumerator/CS/listdictionary_enumerator.cs#1)]
 [!code-vb[System.Collections.Specialized.ListDictionary_Enumerator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.ListDictionary_Enumerator/VB/listdictionary_enumerator.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="07cb1-243">El valor de <paramref name="key" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="07cb1-243"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Collections.Specialized.ListDictionary.Add(System.Object,System.Object)" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations.md"><span data-ttu-id="07cb1-244">Realizar operaciones de cadenas que no distinguen entre referencias culturales</span><span class="sxs-lookup"><span data-stu-id="07cb1-244">Performing Culture-Insensitive String Operations</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection Keys" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Specialized.ListDictionary.Keys" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Keys As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ICollection ^ Keys { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Keys : System.Collections.ICollection" Usage="System.Collections.Specialized.ListDictionary.Keys" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.Keys</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="07cb1-245">Obtiene un <see cref="T:System.Collections.ICollection" /> que contiene las claves de <see cref="T:System.Collections.Specialized.ListDictionary" />.</span><span class="sxs-lookup"><span data-stu-id="07cb1-245">Gets an <see cref="T:System.Collections.ICollection" /> containing the keys in the <see cref="T:System.Collections.Specialized.ListDictionary" />.</span></span></summary>
        <value><span data-ttu-id="07cb1-246"><see cref="T:System.Collections.ICollection" /> que contiene las claves de <see cref="T:System.Collections.Specialized.ListDictionary" />.</span><span class="sxs-lookup"><span data-stu-id="07cb1-246">An <see cref="T:System.Collections.ICollection" /> containing the keys in the <see cref="T:System.Collections.Specialized.ListDictionary" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07cb1-247">El orden de los valores de la <xref:System.Collections.ICollection> no está especificado, pero es el mismo orden que los valores asociados en el <xref:System.Collections.ICollection> devuelto por la <xref:System.Collections.Specialized.ListDictionary.Values%2A> método.</span><span class="sxs-lookup"><span data-stu-id="07cb1-247">The order of the values in the <xref:System.Collections.ICollection> is unspecified, but it is the same order as the associated values in the <xref:System.Collections.ICollection> returned by the <xref:System.Collections.Specialized.ListDictionary.Values%2A> method.</span></span>  
  
 <span data-ttu-id="07cb1-248">El valor devuelto <xref:System.Collections.ICollection> no es una copia estática; en su lugar, el <xref:System.Collections.ICollection> hace referencia a las claves en el original <xref:System.Collections.Specialized.ListDictionary>.</span><span class="sxs-lookup"><span data-stu-id="07cb1-248">The returned <xref:System.Collections.ICollection> is not a static copy; instead, the <xref:System.Collections.ICollection> refers back to the keys in the original <xref:System.Collections.Specialized.ListDictionary>.</span></span> <span data-ttu-id="07cb1-249">Por consiguiente, los cambios a la <xref:System.Collections.Specialized.ListDictionary> continuar en reflejarse en el <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="07cb1-249">Therefore, changes to the <xref:System.Collections.Specialized.ListDictionary> continue to be reflected in the <xref:System.Collections.ICollection>.</span></span>  
  
 <span data-ttu-id="07cb1-250">La recuperación del valor de esta propiedad es una operación O(1).</span><span class="sxs-lookup"><span data-stu-id="07cb1-250">Retrieving the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="07cb1-251">El ejemplo de código siguiente enumera los elementos de un <xref:System.Collections.Specialized.ListDictionary>.</span><span class="sxs-lookup"><span data-stu-id="07cb1-251">The following code example enumerates the elements of a <xref:System.Collections.Specialized.ListDictionary>.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.ListDictionary_Enumerator#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.ListDictionary_Enumerator/CPP/listdictionary_enumerator.cpp#1)]
 [!code-csharp[System.Collections.Specialized.ListDictionary_Enumerator#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.ListDictionary_Enumerator/CS/listdictionary_enumerator.cs#1)]
 [!code-vb[System.Collections.Specialized.ListDictionary_Enumerator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.ListDictionary_Enumerator/VB/listdictionary_enumerator.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="P:System.Collections.Specialized.ListDictionary.Values" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (object key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.ListDictionary.Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (key As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Remove(System::Object ^ key);" />
      <MemberSignature Language="F#" Value="abstract member Remove : obj -&gt; unit&#xA;override this.Remove : obj -&gt; unit" Usage="listDictionary.Remove key" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="07cb1-252">Clave de la entrada que se va a quitar.</span><span class="sxs-lookup"><span data-stu-id="07cb1-252">The key of the entry to remove.</span></span></param>
        <summary><span data-ttu-id="07cb1-253">Quita la entrada con la clave especificada de <see cref="T:System.Collections.Specialized.ListDictionary" />.</span><span class="sxs-lookup"><span data-stu-id="07cb1-253">Removes the entry with the specified key from the <see cref="T:System.Collections.Specialized.ListDictionary" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07cb1-254">Si el <xref:System.Collections.Specialized.ListDictionary> no contiene un elemento con la clave especificada, el <xref:System.Collections.Specialized.ListDictionary> permanece sin cambios.</span><span class="sxs-lookup"><span data-stu-id="07cb1-254">If the <xref:System.Collections.Specialized.ListDictionary> does not contain an element with the specified key, the <xref:System.Collections.Specialized.ListDictionary> remains unchanged.</span></span> <span data-ttu-id="07cb1-255">No se inicia ninguna excepción.</span><span class="sxs-lookup"><span data-stu-id="07cb1-255">No exception is thrown.</span></span>  
  
 <span data-ttu-id="07cb1-256">Este método es O (`n`) operación, donde `n` es <xref:System.Collections.Specialized.ListDictionary.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="07cb1-256">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.ListDictionary.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="07cb1-257">En el ejemplo de código siguiente se agrega a y quita elementos de un <xref:System.Collections.Specialized.ListDictionary>.</span><span class="sxs-lookup"><span data-stu-id="07cb1-257">The following code example adds to and removes elements from a <xref:System.Collections.Specialized.ListDictionary>.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.ListDictionary_AddRemove#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.ListDictionary_AddRemove/CPP/listdictionary_addremove.cpp#1)]
 [!code-csharp[System.Collections.Specialized.ListDictionary_AddRemove#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.ListDictionary_AddRemove/CS/listdictionary_addremove.cs#1)]
 [!code-vb[System.Collections.Specialized.ListDictionary_AddRemove#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.ListDictionary_AddRemove/VB/listdictionary_addremove.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="07cb1-258">El valor de <paramref name="key" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="07cb1-258"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Collections.Specialized.ListDictionary.Add(System.Object,System.Object)" />
        <altmember cref="M:System.Collections.IDictionary.Remove(System.Object)" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations.md"><span data-ttu-id="07cb1-259">Realizar operaciones de cadenas que no distinguen entre referencias culturales</span><span class="sxs-lookup"><span data-stu-id="07cb1-259">Performing Culture-Insensitive String Operations</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Specialized.ListDictionary.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SyncRoot : obj" Usage="System.Collections.Specialized.ListDictionary.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="07cb1-260">Obtiene un objeto que se puede usar para sincronizar el acceso a <see cref="T:System.Collections.Specialized.ListDictionary" />.</span><span class="sxs-lookup"><span data-stu-id="07cb1-260">Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.Specialized.ListDictionary" />.</span></span></summary>
        <value><span data-ttu-id="07cb1-261">Objeto que se puede usar para sincronizar el acceso a <see cref="T:System.Collections.Specialized.ListDictionary" />.</span><span class="sxs-lookup"><span data-stu-id="07cb1-261">An object that can be used to synchronize access to the <see cref="T:System.Collections.Specialized.ListDictionary" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07cb1-262">Las clases derivadas pueden proporcionar su propia versión sincronizada de la <xref:System.Collections.Specialized.ListDictionary> utilizando el <xref:System.Collections.Specialized.ListDictionary.SyncRoot%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="07cb1-262">Derived classes can provide their own synchronized version of the <xref:System.Collections.Specialized.ListDictionary> using the <xref:System.Collections.Specialized.ListDictionary.SyncRoot%2A> property.</span></span> <span data-ttu-id="07cb1-263">El código de sincronización debe realizar operaciones en el <xref:System.Collections.Specialized.ListDictionary.SyncRoot%2A> de la <xref:System.Collections.Specialized.ListDictionary>, no directamente en el <xref:System.Collections.Specialized.ListDictionary>.</span><span class="sxs-lookup"><span data-stu-id="07cb1-263">The synchronizing code must perform operations on the <xref:System.Collections.Specialized.ListDictionary.SyncRoot%2A> of the <xref:System.Collections.Specialized.ListDictionary>, not directly on the <xref:System.Collections.Specialized.ListDictionary>.</span></span> <span data-ttu-id="07cb1-264">De este modo, se garantiza el funcionamiento correcto de las colecciones derivadas de otros objetos.</span><span class="sxs-lookup"><span data-stu-id="07cb1-264">This ensures proper operation of collections that are derived from other objects.</span></span> <span data-ttu-id="07cb1-265">En concreto, mantiene la sincronización correcta con otros subprocesos que podrían modificar simultáneamente la <xref:System.Collections.Specialized.ListDictionary> objeto.</span><span class="sxs-lookup"><span data-stu-id="07cb1-265">Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the <xref:System.Collections.Specialized.ListDictionary> object.</span></span>  
  
 <span data-ttu-id="07cb1-266">Enumerar una colección no es intrínsecamente un procedimiento seguro para subprocesos.</span><span class="sxs-lookup"><span data-stu-id="07cb1-266">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="07cb1-267">Incluso cuando una colección está sincronizada, otros subprocesos todavía pueden modificarla, lo que hace que el enumerador produzca una excepción.</span><span class="sxs-lookup"><span data-stu-id="07cb1-267">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="07cb1-268">Con el fin de garantizar la seguridad para la ejecución de subprocesos durante la enumeración, se puede bloquear la colección durante toda la enumeración o detectar las excepciones resultantes de los cambios realizados por otros subprocesos.</span><span class="sxs-lookup"><span data-stu-id="07cb1-268">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="07cb1-269">El ejemplo de código siguiente muestra cómo bloquear la colección utilizando el <xref:System.Collections.Specialized.ListDictionary.SyncRoot%2A> durante toda la enumeración.</span><span class="sxs-lookup"><span data-stu-id="07cb1-269">The following code example shows how to lock the collection using the <xref:System.Collections.Specialized.ListDictionary.SyncRoot%2A> during the entire enumeration.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.ListDictionary2#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.ListDictionary2/CPP/source2.cpp#2)]
 [!code-csharp[System.Collections.Specialized.ListDictionary2#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.ListDictionary2/CS/source2.cs#2)]
 [!code-vb[System.Collections.Specialized.ListDictionary2#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.ListDictionary2/VB/source2.vb#2)]  
  
 <span data-ttu-id="07cb1-270">La recuperación del valor de esta propiedad es una operación O(1).</span><span class="sxs-lookup"><span data-stu-id="07cb1-270">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.Specialized.ListDictionary.IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.ListDictionary.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="07cb1-271">Devuelve un objeto <see cref="T:System.Collections.IEnumerator" /> que itera a través del objeto <see cref="T:System.Collections.Specialized.ListDictionary" />.</span><span class="sxs-lookup"><span data-stu-id="07cb1-271">Returns an <see cref="T:System.Collections.IEnumerator" /> that iterates through the <see cref="T:System.Collections.Specialized.ListDictionary" />.</span></span></summary>
        <returns><span data-ttu-id="07cb1-272">Estructura <see cref="T:System.Collections.IEnumerator" /> para la colección <see cref="T:System.Collections.Specialized.ListDictionary" />.</span><span class="sxs-lookup"><span data-stu-id="07cb1-272">An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Collections.Specialized.ListDictionary" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07cb1-273">La instrucción `foreach` del lenguaje C# (`for each` en Visual Basic) oculta la complejidad de los enumeradores.</span><span class="sxs-lookup"><span data-stu-id="07cb1-273">The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="07cb1-274">Por lo tanto, se recomienda el uso de `foreach`, en lugar de manipular directamente el enumerador.</span><span class="sxs-lookup"><span data-stu-id="07cb1-274">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="07cb1-275">Los enumeradores pueden usarse para leer los datos de la colección, pero no para modificar la colección subyacente.</span><span class="sxs-lookup"><span data-stu-id="07cb1-275">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="07cb1-276">En principio, el enumerador se coloca antes del primer elemento de la colección.</span><span class="sxs-lookup"><span data-stu-id="07cb1-276">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="07cb1-277"><xref:System.Collections.IEnumerator.Reset%2A> también devuelve el enumerador a esta posición.</span><span class="sxs-lookup"><span data-stu-id="07cb1-277"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span> <span data-ttu-id="07cb1-278">En esta posición, una llamada a <xref:System.Collections.IEnumerator.Current%2A> produce una excepción.</span><span class="sxs-lookup"><span data-stu-id="07cb1-278">At this position, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception.</span></span> <span data-ttu-id="07cb1-279">Por lo tanto, debe llamar a <xref:System.Collections.IEnumerator.MoveNext%2A> para adelantar el enumerador hasta el primer elemento de la colección antes de leer el valor de <xref:System.Collections.IEnumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="07cb1-279">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="07cb1-280"><xref:System.Collections.IEnumerator.Current%2A> devuelve el mismo objeto hasta que se llama a <xref:System.Collections.IEnumerator.MoveNext%2A> o a <xref:System.Collections.IEnumerator.Reset%2A>.</span><span class="sxs-lookup"><span data-stu-id="07cb1-280"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="07cb1-281"><xref:System.Collections.IEnumerator.MoveNext%2A> establece <xref:System.Collections.IEnumerator.Current%2A> en el siguiente elemento.</span><span class="sxs-lookup"><span data-stu-id="07cb1-281"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="07cb1-282">Si <xref:System.Collections.IEnumerator.MoveNext%2A> pasa el final de la colección, el enumerador se coloca después del último elemento de la colección y <xref:System.Collections.IEnumerator.MoveNext%2A> devuelve `false`.</span><span class="sxs-lookup"><span data-stu-id="07cb1-282">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="07cb1-283">Cuando el enumerador está en esta posición, las llamadas subsiguientes a <xref:System.Collections.IEnumerator.MoveNext%2A> también devolver `false`.</span><span class="sxs-lookup"><span data-stu-id="07cb1-283">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="07cb1-284">Si la última llamada a <xref:System.Collections.IEnumerator.MoveNext%2A> devuelve `false`, al llamar a <xref:System.Collections.IEnumerator.Current%2A> produce una excepción.</span><span class="sxs-lookup"><span data-stu-id="07cb1-284">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception.</span></span> <span data-ttu-id="07cb1-285">Para volver a establecer el valor de <xref:System.Collections.IEnumerator.Current%2A> en el primer elemento de la colección, se puede llamar primero a <xref:System.Collections.IEnumerator.Reset%2A> y después a <xref:System.Collections.IEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="07cb1-285">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="07cb1-286">Un enumerador es válido mientras la colección no cambie.</span><span class="sxs-lookup"><span data-stu-id="07cb1-286">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="07cb1-287">Si se realizan cambios en la colección, como agregar, modificar, o eliminar elementos, el enumerador queda invalida invalidado y la siguiente llamada a <xref:System.Collections.IEnumerator.MoveNext%2A> o <xref:System.Collections.IEnumerator.Reset%2A> produce una <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="07cb1-287">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="07cb1-288">Si la colección se modifica entre <xref:System.Collections.IEnumerator.MoveNext%2A> y <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> devuelve el elemento que está establecido, incluso si el enumerador ya se ha invalidado.</span><span class="sxs-lookup"><span data-stu-id="07cb1-288">If the collection is modified between <xref:System.Collections.IEnumerator.MoveNext%2A> and <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> returns the element that it is set to, even if the enumerator is already invalidated.</span></span>  
  
 <span data-ttu-id="07cb1-289">El enumerador no tiene acceso exclusivo a la colección y, por tanto, la enumeración en una colección no es intrínsicamente un procedimiento seguro para subprocesos.</span><span class="sxs-lookup"><span data-stu-id="07cb1-289">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="07cb1-290">Incluso cuando una colección está sincronizada, otros subprocesos todavía pueden modificarla, lo que hace que el enumerador produzca una excepción.</span><span class="sxs-lookup"><span data-stu-id="07cb1-290">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="07cb1-291">Con el fin de garantizar la seguridad para la ejecución de subprocesos durante la enumeración, se puede bloquear la colección durante toda la enumeración o detectar las excepciones resultantes de los cambios realizados por otros subprocesos.</span><span class="sxs-lookup"><span data-stu-id="07cb1-291">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 <span data-ttu-id="07cb1-292">Este método es una operación o (1).</span><span class="sxs-lookup"><span data-stu-id="07cb1-292">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="07cb1-293">El ejemplo de código siguiente enumera los elementos de un <xref:System.Collections.Specialized.ListDictionary>.</span><span class="sxs-lookup"><span data-stu-id="07cb1-293">The following code example enumerates the elements of a <xref:System.Collections.Specialized.ListDictionary>.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.ListDictionary_Enumerator#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.ListDictionary_Enumerator/CPP/listdictionary_enumerator.cpp#1)]
 [!code-csharp[System.Collections.Specialized.ListDictionary_Enumerator#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.ListDictionary_Enumerator/CS/listdictionary_enumerator.cs#1)]
 [!code-vb[System.Collections.Specialized.ListDictionary_Enumerator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.ListDictionary_Enumerator/VB/listdictionary_enumerator.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IDictionaryEnumerator" />
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="Values">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection Values" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Specialized.ListDictionary.Values" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Values As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ICollection ^ Values { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Values : System.Collections.ICollection" Usage="System.Collections.Specialized.ListDictionary.Values" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.Values</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="07cb1-294">Obtiene una interfaz <see cref="T:System.Collections.ICollection" /> que contiene los valores de la interfaz <see cref="T:System.Collections.Specialized.ListDictionary" />.</span><span class="sxs-lookup"><span data-stu-id="07cb1-294">Gets an <see cref="T:System.Collections.ICollection" /> containing the values in the <see cref="T:System.Collections.Specialized.ListDictionary" />.</span></span></summary>
        <value><span data-ttu-id="07cb1-295"><see cref="T:System.Collections.ICollection" /> que contiene los valores de <see cref="T:System.Collections.Specialized.ListDictionary" />.</span><span class="sxs-lookup"><span data-stu-id="07cb1-295">An <see cref="T:System.Collections.ICollection" /> containing the values in the <see cref="T:System.Collections.Specialized.ListDictionary" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07cb1-296">El orden de los valores de la <xref:System.Collections.ICollection> no está especificado, pero es el mismo orden que las claves asociadas en la <xref:System.Collections.ICollection> devuelto por la <xref:System.Collections.Specialized.ListDictionary.Keys%2A> método.</span><span class="sxs-lookup"><span data-stu-id="07cb1-296">The order of the values in the <xref:System.Collections.ICollection> is unspecified, but it is the same order as the associated keys in the <xref:System.Collections.ICollection> returned by the <xref:System.Collections.Specialized.ListDictionary.Keys%2A> method.</span></span>  
  
 <span data-ttu-id="07cb1-297">El valor devuelto <xref:System.Collections.ICollection> no es una copia estática; en su lugar, el <xref:System.Collections.ICollection> hace referencia a los valores en el original <xref:System.Collections.Specialized.ListDictionary>.</span><span class="sxs-lookup"><span data-stu-id="07cb1-297">The returned <xref:System.Collections.ICollection> is not a static copy; instead, the <xref:System.Collections.ICollection> refers back to the values in the original <xref:System.Collections.Specialized.ListDictionary>.</span></span> <span data-ttu-id="07cb1-298">Por consiguiente, los cambios a la <xref:System.Collections.Specialized.ListDictionary> continuar en reflejarse en el <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="07cb1-298">Therefore, changes to the <xref:System.Collections.Specialized.ListDictionary> continue to be reflected in the <xref:System.Collections.ICollection>.</span></span>  
  
 <span data-ttu-id="07cb1-299">La recuperación del valor de esta propiedad es una operación O(1).</span><span class="sxs-lookup"><span data-stu-id="07cb1-299">Retrieving the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="07cb1-300">El ejemplo de código siguiente enumera los elementos de un <xref:System.Collections.Specialized.ListDictionary>.</span><span class="sxs-lookup"><span data-stu-id="07cb1-300">The following code example enumerates the elements of a <xref:System.Collections.Specialized.ListDictionary>.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.ListDictionary_Enumerator#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.ListDictionary_Enumerator/CPP/listdictionary_enumerator.cpp#1)]
 [!code-csharp[System.Collections.Specialized.ListDictionary_Enumerator#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.ListDictionary_Enumerator/CS/listdictionary_enumerator.cs#1)]
 [!code-vb[System.Collections.Specialized.ListDictionary_Enumerator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.ListDictionary_Enumerator/VB/listdictionary_enumerator.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="P:System.Collections.Specialized.ListDictionary.Keys" />
      </Docs>
    </Member>
  </Members>
</Type>
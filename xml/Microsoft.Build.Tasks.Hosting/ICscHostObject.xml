<Type Name="ICscHostObject" FullName="Microsoft.Build.Tasks.Hosting.ICscHostObject">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e942d52782111a4798bcd259e551cf63ffea3104" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55361677" /></Metadata><TypeSignature Language="C#" Value="public interface ICscHostObject : Microsoft.Build.Framework.ITaskHost" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ICscHostObject implements class Microsoft.Build.Framework.ITaskHost" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Tasks.Hosting.ICscHostObject" />
  <TypeSignature Language="VB.NET" Value="Public Interface ICscHostObject&#xA;Implements ITaskHost" />
  <TypeSignature Language="C++ CLI" Value="public interface class ICscHostObject : Microsoft::Build::Framework::ITaskHost" />
  <TypeSignature Language="F#" Value="type ICscHostObject = interface&#xA;    interface ITaskHost" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Build.Framework.ITaskHost</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("8520CC4D-64DC-4855-BE3F-4C28CCE048EE")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="546f0-101">Define una interfaz que permite a la tarea <see href="https://msdn.microsoft.com/library/d8c19b36-f5ca-484b-afa6-8ff3b90e103a">Csc</see> comunicarse con el entorno de desarrollo integrado (IDE) del host.</span><span class="sxs-lookup"><span data-stu-id="546f0-101">Defines an interface that allows the <see href="https://msdn.microsoft.com/library/d8c19b36-f5ca-484b-afa6-8ff3b90e103a">Csc</see> task to communicate with the host integrated development environment (IDE).</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="546f0-102">Esta interfaz permite que la `Csc` tarea delegue la compilación del proyecto en el IDE, en vez de usar los compiladores de línea de comandos.</span><span class="sxs-lookup"><span data-stu-id="546f0-102">This interface allows the `Csc` task to delegate project compilation to the IDE rather than using command line compilers.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="BeginInitialization">
      <MemberSignature Language="C#" Value="public void BeginInitialization ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginInitialization() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.BeginInitialization" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginInitialization ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginInitialization();" />
      <MemberSignature Language="F#" Value="abstract member BeginInitialization : unit -&gt; unit" Usage="iCscHostObject.BeginInitialization " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="546f0-103">Comienza la inicialización de <see cref="T:Microsoft.Build.Tasks.Hosting.ICscHostObject" />.</span><span class="sxs-lookup"><span data-stu-id="546f0-103">Begins the initialization of the <see cref="T:Microsoft.Build.Tasks.Hosting.ICscHostObject" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Compile">
      <MemberSignature Language="C#" Value="public bool Compile ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Compile() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.Compile" />
      <MemberSignature Language="VB.NET" Value="Public Function Compile () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Compile();" />
      <MemberSignature Language="F#" Value="abstract member Compile : unit -&gt; bool" Usage="iCscHostObject.Compile " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="546f0-104">Compila el proyecto.</span><span class="sxs-lookup"><span data-stu-id="546f0-104">Compiles the project.</span></span></summary>
        <returns><span data-ttu-id="546f0-105">Es <see langword="true" /> si el método es correcto; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="546f0-105"><see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndInitialization">
      <MemberSignature Language="C#" Value="public bool EndInitialization (out string errorMessage, out int errorCode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool EndInitialization([out] string&amp; errorMessage, [out] int32&amp; errorCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.EndInitialization(System.String@,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndInitialization (ByRef errorMessage As String, ByRef errorCode As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool EndInitialization([Runtime::InteropServices::Out] System::String ^ % errorMessage, [Runtime::InteropServices::Out] int % errorCode);" />
      <MemberSignature Language="F#" Value="abstract member EndInitialization :  *  -&gt; bool" Usage="iCscHostObject.EndInitialization (errorMessage, errorCode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="errorMessage" Type="System.String" RefType="out" />
        <Parameter Name="errorCode" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="errorMessage"><span data-ttu-id="546f0-106">Mensaje de error.</span><span class="sxs-lookup"><span data-stu-id="546f0-106">The error message.</span></span></param>
        <param name="errorCode"><span data-ttu-id="546f0-107">Código de error.</span><span class="sxs-lookup"><span data-stu-id="546f0-107">The error code.</span></span></param>
        <summary><span data-ttu-id="546f0-108">Finaliza la inicialización de <see cref="T:Microsoft.Build.Tasks.Hosting.ICscHostObject" /> con el mensaje de error especificado y el código.</span><span class="sxs-lookup"><span data-stu-id="546f0-108">Ends the initialization of the <see cref="T:Microsoft.Build.Tasks.Hosting.ICscHostObject" /> with the specified error message and code.</span></span></summary>
        <returns><span data-ttu-id="546f0-109">Es <see langword="true" /> si el método es correcto; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="546f0-109"><see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDesignTime">
      <MemberSignature Language="C#" Value="public bool IsDesignTime ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsDesignTime() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.IsDesignTime" />
      <MemberSignature Language="VB.NET" Value="Public Function IsDesignTime () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsDesignTime();" />
      <MemberSignature Language="F#" Value="abstract member IsDesignTime : unit -&gt; bool" Usage="iCscHostObject.IsDesignTime " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="546f0-110">Devuelve un valor que indica si el entorno de desarrollo integrado (IDE) se encuentra actualmente en el modo de tiempo de diseño.</span><span class="sxs-lookup"><span data-stu-id="546f0-110">Returns a value indicating whether the integrated development environment (IDE) is currently in design time mode.</span></span></summary>
        <returns><span data-ttu-id="546f0-111"><see langword="true" /> si el IDE se encuentra actualmente en el modo de tiempo de diseño; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="546f0-111"><see langword="true" /> if the IDE is currently in design time mode; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUpToDate">
      <MemberSignature Language="C#" Value="public bool IsUpToDate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsUpToDate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.IsUpToDate" />
      <MemberSignature Language="VB.NET" Value="Public Function IsUpToDate () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsUpToDate();" />
      <MemberSignature Language="F#" Value="abstract member IsUpToDate : unit -&gt; bool" Usage="iCscHostObject.IsUpToDate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="546f0-112">Devuelve un valor que indica si el proyecto compilado está actualizado.</span><span class="sxs-lookup"><span data-stu-id="546f0-112">Returns a value indicating whether the compiled project is up-to-date.</span></span></summary>
        <returns><span data-ttu-id="546f0-113"><see langword="true" /> si el proyecto compilado está actualizado; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="546f0-113"><see langword="true" /> if the compiled project is up-to-date; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAdditionalLibPaths">
      <MemberSignature Language="C#" Value="public bool SetAdditionalLibPaths (string[] additionalLibPaths);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetAdditionalLibPaths(string[] additionalLibPaths) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetAdditionalLibPaths(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Function SetAdditionalLibPaths (additionalLibPaths As String()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetAdditionalLibPaths(cli::array &lt;System::String ^&gt; ^ additionalLibPaths);" />
      <MemberSignature Language="F#" Value="abstract member SetAdditionalLibPaths : string[] -&gt; bool" Usage="iCscHostObject.SetAdditionalLibPaths additionalLibPaths" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="additionalLibPaths" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="additionalLibPaths"><span data-ttu-id="546f0-114">Matriz de directorios donde buscar referencias.</span><span class="sxs-lookup"><span data-stu-id="546f0-114">An array of directories to search for references.</span></span></param>
        <summary><span data-ttu-id="546f0-115">Especifica más directorios donde buscar referencias.</span><span class="sxs-lookup"><span data-stu-id="546f0-115">Specifies additional directories to search for references.</span></span></summary>
        <returns><span data-ttu-id="546f0-116">Es <see langword="true" /> si el método es correcto; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="546f0-116"><see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAddModules">
      <MemberSignature Language="C#" Value="public bool SetAddModules (string[] addModules);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetAddModules(string[] addModules) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetAddModules(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Function SetAddModules (addModules As String()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetAddModules(cli::array &lt;System::String ^&gt; ^ addModules);" />
      <MemberSignature Language="F#" Value="abstract member SetAddModules : string[] -&gt; bool" Usage="iCscHostObject.SetAddModules addModules" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addModules" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="addModules"><span data-ttu-id="546f0-117">Matriz de módulos que formarán parte del ensamblado.</span><span class="sxs-lookup"><span data-stu-id="546f0-117">An array of modules to be part of the assembly.</span></span></param>
        <summary><span data-ttu-id="546f0-118">Especifica uno o varios módulos que formarán parte del ensamblado.</span><span class="sxs-lookup"><span data-stu-id="546f0-118">Specifies one or more modules to be part of the assembly.</span></span></summary>
        <returns><span data-ttu-id="546f0-119">Es <see langword="true" /> si el método es correcto; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="546f0-119"><see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAllowUnsafeBlocks">
      <MemberSignature Language="C#" Value="public bool SetAllowUnsafeBlocks (bool allowUnsafeBlocks);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetAllowUnsafeBlocks(bool allowUnsafeBlocks) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetAllowUnsafeBlocks(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetAllowUnsafeBlocks (allowUnsafeBlocks As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetAllowUnsafeBlocks(bool allowUnsafeBlocks);" />
      <MemberSignature Language="F#" Value="abstract member SetAllowUnsafeBlocks : bool -&gt; bool" Usage="iCscHostObject.SetAllowUnsafeBlocks allowUnsafeBlocks" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="allowUnsafeBlocks" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="allowUnsafeBlocks"><span data-ttu-id="546f0-120"><see langword="true" /> para permitir que el código que usa la palabra clave unsafe para la compilación; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="546f0-120"><see langword="true" /> to allow code that uses the unsafe keyword to compile; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="546f0-121">Especifica un valor que indica si se debe permitir el código que usa la palabra clave <see langword="unsafe" /> para la compilación.</span><span class="sxs-lookup"><span data-stu-id="546f0-121">Specifies a value indicating whether to allow code that uses the <see langword="unsafe" /> keyword to compile.</span></span></summary>
        <returns><span data-ttu-id="546f0-122">Es <see langword="true" /> si el método es correcto; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="546f0-122"><see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetBaseAddress">
      <MemberSignature Language="C#" Value="public bool SetBaseAddress (string baseAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetBaseAddress(string baseAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetBaseAddress(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetBaseAddress (baseAddress As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetBaseAddress(System::String ^ baseAddress);" />
      <MemberSignature Language="F#" Value="abstract member SetBaseAddress : string -&gt; bool" Usage="iCscHostObject.SetBaseAddress baseAddress" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseAddress" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="baseAddress"><span data-ttu-id="546f0-123">Dirección base preferida en la que se cargará una DLL.</span><span class="sxs-lookup"><span data-stu-id="546f0-123">The preferred base address at which to load a DLL.</span></span></param>
        <summary><span data-ttu-id="546f0-124">Especifica la dirección base preferida para cargar una DLL.</span><span class="sxs-lookup"><span data-stu-id="546f0-124">Specifies the preferred base address at which to load a DLL.</span></span></summary>
        <returns><span data-ttu-id="546f0-125">Es <see langword="true" /> si el método es correcto; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="546f0-125"><see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCheckForOverflowUnderflow">
      <MemberSignature Language="C#" Value="public bool SetCheckForOverflowUnderflow (bool checkForOverflowUnderflow);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetCheckForOverflowUnderflow(bool checkForOverflowUnderflow) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetCheckForOverflowUnderflow(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetCheckForOverflowUnderflow (checkForOverflowUnderflow As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetCheckForOverflowUnderflow(bool checkForOverflowUnderflow);" />
      <MemberSignature Language="F#" Value="abstract member SetCheckForOverflowUnderflow : bool -&gt; bool" Usage="iCscHostObject.SetCheckForOverflowUnderflow checkForOverflowUnderflow" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="checkForOverflowUnderflow" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="checkForOverflowUnderflow"><span data-ttu-id="546f0-126"><see langword="true" /> causa una excepción cuando la aritmética de enteros desborda los límites del tipo de datos; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="546f0-126"><see langword="true" /> to cause an exception when integer arithmetic overflows the bounds of the data type; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="546f0-127">Especifica un valor que indica si la aritmética de enteros que desborda los límites del tipo de datos causa una excepción en tiempo de ejecución.</span><span class="sxs-lookup"><span data-stu-id="546f0-127">Specifies a value indicating whether integer arithmetic that overflows the bounds of the data type causes an exception at run time.</span></span></summary>
        <returns><span data-ttu-id="546f0-128">Es <see langword="true" /> si el método es correcto; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="546f0-128"><see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCodePage">
      <MemberSignature Language="C#" Value="public bool SetCodePage (int codePage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetCodePage(int32 codePage) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetCodePage(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetCodePage (codePage As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetCodePage(int codePage);" />
      <MemberSignature Language="F#" Value="abstract member SetCodePage : int -&gt; bool" Usage="iCscHostObject.SetCodePage codePage" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codePage" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="codePage"><span data-ttu-id="546f0-129">Página de códigos que se va a usar para todos los archivos de código fuente de la compilación.</span><span class="sxs-lookup"><span data-stu-id="546f0-129">The code page to use for all source code files in the compilation.</span></span></param>
        <summary><span data-ttu-id="546f0-130">Especifica la página de códigos que se va a usar para todos los archivos de código fuente de la compilación.</span><span class="sxs-lookup"><span data-stu-id="546f0-130">Specifies the code page to use for all source code files in the compilation.</span></span></summary>
        <returns><span data-ttu-id="546f0-131">Es <see langword="true" /> si el método es correcto; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="546f0-131"><see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDebugType">
      <MemberSignature Language="C#" Value="public bool SetDebugType (string debugType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetDebugType(string debugType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetDebugType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetDebugType (debugType As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetDebugType(System::String ^ debugType);" />
      <MemberSignature Language="F#" Value="abstract member SetDebugType : string -&gt; bool" Usage="iCscHostObject.SetDebugType debugType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="debugType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="debugType"><span data-ttu-id="546f0-132">Tipo de depuración, que puede ser <see langword="full" /> o <see langword="pdbonly" />.</span><span class="sxs-lookup"><span data-stu-id="546f0-132">The debug type, which can be <see langword="full" /> or <see langword="pdbonly" />.</span></span></param>
        <summary><span data-ttu-id="546f0-133">Especifica el tipo de depuración.</span><span class="sxs-lookup"><span data-stu-id="546f0-133">Specifies the debug type.</span></span></summary>
        <returns><span data-ttu-id="546f0-134">Es <see langword="true" /> si el método es correcto; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="546f0-134"><see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDefineConstants">
      <MemberSignature Language="C#" Value="public bool SetDefineConstants (string defineConstants);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetDefineConstants(string defineConstants) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetDefineConstants(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetDefineConstants (defineConstants As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetDefineConstants(System::String ^ defineConstants);" />
      <MemberSignature Language="F#" Value="abstract member SetDefineConstants : string -&gt; bool" Usage="iCscHostObject.SetDefineConstants defineConstants" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="defineConstants" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="defineConstants"><span data-ttu-id="546f0-135">Símbolos de preprocesador que se van a definir.</span><span class="sxs-lookup"><span data-stu-id="546f0-135">The preprocessor symbols to define.</span></span></param>
        <summary><span data-ttu-id="546f0-136">Especifica los símbolos de preprocesador que se van a definir.</span><span class="sxs-lookup"><span data-stu-id="546f0-136">Specifies the preprocessor symbols to define.</span></span></summary>
        <returns><span data-ttu-id="546f0-137">Es <see langword="true" /> si el método es correcto; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="546f0-137"><see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDelaySign">
      <MemberSignature Language="C#" Value="public bool SetDelaySign (bool delaySignExplicitlySet, bool delaySign);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetDelaySign(bool delaySignExplicitlySet, bool delaySign) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetDelaySign(System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetDelaySign (delaySignExplicitlySet As Boolean, delaySign As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetDelaySign(bool delaySignExplicitlySet, bool delaySign);" />
      <MemberSignature Language="F#" Value="abstract member SetDelaySign : bool * bool -&gt; bool" Usage="iCscHostObject.SetDelaySign (delaySignExplicitlySet, delaySign)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="delaySignExplicitlySet" Type="System.Boolean" />
        <Parameter Name="delaySign" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="delaySignExplicitlySet"><span data-ttu-id="546f0-138"><see langword="true" /> si el parámetro <see langword="DelaySign" /> se establece explícitamente; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="546f0-138"><see langword="true" /> if the <see langword="DelaySign" /> parameter is explicitly set; otherwise, <see langword="false" />.</span></span></param>
        <param name="delaySign"><span data-ttu-id="546f0-139"><see langword="true" /> si quiere crear un ensamblado totalmente firmado; <see langword="false" /> si desea colocar la clave pública en el ensamblado.</span><span class="sxs-lookup"><span data-stu-id="546f0-139"><see langword="true" /> if you want to create a fully signed assembly; <see langword="false" /> if you only want to place the public key in the assembly.</span></span></param>
        <summary><span data-ttu-id="546f0-140">Especifica un valor que indica si se debe crear un ensamblado totalmente firmado.</span><span class="sxs-lookup"><span data-stu-id="546f0-140">Specifies a value indicating whether to create a fully signed assembly.</span></span></summary>
        <returns><span data-ttu-id="546f0-141">Es <see langword="true" /> si el método es correcto; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="546f0-141"><see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDisabledWarnings">
      <MemberSignature Language="C#" Value="public bool SetDisabledWarnings (string disabledWarnings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetDisabledWarnings(string disabledWarnings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetDisabledWarnings(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetDisabledWarnings (disabledWarnings As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetDisabledWarnings(System::String ^ disabledWarnings);" />
      <MemberSignature Language="F#" Value="abstract member SetDisabledWarnings : string -&gt; bool" Usage="iCscHostObject.SetDisabledWarnings disabledWarnings" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disabledWarnings" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="disabledWarnings"><span data-ttu-id="546f0-142">Lista de advertencias que se va a deshabilitar.</span><span class="sxs-lookup"><span data-stu-id="546f0-142">The list of warnings to disable.</span></span> <span data-ttu-id="546f0-143">Las advertencias se separan con un punto y coma.</span><span class="sxs-lookup"><span data-stu-id="546f0-143">Multiple warnings are separated with a comma.</span></span></param>
        <summary><span data-ttu-id="546f0-144">Especifica la lista de advertencias que se va a deshabilitar.</span><span class="sxs-lookup"><span data-stu-id="546f0-144">Specifies the list of warnings to disable.</span></span></summary>
        <returns><span data-ttu-id="546f0-145">Es <see langword="true" /> si el método es correcto; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="546f0-145"><see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDocumentationFile">
      <MemberSignature Language="C#" Value="public bool SetDocumentationFile (string documentationFile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetDocumentationFile(string documentationFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetDocumentationFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetDocumentationFile (documentationFile As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetDocumentationFile(System::String ^ documentationFile);" />
      <MemberSignature Language="F#" Value="abstract member SetDocumentationFile : string -&gt; bool" Usage="iCscHostObject.SetDocumentationFile documentationFile" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentationFile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="documentationFile"><span data-ttu-id="546f0-146">Cadena que contiene el nombre del archivo en el que se guardarán los comentarios de documentación procesados.</span><span class="sxs-lookup"><span data-stu-id="546f0-146">A string that contains the name of the file in which to save processed documentation comments.</span></span></param>
        <summary><span data-ttu-id="546f0-147">Especifica el archivo XML en el que se van a guardar los comentarios de documentación procesados.</span><span class="sxs-lookup"><span data-stu-id="546f0-147">Specifies the XML file in which to save processed documentation comments.</span></span></summary>
        <returns><span data-ttu-id="546f0-148">Es <see langword="true" /> si el método es correcto; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="546f0-148"><see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetEmitDebugInformation">
      <MemberSignature Language="C#" Value="public bool SetEmitDebugInformation (bool emitDebugInformation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetEmitDebugInformation(bool emitDebugInformation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetEmitDebugInformation(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetEmitDebugInformation (emitDebugInformation As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetEmitDebugInformation(bool emitDebugInformation);" />
      <MemberSignature Language="F#" Value="abstract member SetEmitDebugInformation : bool -&gt; bool" Usage="iCscHostObject.SetEmitDebugInformation emitDebugInformation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="emitDebugInformation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="emitDebugInformation"><span data-ttu-id="546f0-149"><see langword="true" /> para generar información de depuración y almacenarla en el archivo de base de datos del programa (.pdb); en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="546f0-149"><see langword="true" /> to generate debugging information and place it in a .pdb file; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="546f0-150">Especifica un valor que indica si se debe generar información de depuración y almacenarla en el archivo de base de datos del programa (.pdb).</span><span class="sxs-lookup"><span data-stu-id="546f0-150">Specifies a value indicating whether to generate debugging information and place it in a program database (.pdb) file.</span></span></summary>
        <returns><span data-ttu-id="546f0-151">Es <see langword="true" /> si el método es correcto; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="546f0-151"><see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetErrorReport">
      <MemberSignature Language="C#" Value="public bool SetErrorReport (string errorReport);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetErrorReport(string errorReport) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetErrorReport(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetErrorReport (errorReport As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetErrorReport(System::String ^ errorReport);" />
      <MemberSignature Language="F#" Value="abstract member SetErrorReport : string -&gt; bool" Usage="iCscHostObject.SetErrorReport errorReport" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="errorReport" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="errorReport"><span data-ttu-id="546f0-152">Valor que especifica cómo se notifican los errores internos del compilador a Microsoft.</span><span class="sxs-lookup"><span data-stu-id="546f0-152">A value specifying how internal compiler errors are reported to Microsoft.</span></span> <span data-ttu-id="546f0-153">Este valor puede ser <see langword="prompt" />, <see langword="send" /> o <see langword="none" />.</span><span class="sxs-lookup"><span data-stu-id="546f0-153">This value can be <see langword="prompt" />, <see langword="send" />, or <see langword="none" />.</span></span></param>
        <summary><span data-ttu-id="546f0-154">Especifica un valor que indica cómo se notifican los errores internos del compilador a Microsoft.</span><span class="sxs-lookup"><span data-stu-id="546f0-154">Specifies a value that indicates how internal compiler errors are reported to Microsoft.</span></span></summary>
        <returns><span data-ttu-id="546f0-155">Es <see langword="true" /> si el método es correcto; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="546f0-155"><see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetFileAlignment">
      <MemberSignature Language="C#" Value="public bool SetFileAlignment (int fileAlignment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetFileAlignment(int32 fileAlignment) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetFileAlignment(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetFileAlignment (fileAlignment As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetFileAlignment(int fileAlignment);" />
      <MemberSignature Language="F#" Value="abstract member SetFileAlignment : int -&gt; bool" Usage="iCscHostObject.SetFileAlignment fileAlignment" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileAlignment" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="fileAlignment"><span data-ttu-id="546f0-156">Tamaño de las secciones del archivo de salida.</span><span class="sxs-lookup"><span data-stu-id="546f0-156">The size of sections in the output file.</span></span></param>
        <summary><span data-ttu-id="546f0-157">Especifica el tamaño de las secciones del archivo de salida.</span><span class="sxs-lookup"><span data-stu-id="546f0-157">Specifies the size of sections in the output file.</span></span></summary>
        <returns><span data-ttu-id="546f0-158">Es <see langword="true" /> si el método es correcto; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="546f0-158"><see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetGenerateFullPaths">
      <MemberSignature Language="C#" Value="public bool SetGenerateFullPaths (bool generateFullPaths);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetGenerateFullPaths(bool generateFullPaths) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetGenerateFullPaths(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetGenerateFullPaths (generateFullPaths As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetGenerateFullPaths(bool generateFullPaths);" />
      <MemberSignature Language="F#" Value="abstract member SetGenerateFullPaths : bool -&gt; bool" Usage="iCscHostObject.SetGenerateFullPaths generateFullPaths" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="generateFullPaths" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="generateFullPaths"><span data-ttu-id="546f0-159"><see langword="true" /> para especificar la ruta de acceso absoluta al archivo en la salida del compilador; <see langword="false" /> para especificar solo el nombre del archivo en la salida del compilador.</span><span class="sxs-lookup"><span data-stu-id="546f0-159"><see langword="true" /> specify the absolute path to the file in the compiler output; <see langword="false" /> to specify only the name of the file in the compiler output.</span></span></param>
        <summary><span data-ttu-id="546f0-160">Especifica un valor que indica si se debe especificar la ruta de acceso absoluta al archivo en la salida del compilador.</span><span class="sxs-lookup"><span data-stu-id="546f0-160">Specifies a value indicating whether to specify the absolute path to the file in the compiler output.</span></span></summary>
        <returns><span data-ttu-id="546f0-161">Es <see langword="true" /> si el método es correcto; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="546f0-161"><see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetKeyContainer">
      <MemberSignature Language="C#" Value="public bool SetKeyContainer (string keyContainer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetKeyContainer(string keyContainer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetKeyContainer(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetKeyContainer (keyContainer As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetKeyContainer(System::String ^ keyContainer);" />
      <MemberSignature Language="F#" Value="abstract member SetKeyContainer : string -&gt; bool" Usage="iCscHostObject.SetKeyContainer keyContainer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyContainer" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="keyContainer"><span data-ttu-id="546f0-162">Nombre del contenedor de claves criptográficas.</span><span class="sxs-lookup"><span data-stu-id="546f0-162">The name of the cryptographic key container.</span></span></param>
        <summary><span data-ttu-id="546f0-163">Especifica el nombre del contenedor de claves criptográficas.</span><span class="sxs-lookup"><span data-stu-id="546f0-163">Specifies the name of the cryptographic key container.</span></span></summary>
        <returns><span data-ttu-id="546f0-164">Es <see langword="true" /> si el método es correcto; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="546f0-164"><see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetKeyFile">
      <MemberSignature Language="C#" Value="public bool SetKeyFile (string keyFile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetKeyFile(string keyFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetKeyFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetKeyFile (keyFile As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetKeyFile(System::String ^ keyFile);" />
      <MemberSignature Language="F#" Value="abstract member SetKeyFile : string -&gt; bool" Usage="iCscHostObject.SetKeyFile keyFile" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyFile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="keyFile"><span data-ttu-id="546f0-165">Nombre del archivo que contiene la clave criptográfica.</span><span class="sxs-lookup"><span data-stu-id="546f0-165">The name of the file containing the cryptographic key.</span></span></param>
        <summary><span data-ttu-id="546f0-166">Especifica el nombre de archivo que contiene la clave criptográfica.</span><span class="sxs-lookup"><span data-stu-id="546f0-166">Specifies the file name containing the cryptographic key.</span></span></summary>
        <returns><span data-ttu-id="546f0-167">Es <see langword="true" /> si el método es correcto; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="546f0-167"><see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetLangVersion">
      <MemberSignature Language="C#" Value="public bool SetLangVersion (string langVersion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetLangVersion(string langVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetLangVersion(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetLangVersion (langVersion As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetLangVersion(System::String ^ langVersion);" />
      <MemberSignature Language="F#" Value="abstract member SetLangVersion : string -&gt; bool" Usage="iCscHostObject.SetLangVersion langVersion" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="langVersion" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="langVersion"><span data-ttu-id="546f0-168">Versión del idioma que se va a usar.</span><span class="sxs-lookup"><span data-stu-id="546f0-168">The version of the language to use.</span></span></param>
        <summary><span data-ttu-id="546f0-169">Especifica la versión del idioma que se va a usar.</span><span class="sxs-lookup"><span data-stu-id="546f0-169">Specifies the version of the language to use.</span></span></summary>
        <returns><span data-ttu-id="546f0-170">Es <see langword="true" /> si el método es correcto; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="546f0-170"><see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetLinkResources">
      <MemberSignature Language="C#" Value="public bool SetLinkResources (Microsoft.Build.Framework.ITaskItem[] linkResources);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetLinkResources(class Microsoft.Build.Framework.ITaskItem[] linkResources) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetLinkResources(Microsoft.Build.Framework.ITaskItem[])" />
      <MemberSignature Language="VB.NET" Value="Public Function SetLinkResources (linkResources As ITaskItem()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetLinkResources(cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ linkResources);" />
      <MemberSignature Language="F#" Value="abstract member SetLinkResources : Microsoft.Build.Framework.ITaskItem[] -&gt; bool" Usage="iCscHostObject.SetLinkResources linkResources" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="linkResources" Type="Microsoft.Build.Framework.ITaskItem[]" />
      </Parameters>
      <Docs>
        <param name="linkResources"><span data-ttu-id="546f0-171">Recursos [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] que se van a vincular al archivo de salida.</span><span class="sxs-lookup"><span data-stu-id="546f0-171">The [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] resources to link to the output file.</span></span></param>
        <summary><span data-ttu-id="546f0-172">Crea vínculos a los recursos [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] especificados en el archivo de salida; los archivos de recursos no se colocan en el archivo de salida.</span><span class="sxs-lookup"><span data-stu-id="546f0-172">Creates links to the specified [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] resources in the output file; the resource files are not placed in the output file.</span></span></summary>
        <returns><span data-ttu-id="546f0-173">Es <see langword="true" /> si el método es correcto; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="546f0-173"><see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetMainEntryPoint">
      <MemberSignature Language="C#" Value="public bool SetMainEntryPoint (string targetType, string mainEntryPoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetMainEntryPoint(string targetType, string mainEntryPoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetMainEntryPoint(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetMainEntryPoint (targetType As String, mainEntryPoint As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetMainEntryPoint(System::String ^ targetType, System::String ^ mainEntryPoint);" />
      <MemberSignature Language="F#" Value="abstract member SetMainEntryPoint : string * string -&gt; bool" Usage="iCscHostObject.SetMainEntryPoint (targetType, mainEntryPoint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetType" Type="System.String" />
        <Parameter Name="mainEntryPoint" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetType"><span data-ttu-id="546f0-174">Formato del archivo de salida.</span><span class="sxs-lookup"><span data-stu-id="546f0-174">The file format of the output file.</span></span> <span data-ttu-id="546f0-175">Este valor puede ser <see langword="library" />, <see langword="exe" />, <see langword="module" /> o <see langword="winexe" />.</span><span class="sxs-lookup"><span data-stu-id="546f0-175">This value can be <see langword="library" />, <see langword="exe" />, <see langword="module" />, or <see langword="winexe" />.</span></span></param>
        <param name="mainEntryPoint"><span data-ttu-id="546f0-176">Ubicación del método <see langword="Main" />.</span><span class="sxs-lookup"><span data-stu-id="546f0-176">The location of the <see langword="Main" /> method.</span></span></param>
        <summary><span data-ttu-id="546f0-177">Especifica la ubicación del método <c>Main</c>.</span><span class="sxs-lookup"><span data-stu-id="546f0-177">Specifies the location of the <c>Main</c> method.</span></span></summary>
        <returns><span data-ttu-id="546f0-178">Es <see langword="true" /> si el método es correcto; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="546f0-178"><see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetModuleAssemblyName">
      <MemberSignature Language="C#" Value="public bool SetModuleAssemblyName (string moduleAssemblyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetModuleAssemblyName(string moduleAssemblyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetModuleAssemblyName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetModuleAssemblyName (moduleAssemblyName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetModuleAssemblyName(System::String ^ moduleAssemblyName);" />
      <MemberSignature Language="F#" Value="abstract member SetModuleAssemblyName : string -&gt; bool" Usage="iCscHostObject.SetModuleAssemblyName moduleAssemblyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="moduleAssemblyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="moduleAssemblyName"><span data-ttu-id="546f0-179">Ensamblado con tipos no públicos a los que puede acceder un archivo .netmodule.</span><span class="sxs-lookup"><span data-stu-id="546f0-179">An assembly whose non-public types a .netmodule can access.</span></span></param>
        <summary><span data-ttu-id="546f0-180">Especifica un ensamblado con tipos no públicos a los que puede acceder un archivo .netmodule.</span><span class="sxs-lookup"><span data-stu-id="546f0-180">Specifies an assembly whose non-public types a .netmodule can access.</span></span></summary>
        <returns><span data-ttu-id="546f0-181">Es <see langword="true" /> si el método es correcto; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="546f0-181"><see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetNoConfig">
      <MemberSignature Language="C#" Value="public bool SetNoConfig (bool noConfig);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetNoConfig(bool noConfig) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetNoConfig(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetNoConfig (noConfig As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetNoConfig(bool noConfig);" />
      <MemberSignature Language="F#" Value="abstract member SetNoConfig : bool -&gt; bool" Usage="iCscHostObject.SetNoConfig noConfig" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="noConfig" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="noConfig"><span data-ttu-id="546f0-182"><see langword="true" /> para impedir que el compilador realice la compilación con el archivo csc.rsp; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="546f0-182"><see langword="true" /> to prevent the compiler from compiling with the csc.rsp file; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="546f0-183">Especifica un valor que indica si se debe impedir que el compilador realice la compilación con el archivo csc.rsp.</span><span class="sxs-lookup"><span data-stu-id="546f0-183">Specifies a value indicating whether to prevent the compiler from compiling with the csc.rsp file.</span></span></summary>
        <returns><span data-ttu-id="546f0-184">Es <see langword="true" /> si el método es correcto; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="546f0-184"><see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetNoStandardLib">
      <MemberSignature Language="C#" Value="public bool SetNoStandardLib (bool noStandardLib);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetNoStandardLib(bool noStandardLib) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetNoStandardLib(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetNoStandardLib (noStandardLib As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetNoStandardLib(bool noStandardLib);" />
      <MemberSignature Language="F#" Value="abstract member SetNoStandardLib : bool -&gt; bool" Usage="iCscHostObject.SetNoStandardLib noStandardLib" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="noStandardLib" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="noStandardLib"><span data-ttu-id="546f0-185"><see langword="true" /> para evitar la importación de mscorlib.dll; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="546f0-185"><see langword="true" /> to prevent the import of mscorlib.dll; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="546f0-186">Especifica un valor que indica si se debe evitar la importación del archivo mscorlib.dll.</span><span class="sxs-lookup"><span data-stu-id="546f0-186">Specifies a value indicating whether to prevent the import of mscorlib.dll.</span></span></summary>
        <returns><span data-ttu-id="546f0-187">Es <see langword="true" /> si el método es correcto; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="546f0-187"><see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOptimize">
      <MemberSignature Language="C#" Value="public bool SetOptimize (bool optimize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetOptimize(bool optimize) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetOptimize(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetOptimize (optimize As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetOptimize(bool optimize);" />
      <MemberSignature Language="F#" Value="abstract member SetOptimize : bool -&gt; bool" Usage="iCscHostObject.SetOptimize optimize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="optimize" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="optimize"><span data-ttu-id="546f0-188"><see langword="true" /> para habilitar optimizaciones; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="546f0-188"><see langword="true" /> to enable optimizations; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="546f0-189">Especifica un valor que indica si deben habilitarse las optimizaciones.</span><span class="sxs-lookup"><span data-stu-id="546f0-189">Specifies a value indicating whether to enable optimizations.</span></span></summary>
        <returns><span data-ttu-id="546f0-190">Es <see langword="true" /> si el método es correcto; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="546f0-190"><see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOutputAssembly">
      <MemberSignature Language="C#" Value="public bool SetOutputAssembly (string outputAssembly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetOutputAssembly(string outputAssembly) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetOutputAssembly(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetOutputAssembly (outputAssembly As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetOutputAssembly(System::String ^ outputAssembly);" />
      <MemberSignature Language="F#" Value="abstract member SetOutputAssembly : string -&gt; bool" Usage="iCscHostObject.SetOutputAssembly outputAssembly" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outputAssembly" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="outputAssembly"><span data-ttu-id="546f0-191">Nombre del archivo de salida.</span><span class="sxs-lookup"><span data-stu-id="546f0-191">The name of the output file.</span></span></param>
        <summary><span data-ttu-id="546f0-192">Especifica el nombre del archivo de salida.</span><span class="sxs-lookup"><span data-stu-id="546f0-192">Specifies the name of the output file.</span></span></summary>
        <returns><span data-ttu-id="546f0-193">Es <see langword="true" /> si el método es correcto; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="546f0-193"><see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPdbFile">
      <MemberSignature Language="C#" Value="public bool SetPdbFile (string pdbFile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetPdbFile(string pdbFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetPdbFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetPdbFile (pdbFile As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetPdbFile(System::String ^ pdbFile);" />
      <MemberSignature Language="F#" Value="abstract member SetPdbFile : string -&gt; bool" Usage="iCscHostObject.SetPdbFile pdbFile" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pdbFile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pdbFile"><span data-ttu-id="546f0-194">Archivo .pdb en el que se va a colocar la información de depuración generada.</span><span class="sxs-lookup"><span data-stu-id="546f0-194">The .pdb file in which to place generated debugging information.</span></span></param>
        <summary><span data-ttu-id="546f0-195">Especifica el archivo de base de datos de programa (.pdb) donde se colocará la información de depuración generada.</span><span class="sxs-lookup"><span data-stu-id="546f0-195">Specifies the program database (.pdb) file in which to place generated debugging information.</span></span></summary>
        <returns><span data-ttu-id="546f0-196">Es <see langword="true" /> si el método es correcto; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="546f0-196"><see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPlatform">
      <MemberSignature Language="C#" Value="public bool SetPlatform (string platform);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetPlatform(string platform) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetPlatform(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetPlatform (platform As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetPlatform(System::String ^ platform);" />
      <MemberSignature Language="F#" Value="abstract member SetPlatform : string -&gt; bool" Usage="iCscHostObject.SetPlatform platform" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="platform" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="platform"><span data-ttu-id="546f0-197">La plataforma del procesador que debe destinar el archivo de salida.</span><span class="sxs-lookup"><span data-stu-id="546f0-197">The processor platform to be targeted by the output file.</span></span> <span data-ttu-id="546f0-198">Este valor puede ser <see langword="x86" />, <see langword="x64" /> o <see langword="anycpu" />.</span><span class="sxs-lookup"><span data-stu-id="546f0-198">This value can be <see langword="x86" />, <see langword="x64" />, or <see langword="anycpu" />.</span></span></param>
        <summary><span data-ttu-id="546f0-199">Especifica la plataforma del procesador que debe destinar el archivo de salida.</span><span class="sxs-lookup"><span data-stu-id="546f0-199">Specifies the processor platform to be targeted by the output file.</span></span></summary>
        <returns><span data-ttu-id="546f0-200">Es <see langword="true" /> si el método es correcto; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="546f0-200"><see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetReferences">
      <MemberSignature Language="C#" Value="public bool SetReferences (Microsoft.Build.Framework.ITaskItem[] references);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetReferences(class Microsoft.Build.Framework.ITaskItem[] references) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetReferences(Microsoft.Build.Framework.ITaskItem[])" />
      <MemberSignature Language="VB.NET" Value="Public Function SetReferences (references As ITaskItem()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetReferences(cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ references);" />
      <MemberSignature Language="F#" Value="abstract member SetReferences : Microsoft.Build.Framework.ITaskItem[] -&gt; bool" Usage="iCscHostObject.SetReferences references" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="references" Type="Microsoft.Build.Framework.ITaskItem[]" />
      </Parameters>
      <Docs>
        <param name="references"><span data-ttu-id="546f0-201">Elementos de los que se va a importar la información de tipo público en el proyecto actual.</span><span class="sxs-lookup"><span data-stu-id="546f0-201">The items from which to import public type information into the current project.</span></span></param>
        <summary><span data-ttu-id="546f0-202">Especifica los elementos de los que se va a importar la información de tipo público en el proyecto actual.</span><span class="sxs-lookup"><span data-stu-id="546f0-202">Specifies the items from which to import public type information into the current project.</span></span></summary>
        <returns><span data-ttu-id="546f0-203">Es <see langword="true" /> si el método es correcto; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="546f0-203"><see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetResources">
      <MemberSignature Language="C#" Value="public bool SetResources (Microsoft.Build.Framework.ITaskItem[] resources);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetResources(class Microsoft.Build.Framework.ITaskItem[] resources) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetResources(Microsoft.Build.Framework.ITaskItem[])" />
      <MemberSignature Language="VB.NET" Value="Public Function SetResources (resources As ITaskItem()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetResources(cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ resources);" />
      <MemberSignature Language="F#" Value="abstract member SetResources : Microsoft.Build.Framework.ITaskItem[] -&gt; bool" Usage="iCscHostObject.SetResources resources" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resources" Type="Microsoft.Build.Framework.ITaskItem[]" />
      </Parameters>
      <Docs>
        <param name="resources"><span data-ttu-id="546f0-204">Recursos de [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] que se van a insertar en el archivo de salida.</span><span class="sxs-lookup"><span data-stu-id="546f0-204">The [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] resources to embed into the output file.</span></span></param>
        <summary><span data-ttu-id="546f0-205">Establece los recursos de [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] que se van a insertar en el archivo de salida.</span><span class="sxs-lookup"><span data-stu-id="546f0-205">Specifies the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] resources to embed into the output file.</span></span></summary>
        <returns><span data-ttu-id="546f0-206">Es <see langword="true" /> si el método es correcto; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="546f0-206"><see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetResponseFiles">
      <MemberSignature Language="C#" Value="public bool SetResponseFiles (Microsoft.Build.Framework.ITaskItem[] responseFiles);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetResponseFiles(class Microsoft.Build.Framework.ITaskItem[] responseFiles) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetResponseFiles(Microsoft.Build.Framework.ITaskItem[])" />
      <MemberSignature Language="VB.NET" Value="Public Function SetResponseFiles (responseFiles As ITaskItem()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetResponseFiles(cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ responseFiles);" />
      <MemberSignature Language="F#" Value="abstract member SetResponseFiles : Microsoft.Build.Framework.ITaskItem[] -&gt; bool" Usage="iCscHostObject.SetResponseFiles responseFiles" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="responseFiles" Type="Microsoft.Build.Framework.ITaskItem[]" />
      </Parameters>
      <Docs>
        <param name="responseFiles"><span data-ttu-id="546f0-207">Archivos de respuesta que contienen comandos para el compilador.</span><span class="sxs-lookup"><span data-stu-id="546f0-207">The response files that contain commands for the compiler.</span></span></param>
        <summary><span data-ttu-id="546f0-208">Especifica los archivos de respuesta que contienen comandos para el compilador.</span><span class="sxs-lookup"><span data-stu-id="546f0-208">Specifies the response files that contain commands for the compiler.</span></span></summary>
        <returns><span data-ttu-id="546f0-209">Es <see langword="true" /> si el método es correcto; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="546f0-209"><see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSources">
      <MemberSignature Language="C#" Value="public bool SetSources (Microsoft.Build.Framework.ITaskItem[] sources);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetSources(class Microsoft.Build.Framework.ITaskItem[] sources) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetSources(Microsoft.Build.Framework.ITaskItem[])" />
      <MemberSignature Language="VB.NET" Value="Public Function SetSources (sources As ITaskItem()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetSources(cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ sources);" />
      <MemberSignature Language="F#" Value="abstract member SetSources : Microsoft.Build.Framework.ITaskItem[] -&gt; bool" Usage="iCscHostObject.SetSources sources" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sources" Type="Microsoft.Build.Framework.ITaskItem[]" />
      </Parameters>
      <Docs>
        <param name="sources"><span data-ttu-id="546f0-210">En uno o varios archivos de origen de Visual C#.</span><span class="sxs-lookup"><span data-stu-id="546f0-210">One or more Visual C# source files.</span></span></param>
        <summary><span data-ttu-id="546f0-211">Especifica uno o varios archivos de origen de Visual C#.</span><span class="sxs-lookup"><span data-stu-id="546f0-211">Specifies one or more Visual C# source files.</span></span></summary>
        <returns><span data-ttu-id="546f0-212">Es <see langword="true" /> si el método es correcto; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="546f0-212"><see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTargetType">
      <MemberSignature Language="C#" Value="public bool SetTargetType (string targetType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetTargetType(string targetType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetTargetType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetTargetType (targetType As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetTargetType(System::String ^ targetType);" />
      <MemberSignature Language="F#" Value="abstract member SetTargetType : string -&gt; bool" Usage="iCscHostObject.SetTargetType targetType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetType"><span data-ttu-id="546f0-213">Formato del archivo de salida.</span><span class="sxs-lookup"><span data-stu-id="546f0-213">The file format of the output file.</span></span> <span data-ttu-id="546f0-214">Este valor puede ser <see langword="library" />, <see langword="exe" />, <see langword="module" /> o <see langword="winexe" />.</span><span class="sxs-lookup"><span data-stu-id="546f0-214">This value can be <see langword="library" />, <see langword="exe" />, <see langword="module" />, or <see langword="winexe" />.</span></span></param>
        <summary><span data-ttu-id="546f0-215">Especifica el formato del archivo de salida.</span><span class="sxs-lookup"><span data-stu-id="546f0-215">Specifies the file format of the output file.</span></span></summary>
        <returns><span data-ttu-id="546f0-216">Es <see langword="true" /> si el método es correcto; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="546f0-216"><see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTreatWarningsAsErrors">
      <MemberSignature Language="C#" Value="public bool SetTreatWarningsAsErrors (bool treatWarningsAsErrors);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetTreatWarningsAsErrors(bool treatWarningsAsErrors) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetTreatWarningsAsErrors(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetTreatWarningsAsErrors (treatWarningsAsErrors As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetTreatWarningsAsErrors(bool treatWarningsAsErrors);" />
      <MemberSignature Language="F#" Value="abstract member SetTreatWarningsAsErrors : bool -&gt; bool" Usage="iCscHostObject.SetTreatWarningsAsErrors treatWarningsAsErrors" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="treatWarningsAsErrors" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="treatWarningsAsErrors"><span data-ttu-id="546f0-217"><see langword="true" /> para tratar todas las advertencias como errores; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="546f0-217"><see langword="true" /> to treat all warnings as errors; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="546f0-218">Especifica un valor que indica si todas las advertencias deben tratarse como errores.</span><span class="sxs-lookup"><span data-stu-id="546f0-218">Specifies a value indicating whether to treat all warnings as errors.</span></span></summary>
        <returns><span data-ttu-id="546f0-219">Es <see langword="true" /> si el método es correcto; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="546f0-219"><see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetWarningLevel">
      <MemberSignature Language="C#" Value="public bool SetWarningLevel (int warningLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetWarningLevel(int32 warningLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetWarningLevel(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetWarningLevel (warningLevel As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetWarningLevel(int warningLevel);" />
      <MemberSignature Language="F#" Value="abstract member SetWarningLevel : int -&gt; bool" Usage="iCscHostObject.SetWarningLevel warningLevel" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="warningLevel" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="warningLevel"><span data-ttu-id="546f0-220">Nivel de advertencia, de 0 a 4.</span><span class="sxs-lookup"><span data-stu-id="546f0-220">The warning level, from 0-4.</span></span></param>
        <summary><span data-ttu-id="546f0-221">Especifica el nivel de advertencia, de 0 a 4.</span><span class="sxs-lookup"><span data-stu-id="546f0-221">Specifies the warning level, from 0-4.</span></span></summary>
        <returns><span data-ttu-id="546f0-222">Es <see langword="true" /> si el método es correcto; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="546f0-222"><see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetWarningsAsErrors">
      <MemberSignature Language="C#" Value="public bool SetWarningsAsErrors (string warningsAsErrors);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetWarningsAsErrors(string warningsAsErrors) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetWarningsAsErrors(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetWarningsAsErrors (warningsAsErrors As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetWarningsAsErrors(System::String ^ warningsAsErrors);" />
      <MemberSignature Language="F#" Value="abstract member SetWarningsAsErrors : string -&gt; bool" Usage="iCscHostObject.SetWarningsAsErrors warningsAsErrors" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="warningsAsErrors" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="warningsAsErrors"><span data-ttu-id="546f0-223">Lista de advertencias que se tratarán como errores.</span><span class="sxs-lookup"><span data-stu-id="546f0-223">A list of warnings to treat as errors.</span></span></param>
        <summary><span data-ttu-id="546f0-224">Especifica una lista de advertencias que se tratarán como errores.</span><span class="sxs-lookup"><span data-stu-id="546f0-224">Specifies a list of warnings to treat as errors.</span></span></summary>
        <returns><span data-ttu-id="546f0-225">Es <see langword="true" /> si el método es correcto; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="546f0-225"><see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetWarningsNotAsErrors">
      <MemberSignature Language="C#" Value="public bool SetWarningsNotAsErrors (string warningsNotAsErrors);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetWarningsNotAsErrors(string warningsNotAsErrors) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetWarningsNotAsErrors(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetWarningsNotAsErrors (warningsNotAsErrors As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetWarningsNotAsErrors(System::String ^ warningsNotAsErrors);" />
      <MemberSignature Language="F#" Value="abstract member SetWarningsNotAsErrors : string -&gt; bool" Usage="iCscHostObject.SetWarningsNotAsErrors warningsNotAsErrors" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="warningsNotAsErrors" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="warningsNotAsErrors"><span data-ttu-id="546f0-226">Lista de advertencias que no se tratan como errores.</span><span class="sxs-lookup"><span data-stu-id="546f0-226">A list of warnings that are not treated as errors.</span></span></param>
        <summary><span data-ttu-id="546f0-227">Especifica una lista de advertencias que no se tratarán como errores.</span><span class="sxs-lookup"><span data-stu-id="546f0-227">Specifies a list of warnings that are not treated as errors.</span></span></summary>
        <returns><span data-ttu-id="546f0-228">Es <see langword="true" /> si el método es correcto; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="546f0-228"><see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetWin32Icon">
      <MemberSignature Language="C#" Value="public bool SetWin32Icon (string win32Icon);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetWin32Icon(string win32Icon) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetWin32Icon(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetWin32Icon (win32Icon As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetWin32Icon(System::String ^ win32Icon);" />
      <MemberSignature Language="F#" Value="abstract member SetWin32Icon : string -&gt; bool" Usage="iCscHostObject.SetWin32Icon win32Icon" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="win32Icon" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="win32Icon"><span data-ttu-id="546f0-229">Archivo .ico que se va a insertar en el ensamblado.</span><span class="sxs-lookup"><span data-stu-id="546f0-229">The .ico file to insert into the assembly.</span></span></param>
        <summary><span data-ttu-id="546f0-230">Especifica un archivo .ico para insertarlo en el ensamblado.</span><span class="sxs-lookup"><span data-stu-id="546f0-230">Specifies an .ico file to insert into the assembly.</span></span></summary>
        <returns><span data-ttu-id="546f0-231">Es <see langword="true" /> si el método es correcto; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="546f0-231"><see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetWin32Resource">
      <MemberSignature Language="C#" Value="public bool SetWin32Resource (string win32Resource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetWin32Resource(string win32Resource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Hosting.ICscHostObject.SetWin32Resource(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetWin32Resource (win32Resource As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetWin32Resource(System::String ^ win32Resource);" />
      <MemberSignature Language="F#" Value="abstract member SetWin32Resource : string -&gt; bool" Usage="iCscHostObject.SetWin32Resource win32Resource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="win32Resource" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="win32Resource"><span data-ttu-id="546f0-232">Archivo de recursos Win32 (.res) que se va a insertar en el archivo de salida.</span><span class="sxs-lookup"><span data-stu-id="546f0-232">A Win32 resource (.res) file to insert into the output file.</span></span></param>
        <summary><span data-ttu-id="546f0-233">Especifica un archivo de recursos Win32 (.res) para insertarlo en el archivo de salida.</span><span class="sxs-lookup"><span data-stu-id="546f0-233">Specifies a Win32 resource (.res) file to insert into the output file.</span></span></summary>
        <returns><span data-ttu-id="546f0-234">Es <see langword="true" /> si el método es correcto; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="546f0-234"><see langword="true" /> if the method was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
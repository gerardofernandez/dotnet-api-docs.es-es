<Type Name="MetaAssociation" FullName="System.Data.Linq.Mapping.MetaAssociation">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b29e1e88e40b236a7c93c46916fca93eba55e4db" /><Meta Name="ms.sourcegitcommit" Value="662f143e6be46d519ff8ab4451d543d91e651478" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="12/18/2018" /><Meta Name="ms.locfileid" Value="53566086" /></Metadata><TypeSignature Language="C#" Value="public abstract class MetaAssociation" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MetaAssociation extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Linq.Mapping.MetaAssociation" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MetaAssociation" />
  <TypeSignature Language="C++ CLI" Value="public ref class MetaAssociation abstract" />
  <TypeSignature Language="F#" Value="type MetaAssociation = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Linq</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="facda-101">Representa una relación de asociación entre dos tipos de entidad.</span><span class="sxs-lookup"><span data-stu-id="facda-101">Represents an association relationship between two entity types.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MetaAssociation ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.Mapping.MetaAssociation.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MetaAssociation();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="facda-102">Inicializa una nueva instancia de la clase <see cref="T:System.Data.Linq.Mapping.MetaAssociation" />.</span><span class="sxs-lookup"><span data-stu-id="facda-102">Initializes a new instance of the <see cref="T:System.Data.Linq.Mapping.MetaAssociation" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteOnNull">
      <MemberSignature Language="C#" Value="public abstract bool DeleteOnNull { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DeleteOnNull" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaAssociation.DeleteOnNull" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DeleteOnNull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool DeleteOnNull { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.DeleteOnNull : bool" Usage="System.Data.Linq.Mapping.MetaAssociation.DeleteOnNull" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="facda-103">Cuando se invalida en una clase derivada, obtiene un valor que indica si el objeto se debe eliminar en caso de que la asociación esté establecida en <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="facda-103">When overridden in a derived class, gets a value that indicates whether the object should be deleted when the association is set to <see langword="null" />.</span></span></summary>
        <value><span data-ttu-id="facda-104"><see langword="true" /> Si el objeto se elimina cuando la asociación está establecida en <see langword="null" />; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="facda-104"><see langword="true" /> if the object is deleted when the association is set to <see langword="null" />; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteRule">
      <MemberSignature Language="C#" Value="public abstract string DeleteRule { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DeleteRule" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaAssociation.DeleteRule" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DeleteRule As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ DeleteRule { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeleteRule : string" Usage="System.Data.Linq.Mapping.MetaAssociation.DeleteRule" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="facda-105">Cuando se invalida en una clase derivada, obtiene el comportamiento en caso de que se elimine el elemento secundario.</span><span class="sxs-lookup"><span data-stu-id="facda-105">When overridden in a derived class, gets the behavior when the child is deleted.</span></span></summary>
        <value><span data-ttu-id="facda-106">Cadena que representa la regla o <see langword="null" /> si no se especifica ninguna acción al eliminar.</span><span class="sxs-lookup"><span data-stu-id="facda-106">The string representing the rule, or <see langword="null" /> if no action is specified on delete.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="facda-107">Ejemplos de reglas son "Cascada", "SET NULL" y así sucesivamente.</span><span class="sxs-lookup"><span data-stu-id="facda-107">Examples of rules are "CASCADE", "SET NULL", and so forth.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsForeignKey">
      <MemberSignature Language="C#" Value="public abstract bool IsForeignKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsForeignKey" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaAssociation.IsForeignKey" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsForeignKey As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsForeignKey { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsForeignKey : bool" Usage="System.Data.Linq.Mapping.MetaAssociation.IsForeignKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="facda-108">Cuando se invalida en una clase derivada, obtiene un valor que indica si el otro tipo es el elemento primario de este tipo.</span><span class="sxs-lookup"><span data-stu-id="facda-108">When overridden in a derived class, gets a value that indicates whether the other type is the parent of this type.</span></span></summary>
        <value><span data-ttu-id="facda-109"><see langword="true" /> es que el otro tipo es el elemento primario de este tipo; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="facda-109"><see langword="true" /> is the other type is the parent of this type; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMany">
      <MemberSignature Language="C#" Value="public abstract bool IsMany { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMany" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaAssociation.IsMany" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsMany As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsMany { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMany : bool" Usage="System.Data.Linq.Mapping.MetaAssociation.IsMany" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="facda-110">Cuando se invalida en una clase derivada, obtiene un valor que indica si la asociación representa una relación uno a varios.</span><span class="sxs-lookup"><span data-stu-id="facda-110">When overridden in a derived class, gets a value that indicates whether the association represents a one-to-many relationship.</span></span></summary>
        <value><span data-ttu-id="facda-111"><see langword="true" /> Si la asociación representa una relación uno a varios; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="facda-111"><see langword="true" /> if the association represents a one-to-many relationship; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNullable">
      <MemberSignature Language="C#" Value="public abstract bool IsNullable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNullable" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaAssociation.IsNullable" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsNullable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsNullable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNullable : bool" Usage="System.Data.Linq.Mapping.MetaAssociation.IsNullable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="facda-112">Cuando se invalida en una clase derivada, obtiene un valor que indica si la asociación puede ser <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="facda-112">When overridden in a derived class, gets a value that indicates whether the association can be <see langword="null" />.</span></span></summary>
        <value><span data-ttu-id="facda-113"><see langword="true" /> Si la asociación puede ser <see langword="null" />; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="facda-113"><see langword="true" /> if the association can be <see langword="null" />; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUnique">
      <MemberSignature Language="C#" Value="public abstract bool IsUnique { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUnique" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaAssociation.IsUnique" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsUnique As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsUnique { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsUnique : bool" Usage="System.Data.Linq.Mapping.MetaAssociation.IsUnique" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="facda-114">Cuando se invalida en una clase derivada, obtiene un valor que indica si la asociación es única.</span><span class="sxs-lookup"><span data-stu-id="facda-114">When overridden in a derived class, gets a value that indicates whether the association is unique.</span></span></summary>
        <value><span data-ttu-id="facda-115"><see langword="true" /> Si la asociación es única; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="facda-115"><see langword="true" /> if the association is unique; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="facda-116">Esta propiedad indica una restricción de unicidad en la base de datos.</span><span class="sxs-lookup"><span data-stu-id="facda-116">This property indicates a uniqueness constraint in the database.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OtherKey">
      <MemberSignature Language="C#" Value="public abstract System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Linq.Mapping.MetaDataMember&gt; OtherKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Data.Linq.Mapping.MetaDataMember&gt; OtherKey" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaAssociation.OtherKey" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property OtherKey As ReadOnlyCollection(Of MetaDataMember)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Data::Linq::Mapping::MetaDataMember ^&gt; ^ OtherKey { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Data::Linq::Mapping::MetaDataMember ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OtherKey : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Linq.Mapping.MetaDataMember&gt;" Usage="System.Data.Linq.Mapping.MetaAssociation.OtherKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Linq.Mapping.MetaDataMember&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="facda-117">Cuando se invalida en una clase derivada, obtiene una lista de miembros que representa los valores del otro lado de la asociación.</span><span class="sxs-lookup"><span data-stu-id="facda-117">When overridden in a derived class, gets a list of members that represents the values on the other side of the association.</span></span></summary>
        <value><span data-ttu-id="facda-118">Una colección que representa los valores en el otro lado de la asociación.</span><span class="sxs-lookup"><span data-stu-id="facda-118">A collection representing values on the other side of the association.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OtherKeyIsPrimaryKey">
      <MemberSignature Language="C#" Value="public abstract bool OtherKeyIsPrimaryKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool OtherKeyIsPrimaryKey" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaAssociation.OtherKeyIsPrimaryKey" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property OtherKeyIsPrimaryKey As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool OtherKeyIsPrimaryKey { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.OtherKeyIsPrimaryKey : bool" Usage="System.Data.Linq.Mapping.MetaAssociation.OtherKeyIsPrimaryKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="facda-119">Cuando se invalida en una clase derivada, obtiene un valor que indica si <see cref="P:System.Data.Linq.Mapping.MetaAssociation.OtherKey" /> forma la identidad del otro tipo.</span><span class="sxs-lookup"><span data-stu-id="facda-119">When overridden in a derived class, gets a value that indicates whether the <see cref="P:System.Data.Linq.Mapping.MetaAssociation.OtherKey" /> forms the identity of the other type.</span></span></summary>
        <value><span data-ttu-id="facda-120"><see langword="true" /> Si el <see cref="P:System.Data.Linq.Mapping.MetaAssociation.OtherKey" /> forma la identidad (clave principal) del otro tipo; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="facda-120"><see langword="true" /> if the <see cref="P:System.Data.Linq.Mapping.MetaAssociation.OtherKey" /> forms the identity (primary key) of the other type; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OtherMember">
      <MemberSignature Language="C#" Value="public abstract System.Data.Linq.Mapping.MetaDataMember OtherMember { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Linq.Mapping.MetaDataMember OtherMember" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaAssociation.OtherMember" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property OtherMember As MetaDataMember" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Data::Linq::Mapping::MetaDataMember ^ OtherMember { System::Data::Linq::Mapping::MetaDataMember ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OtherMember : System.Data.Linq.Mapping.MetaDataMember" Usage="System.Data.Linq.Mapping.MetaAssociation.OtherMember" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.MetaDataMember</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="facda-121">Cuando se invalidad en una clase derivada, obtiene el miembro del otro lado de esta asociación que representa la asociación inversa.</span><span class="sxs-lookup"><span data-stu-id="facda-121">When overridden in a derived class, gets the member on the other side of this association that represents the reverse association.</span></span></summary>
        <value><span data-ttu-id="facda-122">El miembro en el otro lado de esta asociación que representa la asociación inversa.</span><span class="sxs-lookup"><span data-stu-id="facda-122">The member on the other side of this association that represents the reverse association.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="facda-123">Este valor puede ser null.</span><span class="sxs-lookup"><span data-stu-id="facda-123">This value can be null.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OtherType">
      <MemberSignature Language="C#" Value="public abstract System.Data.Linq.Mapping.MetaType OtherType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Linq.Mapping.MetaType OtherType" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaAssociation.OtherType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property OtherType As MetaType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Data::Linq::Mapping::MetaType ^ OtherType { System::Data::Linq::Mapping::MetaType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OtherType : System.Data.Linq.Mapping.MetaType" Usage="System.Data.Linq.Mapping.MetaAssociation.OtherType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.MetaType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="facda-124">Cuando se invalida en una clase derivada, obtiene el tipo del otro lado de la asociación.</span><span class="sxs-lookup"><span data-stu-id="facda-124">When overridden in a derived class, gets the type on the other side of the association.</span></span></summary>
        <value><span data-ttu-id="facda-125">El tipo del otro lado de la asociación.</span><span class="sxs-lookup"><span data-stu-id="facda-125">The type on the other side of the association.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThisKey">
      <MemberSignature Language="C#" Value="public abstract System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Linq.Mapping.MetaDataMember&gt; ThisKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Data.Linq.Mapping.MetaDataMember&gt; ThisKey" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaAssociation.ThisKey" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property ThisKey As ReadOnlyCollection(Of MetaDataMember)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Data::Linq::Mapping::MetaDataMember ^&gt; ^ ThisKey { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Data::Linq::Mapping::MetaDataMember ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ThisKey : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Linq.Mapping.MetaDataMember&gt;" Usage="System.Data.Linq.Mapping.MetaAssociation.ThisKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Linq.Mapping.MetaDataMember&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="facda-126">Cuando se invalida en una clase derivada, obtiene una lista de miembros que representa los valores de este lado de la asociación.</span><span class="sxs-lookup"><span data-stu-id="facda-126">When overridden in a derived class, gets a list of members representing the values on this side of the association.</span></span></summary>
        <value><span data-ttu-id="facda-127">Una colección que representa los valores en este lado de la asociación.</span><span class="sxs-lookup"><span data-stu-id="facda-127">A collection representing the values on this side of the association.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThisKeyIsPrimaryKey">
      <MemberSignature Language="C#" Value="public abstract bool ThisKeyIsPrimaryKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ThisKeyIsPrimaryKey" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaAssociation.ThisKeyIsPrimaryKey" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property ThisKeyIsPrimaryKey As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool ThisKeyIsPrimaryKey { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ThisKeyIsPrimaryKey : bool" Usage="System.Data.Linq.Mapping.MetaAssociation.ThisKeyIsPrimaryKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="facda-128">Cuando se invalida en una clase derivada, obtiene un valor que indica si <see cref="P:System.Data.Linq.Mapping.MetaAssociation.ThisKey" /> forma la identidad de este tipo.</span><span class="sxs-lookup"><span data-stu-id="facda-128">When overridden in a derived class, gets a value that indicates whether <see cref="P:System.Data.Linq.Mapping.MetaAssociation.ThisKey" /> forms the identity of this type.</span></span></summary>
        <value><span data-ttu-id="facda-129"><see langword="true" /> Si <see cref="P:System.Data.Linq.Mapping.MetaAssociation.ThisKey" /> forma la identidad (clave principal) de la asociación; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="facda-129"><see langword="true" /> if <see cref="P:System.Data.Linq.Mapping.MetaAssociation.ThisKey" /> forms the identity (primary key) of the association; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThisMember">
      <MemberSignature Language="C#" Value="public abstract System.Data.Linq.Mapping.MetaDataMember ThisMember { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Linq.Mapping.MetaDataMember ThisMember" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaAssociation.ThisMember" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property ThisMember As MetaDataMember" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Data::Linq::Mapping::MetaDataMember ^ ThisMember { System::Data::Linq::Mapping::MetaDataMember ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ThisMember : System.Data.Linq.Mapping.MetaDataMember" Usage="System.Data.Linq.Mapping.MetaAssociation.ThisMember" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.MetaDataMember</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="facda-130">Cuando se invalida en una clase derivada, obtiene el miembro de este lado que representa la asociación.</span><span class="sxs-lookup"><span data-stu-id="facda-130">When overridden in a derived class, gets the member on this side that represents the association.</span></span></summary>
        <value><span data-ttu-id="facda-131">El miembro en este lado que representa la asociación.</span><span class="sxs-lookup"><span data-stu-id="facda-131">The member on this side that represents the association.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
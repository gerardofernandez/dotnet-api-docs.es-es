<Type Name="ClientBase&lt;TChannel&gt;+BeginOperationDelegate" FullName="System.ServiceModel.ClientBase&lt;TChannel&gt;+BeginOperationDelegate">
  <Metadata><Meta Name="ms.openlocfilehash" Value="20953e588de4a3f9395846277ac1fabeb0f47717" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37613361" /></Metadata><TypeSignature Language="C#" Value="protected delegate IAsyncResult ClientBase&lt;TChannel&gt;.BeginOperationDelegate(object[] inValues, AsyncCallback asyncCallback, object state) where TChannel : class;" />
  <TypeSignature Language="ILAsm" Value=".class nested protected auto ansi sealed ClientBase`1/BeginOperationDelegate&lt;class TChannel&gt; extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.ClientBase`1.BeginOperationDelegate" />
  <TypeSignature Language="VB.NET" Value="Protected Delegate Function ClientBase(Of TChannel).BeginOperationDelegate(inValues As Object(), asyncCallback As AsyncCallback, state As Object) As IAsyncResult " />
  <TypeSignature Language="C++ CLI" Value="protected:  where TChannel : classdelegate IAsyncResult ^ ClientBase&lt;TChannel&gt;::BeginOperationDelegate(cli::array &lt;System::Object ^&gt; ^ inValues, AsyncCallback ^ asyncCallback, System::Object ^ state);" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TChannel">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="inValues" Type="System.Object[]" />
    <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
    <Parameter Name="state" Type="System.Object" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.IAsyncResult</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="inValues"><span data-ttu-id="dc682-101">Los valores de entrada a la llamada asincrónica.</span><span class="sxs-lookup"><span data-stu-id="dc682-101">The input values to the asynchronous call.</span></span></param>
    <param name="asyncCallback"><span data-ttu-id="dc682-102">Referencia al método que se va a llamar cuando finalice la operación asincrónica correspondiente.</span><span class="sxs-lookup"><span data-stu-id="dc682-102">Reference to the method to be called when the corresponding asynchronous operation completes.</span></span></param>
    <param name="state"><span data-ttu-id="dc682-103">Un <see cref="T:System.Object" /> que permite al cliente distinguir entre diferentes llamadas asincrónicas.</span><span class="sxs-lookup"><span data-stu-id="dc682-103">An <see cref="T:System.Object" /> that lets the client distinguish between different asynchronous calls.</span></span> <span data-ttu-id="dc682-104">Se pone a disposición del cliente en el parámetro de argumentos de la devolución de llamada de realización de evento.</span><span class="sxs-lookup"><span data-stu-id="dc682-104">It is made available to the client in the arguments parameter of the event completion callback.</span></span></param>
    <summary><span data-ttu-id="dc682-105">Un delegado utilizado por <see cref="M:System.ServiceModel.ClientBase`1.InvokeAsync(System.ServiceModel.ClientBase{`0}.BeginOperationDelegate,System.Object[],System.ServiceModel.ClientBase{`0}.EndOperationDelegate,System.Threading.SendOrPostCallback,System.Object)" /> para llamar a las operaciones asincrónicas en el cliente.</span><span class="sxs-lookup"><span data-stu-id="dc682-105">A delegate that is used by <see cref="M:System.ServiceModel.ClientBase`1.InvokeAsync(System.ServiceModel.ClientBase{`0}.BeginOperationDelegate,System.Object[],System.ServiceModel.ClientBase{`0}.EndOperationDelegate,System.Threading.SendOrPostCallback,System.Object)" /> for calling asynchronous operations on the client.</span></span></summary>
    <returns>To be added.</returns>
    <remarks>To be added.</remarks>
  </Docs>
</Type>
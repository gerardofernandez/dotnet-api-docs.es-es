<Type Name="OperationContext" FullName="System.ServiceModel.OperationContext">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d6b3a89ee1809b27b7eda387b7f6efb626809290" /><Meta Name="ms.sourcegitcommit" Value="220917117f9d774aaa482439aa7324e39dc1f5b6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="02/25/2019" /><Meta Name="ms.locfileid" Value="56767285" /></Metadata><TypeSignature Language="C#" Value="public sealed class OperationContext : System.ServiceModel.IExtensibleObject&lt;System.ServiceModel.OperationContext&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OperationContext extends System.Object implements class System.ServiceModel.IExtensibleObject`1&lt;class System.ServiceModel.OperationContext&gt;" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.OperationContext" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OperationContext&#xA;Implements IExtensibleObject(Of OperationContext)" />
  <TypeSignature Language="C++ CLI" Value="public ref class OperationContext sealed : System::ServiceModel::IExtensibleObject&lt;System::ServiceModel::OperationContext ^&gt;" />
  <TypeSignature Language="F#" Value="type OperationContext = class&#xA;    interface IExtensibleObject&lt;OperationContext&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.1</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.IExtensibleObject&lt;System.ServiceModel.OperationContext&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="5e645-101">Proporciona acceso al contexto de ejecución de un método de servicio.</span><span class="sxs-lookup"><span data-stu-id="5e645-101">Provides access to the execution context of a service method.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e645-102">Utilice <xref:System.ServiceModel.OperationContext> desde una operación de servicio para tener acceso al entorno de ejecución de operación actual.</span><span class="sxs-lookup"><span data-stu-id="5e645-102">Use the <xref:System.ServiceModel.OperationContext> from within a service operation to access the current operation execution environment.</span></span> <span data-ttu-id="5e645-103">En particular, el contexto de la operación se utiliza para tener acceso a los canales de devolución de llamada en servicios dúplex, almacenar datos de estado adicionales en partes de las operaciones, y para tener acceso a los encabezados de mensaje entrante y propiedades así como agregar encabezados de mensajes salientes y propiedades.</span><span class="sxs-lookup"><span data-stu-id="5e645-103">In particular, the operation context is used to access callback channels in duplex services, to store extra state data across portions of the operations, and to access incoming message headers and properties as well as add outgoing message headers and properties.</span></span>  
  
 <span data-ttu-id="5e645-104">Para obtener más información sobre el uso de extensiones para almacenar datos de estado, vea [objetos extensibles](~/docs/framework/wcf/extending/extensible-objects.md).</span><span class="sxs-lookup"><span data-stu-id="5e645-104">For more information about using extensions to store state data, see [Extensible Objects](~/docs/framework/wcf/extending/extensible-objects.md).</span></span>  
  
 <span data-ttu-id="5e645-105"><xref:System.ServiceModel.OperationContext> proporciona los siguientes métodos y propiedades.</span><span class="sxs-lookup"><span data-stu-id="5e645-105">The <xref:System.ServiceModel.OperationContext> has the following properties and methods.</span></span>  
  
-   <span data-ttu-id="5e645-106">La propiedad <xref:System.ServiceModel.OperationContext.Current%2A> devuelve el objeto <xref:System.ServiceModel.OperationContext> que representa el contexto de ejecución actual.</span><span class="sxs-lookup"><span data-stu-id="5e645-106">The <xref:System.ServiceModel.OperationContext.Current%2A> property returns the <xref:System.ServiceModel.OperationContext> object representing the current execution context.</span></span>  
  
-   <span data-ttu-id="5e645-107">La propiedad <xref:System.ServiceModel.OperationContext.ServiceSecurityContext%2A> devuelve el entorno de seguridad en el que el método se ejecuta.</span><span class="sxs-lookup"><span data-stu-id="5e645-107">The <xref:System.ServiceModel.OperationContext.ServiceSecurityContext%2A> property returns the security environment under which the method executes.</span></span>  
  
-   <span data-ttu-id="5e645-108">La propiedad <xref:System.ServiceModel.OperationContext.EndpointDispatcher%2A> obtiene el <xref:System.ServiceModel.Dispatcher.EndpointDispatcher?displayProperty=nameWithType> de la operación.</span><span class="sxs-lookup"><span data-stu-id="5e645-108">The <xref:System.ServiceModel.OperationContext.EndpointDispatcher%2A> property gets the operation's <xref:System.ServiceModel.Dispatcher.EndpointDispatcher?displayProperty=nameWithType>.</span></span>  
  
-   <span data-ttu-id="5e645-109">La propiedad <xref:System.ServiceModel.OperationContext.Extensions%2A> devuelve una colección de extensiones para el <xref:System.ServiceModel.OperationContext> actual.</span><span class="sxs-lookup"><span data-stu-id="5e645-109">The <xref:System.ServiceModel.OperationContext.Extensions%2A> property returns an extension collection for the current <xref:System.ServiceModel.OperationContext>.</span></span>  
  
-   <span data-ttu-id="5e645-110">La propiedad <xref:System.ServiceModel.OperationContext.Host%2A> devuelve el objeto <xref:System.ServiceModel.ServiceHostBase> que administra el servicio.</span><span class="sxs-lookup"><span data-stu-id="5e645-110">The <xref:System.ServiceModel.OperationContext.Host%2A> property returns the <xref:System.ServiceModel.ServiceHostBase> object that manages the service.</span></span>  
  
-   <span data-ttu-id="5e645-111">La propiedad <xref:System.ServiceModel.OperationContext.HasSupportingTokens%2A> devuelve un valor que indica si el método tiene tokens auxiliares. En ese caso, la propiedad <xref:System.ServiceModel.OperationContext.SupportingTokens%2A> los obtendrá.</span><span class="sxs-lookup"><span data-stu-id="5e645-111">The <xref:System.ServiceModel.OperationContext.HasSupportingTokens%2A> property returns a value that indicates whether the method has supporting tokens, if so, the <xref:System.ServiceModel.OperationContext.SupportingTokens%2A> property gets them.</span></span>  
  
-   <span data-ttu-id="5e645-112">Las propiedades <xref:System.ServiceModel.OperationContext.IncomingMessageHeaders%2A>, <xref:System.ServiceModel.OperationContext.IncomingMessageProperties%2A> y <xref:System.ServiceModel.OperationContext.IncomingMessageVersion%2A> reciben estos elementos desde el mensaje entrante.</span><span class="sxs-lookup"><span data-stu-id="5e645-112">The <xref:System.ServiceModel.OperationContext.IncomingMessageHeaders%2A>, <xref:System.ServiceModel.OperationContext.IncomingMessageProperties%2A>, and <xref:System.ServiceModel.OperationContext.IncomingMessageVersion%2A> properties get these items from the incoming message.</span></span>  
  
-   <span data-ttu-id="5e645-113">El evento <xref:System.ServiceModel.OperationContext.OperationCompleted> se desencadena cuando la operación se ha completado.</span><span class="sxs-lookup"><span data-stu-id="5e645-113">The <xref:System.ServiceModel.OperationContext.OperationCompleted> event is fired when the operation has completed.</span></span>  
  
-   <span data-ttu-id="5e645-114">Las propiedades <xref:System.ServiceModel.OperationContext.OutgoingMessageHeaders%2A> y <xref:System.ServiceModel.OperationContext.OutgoingMessageProperties%2A> obtienen estos elementos para el mensaje saliente.</span><span class="sxs-lookup"><span data-stu-id="5e645-114">The <xref:System.ServiceModel.OperationContext.OutgoingMessageHeaders%2A> and <xref:System.ServiceModel.OperationContext.OutgoingMessageProperties%2A> properties get these items for the outbound message.</span></span>  
  
-   <span data-ttu-id="5e645-115">La propiedad <xref:System.ServiceModel.OperationContext.RequestContext%2A> devuelve la implementación de <xref:System.ServiceModel.Channels.RequestContext> para el método.</span><span class="sxs-lookup"><span data-stu-id="5e645-115">The <xref:System.ServiceModel.OperationContext.RequestContext%2A> property returns the <xref:System.ServiceModel.Channels.RequestContext> implementation for the method.</span></span>  
  
-   <span data-ttu-id="5e645-116">La propiedad <xref:System.ServiceModel.OperationContext.InstanceContext%2A> devuelve el <xref:System.ServiceModel.InstanceContext> asociado con la operación.</span><span class="sxs-lookup"><span data-stu-id="5e645-116">The <xref:System.ServiceModel.OperationContext.InstanceContext%2A> property returns the <xref:System.ServiceModel.InstanceContext> associated with the operation.</span></span>  
  
-   <span data-ttu-id="5e645-117">La propiedad <xref:System.ServiceModel.OperationContext.SessionId%2A> devuelve el identificador de la sesión para el canal y objeto actuales.</span><span class="sxs-lookup"><span data-stu-id="5e645-117">The <xref:System.ServiceModel.OperationContext.SessionId%2A> property returns the session identifier for the current channel and object.</span></span>  
  
-   <span data-ttu-id="5e645-118">El método <xref:System.ServiceModel.OperationContext.GetCallbackChannel%2A> devuelve un canal de devolución de llamada al autor de la llamada en el caso de comunicación dúplex.</span><span class="sxs-lookup"><span data-stu-id="5e645-118">The <xref:System.ServiceModel.OperationContext.GetCallbackChannel%2A> method returns a callback channel to the caller in the case of duplex communication.</span></span>  
  
-   <span data-ttu-id="5e645-119">El método <xref:System.ServiceModel.OperationContext.SetTransactionComplete%2A> confirma la transacción actual.</span><span class="sxs-lookup"><span data-stu-id="5e645-119">The <xref:System.ServiceModel.OperationContext.SetTransactionComplete%2A> method commits the current transaction.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5e645-120">El ejemplo de código siguiente usa la propiedad <xref:System.ServiceModel.OperationContext.Current%2A> y el método <xref:System.ServiceModel.OperationContext.GetCallbackChannel%2A> para devolver el canal al autor de la llamada desde un método.</span><span class="sxs-lookup"><span data-stu-id="5e645-120">The following code example uses the <xref:System.ServiceModel.OperationContext.Current%2A> property and <xref:System.ServiceModel.OperationContext.GetCallbackChannel%2A> method to obtain the channel back to the caller from within a method.</span></span> <span data-ttu-id="5e645-121">Todos los métodos en este ejemplo son unidireccionales, lo que permite que el servicio y el cliente se comuniquen en ambas direcciones de manera independiente.</span><span class="sxs-lookup"><span data-stu-id="5e645-121">All methods in this example are one-way methods, enabling the service and the client to communicate in both directions independently.</span></span> <span data-ttu-id="5e645-122">En este caso, la aplicación cliente de ejemplo espera sólo una llamada de devolución antes de salir, pero otro cliente; por ejemplo, un cliente de Windows Forms, puede recibir cualquier número de llamadas desde el servicio.</span><span class="sxs-lookup"><span data-stu-id="5e645-122">In this case, the example client application expects only one return call before it exits, but another client, for example a Windows Forms client, can receive any number of calls from the service.</span></span>  
  
 [!code-csharp[SCA.CallbackContract#1](~/samples/snippets/csharp/VS_Snippets_CFX/sca.callbackcontract/cs/services.cs#1)]
 [!code-vb[SCA.CallbackContract#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/sca.callbackcontract/vb/services.vb#1)]  
  
 <span data-ttu-id="5e645-123">El siguiente cliente implementa `SampleDuplexHelloCallback` para recibir el mensaje de devolución de llamada.</span><span class="sxs-lookup"><span data-stu-id="5e645-123">The following client implements the `SampleDuplexHelloCallback` to receive the callback message.</span></span> <span data-ttu-id="5e645-124">El contrato de devolución de llamada importado no es el mismo nombre que el del servicio, debido al uso de la propiedad <xref:System.ServiceModel.ServiceContractAttribute.Name%2A> en el ejemplo anterior.</span><span class="sxs-lookup"><span data-stu-id="5e645-124">The imported callback contract is not the same name as the one in the service, due to the use of the <xref:System.ServiceModel.ServiceContractAttribute.Name%2A> property in the preceding example.</span></span> <span data-ttu-id="5e645-125">Observe que el cliente no hace ninguna suposición sobre si podría recibir una devolución de llamada o cuándo; la devolución de llamada del servidor es completamente independiente de la llamada saliente del cliente.</span><span class="sxs-lookup"><span data-stu-id="5e645-125">Note that the client makes no assumptions about whether or when it might receive a callback; the server callback is entirely independent of the client's outbound call.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5e645-126">Si desea ver un ejemplo que utiliza la clase <xref:System.ServiceModel.OperationContext> en un escenario con un cliente, consulte <xref:System.ServiceModel.OperationContextScope>.</span><span class="sxs-lookup"><span data-stu-id="5e645-126">For an example that uses the <xref:System.ServiceModel.OperationContext> class in a client scenario, see <xref:System.ServiceModel.OperationContextScope>.</span></span>  
  
 [!code-csharp[SCA.CallbackContract#3](~/samples/snippets/csharp/VS_Snippets_CFX/sca.callbackcontract/cs/client.cs#3)]
 [!code-vb[SCA.CallbackContract#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/sca.callbackcontract/vb/client.vb#3)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OperationContext (System.ServiceModel.IContextChannel channel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.IContextChannel channel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.OperationContext.#ctor(System.ServiceModel.IContextChannel)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (channel As IContextChannel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OperationContext(System::ServiceModel::IContextChannel ^ channel);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.OperationContext : System.ServiceModel.IContextChannel -&gt; System.ServiceModel.OperationContext" Usage="new System.ServiceModel.OperationContext channel" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="channel" Type="System.ServiceModel.IContextChannel" />
      </Parameters>
      <Docs>
        <param name="channel"><span data-ttu-id="5e645-127">El <see cref="T:System.ServiceModel.IContextChannel" /> utilizado para crear un nuevo <see cref="T:System.ServiceModel.OperationContext" /> de cliente.</span><span class="sxs-lookup"><span data-stu-id="5e645-127">The <see cref="T:System.ServiceModel.IContextChannel" /> used to create a new client <see cref="T:System.ServiceModel.OperationContext" />.</span></span></param>
        <summary><span data-ttu-id="5e645-128">Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.OperationContext" /> que usa el <see cref="T:System.ServiceModel.IContextChannel" /> especificado en una aplicación cliente.</span><span class="sxs-lookup"><span data-stu-id="5e645-128">Initializes a new instance of the <see cref="T:System.ServiceModel.OperationContext" /> class that uses the specified <see cref="T:System.ServiceModel.IContextChannel" /> in a client application.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e645-129">Utilice el constructor <xref:System.ServiceModel.OperationContext.%23ctor%2A> para crear un nuevo contexto de operación dentro del ámbito de asociación del proxy para modificar elementos salientes, como los encabezados.</span><span class="sxs-lookup"><span data-stu-id="5e645-129">Use the <xref:System.ServiceModel.OperationContext.%23ctor%2A> constructor to create a new operation context within the scope of which the proxy is associated in order to modify outbound items such as headers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5e645-130">El ejemplo siguiente muestra cómo utilizar <xref:System.ServiceModel.OperationContextScope> para crear un nuevo contexto en una aplicación cliente con objeto de agregar un encabezado personalizado al mensaje saliente.</span><span class="sxs-lookup"><span data-stu-id="5e645-130">The following example shows how to use the <xref:System.ServiceModel.OperationContextScope> to create a new context in a client application in order to add a custom header to the outgoing message.</span></span>  
  
 [!code-csharp[OperationContextScope#4](~/samples/snippets/csharp/VS_Snippets_CFX/operationcontextscope/cs/client.cs#4)]
 [!code-vb[OperationContextScope#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/operationcontextscope/vb/client.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5e645-131">El valor del canal es null.</span><span class="sxs-lookup"><span data-stu-id="5e645-131">The channel is null.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Channel">
      <MemberSignature Language="C#" Value="public System.ServiceModel.IContextChannel Channel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.IContextChannel Channel" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContext.Channel" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Channel As IContextChannel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::IContextChannel ^ Channel { System::ServiceModel::IContextChannel ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Channel : System.ServiceModel.IContextChannel" Usage="System.ServiceModel.OperationContext.Channel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.IContextChannel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e645-132">Obtiene el canal asociado con el objeto <see cref="T:System.ServiceModel.OperationContext" /> actual.</span><span class="sxs-lookup"><span data-stu-id="5e645-132">Gets the channel associated with the current <see cref="T:System.ServiceModel.OperationContext" /> object.</span></span></summary>
        <value><span data-ttu-id="5e645-133">Un <see cref="T:System.ServiceModel.IContextChannel" /> asociado con el <see cref="T:System.ServiceModel.OperationContext" /> actual.</span><span class="sxs-lookup"><span data-stu-id="5e645-133">An <see cref="T:System.ServiceModel.IContextChannel" /> associated with the current <see cref="T:System.ServiceModel.OperationContext" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClaimsPrincipal">
      <MemberSignature Language="C#" Value="public System.Security.Claims.ClaimsPrincipal ClaimsPrincipal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Claims.ClaimsPrincipal ClaimsPrincipal" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContext.ClaimsPrincipal" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClaimsPrincipal As ClaimsPrincipal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Claims::ClaimsPrincipal ^ ClaimsPrincipal { System::Security::Claims::ClaimsPrincipal ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ClaimsPrincipal : System.Security.Claims.ClaimsPrincipal" Usage="System.ServiceModel.OperationContext.ClaimsPrincipal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Claims.ClaimsPrincipal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e645-134">Obtiene la entidad de seguridad basada en notificaciones asociada con la operación.</span><span class="sxs-lookup"><span data-stu-id="5e645-134">Gets the claims-based principal associated with the operation.</span></span></summary>
        <value><span data-ttu-id="5e645-135">La entidad de seguridad de notificaciones.</span><span class="sxs-lookup"><span data-stu-id="5e645-135">The claims principal.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.OperationContext Current { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.OperationContext Current" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContext.Current" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property Current As OperationContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::OperationContext ^ Current { System::ServiceModel::OperationContext ^ get(); void set(System::ServiceModel::OperationContext ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Current : System.ServiceModel.OperationContext with get, set" Usage="System.ServiceModel.OperationContext.Current" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.OperationContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e645-136">Obtiene o define el contexto de ejecución del subproceso actual.</span><span class="sxs-lookup"><span data-stu-id="5e645-136">Gets or sets the execution context for the current thread.</span></span></summary>
        <value><span data-ttu-id="5e645-137">El <see cref="T:System.ServiceModel.OperationContext" /> que representa el contexto de mensajería y ejecución del método actual.</span><span class="sxs-lookup"><span data-stu-id="5e645-137">The <see cref="T:System.ServiceModel.OperationContext" /> that represents the messaging and execution context of the current method.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e645-138">Utilice la propiedad <xref:System.ServiceModel.OperationContext.Current%2A> para obtener la ejecución y el contexto del mensaje para el método actual.</span><span class="sxs-lookup"><span data-stu-id="5e645-138">Use the <xref:System.ServiceModel.OperationContext.Current%2A> property to obtain the execution and message context for the current method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5e645-139">El ejemplo de código siguiente utiliza la propiedad <xref:System.ServiceModel.OperationContext.Current%2A> y el método <xref:System.ServiceModel.OperationContext.GetCallbackChannel%2A> para crear y devolver el canal al autor de la llamada desde un método.</span><span class="sxs-lookup"><span data-stu-id="5e645-139">The following code example uses the <xref:System.ServiceModel.OperationContext.Current%2A> property and <xref:System.ServiceModel.OperationContext.GetCallbackChannel%2A> method to create a channel back to the caller from within a method.</span></span> <span data-ttu-id="5e645-140">Todos los métodos en este ejemplo son unidireccionales, lo que permite que el servicio y el cliente se comuniquen en ambas direcciones de manera independiente.</span><span class="sxs-lookup"><span data-stu-id="5e645-140">All methods in this example are one-way methods, enabling the service and the client to communicate in both directions independently.</span></span> <span data-ttu-id="5e645-141">En este caso, la aplicación cliente de ejemplo espera sólo una llamada de devolución antes de salir, pero otro cliente; por ejemplo, un cliente de Windows Forms, puede recibir cualquier número de llamadas desde el servicio.</span><span class="sxs-lookup"><span data-stu-id="5e645-141">In this case, the example client application expects only one return call before it exits, but another client, for example a Windows Forms client, can receive any number of calls from the service.</span></span>  
  
 [!code-csharp[SCA.CallbackContract#1](~/samples/snippets/csharp/VS_Snippets_CFX/sca.callbackcontract/cs/services.cs#1)]
 [!code-vb[SCA.CallbackContract#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/sca.callbackcontract/vb/services.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndpointDispatcher">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Dispatcher.EndpointDispatcher EndpointDispatcher { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Dispatcher.EndpointDispatcher EndpointDispatcher" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContext.EndpointDispatcher" />
      <MemberSignature Language="VB.NET" Value="Public Property EndpointDispatcher As EndpointDispatcher" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Dispatcher::EndpointDispatcher ^ EndpointDispatcher { System::ServiceModel::Dispatcher::EndpointDispatcher ^ get(); void set(System::ServiceModel::Dispatcher::EndpointDispatcher ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EndpointDispatcher : System.ServiceModel.Dispatcher.EndpointDispatcher with get, set" Usage="System.ServiceModel.OperationContext.EndpointDispatcher" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Dispatcher.EndpointDispatcher</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e645-142">Obtiene o establece el distribuidor del extremo para el extremo que se vaya a inspeccionar o modificar.</span><span class="sxs-lookup"><span data-stu-id="5e645-142">Gets or sets the endpoint dispatcher for the endpoint to inspect or modify.</span></span></summary>
        <value><span data-ttu-id="5e645-143">El distribuidor del extremo para el extremo que se vaya a inspeccionar o modificar.</span><span class="sxs-lookup"><span data-stu-id="5e645-143">The endpoint dispatcher for the endpoint to inspect or modify.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Extensions">
      <MemberSignature Language="C#" Value="public System.ServiceModel.IExtensionCollection&lt;System.ServiceModel.OperationContext&gt; Extensions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.IExtensionCollection`1&lt;class System.ServiceModel.OperationContext&gt; Extensions" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContext.Extensions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Extensions As IExtensionCollection(Of OperationContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::IExtensionCollection&lt;System::ServiceModel::OperationContext ^&gt; ^ Extensions { System::ServiceModel::IExtensionCollection&lt;System::ServiceModel::OperationContext ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Extensions : System.ServiceModel.IExtensionCollection&lt;System.ServiceModel.OperationContext&gt;" Usage="System.ServiceModel.OperationContext.Extensions" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ServiceModel.IExtensibleObject`1.Extensions</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.IExtensionCollection&lt;System.ServiceModel.OperationContext&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e645-144">Recibe la colección de extensiones de servicio desde el contexto del mensaje actual.</span><span class="sxs-lookup"><span data-stu-id="5e645-144">Gets the collection of service extensions from the current message context.</span></span></summary>
        <value><span data-ttu-id="5e645-145">Una colección de extensiones de <see cref="T:System.ServiceModel.OperationContext" />.</span><span class="sxs-lookup"><span data-stu-id="5e645-145">A collection of extensions of <see cref="T:System.ServiceModel.OperationContext" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e645-146">Utilice la propiedad <xref:System.ServiceModel.OperationContext.Extensions%2A> para obtener una colección de todas las extensiones de <xref:System.ServiceModel.OperationContext> utilizadas para modificar el contexto o agregar el estado personalizado.</span><span class="sxs-lookup"><span data-stu-id="5e645-146">Use the <xref:System.ServiceModel.OperationContext.Extensions%2A> property to obtain a collection of all extensions of the <xref:System.ServiceModel.OperationContext> used to modify the context or add custom state.</span></span> <span data-ttu-id="5e645-147">Para obtener más información acerca de las extensiones, consulte [objetos extensibles](~/docs/framework/wcf/extending/extensible-objects.md).</span><span class="sxs-lookup"><span data-stu-id="5e645-147">For more information about extensions, see [Extensible Objects](~/docs/framework/wcf/extending/extensible-objects.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCallbackChannel&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T GetCallbackChannel&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T GetCallbackChannel&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.OperationContext.GetCallbackChannel``1" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCallbackChannel(Of T) () As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; T GetCallbackChannel();" />
      <MemberSignature Language="F#" Value="member this.GetCallbackChannel : unit -&gt; 'T" Usage="operationContext.GetCallbackChannel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T"><span data-ttu-id="5e645-148">El tipo de canal utilizado para volver a llamar al cliente.</span><span class="sxs-lookup"><span data-stu-id="5e645-148">The type of channel used to call back to the client.</span></span></typeparam>
        <summary><span data-ttu-id="5e645-149">Obtiene un canal a la instancia del cliente que haya llamado a la operación actual.</span><span class="sxs-lookup"><span data-stu-id="5e645-149">Gets a channel to the client instance that called the current operation.</span></span></summary>
        <returns><span data-ttu-id="5e645-150">Un canal a la instancia del cliente que llamó a la operación del tipo especificada en la propiedad <see cref="P:System.ServiceModel.ServiceContractAttribute.CallbackContract" />.</span><span class="sxs-lookup"><span data-stu-id="5e645-150">A channel to the client instance that called the operation of the type specified in the <see cref="P:System.ServiceModel.ServiceContractAttribute.CallbackContract" /> property.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e645-151">Llame a la propiedad <xref:System.ServiceModel.OperationContext.GetCallbackChannel%2A> para obtener un canal que puede utilizar para llamar a las operaciones en la instancia del cliente que llamó al servicio.</span><span class="sxs-lookup"><span data-stu-id="5e645-151">Call the <xref:System.ServiceModel.OperationContext.GetCallbackChannel%2A> property to obtain a channel that you can use to call operations on the client instance that called the service.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5e645-152">El ejemplo de código siguiente utiliza la propiedad <xref:System.ServiceModel.OperationContext.Current%2A> y el método <xref:System.ServiceModel.OperationContext.GetCallbackChannel%2A> para crear y devolver el canal al autor de la llamada desde una operación.</span><span class="sxs-lookup"><span data-stu-id="5e645-152">The following code example uses the <xref:System.ServiceModel.OperationContext.Current%2A> property and <xref:System.ServiceModel.OperationContext.GetCallbackChannel%2A> method to create a channel back to the caller from within a operation.</span></span> <span data-ttu-id="5e645-153">Todas las operaciones en este ejemplo son unidireccionales, lo que permite que el servicio y el cliente se comuniquen en ambas direcciones de manera independiente.</span><span class="sxs-lookup"><span data-stu-id="5e645-153">All operations in this example are one-way operations, enabling the service and the client to communicate in both directions independently.</span></span> <span data-ttu-id="5e645-154">En este caso, la aplicación cliente de ejemplo espera sólo una llamada de devolución antes de salir, pero otro cliente; por ejemplo, un cliente de Windows Forms, puede recibir cualquier número de llamadas desde el servicio.</span><span class="sxs-lookup"><span data-stu-id="5e645-154">In this case, the example client application expects only one return call before it exits, but another client, for example a Windows Forms client, can receive any number of calls from the service.</span></span>  
  
 [!code-csharp[SCA.CallbackContract#1](~/samples/snippets/csharp/VS_Snippets_CFX/sca.callbackcontract/cs/services.cs#1)]
 [!code-vb[SCA.CallbackContract#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/sca.callbackcontract/vb/services.vb#1)]  
  
 <span data-ttu-id="5e645-155">El siguiente cliente implementa `SampleDuplexHelloCallback` para recibir el mensaje de devolución de llamada.</span><span class="sxs-lookup"><span data-stu-id="5e645-155">The following client implements the `SampleDuplexHelloCallback` to receive the callback message.</span></span> <span data-ttu-id="5e645-156">El contrato de devolución de llamada importado no es el mismo nombre que el del servicio, debido al uso de la propiedad <xref:System.ServiceModel.ServiceContractAttribute.Name%2A> en el ejemplo anterior.</span><span class="sxs-lookup"><span data-stu-id="5e645-156">The imported callback contract is not the same name as the one in the service, due to the use of the <xref:System.ServiceModel.ServiceContractAttribute.Name%2A> property in the preceding example.</span></span> <span data-ttu-id="5e645-157">Observe que el cliente no hace ninguna suposición sobre si podría recibir una devolución de llamada o cuándo; la devolución de llamada del servidor es completamente independiente de la llamada saliente del cliente.</span><span class="sxs-lookup"><span data-stu-id="5e645-157">Note that the client makes no assumptions about whether or when it might receive a callback; the server callback is entirely independent of the client's outbound call.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5e645-158">Si desea ver un ejemplo que utiliza la clase <xref:System.ServiceModel.OperationContext> en un escenario con un cliente, consulte <xref:System.ServiceModel.OperationContextScope>.</span><span class="sxs-lookup"><span data-stu-id="5e645-158">For an example that uses the <xref:System.ServiceModel.OperationContext> class in a client scenario, see <xref:System.ServiceModel.OperationContextScope>.</span></span>  
  
 [!code-csharp[SCA.CallbackContract#3](~/samples/snippets/csharp/VS_Snippets_CFX/sca.callbackcontract/cs/client.cs#3)]
 [!code-vb[SCA.CallbackContract#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/sca.callbackcontract/vb/client.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasSupportingTokens">
      <MemberSignature Language="C#" Value="public bool HasSupportingTokens { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasSupportingTokens" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContext.HasSupportingTokens" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasSupportingTokens As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasSupportingTokens { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasSupportingTokens : bool" Usage="System.ServiceModel.OperationContext.HasSupportingTokens" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e645-159">Obtiene un valor que indica si el mensaje entrante tiene tokens auxiliares.</span><span class="sxs-lookup"><span data-stu-id="5e645-159">Gets a value that indicates whether the incoming message has supporting tokens.</span></span></summary>
        <value><span data-ttu-id="5e645-160"><see langword="true" /> si el mensaje entrante tiene tokens auxiliares; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5e645-160"><see langword="true" /> if the incoming message has supporting tokens; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Host">
      <MemberSignature Language="C#" Value="public System.ServiceModel.ServiceHostBase Host { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.ServiceHostBase Host" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContext.Host" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Host As ServiceHostBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::ServiceHostBase ^ Host { System::ServiceModel::ServiceHostBase ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Host : System.ServiceModel.ServiceHostBase" Usage="System.ServiceModel.OperationContext.Host" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.ServiceHostBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e645-161">Obtiene <see cref="T:System.ServiceModel.ServiceHost" /> para el objeto de servicio actual.</span><span class="sxs-lookup"><span data-stu-id="5e645-161">Gets the <see cref="T:System.ServiceModel.ServiceHost" /> for the current service object.</span></span></summary>
        <value><span data-ttu-id="5e645-162">Objeto <see cref="T:System.ServiceModel.ServiceHost" />.</span><span class="sxs-lookup"><span data-stu-id="5e645-162">A <see cref="T:System.ServiceModel.ServiceHost" /> object.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncomingMessageHeaders">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.MessageHeaders IncomingMessageHeaders { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Channels.MessageHeaders IncomingMessageHeaders" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContext.IncomingMessageHeaders" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IncomingMessageHeaders As MessageHeaders" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Channels::MessageHeaders ^ IncomingMessageHeaders { System::ServiceModel::Channels::MessageHeaders ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.IncomingMessageHeaders : System.ServiceModel.Channels.MessageHeaders" Usage="System.ServiceModel.OperationContext.IncomingMessageHeaders" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.MessageHeaders</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e645-163">Obtiene los encabezados de mensaje entrante para <see cref="T:System.ServiceModel.OperationContext" />.</span><span class="sxs-lookup"><span data-stu-id="5e645-163">Gets the incoming message headers for the <see cref="T:System.ServiceModel.OperationContext" />.</span></span></summary>
        <value><span data-ttu-id="5e645-164">Un objeto <see cref="T:System.ServiceModel.Channels.MessageHeaders" /> que contiene los encabezados de mensaje entrante.</span><span class="sxs-lookup"><span data-stu-id="5e645-164">A <see cref="T:System.ServiceModel.Channels.MessageHeaders" /> object that contains the incoming message headers.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e645-165">Utilice esta propiedad para inspeccionar o modificar los encabezados de la solicitud que llegan a una operación de servicio o encabezados de respuesta que llegan a un proxy de cliente.</span><span class="sxs-lookup"><span data-stu-id="5e645-165">Use this property to inspect or modify the request headers that arrive at a service operation or reply headers that arrive at a client proxy.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5e645-166">El ejemplo de código siguiente muestra cómo leer los encabezados de mensaje entrante en una operación de servicio.</span><span class="sxs-lookup"><span data-stu-id="5e645-166">The following code example shows how to read the incoming message headers in a service operation.</span></span>  
  
 [!code-csharp[OperationContextScope#2](~/samples/snippets/csharp/VS_Snippets_CFX/operationcontextscope/cs/services.cs#2)]
 [!code-vb[OperationContextScope#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/operationcontextscope/vb/services.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncomingMessageProperties">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.MessageProperties IncomingMessageProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Channels.MessageProperties IncomingMessageProperties" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContext.IncomingMessageProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IncomingMessageProperties As MessageProperties" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Channels::MessageProperties ^ IncomingMessageProperties { System::ServiceModel::Channels::MessageProperties ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.IncomingMessageProperties : System.ServiceModel.Channels.MessageProperties" Usage="System.ServiceModel.OperationContext.IncomingMessageProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.MessageProperties</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e645-167">Obtiene las propiedades de mensaje para el mensaje entrante en <see cref="T:System.ServiceModel.OperationContext" />.</span><span class="sxs-lookup"><span data-stu-id="5e645-167">Gets the message properties for the incoming message in the <see cref="T:System.ServiceModel.OperationContext" />.</span></span></summary>
        <value><span data-ttu-id="5e645-168">Un objeto <see cref="T:System.ServiceModel.Channels.MessageProperties" /> que contiene las propiedades del mensaje en el mensaje entrante.</span><span class="sxs-lookup"><span data-stu-id="5e645-168">A <see cref="T:System.ServiceModel.Channels.MessageProperties" /> object that contains the message properties on the incoming message.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e645-169">Utilice esta propiedad para inspeccionar o modificar las propiedades de mensaje para un mensaje de solicitud en una operación de servicio o en un mensaje de respuesta en un proxy de cliente.</span><span class="sxs-lookup"><span data-stu-id="5e645-169">Use this property to inspect or modify the message properties for a request message in a service operation or a reply message in a client proxy.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncomingMessageVersion">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.MessageVersion IncomingMessageVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Channels.MessageVersion IncomingMessageVersion" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContext.IncomingMessageVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IncomingMessageVersion As MessageVersion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Channels::MessageVersion ^ IncomingMessageVersion { System::ServiceModel::Channels::MessageVersion ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.IncomingMessageVersion : System.ServiceModel.Channels.MessageVersion" Usage="System.ServiceModel.OperationContext.IncomingMessageVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.MessageVersion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e645-170">Obtiene la versión del mensaje SOAP entrante para <see cref="T:System.ServiceModel.OperationContext" />.</span><span class="sxs-lookup"><span data-stu-id="5e645-170">Gets the incoming SOAP message version for the <see cref="T:System.ServiceModel.OperationContext" />.</span></span></summary>
        <value><span data-ttu-id="5e645-171">La versión de SOAP del mensaje entrante.</span><span class="sxs-lookup"><span data-stu-id="5e645-171">The SOAP version of the incoming message.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e645-172">Utilice esta propiedad para inspeccionar la versión de SOAP del mensaje de solicitud que llega a una operación de servicio o la versión e SOAP del mensaje de respuesta que llega a un proxy de cliente.</span><span class="sxs-lookup"><span data-stu-id="5e645-172">Use this property to inspect the SOAP version of the request message that arrives at a service operation or the SOAP version of the reply message that arrives at a client proxy.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InstanceContext">
      <MemberSignature Language="C#" Value="public System.ServiceModel.InstanceContext InstanceContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.InstanceContext InstanceContext" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContext.InstanceContext" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InstanceContext As InstanceContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::InstanceContext ^ InstanceContext { System::ServiceModel::InstanceContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InstanceContext : System.ServiceModel.InstanceContext" Usage="System.ServiceModel.OperationContext.InstanceContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.InstanceContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e645-173">Obtiene el objeto <see cref="T:System.ServiceModel.InstanceContext" /> que administra la instancia del servicio actual.</span><span class="sxs-lookup"><span data-stu-id="5e645-173">Gets the <see cref="T:System.ServiceModel.InstanceContext" /> object that manages the current service instance.</span></span></summary>
        <value><span data-ttu-id="5e645-174">El objeto <see cref="T:System.ServiceModel.InstanceContext" /> para el servicio actual.</span><span class="sxs-lookup"><span data-stu-id="5e645-174">The <see cref="T:System.ServiceModel.InstanceContext" /> object for the current service.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e645-175">Utilice la propiedad <xref:System.ServiceModel.OperationContext.InstanceContext%2A> para tener acceso al objeto en tiempo de ejecución que administra el objeto de servicio actual.</span><span class="sxs-lookup"><span data-stu-id="5e645-175">Use the <xref:System.ServiceModel.OperationContext.InstanceContext%2A> property to access the run-time object that manages the current service object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUserContext">
      <MemberSignature Language="C#" Value="public bool IsUserContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUserContext" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContext.IsUserContext" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsUserContext As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsUserContext { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsUserContext : bool" Usage="System.ServiceModel.OperationContext.IsUserContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e645-176">Esta propiedad está pensada para su uso por el sistema y los usuarios no deberían recurrir a ella.</span><span class="sxs-lookup"><span data-stu-id="5e645-176">This property is intended for system use and should not be called by users.</span></span></summary>
        <value><span data-ttu-id="5e645-177"><see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="5e645-177"><see langword="true" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OperationCompleted">
      <MemberSignature Language="C#" Value="public event EventHandler OperationCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler OperationCompleted" />
      <MemberSignature Language="DocId" Value="E:System.ServiceModel.OperationContext.OperationCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event OperationCompleted As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ OperationCompleted;" />
      <MemberSignature Language="F#" Value="member this.OperationCompleted : EventHandler " Usage="member this.OperationCompleted : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e645-178">Se produce cuando se ha completado la operación.</span><span class="sxs-lookup"><span data-stu-id="5e645-178">Occurs when the operation has completed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e645-179">Utilice el evento <xref:System.ServiceModel.OperationContext.OperationCompleted> para disponer parámetros o un valor devuelto si define <xref:System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters%2A?displayProperty=nameWithType> en `false`.</span><span class="sxs-lookup"><span data-stu-id="5e645-179">Use the <xref:System.ServiceModel.OperationContext.OperationCompleted> event to dispose parameters or a return value if you set <xref:System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters%2A?displayProperty=nameWithType> to `false`.</span></span> <span data-ttu-id="5e645-180">Normalmente, debe establecer <xref:System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters%2A?displayProperty=nameWithType> a `false` para impedir que realiza la llamada a WCF <xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType> en los objetos de valor devueltos y de parámetro.</span><span class="sxs-lookup"><span data-stu-id="5e645-180">Normally you set <xref:System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters%2A?displayProperty=nameWithType> to `false` to prevent WCF from calling <xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType> on the parameter and return value objects.</span></span>  <span data-ttu-id="5e645-181">Sin embargo, si algunos parámetros necesitan conservarse mientras otros necesitan disponerse, este evento es el mejor lugar donde situarlos.</span><span class="sxs-lookup"><span data-stu-id="5e645-181">However, if some parameters need to be preserved while others need to be disposed, this event is the best place to dispose those parameters.</span></span>  
  
 <span data-ttu-id="5e645-182">Además, con los enlaces dúplex, se puede utilizar este evento para enviar una solicitud en el canal de devolución de llamadas después de enviar la respuesta para la operación actual.</span><span class="sxs-lookup"><span data-stu-id="5e645-182">Also, with duplex bindings, this event can be used to send a request on the callback channel after the reply for the current operation is sent.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5e645-183">Si el autor de la llamada está escuchando el evento <xref:System.ServiceModel.OperationContext.OperationCompleted?displayProperty=nameWithType> para una operación <xref:System.ServiceModel.OperationContractAttribute.IsTerminating%2A?displayProperty=nameWithType>, es posible bloquear cuando se reciba la respuesta.</span><span class="sxs-lookup"><span data-stu-id="5e645-183">If a caller is listening for the <xref:System.ServiceModel.OperationContext.OperationCompleted?displayProperty=nameWithType> event for an <xref:System.ServiceModel.OperationContractAttribute.IsTerminating%2A?displayProperty=nameWithType> operation, it is possible to block when the response is received.</span></span> <span data-ttu-id="5e645-184">La manera adecuada de gestionar esto es programar el trabajo en otro subproceso cuando se llega a <xref:System.ServiceModel.OperationContext.OperationCompleted> y entonces devolver inmediatamente desde ese controlador de eventos.</span><span class="sxs-lookup"><span data-stu-id="5e645-184">The proper way to handle this is to schedule work on another thread when <xref:System.ServiceModel.OperationContext.OperationCompleted> is raised and then immediately return from that event handler.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OutgoingMessageHeaders">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.MessageHeaders OutgoingMessageHeaders { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Channels.MessageHeaders OutgoingMessageHeaders" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContext.OutgoingMessageHeaders" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OutgoingMessageHeaders As MessageHeaders" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Channels::MessageHeaders ^ OutgoingMessageHeaders { System::ServiceModel::Channels::MessageHeaders ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OutgoingMessageHeaders : System.ServiceModel.Channels.MessageHeaders" Usage="System.ServiceModel.OperationContext.OutgoingMessageHeaders" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.MessageHeaders</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e645-185">Obtiene los encabezados de mensajes salientes para el <see cref="T:System.ServiceModel.OperationContext" /> activo.</span><span class="sxs-lookup"><span data-stu-id="5e645-185">Gets the outgoing message headers for the active <see cref="T:System.ServiceModel.OperationContext" />.</span></span></summary>
        <value><span data-ttu-id="5e645-186">Un objeto <see cref="T:System.ServiceModel.Channels.MessageHeaders" /> que contiene los encabezados de mensajes salientes para el <see cref="T:System.ServiceModel.OperationContext" /> activo.</span><span class="sxs-lookup"><span data-stu-id="5e645-186">A <see cref="T:System.ServiceModel.Channels.MessageHeaders" /> object that contains outbound message headers for the active <see cref="T:System.ServiceModel.OperationContext" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e645-187">Utilice esta propiedad para agregar encabezados de respuesta enviados por una operación de servicio o encabezados de solicitud que se envían por un objeto de cliente WCF.</span><span class="sxs-lookup"><span data-stu-id="5e645-187">Use this property to add reply headers that are sent by a service operation or request headers that are sent by a WCF client object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5e645-188">El ejemplo siguiente muestra cómo utilizar <xref:System.ServiceModel.OperationContextScope> para crear un nuevo contexto en una aplicación cliente con objeto de agregar un encabezado personalizado al mensaje saliente.</span><span class="sxs-lookup"><span data-stu-id="5e645-188">The following example shows how to use the <xref:System.ServiceModel.OperationContextScope> to create a new context in a client application in order to add a custom header to the outgoing message.</span></span>  
  
 [!code-csharp[OperationContextScope#4](~/samples/snippets/csharp/VS_Snippets_CFX/operationcontextscope/cs/client.cs#4)]
 [!code-vb[OperationContextScope#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/operationcontextscope/vb/client.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OutgoingMessageProperties">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.MessageProperties OutgoingMessageProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Channels.MessageProperties OutgoingMessageProperties" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContext.OutgoingMessageProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OutgoingMessageProperties As MessageProperties" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Channels::MessageProperties ^ OutgoingMessageProperties { System::ServiceModel::Channels::MessageProperties ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OutgoingMessageProperties : System.ServiceModel.Channels.MessageProperties" Usage="System.ServiceModel.OperationContext.OutgoingMessageProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.MessageProperties</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e645-189">Obtiene las propiedades del mensaje para el mensaje saliente en el <see cref="T:System.ServiceModel.OperationContext" /> activo.</span><span class="sxs-lookup"><span data-stu-id="5e645-189">Gets the message properties for the outbound message in the active <see cref="T:System.ServiceModel.OperationContext" />.</span></span></summary>
        <value><span data-ttu-id="5e645-190">Un objeto <see cref="T:System.ServiceModel.Channels.MessageProperties" /> que contiene las propiedades del mensaje en el mensaje saliente.</span><span class="sxs-lookup"><span data-stu-id="5e645-190">A <see cref="T:System.ServiceModel.Channels.MessageProperties" /> object that contains the message properties on the outbound message.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e645-191">Utilice esta propiedad para agregar las propiedades de mensaje para un mensaje de respuesta de una operación de servicio o las propiedades de un mensaje de solicitud de un proxy de cliente.</span><span class="sxs-lookup"><span data-stu-id="5e645-191">Use this property to add message properties for a reply message from a service operation or message properties for a request message from a client proxy.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestContext">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.RequestContext RequestContext { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Channels.RequestContext RequestContext" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContext.RequestContext" />
      <MemberSignature Language="VB.NET" Value="Public Property RequestContext As RequestContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Channels::RequestContext ^ RequestContext { System::ServiceModel::Channels::RequestContext ^ get(); void set(System::ServiceModel::Channels::RequestContext ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RequestContext : System.ServiceModel.Channels.RequestContext with get, set" Usage="System.ServiceModel.OperationContext.RequestContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.RequestContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e645-192">Obtiene o establece la implementación de <see cref="T:System.ServiceModel.Channels.RequestContext" /> para este método.</span><span class="sxs-lookup"><span data-stu-id="5e645-192">Gets or sets the <see cref="T:System.ServiceModel.Channels.RequestContext" /> implementation for this method.</span></span></summary>
        <value><span data-ttu-id="5e645-193">Una implementación <see cref="T:System.ServiceModel.Channels.RequestContext" /> o null si no hay ningún contexto de la solicitud.</span><span class="sxs-lookup"><span data-stu-id="5e645-193">An <see cref="T:System.ServiceModel.Channels.RequestContext" /> implementation, or null if there is no request context.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e645-194">Las operaciones unidireccionales no cuentan con un contexto de la solicitud.</span><span class="sxs-lookup"><span data-stu-id="5e645-194">One-way operations are do not have a request context.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceSecurityContext">
      <MemberSignature Language="C#" Value="public System.ServiceModel.ServiceSecurityContext ServiceSecurityContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.ServiceSecurityContext ServiceSecurityContext" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContext.ServiceSecurityContext" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServiceSecurityContext As ServiceSecurityContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::ServiceSecurityContext ^ ServiceSecurityContext { System::ServiceModel::ServiceSecurityContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ServiceSecurityContext : System.ServiceModel.ServiceSecurityContext" Usage="System.ServiceModel.OperationContext.ServiceSecurityContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.ServiceSecurityContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e645-195">Obtiene o define <see cref="T:System.ServiceModel.ServiceSecurityContext" /> dentro del cual se ejecuta este método.</span><span class="sxs-lookup"><span data-stu-id="5e645-195">Gets or sets the <see cref="T:System.ServiceModel.ServiceSecurityContext" /> within which this method executes.</span></span></summary>
        <value><span data-ttu-id="5e645-196">Objeto <see cref="T:System.ServiceModel.ServiceSecurityContext" />.</span><span class="sxs-lookup"><span data-stu-id="5e645-196">A <see cref="T:System.ServiceModel.ServiceSecurityContext" /> object.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SessionId">
      <MemberSignature Language="C#" Value="public string SessionId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SessionId" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContext.SessionId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SessionId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SessionId { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SessionId : string" Usage="System.ServiceModel.OperationContext.SessionId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e645-197">Obtiene el <see cref="T:System.String" /> utilizado para identificar la sesión actual.</span><span class="sxs-lookup"><span data-stu-id="5e645-197">Gets the <see cref="T:System.String" /> used to identify the current session.</span></span></summary>
        <value><span data-ttu-id="5e645-198">Identificador de la sesión.</span><span class="sxs-lookup"><span data-stu-id="5e645-198">The session identifier.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTransactionComplete">
      <MemberSignature Language="C#" Value="public void SetTransactionComplete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetTransactionComplete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.OperationContext.SetTransactionComplete" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetTransactionComplete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetTransactionComplete();" />
      <MemberSignature Language="F#" Value="member this.SetTransactionComplete : unit -&gt; unit" Usage="operationContext.SetTransactionComplete " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5e645-199">Confirma la transacción que se está ejecutando actualmente.</span><span class="sxs-lookup"><span data-stu-id="5e645-199">Commits the currently executing transaction.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e645-200">Esto sólo es útil en operaciones que definen <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A?displayProperty=nameWithType> en `false`.</span><span class="sxs-lookup"><span data-stu-id="5e645-200">This is only useful in operations that set <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A?displayProperty=nameWithType> to `false`.</span></span> <span data-ttu-id="5e645-201">Normalmente, los servicios realizan esta acción en algunas operaciones pero no en todas.</span><span class="sxs-lookup"><span data-stu-id="5e645-201">Typically, services do this on some but not all operations.</span></span> <span data-ttu-id="5e645-202">Cuando <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A?displayProperty=nameWithType> es falso, la transacción se completa automáticamente.</span><span class="sxs-lookup"><span data-stu-id="5e645-202">When <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A?displayProperty=nameWithType> is false the transaction completes automatically.</span></span> <span data-ttu-id="5e645-203">Utilice <xref:System.ServiceModel.OperationContext.SetTransactionComplete%2A> en casos donde no es posible determinar en el tiempo de diseño si una operación necesita completar la transacción.</span><span class="sxs-lookup"><span data-stu-id="5e645-203">Use <xref:System.ServiceModel.OperationContext.SetTransactionComplete%2A> in cases where it is not possible to determine at design-time whether an operation needs to complete the transaction.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="5e645-204">No hay ninguna transacción en el contexto.</span><span class="sxs-lookup"><span data-stu-id="5e645-204">There is no transaction in the context.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SupportingTokens">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;System.ServiceModel.Security.SupportingTokenSpecification&gt; SupportingTokens { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class System.ServiceModel.Security.SupportingTokenSpecification&gt; SupportingTokens" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContext.SupportingTokens" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SupportingTokens As ICollection(Of SupportingTokenSpecification)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;System::ServiceModel::Security::SupportingTokenSpecification ^&gt; ^ SupportingTokens { System::Collections::Generic::ICollection&lt;System::ServiceModel::Security::SupportingTokenSpecification ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportingTokens : System.Collections.Generic.ICollection&lt;System.ServiceModel.Security.SupportingTokenSpecification&gt;" Usage="System.ServiceModel.OperationContext.SupportingTokens" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.ServiceModel.Security.SupportingTokenSpecification&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e645-205">Obtiene un <see cref="T:System.Collections.Generic.ICollection`1" /> de tipo <see cref="T:System.IdentityModel.Tokens.SecurityToken" />.</span><span class="sxs-lookup"><span data-stu-id="5e645-205">Gets a <see cref="T:System.Collections.Generic.ICollection`1" /> of type <see cref="T:System.IdentityModel.Tokens.SecurityToken" />.</span></span></summary>
        <value><span data-ttu-id="5e645-206">Una colección de tokens de seguridad.</span><span class="sxs-lookup"><span data-stu-id="5e645-206">A collection of security tokens.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
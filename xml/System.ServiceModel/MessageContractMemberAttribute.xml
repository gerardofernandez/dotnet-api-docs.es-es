<Type Name="MessageContractMemberAttribute" FullName="System.ServiceModel.MessageContractMemberAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="358722c2a653580cd2a564670fb9ef8d514a7333" /><Meta Name="ms.sourcegitcommit" Value="0d6aa6694f157a08fe52cd25b4d9d3dcf913e812" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="10/12/2018" /><Meta Name="ms.locfileid" Value="49150055" /></Metadata><TypeSignature Language="C#" Value="public abstract class MessageContractMemberAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MessageContractMemberAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.MessageContractMemberAttribute" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MessageContractMemberAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class MessageContractMemberAttribute abstract : Attribute" />
  <TypeSignature Language="F#" Value="type MessageContractMemberAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="95086-101">Declara los miembros base para <see cref="T:System.ServiceModel.MessageBodyMemberAttribute" /> y <see cref="T:System.ServiceModel.MessageHeaderAttribute" />.</span><span class="sxs-lookup"><span data-stu-id="95086-101">Declares the base members for <see cref="T:System.ServiceModel.MessageBodyMemberAttribute" /> and <see cref="T:System.ServiceModel.MessageHeaderAttribute" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95086-102">Esta clase contiene las propiedades comunes a todas las partes de un mensaje SOAP.</span><span class="sxs-lookup"><span data-stu-id="95086-102">This class contains properties common to all parts of a SOAP message.</span></span> <span data-ttu-id="95086-103">Por ejemplo, todas las partes tienen un nombre y un espacio de nombres y, potencialmente, un nivel de seguridad aplicado.</span><span class="sxs-lookup"><span data-stu-id="95086-103">For example, all parts have a name and a namespace, and potentially a level of security applied.</span></span>  
  
 <span data-ttu-id="95086-104">Para obtener información sobre cómo controlar la serialización del contenido de un cuerpo SOAP sin modificar el propio sobre SOAP predeterminado, consulte <xref:System.Runtime.Serialization.DataContractAttribute?displayProperty=nameWithType>, [Specifying Data Transfer in Service Contracts](~/docs/framework/wcf/feature-details/specifying-data-transfer-in-service-contracts.md), y [uso de datos Contratos](~/docs/framework/wcf/feature-details/using-data-contracts.md).</span><span class="sxs-lookup"><span data-stu-id="95086-104">For information on controlling the serialization of the contents of a SOAP body without modifying the default SOAP envelope itself, see <xref:System.Runtime.Serialization.DataContractAttribute?displayProperty=nameWithType>, [Specifying Data Transfer in Service Contracts](~/docs/framework/wcf/feature-details/specifying-data-transfer-in-service-contracts.md), and [Using Data Contracts](~/docs/framework/wcf/feature-details/using-data-contracts.md).</span></span>  
  
 <span data-ttu-id="95086-105">Para obtener más información sobre la creación de contratos de mensaje, consulte [Using Message Contracts](~/docs/framework/wcf/feature-details/using-message-contracts.md).</span><span class="sxs-lookup"><span data-stu-id="95086-105">For more information about creating message contracts, see [Using Message Contracts](~/docs/framework/wcf/feature-details/using-message-contracts.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="95086-106">Los ejemplos de código siguientes muestran un contrato de mensaje personalizado que utiliza el <xref:System.ServiceModel.MessageContractAttribute>, <xref:System.ServiceModel.MessageHeaderAttribute>, y <xref:System.ServiceModel.MessageBodyMemberAttribute> atributos (que todos heredan de <xref:System.ServiceModel.MessageContractMemberAttribute>) para crear mensajes con tipo personalizados para usarlas en operaciones.</span><span class="sxs-lookup"><span data-stu-id="95086-106">The following code examples demonstrate a custom message contract that uses the <xref:System.ServiceModel.MessageContractAttribute>, <xref:System.ServiceModel.MessageHeaderAttribute>, and <xref:System.ServiceModel.MessageBodyMemberAttribute> attributes (which all inherit from <xref:System.ServiceModel.MessageContractMemberAttribute>) to create custom typed messages to use in operations.</span></span> <span data-ttu-id="95086-107">En este caso, hay tres miembros que se serializan en el cuerpo del mensaje SOAP: `sourceAccount`, `targetAccount` y el valor `amount` (que se serializa en un elemento con el nombre `transactionAmount`).</span><span class="sxs-lookup"><span data-stu-id="95086-107">In this case, there are three members that are serialized into the body element of the SOAP message: `sourceAccount`, `targetAccount`, and the `amount` value, (which is serialized into an element with the name `transactionAmount`).</span></span> <span data-ttu-id="95086-108">Además, el elemento de encabezado SOAP `IsAudited` reside en el espacio de nombres `http://schemas.contosobank.com/auditing/2005` y `sourceAccount` se cifra y se firma digitalmente.</span><span class="sxs-lookup"><span data-stu-id="95086-108">In addition, the `IsAudited` SOAP header element resides in the `http://schemas.contosobank.com/auditing/2005` namespace, and `sourceAccount` is encrypted and digitally signed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="95086-109">Los tipos `Operation` y `Account` deben tener un contrato de datos.</span><span class="sxs-lookup"><span data-stu-id="95086-109">The `Operation` and `Account` types must have a data contract.</span></span>  
  
```csharp  
[MessageContract]  
public class BankingTransaction  
{  
  [MessageHeader]   
  public Operation operation;  
  [MessageHeader(Namespace="http://schemas.contosobank.com/auditing/2005")]   
  public bool IsAudited;  
  [MessageBody(ProtectionLevel=ProtectionLevel.EncryptAndSign)]   
  public Account sourceAccount;  
  [MessageBody]   
  public Account targetAccount;  
  [MessageBody(Name="transactionAmount")]   
  public int amount;  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MessageContractMemberAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.MessageContractMemberAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MessageContractMemberAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="95086-110">Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.MessageContractMemberAttribute" />.</span><span class="sxs-lookup"><span data-stu-id="95086-110">Initializes a new instance of the <see cref="T:System.ServiceModel.MessageContractMemberAttribute" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasProtectionLevel">
      <MemberSignature Language="C#" Value="public bool HasProtectionLevel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasProtectionLevel" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MessageContractMemberAttribute.HasProtectionLevel" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasProtectionLevel As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasProtectionLevel { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasProtectionLevel : bool" Usage="System.ServiceModel.MessageContractMemberAttribute.HasProtectionLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="95086-111">Cuando se invalida en una clase derivada, obtiene un valor que indica si el miembro tiene un nivel de protección asignado.</span><span class="sxs-lookup"><span data-stu-id="95086-111">When overridden in a derived class, gets a value that indicates whether the member has a protection level assigned.</span></span></summary>
        <value><span data-ttu-id="95086-112"><see langword="true" /> si el miembro tiene un nivel de protección; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="95086-112"><see langword="true" /> if the member has a protection level; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MessageContractMemberAttribute.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.ServiceModel.MessageContractMemberAttribute.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="95086-113">Especifica el nombre del elemento que se corresponde a este miembro.</span><span class="sxs-lookup"><span data-stu-id="95086-113">Specifies the name of the element that corresponds to this member.</span></span></summary>
        <value><span data-ttu-id="95086-114">El nombre del elemento que se corresponde a este miembro.</span><span class="sxs-lookup"><span data-stu-id="95086-114">The name of the element that corresponds to this member.</span></span> <span data-ttu-id="95086-115">Esta cadena debe ser un nombre de elemento XML válido.</span><span class="sxs-lookup"><span data-stu-id="95086-115">This string must be a valid XML element name.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="95086-116">Los ejemplos de código siguientes muestran un contrato de mensaje personalizado que utiliza los atributos <xref:System.ServiceModel.MessageContractAttribute>, <xref:System.ServiceModel.MessageHeaderAttribute> y <xref:System.ServiceModel.MessageBodyMemberAttribute> para crear mensajes personalizados y fuertemente tipados que usar como parámetros.</span><span class="sxs-lookup"><span data-stu-id="95086-116">The following code examples demonstrate a custom message contract that uses the <xref:System.ServiceModel.MessageContractAttribute>, <xref:System.ServiceModel.MessageHeaderAttribute>, and <xref:System.ServiceModel.MessageBodyMemberAttribute> attributes to create custom, strongly-typed messages to use as parameters.</span></span> <span data-ttu-id="95086-117">En este caso, hay tres miembros de datos que se serializan en el cuerpo del mensaje SOAP: `sourceAccount`, `targetAccount` y el valor `amount` (que se serializa en un elemento con el nombre `transactionAmount`).</span><span class="sxs-lookup"><span data-stu-id="95086-117">In this case, there are three data members that are serialized into the body element of the SOAP message: `sourceAccount`, `targetAccount`, and the `amount` value, (which is serialized into an element with the name `transactionAmount`).</span></span> <span data-ttu-id="95086-118">Además, el elemento de encabezado SOAP `IsAudited` reside en el espacio de nombres `http://schemas.contosobank.com/auditing/2005`.</span><span class="sxs-lookup"><span data-stu-id="95086-118">In addition, the `IsAudited` SOAP header element resides in the `http://schemas.contosobank.com/auditing/2005` namespace.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="95086-119">Los tipos `Operation` y `Account` también deben tener un contrato de datos.</span><span class="sxs-lookup"><span data-stu-id="95086-119">The `Operation` and `Account` types must also have a data contract.</span></span>  
  
```csharp  
[MessageContract]  
public class BankingTransaction  
{  
  [MessageHeader] public Operation operation;  
  [MessageHeader(Namespace="http://schemas.contosobank.com/auditing/2005")] public bool IsAudited;  
  [MessageBody] public Account sourceAccount;  
  [MessageBody] public Account targetAccount;  
  [MessageBody(Name="transactionAmount")] public int amount;  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MessageContractMemberAttribute.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Namespace : string with get, set" Usage="System.ServiceModel.MessageContractMemberAttribute.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="95086-120">Especifica el espacio de nombres del elemento que se corresponde a este miembro.</span><span class="sxs-lookup"><span data-stu-id="95086-120">Specifies the namespace of the element that corresponds to this member.</span></span></summary>
        <value><span data-ttu-id="95086-121">Un URI de espacio de nombres del elemento que se corresponde con este miembro.</span><span class="sxs-lookup"><span data-stu-id="95086-121">A namespace URI of the element that corresponds to this member.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="95086-122">Los ejemplos de código siguientes muestran un contrato de mensaje personalizado que utiliza el <xref:System.ServiceModel.MessageContractAttribute>, <xref:System.ServiceModel.MessageHeaderAttribute>, y <xref:System.ServiceModel.MessageBodyMemberAttribute> atributos (que todos heredan de <xref:System.ServiceModel.MessageContractMemberAttribute>) para crear mensajes con tipo personalizados para usarlas en operaciones.</span><span class="sxs-lookup"><span data-stu-id="95086-122">The following code examples demonstrate a custom message contract that uses the <xref:System.ServiceModel.MessageContractAttribute>, <xref:System.ServiceModel.MessageHeaderAttribute>, and <xref:System.ServiceModel.MessageBodyMemberAttribute> attributes (which all inherit from <xref:System.ServiceModel.MessageContractMemberAttribute>) to create custom typed messages to use in operations.</span></span> <span data-ttu-id="95086-123">En este caso, hay tres miembros que se serializan en el cuerpo del mensaje SOAP: `sourceAccount`, `targetAccount` y el valor `amount` (que se serializa en un elemento con el nombre `transactionAmount`).</span><span class="sxs-lookup"><span data-stu-id="95086-123">In this case, there are three members that are serialized into the body element of the SOAP message: `sourceAccount`, `targetAccount`, and the `amount` value, (which is serialized into an element with the name `transactionAmount`).</span></span> <span data-ttu-id="95086-124">Además, el elemento de encabezado SOAP `IsAudited` reside en el espacio de nombres `http://schemas.contosobank.com/auditing/2005` y `sourceAccount` se cifra y se firma digitalmente.</span><span class="sxs-lookup"><span data-stu-id="95086-124">In addition, the `IsAudited` SOAP header element resides in the `http://schemas.contosobank.com/auditing/2005` namespace, and `sourceAccount` is encrypted and digitally signed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="95086-125">Los tipos `Operation` y `Account` deben tener un contrato de datos.</span><span class="sxs-lookup"><span data-stu-id="95086-125">The `Operation` and `Account` types must have a data contract.</span></span>  
  
```csharp  
[MessageContract]  
public class BankingTransaction  
{  
  [MessageHeader] public Operation operation;  
  [MessageHeader(Namespace="http://schemas.contosobank.com/auditing/2005")] public bool IsAudited;  
  [MessageBody] public Account sourceAccount;  
  [MessageBody] public Account targetAccount;  
  [MessageBody(Name="transactionAmount")] public int amount;  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectionLevel">
      <MemberSignature Language="C#" Value="public System.Net.Security.ProtectionLevel ProtectionLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Security.ProtectionLevel ProtectionLevel" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property ProtectionLevel As ProtectionLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Security::ProtectionLevel ProtectionLevel { System::Net::Security::ProtectionLevel get(); void set(System::Net::Security::ProtectionLevel value); };" />
      <MemberSignature Language="F#" Value="member this.ProtectionLevel : System.Net.Security.ProtectionLevel with get, set" Usage="System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Security.ProtectionLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="95086-126">Especifica si el miembro será transmitido tal cual, está firmado, o firmado y cifrado.</span><span class="sxs-lookup"><span data-stu-id="95086-126">Specifies whether the member is to be transmitted as-is, signed, or signed and encrypted.</span></span></summary>
        <value><span data-ttu-id="95086-127">Uno de los valores de <see cref="T:System.Net.Security.ProtectionLevel" />.</span><span class="sxs-lookup"><span data-stu-id="95086-127">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values.</span></span> <span data-ttu-id="95086-128">El valor predeterminado es <see cref="F:System.Net.Security.ProtectionLevel.None" />.</span><span class="sxs-lookup"><span data-stu-id="95086-128">The default is <see cref="F:System.Net.Security.ProtectionLevel.None" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95086-129">Para utilizar la propiedad <xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A> en los atributos <xref:System.ServiceModel.MessageHeaderAttribute> o <xref:System.ServiceModel.MessageBodyMemberAttribute>, debe configurar el enlace y los comportamientos correctamente.</span><span class="sxs-lookup"><span data-stu-id="95086-129">To make use of the <xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A> property in either the <xref:System.ServiceModel.MessageHeaderAttribute> or <xref:System.ServiceModel.MessageBodyMemberAttribute> attributes you must properly configure the binding and behaviors.</span></span> <span data-ttu-id="95086-130">Si estas características de seguridad se utilizan sin una configuración apropiada (por ejemplo, utilizando <xref:System.Net.Security.ProtectionLevel.Sign?displayProperty=nameWithType> con una parte del mensaje sin proporcionar las credenciales de seguridad), se iniciará una excepción en el tiempo de ejecución.</span><span class="sxs-lookup"><span data-stu-id="95086-130">If these security features are used without a proper configuration (for example, using <xref:System.Net.Security.ProtectionLevel.Sign?displayProperty=nameWithType> with a message part without supplying security credentials) an exception is thrown at run time.</span></span>  
  
 <span data-ttu-id="95086-131">Además, el nivel de protección se determina individualmente para cada encabezado.</span><span class="sxs-lookup"><span data-stu-id="95086-131">In addition, the protection level is determined for each header individually.</span></span> <span data-ttu-id="95086-132">Sin embargo, el cuerpo SOAP tiene sólo un nivel de protección, sin tener en cuenta el número de partes del cuerpo.</span><span class="sxs-lookup"><span data-stu-id="95086-132">However, the SOAP body has only one protection level, regardless of the number of body parts.</span></span> <span data-ttu-id="95086-133">El valor de propiedad <xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A> más alto de todas las partes del cuerpo determina el nivel de protección del cuerpo.</span><span class="sxs-lookup"><span data-stu-id="95086-133">The protection level of the body is determined by the highest <xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A> property value of all the body parts.</span></span> <span data-ttu-id="95086-134">Por ejemplo, considere la siguiente clase:</span><span class="sxs-lookup"><span data-stu-id="95086-134">For example, consider the following class:</span></span>  
  
```csharp  
[MessageContract]  
public class PatientRecord  
{  
   [MessageHeader(ProtectionLevel=None)] public int recordID;  
   [MessageHeader(ProtectionLevel=Sign)] public string patientName;  
   [MessageHeader(ProtectionLevel=EncryptAndSign)] public string SSN;  
   [MessageBody(ProtectionLevel=None)] public string comments;  
   [MessageBody(ProtectionLevel=Sign)] public string diagnosis;  
   [MessageBody(ProtectionLevel=EncryptAndSign)] public string medicalHistory;  
}  
```  
  
 <span data-ttu-id="95086-135">En este ejemplo, el encabezado `recordID` no está protegido, se firma `patientName`, y se cifra y se firma `SSN`.</span><span class="sxs-lookup"><span data-stu-id="95086-135">In this example, the `recordID` header is not protected, `patientName` is signed, and `SSN` is encrypted and signed.</span></span> <span data-ttu-id="95086-136">Hay por lo menos una parte del cuerpo, `medicalHistory`, con <xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType> y así el cuerpo del mensaje completo se cifra y firma, aun cuando las partes del cuerpo `comments` y `diagnosis` especifican los niveles más bajos de protección.</span><span class="sxs-lookup"><span data-stu-id="95086-136">There is at least one body part, `medicalHistory`, with <xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType> and thus the entire message body is encrypted and signed, even though the `comments` and `diagnosis` body parts specify lower protection levels.</span></span>  
  
 <span data-ttu-id="95086-137">El comportamiento de protección en el tiempo de ejecución es la combinación de los valores de nivel de protección definida en las propiedades siguientes.</span><span class="sxs-lookup"><span data-stu-id="95086-137">The protection behavior at runtime is the combination of the protection-level values set on the following properties.</span></span> <span data-ttu-id="95086-138">Estas propiedades tienen una estructura jerárquica.</span><span class="sxs-lookup"><span data-stu-id="95086-138">These properties have a hierarchical structure.</span></span> <span data-ttu-id="95086-139">Al establecer el valor punto de conexión, se establece la configuración predeterminada para todos los ámbitos más restringidos a menos que se establezca un valor diferente para un ámbito más restringido explícitamente.</span><span class="sxs-lookup"><span data-stu-id="95086-139">Setting the outermost value establishes the default setting for all narrower scopes unless a different value for a narrower scope is explicitly set.</span></span> <span data-ttu-id="95086-140">En este caso, el valor externo sigue siendo el predeterminado para todos los ámbitos más restringidos con la excepción del definido específicamente.</span><span class="sxs-lookup"><span data-stu-id="95086-140">In this case, the outer value remains the default for all narrower scopes with the exception of that specifically set.</span></span>  
  
 <span data-ttu-id="95086-141">Por ejemplo, si <xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A?displayProperty=nameWithType> está establecido en <xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType> y ningún otro ámbito más restringido tiene valores de nivel de protección, se cifrarán y firmarán todos los mensajes en un contrato de la operación.</span><span class="sxs-lookup"><span data-stu-id="95086-141">For example, if <xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A?displayProperty=nameWithType> is set to <xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType> and no other narrower scopes have protection level settings, all messages in an operation contract are encrypted and signed.</span></span> <span data-ttu-id="95086-142">Si, sin embargo, una de esas operaciones tiene <xref:System.ServiceModel.OperationContractAttribute> definido en <xref:System.Net.Security.ProtectionLevel.Sign?displayProperty=nameWithType>, se firmarán los mensajes para esa operación pero se cifrarán y firmarán todos los demás mensajes en el contrato.</span><span class="sxs-lookup"><span data-stu-id="95086-142">If, however, one of those operations has the <xref:System.ServiceModel.OperationContractAttribute> set to <xref:System.Net.Security.ProtectionLevel.Sign?displayProperty=nameWithType>, then the messages for that operation are signed but all other messages in the contract are encrypted and signed.</span></span>  
  
 <span data-ttu-id="95086-143">Para obtener más información acerca de los niveles de protección y sus suposiciones y ámbitos, consulte [Understanding Protection Level](~/docs/framework/wcf/understanding-protection-level.md).</span><span class="sxs-lookup"><span data-stu-id="95086-143">For details about protection levels and their assumptions and scopes, see [Understanding Protection Level](~/docs/framework/wcf/understanding-protection-level.md).</span></span>  
  
 <span data-ttu-id="95086-144">Los ámbitos en los que se establecen estos valores son:</span><span class="sxs-lookup"><span data-stu-id="95086-144">The scopes at which these values are set are:</span></span>  
  
 <xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A?displayProperty=nameWithType>  
  
 <xref:System.ServiceModel.OperationContractAttribute.ProtectionLevel%2A?displayProperty=nameWithType>  
  
 <xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A?displayProperty=nameWithType>  
  
 <xref:System.ServiceModel.MessageContractAttribute.ProtectionLevel%2A?displayProperty=nameWithType>  
  
 <span data-ttu-id="95086-145">La propiedad <xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=nameWithType> en <xref:System.ServiceModel.MessageHeaderAttribute?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="95086-145">The <xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=nameWithType> property on <xref:System.ServiceModel.MessageHeaderAttribute?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="95086-146">La propiedad <xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=nameWithType> en <xref:System.ServiceModel.MessageBodyMemberAttribute?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="95086-146">The <xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=nameWithType> property on <xref:System.ServiceModel.MessageBodyMemberAttribute?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="95086-147">Cuando no se haya especificado de manera concreta ningún nivel de protección en el contrato y el enlace subyacente admita la seguridad (ya sea en el nivel de transporte o de mensaje), el nivel de protección efectivo para todo el contrato será <xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="95086-147">When there is no protection level explicitly specified on the contract and the underlying binding supports security (whether at the transport or message level), the effective protection level for the whole contract is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType>.</span></span> <span data-ttu-id="95086-148">Si el enlace no admite la seguridad (como <xref:System.ServiceModel.BasicHttpBinding>), el <xref:System.Net.Security.ProtectionLevel?displayProperty=nameWithType> eficaz será <xref:System.Net.Security.ProtectionLevel.None?displayProperty=nameWithType> para todo el contrato.</span><span class="sxs-lookup"><span data-stu-id="95086-148">If the binding does not support security (such as <xref:System.ServiceModel.BasicHttpBinding>), the effective <xref:System.Net.Security.ProtectionLevel?displayProperty=nameWithType> is <xref:System.Net.Security.ProtectionLevel.None?displayProperty=nameWithType> for the whole contract.</span></span> <span data-ttu-id="95086-149">El resultado será (en función del enlace del punto de conexión) que los clientes pueden exigir una protección de nivel de seguridad diferente para los mensajes o el transporte aun cuando el contrato especifique <xref:System.Net.Security.ProtectionLevel.None?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="95086-149">The result is that depending upon the endpoint binding, clients can require different message or transport level security protection even when the contract specifies <xref:System.Net.Security.ProtectionLevel.None?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
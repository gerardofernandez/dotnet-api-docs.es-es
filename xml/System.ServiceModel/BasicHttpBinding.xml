<Type Name="BasicHttpBinding" FullName="System.ServiceModel.BasicHttpBinding">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b781c2d9bda74710b7fccce107950fd4db3759c9" /><Meta Name="ms.sourcegitcommit" Value="cdba5b52b6dc2be14e938e176da642cc6bfd7679" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="01/29/2019" /><Meta Name="ms.locfileid" Value="55205012" /></Metadata><TypeSignature Language="C#" Value="public class BasicHttpBinding : System.ServiceModel.HttpBindingBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BasicHttpBinding extends System.ServiceModel.HttpBindingBase implements class System.ServiceModel.Channels.IBindingRuntimePreferences" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.BasicHttpBinding" />
  <TypeSignature Language="VB.NET" Value="Public Class BasicHttpBinding&#xA;Inherits HttpBindingBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class BasicHttpBinding : System::ServiceModel::HttpBindingBase" />
  <TypeSignature Language="F#" Value="type BasicHttpBinding = class&#xA;    inherit HttpBindingBase&#xA;    interface IBindingRuntimePreferences" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Http</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.HttpBindingBase</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-3.0">System.ServiceModel.Channels.Binding</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Channels.IBindingRuntimePreferences</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="54ec7-101">Representa un enlace que un servicio Windows Communication Foundation (WCF) puede usar para configurar y exponer puntos de conexión que puedan comunicarse con servicios web basados en ASMX y clientes y otros servicios que cumplan con WS-I Basic Profile 1.1.</span><span class="sxs-lookup"><span data-stu-id="54ec7-101">Represents a binding that a Windows Communication Foundation (WCF) service can use to configure and expose endpoints that are able to communicate with ASMX-based Web services and clients and other services that conform to the WS-I Basic Profile 1.1.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54ec7-102"><xref:System.ServiceModel.BasicHttpBinding> utiliza HTTP como transporte para enviar los mensajes SOAP 1.1.</span><span class="sxs-lookup"><span data-stu-id="54ec7-102">The <xref:System.ServiceModel.BasicHttpBinding> uses HTTP as the transport for sending SOAP 1.1 messages.</span></span> <span data-ttu-id="54ec7-103">Servicio puede utilizar este enlace para exponer puntos de conexión que cumplen con WS-I BP 1.1, como aquellos a los que tienen acceso clientes ASMX.</span><span class="sxs-lookup"><span data-stu-id="54ec7-103">A service can use this binding to expose endpoints that conform to WS-I BP 1.1, such as those that ASMX clients access.</span></span> <span data-ttu-id="54ec7-104">De forma similar, un cliente puede utilizar el <xref:System.ServiceModel.BasicHttpBinding> para comunicarse con servicios que exponen los puntos de conexión que cumplen con WS-I BP 1.1, como servicios Web ASMX o servicios de Windows Communication Foundation (WCF) configurados con la <xref:System.ServiceModel.BasicHttpBinding>.</span><span class="sxs-lookup"><span data-stu-id="54ec7-104">Similarly, a client can use the <xref:System.ServiceModel.BasicHttpBinding> to communicate with services exposing endpoints that conform to WS-I BP 1.1, such as ASMX Web services or Windows Communication Foundation (WCF) services configured with the <xref:System.ServiceModel.BasicHttpBinding>.</span></span>  
  
 <span data-ttu-id="54ec7-105">La seguridad está desactivada de forma predeterminada, pero se puede agregar estableciendo <xref:System.ServiceModel.BasicHttpSecurityMode> con un valor distinto de <xref:System.ServiceModel.BasicHttpSecurityMode.None> en el constructor <xref:System.ServiceModel.BasicHttpBinding.%23ctor%28System.ServiceModel.BasicHttpSecurityMode%29>.</span><span class="sxs-lookup"><span data-stu-id="54ec7-105">Security is turned off by default, but can be added setting the <xref:System.ServiceModel.BasicHttpSecurityMode> to a value other than <xref:System.ServiceModel.BasicHttpSecurityMode.None> in the <xref:System.ServiceModel.BasicHttpBinding.%23ctor%28System.ServiceModel.BasicHttpSecurityMode%29> constructor.</span></span> <span data-ttu-id="54ec7-106">De forma predeterminada, usa una codificación de mensajes "Text" y codificación de texto UTF-8.</span><span class="sxs-lookup"><span data-stu-id="54ec7-106">It uses a "Text" message encoding and UTF-8 text encoding by default.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="54ec7-107">En el ejemplo siguiente se muestra cómo configurar <xref:System.ServiceModel.BasicHttpBinding> en un archivo de configuración de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="54ec7-107">The following example shows how to configure the <xref:System.ServiceModel.BasicHttpBinding> in an application configuration file.</span></span>  
  
  
  
 <span data-ttu-id="54ec7-108">En el ejemplo siguiente se muestra cómo configurar mediante programación un <xref:System.ServiceModel.BasicHttpBinding>.</span><span class="sxs-lookup"><span data-stu-id="54ec7-108">The following example shows how to programmatically configure <xref:System.ServiceModel.BasicHttpBinding>.</span></span>  
  
 [!code-csharp[S_UEBasicHttpBinding#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_uebasichttpbinding/cs/service.cs#1)]
 [!code-vb[S_UEBasicHttpBinding#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uebasichttpbinding/vb/service.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="54ec7-109">Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.BasicHttpBinding" />.</span><span class="sxs-lookup"><span data-stu-id="54ec7-109">Initializes a new instance of the <see cref="T:System.ServiceModel.BasicHttpBinding" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BasicHttpBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.BasicHttpBinding.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BasicHttpBinding();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Http</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="54ec7-110">Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.BasicHttpBinding" />.</span><span class="sxs-lookup"><span data-stu-id="54ec7-110">Initializes a new instance of the <see cref="T:System.ServiceModel.BasicHttpBinding" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54ec7-111">El valor predeterminado de <xref:System.ServiceModel.BasicHttpSecurityMode> es <xref:System.ServiceModel.BasicHttpSecurityMode.None>, que especifica que el mensaje SOAP no está protegido, y que no se autentica el cliente.</span><span class="sxs-lookup"><span data-stu-id="54ec7-111">The default value of <xref:System.ServiceModel.BasicHttpSecurityMode> used is <xref:System.ServiceModel.BasicHttpSecurityMode.None>, which specifies that the SOAP message is not secured and the client is not authenticated.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UEBasicHttpBinding#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_uebasichttpbinding/cs/service.cs#2)]
 [!code-vb[S_UEBasicHttpBinding#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uebasichttpbinding/vb/service.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BasicHttpBinding (System.ServiceModel.BasicHttpSecurityMode securityMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.ServiceModel.BasicHttpSecurityMode securityMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.BasicHttpBinding.#ctor(System.ServiceModel.BasicHttpSecurityMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (securityMode As BasicHttpSecurityMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BasicHttpBinding(System::ServiceModel::BasicHttpSecurityMode securityMode);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.BasicHttpBinding : System.ServiceModel.BasicHttpSecurityMode -&gt; System.ServiceModel.BasicHttpBinding" Usage="new System.ServiceModel.BasicHttpBinding securityMode" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Http</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="securityMode" Type="System.ServiceModel.BasicHttpSecurityMode" />
      </Parameters>
      <Docs>
        <param name="securityMode"><span data-ttu-id="54ec7-112">El valor de <see cref="T:System.ServiceModel.BasicHttpSecurityMode" /> que especifica el tipo de seguridad que se usa con el mensaje SOAP y para el cliente.</span><span class="sxs-lookup"><span data-stu-id="54ec7-112">The value of <see cref="T:System.ServiceModel.BasicHttpSecurityMode" /> that specifies the type of security that is used with the SOAP message and for the client.</span></span></param>
        <summary><span data-ttu-id="54ec7-113">Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.BasicHttpBinding" /> con un tipo de seguridad especificado utilizado por el enlace.</span><span class="sxs-lookup"><span data-stu-id="54ec7-113">Initializes a new instance of the <see cref="T:System.ServiceModel.BasicHttpBinding" /> class with a specified type of security used by the binding.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54ec7-114">El valor predeterminado de <xref:System.ServiceModel.BasicHttpSecurityMode> es <xref:System.ServiceModel.BasicHttpSecurityMode.None>, que especifica que el mensaje SOAP no está protegido, y que no se autentica el cliente.</span><span class="sxs-lookup"><span data-stu-id="54ec7-114">The default value of <xref:System.ServiceModel.BasicHttpSecurityMode> used is <xref:System.ServiceModel.BasicHttpSecurityMode.None>, which specifies that the SOAP message is not secured and the client is not authenticated.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UEBasicHttpBinding#3](~/samples/snippets/csharp/VS_Snippets_CFX/s_uebasichttpbinding/cs/snippets.cs#3)]
 [!code-vb[S_UEBasicHttpBinding#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uebasichttpbinding/vb/snippets.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BasicHttpBinding (string configurationName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string configurationName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.BasicHttpBinding.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (configurationName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BasicHttpBinding(System::String ^ configurationName);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.BasicHttpBinding : string -&gt; System.ServiceModel.BasicHttpBinding" Usage="new System.ServiceModel.BasicHttpBinding configurationName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Http</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="configurationName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="configurationName"><span data-ttu-id="54ec7-115">Nombre de configuración del enlace para <see cref="T:System.ServiceModel.Configuration.BasicHttpBindingElement" />.</span><span class="sxs-lookup"><span data-stu-id="54ec7-115">The binding configuration name for the <see cref="T:System.ServiceModel.Configuration.BasicHttpBindingElement" />.</span></span></param>
        <summary><span data-ttu-id="54ec7-116">Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.BasicHttpBinding" /> con un enlace especificado por su nombre de configuración.</span><span class="sxs-lookup"><span data-stu-id="54ec7-116">Initializes a new instance of the <see cref="T:System.ServiceModel.BasicHttpBinding" /> class with a binding specified by its configuration name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="54ec7-117">Este ejemplo inicializa una clase <xref:System.ServiceModel.BasicHttpBinding> nueva con un enlace especificado por el nombre de configuración `myBinding`.</span><span class="sxs-lookup"><span data-stu-id="54ec7-117">This example initializes a new <xref:System.ServiceModel.BasicHttpBinding> class with a binding specified by the configuration name `myBinding`.</span></span> <span data-ttu-id="54ec7-118">Debe crear una sección de enlaces en el archivo de configuración del servicio.</span><span class="sxs-lookup"><span data-stu-id="54ec7-118">You must create a bindings section in the service's configuration file.</span></span>  
  
 [!code-csharp[S_UEBasicHttpBinding#5](~/samples/snippets/csharp/VS_Snippets_CFX/s_uebasichttpbinding/cs/snippets.cs#5)]
 [!code-vb[S_UEBasicHttpBinding#5](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uebasichttpbinding/vb/snippets.vb#5)]  
  
 <span data-ttu-id="54ec7-119">A continuación, se especifica el nombre de la configuración de enlace en la llamada al constructor <xref:System.ServiceModel.BasicHttpBinding>:</span><span class="sxs-lookup"><span data-stu-id="54ec7-119">Then the name of the binding configuration is specified in the call to the <xref:System.ServiceModel.BasicHttpBinding> constructor.</span></span>  
  
 [!code-csharp[S_UEBasicHttpBinding#4](~/samples/snippets/csharp/VS_Snippets_CFX/s_uebasichttpbinding/cs/snippets.cs#4)]
 [!code-vb[S_UEBasicHttpBinding#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uebasichttpbinding/vb/snippets.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException"><span data-ttu-id="54ec7-120">No se encontró el enlace con el nombre de configuración <paramref name="configurationName" />.</span><span class="sxs-lookup"><span data-stu-id="54ec7-120">The binding with the configuration name <paramref name="configurationName" /> was not found.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AllowCookies">
      <MemberSignature Language="C#" Value="public bool AllowCookies { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowCookies" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.BasicHttpBinding.AllowCookies" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowCookies As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowCookies { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowCookies : bool with get, set" Usage="System.ServiceModel.BasicHttpBinding.AllowCookies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Http</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="54ec7-121">Obtiene o establece un valor que indica si el cliente acepta las cookies y las propaga en solicitudes futuras.</span><span class="sxs-lookup"><span data-stu-id="54ec7-121">Gets or sets a value that indicates whether the client accepts cookies and propagates them on future requests.</span></span></summary>
        <value><span data-ttu-id="54ec7-122"><see langword="true" /> si se permiten cookies; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="54ec7-122"><see langword="true" /> if cookies are allowed; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="54ec7-123">De manera predeterminada, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="54ec7-123">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="54ec7-124">Esta propiedad se proporciona como una comodidad para interactuar con los servicios Web ASMX que utilizan cookies.</span><span class="sxs-lookup"><span data-stu-id="54ec7-124">This property is provided as a convenience for interacting with ASMX Web services that use cookies.</span></span> <span data-ttu-id="54ec7-125">Cuando el cliente acepta las cookies estableciendo la propiedad como `true`, las cookies devueltas desde el servidor se copian automáticamente en todas las solicitudes de cliente futuras a ese servicio.</span><span class="sxs-lookup"><span data-stu-id="54ec7-125">When cookies are accepted by the client by setting the property to `true`, cookies returned from the server are automatically copied to all future client requests to that service.</span></span>

## Examples

<span data-ttu-id="54ec7-126">El ejemplo siguiente establece esta propiedad para indicar que se deberían copiar todas las cookies del servidor para futuras solicitudes de cliente:</span><span class="sxs-lookup"><span data-stu-id="54ec7-126">The following example sets this property to indicate that all cookies from the server should be copied to future client requests:</span></span>

```csharp
BasicHttpBinding binding = new BasicHttpBinding();
binding.AllowCookies = true;
```

<span data-ttu-id="54ec7-127">El valor de esta propiedad también puede establecerse en el archivo de configuración.</span><span class="sxs-lookup"><span data-stu-id="54ec7-127">The value of this property can also be set in the configuration file.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildChannelFactory&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Channels.IChannelFactory&lt;TChannel&gt; BuildChannelFactory&lt;TChannel&gt; (System.ServiceModel.Channels.BindingParameterCollection parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ServiceModel.Channels.IChannelFactory`1&lt;!!TChannel&gt; BuildChannelFactory&lt;TChannel&gt;(class System.ServiceModel.Channels.BindingParameterCollection parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.BasicHttpBinding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BuildChannelFactory(Of TChannel) (parameters As BindingParameterCollection) As IChannelFactory(Of TChannel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; override System::ServiceModel::Channels::IChannelFactory&lt;TChannel&gt; ^ BuildChannelFactory(System::ServiceModel::Channels::BindingParameterCollection ^ parameters);" />
      <MemberSignature Language="F#" Value="override this.BuildChannelFactory : System.ServiceModel.Channels.BindingParameterCollection -&gt; System.ServiceModel.Channels.IChannelFactory&lt;'Channel&gt;" Usage="basicHttpBinding.BuildChannelFactory parameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Http</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.IChannelFactory&lt;TChannel&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="parameters" Type="System.ServiceModel.Channels.BindingParameterCollection" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel"><span data-ttu-id="54ec7-128">El tipo de canal que produce el generador de canales.</span><span class="sxs-lookup"><span data-stu-id="54ec7-128">The type of channel the channel factory produces.</span></span></typeparam>
        <param name="parameters"><span data-ttu-id="54ec7-129">Especifica los requisitos para el generador del canal compilado.</span><span class="sxs-lookup"><span data-stu-id="54ec7-129">Specifies the requirements for the channel factory built.</span></span></param>
        <summary><span data-ttu-id="54ec7-130">Compila la pila de generador de canales en el cliente que crea un tipo especificado de canal y satisface las características especificadas por una colección de parámetros de enlace.</span><span class="sxs-lookup"><span data-stu-id="54ec7-130">Builds the channel factory stack on the client that creates a specified type of channel and that satisfies the features specified by a collection of binding parameters.</span></span></summary>
        <returns><span data-ttu-id="54ec7-131"><see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> de tipo <paramref name="TChannel" /> que satisface las características especificadas por la colección.</span><span class="sxs-lookup"><span data-stu-id="54ec7-131">An <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> of type <paramref name="TChannel" /> that satisfies the features specified by the collection.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BypassProxyOnLocal">
      <MemberSignature Language="C#" Value="public bool BypassProxyOnLocal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool BypassProxyOnLocal" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.BasicHttpBinding.BypassProxyOnLocal" />
      <MemberSignature Language="VB.NET" Value="Public Property BypassProxyOnLocal As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool BypassProxyOnLocal { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.BypassProxyOnLocal : bool with get, set" Usage="System.ServiceModel.BasicHttpBinding.BypassProxyOnLocal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Http</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="54ec7-132">Obtiene o establece un valor que indica si se omitirá el servidor proxy para las direcciones locales.</span><span class="sxs-lookup"><span data-stu-id="54ec7-132">Gets or sets a value that indicates whether to bypass the proxy server for local addresses.</span></span></summary>
        <value><span data-ttu-id="54ec7-133">Es <see langword="true" /> si se va a omitir el servidor proxy para las direcciones locales; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="54ec7-133"><see langword="true" /> to bypass the proxy server for local addresses; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="54ec7-134">El valor predeterminado es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="54ec7-134">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="54ec7-135">Un recurso de Internet es local si tiene una dirección local.</span><span class="sxs-lookup"><span data-stu-id="54ec7-135">An Internet resource is local if it has a local address.</span></span> <span data-ttu-id="54ec7-136">Una dirección local es aquella que se encuentra en el mismo equipo, LAN local o intranet y se identifica, sintácticamente, por la ausencia de un punto (\.) como se muestra en los URI `http://webserver/` y `http://localhost/`.</span><span class="sxs-lookup"><span data-stu-id="54ec7-136">A local address is one that is on same computer, the local LAN or intranet and is identified, syntactically, by the lack of a period (\.) as in the URIs `http://webserver/` and `http://localhost/`.</span></span>

<span data-ttu-id="54ec7-137">Al establecer el BypassProxyOnLocal propiedad determina si los puntos de conexión configuran con el <xref:System.ServiceModel.BasicHttpBinding> usan el servidor proxy al obtener acceso a recursos locales.</span><span class="sxs-lookup"><span data-stu-id="54ec7-137">Setting the BypassProxyOnLocal property determines whether endpoints configured with the <xref:System.ServiceModel.BasicHttpBinding> use the proxy server when accessing local resources.</span></span>

<span data-ttu-id="54ec7-138">Si es BypassProxyOnLocal `true`, las solicitudes a los recursos locales de Internet no usarán el servidor proxy.</span><span class="sxs-lookup"><span data-stu-id="54ec7-138">If BypassProxyOnLocal is `true`, requests to local Internet resources do not use the proxy server.</span></span> <span data-ttu-id="54ec7-139">Utilice el nombre de host (en lugar de `localhost`) si desea que los clientes pasen por un proxy al hablar con los servicios del mismo equipo cuando esta propiedad está establecida como `true`.</span><span class="sxs-lookup"><span data-stu-id="54ec7-139">Use the host name (rather than `localhost`) if you want clients to go through a proxy when talking to services on the same machine when this property is set to `true`.</span></span>

<span data-ttu-id="54ec7-140">Cuando es BypassProxyOnLocal `false`, todas las solicitudes de Internet para que no sean localhost URI se realizan a través del servidor proxy.</span><span class="sxs-lookup"><span data-stu-id="54ec7-140">When BypassProxyOnLocal is `false`, all Internet requests to non-localhost URIs are made through the proxy server.</span></span> <span data-ttu-id="54ec7-141">Las solicitudes a los URI con localhost no usará el servidor proxy, independientemente de la configuración de BypassProxyOnLocal.</span><span class="sxs-lookup"><span data-stu-id="54ec7-141">Requests to URIs with localhost will not use the proxy server regardless of the BypassProxyOnLocal setting.</span></span>
  
## Examples

<span data-ttu-id="54ec7-142">El ejemplo siguiente establece esta propiedad para indicar que el proxy se debería omitir para los recursos locales.</span><span class="sxs-lookup"><span data-stu-id="54ec7-142">The following example sets this property to indicate that the proxy should be bypassed for local resources.</span></span>

```csharp
BasicHttpBinding binding = new BasicHttpBinding();
binding.BypassProxyOnLocal = true;
```

<span data-ttu-id="54ec7-143">El valor de esta propiedad también puede establecerse en el archivo de configuración.</span><span class="sxs-lookup"><span data-stu-id="54ec7-143">The value of this property can also be set in the configuration file.</span></span>

```xml
<configuration>
  <system.serviceModel>

    <bindings>
      <basicHttpBinding>
        <binding name="Binding1" 
                 bypassProxyOnLocal="true">
          <security mode="None" />
        </binding>
      </basicHttpBinding>
    </bindings>
  </system.serviceModel>

</configuration>
```

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBindingElements">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Channels.BindingElementCollection CreateBindingElements ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ServiceModel.Channels.BindingElementCollection CreateBindingElements() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.BasicHttpBinding.CreateBindingElements" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateBindingElements () As BindingElementCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ServiceModel::Channels::BindingElementCollection ^ CreateBindingElements();" />
      <MemberSignature Language="F#" Value="override this.CreateBindingElements : unit -&gt; System.ServiceModel.Channels.BindingElementCollection" Usage="basicHttpBinding.CreateBindingElements " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Http</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.BindingElementCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="54ec7-144">Crea y devuelve una colección ordenada de elementos de enlace contenidos en el enlace actual.</span><span class="sxs-lookup"><span data-stu-id="54ec7-144">Creates and returns an ordered collection of binding elements contained in the current binding.</span></span></summary>
        <returns><span data-ttu-id="54ec7-145">La <see cref="T:System.ServiceModel.Channels.BindingElementCollection" /> que contiene la pila ordenada de elementos de enlace descritos por <see cref="T:System.ServiceModel.BasicHttpBinding" />.</span><span class="sxs-lookup"><span data-stu-id="54ec7-145">The <see cref="T:System.ServiceModel.Channels.BindingElementCollection" /> that contains the ordered stack of binding elements described by the <see cref="T:System.ServiceModel.BasicHttpBinding" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54ec7-146">El orden de los elementos de enlace es importante.</span><span class="sxs-lookup"><span data-stu-id="54ec7-146">The order of the binding elements is important.</span></span> <span data-ttu-id="54ec7-147">Refleja el orden en que el protocolo y los canales de transporte se construyen y apilan.</span><span class="sxs-lookup"><span data-stu-id="54ec7-147">It reflects the order in which the protocol and transport channels are constructed and stacked.</span></span> <span data-ttu-id="54ec7-148">Esta colección de elementos de enlace es una nueva colección que puede modificarse y utilizarse para crear un objeto <xref:System.ServiceModel.Channels.CustomBinding>.</span><span class="sxs-lookup"><span data-stu-id="54ec7-148">This collection of binding elements is a new collection and can be modified and then used to create a <xref:System.ServiceModel.Channels.CustomBinding>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="54ec7-149">En el ejemplo siguiente se crea una colección ordenada de los elementos de enlace en el enlace actual.</span><span class="sxs-lookup"><span data-stu-id="54ec7-149">The following example creates an ordered collection of the binding elements in the current binding.</span></span>  
  
 [!code-csharp[S_UEBasicHttpBinding#26](~/samples/snippets/csharp/VS_Snippets_CFX/s_uebasichttpbinding/cs/client.cs#26)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableHttpCookieContainer">
      <MemberSignature Language="C#" Value="public bool EnableHttpCookieContainer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableHttpCookieContainer" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.BasicHttpBinding.EnableHttpCookieContainer" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableHttpCookieContainer As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableHttpCookieContainer { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableHttpCookieContainer : bool with get, set" Usage="System.ServiceModel.BasicHttpBinding.EnableHttpCookieContainer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Http</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("This property is obsolete. To enable Http CookieContainer, use the AllowCookies property instead.", false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="54ec7-150">Obtiene o establece un valor que indica si el contenedor de cookie HTTP se ha habilitado.</span><span class="sxs-lookup"><span data-stu-id="54ec7-150">Gets or sets a value that indicates whether HTTP cookie container is enabled.</span></span></summary>
        <value><span data-ttu-id="54ec7-151"><see langword="true" /> si el contenedor de cookies HTTP en caché está habilitado; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="54ec7-151"><see langword="true" /> if HTTP cookie container is enabled; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnvelopeVersion">
      <MemberSignature Language="C#" Value="public System.ServiceModel.EnvelopeVersion EnvelopeVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.EnvelopeVersion EnvelopeVersion" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.BasicHttpBinding.EnvelopeVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EnvelopeVersion As EnvelopeVersion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::EnvelopeVersion ^ EnvelopeVersion { System::ServiceModel::EnvelopeVersion ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EnvelopeVersion : System.ServiceModel.EnvelopeVersion" Usage="System.ServiceModel.BasicHttpBinding.EnvelopeVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Http</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.EnvelopeVersion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="54ec7-152">Obtiene la versión de SOAP que se utiliza para los mensajes procesados por este enlace.</span><span class="sxs-lookup"><span data-stu-id="54ec7-152">Gets the version of SOAP that is used for messages that are processed by this binding.</span></span></summary>
        <value><span data-ttu-id="54ec7-153">El valor de <see cref="T:System.ServiceModel.EnvelopeVersion" /> que se utiliza con este enlace.</span><span class="sxs-lookup"><span data-stu-id="54ec7-153">The value of the <see cref="T:System.ServiceModel.EnvelopeVersion" /> that is used with this binding.</span></span> <span data-ttu-id="54ec7-154">El valor es siempre SOAP 1.1.</span><span class="sxs-lookup"><span data-stu-id="54ec7-154">The value is always SOAP 1.1.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  

## Remarks  

<span data-ttu-id="54ec7-155">SOAP 1.1 es el único valor que se puede utilizar con este enlace.</span><span class="sxs-lookup"><span data-stu-id="54ec7-155">SOAP 1.1 is the only value that can be used with this binding.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HostNameComparisonMode">
      <MemberSignature Language="C#" Value="public System.ServiceModel.HostNameComparisonMode HostNameComparisonMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.HostNameComparisonMode HostNameComparisonMode" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.BasicHttpBinding.HostNameComparisonMode" />
      <MemberSignature Language="VB.NET" Value="Public Property HostNameComparisonMode As HostNameComparisonMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::HostNameComparisonMode HostNameComparisonMode { System::ServiceModel::HostNameComparisonMode get(); void set(System::ServiceModel::HostNameComparisonMode value); };" />
      <MemberSignature Language="F#" Value="member this.HostNameComparisonMode : System.ServiceModel.HostNameComparisonMode with get, set" Usage="System.ServiceModel.BasicHttpBinding.HostNameComparisonMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Http</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.HostNameComparisonMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="54ec7-156">Obtiene o establece un valor que indica si el nombre del host se usa para alcanzar el servicio al coincidir con el URI.</span><span class="sxs-lookup"><span data-stu-id="54ec7-156">Gets or sets a value that indicates whether the hostname is used to reach the service when matching the URI.</span></span></summary>
        <value><span data-ttu-id="54ec7-157">Valor de <see cref="T:System.ServiceModel.HostNameComparisonMode" /> que indica si el nombre del host se usa para alcanzar el servicio cuando coincide con el URI.</span><span class="sxs-lookup"><span data-stu-id="54ec7-157">The <see cref="T:System.ServiceModel.HostNameComparisonMode" /> value that indicates whether the hostname is used to reach the service when matching on the URI.</span></span> <span data-ttu-id="54ec7-158">El valor predeterminado es <see cref="F:System.ServiceModel.HostNameComparisonMode.StrongWildcard" />, que omite el nombre del host en la coincidencia.</span><span class="sxs-lookup"><span data-stu-id="54ec7-158">The default value is <see cref="F:System.ServiceModel.HostNameComparisonMode.StrongWildcard" />, which ignores the hostname in the match.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples

<span data-ttu-id="54ec7-159">El ejemplo siguiente establece esta propiedad para indicar que se requiere una coincidencia exacta.</span><span class="sxs-lookup"><span data-stu-id="54ec7-159">The following example sets this property to indicate that an exact match is required.</span></span>

```csharp
BasicHttpBinding binding = new BasicHttpBinding();
binding.HostNameComparisonMode = HostNameComparisonMode.Exact;
```

<span data-ttu-id="54ec7-160">El valor de esta propiedad también puede establecerse en el archivo de configuración.</span><span class="sxs-lookup"><span data-stu-id="54ec7-160">The value of this property can also be set in the configuration file.</span></span>

```xml
<configuration>
  <system.serviceModel>

    <bindings>
      <basicHttpBinding>
        <binding name="Binding1"
                 hostNameComparisonMode ="Exact">
          <security mode="None" />
        </binding>
      </basicHttpBinding>
    </bindings>

  </system.serviceModel>

</configuration>
```

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxBufferPoolSize">
      <MemberSignature Language="C#" Value="public long MaxBufferPoolSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaxBufferPoolSize" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.BasicHttpBinding.MaxBufferPoolSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxBufferPoolSize As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaxBufferPoolSize { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.MaxBufferPoolSize : int64 with get, set" Usage="System.ServiceModel.BasicHttpBinding.MaxBufferPoolSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Http</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.DefaultValue(524288)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="54ec7-161">Obtiene o establece la cantidad de memoria máxima, en bytes, que se asigna para que la use el administrador de los búferes de mensajes que reciben los mensajes del canal.</span><span class="sxs-lookup"><span data-stu-id="54ec7-161">Gets or sets the maximum amount of memory, in bytes,  that is allocated for use by the manager of the message buffers that receive messages from the channel.</span></span></summary>
        <value><span data-ttu-id="54ec7-162">Cantidad de memoria máxima, en bytes, disponible para que la use el administrador de búferes de mensajes.</span><span class="sxs-lookup"><span data-stu-id="54ec7-162">The maximum amount of memory, in bytes, available for use by the message buffer manager.</span></span> <span data-ttu-id="54ec7-163">El valor predeterminado es 524288 (0x80000) bytes.</span><span class="sxs-lookup"><span data-stu-id="54ec7-163">The default value is 524288 (0x80000) bytes.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="54ec7-164"><xref:System.ServiceModel.Channels.BufferManager> reduce el costo que supone utilizar los búferes con un grupo de búferes.</span><span class="sxs-lookup"><span data-stu-id="54ec7-164">The <xref:System.ServiceModel.Channels.BufferManager> minimizes the cost of using buffers by using a buffer pool.</span></span> <span data-ttu-id="54ec7-165">Es necesario que los búferes procesen los mensajes del servicio cuando salen del canal.</span><span class="sxs-lookup"><span data-stu-id="54ec7-165">Buffers are required to process messages by the service when they come out of the channel.</span></span> <span data-ttu-id="54ec7-166">Si no hay memoria suficiente en el grupo de búferes para procesar la carga de mensajes, <xref:System.ServiceModel.Channels.BufferManager> debe asignar memoria adicional del montón CLR, lo que aumenta la carga de trabajo de la recolección de elementos no utilizados.</span><span class="sxs-lookup"><span data-stu-id="54ec7-166">If there is not sufficient memory in the buffer pool to process the message load, the <xref:System.ServiceModel.Channels.BufferManager> must allocate additional memory from the CLR heap, which increases the garbage collection overhead.</span></span> <span data-ttu-id="54ec7-167">La amplia asignación del montón de elementos no utilizados CLR es una indicación de que el tamaño del grupo de búferes es demasiado pequeño y que el rendimiento podría mejorar con una asignación mayor aumentando el límite de MaxBufferPoolSize.</span><span class="sxs-lookup"><span data-stu-id="54ec7-167">Extensive allocation from the CLR garbage heap is an indication that the buffer pool size is too small and that performance can be improved with a larger allocation by increasing the MaxBufferPoolSize limit.</span></span>

## Examples

<span data-ttu-id="54ec7-168">Los ejemplos siguientes establecen esta propiedad como el doble del valor predeterminado.</span><span class="sxs-lookup"><span data-stu-id="54ec7-168">The following example sets this property to twice the default value.</span></span>

```csharp
BasicHttpBinding binding = new BasicHttpBinding();
// Use double the default value
binding.MaxBufferPoolSize = 0x80000 * 2;
```

<span data-ttu-id="54ec7-169">El valor de esta propiedad también puede establecerse en el archivo de configuración.</span><span class="sxs-lookup"><span data-stu-id="54ec7-169">The value of this property can also be set in the configuration file.</span></span>

```xml
<configuration>
  <system.serviceModel>

    <bindings>
      <basicHttpBinding>
        <binding name="Binding1">

          <!-- set pool size to double default of 0x80000 -->
          maxBufferPoolSize = 0x100000

          <security mode="None" />
        </binding>
      </basicHttpBinding>
    </bindings>

  </system.serviceModel>

</configuration>
```

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxBufferSize">
      <MemberSignature Language="C#" Value="public int MaxBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.BasicHttpBinding.MaxBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxBufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxBufferSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxBufferSize : int with get, set" Usage="System.ServiceModel.BasicHttpBinding.MaxBufferSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Http</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.DefaultValue(65536)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="54ec7-170">Obtiene o establece el tamaño máximo, en bytes, para un búfer que recibe mensajes del canal.</span><span class="sxs-lookup"><span data-stu-id="54ec7-170">Gets or sets the maximum size, in bytes, for a buffer that receives messages from the channel.</span></span></summary>
        <value><span data-ttu-id="54ec7-171">El tamaño máximo, en bytes, de un búfer que almacena los mensajes mientras se procesan para un extremo configurado con este enlace.</span><span class="sxs-lookup"><span data-stu-id="54ec7-171">The maximum size, in bytes, of a buffer that stores messages while they are processed for an endpoint configured with this binding.</span></span> <span data-ttu-id="54ec7-172">El valor predeterminado es 65.536 bytes.</span><span class="sxs-lookup"><span data-stu-id="54ec7-172">The default value is 65,536 bytes.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="54ec7-173">Si no hay memoria suficiente en el grupo de búferes para almacenar el mensaje mientras se procesa, se debe asignar memoria adicional del montón CLR, lo que aumenta la carga de recolección de elementos no utilizados.</span><span class="sxs-lookup"><span data-stu-id="54ec7-173">If there is not sufficient memory in the buffer to store the message while it is processed, more memory must be allocated from the CLR heap, which increases the garbage collection overhead.</span></span> <span data-ttu-id="54ec7-174">La amplia asignación del montón de elementos no utilizados de CLR es una indicación de que el tamaño búfer de mensajes es demasiado pequeño y de que el rendimiento podría mejorar con una asignación mayor.</span><span class="sxs-lookup"><span data-stu-id="54ec7-174">Extensive allocation from the CLR garbage heap is an indication that the message buffer size is too small and that performance can be improved with a larger allocation.</span></span>

<span data-ttu-id="54ec7-175">El valor de la propiedad MaxBufferSize y su importancia es diferente en función de si los mensajes se están almacenando en búfer o se transmiten al canal a través del cual se reciben:</span><span class="sxs-lookup"><span data-stu-id="54ec7-175">The value of the MaxBufferSize property and its significance is different depending on whether the messages are being buffered or streamed on the channel through which they are being received:</span></span>

<span data-ttu-id="54ec7-176">Para transportes almacenados en búfer (<xref:System.ServiceModel.BasicHttpBinding.TransferMode> establecido como <xref:System.ServiceModel.TransferMode.Buffered>).</span><span class="sxs-lookup"><span data-stu-id="54ec7-176">For buffered transports, (<xref:System.ServiceModel.BasicHttpBinding.TransferMode> set to <xref:System.ServiceModel.TransferMode.Buffered>).</span></span> <span data-ttu-id="54ec7-177">Este valor siempre es igual al especificado por <xref:System.ServiceModel.BasicHttpBinding.MaxReceivedMessageSize>.</span><span class="sxs-lookup"><span data-stu-id="54ec7-177">This value is always equal to that specified by the <xref:System.ServiceModel.BasicHttpBinding.MaxReceivedMessageSize>.</span></span>

<span data-ttu-id="54ec7-178">Para transportes transmitidos, (<xref:System.ServiceModel.BasicHttpBinding.TransferMode> establecido como <xref:System.ServiceModel.TransferMode.Streamed>) sólo se deben almacenar en búfer los encabezados SOAP para generar el mensaje.</span><span class="sxs-lookup"><span data-stu-id="54ec7-178">For streamed transports, (<xref:System.ServiceModel.BasicHttpBinding.TransferMode> set to <xref:System.ServiceModel.TransferMode.Streamed>), only the SOAP headers must be buffered to generate the message.</span></span> <span data-ttu-id="54ec7-179">El cuerpo se puede transmitir a petición.</span><span class="sxs-lookup"><span data-stu-id="54ec7-179">The body can be streamed in on-demand.</span></span> <span data-ttu-id="54ec7-180">En este caso, MaxBufferSize es menor o igual que <xref:System.ServiceModel.BasicHttpBinding.MaxReceivedMessageSize>, donde <xref:System.ServiceModel.BasicHttpBinding.MaxReceivedMessageSize> limita el tamaño del mensaje total (encabezados y cuerpo) y MaxBufferSize limita sólo el tamaño de los encabezados SOAP.</span><span class="sxs-lookup"><span data-stu-id="54ec7-180">In this case, MaxBufferSize is less than or equal to <xref:System.ServiceModel.BasicHttpBinding.MaxReceivedMessageSize>, where <xref:System.ServiceModel.BasicHttpBinding.MaxReceivedMessageSize> bounds the size of the overall message (headers and body) and MaxBufferSize bounds only the size of the SOAP headers.</span></span>

<span data-ttu-id="54ec7-181">Las limitaciones en el tamaño de búfer establecidas aquí son para optimizar el rendimiento de intercambios de mensajes.</span><span class="sxs-lookup"><span data-stu-id="54ec7-181">The limitations on buffer size set here are for optimizing the performance of message exchanges.</span></span> <span data-ttu-id="54ec7-182">Si un mensaje supera el conjunto de valores máximos para el búfer, no se coloca.</span><span class="sxs-lookup"><span data-stu-id="54ec7-182">If a message exceeds the maximum value set for the buffer, it is not dropped.</span></span> <span data-ttu-id="54ec7-183">En su lugar, se solicita más memoria del montón CLR y esto ocasiona más sobrecarga de recolección de elementos no utilizados que utilizar los búferes.</span><span class="sxs-lookup"><span data-stu-id="54ec7-183">Instead, more memory is requested from the CLR heap and this incurs more garbage collection overhead than using the buffers.</span></span>

> [!NOTE]
> <span data-ttu-id="54ec7-184">La configuración de MaxBufferSize y MaxReceivedMessageSize, son configuraciones de comportamiento locales.</span><span class="sxs-lookup"><span data-stu-id="54ec7-184">The settings for MaxBufferSize and MaxReceivedMessageSize, are local behavioral settings.</span></span> <span data-ttu-id="54ec7-185">Esto significa que no se transmiten a otros extremos en metadatos.</span><span class="sxs-lookup"><span data-stu-id="54ec7-185">This means that they are not transmitted to other endpoints in metadata.</span></span> <span data-ttu-id="54ec7-186">Si genera un proxy para un servicio con un tamaño máximo de mensaje de 2GB de metadatos, el proxy tendrá aún un valor predeterminado de 64 KB.</span><span class="sxs-lookup"><span data-stu-id="54ec7-186">If you generate a proxy to a service with a maximum message size of 2GB from metadata, the proxy still has a default value of 64K.</span></span> <span data-ttu-id="54ec7-187">Esto deja el control de los límites adecuados para mensajes y tamaño de búfer de mensajes en manos de los administradores locales.</span><span class="sxs-lookup"><span data-stu-id="54ec7-187">This leaves control of the appropriate bounds for message and message buffer size in the scope of local administrators.</span></span>
  
## Examples


<span data-ttu-id="54ec7-188">El ejemplo siguiente se establece **MaxBufferSize** como 1.000.000 bytes.</span><span class="sxs-lookup"><span data-stu-id="54ec7-188">The following example sets **MaxBufferSize** to 1,000,000 bytes.</span></span>

```csharp
BasicHttpBinding binding = new BasicHttpBinding();
            
// set to one million
binding.MaxBufferSize = 1000000;
```

<span data-ttu-id="54ec7-189">El valor de esta propiedad también puede establecerse en el archivo de configuración.</span><span class="sxs-lookup"><span data-stu-id="54ec7-189">The value of this property can also be set in the configuration file.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxReceivedMessageSize">
      <MemberSignature Language="C#" Value="public long MaxReceivedMessageSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaxReceivedMessageSize" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.BasicHttpBinding.MaxReceivedMessageSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxReceivedMessageSize As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaxReceivedMessageSize { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.MaxReceivedMessageSize : int64 with get, set" Usage="System.ServiceModel.BasicHttpBinding.MaxReceivedMessageSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Http</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.DefaultValue(65536)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="54ec7-190">Obtiene o establece el tamaño máximo, en bytes, de un mensaje que se puede recibir en un canal configurado con este enlace.</span><span class="sxs-lookup"><span data-stu-id="54ec7-190">Gets or sets the maximum size, in bytes, for a message that can be received on a channel configured with this binding.</span></span></summary>
        <value><span data-ttu-id="54ec7-191">El tamaño máximo, en bytes, de un mensaje que procesa el enlace.</span><span class="sxs-lookup"><span data-stu-id="54ec7-191">The maximum size, in bytes, for a message that is processed by the binding.</span></span> <span data-ttu-id="54ec7-192">El valor predeterminado es 65.536 bytes.</span><span class="sxs-lookup"><span data-stu-id="54ec7-192">The default value is 65,536 bytes.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="54ec7-193">El tamaño de los mensajes que pueden recibir durante la conexión a los servicios mediante BasicHttpBinding está limitado por la cantidad de memoria asignada para cada mensaje.</span><span class="sxs-lookup"><span data-stu-id="54ec7-193">The size of the messages that can be received on the wire by services using the BasicHttpBinding is bounded by the amount of memory allocated for each message.</span></span> <span data-ttu-id="54ec7-194">Este límite en el tamaño del mensaje es para limitar la exposición a ataques de estilo de DoS.</span><span class="sxs-lookup"><span data-stu-id="54ec7-194">This bound on message size is intended to limit exposure to DoS-style attacks.</span></span>

<span data-ttu-id="54ec7-195">También hay una propiedad <xref:System.ServiceModel.BasicHttpBinding.MaxBufferSize> en <xref:System.ServiceModel.BasicHttpBinding>:</span><span class="sxs-lookup"><span data-stu-id="54ec7-195">There is also a <xref:System.ServiceModel.BasicHttpBinding.MaxBufferSize> property on the <xref:System.ServiceModel.BasicHttpBinding>:</span></span>

<span data-ttu-id="54ec7-196">Para transportes almacenados en búfer (<xref:System.ServiceModel.BasicHttpBinding.TransferMode> establecido como <xref:System.ServiceModel.TransferMode.Buffered>).</span><span class="sxs-lookup"><span data-stu-id="54ec7-196">For buffered transports, (<xref:System.ServiceModel.BasicHttpBinding.TransferMode> set to <xref:System.ServiceModel.TransferMode.Buffered>).</span></span> <span data-ttu-id="54ec7-197">Este valor siempre es igual que el especificado por el MaxReceivedMessageSize.</span><span class="sxs-lookup"><span data-stu-id="54ec7-197">This value is always equal to that specified by the MaxReceivedMessageSize.</span></span>

<span data-ttu-id="54ec7-198">Para transportes transmitidos, (<xref:System.ServiceModel.BasicHttpBinding.TransferMode> establecido como <xref:System.ServiceModel.TransferMode.Streamed>) sólo se deben almacenar en búfer los encabezados SOAP para generar el mensaje.</span><span class="sxs-lookup"><span data-stu-id="54ec7-198">For streamed transports (<xref:System.ServiceModel.BasicHttpBinding.TransferMode> set to <xref:System.ServiceModel.TransferMode.Streamed>), only the SOAP headers must be buffered to generate the message.</span></span> <span data-ttu-id="54ec7-199">El cuerpo se puede transmitir a petición.</span><span class="sxs-lookup"><span data-stu-id="54ec7-199">The body can be streamed in on-demand.</span></span> <span data-ttu-id="54ec7-200">En este caso, <xref:System.ServiceModel.BasicHttpBinding.MaxBufferSize> es menor o igual que MaxReceivedMessageSize, donde MaxReceivedMessageSize limita el tamaño del mensaje total (encabezados y cuerpo) y <xref:System.ServiceModel.BasicHttpBinding.MaxBufferSize> limita el tamaño de los encabezados SOAP.</span><span class="sxs-lookup"><span data-stu-id="54ec7-200">In this case, <xref:System.ServiceModel.BasicHttpBinding.MaxBufferSize> is less than or equal to MaxReceivedMessageSize, where MaxReceivedMessageSize bounds the size of the overall message (headers and body) and <xref:System.ServiceModel.BasicHttpBinding.MaxBufferSize> bounds the size of the SOAP headers.</span></span>

## Examples

<span data-ttu-id="54ec7-201">El ejemplo siguiente establece MaxReceivedMessageSize como 1.000.000 bytes.</span><span class="sxs-lookup"><span data-stu-id="54ec7-201">The following example sets MaxReceivedMessageSize to 1,000,000 bytes.</span></span>

```csharp
BasicHttpBinding binding = new BasicHttpBinding();

// Use double the default value
binding.MaxReceivedMessageSize = 65536 * 2;
```

<span data-ttu-id="54ec7-202">El valor de esta propiedad también puede establecerse en el archivo de configuración.</span><span class="sxs-lookup"><span data-stu-id="54ec7-202">The value of this property can also be set in the configuration file.</span></span>

```xml
<configuration>
  <system.serviceModel>

    <bindings>
      <basicHttpBinding>
        <binding name="Binding1"
                 maxReceivedMessageSize = "1000000">
          <security mode="None" />
        </binding>
      </basicHttpBinding>
    </bindings>

  </system.serviceModel>

</configuration>
```

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="54ec7-203">El valor es menor que cero.</span><span class="sxs-lookup"><span data-stu-id="54ec7-203">The value is less than zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MessageEncoding">
      <MemberSignature Language="C#" Value="public System.ServiceModel.WSMessageEncoding MessageEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.WSMessageEncoding MessageEncoding" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.BasicHttpBinding.MessageEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Property MessageEncoding As WSMessageEncoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::WSMessageEncoding MessageEncoding { System::ServiceModel::WSMessageEncoding get(); void set(System::ServiceModel::WSMessageEncoding value); };" />
      <MemberSignature Language="F#" Value="member this.MessageEncoding : System.ServiceModel.WSMessageEncoding with get, set" Usage="System.ServiceModel.BasicHttpBinding.MessageEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Http</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.WSMessageEncoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="54ec7-204">Obtiene o establece si se usa MTOM o Texto para codificar los mensajes SOAP.</span><span class="sxs-lookup"><span data-stu-id="54ec7-204">Gets or sets whether MTOM or Text is used to encode SOAP messages.</span></span></summary>
        <value><span data-ttu-id="54ec7-205">El valor de <see cref="T:System.ServiceModel.WSMessageEncoding" /> que indica que se usa MTOM o Texto para codificar los mensajes SOAP.</span><span class="sxs-lookup"><span data-stu-id="54ec7-205">The value of <see cref="T:System.ServiceModel.WSMessageEncoding" /> that indicates whether MTOM or Text/XML is used to encode SOAP messages.</span></span> <span data-ttu-id="54ec7-206">El valor predeterminado es <see cref="F:System.ServiceModel.WSMessageEncoding.Text" />.</span><span class="sxs-lookup"><span data-stu-id="54ec7-206">The default value is <see cref="F:System.ServiceModel.WSMessageEncoding.Text" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="54ec7-207">El ejemplo siguiente establece MessageEncoding como Texto.</span><span class="sxs-lookup"><span data-stu-id="54ec7-207">The following example sets MessageEncoding to Text.</span></span>  
  
 [!code-csharp[S_UEBasicHttpBinding#19](~/samples/snippets/csharp/VS_Snippets_CFX/s_uebasichttpbinding/cs/client.cs#19)]  
  
 <span data-ttu-id="54ec7-208">El valor de esta propiedad también puede establecerse en el archivo de configuración.</span><span class="sxs-lookup"><span data-stu-id="54ec7-208">The value of this property can also be set in the configuration file.</span></span>  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProxyAddress">
      <MemberSignature Language="C#" Value="public Uri ProxyAddress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri ProxyAddress" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.BasicHttpBinding.ProxyAddress" />
      <MemberSignature Language="VB.NET" Value="Public Property ProxyAddress As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ ProxyAddress { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ProxyAddress : Uri with get, set" Usage="System.ServiceModel.BasicHttpBinding.ProxyAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Http</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.UriTypeConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="54ec7-209">Obtiene o establece la dirección URI del proxy HTTP.</span><span class="sxs-lookup"><span data-stu-id="54ec7-209">Gets or sets the URI address of the HTTP proxy.</span></span></summary>
        <value><span data-ttu-id="54ec7-210"><see cref="T:System.Uri" /> que se usa como la dirección del proxy HTTP.</span><span class="sxs-lookup"><span data-stu-id="54ec7-210">A <see cref="T:System.Uri" /> that serves as the address of the HTTP proxy.</span></span> <span data-ttu-id="54ec7-211">El valor predeterminado es null.</span><span class="sxs-lookup"><span data-stu-id="54ec7-211">The default value is null.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="54ec7-212">Si el <xref:System.ServiceModel.BasicHttpBinding.UseDefaultWebProxy> está establecido en `true`, se usa la dirección predeterminada y se omite el valor del conjunto de ProxyAddress.</span><span class="sxs-lookup"><span data-stu-id="54ec7-212">If the <xref:System.ServiceModel.BasicHttpBinding.UseDefaultWebProxy> is set to `true`, the default address is used and the value of the ProxyAddress set is ignored.</span></span>

## Examples

<span data-ttu-id="54ec7-213">El ejemplo siguiente establece ProxyAddress en configuración de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="54ec7-213">The following example sets ProxyAddress to application settings.</span></span>

```csharp
// Get base address from app settings in configuration
Uri baseAddress = new Uri(ConfigurationManager.AppSettings["baseAddress"]);

BasicHttpBinding binding = new BasicHttpBinding();

binding.ProxyAddress = baseAddress;
```

<span data-ttu-id="54ec7-214">El valor de esta propiedad también puede establecerse en el archivo de configuración.</span><span class="sxs-lookup"><span data-stu-id="54ec7-214">The value of this property can also be set in the configuration file.</span></span>

```xml
<configuration>
  <system.serviceModel>

    <bindings>
      <basicHttpBinding>
        <binding name="Binding1"
                 proxyAddress = "http://myProxy">
          <security mode="None" />
        </binding>
      </basicHttpBinding>
    </bindings>

  </system.serviceModel>

</configuration>
```

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReaderQuotas">
      <MemberSignature Language="C#" Value="public System.Xml.XmlDictionaryReaderQuotas ReaderQuotas { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlDictionaryReaderQuotas ReaderQuotas" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.BasicHttpBinding.ReaderQuotas" />
      <MemberSignature Language="VB.NET" Value="Public Property ReaderQuotas As XmlDictionaryReaderQuotas" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlDictionaryReaderQuotas ^ ReaderQuotas { System::Xml::XmlDictionaryReaderQuotas ^ get(); void set(System::Xml::XmlDictionaryReaderQuotas ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ReaderQuotas : System.Xml.XmlDictionaryReaderQuotas with get, set" Usage="System.ServiceModel.BasicHttpBinding.ReaderQuotas" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Http</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReaderQuotas</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="54ec7-215">Obtiene o establece restricciones en la complejidad de mensajes SOAP que pueden ser procesados por puntos de conexión configurados con este enlace.</span><span class="sxs-lookup"><span data-stu-id="54ec7-215">Gets or sets constraints on the complexity of SOAP messages that can be processed by endpoints configured with this binding.</span></span></summary>
        <value><span data-ttu-id="54ec7-216"><see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> que especifica las restricciones de complejidad.</span><span class="sxs-lookup"><span data-stu-id="54ec7-216">The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> that specifies the complexity constraints.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="54ec7-217">Las restricciones de complejidad protegen contra ataques por denegación de servicio (DOS) que intentan usar la complejidad del mensaje para atar los recursos de procesamiento del extremo.</span><span class="sxs-lookup"><span data-stu-id="54ec7-217">The complexity constraints provide protection from denial of service (DOS) attacks that attempt to use message complexity to tie up endpoint processing resources.</span></span> <span data-ttu-id="54ec7-218">Otras restricciones de complejidad incluyen elementos como una profundidad máxima de elemento y una longitud máxima para el contenido de la cadena dentro del mensaje.</span><span class="sxs-lookup"><span data-stu-id="54ec7-218">Other complexity constraints include items such as a maximum element depth and a maximum length for string content within the message.</span></span>

## Examples

<span data-ttu-id="54ec7-219">El ejemplo siguiente establece ReaderQuotas en configuración de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="54ec7-219">The following example sets ReaderQuotas to application settings.</span></span>

```csharp
BasicHttpBinding binding = new BasicHttpBinding();
XmlDictionaryReaderQuotas readerQuotas = new XmlDictionaryReaderQuotas();
readerQuotas.MaxArrayLength = 25 * 1024;
        
binding.ReaderQuotas = readerQuotas;
```

<span data-ttu-id="54ec7-220">El valor de esta propiedad también puede establecerse en el archivo de configuración.</span><span class="sxs-lookup"><span data-stu-id="54ec7-220">The value of this property can also be set in the configuration file.</span></span>

```xml
<configuration>
  <system.serviceModel>

    <bindings>
      <basicHttpBinding>
        <binding name="Binding1">
          <readerQuotas maxBytesPerRead ="1000" 
                        maxDepth="100"/>

          <security mode="None" />
        </binding>
      </basicHttpBinding>
    </bindings>

  </system.serviceModel>

</configuration>
```

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scheme">
      <MemberSignature Language="C#" Value="public override string Scheme { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Scheme" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.BasicHttpBinding.Scheme" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Scheme As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Scheme { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Scheme : string" Usage="System.ServiceModel.BasicHttpBinding.Scheme" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Http</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="54ec7-221">Obtiene el esquema de transporte de URI para los canales y agentes de escucha que se configuran con este enlace.</span><span class="sxs-lookup"><span data-stu-id="54ec7-221">Gets the URI transport scheme for the channels and listeners that are configured with this binding.</span></span></summary>
        <value><span data-ttu-id="54ec7-222">"https" si el modo de seguridad en el elemento de enlace del transporte está establecido como <see cref="F:System.ServiceModel.BasicHttpSecurityMode.Transport" /> o <see cref="F:System.ServiceModel.BasicHttpSecurityMode.TransportWithMessageCredential" />; de lo contrario, "http".</span><span class="sxs-lookup"><span data-stu-id="54ec7-222">"https" if the security mode in the transport binding element is set to <see cref="F:System.ServiceModel.BasicHttpSecurityMode.Transport" /> or <see cref="F:System.ServiceModel.BasicHttpSecurityMode.TransportWithMessageCredential" />; "http" otherwise.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples

<span data-ttu-id="54ec7-223">En el ejemplo siguiente se obtiene el Esquema actual.</span><span class="sxs-lookup"><span data-stu-id="54ec7-223">The following example gets the current Scheme.</span></span>

```csharp
BasicHttpBinding binding = new BasicHttpBinding();
string thisScheme = binding.Scheme;
```

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Security">
      <MemberSignature Language="C#" Value="public System.ServiceModel.BasicHttpSecurity Security { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.BasicHttpSecurity Security" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.BasicHttpBinding.Security" />
      <MemberSignature Language="VB.NET" Value="Public Property Security As BasicHttpSecurity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::BasicHttpSecurity ^ Security { System::ServiceModel::BasicHttpSecurity ^ get(); void set(System::ServiceModel::BasicHttpSecurity ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Security : System.ServiceModel.BasicHttpSecurity with get, set" Usage="System.ServiceModel.BasicHttpBinding.Security" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Http</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.BasicHttpSecurity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="54ec7-224">Obtiene el tipo de seguridad utilizado con este enlace.</span><span class="sxs-lookup"><span data-stu-id="54ec7-224">Gets the type of security used with this binding.</span></span></summary>
        <value><span data-ttu-id="54ec7-225"><see cref="T:System.ServiceModel.BasicHttpSecurity" /> que se usa con este enlace.</span><span class="sxs-lookup"><span data-stu-id="54ec7-225">The <see cref="T:System.ServiceModel.BasicHttpSecurity" /> that is used with this binding.</span></span> <span data-ttu-id="54ec7-226">El valor predeterminado es <see cref="F:System.ServiceModel.BasicHttpSecurityMode.None" />.</span><span class="sxs-lookup"><span data-stu-id="54ec7-226">The default value is <see cref="F:System.ServiceModel.BasicHttpSecurityMode.None" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54ec7-227">De forma predeterminada, no se protege el mensaje SOAP y no se autentica el cliente.</span><span class="sxs-lookup"><span data-stu-id="54ec7-227">By default, the SOAP message is not secured and the client is not authenticated.</span></span> <span data-ttu-id="54ec7-228">Para utilizar un tipo de seguridad no predeterminado, utilice el constructor <xref:System.ServiceModel.BasicHttpBinding.%23ctor%28System.ServiceModel.BasicHttpSecurityMode%29>.</span><span class="sxs-lookup"><span data-stu-id="54ec7-228">To use a non-default type of security, use the <xref:System.ServiceModel.BasicHttpBinding.%23ctor%28System.ServiceModel.BasicHttpSecurityMode%29> constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="54ec7-229">En el siguiente ejemplo se obtiene la propiedad `Security`.</span><span class="sxs-lookup"><span data-stu-id="54ec7-229">The following example gets the `Security` property.</span></span>  
  
 [!code-csharp[S_UEBasicHttpBinding#23](~/samples/snippets/csharp/VS_Snippets_CFX/s_uebasichttpbinding/cs/client.cs#23)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeEnableHttpCookieContainer">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeEnableHttpCookieContainer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeEnableHttpCookieContainer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.BasicHttpBinding.ShouldSerializeEnableHttpCookieContainer" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeEnableHttpCookieContainer () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeEnableHttpCookieContainer();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeEnableHttpCookieContainer : unit -&gt; bool" Usage="basicHttpBinding.ShouldSerializeEnableHttpCookieContainer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Http</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="54ec7-230">Indica si el contenedor de cookies HTTP debe habilitar la serialización.</span><span class="sxs-lookup"><span data-stu-id="54ec7-230">Indicates whether the http cookie container should enable the serialization.</span></span></summary>
        <returns><span data-ttu-id="54ec7-231"><see langword="true" /> si el contenedor de cookies HTTP debe habilitar la serialización; si no, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="54ec7-231"><see langword="true" /> if the http cookie container should enable the serialization; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeReaderQuotas">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeReaderQuotas ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeReaderQuotas() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.BasicHttpBinding.ShouldSerializeReaderQuotas" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeReaderQuotas () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeReaderQuotas();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeReaderQuotas : unit -&gt; bool" Usage="basicHttpBinding.ShouldSerializeReaderQuotas " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Http</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="54ec7-232">Devuelve si se deben serializar los valores de restricción situados en la complejidad de la estructura de mensaje SOAP.</span><span class="sxs-lookup"><span data-stu-id="54ec7-232">Returns whether the constraint values placed on the complexity of SOAP message structure should be serialized.</span></span></summary>
        <returns><span data-ttu-id="54ec7-233"><see langword="true" /> si las cuotas del lector se deben serializar; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="54ec7-233"><see langword="true" /> if reader quotas should be serialized; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeSecurity">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeSecurity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeSecurity() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.BasicHttpBinding.ShouldSerializeSecurity" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeSecurity () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeSecurity();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeSecurity : unit -&gt; bool" Usage="basicHttpBinding.ShouldSerializeSecurity " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Http</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="54ec7-234">Devuelve si la configuración de seguridad se debe serializar en función de si la serialización ya se produce; por ejemplo, a nivel de mensaje o de transporte.</span><span class="sxs-lookup"><span data-stu-id="54ec7-234">Returns whether security settings should be serialized based upon whether serialization already occurs, for example at the message or transport level.</span></span></summary>
        <returns><span data-ttu-id="54ec7-235"><see langword="true" /> si se debe serializar la configuración de seguridad; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="54ec7-235"><see langword="true" /> if security should be serialized; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeTextEncoding">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeTextEncoding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeTextEncoding() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.BasicHttpBinding.ShouldSerializeTextEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeTextEncoding () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeTextEncoding();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeTextEncoding : unit -&gt; bool" Usage="basicHttpBinding.ShouldSerializeTextEncoding " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Http</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="54ec7-236">Devuelve si se debe serializar la configuración para la codificación de texto.</span><span class="sxs-lookup"><span data-stu-id="54ec7-236">Returns whether settings for text encoding should be serialized.</span></span></summary>
        <returns><span data-ttu-id="54ec7-237"><see langword="true" /> si se debe serializar la codificación de texto; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="54ec7-237"><see langword="true" /> if text encoding should be serialized; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously">
      <MemberSignature Language="C#" Value="bool System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.BasicHttpBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property ReceiveSynchronously As Boolean Implements IBindingRuntimePreferences.ReceiveSynchronously" />
      <MemberSignature Language="C++ CLI" Value="property bool System::ServiceModel::Channels::IBindingRuntimePreferences::ReceiveSynchronously { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Http</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="54ec7-238">Obtiene un valor que indica si las solicitudes de entrada se administran de forma sincrónica o asincrónica.</span><span class="sxs-lookup"><span data-stu-id="54ec7-238">Gets a value that indicates whether incoming requests are handled synchronously or asynchronously.</span></span></summary>
        <value><span data-ttu-id="54ec7-239">Siempre es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="54ec7-239">Always <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples

<span data-ttu-id="54ec7-240">Este ejemplo obtiene el valor ReceiveSynchronously.</span><span class="sxs-lookup"><span data-stu-id="54ec7-240">This example gets the ReceiveSynchronously value.</span></span>

```csharp
BasicHttpBinding binding = new BasicHttpBinding();
IBindingRuntimePreferences s = (binding as IBindingRuntimePreferences);
bool receiveSynchronously = s.ReceiveSynchronously;
```

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextEncoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding TextEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding TextEncoding" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.BasicHttpBinding.TextEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Property TextEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ TextEncoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TextEncoding : System.Text.Encoding with get, set" Usage="System.ServiceModel.BasicHttpBinding.TextEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Http</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ServiceModel.Configuration.EncodingConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="54ec7-241">Obtiene o establece la codificación de caracteres que se usa para el texto del mensaje.</span><span class="sxs-lookup"><span data-stu-id="54ec7-241">Gets or sets the character encoding that is used for the message text.</span></span></summary>
        <value><span data-ttu-id="54ec7-242"><see cref="T:System.Text.Encoding" /> que indica la codificación de caracteres que se usa.</span><span class="sxs-lookup"><span data-stu-id="54ec7-242">The <see cref="T:System.Text.Encoding" /> that indicates the character encoding that is used.</span></span> <span data-ttu-id="54ec7-243">De manera predeterminada, es <see cref="T:System.Text.UTF8Encoding" />.</span><span class="sxs-lookup"><span data-stu-id="54ec7-243">The default is <see cref="T:System.Text.UTF8Encoding" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples

<span data-ttu-id="54ec7-244">El ejemplo siguiente establece TextEncoding en <xref:System.Text.Encoding.Unicode?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="54ec7-244">The following example sets TextEncoding to <xref:System.Text.Encoding.Unicode?displayProperty=nameWithType>.</span></span>

```csharp
BasicHttpBinding binding = new BasicHttpBinding();
binding.TextEncoding = System.Text.Encoding.Unicode;
```

<span data-ttu-id="54ec7-245">El valor de esta propiedad también puede establecerse en el archivo de configuración.</span><span class="sxs-lookup"><span data-stu-id="54ec7-245">The value of this property can also be set in the configuration file.</span></span>

```xml
<configuration>
  <system.serviceModel>

    <bindings>
      <basicHttpBinding>
        <binding name="Binding1"
          textEncoding = "UnicodeFffeTextEncoding">

          <security mode="None" />
        </binding>
      </basicHttpBinding>
    </bindings>
  </system.serviceModel>

</configuration>
```

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TransferMode">
      <MemberSignature Language="C#" Value="public System.ServiceModel.TransferMode TransferMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.TransferMode TransferMode" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.BasicHttpBinding.TransferMode" />
      <MemberSignature Language="VB.NET" Value="Public Property TransferMode As TransferMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::TransferMode TransferMode { System::ServiceModel::TransferMode get(); void set(System::ServiceModel::TransferMode value); };" />
      <MemberSignature Language="F#" Value="member this.TransferMode : System.ServiceModel.TransferMode with get, set" Usage="System.ServiceModel.BasicHttpBinding.TransferMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Http</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.TransferMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="54ec7-246">Obtiene o establece un valor que indica si los mensajes se envían almacenados en búfer o transmitidos en secuencias.</span><span class="sxs-lookup"><span data-stu-id="54ec7-246">Gets or sets a value that indicates whether messages are sent buffered or streamed.</span></span></summary>
        <value><span data-ttu-id="54ec7-247"><see cref="T:System.ServiceModel.TransferMode" /> que indica si los mensajes se envían almacenados en búfer o transmitidos en secuencias.</span><span class="sxs-lookup"><span data-stu-id="54ec7-247">The <see cref="T:System.ServiceModel.TransferMode" /> that indicates whether messages are sent buffered or streamed.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples

<span data-ttu-id="54ec7-248">El ejemplo siguiente establece TransferMode en <xref:System.ServiceModel.TransferMode.Streamed>.</span><span class="sxs-lookup"><span data-stu-id="54ec7-248">The following example sets TransferMode to <xref:System.ServiceModel.TransferMode.Streamed>.</span></span>

```csharp
BasicHttpBinding binding = new BasicHttpBinding();
binding.TransferMode = TransferMode.Streamed;
```

<span data-ttu-id="54ec7-249">El valor de esta propiedad también puede establecerse en el archivo de configuración.</span><span class="sxs-lookup"><span data-stu-id="54ec7-249">The value of this property can also be set in the configuration file.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseDefaultWebProxy">
      <MemberSignature Language="C#" Value="public bool UseDefaultWebProxy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseDefaultWebProxy" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.BasicHttpBinding.UseDefaultWebProxy" />
      <MemberSignature Language="VB.NET" Value="Public Property UseDefaultWebProxy As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseDefaultWebProxy { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseDefaultWebProxy : bool with get, set" Usage="System.ServiceModel.BasicHttpBinding.UseDefaultWebProxy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Http</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="54ec7-250">Obtiene o establece un valor que indica si se debería usar el proxy HTTP del sistema configurado automáticamente, si está disponible.</span><span class="sxs-lookup"><span data-stu-id="54ec7-250">Gets or sets a value that indicates whether the auto-configured HTTP proxy of the system should be used, if available.</span></span></summary>
        <value><span data-ttu-id="54ec7-251"><see langword="true" /> si se debería usar el proxy HTTP configurado automáticamente del sistema, si está disponible; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="54ec7-251"><see langword="true" /> if the auto-configured HTTP proxy of the system should be used, if available; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="54ec7-252">El valor predeterminado es <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="54ec7-252">The default value is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  

## Remarks

<span data-ttu-id="54ec7-253">Es un error que sea `true` y <xref:System.ServiceModel.BasicHttpBinding.ProxyAddress> sea distinto de null.</span><span class="sxs-lookup"><span data-stu-id="54ec7-253">It is an error for this to be `true` and <xref:System.ServiceModel.BasicHttpBinding.ProxyAddress> to be non-null.</span></span>

## Examples

<span data-ttu-id="54ec7-254">Este ejemplo establece el valor de UseDefaultWebProxy a `false`.</span><span class="sxs-lookup"><span data-stu-id="54ec7-254">This example sets the value of UseDefaultWebProxy to `false`.</span></span>

```csharp
BasicHttpBinding binding = new BasicHttpBinding();
binding.UseDefaultWebProxy = false;
```

<span data-ttu-id="54ec7-255">El valor de esta propiedad también puede establecerse en el archivo de configuración.</span><span class="sxs-lookup"><span data-stu-id="54ec7-255">The value of this property can also be set in the configuration file.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>

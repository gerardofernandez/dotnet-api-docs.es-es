<Type Name="SecurityTokenSerializer" FullName="System.IdentityModel.Selectors.SecurityTokenSerializer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="87012151e4b9229f29e97791bbcfc57597cb37a3" /><Meta Name="ms.sourcegitcommit" Value="f1d16425528e237257ca3b58eb49217a514849ea" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="04/24/2019" /><Meta Name="ms.locfileid" Value="63984986" /></Metadata><TypeSignature Language="C#" Value="public abstract class SecurityTokenSerializer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SecurityTokenSerializer extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Selectors.SecurityTokenSerializer" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SecurityTokenSerializer" />
  <TypeSignature Language="C++ CLI" Value="public ref class SecurityTokenSerializer abstract" />
  <TypeSignature Language="F#" Value="type SecurityTokenSerializer = class" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="6362e-101">Representa una clase que puede leer y escribir identificadores clave, cláusulas de identificador clave y tokens de seguridad.</span><span class="sxs-lookup"><span data-stu-id="6362e-101">Represents a class that can read and write key identifiers, key identifier clauses, and security tokens.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6362e-102">Utiliza la clase <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> para leer y escribir las clases <xref:System.IdentityModel.Tokens.SecurityKeyIdentifier>, <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause>, y <xref:System.IdentityModel.Tokens.SecurityToken> como XML.</span><span class="sxs-lookup"><span data-stu-id="6362e-102">Use the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> class to read and write <xref:System.IdentityModel.Tokens.SecurityKeyIdentifier>, <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause>, and <xref:System.IdentityModel.Tokens.SecurityToken> classes as XML.</span></span> <span data-ttu-id="6362e-103">La clase <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> tiene métodos para determinar si esta clase puede leer y escribir estas entidades y para leerlos y escribirlos realmente.</span><span class="sxs-lookup"><span data-stu-id="6362e-103">The <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> class has methods to determine whether this class can read and write these entities and to actually read and write them.</span></span> <span data-ttu-id="6362e-104">Para los tokens de seguridad, estos métodos son <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadToken%2A>, <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteToken%2A>, <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadToken%2A>y <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteToken%2A>.</span><span class="sxs-lookup"><span data-stu-id="6362e-104">For security tokens, these methods are <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadToken%2A>, <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteToken%2A>, <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadToken%2A>, and <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteToken%2A>.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SecurityTokenSerializer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenSerializer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SecurityTokenSerializer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6362e-105">Inicializa una nueva instancia de la clase <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" />.</span><span class="sxs-lookup"><span data-stu-id="6362e-105">Initializes a new instance of the <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanReadKeyIdentifier">
      <MemberSignature Language="C#" Value="public bool CanReadKeyIdentifier (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanReadKeyIdentifier(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifier(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanReadKeyIdentifier (reader As XmlReader) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanReadKeyIdentifier(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.CanReadKeyIdentifier : System.Xml.XmlReader -&gt; bool" Usage="securityTokenSerializer.CanReadKeyIdentifier reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="6362e-106"><see cref="T:System.Xml.XmlReader" /> para leer el identificador clave.</span><span class="sxs-lookup"><span data-stu-id="6362e-106">An <see cref="T:System.Xml.XmlReader" /> to read the key identifier.</span></span></param>
        <summary><span data-ttu-id="6362e-107">Determina si este serializador puede leer el elemento <see langword="&lt;KeyIdentifier&gt;" /> al que hace referencia el lector especificado XML.</span><span class="sxs-lookup"><span data-stu-id="6362e-107">Determines whether this serializer can read the <see langword="&lt;KeyIdentifier&gt;" /> element referred to by the specified XML reader.</span></span></summary>
        <returns><span data-ttu-id="6362e-108"><see langword="true" /> cuando se puede leer el elemento XML <see langword="&lt;KeyIdentifier&gt;" /> especificado; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6362e-108"><see langword="true" /> when the specified <see langword="&lt;KeyIdentifier&gt;" /> XML element can be read; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6362e-109">Las clases que se derivan de la clase <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> deben invalidar el método <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierCore%28System.Xml.XmlReader%29>.</span><span class="sxs-lookup"><span data-stu-id="6362e-109">Classes that derive from the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> class must override the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierCore%28System.Xml.XmlReader%29> method.</span></span> <span data-ttu-id="6362e-110">El método <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifier%28System.Xml.XmlReader%29> llama al método <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierCore%2A>.</span><span class="sxs-lookup"><span data-stu-id="6362e-110">The <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifier%28System.Xml.XmlReader%29> method calls the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierCore%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6362e-111"><paramref name="reader" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6362e-111"><paramref name="reader" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CanReadKeyIdentifierClause">
      <MemberSignature Language="C#" Value="public bool CanReadKeyIdentifierClause (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanReadKeyIdentifierClause(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierClause(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanReadKeyIdentifierClause (reader As XmlReader) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanReadKeyIdentifierClause(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.CanReadKeyIdentifierClause : System.Xml.XmlReader -&gt; bool" Usage="securityTokenSerializer.CanReadKeyIdentifierClause reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="6362e-112"><see cref="T:System.Xml.XmlReader" /> para leer la cláusula de identificador clave.</span><span class="sxs-lookup"><span data-stu-id="6362e-112">An <see cref="T:System.Xml.XmlReader" /> to read the key identifier clause.</span></span></param>
        <summary><span data-ttu-id="6362e-113">Determina si el serializador puede leer una cláusula en un elemento <see langword="&lt;KeyIdentifier&gt;" /> al que el lector XML especificado hace referencia.</span><span class="sxs-lookup"><span data-stu-id="6362e-113">Determines whether this serializer can read a clause in a <see langword="&lt;KeyIdentifier&gt;" /> element referred to by the specified XML reader.</span></span></summary>
        <returns><span data-ttu-id="6362e-114"><see langword="true" /> cuando se puede leer la cláusula de identificador clave especificada; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6362e-114"><see langword="true" /> when the specified key identifier clause can be read; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6362e-115">Las clases que se derivan de la clase <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> deben invalidar el método <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierClauseCore%28System.Xml.XmlReader%29>.</span><span class="sxs-lookup"><span data-stu-id="6362e-115">Classes that derive from the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> class must override the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierClauseCore%28System.Xml.XmlReader%29> method.</span></span> <span data-ttu-id="6362e-116">El método <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierClause%28System.Xml.XmlReader%29> llama al método <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierClauseCore%2A>.</span><span class="sxs-lookup"><span data-stu-id="6362e-116">The <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierClause%28System.Xml.XmlReader%29> method calls the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierClauseCore%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6362e-117"><paramref name="reader" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6362e-117"><paramref name="reader" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CanReadKeyIdentifierClauseCore">
      <MemberSignature Language="C#" Value="protected abstract bool CanReadKeyIdentifierClauseCore (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool CanReadKeyIdentifierClauseCore(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierClauseCore(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function CanReadKeyIdentifierClauseCore (reader As XmlReader) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract bool CanReadKeyIdentifierClauseCore(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="abstract member CanReadKeyIdentifierClauseCore : System.Xml.XmlReader -&gt; bool" Usage="securityTokenSerializer.CanReadKeyIdentifierClauseCore reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="6362e-118"><see cref="T:System.Xml.XmlReader" /> para leer la cláusula de identificador clave.</span><span class="sxs-lookup"><span data-stu-id="6362e-118">An <see cref="T:System.Xml.XmlReader" /> to read the key identifier clause.</span></span></param>
        <summary><span data-ttu-id="6362e-119">Determina si este serializador puede leer el elemento <see langword="&lt;KeyIdentifier&gt;" /> al que hace referencia el lector especificado XML.</span><span class="sxs-lookup"><span data-stu-id="6362e-119">Determines whether this serializer can read the <see langword="&lt;KeyIdentifier&gt;" /> element referred to by the specified XML reader.</span></span> <span data-ttu-id="6362e-120">Se llama por la clase base.</span><span class="sxs-lookup"><span data-stu-id="6362e-120">Called by the base class.</span></span></summary>
        <returns><span data-ttu-id="6362e-121"><see langword="true" /> cuando el elemento especificado <see langword="&lt;KeyIdentifier&gt;" /> se puede leer; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6362e-121"><see langword="true" /> when the specified <see langword="&lt;KeyIdentifier&gt;" /> element can be read; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6362e-122">Las clases que se derivan de la clase <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> deben invalidar el método <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierClauseCore%28System.Xml.XmlReader%29>.</span><span class="sxs-lookup"><span data-stu-id="6362e-122">Classes that derive from the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> class must override the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierClauseCore%28System.Xml.XmlReader%29> method.</span></span> <span data-ttu-id="6362e-123">El método <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierClause%28System.Xml.XmlReader%29> llama al método <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierClauseCore%2A>.</span><span class="sxs-lookup"><span data-stu-id="6362e-123">The <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierClause%28System.Xml.XmlReader%29> method calls the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierClauseCore%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6362e-124"><paramref name="reader" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6362e-124"><paramref name="reader" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CanReadKeyIdentifierCore">
      <MemberSignature Language="C#" Value="protected abstract bool CanReadKeyIdentifierCore (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool CanReadKeyIdentifierCore(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierCore(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function CanReadKeyIdentifierCore (reader As XmlReader) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract bool CanReadKeyIdentifierCore(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="abstract member CanReadKeyIdentifierCore : System.Xml.XmlReader -&gt; bool" Usage="securityTokenSerializer.CanReadKeyIdentifierCore reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="6362e-125"><see cref="T:System.Xml.XmlReader" /> para leer el identificador clave.</span><span class="sxs-lookup"><span data-stu-id="6362e-125">An <see cref="T:System.Xml.XmlReader" /> to read the key identifier.</span></span></param>
        <summary><span data-ttu-id="6362e-126">Determina si este serializador puede leer el elemento <see langword="&lt;KeyIdentifier&gt;" /> al que hace referencia el lector especificado XML.</span><span class="sxs-lookup"><span data-stu-id="6362e-126">Determines whether this serializer can read the <see langword="&lt;KeyIdentifier&gt;" /> element referred to by the specified XML reader.</span></span> <span data-ttu-id="6362e-127">Se llama por la clase base.</span><span class="sxs-lookup"><span data-stu-id="6362e-127">Called by the base class.</span></span></summary>
        <returns><span data-ttu-id="6362e-128"><see langword="true" /> cuando se puede leer la cláusula de identificador clave especificada; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6362e-128"><see langword="true" /> when the specified key identifier clause can be read; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6362e-129">Las clases que se derivan de la clase <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> deben invalidar el método <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierCore%28System.Xml.XmlReader%29>.</span><span class="sxs-lookup"><span data-stu-id="6362e-129">Classes that derive from the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> class must override the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierCore%28System.Xml.XmlReader%29> method.</span></span> <span data-ttu-id="6362e-130">El método <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifier%28System.Xml.XmlReader%29> llama al método <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierCore%2A>.</span><span class="sxs-lookup"><span data-stu-id="6362e-130">The <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifier%28System.Xml.XmlReader%29> method calls the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadKeyIdentifierCore%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6362e-131"><paramref name="reader" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6362e-131"><paramref name="reader" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CanReadToken">
      <MemberSignature Language="C#" Value="public bool CanReadToken (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanReadToken(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadToken(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanReadToken (reader As XmlReader) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanReadToken(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.CanReadToken : System.Xml.XmlReader -&gt; bool" Usage="securityTokenSerializer.CanReadToken reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="6362e-132"><see cref="T:System.Xml.XmlReader" /> para leer el token de seguridad.</span><span class="sxs-lookup"><span data-stu-id="6362e-132">An <see cref="T:System.Xml.XmlReader" /> to read the security token.</span></span></param>
        <summary><span data-ttu-id="6362e-133">Determina si este serializador puede leer el token de seguridad que señala el lector XML especificado.</span><span class="sxs-lookup"><span data-stu-id="6362e-133">Determines whether this serializer can read the security token pointed at by the specified XML reader.</span></span></summary>
        <returns><span data-ttu-id="6362e-134"><see langword="true" /> cuando se puede leer el token de seguridad; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6362e-134"><see langword="true" /> when the security token can be read; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6362e-135">Las clases que se derivan de la clase <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> deben invalidar el método <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadTokenCore%28System.Xml.XmlReader%29>.</span><span class="sxs-lookup"><span data-stu-id="6362e-135">Classes that derive from the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> class must override the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadTokenCore%28System.Xml.XmlReader%29> method.</span></span> <span data-ttu-id="6362e-136">El método <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadToken%28System.Xml.XmlReader%29> llama al método <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadTokenCore%2A>.</span><span class="sxs-lookup"><span data-stu-id="6362e-136">The <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadToken%28System.Xml.XmlReader%29> method calls the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadTokenCore%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6362e-137"><paramref name="reader" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6362e-137"><paramref name="reader" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CanReadTokenCore">
      <MemberSignature Language="C#" Value="protected abstract bool CanReadTokenCore (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool CanReadTokenCore(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadTokenCore(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function CanReadTokenCore (reader As XmlReader) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract bool CanReadTokenCore(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="abstract member CanReadTokenCore : System.Xml.XmlReader -&gt; bool" Usage="securityTokenSerializer.CanReadTokenCore reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="6362e-138"><see cref="T:System.Xml.XmlReader" /> para leer el token de seguridad.</span><span class="sxs-lookup"><span data-stu-id="6362e-138">An <see cref="T:System.Xml.XmlReader" /> to read the security token.</span></span></param>
        <summary><span data-ttu-id="6362e-139">Determina si este serializador puede leer el token de seguridad que señala el lector XML especificado.</span><span class="sxs-lookup"><span data-stu-id="6362e-139">Determines whether this serializer can read the security token pointed at by the specified XML reader.</span></span> <span data-ttu-id="6362e-140">Se llama por la clase base.</span><span class="sxs-lookup"><span data-stu-id="6362e-140">Called by the base class.</span></span></summary>
        <returns><span data-ttu-id="6362e-141"><see langword="true" /> cuando se puede leer el token de seguridad; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6362e-141"><see langword="true" /> when the security token can be read; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6362e-142">Las clases que se derivan de la clase <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> deben invalidar el método <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadTokenCore%28System.Xml.XmlReader%29>.</span><span class="sxs-lookup"><span data-stu-id="6362e-142">Classes that derive from the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> class must override the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadTokenCore%28System.Xml.XmlReader%29> method.</span></span> <span data-ttu-id="6362e-143">El método <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadToken%28System.Xml.XmlReader%29> llama al método <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadTokenCore%2A>.</span><span class="sxs-lookup"><span data-stu-id="6362e-143">The <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadToken%28System.Xml.XmlReader%29> method calls the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanReadTokenCore%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6362e-144"><paramref name="reader" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6362e-144"><paramref name="reader" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CanWriteKeyIdentifier">
      <MemberSignature Language="C#" Value="public bool CanWriteKeyIdentifier (System.IdentityModel.Tokens.SecurityKeyIdentifier keyIdentifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanWriteKeyIdentifier(class System.IdentityModel.Tokens.SecurityKeyIdentifier keyIdentifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifier(System.IdentityModel.Tokens.SecurityKeyIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanWriteKeyIdentifier (keyIdentifier As SecurityKeyIdentifier) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanWriteKeyIdentifier(System::IdentityModel::Tokens::SecurityKeyIdentifier ^ keyIdentifier);" />
      <MemberSignature Language="F#" Value="member this.CanWriteKeyIdentifier : System.IdentityModel.Tokens.SecurityKeyIdentifier -&gt; bool" Usage="securityTokenSerializer.CanWriteKeyIdentifier keyIdentifier" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifier" Type="System.IdentityModel.Tokens.SecurityKeyIdentifier" />
      </Parameters>
      <Docs>
        <param name="keyIdentifier"><span data-ttu-id="6362e-145"><see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> que representa el identificador de la clave para escribir.</span><span class="sxs-lookup"><span data-stu-id="6362e-145">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> that represents the key identifier to write.</span></span></param>
        <summary><span data-ttu-id="6362e-146">Determina si este serializador puede escribir el identificador clave especificado.</span><span class="sxs-lookup"><span data-stu-id="6362e-146">Determines whether this serializer can write the specified key identifier.</span></span></summary>
        <returns><span data-ttu-id="6362e-147"><see langword="true" /> cuando este serializador puede escribir el identificador de la clave especificado; de lo contrario <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6362e-147"><see langword="true" /> when this serializer can write the specified key identifier; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6362e-148">Las clases que se derivan de la clase <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> deben invalidar el método <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierCore%28System.IdentityModel.Tokens.SecurityKeyIdentifier%29>.</span><span class="sxs-lookup"><span data-stu-id="6362e-148">Classes that derive from the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> class must override the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierCore%28System.IdentityModel.Tokens.SecurityKeyIdentifier%29> method.</span></span> <span data-ttu-id="6362e-149">El método <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifier%28System.IdentityModel.Tokens.SecurityKeyIdentifier%29> llama al método <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierCore%28System.IdentityModel.Tokens.SecurityKeyIdentifier%29>.</span><span class="sxs-lookup"><span data-stu-id="6362e-149">The <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifier%28System.IdentityModel.Tokens.SecurityKeyIdentifier%29> method calls the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierCore%28System.IdentityModel.Tokens.SecurityKeyIdentifier%29> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6362e-150"><paramref name="keyIdentifier" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6362e-150"><paramref name="keyIdentifier" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CanWriteKeyIdentifierClause">
      <MemberSignature Language="C#" Value="public bool CanWriteKeyIdentifierClause (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanWriteKeyIdentifierClause(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanWriteKeyIdentifierClause (keyIdentifierClause As SecurityKeyIdentifierClause) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanWriteKeyIdentifierClause(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ keyIdentifierClause);" />
      <MemberSignature Language="F#" Value="member this.CanWriteKeyIdentifierClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; bool" Usage="securityTokenSerializer.CanWriteKeyIdentifierClause keyIdentifierClause" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
      </Parameters>
      <Docs>
        <param name="keyIdentifierClause"><span data-ttu-id="6362e-151"><see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> que representa la cláusula del identificador de clave para escribir.</span><span class="sxs-lookup"><span data-stu-id="6362e-151">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> that represents the key identifier clause to write.</span></span></param>
        <summary><span data-ttu-id="6362e-152">Determina si este serializador puede escribir la cláusula del identificador de la clave especificado.</span><span class="sxs-lookup"><span data-stu-id="6362e-152">Determines whether this serializer can write the specified key identifier clause.</span></span></summary>
        <returns><span data-ttu-id="6362e-153"><see langword="true" /> cuando este serializador puede escribir la cláusula de identificador clave especificada; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6362e-153"><see langword="true" /> when this serializer can write the specified key identifier clause; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6362e-154">Las clases que se derivan de la clase <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> deben invalidar el método <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierClauseCore%28System.IdentityModel.Tokens.SecurityKeyIdentifierClause%29>.</span><span class="sxs-lookup"><span data-stu-id="6362e-154">Classes that derive from the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> class must override the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierClauseCore%28System.IdentityModel.Tokens.SecurityKeyIdentifierClause%29> method.</span></span> <span data-ttu-id="6362e-155">El método <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierClause%28System.IdentityModel.Tokens.SecurityKeyIdentifierClause%29> llama al método <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierClauseCore%28System.IdentityModel.Tokens.SecurityKeyIdentifierClause%29>.</span><span class="sxs-lookup"><span data-stu-id="6362e-155">The <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierClause%28System.IdentityModel.Tokens.SecurityKeyIdentifierClause%29> method calls the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierClauseCore%28System.IdentityModel.Tokens.SecurityKeyIdentifierClause%29> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6362e-156"><paramref name="keyIdentifierClause" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6362e-156"><paramref name="keyIdentifierClause" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CanWriteKeyIdentifierClauseCore">
      <MemberSignature Language="C#" Value="protected abstract bool CanWriteKeyIdentifierClauseCore (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool CanWriteKeyIdentifierClauseCore(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierClauseCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function CanWriteKeyIdentifierClauseCore (keyIdentifierClause As SecurityKeyIdentifierClause) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract bool CanWriteKeyIdentifierClauseCore(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ keyIdentifierClause);" />
      <MemberSignature Language="F#" Value="abstract member CanWriteKeyIdentifierClauseCore : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; bool" Usage="securityTokenSerializer.CanWriteKeyIdentifierClauseCore keyIdentifierClause" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
      </Parameters>
      <Docs>
        <param name="keyIdentifierClause"><span data-ttu-id="6362e-157"><see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> que representa la cláusula del identificador de clave para escribir.</span><span class="sxs-lookup"><span data-stu-id="6362e-157">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> that represents the key identifier clause to write.</span></span></param>
        <summary><span data-ttu-id="6362e-158">Determina si este serializador puede escribir la cláusula del identificador de la clave especificado.</span><span class="sxs-lookup"><span data-stu-id="6362e-158">Determines whether this serializer can write the specified key identifier clause.</span></span> <span data-ttu-id="6362e-159">Se llama por la clase base.</span><span class="sxs-lookup"><span data-stu-id="6362e-159">Called by the base class.</span></span></summary>
        <returns><span data-ttu-id="6362e-160"><see langword="true" /> cuando este serializador puede escribir la cláusula de identificador clave especificada; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6362e-160"><see langword="true" /> when this serializer can write the specified key identifier clause; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6362e-161">Las clases que se derivan de la clase <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> deben invalidar el método <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierClauseCore%28System.IdentityModel.Tokens.SecurityKeyIdentifierClause%29>.</span><span class="sxs-lookup"><span data-stu-id="6362e-161">Classes that derive from the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> class must override the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierClauseCore%28System.IdentityModel.Tokens.SecurityKeyIdentifierClause%29> method.</span></span> <span data-ttu-id="6362e-162">El método <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierClause%28System.IdentityModel.Tokens.SecurityKeyIdentifierClause%29> llama al método <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierClauseCore%28System.IdentityModel.Tokens.SecurityKeyIdentifierClause%29>.</span><span class="sxs-lookup"><span data-stu-id="6362e-162">The <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierClause%28System.IdentityModel.Tokens.SecurityKeyIdentifierClause%29> method calls the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierClauseCore%28System.IdentityModel.Tokens.SecurityKeyIdentifierClause%29> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6362e-163"><paramref name="keyIdentifierClause" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6362e-163"><paramref name="keyIdentifierClause" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CanWriteKeyIdentifierCore">
      <MemberSignature Language="C#" Value="protected abstract bool CanWriteKeyIdentifierCore (System.IdentityModel.Tokens.SecurityKeyIdentifier keyIdentifier);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool CanWriteKeyIdentifierCore(class System.IdentityModel.Tokens.SecurityKeyIdentifier keyIdentifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierCore(System.IdentityModel.Tokens.SecurityKeyIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function CanWriteKeyIdentifierCore (keyIdentifier As SecurityKeyIdentifier) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract bool CanWriteKeyIdentifierCore(System::IdentityModel::Tokens::SecurityKeyIdentifier ^ keyIdentifier);" />
      <MemberSignature Language="F#" Value="abstract member CanWriteKeyIdentifierCore : System.IdentityModel.Tokens.SecurityKeyIdentifier -&gt; bool" Usage="securityTokenSerializer.CanWriteKeyIdentifierCore keyIdentifier" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifier" Type="System.IdentityModel.Tokens.SecurityKeyIdentifier" />
      </Parameters>
      <Docs>
        <param name="keyIdentifier"><span data-ttu-id="6362e-164"><see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> que representa el identificador de la clave para escribir.</span><span class="sxs-lookup"><span data-stu-id="6362e-164">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> that represents the key identifier to write.</span></span></param>
        <summary><span data-ttu-id="6362e-165">Determina si este serializador puede escribir el identificador clave especificado.</span><span class="sxs-lookup"><span data-stu-id="6362e-165">Determines whether this serializer can write the specified key identifier.</span></span> <span data-ttu-id="6362e-166">Se llama por la clase base.</span><span class="sxs-lookup"><span data-stu-id="6362e-166">Called by the base class.</span></span></summary>
        <returns><span data-ttu-id="6362e-167"><see langword="true" /> cuando este serializador puede escribir el identificador de la clave especificado; de lo contrario <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6362e-167"><see langword="true" /> when this serializer can write the specified key identifier; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6362e-168">Las clases que se derivan de la clase <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> deben invalidar el método <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierCore%28System.IdentityModel.Tokens.SecurityKeyIdentifier%29>.</span><span class="sxs-lookup"><span data-stu-id="6362e-168">Classes that derive from the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> class must override the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierCore%28System.IdentityModel.Tokens.SecurityKeyIdentifier%29> method.</span></span> <span data-ttu-id="6362e-169">El método <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifier%28System.IdentityModel.Tokens.SecurityKeyIdentifier%29> llama al método <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierCore%28System.IdentityModel.Tokens.SecurityKeyIdentifier%29>.</span><span class="sxs-lookup"><span data-stu-id="6362e-169">The <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifier%28System.IdentityModel.Tokens.SecurityKeyIdentifier%29> method calls the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteKeyIdentifierCore%28System.IdentityModel.Tokens.SecurityKeyIdentifier%29> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6362e-170"><paramref name="keyIdentifier" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6362e-170"><paramref name="keyIdentifier" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CanWriteToken">
      <MemberSignature Language="C#" Value="public bool CanWriteToken (System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanWriteToken(class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteToken(System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanWriteToken (token As SecurityToken) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanWriteToken(System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberSignature Language="F#" Value="member this.CanWriteToken : System.IdentityModel.Tokens.SecurityToken -&gt; bool" Usage="securityTokenSerializer.CanWriteToken token" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="token"><span data-ttu-id="6362e-171"><see cref="T:System.IdentityModel.Tokens.SecurityToken" /> que se va a convertir en XML.</span><span class="sxs-lookup"><span data-stu-id="6362e-171">The <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> to convert to XML.</span></span></param>
        <summary><span data-ttu-id="6362e-172">Determina si este serializador puede escribir el token de seguridad especificado en XML.</span><span class="sxs-lookup"><span data-stu-id="6362e-172">Determines whether this serializer can write the specified security token to XML.</span></span></summary>
        <returns><span data-ttu-id="6362e-173"><see langword="true" /> cuando se puede escribir el token de seguridad; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6362e-173"><see langword="true" /> when the security token can be written; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6362e-174">Las clases que se derivan de la clase <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> deben invalidar el método <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteTokenCore%28System.IdentityModel.Tokens.SecurityToken%29>.</span><span class="sxs-lookup"><span data-stu-id="6362e-174">Classes that derive from the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> class must override the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteTokenCore%28System.IdentityModel.Tokens.SecurityToken%29> method.</span></span> <span data-ttu-id="6362e-175">El método <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteToken%28System.IdentityModel.Tokens.SecurityToken%29> llama al método <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteTokenCore%28System.IdentityModel.Tokens.SecurityToken%29>.</span><span class="sxs-lookup"><span data-stu-id="6362e-175">The <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteToken%28System.IdentityModel.Tokens.SecurityToken%29> method calls the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteTokenCore%28System.IdentityModel.Tokens.SecurityToken%29> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6362e-176"><paramref name="token" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6362e-176"><paramref name="token" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CanWriteTokenCore">
      <MemberSignature Language="C#" Value="protected abstract bool CanWriteTokenCore (System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool CanWriteTokenCore(class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteTokenCore(System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function CanWriteTokenCore (token As SecurityToken) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract bool CanWriteTokenCore(System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberSignature Language="F#" Value="abstract member CanWriteTokenCore : System.IdentityModel.Tokens.SecurityToken -&gt; bool" Usage="securityTokenSerializer.CanWriteTokenCore token" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="token"><span data-ttu-id="6362e-177"><see cref="T:System.IdentityModel.Tokens.SecurityToken" /> que se va a convertir en XML.</span><span class="sxs-lookup"><span data-stu-id="6362e-177">The <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> to convert to XML.</span></span></param>
        <summary><span data-ttu-id="6362e-178">Determina si este serializador puede escribir el token de seguridad especificado en XML.</span><span class="sxs-lookup"><span data-stu-id="6362e-178">Determines whether this serializer can write the specified security token to XML.</span></span> <span data-ttu-id="6362e-179">Se llama por la clase base.</span><span class="sxs-lookup"><span data-stu-id="6362e-179">Called by the base class.</span></span></summary>
        <returns><span data-ttu-id="6362e-180"><see langword="true" /> cuando se puede escribir el token de seguridad; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6362e-180"><see langword="true" /> when the security token can be written; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6362e-181">Las clases que se derivan de la clase <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> deben invalidar el método <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteTokenCore%28System.IdentityModel.Tokens.SecurityToken%29>.</span><span class="sxs-lookup"><span data-stu-id="6362e-181">Classes that derive from the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> class must override the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteTokenCore%28System.IdentityModel.Tokens.SecurityToken%29> method.</span></span> <span data-ttu-id="6362e-182">El método <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteToken%28System.IdentityModel.Tokens.SecurityToken%29> llama al método <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteTokenCore%28System.IdentityModel.Tokens.SecurityToken%29>.</span><span class="sxs-lookup"><span data-stu-id="6362e-182">The <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteToken%28System.IdentityModel.Tokens.SecurityToken%29> method calls the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.CanWriteTokenCore%28System.IdentityModel.Tokens.SecurityToken%29> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6362e-183"><paramref name="token" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6362e-183"><paramref name="token" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadKeyIdentifier">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SecurityKeyIdentifier ReadKeyIdentifier (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IdentityModel.Tokens.SecurityKeyIdentifier ReadKeyIdentifier(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifier(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadKeyIdentifier (reader As XmlReader) As SecurityKeyIdentifier" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IdentityModel::Tokens::SecurityKeyIdentifier ^ ReadKeyIdentifier(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.ReadKeyIdentifier : System.Xml.XmlReader -&gt; System.IdentityModel.Tokens.SecurityKeyIdentifier" Usage="securityTokenSerializer.ReadKeyIdentifier reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityKeyIdentifier</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="6362e-184"><see cref="T:System.Xml.XmlReader" /> para leer el identificador clave.</span><span class="sxs-lookup"><span data-stu-id="6362e-184">An <see cref="T:System.Xml.XmlReader" /> to read the key identifier.</span></span></param>
        <summary><span data-ttu-id="6362e-185">Lee el identificador clave mediante el lector especificado XML.</span><span class="sxs-lookup"><span data-stu-id="6362e-185">Reads the key identifier using specified XML reader.</span></span></summary>
        <returns><span data-ttu-id="6362e-186"><see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> que representa el identificador clave que se lee.</span><span class="sxs-lookup"><span data-stu-id="6362e-186">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> that represents the key identifier that is read.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6362e-187">Las clases que se derivan de la clase <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> deben invalidar el método <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierCore%28System.Xml.XmlReader%29>.</span><span class="sxs-lookup"><span data-stu-id="6362e-187">Classes that derive from the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> class must override the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierCore%28System.Xml.XmlReader%29> method.</span></span> <span data-ttu-id="6362e-188">El método <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifier%28System.Xml.XmlReader%29> llama al método <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierCore%28System.Xml.XmlReader%29>.</span><span class="sxs-lookup"><span data-stu-id="6362e-188">The <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifier%28System.Xml.XmlReader%29> method calls the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierCore%28System.Xml.XmlReader%29> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6362e-189"><paramref name="reader" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6362e-189"><paramref name="reader" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadKeyIdentifierClause">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SecurityKeyIdentifierClause ReadKeyIdentifierClause (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IdentityModel.Tokens.SecurityKeyIdentifierClause ReadKeyIdentifierClause(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierClause(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadKeyIdentifierClause (reader As XmlReader) As SecurityKeyIdentifierClause" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ ReadKeyIdentifierClause(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.ReadKeyIdentifierClause : System.Xml.XmlReader -&gt; System.IdentityModel.Tokens.SecurityKeyIdentifierClause" Usage="securityTokenSerializer.ReadKeyIdentifierClause reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityKeyIdentifierClause</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="6362e-190"><see cref="T:System.Xml.XmlReader" /> para leer el identificador clave.</span><span class="sxs-lookup"><span data-stu-id="6362e-190">An <see cref="T:System.Xml.XmlReader" /> to read the key identifier.</span></span></param>
        <summary><span data-ttu-id="6362e-191">Lee la cláusula de identificador clave mediante el lector especificado XML.</span><span class="sxs-lookup"><span data-stu-id="6362e-191">Reads the key identifier clause using specified XML reader.</span></span></summary>
        <returns><span data-ttu-id="6362e-192"><see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> que representa el identificador clave que se lee.</span><span class="sxs-lookup"><span data-stu-id="6362e-192">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> that represents the key identifier that is read.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6362e-193">Las clases que se derivan de la clase <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> deben invalidar el método <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierClauseCore%28System.Xml.XmlReader%29>.</span><span class="sxs-lookup"><span data-stu-id="6362e-193">Classes that derive from the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> class must override the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierClauseCore%28System.Xml.XmlReader%29> method.</span></span> <span data-ttu-id="6362e-194">El método <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierClause%28System.Xml.XmlReader%29> llama al método <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierClauseCore%28System.Xml.XmlReader%29>.</span><span class="sxs-lookup"><span data-stu-id="6362e-194">The <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierClause%28System.Xml.XmlReader%29> method calls the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierClauseCore%28System.Xml.XmlReader%29> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6362e-195"><paramref name="reader" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6362e-195"><paramref name="reader" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadKeyIdentifierClauseCore">
      <MemberSignature Language="C#" Value="protected abstract System.IdentityModel.Tokens.SecurityKeyIdentifierClause ReadKeyIdentifierClauseCore (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityKeyIdentifierClause ReadKeyIdentifierClauseCore(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierClauseCore(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function ReadKeyIdentifierClauseCore (reader As XmlReader) As SecurityKeyIdentifierClause" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ ReadKeyIdentifierClauseCore(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="abstract member ReadKeyIdentifierClauseCore : System.Xml.XmlReader -&gt; System.IdentityModel.Tokens.SecurityKeyIdentifierClause" Usage="securityTokenSerializer.ReadKeyIdentifierClauseCore reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityKeyIdentifierClause</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="6362e-196"><see cref="T:System.Xml.XmlReader" /> para leer el identificador clave.</span><span class="sxs-lookup"><span data-stu-id="6362e-196">An <see cref="T:System.Xml.XmlReader" /> to read the key identifier.</span></span></param>
        <summary><span data-ttu-id="6362e-197">Lee la cláusula de identificador clave mediante el lector especificado XML.</span><span class="sxs-lookup"><span data-stu-id="6362e-197">Reads the key identifier clause using specified XML reader.</span></span> <span data-ttu-id="6362e-198">Se llama por la clase base.</span><span class="sxs-lookup"><span data-stu-id="6362e-198">Called by the base class.</span></span></summary>
        <returns><span data-ttu-id="6362e-199"><see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> que representa el identificador clave que se lee.</span><span class="sxs-lookup"><span data-stu-id="6362e-199">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> that represents the key identifier that is read.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6362e-200">Las clases que se derivan de la clase <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> deben invalidar el método <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierClauseCore%28System.Xml.XmlReader%29>.</span><span class="sxs-lookup"><span data-stu-id="6362e-200">Classes that derive from the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> class must override the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierClauseCore%28System.Xml.XmlReader%29> method.</span></span> <span data-ttu-id="6362e-201">El método <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierClause%28System.Xml.XmlReader%29> llama al método <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierClauseCore%28System.Xml.XmlReader%29>.</span><span class="sxs-lookup"><span data-stu-id="6362e-201">The <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierClause%28System.Xml.XmlReader%29> method calls the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierClauseCore%28System.Xml.XmlReader%29> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6362e-202"><paramref name="reader" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6362e-202"><paramref name="reader" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadKeyIdentifierCore">
      <MemberSignature Language="C#" Value="protected abstract System.IdentityModel.Tokens.SecurityKeyIdentifier ReadKeyIdentifierCore (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityKeyIdentifier ReadKeyIdentifierCore(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierCore(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function ReadKeyIdentifierCore (reader As XmlReader) As SecurityKeyIdentifier" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::IdentityModel::Tokens::SecurityKeyIdentifier ^ ReadKeyIdentifierCore(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="abstract member ReadKeyIdentifierCore : System.Xml.XmlReader -&gt; System.IdentityModel.Tokens.SecurityKeyIdentifier" Usage="securityTokenSerializer.ReadKeyIdentifierCore reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityKeyIdentifier</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="6362e-203"><see cref="T:System.Xml.XmlReader" /> para leer el identificador clave.</span><span class="sxs-lookup"><span data-stu-id="6362e-203">An <see cref="T:System.Xml.XmlReader" /> to read the key identifier.</span></span></param>
        <summary><span data-ttu-id="6362e-204">Lee la cláusula de identificador clave mediante el lector especificado XML.</span><span class="sxs-lookup"><span data-stu-id="6362e-204">Reads the key identifier clause using specified XML reader.</span></span> <span data-ttu-id="6362e-205">Se llama por la clase base.</span><span class="sxs-lookup"><span data-stu-id="6362e-205">Called by the base class.</span></span></summary>
        <returns><span data-ttu-id="6362e-206"><see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> que representa el identificador clave que se lee.</span><span class="sxs-lookup"><span data-stu-id="6362e-206">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> that represents the key identifier that is read.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6362e-207">Las clases que se derivan de la clase <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> deben invalidar el método <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierCore%28System.Xml.XmlReader%29>.</span><span class="sxs-lookup"><span data-stu-id="6362e-207">Classes that derive from the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> class must override the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierCore%28System.Xml.XmlReader%29> method.</span></span> <span data-ttu-id="6362e-208">El método <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifier%28System.Xml.XmlReader%29> llama al método <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierCore%28System.Xml.XmlReader%29>.</span><span class="sxs-lookup"><span data-stu-id="6362e-208">The <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifier%28System.Xml.XmlReader%29> method calls the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadKeyIdentifierCore%28System.Xml.XmlReader%29> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6362e-209"><paramref name="reader" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6362e-209"><paramref name="reader" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadToken">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SecurityToken ReadToken (System.Xml.XmlReader reader, System.IdentityModel.Selectors.SecurityTokenResolver tokenResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IdentityModel.Tokens.SecurityToken ReadToken(class System.Xml.XmlReader reader, class System.IdentityModel.Selectors.SecurityTokenResolver tokenResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadToken (reader As XmlReader, tokenResolver As SecurityTokenResolver) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IdentityModel::Tokens::SecurityToken ^ ReadToken(System::Xml::XmlReader ^ reader, System::IdentityModel::Selectors::SecurityTokenResolver ^ tokenResolver);" />
      <MemberSignature Language="F#" Value="member this.ReadToken : System.Xml.XmlReader * System.IdentityModel.Selectors.SecurityTokenResolver -&gt; System.IdentityModel.Tokens.SecurityToken" Usage="securityTokenSerializer.ReadToken (reader, tokenResolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
        <Parameter Name="tokenResolver" Type="System.IdentityModel.Selectors.SecurityTokenResolver" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="6362e-210"><see cref="T:System.Xml.XmlReader" /> para leer el token de seguridad.</span><span class="sxs-lookup"><span data-stu-id="6362e-210">An <see cref="T:System.Xml.XmlReader" /> to read the security token.</span></span></param>
        <param name="tokenResolver"><span data-ttu-id="6362e-211"><see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" /> que determina el tipo de token de seguridad.</span><span class="sxs-lookup"><span data-stu-id="6362e-211">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" /> that determines the security token type.</span></span></param>
        <summary><span data-ttu-id="6362e-212">Lee el token de seguridad señalado por el lector especificado XML .</span><span class="sxs-lookup"><span data-stu-id="6362e-212">Reads the security token pointed at by the specified XML reader.</span></span></summary>
        <returns><span data-ttu-id="6362e-213"><see cref="T:System.IdentityModel.Tokens.SecurityToken" /> que representa el token de seguridad que se lee.</span><span class="sxs-lookup"><span data-stu-id="6362e-213">A <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> that represents the security token that is read.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6362e-214">Las clases que se derivan de la clase <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> deben invalidar el método <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadTokenCore%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29>.</span><span class="sxs-lookup"><span data-stu-id="6362e-214">Classes that derive from the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> class must override the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadTokenCore%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29> method.</span></span> <span data-ttu-id="6362e-215">El método <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadToken%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29> llama al método <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadTokenCore%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29>.</span><span class="sxs-lookup"><span data-stu-id="6362e-215">The <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadToken%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29> method calls the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadTokenCore%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6362e-216"><paramref name="reader" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6362e-216"><paramref name="reader" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="6362e-217">O bien</span><span class="sxs-lookup"><span data-stu-id="6362e-217">-or-</span></span> 
 <span data-ttu-id="6362e-218"><paramref name="tokenResolver" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6362e-218"><paramref name="tokenResolver" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadTokenCore">
      <MemberSignature Language="C#" Value="protected abstract System.IdentityModel.Tokens.SecurityToken ReadTokenCore (System.Xml.XmlReader reader, System.IdentityModel.Selectors.SecurityTokenResolver tokenResolver);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityToken ReadTokenCore(class System.Xml.XmlReader reader, class System.IdentityModel.Selectors.SecurityTokenResolver tokenResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadTokenCore(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function ReadTokenCore (reader As XmlReader, tokenResolver As SecurityTokenResolver) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::IdentityModel::Tokens::SecurityToken ^ ReadTokenCore(System::Xml::XmlReader ^ reader, System::IdentityModel::Selectors::SecurityTokenResolver ^ tokenResolver);" />
      <MemberSignature Language="F#" Value="abstract member ReadTokenCore : System.Xml.XmlReader * System.IdentityModel.Selectors.SecurityTokenResolver -&gt; System.IdentityModel.Tokens.SecurityToken" Usage="securityTokenSerializer.ReadTokenCore (reader, tokenResolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
        <Parameter Name="tokenResolver" Type="System.IdentityModel.Selectors.SecurityTokenResolver" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="6362e-219"><see cref="T:System.Xml.XmlReader" /> para leer el token de seguridad.</span><span class="sxs-lookup"><span data-stu-id="6362e-219">An <see cref="T:System.Xml.XmlReader" /> to read the security token.</span></span></param>
        <param name="tokenResolver"><span data-ttu-id="6362e-220"><see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" /> que determina el tipo de token de seguridad.</span><span class="sxs-lookup"><span data-stu-id="6362e-220">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" /> that determines the security token type.</span></span></param>
        <summary><span data-ttu-id="6362e-221">Lee el token de seguridad señalado por el lector especificado XML .</span><span class="sxs-lookup"><span data-stu-id="6362e-221">Reads the security token pointed at by the specified XML reader.</span></span> <span data-ttu-id="6362e-222">Se llama por la clase base.</span><span class="sxs-lookup"><span data-stu-id="6362e-222">Called by the base class.</span></span></summary>
        <returns><span data-ttu-id="6362e-223"><see cref="T:System.IdentityModel.Tokens.SecurityToken" /> que representa el token de seguridad que se lee.</span><span class="sxs-lookup"><span data-stu-id="6362e-223">A <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> that represents the security token that is read.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6362e-224">Las clases que se derivan de la clase <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> deben invalidar el método <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadTokenCore%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29>.</span><span class="sxs-lookup"><span data-stu-id="6362e-224">Classes that derive from the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> class must override the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadTokenCore%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29> method.</span></span> <span data-ttu-id="6362e-225">El método <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadToken%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29> llama al método <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadTokenCore%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29>.</span><span class="sxs-lookup"><span data-stu-id="6362e-225">The <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadToken%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29> method calls the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.ReadTokenCore%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%29> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6362e-226"><paramref name="reader" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6362e-226"><paramref name="reader" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="6362e-227">O bien</span><span class="sxs-lookup"><span data-stu-id="6362e-227">-or-</span></span> 
 <span data-ttu-id="6362e-228"><paramref name="tokenResolver" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6362e-228"><paramref name="tokenResolver" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteKeyIdentifier">
      <MemberSignature Language="C#" Value="public void WriteKeyIdentifier (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SecurityKeyIdentifier keyIdentifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteKeyIdentifier(class System.Xml.XmlWriter writer, class System.IdentityModel.Tokens.SecurityKeyIdentifier keyIdentifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifier(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteKeyIdentifier (writer As XmlWriter, keyIdentifier As SecurityKeyIdentifier)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteKeyIdentifier(System::Xml::XmlWriter ^ writer, System::IdentityModel::Tokens::SecurityKeyIdentifier ^ keyIdentifier);" />
      <MemberSignature Language="F#" Value="member this.WriteKeyIdentifier : System.Xml.XmlWriter * System.IdentityModel.Tokens.SecurityKeyIdentifier -&gt; unit" Usage="securityTokenSerializer.WriteKeyIdentifier (writer, keyIdentifier)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="keyIdentifier" Type="System.IdentityModel.Tokens.SecurityKeyIdentifier" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="6362e-229"><see cref="T:System.Xml.XmlWriter" /> para escribir el identificador clave.</span><span class="sxs-lookup"><span data-stu-id="6362e-229">A <see cref="T:System.Xml.XmlWriter" /> to write the key identifier.</span></span></param>
        <param name="keyIdentifier"><span data-ttu-id="6362e-230"><see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> que representa el identificador de la clave para escribir.</span><span class="sxs-lookup"><span data-stu-id="6362e-230">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> that represents the key identifier to write.</span></span></param>
        <summary><span data-ttu-id="6362e-231">Escribe el identificador clave especificado mediante el sistema de escritura especificado XML.</span><span class="sxs-lookup"><span data-stu-id="6362e-231">Writes the specified key identifier using the specified XML writer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6362e-232">Las clases que se derivan de la clase <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> deben invalidar el método <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierCore%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityKeyIdentifier%29>.</span><span class="sxs-lookup"><span data-stu-id="6362e-232">Classes that derive from the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> class must override the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierCore%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityKeyIdentifier%29> method.</span></span> <span data-ttu-id="6362e-233">El método <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifier%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityKeyIdentifier%29> llama al método <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierCore%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityKeyIdentifier%29>.</span><span class="sxs-lookup"><span data-stu-id="6362e-233">The <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifier%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityKeyIdentifier%29> method calls the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierCore%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityKeyIdentifier%29> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6362e-234"><paramref name="keyIdentifier" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6362e-234"><paramref name="keyIdentifier" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="6362e-235">O bien</span><span class="sxs-lookup"><span data-stu-id="6362e-235">-or-</span></span> 
 <span data-ttu-id="6362e-236"><paramref name="writer" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6362e-236"><paramref name="writer" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteKeyIdentifierClause">
      <MemberSignature Language="C#" Value="public void WriteKeyIdentifierClause (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteKeyIdentifierClause(class System.Xml.XmlWriter writer, class System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteKeyIdentifierClause (writer As XmlWriter, keyIdentifierClause As SecurityKeyIdentifierClause)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteKeyIdentifierClause(System::Xml::XmlWriter ^ writer, System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ keyIdentifierClause);" />
      <MemberSignature Language="F#" Value="member this.WriteKeyIdentifierClause : System.Xml.XmlWriter * System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; unit" Usage="securityTokenSerializer.WriteKeyIdentifierClause (writer, keyIdentifierClause)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="keyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="6362e-237"><see cref="T:System.Xml.XmlWriter" /> para escribir la cláusula de identificador clave.</span><span class="sxs-lookup"><span data-stu-id="6362e-237">A <see cref="T:System.Xml.XmlWriter" /> to write the key identifier clause.</span></span></param>
        <param name="keyIdentifierClause"><span data-ttu-id="6362e-238"><see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> que representa la cláusula del identificador de clave para escribir.</span><span class="sxs-lookup"><span data-stu-id="6362e-238">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> that represents the key identifier clause to write.</span></span></param>
        <summary><span data-ttu-id="6362e-239">Escribe la cláusula de identificador clave especificado mediante el sistema de escritura especificado XML.</span><span class="sxs-lookup"><span data-stu-id="6362e-239">Writes the specified key identifier clause using the specified XML writer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6362e-240">Las clases que se derivan de la clase <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> deben invalidar el método <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierClauseCore%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityKeyIdentifierClause%29>.</span><span class="sxs-lookup"><span data-stu-id="6362e-240">Classes that derive from the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> class must override the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierClauseCore%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityKeyIdentifierClause%29> method.</span></span> <span data-ttu-id="6362e-241">El método <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierClause%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityKeyIdentifierClause%29> llama al método <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierClauseCore%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityKeyIdentifierClause%29>.</span><span class="sxs-lookup"><span data-stu-id="6362e-241">The <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierClause%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityKeyIdentifierClause%29> method calls the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierClauseCore%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityKeyIdentifierClause%29> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6362e-242"><paramref name="keyIdentifierClause" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6362e-242"><paramref name="keyIdentifierClause" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="6362e-243">O bien</span><span class="sxs-lookup"><span data-stu-id="6362e-243">-or-</span></span> 
 <span data-ttu-id="6362e-244"><paramref name="writer" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6362e-244"><paramref name="writer" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteKeyIdentifierClauseCore">
      <MemberSignature Language="C#" Value="protected abstract void WriteKeyIdentifierClauseCore (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void WriteKeyIdentifierClauseCore(class System.Xml.XmlWriter writer, class System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierClauseCore(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub WriteKeyIdentifierClauseCore (writer As XmlWriter, keyIdentifierClause As SecurityKeyIdentifierClause)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void WriteKeyIdentifierClauseCore(System::Xml::XmlWriter ^ writer, System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ keyIdentifierClause);" />
      <MemberSignature Language="F#" Value="abstract member WriteKeyIdentifierClauseCore : System.Xml.XmlWriter * System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; unit" Usage="securityTokenSerializer.WriteKeyIdentifierClauseCore (writer, keyIdentifierClause)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="keyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="6362e-245"><see cref="T:System.Xml.XmlWriter" /> para escribir la cláusula de identificador clave.</span><span class="sxs-lookup"><span data-stu-id="6362e-245">A <see cref="T:System.Xml.XmlWriter" /> to write the key identifier clause.</span></span></param>
        <param name="keyIdentifierClause"><span data-ttu-id="6362e-246"><see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> que representa la cláusula del identificador de clave para escribir.</span><span class="sxs-lookup"><span data-stu-id="6362e-246">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> that represents the key identifier clause to write.</span></span></param>
        <summary><span data-ttu-id="6362e-247">Escribe la cláusula de identificador clave especificado mediante el sistema de escritura especificado XML.</span><span class="sxs-lookup"><span data-stu-id="6362e-247">Writes the specified key identifier clause using the specified XML writer.</span></span> <span data-ttu-id="6362e-248">Se llama por la clase base.</span><span class="sxs-lookup"><span data-stu-id="6362e-248">Called by the base class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6362e-249">Las clases que se derivan de la clase <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> deben invalidar el método <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierClauseCore%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityKeyIdentifierClause%29>.</span><span class="sxs-lookup"><span data-stu-id="6362e-249">Classes that derive from the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> class must override the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierClauseCore%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityKeyIdentifierClause%29> method.</span></span> <span data-ttu-id="6362e-250">El método <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierClause%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityKeyIdentifierClause%29> llama al método <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierClauseCore%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityKeyIdentifierClause%29>.</span><span class="sxs-lookup"><span data-stu-id="6362e-250">The <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierClause%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityKeyIdentifierClause%29> method calls the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierClauseCore%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityKeyIdentifierClause%29> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6362e-251"><paramref name="keyIdentifierClause" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6362e-251"><paramref name="keyIdentifierClause" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="6362e-252">O bien</span><span class="sxs-lookup"><span data-stu-id="6362e-252">-or-</span></span> 
 <span data-ttu-id="6362e-253"><paramref name="writer" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6362e-253"><paramref name="writer" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteKeyIdentifierCore">
      <MemberSignature Language="C#" Value="protected abstract void WriteKeyIdentifierCore (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SecurityKeyIdentifier keyIdentifier);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void WriteKeyIdentifierCore(class System.Xml.XmlWriter writer, class System.IdentityModel.Tokens.SecurityKeyIdentifier keyIdentifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierCore(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub WriteKeyIdentifierCore (writer As XmlWriter, keyIdentifier As SecurityKeyIdentifier)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void WriteKeyIdentifierCore(System::Xml::XmlWriter ^ writer, System::IdentityModel::Tokens::SecurityKeyIdentifier ^ keyIdentifier);" />
      <MemberSignature Language="F#" Value="abstract member WriteKeyIdentifierCore : System.Xml.XmlWriter * System.IdentityModel.Tokens.SecurityKeyIdentifier -&gt; unit" Usage="securityTokenSerializer.WriteKeyIdentifierCore (writer, keyIdentifier)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="keyIdentifier" Type="System.IdentityModel.Tokens.SecurityKeyIdentifier" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="6362e-254"><see cref="T:System.Xml.XmlWriter" /> para escribir el identificador clave.</span><span class="sxs-lookup"><span data-stu-id="6362e-254">A <see cref="T:System.Xml.XmlWriter" /> to write the key identifier.</span></span></param>
        <param name="keyIdentifier"><span data-ttu-id="6362e-255"><see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> que representa el identificador de la clave para escribir.</span><span class="sxs-lookup"><span data-stu-id="6362e-255">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> that represents the key identifier to write.</span></span></param>
        <summary><span data-ttu-id="6362e-256">Escribe el identificador clave especificado mediante el sistema de escritura especificado XML.</span><span class="sxs-lookup"><span data-stu-id="6362e-256">Writes the specified key identifier using the specified XML writer.</span></span> <span data-ttu-id="6362e-257">Se llama por la clase base.</span><span class="sxs-lookup"><span data-stu-id="6362e-257">Called by the base class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6362e-258">Las clases que se derivan de la clase <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> deben invalidar el método <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierCore%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityKeyIdentifier%29>.</span><span class="sxs-lookup"><span data-stu-id="6362e-258">Classes that derive from the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> class must override the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierCore%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityKeyIdentifier%29> method.</span></span> <span data-ttu-id="6362e-259">El método <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifier%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityKeyIdentifier%29> llama al método <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierCore%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityKeyIdentifier%29>.</span><span class="sxs-lookup"><span data-stu-id="6362e-259">The <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifier%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityKeyIdentifier%29> method calls the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteKeyIdentifierCore%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityKeyIdentifier%29> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6362e-260"><paramref name="keyIdentifier" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6362e-260"><paramref name="keyIdentifier" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="6362e-261">O bien</span><span class="sxs-lookup"><span data-stu-id="6362e-261">-or-</span></span> 
 <span data-ttu-id="6362e-262"><paramref name="writer" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6362e-262"><paramref name="writer" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteToken">
      <MemberSignature Language="C#" Value="public void WriteToken (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteToken(class System.Xml.XmlWriter writer, class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteToken (writer As XmlWriter, token As SecurityToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteToken(System::Xml::XmlWriter ^ writer, System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberSignature Language="F#" Value="member this.WriteToken : System.Xml.XmlWriter * System.IdentityModel.Tokens.SecurityToken -&gt; unit" Usage="securityTokenSerializer.WriteToken (writer, token)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="6362e-263"><see cref="T:System.Xml.XmlWriter" /> para escribir el token de seguridad.</span><span class="sxs-lookup"><span data-stu-id="6362e-263">A <see cref="T:System.Xml.XmlWriter" /> to write the security token.</span></span></param>
        <param name="token"><span data-ttu-id="6362e-264"><see cref="T:System.IdentityModel.Tokens.SecurityToken" /> que representa el token de seguridad generado para escribir.</span><span class="sxs-lookup"><span data-stu-id="6362e-264">A <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> that represents the security token to write.</span></span></param>
        <summary><span data-ttu-id="6362e-265">Escribe el token de seguridad especificado mediante el sistema de escritura especificado XML.</span><span class="sxs-lookup"><span data-stu-id="6362e-265">Writes the specified security token using the specified XML writer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6362e-266">Las clases que se derivan de la clase <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> deben invalidar el método <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteTokenCore%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29>.</span><span class="sxs-lookup"><span data-stu-id="6362e-266">Classes that derive from the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> class must override the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteTokenCore%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29> method.</span></span> <span data-ttu-id="6362e-267">El método <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteToken%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29> llama al método <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteTokenCore%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29>.</span><span class="sxs-lookup"><span data-stu-id="6362e-267">The <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteToken%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29> method calls the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteTokenCore%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6362e-268"><paramref name="token" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6362e-268"><paramref name="token" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="6362e-269">O bien</span><span class="sxs-lookup"><span data-stu-id="6362e-269">-or-</span></span> 
 <span data-ttu-id="6362e-270"><paramref name="writer" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6362e-270"><paramref name="writer" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteTokenCore">
      <MemberSignature Language="C#" Value="protected abstract void WriteTokenCore (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void WriteTokenCore(class System.Xml.XmlWriter writer, class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteTokenCore(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub WriteTokenCore (writer As XmlWriter, token As SecurityToken)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void WriteTokenCore(System::Xml::XmlWriter ^ writer, System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberSignature Language="F#" Value="abstract member WriteTokenCore : System.Xml.XmlWriter * System.IdentityModel.Tokens.SecurityToken -&gt; unit" Usage="securityTokenSerializer.WriteTokenCore (writer, token)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="6362e-271"><see cref="T:System.Xml.XmlWriter" /> para escribir el token de seguridad.</span><span class="sxs-lookup"><span data-stu-id="6362e-271">A <see cref="T:System.Xml.XmlWriter" /> to write the security token.</span></span></param>
        <param name="token"><span data-ttu-id="6362e-272"><see cref="T:System.IdentityModel.Tokens.SecurityToken" /> que representa el token de seguridad generado para escribir.</span><span class="sxs-lookup"><span data-stu-id="6362e-272">A <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> that represents the security token to write.</span></span></param>
        <summary><span data-ttu-id="6362e-273">Escribe el token de seguridad especificado mediante el sistema de escritura especificado XML.</span><span class="sxs-lookup"><span data-stu-id="6362e-273">Writes the specified security token using the specified XML writer.</span></span> <span data-ttu-id="6362e-274">Se llama por la clase base.</span><span class="sxs-lookup"><span data-stu-id="6362e-274">Called by the base class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6362e-275">Las clases que se derivan de la clase <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> deben invalidar el método <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteTokenCore%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29>.</span><span class="sxs-lookup"><span data-stu-id="6362e-275">Classes that derive from the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> class must override the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteTokenCore%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29> method.</span></span> <span data-ttu-id="6362e-276">El método <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteToken%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29> llama al método <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteTokenCore%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29>.</span><span class="sxs-lookup"><span data-stu-id="6362e-276">The <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteToken%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29> method calls the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer.WriteTokenCore%28System.Xml.XmlWriter%2CSystem.IdentityModel.Tokens.SecurityToken%29> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6362e-277"><paramref name="token" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6362e-277"><paramref name="token" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="6362e-278">O bien</span><span class="sxs-lookup"><span data-stu-id="6362e-278">-or-</span></span> 
 <span data-ttu-id="6362e-279"><paramref name="writer" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6362e-279"><paramref name="writer" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
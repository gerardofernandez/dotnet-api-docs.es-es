<Type Name="SecurityTokenResolver" FullName="System.IdentityModel.Selectors.SecurityTokenResolver">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7a9f1909ecc5cbcee826670141ca59c0644e0e92" /><Meta Name="ms.sourcegitcommit" Value="9dda17222b9f7d3edf130133bfb1370d5b410a4b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="09/22/2018" /><Meta Name="ms.locfileid" Value="46639029" /></Metadata><TypeSignature Language="C#" Value="public abstract class SecurityTokenResolver" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SecurityTokenResolver extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Selectors.SecurityTokenResolver" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SecurityTokenResolver" />
  <TypeSignature Language="C++ CLI" Value="public ref class SecurityTokenResolver abstract" />
  <TypeSignature Language="F#" Value="type SecurityTokenResolver = class" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces></Interfaces>
  <Docs>
    <summary><span data-ttu-id="63653-101">Representa una clase de utilidad que puede recuperar tokens de seguridad o claves al tener un identificador clave o cláusula de identificador de clave.</span><span class="sxs-lookup"><span data-stu-id="63653-101">Represents a utility class that can retrieve security tokens or keys when you have a key identifier or key identifier clause.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63653-102">Utilice la clase <xref:System.IdentityModel.Selectors.SecurityTokenResolver> para recuperar una clave o token de seguridad al tener un identificador clave o cláusula de identificador de clave.</span><span class="sxs-lookup"><span data-stu-id="63653-102">Use the <xref:System.IdentityModel.Selectors.SecurityTokenResolver> class to retrieve a key or security token when you have a key identifier or key identifier clause.</span></span> <span data-ttu-id="63653-103"><xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> y los métodos <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> recuperan un token proporcionado que es un identificador clave o cláusula de identificador de clave.</span><span class="sxs-lookup"><span data-stu-id="63653-103">The <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> and <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> methods retrieve a token given that there is a key identifier or key identifier clause.</span></span> <span data-ttu-id="63653-104"><xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey%2A> y <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey%2A> recupera una clave proporcionada que es una cláusula de identificador clave.</span><span class="sxs-lookup"><span data-stu-id="63653-104">The <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey%2A> and <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey%2A> retrieve a key given that there is a key identifier clause.</span></span> <span data-ttu-id="63653-105">Los métodos con el prefijo `Try` devuelven `false` cuando la recuperación es incorrecta, mientras que los métodos sin un tipo de prefijo `Try` inician una excepción.</span><span class="sxs-lookup"><span data-stu-id="63653-105">The methods with a `Try` prefix return `false` when the retrieval is unsuccessful, whereas the methods without a `Try` prefix throw an exception.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SecurityTokenResolver ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenResolver.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SecurityTokenResolver();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="63653-106">Inicializa una nueva instancia de la clase <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" />.</span><span class="sxs-lookup"><span data-stu-id="63653-106">Initializes a new instance of the <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDefaultSecurityTokenResolver">
      <MemberSignature Language="C#" Value="public static System.IdentityModel.Selectors.SecurityTokenResolver CreateDefaultSecurityTokenResolver (System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Tokens.SecurityToken&gt; tokens, bool canMatchLocalId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IdentityModel.Selectors.SecurityTokenResolver CreateDefaultSecurityTokenResolver(class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.IdentityModel.Tokens.SecurityToken&gt; tokens, bool canMatchLocalId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenResolver.CreateDefaultSecurityTokenResolver(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Tokens.SecurityToken},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateDefaultSecurityTokenResolver (tokens As ReadOnlyCollection(Of SecurityToken), canMatchLocalId As Boolean) As SecurityTokenResolver" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IdentityModel::Selectors::SecurityTokenResolver ^ CreateDefaultSecurityTokenResolver(System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::Tokens::SecurityToken ^&gt; ^ tokens, bool canMatchLocalId);" />
      <MemberSignature Language="F#" Value="static member CreateDefaultSecurityTokenResolver : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Tokens.SecurityToken&gt; * bool -&gt; System.IdentityModel.Selectors.SecurityTokenResolver" Usage="System.IdentityModel.Selectors.SecurityTokenResolver.CreateDefaultSecurityTokenResolver (tokens, canMatchLocalId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Selectors.SecurityTokenResolver</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tokens" Type="System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Tokens.SecurityToken&gt;" />
        <Parameter Name="canMatchLocalId" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="tokens"><span data-ttu-id="63653-107"><see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> de tipo <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> que contiene el conjunto de tokens de seguridad para los que esta resolución del token de seguridad puede resolver identificadores clave y cláusulas de identificador de clave.</span><span class="sxs-lookup"><span data-stu-id="63653-107">A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of type <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> that contains the set of security tokens for which this security token resolver can resolve key identifiers and key identifier clauses to.</span></span></param>
        <param name="canMatchLocalId"><span data-ttu-id="63653-108"><see langword="true" /> para resolver las cláusulas de identificador clave <see langword="&lt;SecurityTokenReference&gt;" /> que hacen referencia a una clave de seguridad que se busca en alguna otra parte en el mensaje SOAP; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="63653-108"><see langword="true" /> to resolve the <see langword="&lt;SecurityTokenReference&gt;" /> key identifier clauses that reference a security key that is located somewhere else in the SOAP message; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="63653-109">Crea una resolución del token de seguridad predeterminada para los tokens de seguridad especificados.</span><span class="sxs-lookup"><span data-stu-id="63653-109">Creates a default security token resolver for the specified security tokens.</span></span></summary>
        <returns><span data-ttu-id="63653-110"><see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" /> que resuelve los identificadores clave y cláusulas que coinciden con los tokens de seguridad especificados en el parámetro <paramref name="tokens" />.</span><span class="sxs-lookup"><span data-stu-id="63653-110">A <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" /> that resolves key identifiers and clauses that match the security tokens specified in the <paramref name="tokens" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63653-111">La resolución del token de seguridad que se devuelve de este método, utiliza <xref:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause%2A> y los métodos <xref:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause%2A> en los tokens de seguridad especificados para resolver identificadores clave y cláusulas de identificador de clave.</span><span class="sxs-lookup"><span data-stu-id="63653-111">The security token resolver that is returned from this method, uses the <xref:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause%2A> and <xref:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause%2A> methods on the specified security tokens to resolve key identifiers and key identifier clauses.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadCustomConfiguration">
      <MemberSignature Language="C#" Value="public virtual void LoadCustomConfiguration (System.Xml.XmlNodeList nodelist);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LoadCustomConfiguration(class System.Xml.XmlNodeList nodelist) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenResolver.LoadCustomConfiguration(System.Xml.XmlNodeList)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub LoadCustomConfiguration (nodelist As XmlNodeList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void LoadCustomConfiguration(System::Xml::XmlNodeList ^ nodelist);" />
      <MemberSignature Language="F#" Value="abstract member LoadCustomConfiguration : System.Xml.XmlNodeList -&gt; unit&#xA;override this.LoadCustomConfiguration : System.Xml.XmlNodeList -&gt; unit" Usage="securityTokenResolver.LoadCustomConfiguration nodelist" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IdentityModel.Configuration.ICustomIdentityConfiguration.LoadCustomConfiguration(System.Xml.XmlNodeList)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodelist" Type="System.Xml.XmlNodeList" />
      </Parameters>
      <Docs>
        <param name="nodelist"><span data-ttu-id="63653-112">Elementos de configuración personalizados.</span><span class="sxs-lookup"><span data-stu-id="63653-112">The custom configuration elements.</span></span></param>
        <summary><span data-ttu-id="63653-113">Cuando se reemplaza en una clase derivada, carga la configuración personalizada de XML.</span><span class="sxs-lookup"><span data-stu-id="63653-113">When overridden in a derived class, loads custom configuration from XML.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63653-114">De forma predeterminada, se produce un <xref:System.NotImplementedException>.</span><span class="sxs-lookup"><span data-stu-id="63653-114">By default, throws a <xref:System.NotImplementedException>.</span></span> <span data-ttu-id="63653-115">Puede invalidar este método para proporcionar funcionalidad en una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="63653-115">You can override this method to provide functionality in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveSecurityKey">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SecurityKey ResolveSecurityKey (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IdentityModel.Tokens.SecurityKey ResolveSecurityKey(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
      <MemberSignature Language="VB.NET" Value="Public Function ResolveSecurityKey (keyIdentifierClause As SecurityKeyIdentifierClause) As SecurityKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IdentityModel::Tokens::SecurityKey ^ ResolveSecurityKey(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ keyIdentifierClause);" />
      <MemberSignature Language="F#" Value="member this.ResolveSecurityKey : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; System.IdentityModel.Tokens.SecurityKey" Usage="securityTokenResolver.ResolveSecurityKey keyIdentifierClause" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
      </Parameters>
      <Docs>
        <param name="keyIdentifierClause"><span data-ttu-id="63653-116"><see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> para el que se va a recuperar la clave.</span><span class="sxs-lookup"><span data-stu-id="63653-116">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> to retrieve the key for.</span></span></param>
        <summary><span data-ttu-id="63653-117">Obtiene la clave a la que se hace referencia en la cláusula de identificador clave especificada.</span><span class="sxs-lookup"><span data-stu-id="63653-117">Obtains the key that is referenced in the specified key identifier clause.</span></span></summary>
        <returns><span data-ttu-id="63653-118"><see cref="T:System.IdentityModel.Tokens.SecurityKey" /> que es la clave a la que se hace referencia en la cláusula de identificador clave especificada.</span><span class="sxs-lookup"><span data-stu-id="63653-118">A <see cref="T:System.IdentityModel.Tokens.SecurityKey" /> that is the key referenced in the specified key identifier clause.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63653-119"><xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey%2A> y los métodos <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey%2A> difieren en lo que pasa cuando la cláusula de identificador clave no se puede resolver como una clave.</span><span class="sxs-lookup"><span data-stu-id="63653-119">The <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey%2A> and <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey%2A> methods differ in what happens when the key identifier clause cannot be resolved to a key.</span></span> <span data-ttu-id="63653-120">El método <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey%2A> devuelve `false`, mientras que el método <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey%2A> produce una excepción.</span><span class="sxs-lookup"><span data-stu-id="63653-120">The <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey%2A> method returns `false`, whereas the <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey%2A> method throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="63653-121"><paramref name="keyIdentifierClause" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="63653-121"><paramref name="keyIdentifierClause" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="63653-122">Una clave no se pudo recuperar para la cláusula de identificador clave especificada en el parámetro <paramref name="keyIdentifierClause" />.</span><span class="sxs-lookup"><span data-stu-id="63653-122">A key could not be retrieved for the key identifier clause specified in the <paramref name="keyIdentifierClause" /> parameter.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ResolveToken">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="63653-123">Recupera un token de seguridad que coincide con el identificador clave especificado.</span><span class="sxs-lookup"><span data-stu-id="63653-123">Retrieves a security token that matches the specified key identifier.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ResolveToken">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SecurityToken ResolveToken (System.IdentityModel.Tokens.SecurityKeyIdentifier keyIdentifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IdentityModel.Tokens.SecurityToken ResolveToken(class System.IdentityModel.Tokens.SecurityKeyIdentifier keyIdentifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Function ResolveToken (keyIdentifier As SecurityKeyIdentifier) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IdentityModel::Tokens::SecurityToken ^ ResolveToken(System::IdentityModel::Tokens::SecurityKeyIdentifier ^ keyIdentifier);" />
      <MemberSignature Language="F#" Value="member this.ResolveToken : System.IdentityModel.Tokens.SecurityKeyIdentifier -&gt; System.IdentityModel.Tokens.SecurityToken" Usage="securityTokenResolver.ResolveToken keyIdentifier" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifier" Type="System.IdentityModel.Tokens.SecurityKeyIdentifier" />
      </Parameters>
      <Docs>
        <param name="keyIdentifier"><span data-ttu-id="63653-124">Clase <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> para la que crear un token de seguridad.</span><span class="sxs-lookup"><span data-stu-id="63653-124">The <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> to create a security token for.</span></span></param>
        <summary><span data-ttu-id="63653-125">Recupera un token de seguridad que coincide con una de las cláusulas de identificador de la clave  que están incluidas dentro del identificador clave especificado.</span><span class="sxs-lookup"><span data-stu-id="63653-125">Retrieves a security token that matches one of the security key identifier clauses contained within the specified key identifier.</span></span></summary>
        <returns><span data-ttu-id="63653-126"><see cref="T:System.IdentityModel.Tokens.SecurityToken" /> que representa el identificador clave especificado.</span><span class="sxs-lookup"><span data-stu-id="63653-126">A <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> that represents the specified key identifier.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63653-127"><xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> y los métodos <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> difieren en lo que pasa cuando la cláusula de identificador clave no se puede resolver como un token de seguridad.</span><span class="sxs-lookup"><span data-stu-id="63653-127">The <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> and <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> methods differ in what happens when the key identifier cannot be resolved to a security token.</span></span> <span data-ttu-id="63653-128">El método <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> devuelve `false`, mientras que el método <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> produce una excepción.</span><span class="sxs-lookup"><span data-stu-id="63653-128">The <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> method returns `false`, whereas the <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> method throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="63653-129"><paramref name="keyIdentifier" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="63653-129"><paramref name="keyIdentifier" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="63653-130">Un token de seguridad no se puede crear para el identificador clave especificado.</span><span class="sxs-lookup"><span data-stu-id="63653-130">A security token cannot be created for the specified key identifier.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveToken">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SecurityToken ResolveToken (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IdentityModel.Tokens.SecurityToken ResolveToken(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
      <MemberSignature Language="VB.NET" Value="Public Function ResolveToken (keyIdentifierClause As SecurityKeyIdentifierClause) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IdentityModel::Tokens::SecurityToken ^ ResolveToken(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ keyIdentifierClause);" />
      <MemberSignature Language="F#" Value="member this.ResolveToken : System.IdentityModel.Tokens.SecurityKeyIdentifierClause -&gt; System.IdentityModel.Tokens.SecurityToken" Usage="securityTokenResolver.ResolveToken keyIdentifierClause" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
      </Parameters>
      <Docs>
        <param name="keyIdentifierClause"><span data-ttu-id="63653-131">Clase <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> para la que crear un token de seguridad.</span><span class="sxs-lookup"><span data-stu-id="63653-131">The <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> to create a security token for.</span></span></param>
        <summary><span data-ttu-id="63653-132">Recupera el token de seguridad que coincide con la cláusula de identificador especificada.</span><span class="sxs-lookup"><span data-stu-id="63653-132">Retrieves the security token that matches the specified key identifier clause.</span></span></summary>
        <returns><span data-ttu-id="63653-133"><see cref="T:System.IdentityModel.Tokens.SecurityToken" /> que representa la cláusula de identificador especificada.</span><span class="sxs-lookup"><span data-stu-id="63653-133">A <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> that represents the specified key identifier clause.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63653-134"><xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> y los métodos <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> difieren en lo que pasa cuando la cláusula de identificador clave no se puede resolver como un token de seguridad.</span><span class="sxs-lookup"><span data-stu-id="63653-134">The <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> and <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> methods differ in what happens when the key identifier clause cannot be resolved to a security token.</span></span> <span data-ttu-id="63653-135">El método <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> devuelve `false`, mientras que el método <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> produce una excepción.</span><span class="sxs-lookup"><span data-stu-id="63653-135">The <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> method returns `false`, whereas the <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> method throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryResolveSecurityKey">
      <MemberSignature Language="C#" Value="public bool TryResolveSecurityKey (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause, out System.IdentityModel.Tokens.SecurityKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryResolveSecurityKey(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause, [out] class System.IdentityModel.Tokens.SecurityKey&amp; key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryResolveSecurityKey (keyIdentifierClause As SecurityKeyIdentifierClause, ByRef key As SecurityKey) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryResolveSecurityKey(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ keyIdentifierClause, [Runtime::InteropServices::Out] System::IdentityModel::Tokens::SecurityKey ^ % key);" />
      <MemberSignature Language="F#" Value="member this.TryResolveSecurityKey : System.IdentityModel.Tokens.SecurityKeyIdentifierClause *  -&gt; bool" Usage="securityTokenResolver.TryResolveSecurityKey (keyIdentifierClause, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
        <Parameter Name="key" Type="System.IdentityModel.Tokens.SecurityKey" RefType="out" />
      </Parameters>
      <Docs>
        <param name="keyIdentifierClause"><span data-ttu-id="63653-136"><see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> para el que se va a recuperar la clave.</span><span class="sxs-lookup"><span data-stu-id="63653-136">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> to retrieve the key for.</span></span></param>
        <param name="key"><span data-ttu-id="63653-137">Cuando este método finaliza, contiene <see cref="T:System.IdentityModel.Tokens.SecurityKey" /> que contiene la clave a la que se hace referencia en la cláusula de identificador clave especificada.</span><span class="sxs-lookup"><span data-stu-id="63653-137">When this method returns, contains a <see cref="T:System.IdentityModel.Tokens.SecurityKey" /> that contains the key that is referenced in the specified key identifier clause.</span></span> <span data-ttu-id="63653-138">Este parámetro se pasa sin inicializar.</span><span class="sxs-lookup"><span data-stu-id="63653-138">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="63653-139">Intenta recuperar la clave a la que se hace referencia en la cláusula de identificador clave especificada.</span><span class="sxs-lookup"><span data-stu-id="63653-139">Attempts to retrieve the key that is referenced in the specified key identifier clause.</span></span></summary>
        <returns><span data-ttu-id="63653-140"><see langword="true" /> cuando una clave se puede recuperar para el identificador clave especificado; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="63653-140"><see langword="true" /> when a key can be retrieved for the specified key identifier clause; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63653-141"><xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey%2A> y los métodos <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey%2A> difieren en lo que pasa cuando la cláusula de identificador clave no se puede resolver como una clave.</span><span class="sxs-lookup"><span data-stu-id="63653-141">The <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey%2A> and <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey%2A> methods differ in what happens when the key identifier clause cannot be resolved to a key.</span></span> <span data-ttu-id="63653-142">El método <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey%2A> devuelve `false`, mientras que el método <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey%2A> produce una excepción.</span><span class="sxs-lookup"><span data-stu-id="63653-142">The <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey%2A> method returns `false`, whereas the <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey%2A> method throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="63653-143"><paramref name="keyIdentifierClause" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="63653-143"><paramref name="keyIdentifierClause" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryResolveSecurityKeyCore">
      <MemberSignature Language="C#" Value="protected abstract bool TryResolveSecurityKeyCore (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause, out System.IdentityModel.Tokens.SecurityKey key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool TryResolveSecurityKeyCore(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause, [out] class System.IdentityModel.Tokens.SecurityKey&amp; key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKeyCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function TryResolveSecurityKeyCore (keyIdentifierClause As SecurityKeyIdentifierClause, ByRef key As SecurityKey) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract bool TryResolveSecurityKeyCore(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ keyIdentifierClause, [Runtime::InteropServices::Out] System::IdentityModel::Tokens::SecurityKey ^ % key);" />
      <MemberSignature Language="F#" Value="abstract member TryResolveSecurityKeyCore : System.IdentityModel.Tokens.SecurityKeyIdentifierClause *  -&gt; bool" Usage="securityTokenResolver.TryResolveSecurityKeyCore (keyIdentifierClause, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
        <Parameter Name="key" Type="System.IdentityModel.Tokens.SecurityKey" RefType="out" />
      </Parameters>
      <Docs>
        <param name="keyIdentifierClause"><span data-ttu-id="63653-144"><see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> para el que se va a recuperar la clave.</span><span class="sxs-lookup"><span data-stu-id="63653-144">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> to retrieve the key for.</span></span></param>
        <param name="key"><span data-ttu-id="63653-145">Cuando este método finaliza, contiene <see cref="T:System.IdentityModel.Tokens.SecurityKey" /> que contiene la clave a la que se hace referencia en la cláusula de identificador clave especificada.</span><span class="sxs-lookup"><span data-stu-id="63653-145">When this method returns, contains a <see cref="T:System.IdentityModel.Tokens.SecurityKey" /> that contains the key that is referenced in the specified key identifier clause.</span></span> <span data-ttu-id="63653-146">Este parámetro se pasa sin inicializar.</span><span class="sxs-lookup"><span data-stu-id="63653-146">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="63653-147">Intenta recuperar la clave a la que se hace referencia en la cláusula de identificador clave especificada.</span><span class="sxs-lookup"><span data-stu-id="63653-147">Attempts to retrieve the key that is referenced in the specified key identifier clause.</span></span></summary>
        <returns><span data-ttu-id="63653-148"><see langword="true" /> cuando una clave se puede recuperar para el identificador clave especificado; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="63653-148"><see langword="true" /> when a key can be retrieved for the specified key identifier clause; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63653-149">Los métodos <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKeyCore%2A> y <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey%2A> llaman automáticamente al método <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey%2A>.</span><span class="sxs-lookup"><span data-stu-id="63653-149">The <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKeyCore%2A> method is called by the <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey%2A> and <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryResolveToken">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="63653-150">Intenta recuperar el token de seguridad al que se hace referencia en el objeto especificado.</span><span class="sxs-lookup"><span data-stu-id="63653-150">Attempts to retrieve the security token that is referenced in the specified object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryResolveToken">
      <MemberSignature Language="C#" Value="public bool TryResolveToken (System.IdentityModel.Tokens.SecurityKeyIdentifier keyIdentifier, out System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryResolveToken(class System.IdentityModel.Tokens.SecurityKeyIdentifier keyIdentifier, [out] class System.IdentityModel.Tokens.SecurityToken&amp; token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryResolveToken (keyIdentifier As SecurityKeyIdentifier, ByRef token As SecurityToken) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryResolveToken(System::IdentityModel::Tokens::SecurityKeyIdentifier ^ keyIdentifier, [Runtime::InteropServices::Out] System::IdentityModel::Tokens::SecurityToken ^ % token);" />
      <MemberSignature Language="F#" Value="member this.TryResolveToken : System.IdentityModel.Tokens.SecurityKeyIdentifier *  -&gt; bool" Usage="securityTokenResolver.TryResolveToken (keyIdentifier, token)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifier" Type="System.IdentityModel.Tokens.SecurityKeyIdentifier" />
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" RefType="out" />
      </Parameters>
      <Docs>
        <param name="keyIdentifier"><span data-ttu-id="63653-151">Clase <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> para la que crear un token de seguridad.</span><span class="sxs-lookup"><span data-stu-id="63653-151">The <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> to create a security token for.</span></span></param>
        <param name="token"><span data-ttu-id="63653-152">Cuando este método finaliza, contiene <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> que representa el identificador clave especificado.</span><span class="sxs-lookup"><span data-stu-id="63653-152">When this method returns, contains a <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> that represents the specified key identifier.</span></span> <span data-ttu-id="63653-153">Este parámetro se pasa sin inicializar.</span><span class="sxs-lookup"><span data-stu-id="63653-153">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="63653-154">Intenta recuperar el token de seguridad que coincide con una de las cláusulas de identificador de la clave que están incluidas dentro del identificador clave especificado.</span><span class="sxs-lookup"><span data-stu-id="63653-154">Attempts to retrieve the security token that matches one of the key identifier clauses contained within the specified key identifier.</span></span></summary>
        <returns><span data-ttu-id="63653-155"><see langword="true" /> cuando un token de seguridad se puede recuperar para el identificador clave especificado; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="63653-155"><see langword="true" /> when a security token can be retrieved for the specified key identifier; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63653-156"><xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> y los métodos <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> difieren en lo que pasa cuando la cláusula de identificador clave no se puede resolver como un token de seguridad.</span><span class="sxs-lookup"><span data-stu-id="63653-156">The <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> and <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> methods differ in what happens when the key identifier cannot be resolved to a security token.</span></span> <span data-ttu-id="63653-157">El método <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> devuelve `false`, mientras que el método <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> produce una excepción.</span><span class="sxs-lookup"><span data-stu-id="63653-157">The <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> method returns `false`, whereas the <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> method throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="63653-158"><paramref name="keyIdentifier" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="63653-158"><paramref name="keyIdentifier" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryResolveToken">
      <MemberSignature Language="C#" Value="public bool TryResolveToken (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause, out System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryResolveToken(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause, [out] class System.IdentityModel.Tokens.SecurityToken&amp; token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryResolveToken (keyIdentifierClause As SecurityKeyIdentifierClause, ByRef token As SecurityToken) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryResolveToken(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ keyIdentifierClause, [Runtime::InteropServices::Out] System::IdentityModel::Tokens::SecurityToken ^ % token);" />
      <MemberSignature Language="F#" Value="member this.TryResolveToken : System.IdentityModel.Tokens.SecurityKeyIdentifierClause *  -&gt; bool" Usage="securityTokenResolver.TryResolveToken (keyIdentifierClause, token)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" RefType="out" />
      </Parameters>
      <Docs>
        <param name="keyIdentifierClause"><span data-ttu-id="63653-159">Clase <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> para la que crear un token de seguridad.</span><span class="sxs-lookup"><span data-stu-id="63653-159">The <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> to create a security token for.</span></span></param>
        <param name="token"><span data-ttu-id="63653-160">Cuando este método finaliza, contiene <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> que representa la cláusula identificador clave especificada.</span><span class="sxs-lookup"><span data-stu-id="63653-160">When this method returns, contains a <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> that represents the specified key identifier clause.</span></span> <span data-ttu-id="63653-161">Este parámetro se pasa sin inicializar.</span><span class="sxs-lookup"><span data-stu-id="63653-161">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="63653-162">Intenta recuperar el token de seguridad que coincide con la cláusula de identificador clave especificada.</span><span class="sxs-lookup"><span data-stu-id="63653-162">Attempts to retrieve the security token that matches the specified key identifier clause.</span></span></summary>
        <returns><span data-ttu-id="63653-163"><see langword="true" /> cuando un token de seguridad se puede recuperar para la cláusula identificador clave; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="63653-163"><see langword="true" /> when a security token can be retrieved for the specified key identifier clause; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63653-164"><xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> y los métodos <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> difieren en lo que pasa cuando la cláusula de identificador clave no se puede resolver como un token de seguridad.</span><span class="sxs-lookup"><span data-stu-id="63653-164">The <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> and <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> methods differ in what happens when the key identifier clause cannot be resolved to a security token.</span></span> <span data-ttu-id="63653-165">El método <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> devuelve `false`, mientras que el método <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> produce una excepción.</span><span class="sxs-lookup"><span data-stu-id="63653-165">The <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> method returns `false`, whereas the <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> method throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="63653-166"><paramref name="keyIdentifierClause" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="63653-166"><paramref name="keyIdentifierClause" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryResolveTokenCore">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="63653-167">Intenta recuperar la clave a la que se hace referencia en el objeto especificado.</span><span class="sxs-lookup"><span data-stu-id="63653-167">Attempts to retrieve the key that is referenced in the specified object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryResolveTokenCore">
      <MemberSignature Language="C#" Value="protected abstract bool TryResolveTokenCore (System.IdentityModel.Tokens.SecurityKeyIdentifier keyIdentifier, out System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool TryResolveTokenCore(class System.IdentityModel.Tokens.SecurityKeyIdentifier keyIdentifier, [out] class System.IdentityModel.Tokens.SecurityToken&amp; token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function TryResolveTokenCore (keyIdentifier As SecurityKeyIdentifier, ByRef token As SecurityToken) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract bool TryResolveTokenCore(System::IdentityModel::Tokens::SecurityKeyIdentifier ^ keyIdentifier, [Runtime::InteropServices::Out] System::IdentityModel::Tokens::SecurityToken ^ % token);" />
      <MemberSignature Language="F#" Value="abstract member TryResolveTokenCore : System.IdentityModel.Tokens.SecurityKeyIdentifier *  -&gt; bool" Usage="securityTokenResolver.TryResolveTokenCore (keyIdentifier, token)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifier" Type="System.IdentityModel.Tokens.SecurityKeyIdentifier" />
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" RefType="out" />
      </Parameters>
      <Docs>
        <param name="keyIdentifier"><span data-ttu-id="63653-168">Clase <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> para la que crear un token de seguridad.</span><span class="sxs-lookup"><span data-stu-id="63653-168">The <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> to create a security token for.</span></span></param>
        <param name="token"><span data-ttu-id="63653-169">Cuando este método finaliza, contiene <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> que representa el identificador clave especificado.</span><span class="sxs-lookup"><span data-stu-id="63653-169">When this method returns, contains a <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> that represents the specified key identifier.</span></span> <span data-ttu-id="63653-170">Este parámetro se pasa sin inicializar.</span><span class="sxs-lookup"><span data-stu-id="63653-170">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="63653-171">Cuando se invalida en una clase derivada, intenta recuperar el token de seguridad que coincide por lo menos con una de las cláusulas de identificador clave contenido dentro del identificador clave especificado.</span><span class="sxs-lookup"><span data-stu-id="63653-171">When overridden in a derived class, attempts to retrieve the security token that matches at least one of the key identifier clauses contained within the specified key identifier.</span></span></summary>
        <returns><span data-ttu-id="63653-172"><see langword="true" /> cuando un token de seguridad se puede recuperar para el identificador clave especificado; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="63653-172"><see langword="true" /> when a security token can be retrieved for the specified key identifier; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63653-173">Los métodos <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveTokenCore%2A> y <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> llaman automáticamente al método <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A>.</span><span class="sxs-lookup"><span data-stu-id="63653-173">The <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveTokenCore%2A> method is called by the <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> and <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryResolveTokenCore">
      <MemberSignature Language="C#" Value="protected abstract bool TryResolveTokenCore (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause, out System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool TryResolveTokenCore(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause, [out] class System.IdentityModel.Tokens.SecurityToken&amp; token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function TryResolveTokenCore (keyIdentifierClause As SecurityKeyIdentifierClause, ByRef token As SecurityToken) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract bool TryResolveTokenCore(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ keyIdentifierClause, [Runtime::InteropServices::Out] System::IdentityModel::Tokens::SecurityToken ^ % token);" />
      <MemberSignature Language="F#" Value="abstract member TryResolveTokenCore : System.IdentityModel.Tokens.SecurityKeyIdentifierClause *  -&gt; bool" Usage="securityTokenResolver.TryResolveTokenCore (keyIdentifierClause, token)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" RefType="out" />
      </Parameters>
      <Docs>
        <param name="keyIdentifierClause"><span data-ttu-id="63653-174">Clase <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> para la que crear un token de seguridad.</span><span class="sxs-lookup"><span data-stu-id="63653-174">The <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> to create a security token for.</span></span></param>
        <param name="token"><span data-ttu-id="63653-175">Cuando este método finaliza, contiene <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> que representa la cláusula identificador clave especificada.</span><span class="sxs-lookup"><span data-stu-id="63653-175">When this method returns, contains a <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> that represents the specified key identifier clause.</span></span> <span data-ttu-id="63653-176">Este parámetro se pasa sin inicializar.</span><span class="sxs-lookup"><span data-stu-id="63653-176">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="63653-177">Cuando se invalida en una clase derivada, intenta resolver el token de seguridad que coincide con la cláusula de identificador clave especificada.</span><span class="sxs-lookup"><span data-stu-id="63653-177">When overridden in a derived class, attempts to resolve the security token that matches the specified key identifier clause.</span></span></summary>
        <returns><span data-ttu-id="63653-178"><see langword="true" /> cuando un token de seguridad se puede recuperar para la cláusula identificador clave; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="63653-178"><see langword="true" /> when a security token can be retrieved for the specified key identifier clause; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63653-179">Los métodos <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveTokenCore%2A> y <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> llaman automáticamente al método <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A>.</span><span class="sxs-lookup"><span data-stu-id="63653-179">The <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveTokenCore%2A> method is called by the <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A> and <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
<Type Name="XamlObjectWriter" FullName="System.Xaml.XamlObjectWriter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="88e6ca45083f7c3b687072f89d33f2067088da08" /><Meta Name="ms.sourcegitcommit" Value="c5fd6b431a16f0412349201a0e93a9eacddf4b35" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="12/14/2018" /><Meta Name="ms.locfileid" Value="53390864" /></Metadata><TypeSignature Language="C#" Value="public class XamlObjectWriter : System.Xaml.XamlWriter, System.Xaml.IXamlLineInfoConsumer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlObjectWriter extends System.Xaml.XamlWriter implements class System.Xaml.IXamlLineInfoConsumer" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.XamlObjectWriter" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlObjectWriter&#xA;Inherits XamlWriter&#xA;Implements IXamlLineInfoConsumer" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlObjectWriter : System::Xaml::XamlWriter, System::Xaml::IXamlLineInfoConsumer" />
  <TypeSignature Language="F#" Value="type XamlObjectWriter = class&#xA;    inherit XamlWriter&#xA;    interface IXamlLineInfoConsumer" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xaml.XamlWriter</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Xaml.IXamlLineInfoConsumer</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="5ae71-101">Crea un gráfico de objetos a partir de una secuencia de nodos XAML de origen.</span><span class="sxs-lookup"><span data-stu-id="5ae71-101">Creates an object graph from a source XAML node stream.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ae71-102">El `Write` métodos de <xref:System.Xaml.XamlObjectWriter> implementar un patrón para que la <xref:System.Xaml.XamlObjectWriter> usa el <xref:System.Xaml.XamlWriter> definido por el <xref:System.Xaml.XamlWriter.WriteNode%2A> método.</span><span class="sxs-lookup"><span data-stu-id="5ae71-102">The `Write` methods of <xref:System.Xaml.XamlObjectWriter> implement a pattern so that the <xref:System.Xaml.XamlObjectWriter> uses the <xref:System.Xaml.XamlWriter> that is defined by the <xref:System.Xaml.XamlWriter.WriteNode%2A> method.</span></span> <span data-ttu-id="5ae71-103"><xref:System.Xaml.XamlWriter.WriteNode%2A> lógica cambia entre el `Write` métodos, dependiendo de qué nodo de tipo es la posición actual en el lector.</span><span class="sxs-lookup"><span data-stu-id="5ae71-103"><xref:System.Xaml.XamlWriter.WriteNode%2A> logic switches between the `Write` methods, depending on which node type is at the current position in the reader.</span></span>  
  
## <a name="scope"></a><span data-ttu-id="5ae71-104">Ámbito</span><span class="sxs-lookup"><span data-stu-id="5ae71-104">Scope</span></span>  
 <span data-ttu-id="5ae71-105">Un <xref:System.Xaml.XamlObjectWriter> tiene un concepto de ámbito; que es, el <xref:System.Xaml.XamlObjectWriter> mantiene un punto conceptual de referencia en su gráfico de objetos de salida.</span><span class="sxs-lookup"><span data-stu-id="5ae71-105">A <xref:System.Xaml.XamlObjectWriter> has a concept of scope; that is, the <xref:System.Xaml.XamlObjectWriter> maintains a conceptual point of reference in its output object graph.</span></span> <span data-ttu-id="5ae71-106">Para un ámbito determinado, ciertas operaciones podrían ser válida o no es válido o producir un resultado sin operación.</span><span class="sxs-lookup"><span data-stu-id="5ae71-106">For a particular scope, certain operations might be valid or invalid, or produce a no-operation result.</span></span> <span data-ttu-id="5ae71-107">Por ejemplo, si se llama a <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A> para escribir las directivas para la inicialización en un objeto que ya existe como una instancia, la implementación predeterminada produce una excepción.</span><span class="sxs-lookup"><span data-stu-id="5ae71-107">For example, if you call <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A> to write directives for initialization on an object that already exists as an instance, the default implementation throws an exception.</span></span>  
  
 <span data-ttu-id="5ae71-108">Una posible técnica para realizar el seguimiento de ámbito en un personalizado <xref:System.Xaml.XamlObjectWriter> es alinear las acciones de nodo con una clase de pila o marco.</span><span class="sxs-lookup"><span data-stu-id="5ae71-108">A possible technique for tracking scope in a custom <xref:System.Xaml.XamlObjectWriter> is to align the node actions with a stack or frame class.</span></span> <span data-ttu-id="5ae71-109">La pila o marco puede realizar un seguimiento de push y pop para cada nivel de profundidad del modelo de objetos que se escribe o se cerró mientras el <xref:System.Xaml.XamlObjectWriter> escribe el gráfico de objetos.</span><span class="sxs-lookup"><span data-stu-id="5ae71-109">The stack or frame can keep track of push and pop for each level of object-model depth that is entered or exited while the <xref:System.Xaml.XamlObjectWriter> writes the object graph.</span></span>  
  
## <a name="callbacks"></a><span data-ttu-id="5ae71-110">Devoluciones de llamada</span><span class="sxs-lookup"><span data-stu-id="5ae71-110">Callbacks</span></span>  
 <span data-ttu-id="5ae71-111">Para admitir intermedios y avanzados <xref:System.Xaml.XamlObjectWriter> escenarios, el mecanismo de escritura de un gráfico de objetos proporciona devolución de llamada de puntos de entrada que se producen cuando un <xref:System.Xaml.XamlObjectWriter> confirma o está a punto de confirmación determinadas acciones.</span><span class="sxs-lookup"><span data-stu-id="5ae71-111">To support intermediate and advanced <xref:System.Xaml.XamlObjectWriter> scenarios, the mechanism of writing an object graph provides callback entry points that occur when a <xref:System.Xaml.XamlObjectWriter> commits or is about to commit certain actions.</span></span> <span data-ttu-id="5ae71-112">Algunas devoluciones de llamada están habilitadas en la configuración y no son específicos para el tipo de objeto o el miembro que se escribe; Sin embargo, la información de devolución de llamada suele estar disponible en el contexto o en el evento es datos que se envían a través de la devolución de llamada.</span><span class="sxs-lookup"><span data-stu-id="5ae71-112">Some callbacks are enabled in the settings and are not specific to the object type or the member being written; however, callback information is often available in context or is in the event data that is sent through the callback.</span></span> <span data-ttu-id="5ae71-113">La siguiente es una lista de devoluciones de llamada pertinentes:</span><span class="sxs-lookup"><span data-stu-id="5ae71-113">The following is a list of relevant callbacks:</span></span>  
  
-   <span data-ttu-id="5ae71-114">La devolución de llamada que se declara mediante <xref:System.Xaml.XamlObjectWriterSettings.AfterBeginInitHandler%2A> se invoca cuando el ámbito pasa a un nuevo objeto y en el <xref:System.ComponentModel.ISupportInitialize.BeginInit%2A> fase de la duración de cada objeto creado.</span><span class="sxs-lookup"><span data-stu-id="5ae71-114">The callback that is declared by <xref:System.Xaml.XamlObjectWriterSettings.AfterBeginInitHandler%2A> is invoked when the scope goes to a new object and at the <xref:System.ComponentModel.ISupportInitialize.BeginInit%2A> phase of object lifetime for each created object.</span></span>  
  
-   <span data-ttu-id="5ae71-115">La devolución de llamada que se declara mediante <xref:System.Xaml.XamlObjectWriterSettings.AfterEndInitHandler%2A> se invoca cuando el ámbito pasa a un nuevo objeto y en el <xref:System.ComponentModel.ISupportInitialize.EndInit%2A> fase de la duración de cada objeto creado.</span><span class="sxs-lookup"><span data-stu-id="5ae71-115">The callback that is declared by <xref:System.Xaml.XamlObjectWriterSettings.AfterEndInitHandler%2A> is invoked when the scope goes to a new object and at the <xref:System.ComponentModel.ISupportInitialize.EndInit%2A> phase of object lifetime for each created object.</span></span>  
  
-   <span data-ttu-id="5ae71-116">La devolución de llamada que se declara mediante <xref:System.Xaml.XamlObjectWriterSettings.BeforePropertiesHandler%2A> se invoca cuando se inicia en un objeto del ámbito y se produce cuando la primera <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A> llamada a ese ámbito de objeto se realiza pero aún no confirmado.</span><span class="sxs-lookup"><span data-stu-id="5ae71-116">The callback that is declared by <xref:System.Xaml.XamlObjectWriterSettings.BeforePropertiesHandler%2A> is invoked when the scope starts in an object, and occurs when the first <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A> call to that object scope is made but not yet committed.</span></span>  
  
-   <span data-ttu-id="5ae71-117">La devolución de llamada que se declara mediante <xref:System.Xaml.XamlObjectWriterSettings.AfterPropertiesHandler%2A> se invoca cuando el ámbito se inicia en un objeto y se produce cuando el <xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A> llamada a ese ámbito de objeto se realiza pero aún no confirmado.</span><span class="sxs-lookup"><span data-stu-id="5ae71-117">The callback that is declared by <xref:System.Xaml.XamlObjectWriterSettings.AfterPropertiesHandler%2A> is invoked when the scope starts in an object, and happens when the <xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A> call to that object scope is made but not yet committed.</span></span>  
  
-   <span data-ttu-id="5ae71-118">La devolución de llamada que se declara mediante <xref:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler%2A> se invoca cuando <xref:System.Xaml.XamlObjectWriter.OnSetValue%2A> se llama.</span><span class="sxs-lookup"><span data-stu-id="5ae71-118">The callback that is declared by <xref:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler%2A> is invoked when <xref:System.Xaml.XamlObjectWriter.OnSetValue%2A> is called.</span></span>  
  
## <a name="writing-dictionary-keys"></a><span data-ttu-id="5ae71-119">Escribir las claves del diccionario</span><span class="sxs-lookup"><span data-stu-id="5ae71-119">Writing Dictionary Keys</span></span>  
 <span data-ttu-id="5ae71-120">La implementación predeterminada de <xref:System.Xaml.XamlObjectWriter> admite la conversión de tipos en las restricciones de un <xref:System.Collections.Generic.Dictionary%602> antes el diccionario de contenido se agrega al gráfico de objetos.</span><span class="sxs-lookup"><span data-stu-id="5ae71-120">The default implementation of <xref:System.Xaml.XamlObjectWriter> supports type conversion on the constraints of a <xref:System.Collections.Generic.Dictionary%602> before the dictionary contents are added to the object graph.</span></span> <span data-ttu-id="5ae71-121">De esta manera, un diccionario genérico puede desligarse por los objetos en tiempo de ejecución y puede coincidir con el tipo genérico correspondiente `Add` y comportamiento del indexador.</span><span class="sxs-lookup"><span data-stu-id="5ae71-121">In this manner, a generic dictionary can be keyed at run time by objects and can match the relevant generic `Add` and indexer behavior.</span></span> <span data-ttu-id="5ae71-122">Sin embargo, como implementada para la base de <xref:System.Xaml.XamlObjectWriter>, esta capacidad existe solo para la creación de gráficos de objeto de la base de <xref:System.Collections.Generic.Dictionary%602> clase y no para las clases derivadas de <xref:System.Collections.Generic.Dictionary%602>.</span><span class="sxs-lookup"><span data-stu-id="5ae71-122">However, as implemented for the base <xref:System.Xaml.XamlObjectWriter>, this capability exists only for object graph creation from the base <xref:System.Collections.Generic.Dictionary%602> class and not for derived classes of <xref:System.Collections.Generic.Dictionary%602>.</span></span>  
  
## <a name="checks-for-disposed"></a><span data-ttu-id="5ae71-123">Busca eliminado</span><span class="sxs-lookup"><span data-stu-id="5ae71-123">Checks for Disposed</span></span>  
 <span data-ttu-id="5ae71-124">Los escritores XAML se usan potencialmente para operaciones diferidas o donde se realiza una llamada en una instancia de sistema de escritura XAML que se ha eliminado en la versión preliminar.</span><span class="sxs-lookup"><span data-stu-id="5ae71-124">XAML writers are potentially used for deferred operations or where a call is made against a XAML writer instance that has been disposed in the interim.</span></span> <span data-ttu-id="5ae71-125">Varias API de <xref:System.Xaml.XamlObjectWriter> podría producir <xref:System.ObjectDisposedException> en estos casos.</span><span class="sxs-lookup"><span data-stu-id="5ae71-125">Various APIs of <xref:System.Xaml.XamlObjectWriter> might throw <xref:System.ObjectDisposedException> in these cases.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xaml.XamlWriter" />
    <altmember cref="T:System.Xaml.XamlObjectReader" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5ae71-126">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlObjectWriter" />.</span><span class="sxs-lookup"><span data-stu-id="5ae71-126">Initializes a new instance of the <see cref="T:System.Xaml.XamlObjectWriter" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlObjectWriter (System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.#ctor(System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (schemaContext As XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlObjectWriter(System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlObjectWriter : System.Xaml.XamlSchemaContext -&gt; System.Xaml.XamlObjectWriter" Usage="new System.Xaml.XamlObjectWriter schemaContext" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="schemaContext"><span data-ttu-id="5ae71-127">Contexto de esquema XAML compartido con el lector XAML que proporciona los nodos para la escritura.</span><span class="sxs-lookup"><span data-stu-id="5ae71-127">A XAML schema context that is shared with the XAML reader that provides nodes for writing.</span></span></param>
        <summary><span data-ttu-id="5ae71-128">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlObjectWriter" /> con el contexto de esquema XAML usado por un <see cref="T:System.Xaml.XamlReader" />.</span><span class="sxs-lookup"><span data-stu-id="5ae71-128">Initializes a new instance of the <see cref="T:System.Xaml.XamlObjectWriter" /> class using  the XAML schema context that is used by a <see cref="T:System.Xaml.XamlReader" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5ae71-129">El valor de <paramref name="schemaContext" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="5ae71-129"><paramref name="schemaContext" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlObjectWriter (System.Xaml.XamlSchemaContext schemaContext, System.Xaml.XamlObjectWriterSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xaml.XamlSchemaContext schemaContext, class System.Xaml.XamlObjectWriterSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.#ctor(System.Xaml.XamlSchemaContext,System.Xaml.XamlObjectWriterSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (schemaContext As XamlSchemaContext, settings As XamlObjectWriterSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlObjectWriter(System::Xaml::XamlSchemaContext ^ schemaContext, System::Xaml::XamlObjectWriterSettings ^ settings);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlObjectWriter : System.Xaml.XamlSchemaContext * System.Xaml.XamlObjectWriterSettings -&gt; System.Xaml.XamlObjectWriter" Usage="new System.Xaml.XamlObjectWriter (schemaContext, settings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
        <Parameter Name="settings" Type="System.Xaml.XamlObjectWriterSettings" />
      </Parameters>
      <Docs>
        <param name="schemaContext"><span data-ttu-id="5ae71-130">Contexto de esquema XAML compartido con el lector XAML que proporciona los nodos para la escritura.</span><span class="sxs-lookup"><span data-stu-id="5ae71-130">A XAML schema context that is shared with the XAML reader that provides nodes for writing.</span></span></param>
        <param name="settings"><span data-ttu-id="5ae71-131">Objeto de configuración que especifica determinadas opciones para el comportamiento y la salida de <see cref="T:System.Xaml.XamlObjectWriter" />.</span><span class="sxs-lookup"><span data-stu-id="5ae71-131">A settings object that specifies certain options for <see cref="T:System.Xaml.XamlObjectWriter" /> behavior and output.</span></span></param>
        <summary><span data-ttu-id="5ae71-132">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlObjectWriter" /> usando el contexto empleado por un <see cref="T:System.Xaml.XamlReader" /> y su configuración.</span><span class="sxs-lookup"><span data-stu-id="5ae71-132">Initializes a new instance of the <see cref="T:System.Xaml.XamlObjectWriter" /> class using the context that is used by a <see cref="T:System.Xaml.XamlReader" /> and its settings.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5ae71-133">El valor de <paramref name="schemaContext" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="5ae71-133"><paramref name="schemaContext" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="xamlObjectWriter.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5ae71-134">Restablece todos los posibles marcos y borra el gráfico de objetos.</span><span class="sxs-lookup"><span data-stu-id="5ae71-134">Resets all possible frames and clears the object graph.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="xamlObjectWriter.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="5ae71-135">Es <see langword="true" /> para liberar los recursos administrados; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5ae71-135"><see langword="true" /> to release the managed resources; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="5ae71-136">Libera los recursos no administrados que usa <see cref="T:System.Xaml.XamlObjectWriter" /> y, de forma opcional, libera los recursos administrados.</span><span class="sxs-lookup"><span data-stu-id="5ae71-136">Releases the unmanaged resources used by the <see cref="T:System.Xaml.XamlObjectWriter" />, and optionally, releases the managed resources.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAfterBeginInit">
      <MemberSignature Language="C#" Value="protected virtual void OnAfterBeginInit (object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAfterBeginInit(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.OnAfterBeginInit(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAfterBeginInit (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAfterBeginInit(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member OnAfterBeginInit : obj -&gt; unit&#xA;override this.OnAfterBeginInit : obj -&gt; unit" Usage="xamlObjectWriter.OnAfterBeginInit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="5ae71-137">Objeto del que se va a informar.</span><span class="sxs-lookup"><span data-stu-id="5ae71-137">The object to report on.</span></span> <span data-ttu-id="5ae71-138">El objeto se empaqueta en <see cref="T:System.Xaml.XamlObjectEventArgs" /> cuando se invoca el controlador.</span><span class="sxs-lookup"><span data-stu-id="5ae71-138">The object is packaged into <see cref="T:System.Xaml.XamlObjectEventArgs" /> when the handler is invoked.</span></span></param>
        <summary><span data-ttu-id="5ae71-139">Invoca cualquier método <see cref="P:System.Xaml.XamlObjectWriterSettings.AfterBeginInitHandler" /> que esté asociado a <see cref="T:System.Xaml.XamlObjectWriterSettings" /> para este objeto <see cref="T:System.Xaml.XamlObjectWriter" />.</span><span class="sxs-lookup"><span data-stu-id="5ae71-139">Invokes any <see cref="P:System.Xaml.XamlObjectWriterSettings.AfterBeginInitHandler" /> method that is associated with <see cref="T:System.Xaml.XamlObjectWriterSettings" /> for this <see cref="T:System.Xaml.XamlObjectWriter" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAfterEndInit">
      <MemberSignature Language="C#" Value="protected virtual void OnAfterEndInit (object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAfterEndInit(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.OnAfterEndInit(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAfterEndInit (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAfterEndInit(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member OnAfterEndInit : obj -&gt; unit&#xA;override this.OnAfterEndInit : obj -&gt; unit" Usage="xamlObjectWriter.OnAfterEndInit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="5ae71-140">Objeto del que se va a informar.</span><span class="sxs-lookup"><span data-stu-id="5ae71-140">The object to report on.</span></span> <span data-ttu-id="5ae71-141">El valor se empaqueta en <see cref="T:System.Xaml.XamlObjectEventArgs" /> cuando se invoca el controlador.</span><span class="sxs-lookup"><span data-stu-id="5ae71-141">The value  is packaged into <see cref="T:System.Xaml.XamlObjectEventArgs" /> when the handler is invoked.</span></span></param>
        <summary><span data-ttu-id="5ae71-142">Invoca cualquier método <see cref="P:System.Xaml.XamlObjectWriterSettings.AfterEndInitHandler" /> que esté asociado a <see cref="T:System.Xaml.XamlObjectWriterSettings" /> para este objeto <see cref="T:System.Xaml.XamlObjectWriter" />.</span><span class="sxs-lookup"><span data-stu-id="5ae71-142">Invokes any <see cref="P:System.Xaml.XamlObjectWriterSettings.AfterEndInitHandler" /> method that is associated with <see cref="T:System.Xaml.XamlObjectWriterSettings" /> for this <see cref="T:System.Xaml.XamlObjectWriter" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAfterProperties">
      <MemberSignature Language="C#" Value="protected virtual void OnAfterProperties (object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAfterProperties(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.OnAfterProperties(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAfterProperties (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAfterProperties(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member OnAfterProperties : obj -&gt; unit&#xA;override this.OnAfterProperties : obj -&gt; unit" Usage="xamlObjectWriter.OnAfterProperties value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="5ae71-143">Objeto del que se va a informar.</span><span class="sxs-lookup"><span data-stu-id="5ae71-143">The object to report on.</span></span> <span data-ttu-id="5ae71-144">Se empaqueta en <see cref="T:System.Xaml.XamlObjectEventArgs" /> cuando se invoca el controlador.</span><span class="sxs-lookup"><span data-stu-id="5ae71-144">This is packaged into <see cref="T:System.Xaml.XamlObjectEventArgs" /> when the handler is invoked.</span></span></param>
        <summary><span data-ttu-id="5ae71-145">Invoca cualquier método <see cref="P:System.Xaml.XamlObjectWriterSettings.AfterPropertiesHandler" /> al que se haga referencia que esté asociado a <see cref="T:System.Xaml.XamlObjectWriterSettings" /> para este objeto <see cref="T:System.Xaml.XamlObjectWriter" />.</span><span class="sxs-lookup"><span data-stu-id="5ae71-145">Invokes any <see cref="P:System.Xaml.XamlObjectWriterSettings.AfterPropertiesHandler" /> referenced method that is associated with <see cref="T:System.Xaml.XamlObjectWriterSettings" /> for this <see cref="T:System.Xaml.XamlObjectWriter" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeforeProperties">
      <MemberSignature Language="C#" Value="protected virtual void OnBeforeProperties (object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBeforeProperties(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.OnBeforeProperties(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnBeforeProperties (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnBeforeProperties(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member OnBeforeProperties : obj -&gt; unit&#xA;override this.OnBeforeProperties : obj -&gt; unit" Usage="xamlObjectWriter.OnBeforeProperties value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="5ae71-146">Valor que se va a pasar a través de <see cref="T:System.Xaml.XamlObjectEventArgs" /> cuando se invoca el controlador.</span><span class="sxs-lookup"><span data-stu-id="5ae71-146">The value to pass through <see cref="T:System.Xaml.XamlObjectEventArgs" /> when the handler is invoked.</span></span></param>
        <summary><span data-ttu-id="5ae71-147">Invoca cualquier método <see cref="P:System.Xaml.XamlObjectWriterSettings.BeforePropertiesHandler" /> al que se haga referencia que esté asociado a <see cref="T:System.Xaml.XamlObjectWriterSettings" /> para este objeto <see cref="T:System.Xaml.XamlObjectWriter" />.</span><span class="sxs-lookup"><span data-stu-id="5ae71-147">Invokes any <see cref="P:System.Xaml.XamlObjectWriterSettings.BeforePropertiesHandler" /> referenced method that is associated with <see cref="T:System.Xaml.XamlObjectWriterSettings" /> for this <see cref="T:System.Xaml.XamlObjectWriter" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSetValue">
      <MemberSignature Language="C#" Value="protected virtual bool OnSetValue (object eventSender, System.Xaml.XamlMember member, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnSetValue(object eventSender, class System.Xaml.XamlMember member, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.OnSetValue(System.Object,System.Xaml.XamlMember,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnSetValue (eventSender As Object, member As XamlMember, value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool OnSetValue(System::Object ^ eventSender, System::Xaml::XamlMember ^ member, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member OnSetValue : obj * System.Xaml.XamlMember * obj -&gt; bool&#xA;override this.OnSetValue : obj * System.Xaml.XamlMember * obj -&gt; bool" Usage="xamlObjectWriter.OnSetValue (eventSender, member, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventSender" Type="System.Object" />
        <Parameter Name="member" Type="System.Xaml.XamlMember" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="eventSender"><span data-ttu-id="5ae71-148">Objeto que se va a notificar al controlador como origen.</span><span class="sxs-lookup"><span data-stu-id="5ae71-148">The object to report as the source to the handler.</span></span></param>
        <param name="member"><span data-ttu-id="5ae71-149">Nombre de la propiedad que se va a establecer, que se pasa al controlador como parte de <see cref="T:System.Windows.Markup.XamlSetValueEventArgs" />.</span><span class="sxs-lookup"><span data-stu-id="5ae71-149">The name of the property to set, which is passed to the handler as part of <see cref="T:System.Windows.Markup.XamlSetValueEventArgs" />.</span></span></param>
        <param name="value"><span data-ttu-id="5ae71-150">Valor que se va a proporcionar para la propiedad designada por <paramref name="property" />.</span><span class="sxs-lookup"><span data-stu-id="5ae71-150">The value to provide for the property that is named by <paramref name="property" />.</span></span> <span data-ttu-id="5ae71-151">El valor se pasa al controlador como parte de <see cref="T:System.Windows.Markup.XamlSetValueEventArgs" />.</span><span class="sxs-lookup"><span data-stu-id="5ae71-151">The value is passed to the handler as part of <see cref="T:System.Windows.Markup.XamlSetValueEventArgs" />.</span></span></param>
        <summary><span data-ttu-id="5ae71-152">Invoca cualquier método <see cref="P:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler" /> al que se haga referencia que esté asociado al objeto <see cref="T:System.Xaml.XamlObjectWriterSettings" /> de este sistema de escritura siempre y cuando el valor de <paramref name="handled" /> de los datos de evento de <see cref="T:System.Windows.Markup.XamlSetValueEventArgs" /> no sea <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="5ae71-152">Invokes any <see cref="P:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler" /> referenced method that is associated with <see cref="T:System.Xaml.XamlObjectWriterSettings" /> for this writer, as long as <paramref name="handled" /> in <see cref="T:System.Windows.Markup.XamlSetValueEventArgs" /> event data is not <see langword="true" />.</span></span></summary>
        <returns><span data-ttu-id="5ae71-153">Valor booleano establecido por cualquier controlador asociado; de lo contrario, devuelve <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5ae71-153">A Boolean value that is set by any associated handler; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ae71-154">Si el `SetValue` operación para este sistema de escritura XAML tiene un controlador asociado (un <xref:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler%2A> se declara en <xref:System.Xaml.XamlObjectWriterSettings>), este método crea un nuevo <xref:System.Windows.Markup.XamlSetValueEventArgs> y los pasa al controlador.</span><span class="sxs-lookup"><span data-stu-id="5ae71-154">If the `SetValue` operation for this XAML writer has an associated handler (a <xref:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler%2A> is declared in <xref:System.Xaml.XamlObjectWriterSettings>), this method creates new <xref:System.Windows.Markup.XamlSetValueEventArgs> and passes them to the handler.</span></span> <span data-ttu-id="5ae71-155">El valor devuelto se establece leyendo la <xref:System.Windows.Markup.XamlSetValueEventArgs.Handled%2A> valor que se pasa a través de los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="5ae71-155">The return value is set by reading the <xref:System.Windows.Markup.XamlSetValueEventArgs.Handled%2A> value that is passed through the event data.</span></span> <span data-ttu-id="5ae71-156">Si no hay ningún controlador existe y se invoca este método, la llamada devuelve `false`.</span><span class="sxs-lookup"><span data-stu-id="5ae71-156">If no handler exists and this method is invoked, the call returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Result">
      <MemberSignature Language="C#" Value="public virtual object Result { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Result" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlObjectWriter.Result" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Result As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ Result { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Result : obj" Usage="System.Xaml.XamlObjectWriter.Result" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5ae71-157">Obtiene el último objeto que se escribió.</span><span class="sxs-lookup"><span data-stu-id="5ae71-157">Gets the last object that was written.</span></span> <span data-ttu-id="5ae71-158">Normalmente, se llama únicamente cuando la secuencia de nodos está llegando al final y el gráfico de objeto está completado.</span><span class="sxs-lookup"><span data-stu-id="5ae71-158">Typically only called when the node stream is at its end and the object graph is complete.</span></span></summary>
        <value><span data-ttu-id="5ae71-159">Último objeto escrito o <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="5ae71-159">The last object written, or <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ae71-160">El uso más habitual de <xref:System.Xaml.XamlObjectWriter.Result%2A> es llamarla solo cuando el flujo de nodo se sabe que está en su extremo, y el gráfico de objetos completo.</span><span class="sxs-lookup"><span data-stu-id="5ae71-160">The most typical usage of <xref:System.Xaml.XamlObjectWriter.Result%2A> is to call it only when the node stream is known to be at its end, and the object graph is complete.</span></span> <span data-ttu-id="5ae71-161">En caso contrario, el gráfico de objetos es probable que sea incompleto y no es útil para la mayoría de los escenarios de plataforma.</span><span class="sxs-lookup"><span data-stu-id="5ae71-161">Otherwise, the object graph is likely to be incomplete, and is not useful for most platform scenarios.</span></span>  
  
 <span data-ttu-id="5ae71-162"><xref:System.Xaml.XamlObjectWriter.Result%2A> Normalmente, solo contiene un valor distinto de null si se llama inmediatamente después de llamar a <xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A>, y si el ámbito actual está en el que el objeto proporciona un valor de miembro.</span><span class="sxs-lookup"><span data-stu-id="5ae71-162"><xref:System.Xaml.XamlObjectWriter.Result%2A> typically only contains a non-null value if it is called immediately after a call to <xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A>, and if the current scope is in the member where the object provides a value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RootNameScope">
      <MemberSignature Language="C#" Value="public System.Windows.Markup.INameScope RootNameScope { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Markup.INameScope RootNameScope" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlObjectWriter.RootNameScope" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RootNameScope As INameScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Markup::INameScope ^ RootNameScope { System::Windows::Markup::INameScope ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RootNameScope : System.Windows.Markup.INameScope" Usage="System.Xaml.XamlObjectWriter.RootNameScope" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Markup.INameScope</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5ae71-163">Obtiene el servicio <see cref="T:System.Windows.Markup.INameScope" /> que mantiene el ámbito de nombres XAML para la raíz del nodo absoluto del sistema de escritura de objetos XAML.</span><span class="sxs-lookup"><span data-stu-id="5ae71-163">Gets the <see cref="T:System.Windows.Markup.INameScope" /> service that maintains the XAML namescope for the absolute node root of the XAML object writer.</span></span></summary>
        <value><span data-ttu-id="5ae71-164">Servicio <see cref="T:System.Windows.Markup.INameScope" /> que mantiene el ámbito de nombres XAML para la raíz actual del sistema de escritura de objetos.</span><span class="sxs-lookup"><span data-stu-id="5ae71-164">The <see cref="T:System.Windows.Markup.INameScope" /> service that maintains the XAML namescope for the current root of the object writer.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ae71-165">El valor de esta propiedad puede proceder del contexto de sistema de escritura del objeto.</span><span class="sxs-lookup"><span data-stu-id="5ae71-165">The value of this property may come from the object writer context.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SchemaContext">
      <MemberSignature Language="C#" Value="public override System.Xaml.XamlSchemaContext SchemaContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlSchemaContext SchemaContext" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlObjectWriter.SchemaContext" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property SchemaContext As XamlSchemaContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xaml::XamlSchemaContext ^ SchemaContext { System::Xaml::XamlSchemaContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SchemaContext : System.Xaml.XamlSchemaContext" Usage="System.Xaml.XamlObjectWriter.SchemaContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlSchemaContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5ae71-166">Obtiene el contexto de esquema XAML activo.</span><span class="sxs-lookup"><span data-stu-id="5ae71-166">Gets the active XAML schema context.</span></span></summary>
        <value><span data-ttu-id="5ae71-167">Contexto de esquema XAML.</span><span class="sxs-lookup"><span data-stu-id="5ae71-167">The XAML schema context.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ae71-168">Contexto de esquema XAML es un origen de la información necesaria para escenarios más prácticos de escritura de objeto.</span><span class="sxs-lookup"><span data-stu-id="5ae71-168">XAML schema context is a necessary information source for most practical object-writing scenarios.</span></span> <span data-ttu-id="5ae71-169">El contexto de esquema XAML influye en la búsqueda de tipos de respaldo y contiene información sobre los ensamblados donde existen los tipos de respaldo.</span><span class="sxs-lookup"><span data-stu-id="5ae71-169">The XAML schema context influences the type lookup for backing types and holds information about the assemblies where backing types exist.</span></span> <span data-ttu-id="5ae71-170">El contexto de esquema XAML predeterminado se basa en las reglas de asignación de tipos CLR.</span><span class="sxs-lookup"><span data-stu-id="5ae71-170">The default XAML schema context is based on CLR type-mapping rules.</span></span> <span data-ttu-id="5ae71-171">Marcos de trabajo suelen proporcionan su propio contexto de esquema XAML con el fin de garantizar que los mecanismos de carga del ensamblado coinciden con los modelos de aplicación de amd programación de .NET framework.</span><span class="sxs-lookup"><span data-stu-id="5ae71-171">Frameworks typically provide their own XAML schema context in order to assure that the assembly-loading mechanisms match the framework's programming amd application models.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetLineInfo">
      <MemberSignature Language="C#" Value="public void SetLineInfo (int lineNumber, int linePosition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetLineInfo(int32 lineNumber, int32 linePosition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.SetLineInfo(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetLineInfo (lineNumber As Integer, linePosition As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetLineInfo(int lineNumber, int linePosition);" />
      <MemberSignature Language="F#" Value="abstract member SetLineInfo : int * int -&gt; unit&#xA;override this.SetLineInfo : int * int -&gt; unit" Usage="xamlObjectWriter.SetLineInfo (lineNumber, linePosition)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xaml.IXamlLineInfoConsumer.SetLineInfo(System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lineNumber" Type="System.Int32" />
        <Parameter Name="linePosition" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="lineNumber"><span data-ttu-id="5ae71-172">Número de línea del lector.</span><span class="sxs-lookup"><span data-stu-id="5ae71-172">The line number from the reader.</span></span></param>
        <param name="linePosition"><span data-ttu-id="5ae71-173">Posición de línea del lector.</span><span class="sxs-lookup"><span data-stu-id="5ae71-173">The line position from the reader.</span></span></param>
        <summary><span data-ttu-id="5ae71-174">Implementa <see cref="M:System.Xaml.IXamlLineInfoConsumer.SetLineInfo(System.Int32,System.Int32)" /> y proporciona información de línea para las excepciones.</span><span class="sxs-lookup"><span data-stu-id="5ae71-174">Implements <see cref="M:System.Xaml.IXamlLineInfoConsumer.SetLineInfo(System.Int32,System.Int32)" /> and provides line information for exceptions.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ae71-175">Este método de servicio no está pensado para llamarse directamente desde el código.</span><span class="sxs-lookup"><span data-stu-id="5ae71-175">This service method is not intended to be called directly from your code.</span></span> <span data-ttu-id="5ae71-176">Sin embargo, si está creando una clase derivada de <xref:System.Xaml.XamlObjectWriter> y esperan informar de un contexto donde los números de línea no están disponibles o no útil, es posible que se llama a este método.</span><span class="sxs-lookup"><span data-stu-id="5ae71-176">However, if you are creating a derived class from <xref:System.Xaml.XamlObjectWriter> and expect to report a context where line numbers are unavailable or not useful, this method may be called.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldProvideLineInfo">
      <MemberSignature Language="C#" Value="public bool ShouldProvideLineInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShouldProvideLineInfo" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlObjectWriter.ShouldProvideLineInfo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ShouldProvideLineInfo As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShouldProvideLineInfo { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ShouldProvideLineInfo : bool" Usage="System.Xaml.XamlObjectWriter.ShouldProvideLineInfo" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Xaml.IXamlLineInfoConsumer.ShouldProvideLineInfo</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5ae71-177">Obtiene un valor que indica si un servicio de información de línea debe proporcionar valores y, por tanto, debe llamar también al método <see cref="M:System.Xaml.IXamlLineInfoConsumer.SetLineInfo(System.Int32,System.Int32)" /> cuando proceda.</span><span class="sxs-lookup"><span data-stu-id="5ae71-177">Gets a value that reports whether a line information service should provide values and therefore, should also call the <see cref="M:System.Xaml.IXamlLineInfoConsumer.SetLineInfo(System.Int32,System.Int32)" /> method when it is relevant.</span></span></summary>
        <value><span data-ttu-id="5ae71-178">Es <see langword="true" /> si el sistema de escritura usa información de línea; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5ae71-178"><see langword="true" /> if line information is used by the writer; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ae71-179">En esta implementación, siempre se devuelve `true`.</span><span class="sxs-lookup"><span data-stu-id="5ae71-179">This implementation always returns `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEndMember">
      <MemberSignature Language="C#" Value="public override void WriteEndMember ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteEndMember() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.WriteEndMember" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteEndMember ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteEndMember();" />
      <MemberSignature Language="F#" Value="override this.WriteEndMember : unit -&gt; unit" Usage="xamlObjectWriter.WriteEndMember " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5ae71-180">Cierra el ámbito de miembro actual y puede escribir el valor del ámbito de miembro mientras se cierra.</span><span class="sxs-lookup"><span data-stu-id="5ae71-180">Closes the current member scope, and may write the value of the member scope while it closes.</span></span> <span data-ttu-id="5ae71-181">El nuevo ámbito se convierte en el ámbito de objeto primario del miembro.</span><span class="sxs-lookup"><span data-stu-id="5ae71-181">The new scope becomes the parent object scope of the member.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Xaml.XamlObjectWriterException"><span data-ttu-id="5ae71-182">Error al crear el valor de miembro a partir de un nodo de valor que se encuentra entre esta llamada y <see langword="StartMember" /> anterior.</span><span class="sxs-lookup"><span data-stu-id="5ae71-182">Failed to create member value from a value node that is encountered between this call and a previous <see langword="StartMember" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEndObject">
      <MemberSignature Language="C#" Value="public override void WriteEndObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteEndObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.WriteEndObject" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteEndObject ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteEndObject();" />
      <MemberSignature Language="F#" Value="override this.WriteEndObject : unit -&gt; unit" Usage="xamlObjectWriter.WriteEndObject " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5ae71-183">Cierra el ámbito de objeto actual en el sistema de escritura.</span><span class="sxs-lookup"><span data-stu-id="5ae71-183">Closes the current object scope in the writer.</span></span> <span data-ttu-id="5ae71-184">El ámbito de objeto nuevo pasa a ser el ámbito del miembro primario.</span><span class="sxs-lookup"><span data-stu-id="5ae71-184">The new object scope becomes the parent member scope.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ae71-185">Si este `EndObject` posición ámbito está cerrando el objeto raíz, el nuevo ámbito de objeto se convierte en el ámbito raíz.</span><span class="sxs-lookup"><span data-stu-id="5ae71-185">If this `EndObject` position scope is closing the root object, the new object scope becomes the root scope.</span></span>  
  
 <span data-ttu-id="5ae71-186">La llamada a <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> es posible que aún no haya creado el objeto ya un miembro de objeto puede ser una ruta de inicialización necesaria, como texto de inicialización o los parámetros de inicialización.</span><span class="sxs-lookup"><span data-stu-id="5ae71-186">The call to <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> might not yet have created the object because an object member might be a necessary initialization pathway, such as initialization text or initialization parameters.</span></span> <span data-ttu-id="5ae71-187">En estos casos, la llamada a <xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A> escribe realmente el objeto.</span><span class="sxs-lookup"><span data-stu-id="5ae71-187">For these cases, the call to <xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A> actually writes the object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteGetObject">
      <MemberSignature Language="C#" Value="public override void WriteGetObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteGetObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.WriteGetObject" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteGetObject ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteGetObject();" />
      <MemberSignature Language="F#" Value="override this.WriteGetObject : unit -&gt; unit" Usage="xamlObjectWriter.WriteGetObject " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5ae71-188">Escribe el elemento <see langword="StartObject" /> conceptual en el gráfico de objeto cuando el objeto especificado se corresponde con el valor predeterminado o implícito de la propiedad primaria.</span><span class="sxs-lookup"><span data-stu-id="5ae71-188">Writes the conceptual <see langword="StartObject" /> into the object graph when the specified object is a default or implicit value of the parent property.</span></span> <span data-ttu-id="5ae71-189">El valor implícito procede de la información obtenida del contexto de esquema XAML y de la información sobre los tipos de respaldo, en lugar de especificarse como un valor de objeto en el conjunto de nodos XAML de entrada.</span><span class="sxs-lookup"><span data-stu-id="5ae71-189">The implicit value comes from information that is obtained from the XAML schema context and backing type information, instead of being specified as an object value in the input XAML node set.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ae71-190">La diferencia entre escribir con <xref:System.Xaml.XamlObjectWriter.WriteGetObject%2A> y escribir con <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> puede verse en el gráfico de objetos resultante.</span><span class="sxs-lookup"><span data-stu-id="5ae71-190">The difference between writing with <xref:System.Xaml.XamlObjectWriter.WriteGetObject%2A> and writing with <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> can be seen in the resulting object graph.</span></span> <span data-ttu-id="5ae71-191"><xref:System.Xaml.XamlObjectWriter.WriteGetObject%2A> no se construye una instancia de un tipo porque el <xref:System.Xaml.XamlObjectWriter.WriteGetObject%2A> API no tiene ninguna información para informar de lo que construir el gráfico de objetos.</span><span class="sxs-lookup"><span data-stu-id="5ae71-191"><xref:System.Xaml.XamlObjectWriter.WriteGetObject%2A> does not construct an instance of a type because the <xref:System.Xaml.XamlObjectWriter.WriteGetObject%2A> API has no information to inform the object graph of what to construct.</span></span> <span data-ttu-id="5ae71-192">En su lugar, se creó el objeto cuando se inicializó la propiedad primaria; por lo que un <xref:System.Xaml.XamlObjectWriter> no es necesario que construirla.</span><span class="sxs-lookup"><span data-stu-id="5ae71-192">Instead, the object was created when the parent property was initialized; so a <xref:System.Xaml.XamlObjectWriter> does not need to construct it.</span></span> <span data-ttu-id="5ae71-193">En cambio, <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> especifica que una instancia de ese tipo debe ser construida e insertar en el gráfico de objetos.</span><span class="sxs-lookup"><span data-stu-id="5ae71-193">In contrast, <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> specifies that an instance of that type should be constructed and inserted into the object graph.</span></span>  
  
 <span data-ttu-id="5ae71-194">Si piensa en el flujo de nodo XAML como una serie de marcos, un <xref:System.Xaml.XamlObjectWriter.WriteGetObject%2A> es equilibrada en un <xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A> llamar.</span><span class="sxs-lookup"><span data-stu-id="5ae71-194">If you think of the XAML node stream as a series of frames, a <xref:System.Xaml.XamlObjectWriter.WriteGetObject%2A> is balanced to a <xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A> call.</span></span> <span data-ttu-id="5ae71-195">Por lo tanto, el número de <xref:System.Xaml.XamlObjectWriter.WriteGetObject%2A> plus <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> es igual al número de llamadas <xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A> llama como parte de una evaluación completa de escritura de objeto del flujo de nodo XAML.</span><span class="sxs-lookup"><span data-stu-id="5ae71-195">Therefore, the number of <xref:System.Xaml.XamlObjectWriter.WriteGetObject%2A> plus <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> calls should equal the number of <xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A> calls as part of a complete object-writing evaluation of the XAML node stream.</span></span>  
  
 <span data-ttu-id="5ae71-196">Conceptual `StartObject` posición para un objeto implícito en el gráfico de objetos es necesario porque aunque el propio valor de objeto es un valor predeterminado implícito, ese objeto todavía podría tener miembros que deben escribirse basándose en el flujo de nodo XAML.</span><span class="sxs-lookup"><span data-stu-id="5ae71-196">The conceptual `StartObject` position for an implicit object in the object graph is necessary because although the object value itself is an implicit default, that object might still have members that need to be written based on the XAML node stream.</span></span> <span data-ttu-id="5ae71-197">Es un escenario típico que esto ocurre cuando <xref:System.Xaml.XamlObjectWriter> escribe los nodos de miembro para una propiedad de colección y la inicialización de la colección es implícito al crear el objeto que posee la propiedad de colección.</span><span class="sxs-lookup"><span data-stu-id="5ae71-197">A typical scenario where this occurs is when <xref:System.Xaml.XamlObjectWriter> writes member nodes for a collection property, and the collection initialization is implicit to creating the object that owns the collection property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteNamespace">
      <MemberSignature Language="C#" Value="public override void WriteNamespace (System.Xaml.NamespaceDeclaration namespaceDeclaration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteNamespace(class System.Xaml.NamespaceDeclaration namespaceDeclaration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.WriteNamespace(System.Xaml.NamespaceDeclaration)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteNamespace(System::Xaml::NamespaceDeclaration ^ namespaceDeclaration);" />
      <MemberSignature Language="F#" Value="override this.WriteNamespace : System.Xaml.NamespaceDeclaration -&gt; unit" Usage="xamlObjectWriter.WriteNamespace namespaceDeclaration" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="namespaceDeclaration" Type="System.Xaml.NamespaceDeclaration" />
      </Parameters>
      <Docs>
        <param name="namespaceDeclaration"><span data-ttu-id="5ae71-198">Declaración de espacio de nombres que se va a escribir.</span><span class="sxs-lookup"><span data-stu-id="5ae71-198">The namespace declaration to write.</span></span></param>
        <summary><span data-ttu-id="5ae71-199">Define una declaración de espacio de nombres que se aplica al siguiente ámbito de objeto o ámbito de miembro.</span><span class="sxs-lookup"><span data-stu-id="5ae71-199">Defines a namespace declaration that applies to the next object scope or member scope.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ae71-200">Si el ámbito actual es un ámbito raíz, el ámbito de objeto o el ámbito de miembro, se puede escribir una declaración de espacio de nombres.</span><span class="sxs-lookup"><span data-stu-id="5ae71-200">A namespace declaration can be written if the current scope is a root scope, object scope, or member scope.</span></span> <span data-ttu-id="5ae71-201">Sin embargo, <xref:System.Xaml.XamlObjectWriter.WriteNamespace%2A> solo se puede llamar inmediatamente antes de una llamada a uno de los siguientes: <xref:System.Xaml.XamlObjectWriter.WriteNamespace%2A>, <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A>, o <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A>.</span><span class="sxs-lookup"><span data-stu-id="5ae71-201">However, <xref:System.Xaml.XamlObjectWriter.WriteNamespace%2A> can only be called immediately before a call to one of the following: <xref:System.Xaml.XamlObjectWriter.WriteNamespace%2A>, <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A>, or <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A>.</span></span> <span data-ttu-id="5ae71-202">El consecutivos <xref:System.Xaml.XamlObjectWriter.WriteNamespace%2A> caso es para escribir varias declaraciones de espacio de nombres en el mismo nodo.</span><span class="sxs-lookup"><span data-stu-id="5ae71-202">The consecutive <xref:System.Xaml.XamlObjectWriter.WriteNamespace%2A> case is for writing multiple namespace declarations to the same node.</span></span> <span data-ttu-id="5ae71-203">Finalmente, ya sea <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> o <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A> debe llamarse.</span><span class="sxs-lookup"><span data-stu-id="5ae71-203">Eventually, either <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> or <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A> must be called.</span></span>  
  
 <span data-ttu-id="5ae71-204"><xref:System.Xaml.XamlObjectWriter.WriteNamespace%2A> no utiliza un `Start` / `End` metáfora.</span><span class="sxs-lookup"><span data-stu-id="5ae71-204"><xref:System.Xaml.XamlObjectWriter.WriteNamespace%2A> does not use a `Start`/`End` metaphor.</span></span> <span data-ttu-id="5ae71-205">Aunque un espacio de nombres XAML tiene miembros en el sentido de representación de CLR, los miembros se conocen y no es necesario para representarse como un tipo especial de <xref:System.Xaml.XamlMember> para la extensibilidad.</span><span class="sxs-lookup"><span data-stu-id="5ae71-205">Although a XAML namespace has members in the CLR representation sense, the members are known and do not need to be represented as a special type of <xref:System.Xaml.XamlMember> for extensibility.</span></span> <span data-ttu-id="5ae71-206">Para obtener acceso a los valores de un <xref:System.Xaml.NamespaceDeclaration>, tiene acceso a su <xref:System.Xaml.NamespaceDeclaration.Namespace%2A> y <xref:System.Xaml.NamespaceDeclaration.Prefix%2A> propiedades.</span><span class="sxs-lookup"><span data-stu-id="5ae71-206">To access the values of a <xref:System.Xaml.NamespaceDeclaration>, you access its <xref:System.Xaml.NamespaceDeclaration.Namespace%2A> and <xref:System.Xaml.NamespaceDeclaration.Prefix%2A> properties.</span></span>  
  
 <span data-ttu-id="5ae71-207">Una declaración de espacio de nombres puede tener un <xref:System.String.Empty?displayProperty=nameWithType> valor para el prefijo.</span><span class="sxs-lookup"><span data-stu-id="5ae71-207">A namespace declaration may have a <xref:System.String.Empty?displayProperty=nameWithType> value for the prefix.</span></span> <span data-ttu-id="5ae71-208">Un <xref:System.String.Empty?displayProperty=nameWithType> prefijo representa una declaración de espacio de nombres XAML predeterminado.</span><span class="sxs-lookup"><span data-stu-id="5ae71-208">A <xref:System.String.Empty?displayProperty=nameWithType> prefix represents a declaration of the default XAML namespace.</span></span> <span data-ttu-id="5ae71-209">No intente usar un valor nulo para representar el prefijo predeterminado;  produce una excepción en esta API.</span><span class="sxs-lookup"><span data-stu-id="5ae71-209">Do not attempt to use null to represent the default prefix;  it throws an exception in this API.</span></span> <span data-ttu-id="5ae71-210">Para obtener más información, vea <xref:System.Xaml.NamespaceDeclaration>.</span><span class="sxs-lookup"><span data-stu-id="5ae71-210">For more information, see <xref:System.Xaml.NamespaceDeclaration>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5ae71-211">El valor de <paramref name="namespaceDeclaration" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="5ae71-211">The <paramref name="namespaceDeclaration" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="5ae71-212">Un componente de <paramref name="namespaceDeclaration" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="5ae71-212">A component of <paramref name="namespaceDeclaration" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Xaml.XamlObjectReaderException"><span data-ttu-id="5ae71-213">Se ha intentado escribir un ámbito no válido en un nodo de espacio de nombres XAML.</span><span class="sxs-lookup"><span data-stu-id="5ae71-213">Tried to write a XAML namespace node in an invalid scope.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartMember">
      <MemberSignature Language="C#" Value="public override void WriteStartMember (System.Xaml.XamlMember property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteStartMember(class System.Xaml.XamlMember property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.WriteStartMember(System.Xaml.XamlMember)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteStartMember (property As XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteStartMember(System::Xaml::XamlMember ^ property);" />
      <MemberSignature Language="F#" Value="override this.WriteStartMember : System.Xaml.XamlMember -&gt; unit" Usage="xamlObjectWriter.WriteStartMember property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Xaml.XamlMember" />
      </Parameters>
      <Docs>
        <param name="property"><span data-ttu-id="5ae71-214">Propiedad XAML que se va a escribir.</span><span class="sxs-lookup"><span data-stu-id="5ae71-214">The XAML property to write.</span></span> <span data-ttu-id="5ae71-215">Normalmente se obtiene este valor de un lector XAML a través de la secuencia de nodos XAML.</span><span class="sxs-lookup"><span data-stu-id="5ae71-215">Typically you obtain this value from a XAML reader through the XAML node stream intermediate.</span></span></param>
        <summary><span data-ttu-id="5ae71-216">Escribe un nuevo nodo de miembro en el ámbito de objeto actual y el ámbito pasa a ser un nuevo ámbito de miembro.</span><span class="sxs-lookup"><span data-stu-id="5ae71-216">Writes a new member node into the current object scope, and the scope becomes a new member scope.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!TIP]
>  <span data-ttu-id="5ae71-217">Esté atento a una <xref:System.Xaml.XamlDuplicateMemberException>, que se produce cuando la misma propiedad XAML se establece dos veces en el XAML de entrada.</span><span class="sxs-lookup"><span data-stu-id="5ae71-217">Watch for a <xref:System.Xaml.XamlDuplicateMemberException>, which occurs when the same XAML property is set twice in the XAML input.</span></span> <span data-ttu-id="5ae71-218">En casos más sencillos, como cuando la misma propiedad se establece en la sintaxis de atributo y sintaxis de elemento de propiedad, puede ver fácilmente esta excepción en el marcado de entrada.</span><span class="sxs-lookup"><span data-stu-id="5ae71-218">In simple cases, such as when the same property is set in both attribute syntax and property element syntax, you can easily see this exception in the input markup.</span></span> <span data-ttu-id="5ae71-219">Sin embargo, pueden producirse casos más sutiles que son más difíciles de detectar.</span><span class="sxs-lookup"><span data-stu-id="5ae71-219">However, more subtle cases can occur that are more difficult to spot.</span></span> <span data-ttu-id="5ae71-220">Por ejemplo, podría producirse esta excepción si se establece una propiedad de contenido XAML, si implica las propiedades de ambiente en XAML, y si una propiedad que permite un uso de asociaciones y un uso de la instancia.</span><span class="sxs-lookup"><span data-stu-id="5ae71-220">For example, this exception might occur if you set a XAML content property, if you involve XAML ambient properties, and if a property enables both an attachable usage and an instance usage.</span></span> <span data-ttu-id="5ae71-221">En las fases de depuración de desarrollo, a menudo puede encontrar esta excepción mediante la visualización de la representación intermedia de nodo XAML que se conecta el marcado de lectura y escritura del gráfico de objeto.</span><span class="sxs-lookup"><span data-stu-id="5ae71-221">In the debugging phases of development, you can often locate this exception by viewing the intermediate XAML node representation that connects the markup read and the object graph write.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xaml.XamlObjectWriterException"><span data-ttu-id="5ae71-222"><paramref name="property" /> tiene <see cref="P:System.Xaml.XamlMember.IsUnknown" /> establecido en <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="5ae71-222"><paramref name="property" /> has <see cref="P:System.Xaml.XamlMember.IsUnknown" /> set to <see langword="true" />.</span></span>  
  
<span data-ttu-id="5ae71-223">O bien</span><span class="sxs-lookup"><span data-stu-id="5ae71-223">-or-</span></span> 
 <span data-ttu-id="5ae71-224"><see cref="P:System.Xaml.XamlLanguage.UnknownContent" /> pasó, lo que indica que la secuencia de nodo de XAML contenía contenido para un objeto que no admite contenido.</span><span class="sxs-lookup"><span data-stu-id="5ae71-224"><see cref="P:System.Xaml.XamlLanguage.UnknownContent" /> passed, which indicates that the XAML node stream contained content for an object that does not support content.</span></span>  
  
<span data-ttu-id="5ae71-225">O bien</span><span class="sxs-lookup"><span data-stu-id="5ae71-225">-or-</span></span> 
<span data-ttu-id="5ae71-226">Se ha intentado escribir un ámbito no válido en un miembro de inicio.</span><span class="sxs-lookup"><span data-stu-id="5ae71-226">Attempted to write a start member in an invalid scope.</span></span></exception>
        <exception cref="T:System.Xaml.XamlDuplicateMemberException"><span data-ttu-id="5ae71-227"><paramref name="property" /> especifica una propiedad que ya está explícitamente establecida en el ámbito del objeto primario.</span><span class="sxs-lookup"><span data-stu-id="5ae71-227"><paramref name="property" /> specifies a property that is already explicitly set in the parent object scope.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5ae71-228">El valor de <paramref name="property" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="5ae71-228"><paramref name="property" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartObject">
      <MemberSignature Language="C#" Value="public override void WriteStartObject (System.Xaml.XamlType xamlType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteStartObject(class System.Xaml.XamlType xamlType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.WriteStartObject(System.Xaml.XamlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteStartObject(System::Xaml::XamlType ^ xamlType);" />
      <MemberSignature Language="F#" Value="override this.WriteStartObject : System.Xaml.XamlType -&gt; unit" Usage="xamlObjectWriter.WriteStartObject xamlType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlType" Type="System.Xaml.XamlType" />
      </Parameters>
      <Docs>
        <param name="xamlType"><span data-ttu-id="5ae71-229">Tipo que se va a escribir.</span><span class="sxs-lookup"><span data-stu-id="5ae71-229">The type to write.</span></span> <span data-ttu-id="5ae71-230">Este valor suele obtenerse de un lector XAML.</span><span class="sxs-lookup"><span data-stu-id="5ae71-230">Typically you obtain this value from a XAML reader.</span></span></param>
        <summary><span data-ttu-id="5ae71-231">Escribe un nodo de objeto en el ámbito actual y establece el ámbito en un nuevo ámbito de objeto.</span><span class="sxs-lookup"><span data-stu-id="5ae71-231">Writes an object node into the current scope, and sets the scope to a new object scope.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Xaml.XamlObjectWriterException"><span data-ttu-id="5ae71-232">Procesamiento de un tipo <see cref="P:System.Xaml.XamlType.IsUnknown" /> y no se puede crear un objeto.</span><span class="sxs-lookup"><span data-stu-id="5ae71-232">Processing an <see cref="P:System.Xaml.XamlType.IsUnknown" /> type and cannot create an object.</span></span>  
  
<span data-ttu-id="5ae71-233">O bien</span><span class="sxs-lookup"><span data-stu-id="5ae71-233">-or-</span></span> 
<span data-ttu-id="5ae71-234">Se ha intentado escribir un ámbito no válido en un objeto de inicio.</span><span class="sxs-lookup"><span data-stu-id="5ae71-234">Attempted to write a start object in an invalid scope.</span></span></exception>
        <exception cref="T:System.Xaml.XamlParseException"><span data-ttu-id="5ae71-235">Se ha intentado escribir el objeto raíz cuando el objeto raíz ya se había proporcionado en la configuración.</span><span class="sxs-lookup"><span data-stu-id="5ae71-235">Attempted to write a root object when the root object was already provided in the settings.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5ae71-236">El valor de <paramref name="xamlType" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="5ae71-236"><paramref name="xamlType" /> is <see langword="null" />.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="5ae71-237">Si el ámbito actual está dentro de una colección, diccionario o matriz, la nueva instancia debe agregarse a la colección, diccionario o matriz mediante la <see langword="Add" /> método del tipo relevante.</span><span class="sxs-lookup"><span data-stu-id="5ae71-237">If the current scope is inside a collection, dictionary, or array, the new instance should be added to the collection, dictionary, or array by using the <see langword="Add" /> method of the relevant type.</span></span> <span data-ttu-id="5ae71-238">En caso contrario, el miembro debe asignarse a la nueva instancia.</span><span class="sxs-lookup"><span data-stu-id="5ae71-238">Otherwise, the member should be assigned to the new instance.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="WriteValue">
      <MemberSignature Language="C#" Value="public override void WriteValue (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteValue(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.WriteValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteValue (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteValue(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.WriteValue : obj -&gt; unit" Usage="xamlObjectWriter.WriteValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="5ae71-239">Valor que se va a escribir.</span><span class="sxs-lookup"><span data-stu-id="5ae71-239">The value to write.</span></span></param>
        <summary><span data-ttu-id="5ae71-240">Escribe un valor en el ámbito de miembro actual.</span><span class="sxs-lookup"><span data-stu-id="5ae71-240">Writes a value to the current member scope.</span></span> <span data-ttu-id="5ae71-241">Si el ámbito actual está en un objeto de colección, diccionario o matriz, el valor debe agregarse a la colección, el diccionario o la matriz.</span><span class="sxs-lookup"><span data-stu-id="5ae71-241">If the current scope is inside a collection, dictionary, or array object, the value should be added to the collection, dictionary, or array.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Xaml.XamlObjectWriterException"><span data-ttu-id="5ae71-242">Se ha intentado escribir un ámbito no válido en un valor.</span><span class="sxs-lookup"><span data-stu-id="5ae71-242">Attempted to write a value in an invalid scope.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
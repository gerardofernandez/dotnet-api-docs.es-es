<Type Name="XamlType" FullName="System.Xaml.XamlType">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5f660970c55af6a8e8be700e1df5ac2c266d1596" /><Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="11/20/2018" /><Meta Name="ms.locfileid" Value="52254553" /></Metadata><TypeSignature Language="C#" Value="public class XamlType : IEquatable&lt;System.Xaml.XamlType&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlType extends System.Object implements class System.IEquatable`1&lt;class System.Xaml.XamlType&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.XamlType" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlType&#xA;Implements IEquatable(Of XamlType)" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlType : IEquatable&lt;System::Xaml::XamlType ^&gt;" />
  <TypeSignature Language="F#" Value="type XamlType = class&#xA;    interface IEquatable&lt;XamlType&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Xaml.XamlType&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="fdbce-101">Informa de los tipos XAML como parte del sistema XAML global implementado en los servicios XAML de .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="fdbce-101">Reports information about XAML types as part of the overall XAML system that is implemented in .NET Framework XAML Services.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdbce-102">Muchas API en el <xref:System.Xaml.XamlType> clase proporcionan información sobre los tipos XAML, donde el concepto que notifican es similar a secciones específicas de la especificación XAML [MS-XAML].</span><span class="sxs-lookup"><span data-stu-id="fdbce-102">Many APIs in the <xref:System.Xaml.XamlType> class provide information about XAML types, where the concept they report on is similar to particular sections of the XAML specification [MS-XAML].</span></span>  
  
 <span data-ttu-id="fdbce-103"><xref:System.Xaml.XamlType> se usa ampliamente en la API de servicios XAML de .NET Framework para notificar información sobre un tipo XAML.</span><span class="sxs-lookup"><span data-stu-id="fdbce-103"><xref:System.Xaml.XamlType> is used extensively in the .NET Framework XAML Services API for reporting information about a XAML type.</span></span> <span data-ttu-id="fdbce-104"><xref:System.Xaml.XamlType> notifica la información que necesita saber acerca de un tipo XAML para trabajar con una instancia o tener acceso a sus miembros desde un flujo de nodo XAML o una representación de XAML similar.</span><span class="sxs-lookup"><span data-stu-id="fdbce-104"><xref:System.Xaml.XamlType> reports the information that you might need to know about a XAML type in order to work with an instance or to access its members from a XAML node stream, or a similar XAML representation.</span></span> <span data-ttu-id="fdbce-105">Sus informes es similar a cómo el <xref:System.Type> en el CLR de sistema de tipos, junto con las clases de reflexión como <xref:System.Reflection.MemberInfo>, proporcionan información sobre un tipo CLR y su uso.</span><span class="sxs-lookup"><span data-stu-id="fdbce-105">Its reporting is similar to how the <xref:System.Type> in the CLR type system, together with reflection classes such as <xref:System.Reflection.MemberInfo>, provide information about a CLR type and its usage.</span></span>  
  
 <span data-ttu-id="fdbce-106">Para extender el sistema de tipos XAML, puede derivar de <xref:System.Xaml.XamlType>.</span><span class="sxs-lookup"><span data-stu-id="fdbce-106">To extend the XAML type system, you can derive from <xref:System.Xaml.XamlType>.</span></span> <span data-ttu-id="fdbce-107">Para hacerlo de forma eficaz, es posible que deba implementar una <xref:System.Xaml.Schema.XamlTypeInvoker>.</span><span class="sxs-lookup"><span data-stu-id="fdbce-107">To do so effectively, you might also need to implement a <xref:System.Xaml.Schema.XamlTypeInvoker>.</span></span> <span data-ttu-id="fdbce-108">El <xref:System.Xaml.Schema.XamlTypeInvoker> permite que el sistema de tipos XAML generalizado trabajar con el sistema de tipos de seguridad que especifique como parte del comportamiento de invocación.</span><span class="sxs-lookup"><span data-stu-id="fdbce-108">The <xref:System.Xaml.Schema.XamlTypeInvoker> enables the generalized XAML type system to work with the type system backing that you specify as part of the invocation behavior.</span></span> <span data-ttu-id="fdbce-109">Personalizado específico <xref:System.Xaml.Schema.XamlTypeInvoker> proporciona una forma de reducir las dependencias en el sistema de tipos CLR, que son usadas por el valor predeterminado <xref:System.Xaml.XamlType> comportamiento.</span><span class="sxs-lookup"><span data-stu-id="fdbce-109">The specific custom <xref:System.Xaml.Schema.XamlTypeInvoker> provides a way to reduce the dependencies on the CLR type system, which are used by the default <xref:System.Xaml.XamlType> behavior.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fdbce-110">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="fdbce-110">Initializes a new instance of the <see cref="T:System.Xaml.XamlType" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlType (Type underlyingType, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type underlyingType, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.#ctor(System.Type,System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (underlyingType As Type, schemaContext As XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlType(Type ^ underlyingType, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlType : Type * System.Xaml.XamlSchemaContext -&gt; System.Xaml.XamlType" Usage="new System.Xaml.XamlType (underlyingType, schemaContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="underlyingType" Type="System.Type" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="underlyingType"><span data-ttu-id="fdbce-111">Objeto <see cref="T:System.Type" /> subyacente de CLR para el tipo XAML que se va a construir.</span><span class="sxs-lookup"><span data-stu-id="fdbce-111">The underlying CLR <see cref="T:System.Type" /> for the XAML type to construct.</span></span></param>
        <param name="schemaContext"><span data-ttu-id="fdbce-112">Contexto de esquema XAML para lectores XAML o sistemas de escritura XAML.</span><span class="sxs-lookup"><span data-stu-id="fdbce-112">XAML schema context for XAML readers or XAML writers.</span></span></param>
        <summary><span data-ttu-id="fdbce-113">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlType" />, basándose en la información del tipo subyacente de CLR.</span><span class="sxs-lookup"><span data-stu-id="fdbce-113">Initializes a new instance of the <see cref="T:System.Xaml.XamlType" /> class based on the underlying CLR type information.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fdbce-114">Uno o varios <paramref name="underlyingType" /> o <paramref name="schemaContext" /> son <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fdbce-114">One or more of <paramref name="underlyingType" /> or <paramref name="schemaContext" /> are <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected XamlType (string typeName, System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; typeArguments, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string typeName, class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlType&gt; typeArguments, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.#ctor(System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (typeName As String, typeArguments As IList(Of XamlType), schemaContext As XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; XamlType(System::String ^ typeName, System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ typeArguments, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlType : string * System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; * System.Xaml.XamlSchemaContext -&gt; System.Xaml.XamlType" Usage="new System.Xaml.XamlType (typeName, typeArguments, schemaContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="typeArguments" Type="System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="typeName"><span data-ttu-id="fdbce-115">Nombre del tipo que se va a crear.</span><span class="sxs-lookup"><span data-stu-id="fdbce-115">The name of the type to create.</span></span></param>
        <param name="typeArguments"><span data-ttu-id="fdbce-116">Argumentos de tipo para un objeto <see cref="T:System.Xaml.XamlType" /> que representa un tipo genérico.</span><span class="sxs-lookup"><span data-stu-id="fdbce-116">The type arguments for a <see cref="T:System.Xaml.XamlType" /> that represents a generic type.</span></span> <span data-ttu-id="fdbce-117">Puede ser (y a menudo es) <see langword="null" />, lo que indica que el tipo representado no es un tipo genérico.</span><span class="sxs-lookup"><span data-stu-id="fdbce-117">Can be (and often is) <see langword="null" />, which indicates that the represented type is not a generic type.</span></span></param>
        <param name="schemaContext"><span data-ttu-id="fdbce-118">Contexto de esquema XAML para lectores XAML y sistemas de escritura XAML.</span><span class="sxs-lookup"><span data-stu-id="fdbce-118">XAML schema context for XAML readers and XAML writers.</span></span></param>
        <summary><span data-ttu-id="fdbce-119">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlType" />, basándose en un nombre de cadena para el tipo.</span><span class="sxs-lookup"><span data-stu-id="fdbce-119">Initializes a new instance of the <see cref="T:System.Xaml.XamlType" /> class based on a string name for the type.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdbce-120">Se trata de un constructor protegido.</span><span class="sxs-lookup"><span data-stu-id="fdbce-120">This is a protected constructor.</span></span> <span data-ttu-id="fdbce-121">Ninguna clase derivada pública actual existe que utilizan esta ruta de acceso determinada para la construcción.</span><span class="sxs-lookup"><span data-stu-id="fdbce-121">No current public derived classes exist that use this particular path for construction.</span></span> <span data-ttu-id="fdbce-122">Como consumidor de existente <xref:System.Xaml.XamlType>, debe usar las otras firmas de constructor (<xref:System.Xaml.XamlType.%23ctor%28System.Type%2CSystem.Xaml.XamlSchemaContext%2CSystem.Xaml.Schema.XamlTypeInvoker%29>, <xref:System.Xaml.XamlType.%23ctor%28System.Type%2CSystem.Xaml.XamlSchemaContext%29>, o <xref:System.Xaml.XamlType.%23ctor%28System.String%2CSystem.String%2CSystem.Collections.Generic.IList%7BSystem.Xaml.XamlType%7D%2CSystem.Xaml.XamlSchemaContext%29>) para inicializar un <xref:System.Xaml.XamlType> objeto.</span><span class="sxs-lookup"><span data-stu-id="fdbce-122">As a consumer of the existing <xref:System.Xaml.XamlType>, you must use the other constructor signatures (<xref:System.Xaml.XamlType.%23ctor%28System.Type%2CSystem.Xaml.XamlSchemaContext%2CSystem.Xaml.Schema.XamlTypeInvoker%29>, <xref:System.Xaml.XamlType.%23ctor%28System.Type%2CSystem.Xaml.XamlSchemaContext%29>, or <xref:System.Xaml.XamlType.%23ctor%28System.String%2CSystem.String%2CSystem.Collections.Generic.IList%7BSystem.Xaml.XamlType%7D%2CSystem.Xaml.XamlSchemaContext%29>) to initialize a <xref:System.Xaml.XamlType> object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fdbce-123">Uno o varios <paramref name="typeName" /> o <paramref name="schemaContext" /> son <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fdbce-123">One or more of <paramref name="typeName" /> or <paramref name="schemaContext" /> are <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlType (Type underlyingType, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.Schema.XamlTypeInvoker invoker);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type underlyingType, class System.Xaml.XamlSchemaContext schemaContext, class System.Xaml.Schema.XamlTypeInvoker invoker) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.#ctor(System.Type,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlTypeInvoker)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (underlyingType As Type, schemaContext As XamlSchemaContext, invoker As XamlTypeInvoker)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlType(Type ^ underlyingType, System::Xaml::XamlSchemaContext ^ schemaContext, System::Xaml::Schema::XamlTypeInvoker ^ invoker);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlType : Type * System.Xaml.XamlSchemaContext * System.Xaml.Schema.XamlTypeInvoker -&gt; System.Xaml.XamlType" Usage="new System.Xaml.XamlType (underlyingType, schemaContext, invoker)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="underlyingType" Type="System.Type" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
        <Parameter Name="invoker" Type="System.Xaml.Schema.XamlTypeInvoker" />
      </Parameters>
      <Docs>
        <param name="underlyingType"><span data-ttu-id="fdbce-124">Tipo subyacente del tipo XAML que se va a construir.</span><span class="sxs-lookup"><span data-stu-id="fdbce-124">The underlying type for the XAML type to construct.</span></span></param>
        <param name="schemaContext"><span data-ttu-id="fdbce-125">Contexto de esquema XAML para el lector XAML.</span><span class="sxs-lookup"><span data-stu-id="fdbce-125">XAML schema context for the XAML reader.</span></span></param>
        <param name="invoker"><span data-ttu-id="fdbce-126">Implementación de <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> que administra las llamadas de reflexión en tiempo de ejecución al objeto <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="fdbce-126">The <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> implementation that handles run-time reflection calls against the <see cref="T:System.Xaml.XamlType" />.</span></span></param>
        <summary><span data-ttu-id="fdbce-127">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlType" />, basándose en la información del tipo subyacente y una implementación de <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span><span class="sxs-lookup"><span data-stu-id="fdbce-127">Initializes a new instance of the <see cref="T:System.Xaml.XamlType" /> class based on underlying type information and a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> implementation.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fdbce-128">Uno o varios <paramref name="underlyingType" /> o <paramref name="schemaContext" /> son <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fdbce-128">One or more of <paramref name="underlyingType" /> or <paramref name="schemaContext" /> are <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlType (string unknownTypeNamespace, string unknownTypeName, System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; typeArguments, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string unknownTypeNamespace, string unknownTypeName, class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlType&gt; typeArguments, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.#ctor(System.String,System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (unknownTypeNamespace As String, unknownTypeName As String, typeArguments As IList(Of XamlType), schemaContext As XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlType(System::String ^ unknownTypeNamespace, System::String ^ unknownTypeName, System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ typeArguments, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlType : string * string * System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; * System.Xaml.XamlSchemaContext -&gt; System.Xaml.XamlType" Usage="new System.Xaml.XamlType (unknownTypeNamespace, unknownTypeName, typeArguments, schemaContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="unknownTypeNamespace" Type="System.String" />
        <Parameter Name="unknownTypeName" Type="System.String" />
        <Parameter Name="typeArguments" Type="System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="unknownTypeNamespace"><span data-ttu-id="fdbce-129">Espacio de nombres XAML del tipo, en forma de cadena.</span><span class="sxs-lookup"><span data-stu-id="fdbce-129">The XAML namespace for the type, as a string.</span></span></param>
        <param name="unknownTypeName"><span data-ttu-id="fdbce-130">Nombre del tipo en el espacio de nombres XAML especificado por el parámetro <paramref name="unknownTypeNamespace" />.</span><span class="sxs-lookup"><span data-stu-id="fdbce-130">The name of the type in the provided <paramref name="unknownTypeNamespace" /> XAML namespace.</span></span></param>
        <param name="typeArguments"><span data-ttu-id="fdbce-131">Argumentos de tipo para un objeto <see cref="T:System.Xaml.XamlType" /> que representa un tipo genérico.</span><span class="sxs-lookup"><span data-stu-id="fdbce-131">The type arguments for a <see cref="T:System.Xaml.XamlType" /> that represents a generic type.</span></span> <span data-ttu-id="fdbce-132">Puede ser (y a menudo es) <see langword="null" />, lo que indica que el tipo representado no es un tipo genérico.</span><span class="sxs-lookup"><span data-stu-id="fdbce-132">Can be (and often is) <see langword="null" />, which indicates that the represented type is not a generic type.</span></span></param>
        <param name="schemaContext"><span data-ttu-id="fdbce-133">Contexto de esquema XAML para lectores XAML o sistemas de escritura XAML.</span><span class="sxs-lookup"><span data-stu-id="fdbce-133">XAML schema context for XAML readers or XAML writers.</span></span></param>
        <summary><span data-ttu-id="fdbce-134">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlType" />, basándose en el espacio de nombres XAML y un nombre de cadena para el tipo.</span><span class="sxs-lookup"><span data-stu-id="fdbce-134">Initializes a new instance of the <see cref="T:System.Xaml.XamlType" /> class based on the XAML namespace and a string name for the type.</span></span> <span data-ttu-id="fdbce-135">Este constructor es exclusivamente para el análisis y la grabación de nodos XAML de usos de tipos que se sabe que no tienen correspondencia en el sistema de tipos auxiliar y el contexto de esquema de XAML.</span><span class="sxs-lookup"><span data-stu-id="fdbce-135">This constructor is exclusively for analysis and XAML-node recording of type usages that are known to not have backing in the supporting type system and XAML schema context.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdbce-136">Utilice este constructor solo para los tipos "desconocidos" donde un tipo XAML que se asigna a un sistema de tipos subyacente no está disponible.</span><span class="sxs-lookup"><span data-stu-id="fdbce-136">Use this constructor only for "unknown" types where a XAML type that maps to an underlying type system is unavailable.</span></span> <span data-ttu-id="fdbce-137">Este constructor no puede producir un resultado donde <xref:System.Xaml.XamlType.IsUnknown%2A?displayProperty=nameWithType> es `true`.</span><span class="sxs-lookup"><span data-stu-id="fdbce-137">This constructor might not produce a result where <xref:System.Xaml.XamlType.IsUnknown%2A?displayProperty=nameWithType> is `true`.</span></span> <span data-ttu-id="fdbce-138">En su lugar, la lógica predeterminada de reflector indica el tipo subyacente como <xref:System.Xaml.XamlLanguage.Object%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="fdbce-138">Instead, the default reflector logic reports the underlying type as <xref:System.Xaml.XamlLanguage.Object%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="fdbce-139">Sin embargo, puede cambiar este comportamiento debido la <xref:System.Xaml.XamlType.LookupIsUnknown%2A> invalidar.</span><span class="sxs-lookup"><span data-stu-id="fdbce-139">However, this behavior can change because of the <xref:System.Xaml.XamlType.LookupIsUnknown%2A> override.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fdbce-140">Uno o varios de los valores de <paramref name="unknownTypeNamespace" />, <paramref name="unknownTypeName" /> o <paramref name="schemaContext" /> son <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fdbce-140">One or more of <paramref name="unknownTypeNamespace" />, <paramref name="unknownTypeName" />, or <paramref name="schemaContext" /> are <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AllowedContentTypes">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; AllowedContentTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlType&gt; AllowedContentTypes" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.AllowedContentTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowedContentTypes As IList(Of XamlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ AllowedContentTypes { System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AllowedContentTypes : System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;" Usage="System.Xaml.XamlType.AllowedContentTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fdbce-141">Obtiene una colección de solo lectura de los tipos que se pueden usar como valor de la propiedad <see cref="P:System.Xaml.XamlType.ContentProperty" /> de este objeto <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="fdbce-141">Gets a read-only collection of the types that are usable as the <see cref="P:System.Xaml.XamlType.ContentProperty" /> value for this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <value><span data-ttu-id="fdbce-142">Colección de solo lectura de los posibles tipos de contenido.</span><span class="sxs-lookup"><span data-stu-id="fdbce-142">A read-only collection of possible content types.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdbce-143">Tipos que se pueden asignables un tipo de contenido específico (por ejemplo, puede asignar a un tipo base que es un tipo de contenido permitido) no se consideran varios tipos para los fines de <xref:System.Xaml.XamlType.AllowedContentTypes%2A>.</span><span class="sxs-lookup"><span data-stu-id="fdbce-143">Types that are assignable a specific content type (for example, assignable to a base type that is an allowed content type) are not considered multiple types for purposes of <xref:System.Xaml.XamlType.AllowedContentTypes%2A>.</span></span>  
  
 <span data-ttu-id="fdbce-144">Si no utiliza la técnica de reflexión de CLR interna de predeterminada para un <xref:System.Xaml.XamlType>, pueden invocar las llamadas a esta propiedad <xref:System.Xaml.XamlType.LookupAllowedContentTypes%2A> invalidaciones en <xref:System.Xaml.XamlType> las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="fdbce-144">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupAllowedContentTypes%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseType">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlType BaseType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlType BaseType" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.BaseType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BaseType As XamlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlType ^ BaseType { System::Xaml::XamlType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BaseType : System.Xaml.XamlType" Usage="System.Xaml.XamlType.BaseType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fdbce-145">Obtiene el objeto <see cref="T:System.Xaml.XamlType" /> para el tipo base inmediato de este tipo XAML.</span><span class="sxs-lookup"><span data-stu-id="fdbce-145">Gets the <see cref="T:System.Xaml.XamlType" /> for the immediate base type of this XAML type.</span></span> <span data-ttu-id="fdbce-146">La determinación de este valor se basa en el tipo subyacente de este objeto <see cref="T:System.Xaml.XamlType" /> y el contexto de esquema.</span><span class="sxs-lookup"><span data-stu-id="fdbce-146">Determination of this value is based on the underlying type of this <see cref="T:System.Xaml.XamlType" /> and schema context.</span></span></summary>
        <value><span data-ttu-id="fdbce-147"><see cref="T:System.Xaml.XamlType" /> para el tipo base inmediato de este tipo XAML.</span><span class="sxs-lookup"><span data-stu-id="fdbce-147">The <see cref="T:System.Xaml.XamlType" /> for the immediate base type of this XAML type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdbce-148">Si no utiliza la técnica de reflexión de CLR interna de predeterminada para un <xref:System.Xaml.XamlType>, pueden invocar las llamadas a esta propiedad <xref:System.Xaml.XamlType.LookupBaseType%2A> invalidaciones en <xref:System.Xaml.XamlType> las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="fdbce-148">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupBaseType%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="fdbce-149">Para obtener más información acerca de los valores devueltos y otros comportamientos, consulte la documentación de <xref:System.Xaml.XamlType.LookupBaseType%2A> en este tipo.</span><span class="sxs-lookup"><span data-stu-id="fdbce-149">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupBaseType%2A> on this type.</span></span> <span data-ttu-id="fdbce-150">De forma predeterminada, <xref:System.Xaml.XamlType.BaseType%2A> devuelve una constante interna que representa un <xref:System.Object> si <xref:System.Xaml.XamlType.UnderlyingType%2A> es `null`.</span><span class="sxs-lookup"><span data-stu-id="fdbce-150">By default, <xref:System.Xaml.XamlType.BaseType%2A> returns an internal constant that represents an <xref:System.Object> if <xref:System.Xaml.XamlType.UnderlyingType%2A> is `null`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="fdbce-151"><xref:System.Xaml.XamlType.LookupBaseType%2A> es virtual y, por lo tanto, se puede invalidar.</span><span class="sxs-lookup"><span data-stu-id="fdbce-151"><xref:System.Xaml.XamlType.LookupBaseType%2A> is virtual, and therefore, can be overridden.</span></span> <span data-ttu-id="fdbce-152">El reemplazo tiene el potencial (para propósitos malintencionados o de otro modo) para cambiar la información de tipo que se notifica sobre un tipo XAML para que ya no esté disponible en la manera esperada con la información del sistema de tipo de su tipo CLR subyacente.</span><span class="sxs-lookup"><span data-stu-id="fdbce-152">The override has the potential (whether for malicious purposes or otherwise) to change the reported type information about a XAML type so that it no longer aligns in an expected way with the type system information of its underlying CLR type.</span></span> <span data-ttu-id="fdbce-153">Para cualquier comprobación crítico para la seguridad de las operaciones de asignación y acceso, para usar el tipo CLR subyacente en su lugar.</span><span class="sxs-lookup"><span data-stu-id="fdbce-153">For any security-critical checks of assignment operations and access, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanAssignTo">
      <MemberSignature Language="C#" Value="public virtual bool CanAssignTo (System.Xaml.XamlType xamlType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanAssignTo(class System.Xaml.XamlType xamlType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.CanAssignTo(System.Xaml.XamlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanAssignTo(System::Xaml::XamlType ^ xamlType);" />
      <MemberSignature Language="F#" Value="abstract member CanAssignTo : System.Xaml.XamlType -&gt; bool&#xA;override this.CanAssignTo : System.Xaml.XamlType -&gt; bool" Usage="xamlType.CanAssignTo xamlType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlType" Type="System.Xaml.XamlType" />
      </Parameters>
      <Docs>
        <param name="xamlType"><span data-ttu-id="fdbce-154">Tipo que se va a comparar con el tipo <see cref="T:System.Xaml.XamlType" /> actual.</span><span class="sxs-lookup"><span data-stu-id="fdbce-154">The type to check against the current <see cref="T:System.Xaml.XamlType" /> .</span></span></param>
        <summary><span data-ttu-id="fdbce-155">Devuelve un valor que indica si una instancia de este tipo <see cref="T:System.Xaml.XamlType" /> tiene el tipo <see cref="T:System.Xaml.XamlType" /> especificado en su lista de tipos asignables.</span><span class="sxs-lookup"><span data-stu-id="fdbce-155">Returns a value that indicates whether an instance of this <see cref="T:System.Xaml.XamlType" /> has the specified <see cref="T:System.Xaml.XamlType" /> in its list of assignable types.</span></span></summary>
        <returns><span data-ttu-id="fdbce-156">Es <see langword="true" /> si <paramref name="xamlType" /> está en la lista de tipos asignables; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fdbce-156"><see langword="true" /> if <paramref name="xamlType" /> is in the assignable types list; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdbce-157">Aunque el tipo asignable no tiene todas las capacidades del tipo de referencia, puede usarlo para la asignación.</span><span class="sxs-lookup"><span data-stu-id="fdbce-157">Although the assignable type does not have all the capabilities of the reference type, you can use it for assignment.</span></span> <span data-ttu-id="fdbce-158">Por ejemplo, puede usar la asignación para hacer coincidir el tipo de los valores de una propiedad.</span><span class="sxs-lookup"><span data-stu-id="fdbce-158">For example, you can use assignment to make type matches for the values of a property.</span></span> <span data-ttu-id="fdbce-159">El concepto de tipos asignables en XAML es similar al concepto de convertir en el sistema de tipos CLR.</span><span class="sxs-lookup"><span data-stu-id="fdbce-159">The concept of assignable types in XAML is similar to the concept of casting up in the CLR type system.</span></span> <span data-ttu-id="fdbce-160">Por ejemplo, en un sistema de tipos CLR, cada tipo tiene un <xref:System.Object> en su lista de tipos asignables.</span><span class="sxs-lookup"><span data-stu-id="fdbce-160">For example, under a CLR type system, every type has an <xref:System.Object> in its assignable type list.</span></span>  
  
 <span data-ttu-id="fdbce-161">Si uno de los dos <xref:System.Xaml.XamlType> instancias que se utilizan para comparación tiene <xref:System.Xaml.XamlType.IsUnknown%2A> igual a `true`, este método tiene un modo desconocido especial que devuelve `true` si los dos <xref:System.Xaml.XamlType> las instancias son equivalentes.</span><span class="sxs-lookup"><span data-stu-id="fdbce-161">If one of the two <xref:System.Xaml.XamlType> instances that are used for comparison has <xref:System.Xaml.XamlType.IsUnknown%2A> equal to `true`, this method has a special Unknown mode that returns `true` if the two <xref:System.Xaml.XamlType> instances are equivalent.</span></span>  
  
 <span data-ttu-id="fdbce-162">La implementación predeterminada usa CLR <xref:System.Type> desde <xref:System.Xaml.XamlType.UnderlyingType%2A> para este <xref:System.Xaml.XamlType> y la entrada <xref:System.Xaml.XamlType>y llama a <xref:System.Type.IsAssignableFrom%2A>.</span><span class="sxs-lookup"><span data-stu-id="fdbce-162">The default implementation uses the CLR <xref:System.Type> from <xref:System.Xaml.XamlType.UnderlyingType%2A> for this <xref:System.Xaml.XamlType> and the input <xref:System.Xaml.XamlType>, and calls <xref:System.Type.IsAssignableFrom%2A>.</span></span> <span data-ttu-id="fdbce-163">Invalide este método si desea una determinación diferente de tipos asignables.</span><span class="sxs-lookup"><span data-stu-id="fdbce-163">Override this method if you want a different determination of assignable types.</span></span>  
  
 <span data-ttu-id="fdbce-164">Pasar un valor null `xamlType` no produce una excepción y siempre devuelve `false`.</span><span class="sxs-lookup"><span data-stu-id="fdbce-164">Passing a null `xamlType` does not throw an exception and always returns `false`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="fdbce-165"><xref:System.Xaml.XamlType.CanAssignTo%2A> es virtual y, por lo tanto, se puede invalidar.</span><span class="sxs-lookup"><span data-stu-id="fdbce-165"><xref:System.Xaml.XamlType.CanAssignTo%2A> is virtual, and therefore, can be overridden.</span></span> <span data-ttu-id="fdbce-166">El reemplazo tiene el potencial (para propósitos malintencionados o de otro modo) para cambiar la asignación de un tipo XAML para que ya no esté disponible en la manera esperada con el comportamiento de conversión de tipos de su tipo CLR subyacente.</span><span class="sxs-lookup"><span data-stu-id="fdbce-166">The override has the potential (whether for malicious purposes or otherwise) to change the assignability of a XAML type so that it no longer aligns in an expected way with the type-casting behavior of its underlying CLR type.</span></span> <span data-ttu-id="fdbce-167">Para cualquier comprobación crítico para la seguridad de las operaciones de asignación y acceso, para usar el tipo CLR subyacente en su lugar.</span><span class="sxs-lookup"><span data-stu-id="fdbce-167">For any security-critical checks of assignment operations and access, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConstructionRequiresArguments">
      <MemberSignature Language="C#" Value="public bool ConstructionRequiresArguments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ConstructionRequiresArguments" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.ConstructionRequiresArguments" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConstructionRequiresArguments As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ConstructionRequiresArguments { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ConstructionRequiresArguments : bool" Usage="System.Xaml.XamlType.ConstructionRequiresArguments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fdbce-168">Obtiene un valor que indica si este objeto <see cref="T:System.Xaml.XamlType" /> debe tener argumentos (restricciones genéricas mediante <see langword="x:TypeArguments" />, texto de inicialización u otras técnicas de XAML) para construir una instancia válida del tipo.</span><span class="sxs-lookup"><span data-stu-id="fdbce-168">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> must have arguments (generic constraints through <see langword="x:TypeArguments" />, initialization text, or other XAML techniques) to construct a valid instance of the type.</span></span></summary>
        <value><span data-ttu-id="fdbce-169">Es <see langword="true" /> si la construcción de una instancia necesita valores de argumento; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fdbce-169"><see langword="true" /> if construction of an instance requires some argument value; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdbce-170">Si no utiliza la técnica de reflexión de CLR interna de predeterminada para un <xref:System.Xaml.XamlType>, pueden invocar las llamadas a esta propiedad <xref:System.Xaml.XamlType.LookupConstructionRequiresArguments%2A> invalidaciones en <xref:System.Xaml.XamlType> las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="fdbce-170">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupConstructionRequiresArguments%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="fdbce-171">Para obtener más información acerca de los valores devueltos y otros comportamientos, consulte la documentación de <xref:System.Xaml.XamlType.LookupConstructionRequiresArguments%2A> en este tipo.</span><span class="sxs-lookup"><span data-stu-id="fdbce-171">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupConstructionRequiresArguments%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentProperty">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlMember ContentProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlMember ContentProperty" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.ContentProperty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentProperty As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlMember ^ ContentProperty { System::Xaml::XamlMember ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContentProperty : System.Xaml.XamlMember" Usage="System.Xaml.XamlType.ContentProperty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fdbce-172">Obtiene información sobre <see cref="T:System.Xaml.XamlMember" /> para la propiedad de contenido de este objeto <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="fdbce-172">Gets the <see cref="T:System.Xaml.XamlMember" /> information for the content property of this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <value><span data-ttu-id="fdbce-173">Información sobre <see cref="T:System.Xaml.XamlMember" /> para la propiedad de contenido de este objeto <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="fdbce-173"><see cref="T:System.Xaml.XamlMember" /> information for the content property of this <see cref="T:System.Xaml.XamlType" />.</span></span> <span data-ttu-id="fdbce-174">Su valor puede ser <see langword="null" /> si no existe ninguna propiedad de contenido.</span><span class="sxs-lookup"><span data-stu-id="fdbce-174">May be <see langword="null" /> if no content property exists.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdbce-175">Cuando usa el enlace o de seguridad del sistema de tipos CLR, la propiedad de contenido XAML puede especificarse en un tipo aplicando <xref:System.Windows.Markup.ContentPropertyAttribute> a la definición de tipo.</span><span class="sxs-lookup"><span data-stu-id="fdbce-175">When using the binding or backing of the CLR type system, the XAML content property can be specified on a type by applying <xref:System.Windows.Markup.ContentPropertyAttribute> to the type definition.</span></span>  
  
 <span data-ttu-id="fdbce-176">Esta propiedad se alinea con el `[content property]` elemento de información en la especificación [MS-XAML].</span><span class="sxs-lookup"><span data-stu-id="fdbce-176">This property aligns to the `[content property]` information item in the [MS-XAML] specification.</span></span>  
  
 <span data-ttu-id="fdbce-177">Si no utiliza la técnica de reflexión de CLR interna de predeterminada para un <xref:System.Xaml.XamlType>, pueden invocar las llamadas a esta propiedad <xref:System.Xaml.XamlType.LookupContentProperty%2A> invalidaciones en <xref:System.Xaml.XamlType> las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="fdbce-177">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupContentProperty%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="fdbce-178">Para obtener más información acerca de los valores devueltos y otros comportamientos, consulte la documentación de <xref:System.Xaml.XamlType.LookupContentProperty%2A> en este tipo.</span><span class="sxs-lookup"><span data-stu-id="fdbce-178">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupContentProperty%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentWrappers">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; ContentWrappers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlType&gt; ContentWrappers" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.ContentWrappers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentWrappers As IList(Of XamlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ ContentWrappers { System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContentWrappers : System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;" Usage="System.Xaml.XamlType.ContentWrappers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fdbce-179">Obtiene los tipos que se usan para encapsular el contenido de una propiedad de contenido cuando no es una coincidencia exacta de tipos, como cadenas en un objeto <see langword="Collection&lt;T&gt;" /> fuertemente tipado.</span><span class="sxs-lookup"><span data-stu-id="fdbce-179">Gets the types that are used to wrap content for a content property when it is not a strict type match, such as strings in a strongly typed <see langword="Collection&lt;T&gt;" />.</span></span></summary>
        <value><span data-ttu-id="fdbce-180">Colección de solo lectura de los posibles tipos de contenedor de contenido; de lo contrario, es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fdbce-180">A read-only collection of possible content wrapper types; otherwise, <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdbce-181">Si no hay ningún contenedor para aflojar de coincidencia de tipo, esta propiedad es `null`.</span><span class="sxs-lookup"><span data-stu-id="fdbce-181">If there are no wrappers to account for type match loosening, this property is `null`.</span></span>  
  
 <span data-ttu-id="fdbce-182">Tipos que se evalúan como <xref:System.Xaml.XamlType.CanAssignTo%2A> para un tipo de contenido específico no se consideran varios tipos para los fines de <xref:System.Xaml.XamlType.ContentWrappers%2A>.</span><span class="sxs-lookup"><span data-stu-id="fdbce-182">Types that evaluate as <xref:System.Xaml.XamlType.CanAssignTo%2A> for a specific content type are not considered multiple types for purposes of <xref:System.Xaml.XamlType.ContentWrappers%2A>.</span></span>  
  
 <span data-ttu-id="fdbce-183">En el enlace de CLR para <xref:System.Xaml> y <xref:System.Xaml.XamlType>, se puede especificar el tipo de contenedor de contenido XAML en un tipo como un <xref:System.Windows.Markup.ContentWrapperAttribute>.</span><span class="sxs-lookup"><span data-stu-id="fdbce-183">In the CLR binding for <xref:System.Xaml> and <xref:System.Xaml.XamlType>, the XAML content wrapper type can be specified on a type as a <xref:System.Windows.Markup.ContentWrapperAttribute>.</span></span>  
  
 <span data-ttu-id="fdbce-184">Si no utiliza la técnica de reflexión de CLR interna de predeterminada para un <xref:System.Xaml.XamlType>, pueden invocar las llamadas a esta propiedad <xref:System.Xaml.XamlType.LookupContentWrappers%2A> invalidaciones en <xref:System.Xaml.XamlType> las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="fdbce-184">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupContentWrappers%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="fdbce-185">Para obtener más información acerca de los valores devueltos y otros comportamientos, consulte la documentación de <xref:System.Xaml.XamlType.LookupContentWrappers%2A> en este tipo.</span><span class="sxs-lookup"><span data-stu-id="fdbce-185">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupContentWrappers%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeferringLoader">
      <MemberSignature Language="C#" Value="public System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt; DeferringLoader { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.Xaml.XamlDeferringLoader&gt; DeferringLoader" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.DeferringLoader" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeferringLoader As XamlValueConverter(Of XamlDeferringLoader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Schema::XamlValueConverter&lt;System::Xaml::XamlDeferringLoader ^&gt; ^ DeferringLoader { System::Xaml::Schema::XamlValueConverter&lt;System::Xaml::XamlDeferringLoader ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeferringLoader : System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;" Usage="System.Xaml.XamlType.DeferringLoader" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fdbce-186">Obtiene el objeto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> que representa el comportamiento de la conversión de carga aplazada para este tipo.</span><span class="sxs-lookup"><span data-stu-id="fdbce-186">Gets the <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> that represents the deferred loading conversion behavior for this type.</span></span></summary>
        <value><span data-ttu-id="fdbce-187"><see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> con restricción <see cref="T:System.Xaml.XamlDeferringLoader" /> que representa el comportamiento de carga diferido para este tipo.</span><span class="sxs-lookup"><span data-stu-id="fdbce-187">The <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> with <see cref="T:System.Xaml.XamlDeferringLoader" /> constraint that represents the deferred loading behavior for this type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdbce-188">Comportamiento de la plantilla XAML en WPF es un ejemplo de comportamiento de carga aplazada.</span><span class="sxs-lookup"><span data-stu-id="fdbce-188">XAML template behavior in WPF is an example of deferred loading behavior.</span></span>  
  
 <span data-ttu-id="fdbce-189">Si no utiliza la técnica de reflexión de CLR interna de predeterminada para un <xref:System.Xaml.XamlType>, pueden invocar las llamadas a esta propiedad <xref:System.Xaml.XamlType.LookupDeferringLoader%2A> invalidaciones en <xref:System.Xaml.XamlType> las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="fdbce-189">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupDeferringLoader%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="fdbce-190">Para obtener más información acerca de los valores devueltos y otros comportamientos, consulte la documentación de <xref:System.Xaml.XamlType.LookupDeferringLoader%2A> en este tipo.</span><span class="sxs-lookup"><span data-stu-id="fdbce-190">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupDeferringLoader%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fdbce-191">Indica si el objeto actual es igual que otro objeto.</span><span class="sxs-lookup"><span data-stu-id="fdbce-191">Indicates whether the current object is equal to another object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="xamlType.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="fdbce-192">Objeto que se va a comparar con este objeto.</span><span class="sxs-lookup"><span data-stu-id="fdbce-192">The object to compare with this object.</span></span></param>
        <summary><span data-ttu-id="fdbce-193">Indica si el objeto actual es igual que otro objeto.</span><span class="sxs-lookup"><span data-stu-id="fdbce-193">Indicates whether the current object is equal to another object.</span></span></summary>
        <returns><span data-ttu-id="fdbce-194"><see langword="true" /> si el objeto actual es igual al parámetro <paramref name="obj" />; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fdbce-194"><see langword="true" /> if the current object is equal to the <paramref name="obj" /> parameter; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Xaml.XamlType other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class System.Xaml.XamlType other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.Equals(System.Xaml.XamlType)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As XamlType) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Xaml::XamlType ^ other);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Xaml.XamlType -&gt; bool" Usage="xamlType.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Xaml.XamlType" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="fdbce-195">Objeto que se va a comparar con este objeto.</span><span class="sxs-lookup"><span data-stu-id="fdbce-195">An object to compare with this object.</span></span></param>
        <summary><span data-ttu-id="fdbce-196">Indica si el objeto actual es igual que otro objeto del mismo tipo.</span><span class="sxs-lookup"><span data-stu-id="fdbce-196">Indicates whether the current object is equal to another object of the same type.</span></span></summary>
        <returns><span data-ttu-id="fdbce-197"><see langword="true" /> si el objeto actual es igual al parámetro <paramref name="other" />; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fdbce-197"><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAliasedProperty">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlMember GetAliasedProperty (System.Xaml.XamlDirective directive);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xaml.XamlMember GetAliasedProperty(class System.Xaml.XamlDirective directive) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.GetAliasedProperty(System.Xaml.XamlDirective)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAliasedProperty (directive As XamlDirective) As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xaml::XamlMember ^ GetAliasedProperty(System::Xaml::XamlDirective ^ directive);" />
      <MemberSignature Language="F#" Value="member this.GetAliasedProperty : System.Xaml.XamlDirective -&gt; System.Xaml.XamlMember" Usage="xamlType.GetAliasedProperty directive" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directive" Type="System.Xaml.XamlDirective" />
      </Parameters>
      <Docs>
        <param name="directive"><span data-ttu-id="fdbce-198">Directiva para la cual se busca el miembro con alias.</span><span class="sxs-lookup"><span data-stu-id="fdbce-198">The directive for which to find the aliased member.</span></span></param>
        <summary><span data-ttu-id="fdbce-199">Devuelve el miembro XAML para el que se ha establecido como alias una directiva XAML mediante este objeto <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="fdbce-199">Returns the XAML member that is aliased to a XAML directive by this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <returns><span data-ttu-id="fdbce-200">Miembro con alias, si se encuentra; de lo contrario, devuelve <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fdbce-200">The aliased member, if found; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdbce-201">Si no utiliza la técnica de reflexión de CLR interna de predeterminada para un <xref:System.Xaml.XamlType>, pueden invocar llamadas a este método <xref:System.Xaml.XamlType.LookupAliasedProperty%2A> invalidaciones en <xref:System.Xaml.XamlType> las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="fdbce-201">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this method can invoke <xref:System.Xaml.XamlType.LookupAliasedProperty%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="fdbce-202">Para obtener más información acerca de los valores devueltos y otros comportamientos, consulte la documentación de <xref:System.Xaml.XamlType.LookupAliasedProperty%2A> en este tipo.</span><span class="sxs-lookup"><span data-stu-id="fdbce-202">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupAliasedProperty%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllAttachableMembers">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;System.Xaml.XamlMember&gt; GetAllAttachableMembers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.ICollection`1&lt;class System.Xaml.XamlMember&gt; GetAllAttachableMembers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.GetAllAttachableMembers" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllAttachableMembers () As ICollection(Of XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::ICollection&lt;System::Xaml::XamlMember ^&gt; ^ GetAllAttachableMembers();" />
      <MemberSignature Language="F#" Value="member this.GetAllAttachableMembers : unit -&gt; System.Collections.Generic.ICollection&lt;System.Xaml.XamlMember&gt;" Usage="xamlType.GetAllAttachableMembers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.Xaml.XamlMember&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fdbce-203">Devuelve una colección que contiene todas las propiedades adjuntables expuestas por este objeto <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="fdbce-203">Returns a collection that contains all the attachable properties that are exposed by this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <returns><span data-ttu-id="fdbce-204">Colección que contiene cero o más valores de <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="fdbce-204">A collection that contains zero or more <see cref="T:System.Xaml.XamlMember" /> values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdbce-205">Cada <xref:System.Xaml.XamlMember> en la colección devuelta debe contener valores que admiten el concepto que el <xref:System.Xaml.XamlMember> es un miembro adjuntable.</span><span class="sxs-lookup"><span data-stu-id="fdbce-205">Each <xref:System.Xaml.XamlMember> in the returned collection should contain values that support the concept that the <xref:System.Xaml.XamlMember> is an attachable member.</span></span> <span data-ttu-id="fdbce-206">Por ejemplo, deben devolver miembros `true` para <xref:System.Xaml.XamlMember.IsAttachable%2A>, un tipo para <xref:System.Xaml.XamlMember.TargetType%2A>, y así sucesivamente.</span><span class="sxs-lookup"><span data-stu-id="fdbce-206">For example, members should return `true` for <xref:System.Xaml.XamlMember.IsAttachable%2A>, a type for <xref:System.Xaml.XamlMember.TargetType%2A>, and so on.</span></span>  
  
 <span data-ttu-id="fdbce-207">Si no utiliza la técnica de reflexión de CLR interna de predeterminada para un <xref:System.Xaml.XamlType>, pueden invocar llamadas a este método <xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A> invalidaciones en <xref:System.Xaml.XamlType> las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="fdbce-207">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this method can invoke <xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="fdbce-208">Para obtener más información acerca de los valores devueltos y otros comportamientos, consulte la documentación de <xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A> en este tipo.</span><span class="sxs-lookup"><span data-stu-id="fdbce-208">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllMembers">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;System.Xaml.XamlMember&gt; GetAllMembers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.ICollection`1&lt;class System.Xaml.XamlMember&gt; GetAllMembers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.GetAllMembers" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllMembers () As ICollection(Of XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::ICollection&lt;System::Xaml::XamlMember ^&gt; ^ GetAllMembers();" />
      <MemberSignature Language="F#" Value="member this.GetAllMembers : unit -&gt; System.Collections.Generic.ICollection&lt;System.Xaml.XamlMember&gt;" Usage="xamlType.GetAllMembers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.Xaml.XamlMember&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fdbce-209">Devuelve una colección que contiene todos los miembros expuestos por este objeto <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="fdbce-209">Returns a collection that contains all the members that are exposed by this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <returns><span data-ttu-id="fdbce-210">Colección que contiene cero o más valores de <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="fdbce-210">A collection that contains zero or more <see cref="T:System.Xaml.XamlMember" /> values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdbce-211">Pueden invocar llamadas a este método <xref:System.Xaml.XamlType.LookupAllMembers%2A> invalidaciones en <xref:System.Xaml.XamlType> las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="fdbce-211">Calls to this method can invoke <xref:System.Xaml.XamlType.LookupAllMembers%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAttachableMember">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlMember GetAttachableMember (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xaml.XamlMember GetAttachableMember(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.GetAttachableMember(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAttachableMember (name As String) As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xaml::XamlMember ^ GetAttachableMember(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.GetAttachableMember : string -&gt; System.Xaml.XamlMember" Usage="xamlType.GetAttachableMember name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="fdbce-212">Nombre del miembro adjuntable que se va a obtener, en el formulario <c>ownerTypeName.MemberName</c>.</span><span class="sxs-lookup"><span data-stu-id="fdbce-212">The name of the attachable member to get, in <c>ownerTypeName.MemberName</c> form.</span></span></param>
        <summary><span data-ttu-id="fdbce-213">Devuelve un <see cref="T:System.Xaml.XamlMember" /> que representa un miembro adjuntable con nombre específico de este <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="fdbce-213">Returns a <see cref="T:System.Xaml.XamlMember" /> representing a specific named attachable member of this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <returns><span data-ttu-id="fdbce-214">Objeto <see cref="T:System.Xaml.XamlMember" /> para el miembro adjuntable solicitado; de lo contrario, <see langword="null" />, si no existe ningún miembro adjuntable con ese nombre.</span><span class="sxs-lookup"><span data-stu-id="fdbce-214">A <see cref="T:System.Xaml.XamlMember" /> object for the requested attachable member; otherwise, <see langword="null" />, if no attachable member by that name exists.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdbce-215">Pueden invocar llamadas a este método <xref:System.Xaml.XamlType.LookupAttachableMember%2A> invalidaciones en <xref:System.Xaml.XamlType> las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="fdbce-215">Calls to this method can invoke <xref:System.Xaml.XamlType.LookupAttachableMember%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="fdbce-216"><xref:System.Xaml.XamlType.LookupAttachableMember%2A> es virtual y, por lo tanto, se puede invalidar.</span><span class="sxs-lookup"><span data-stu-id="fdbce-216"><xref:System.Xaml.XamlType.LookupAttachableMember%2A> is virtual, and therefore, can be overridden.</span></span> <span data-ttu-id="fdbce-217">El reemplazo tiene el potencial (para propósitos malintencionados o de otro modo) para cambiar los miembros de un tipo XAML notificados para que ya no queden en la manera esperada con el <xref:System.ComponentModel.TypeDescriptor> `Get*` información sobre el tipo CLR subyacente.</span><span class="sxs-lookup"><span data-stu-id="fdbce-217">The override has the potential (whether for malicious purposes or otherwise) to change the reported members of a XAML type so that they no longer align in an expected way with the <xref:System.ComponentModel.TypeDescriptor> `Get*` information about the underlying CLR type.</span></span> <span data-ttu-id="fdbce-218">Para cualquier comprobación crítico para la seguridad de miembro reporting, para usar el tipo CLR subyacente en su lugar.</span><span class="sxs-lookup"><span data-stu-id="fdbce-218">For any security-critical checks of member reporting, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="xamlType.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fdbce-219">Devuelve el código hash de este objeto.</span><span class="sxs-lookup"><span data-stu-id="fdbce-219">Returns the hash code for this object.</span></span></summary>
        <returns><span data-ttu-id="fdbce-220">Código hash entero.</span><span class="sxs-lookup"><span data-stu-id="fdbce-220">An integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMember">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlMember GetMember (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xaml.XamlMember GetMember(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.GetMember(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMember (name As String) As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xaml::XamlMember ^ GetMember(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.GetMember : string -&gt; System.Xaml.XamlMember" Usage="xamlType.GetMember name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="fdbce-221">Nombre del miembro que se va a obtener (en forma de cadena).</span><span class="sxs-lookup"><span data-stu-id="fdbce-221">The name of the member to get (as a string).</span></span></param>
        <summary><span data-ttu-id="fdbce-222">Devuelve un objeto <see cref="T:System.Xaml.XamlMember" /> para un miembro con nombre específico de este tipo <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="fdbce-222">Returns a <see cref="T:System.Xaml.XamlMember" /> for a specific named member from this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <returns><span data-ttu-id="fdbce-223">Información de <see cref="T:System.Xaml.XamlMember" /> para el miembro, si se encuentra alguno; de lo contrario, devuelve <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fdbce-223">The <see cref="T:System.Xaml.XamlMember" /> information for the member, if such a member was found; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdbce-224">El valor de `name` debe estar incompleto.</span><span class="sxs-lookup"><span data-stu-id="fdbce-224">The value for `name` is expected to be unqualified.</span></span> <span data-ttu-id="fdbce-225">Nombres calificados con el tipo que indican un miembro adjunto se deben enviar a <xref:System.Xaml.XamlType.GetAttachableMember%2A> en su lugar.</span><span class="sxs-lookup"><span data-stu-id="fdbce-225">Type-qualified names that indicate an attached member should be submitted to <xref:System.Xaml.XamlType.GetAttachableMember%2A> instead.</span></span> <span data-ttu-id="fdbce-226">El prefijo de miembro no se deben usar nombres; un prefijo es situacional para un uso y el sistema de tipos XAML no conoce el contexto de este tipo de uso y cómo se asigna el prefijo.</span><span class="sxs-lookup"><span data-stu-id="fdbce-226">Prefixed member names should not be used; a prefix is situational to a usage and the XAML type system cannot know the context of such a usage and how the prefix is mapped.</span></span>  
  
 <span data-ttu-id="fdbce-227">Pueden invocar llamadas a este método <xref:System.Xaml.XamlType.LookupMember%2A> invalidaciones en <xref:System.Xaml.XamlType> las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="fdbce-227">Calls to this method can invoke <xref:System.Xaml.XamlType.LookupMember%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="fdbce-228"><xref:System.Xaml.XamlType.LookupMember%2A> es virtual y, por lo tanto, se puede invalidar.</span><span class="sxs-lookup"><span data-stu-id="fdbce-228"><xref:System.Xaml.XamlType.LookupMember%2A> is virtual, and therefore, can be overridden.</span></span> <span data-ttu-id="fdbce-229">El reemplazo tiene el potencial (para propósitos malintencionados o de otro modo) para cambiar los miembros de un tipo XAML notificados para que ya no queden en la manera esperada con el <xref:System.ComponentModel.TypeDescriptor> `Get*` información sobre el tipo CLR subyacente.</span><span class="sxs-lookup"><span data-stu-id="fdbce-229">The override has the potential (whether for malicious purposes or otherwise) to change the reported members of a XAML type so that they no longer align in an expected way with the <xref:System.ComponentModel.TypeDescriptor> `Get*` information about the underlying CLR type.</span></span> <span data-ttu-id="fdbce-230">Para cualquier comprobación crítico para la seguridad de miembro reporting, para usar el tipo CLR subyacente en su lugar.</span><span class="sxs-lookup"><span data-stu-id="fdbce-230">For any security-critical checks of member reporting, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPositionalParameters">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; GetPositionalParameters (int parameterCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlType&gt; GetPositionalParameters(int32 parameterCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.GetPositionalParameters(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPositionalParameters (parameterCount As Integer) As IList(Of XamlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ GetPositionalParameters(int parameterCount);" />
      <MemberSignature Language="F#" Value="member this.GetPositionalParameters : int -&gt; System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;" Usage="xamlType.GetPositionalParameters parameterCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="parameterCount"><span data-ttu-id="fdbce-231">Número de parámetros del modo de sintaxis o constructor del que se va a obtener información.</span><span class="sxs-lookup"><span data-stu-id="fdbce-231">The count (arity) of the particular syntax or constructor mode that you want information about.</span></span></param>
        <summary><span data-ttu-id="fdbce-232">Para los tipos de extensión de marcado, devuelve los tipos de los parámetros posicionales admitidos en un uso específico de las extensiones de marcado para este objeto <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="fdbce-232">For markup extension types, returns the types of the positional parameters that are supported in a specific markup extension usage for this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <returns><span data-ttu-id="fdbce-233">Lista de valores de <see cref="T:System.Xaml.XamlType" />, donde cada <see cref="T:System.Xaml.XamlType" /> es el tipo para esa posición en la sintaxis.</span><span class="sxs-lookup"><span data-stu-id="fdbce-233">A list of <see cref="T:System.Xaml.XamlType" /> values, where each <see cref="T:System.Xaml.XamlType" /> is the type for that position in the syntax.</span></span> <span data-ttu-id="fdbce-234">Es preciso especificar los tipos en el mismo orden al proporcionar entradas de marcado para la extensión de marcado.</span><span class="sxs-lookup"><span data-stu-id="fdbce-234">You must specify the types in the same order when you supply markup input for the markup extension.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdbce-235">Esta API solo es pertinente si este <xref:System.Xaml.XamlType> representa una extensión de marcado (<xref:System.Xaml.XamlType.IsMarkupExtension%2A> es `true`).</span><span class="sxs-lookup"><span data-stu-id="fdbce-235">This API is only relevant if this <xref:System.Xaml.XamlType> represents a markup extension (<xref:System.Xaml.XamlType.IsMarkupExtension%2A> is `true`).</span></span>  
  
 <span data-ttu-id="fdbce-236">La entrada `parameterCount` no es para solicitar el tipo de un parámetro posicional concreto.</span><span class="sxs-lookup"><span data-stu-id="fdbce-236">The input `parameterCount` is not for requesting the type of a specific positional parameter.</span></span> <span data-ttu-id="fdbce-237">Es para especificar la aridad de uso de una extensión de marcado.</span><span class="sxs-lookup"><span data-stu-id="fdbce-237">It is for specifying the arity of a markup extension usage.</span></span> <span data-ttu-id="fdbce-238">Uso de la extensión de marcado a menudo tiene varias "firmas" y usa diferentes parámetros de aridad (recuento) de los parámetros posicionales para diferenciar.</span><span class="sxs-lookup"><span data-stu-id="fdbce-238">Markup extension usage often has multiple "signatures" and uses different parameter arity (count) of positional parameters to differentiate.</span></span> <span data-ttu-id="fdbce-239">Sin embargo, puede configurar un contexto de esquema para permitir duplicar aridades y usar tipos de los parámetros posicionales para diferenciación.</span><span class="sxs-lookup"><span data-stu-id="fdbce-239">However, you can configure a schema context to allow duplicate arities and use types of the positional parameters for differentiation.</span></span> <span data-ttu-id="fdbce-240">Para obtener más información, vea <xref:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity%2A>.</span><span class="sxs-lookup"><span data-stu-id="fdbce-240">For more information, see <xref:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity%2A>.</span></span> <span data-ttu-id="fdbce-241">Para una aridad concreta (recuento), pueden variar las posiciones de parámetro y tipos.</span><span class="sxs-lookup"><span data-stu-id="fdbce-241">For a specific arity (count), the parameter positions and types can vary.</span></span> <span data-ttu-id="fdbce-242">Para obtener el tipo posicional del uso de extensión de marcado de una aridad concreta, llame primero a <xref:System.Xaml.XamlType.GetPositionalParameters%2A> especificar el número de aridad.</span><span class="sxs-lookup"><span data-stu-id="fdbce-242">To get the positional type of a specific arity's markup extension usage, you first call <xref:System.Xaml.XamlType.GetPositionalParameters%2A> specifying the arity count.</span></span> <span data-ttu-id="fdbce-243">A continuación, obtenga el elemento en esa posición de la colección devuelta.</span><span class="sxs-lookup"><span data-stu-id="fdbce-243">Then get the item at that position from the returned collection.</span></span>  
  
 <span data-ttu-id="fdbce-244">Pueden invocar llamadas a este método <xref:System.Xaml.XamlType.LookupPositionalParameters%2A> invalidaciones en <xref:System.Xaml.XamlType> las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="fdbce-244">Calls to this method can invoke <xref:System.Xaml.XamlType.LookupPositionalParameters%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetXamlNamespaces">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;string&gt; GetXamlNamespaces ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;string&gt; GetXamlNamespaces() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.GetXamlNamespaces" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetXamlNamespaces () As IList(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IList&lt;System::String ^&gt; ^ GetXamlNamespaces();" />
      <MemberSignature Language="F#" Value="abstract member GetXamlNamespaces : unit -&gt; System.Collections.Generic.IList&lt;string&gt;&#xA;override this.GetXamlNamespaces : unit -&gt; System.Collections.Generic.IList&lt;string&gt;" Usage="xamlType.GetXamlNamespaces " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fdbce-245">Devuelve una lista de identificadores de cadena para los espacios de nombres XAML que incluyen el tipo.</span><span class="sxs-lookup"><span data-stu-id="fdbce-245">Returns a list of string identifiers for XAML namespaces that the type is included in.</span></span></summary>
        <returns><span data-ttu-id="fdbce-246">Lista de valores de cadena, donde cada cadena es el identificador URI de un espacio de nombres XAML.</span><span class="sxs-lookup"><span data-stu-id="fdbce-246">A list of string values, where each string is the URI identifier for a XAML namespace.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdbce-247">Identificadores de espacio de nombres XAML típicos son cadenas con formato URI.</span><span class="sxs-lookup"><span data-stu-id="fdbce-247">Typical XAML namespace identifiers are strings in URI form.</span></span>  
  
 <span data-ttu-id="fdbce-248">La implementación predeterminada comprueba lo siguiente, en orden: el espacio de nombres XAML que se proporciona en construcción (<xref:System.Xaml.XamlType.%23ctor%28System.String%2CSystem.String%2CSystem.Collections.Generic.IList%7BSystem.Xaml.XamlType%7D%2CSystem.Xaml.XamlSchemaContext%29> solo firma); y los espacios de nombres que están disponibles en el contexto de esquema.</span><span class="sxs-lookup"><span data-stu-id="fdbce-248">The default implementation checks the following, in order: the XAML namespace that is supplied in construction (<xref:System.Xaml.XamlType.%23ctor%28System.String%2CSystem.String%2CSystem.Collections.Generic.IList%7BSystem.Xaml.XamlType%7D%2CSystem.Xaml.XamlSchemaContext%29> signature only); and the namespaces that are available from the schema context.</span></span> <span data-ttu-id="fdbce-249">Si se trata cada `null`, se genera una nueva lista que contiene una sola cadena vacía.</span><span class="sxs-lookup"><span data-stu-id="fdbce-249">If these are each `null`, a new list is generated that contains a single empty string.</span></span> <span data-ttu-id="fdbce-250">Puede invalidar este método para cambiar la metodología de búsqueda.</span><span class="sxs-lookup"><span data-stu-id="fdbce-250">You can override this method to change the lookup methodology.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoker">
      <MemberSignature Language="C#" Value="public System.Xaml.Schema.XamlTypeInvoker Invoker { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.Schema.XamlTypeInvoker Invoker" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.Invoker" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Invoker As XamlTypeInvoker" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Schema::XamlTypeInvoker ^ Invoker { System::Xaml::Schema::XamlTypeInvoker ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Invoker : System.Xaml.Schema.XamlTypeInvoker" Usage="System.Xaml.XamlType.Invoker" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlTypeInvoker</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fdbce-251">Obtiene la implementación de <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> que está asociada a este objeto <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="fdbce-251">Gets the <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> implementation that is associated with this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <value><span data-ttu-id="fdbce-252">Implementación de <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> que está asociada a este objeto <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="fdbce-252">The <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> implementation that is associated with this <see cref="T:System.Xaml.XamlType" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdbce-253">Si no utiliza la técnica de reflexión de CLR interna de predeterminada para un <xref:System.Xaml.XamlType>, al llamar a <xref:System.Xaml.XamlType.Invoker%2A> puede llamar <xref:System.Xaml.XamlType.LookupInvoker%2A> o una invalidación específica de ese método.</span><span class="sxs-lookup"><span data-stu-id="fdbce-253">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calling <xref:System.Xaml.XamlType.Invoker%2A> can invoke either <xref:System.Xaml.XamlType.LookupInvoker%2A> or a specific override of that method.</span></span> <span data-ttu-id="fdbce-254">Para obtener más información acerca de los valores devueltos y otros comportamientos, consulte la documentación de <xref:System.Xaml.XamlType.LookupInvoker%2A> en este tipo.</span><span class="sxs-lookup"><span data-stu-id="fdbce-254">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupInvoker%2A> on this type.</span></span>  
  
 <span data-ttu-id="fdbce-255">Si un <xref:System.Xaml.XamlType.LookupInvoker%2A> invalidar devuelve `null`, o si la implementación predeterminada devuelve `null` debido a falta de <xref:System.Xaml.XamlType.UnderlyingType%2A> para este <xref:System.Xaml.XamlType>, a continuación, <xref:System.Xaml.XamlType.Invoker%2A> devuelve <xref:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="fdbce-255">If a <xref:System.Xaml.XamlType.LookupInvoker%2A> override returns `null`, or if the default implementation returns `null` because of lack of <xref:System.Xaml.XamlType.UnderlyingType%2A> for this <xref:System.Xaml.XamlType>, then <xref:System.Xaml.XamlType.Invoker%2A> returns <xref:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAmbient">
      <MemberSignature Language="C#" Value="public bool IsAmbient { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAmbient" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsAmbient" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAmbient As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAmbient { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAmbient : bool" Usage="System.Xaml.XamlType.IsAmbient" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fdbce-256">Obtiene un valor que indica si este objeto <see cref="T:System.Xaml.XamlType" /> representa un tipo de ambiente según la definición de XAML.</span><span class="sxs-lookup"><span data-stu-id="fdbce-256">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents an ambient type, as per the XAML definition.</span></span></summary>
        <value><span data-ttu-id="fdbce-257">Es <see langword="true" /> si este objeto <see cref="T:System.Xaml.XamlType" /> representa un tipo de ambiente; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fdbce-257"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents an ambient type; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdbce-258">Si no utiliza la técnica de reflexión de CLR interna de predeterminada para un <xref:System.Xaml.XamlType>, pueden invocar las llamadas a esta propiedad <xref:System.Xaml.XamlType.LookupIsAmbient%2A> invalidaciones en <xref:System.Xaml.XamlType> las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="fdbce-258">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsAmbient%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="fdbce-259">Para obtener más información acerca de los valores devueltos y otros comportamientos, consulte la documentación de <xref:System.Xaml.XamlType.LookupIsAmbient%2A> en este tipo.</span><span class="sxs-lookup"><span data-stu-id="fdbce-259">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupIsAmbient%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsArray">
      <MemberSignature Language="C#" Value="public bool IsArray { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsArray" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsArray" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsArray As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsArray { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsArray : bool" Usage="System.Xaml.XamlType.IsArray" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fdbce-260">Obtiene un valor que indica si este objeto <see cref="T:System.Xaml.XamlType" /> representa una matriz.</span><span class="sxs-lookup"><span data-stu-id="fdbce-260">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents an array.</span></span></summary>
        <value><span data-ttu-id="fdbce-261">Es <see langword="true" /> si este objeto <see cref="T:System.Xaml.XamlType" /> representa una matriz; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fdbce-261"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents an array; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdbce-262">Si no utiliza la técnica de reflexión de CLR interna de predeterminada para un <xref:System.Xaml.XamlType>, pueden invocar las llamadas a esta propiedad <xref:System.Xaml.XamlType.LookupCollectionKind%2A> invalidaciones en <xref:System.Xaml.XamlType> las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="fdbce-262">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupCollectionKind%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="fdbce-263">Para obtener más información acerca de los valores devueltos y otros comportamientos, consulte la documentación de <xref:System.Xaml.XamlType.LookupCollectionKind%2A> en este tipo.</span><span class="sxs-lookup"><span data-stu-id="fdbce-263">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupCollectionKind%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCollection">
      <MemberSignature Language="C#" Value="public bool IsCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCollection" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsCollection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCollection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCollection { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCollection : bool" Usage="System.Xaml.XamlType.IsCollection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fdbce-264">Obtiene un valor que indica si este objeto <see cref="T:System.Xaml.XamlType" /> representa una colección.</span><span class="sxs-lookup"><span data-stu-id="fdbce-264">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a collection.</span></span></summary>
        <value><span data-ttu-id="fdbce-265">Es <see langword="true" /> si este objeto <see cref="T:System.Xaml.XamlType" /> representa una colección; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fdbce-265"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a collection; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdbce-266">Si no utiliza la técnica de reflexión de CLR interna de predeterminada para un <xref:System.Xaml.XamlType>, pueden invocar las llamadas a esta propiedad <xref:System.Xaml.XamlType.LookupCollectionKind%2A> invalidaciones en <xref:System.Xaml.XamlType> las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="fdbce-266">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupCollectionKind%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="fdbce-267">Para obtener más información acerca de los valores devueltos y otros comportamientos, consulte la documentación de <xref:System.Xaml.XamlType.LookupCollectionKind%2A> en este tipo.</span><span class="sxs-lookup"><span data-stu-id="fdbce-267">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupCollectionKind%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsConstructible">
      <MemberSignature Language="C#" Value="public bool IsConstructible { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsConstructible" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsConstructible" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsConstructible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsConstructible { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsConstructible : bool" Usage="System.Xaml.XamlType.IsConstructible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fdbce-268">Obtiene un valor que indica si este objeto <see cref="T:System.Xaml.XamlType" /> representa un tipo que se puede construir según la definición de XAML.</span><span class="sxs-lookup"><span data-stu-id="fdbce-268">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a constructible type, as per the XAML definition.</span></span></summary>
        <value><span data-ttu-id="fdbce-269">Es <see langword="true" /> si este objeto <see cref="T:System.Xaml.XamlType" /> representa un tipo que se puede construir; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fdbce-269"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a constructible type; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdbce-270">Esta propiedad se alinea con el `[is default constructible]` elemento de información en la especificación [MS-XAML].</span><span class="sxs-lookup"><span data-stu-id="fdbce-270">This property aligns to the `[is default constructible]` information item in the [MS-XAML] specification.</span></span>  
  
 <span data-ttu-id="fdbce-271">Si no utiliza la técnica de reflexión de CLR interna de predeterminada para un <xref:System.Xaml.XamlType>, pueden invocar las llamadas a esta propiedad <xref:System.Xaml.XamlType.LookupIsConstructible%2A> invalidaciones en <xref:System.Xaml.XamlType> las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="fdbce-271">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsConstructible%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="fdbce-272">Para obtener más información acerca de los valores devueltos y otros comportamientos, consulte la documentación de <xref:System.Xaml.XamlType.LookupIsConstructible%2A> en este tipo.</span><span class="sxs-lookup"><span data-stu-id="fdbce-272">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupIsConstructible%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlType.ConstructionRequiresArguments" />
      </Docs>
    </Member>
    <Member MemberName="IsDictionary">
      <MemberSignature Language="C#" Value="public bool IsDictionary { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDictionary" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsDictionary" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDictionary As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDictionary { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDictionary : bool" Usage="System.Xaml.XamlType.IsDictionary" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fdbce-273">Obtiene un valor que indica si este objeto <see cref="T:System.Xaml.XamlType" /> representa un diccionario según la definición de XAML.</span><span class="sxs-lookup"><span data-stu-id="fdbce-273">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a dictionary, as per the XAML definition.</span></span></summary>
        <value><span data-ttu-id="fdbce-274">Es <see langword="true" /> si este objeto <see cref="T:System.Xaml.XamlType" /> representa un diccionario; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fdbce-274"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a dictionary; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdbce-275">Esta propiedad se alinea con el `[is dictionary]` elemento de información en la especificación [MS-XAML].</span><span class="sxs-lookup"><span data-stu-id="fdbce-275">This property aligns to the `[is dictionary]` information item in the [MS-XAML] specification.</span></span>  
  
 <span data-ttu-id="fdbce-276">Si no utiliza la técnica de reflexión de CLR interna de predeterminada para un <xref:System.Xaml.XamlType>, pueden invocar las llamadas a esta propiedad <xref:System.Xaml.XamlType.LookupCollectionKind%2A> invalidaciones en <xref:System.Xaml.XamlType> las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="fdbce-276">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupCollectionKind%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="fdbce-277">Para obtener más información acerca de los valores devueltos y otros comportamientos, consulte la documentación de <xref:System.Xaml.XamlType.LookupCollectionKind%2A> en este tipo.</span><span class="sxs-lookup"><span data-stu-id="fdbce-277">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupCollectionKind%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsGeneric">
      <MemberSignature Language="C#" Value="public bool IsGeneric { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsGeneric" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsGeneric" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsGeneric As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsGeneric { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsGeneric : bool" Usage="System.Xaml.XamlType.IsGeneric" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fdbce-278">Obtiene un valor que indica si este objeto <see cref="T:System.Xaml.XamlType" /> representa un tipo genérico.</span><span class="sxs-lookup"><span data-stu-id="fdbce-278">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a generic type.</span></span></summary>
        <value><span data-ttu-id="fdbce-279">Es <see langword="true" /> si este objeto <see cref="T:System.Xaml.XamlType" /> representa un tipo genérico; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fdbce-279"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a generic type; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdbce-280">Esta propiedad es una propiedad de la aplicación auxiliar que busca un valor nulo de <xref:System.Xaml.XamlType.TypeArguments%2A>.</span><span class="sxs-lookup"><span data-stu-id="fdbce-280">This property is a helper property that checks for a null value of <xref:System.Xaml.XamlType.TypeArguments%2A>.</span></span> <span data-ttu-id="fdbce-281">No hay ningún específico `Lookup` relacionados con el método <xref:System.Xaml.XamlType.IsGeneric%2A>.</span><span class="sxs-lookup"><span data-stu-id="fdbce-281">There is no specific `Lookup` method related to <xref:System.Xaml.XamlType.IsGeneric%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMarkupExtension">
      <MemberSignature Language="C#" Value="public bool IsMarkupExtension { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMarkupExtension" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsMarkupExtension" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMarkupExtension As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMarkupExtension { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMarkupExtension : bool" Usage="System.Xaml.XamlType.IsMarkupExtension" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fdbce-282">Obtiene un valor que indica si este objeto <see cref="T:System.Xaml.XamlType" /> representa una extensión de marcado.</span><span class="sxs-lookup"><span data-stu-id="fdbce-282">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a markup extension.</span></span></summary>
        <value><span data-ttu-id="fdbce-283">Es <see langword="true" /> si este objeto <see cref="T:System.Xaml.XamlType" /> representa una extensión de marcado; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fdbce-283"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a markup extension; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdbce-284">En términos de especificación de XAML, este tipo debe ser asignable a `x:MarkupExtension` con el fin de devolver `true` para <xref:System.Xaml.XamlType.IsMarkupExtension%2A>.</span><span class="sxs-lookup"><span data-stu-id="fdbce-284">In XAML specification terms, this type must be assignable to `x:MarkupExtension` in order to return `true` for <xref:System.Xaml.XamlType.IsMarkupExtension%2A>.</span></span>  
  
 <span data-ttu-id="fdbce-285">Si no utiliza la técnica de reflexión de CLR interna de predeterminada para un <xref:System.Xaml.XamlType>, pueden invocar las llamadas a esta propiedad <xref:System.Xaml.XamlType.LookupIsMarkupExtension%2A> invalidaciones en <xref:System.Xaml.XamlType> las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="fdbce-285">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsMarkupExtension%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="fdbce-286">Para obtener más información acerca de los valores devueltos y otros comportamientos, consulte la documentación de <xref:System.Xaml.XamlType.LookupIsMarkupExtension%2A> en este tipo.</span><span class="sxs-lookup"><span data-stu-id="fdbce-286">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupIsMarkupExtension%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNameScope">
      <MemberSignature Language="C#" Value="public bool IsNameScope { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNameScope" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsNameScope" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNameScope As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNameScope { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNameScope : bool" Usage="System.Xaml.XamlType.IsNameScope" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fdbce-287">Obtiene un valor que indica si este objeto <see cref="T:System.Xaml.XamlType" /> representa un ámbito de nombres XAML según la definición de XAML.</span><span class="sxs-lookup"><span data-stu-id="fdbce-287">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a XAML namescope, as per the XAML definition.</span></span></summary>
        <value><span data-ttu-id="fdbce-288">Es <see langword="true" /> si este objeto <see cref="T:System.Xaml.XamlType" /> representa un ámbito de nombres XAML; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fdbce-288"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a XAML namescope; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdbce-289">Un ámbito de nombres XAML exige la exclusividad del nombre de la propiedad o propiedades que se usan para `x:Name`  /  `[name property]`.</span><span class="sxs-lookup"><span data-stu-id="fdbce-289">A XAML namescope enforces the name uniqueness of the property or properties used for `x:Name` / `[name property]`.</span></span> <span data-ttu-id="fdbce-290">Si <xref:System.Xaml.XamlType.IsNameScope%2A> es `true`, algún mecanismo para exigir la unicidad debe existir y debe evaluarse desde la perspectiva de este tipo que posee un ámbito de nombres XAML.</span><span class="sxs-lookup"><span data-stu-id="fdbce-290">If <xref:System.Xaml.XamlType.IsNameScope%2A> is `true`, some mechanism for enforcing uniqueness should exist and should evaluate from the perspective of this type owning a XAML namescope.</span></span> <span data-ttu-id="fdbce-291">El ámbito de nombres XAML, a continuación, se extiende al contenido del tipo hasta que se encuentra otro tipo de propietario con ámbito de nombres XAML.</span><span class="sxs-lookup"><span data-stu-id="fdbce-291">The XAML namescope then extends to the content of the type until another XAML namescope-owning type is encountered.</span></span>  
  
 <span data-ttu-id="fdbce-292">Esta propiedad se alinea con el `[is name scope]` elemento de información en la especificación [MS-XAML].</span><span class="sxs-lookup"><span data-stu-id="fdbce-292">This property aligns to the `[is name scope]` information item in the [MS-XAML] specification.</span></span>  
  
 <span data-ttu-id="fdbce-293">Si no utiliza la técnica de reflexión de CLR interna de predeterminada para un <xref:System.Xaml.XamlType>, pueden invocar las llamadas a esta propiedad <xref:System.Xaml.XamlType.LookupIsNameScope%2A> invalidaciones en <xref:System.Xaml.XamlType> las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="fdbce-293">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsNameScope%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNameValid">
      <MemberSignature Language="C#" Value="public bool IsNameValid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNameValid" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsNameValid" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNameValid As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNameValid { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNameValid : bool" Usage="System.Xaml.XamlType.IsNameValid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fdbce-294">Obtiene un valor que indica si este objeto <see cref="T:System.Xaml.XamlType" /> se inicializa usando una cadena <see langword="xamlName" /> válida como valor de su propiedad <see cref="P:System.Xaml.XamlType.Name" />.</span><span class="sxs-lookup"><span data-stu-id="fdbce-294">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> is initialized by using a valid <see langword="xamlName" /> string as its <see cref="P:System.Xaml.XamlType.Name" />.</span></span></summary>
        <value><span data-ttu-id="fdbce-295">Es <see langword="true" /> si este objeto <see cref="T:System.Xaml.XamlType" /> se inicializa usando una cadena <see langword="xamlName" /> válida; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fdbce-295"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> is initialized by using a valid <see langword="xamlName" /> string; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNullable">
      <MemberSignature Language="C#" Value="public bool IsNullable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNullable" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsNullable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNullable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNullable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNullable : bool" Usage="System.Xaml.XamlType.IsNullable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fdbce-296">Obtiene un valor que indica si este objeto <see cref="T:System.Xaml.XamlType" /> representa un tipo que acepta valores NULL según la definición de XAML.</span><span class="sxs-lookup"><span data-stu-id="fdbce-296">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a nullable type, as per the XAML definition.</span></span></summary>
        <value><span data-ttu-id="fdbce-297">Es <see langword="true" /> si este objeto <see cref="T:System.Xaml.XamlType" /> representa un tipo que acepta valores NULL; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fdbce-297"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a nullable type; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdbce-298">Esta propiedad se alinea con el `[is nullable]` elemento de información en la especificación [MS-XAML].</span><span class="sxs-lookup"><span data-stu-id="fdbce-298">This property aligns to the `[is nullable]` information item in the [MS-XAML] specification.</span></span>  
  
 <span data-ttu-id="fdbce-299">Si no usa la técnica de reflexión de CLR interna de predeterminada para un <xref:System.Xaml.XamlType>, pueden invocar las llamadas a esta propiedad <xref:System.Xaml.XamlType.LookupIsNullable%2A> invalidaciones en <xref:System.Xaml.XamlType> las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="fdbce-299">If you are not using the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsNullable%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPublic">
      <MemberSignature Language="C#" Value="public bool IsPublic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPublic" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsPublic" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPublic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPublic { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsPublic : bool" Usage="System.Xaml.XamlType.IsPublic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fdbce-300">Obtiene un valor que indica si este objeto <see cref="T:System.Xaml.XamlType" /> representa un tipo público en el sistema de tipos adecuado.</span><span class="sxs-lookup"><span data-stu-id="fdbce-300">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a public type in the relevant type system.</span></span></summary>
        <value><span data-ttu-id="fdbce-301">Es <see langword="true" /> si este objeto <see cref="T:System.Xaml.XamlType" /> representa un tipo público; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fdbce-301"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a public type; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdbce-302">Si no utiliza la técnica de reflexión de CLR interna de predeterminada para un <xref:System.Xaml.XamlType>, pueden invocar las llamadas a esta propiedad <xref:System.Xaml.XamlType.LookupIsPublic%2A> invalidaciones en <xref:System.Xaml.XamlType> las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="fdbce-302">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsPublic%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="fdbce-303"><xref:System.Xaml.XamlType.LookupIsPublic%2A> es virtual y, por lo tanto, se puede invalidar.</span><span class="sxs-lookup"><span data-stu-id="fdbce-303"><xref:System.Xaml.XamlType.LookupIsPublic%2A> is virtual, and therefore, can be overridden.</span></span> <span data-ttu-id="fdbce-304">El reemplazo tiene el potencial (para propósitos malintencionados o de otro modo) para cambiar la información de acceso que se notifica sobre un tipo XAML para que ya no esté disponible en la manera esperada con la información de tipo de sistema y el acceso de su tipo CLR subyacente.</span><span class="sxs-lookup"><span data-stu-id="fdbce-304">The override has the potential (whether for malicious purposes or otherwise) to change the reported access information about a XAML type so that it no longer aligns in an expected way with the type system and access information of its underlying CLR type.</span></span> <span data-ttu-id="fdbce-305">Para cualquier comprobación crítico para la seguridad de las operaciones de asignación y acceso, para usar el tipo CLR subyacente en su lugar.</span><span class="sxs-lookup"><span data-stu-id="fdbce-305">For any security-critical checks of assignment operations and access, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUnknown">
      <MemberSignature Language="C#" Value="public bool IsUnknown { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUnknown" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsUnknown" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsUnknown As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsUnknown { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsUnknown : bool" Usage="System.Xaml.XamlType.IsUnknown" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fdbce-306">Obtiene un valor que indica si este objeto <see cref="T:System.Xaml.XamlType" /> representa un tipo que no se puede resolver en el sistema de tipos subyacente.</span><span class="sxs-lookup"><span data-stu-id="fdbce-306">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a type that cannot be resolved in the underlying type system.</span></span></summary>
        <value><span data-ttu-id="fdbce-307">Es <see langword="true" /> si este objeto <see cref="T:System.Xaml.XamlType" /> representa un tipo que no se puede resolver; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fdbce-307"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents an unresolvable type; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdbce-308">Si no utiliza la técnica de reflexión de CLR interna de predeterminada para un <xref:System.Xaml.XamlType>, pueden invocar las llamadas a esta propiedad <xref:System.Xaml.XamlType.LookupIsUnknown%2A> invalidaciones en <xref:System.Xaml.XamlType> las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="fdbce-308">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsUnknown%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span>  
  
 <span data-ttu-id="fdbce-309">Para una ruta de acceso de carga que implica <xref:System.Xaml.XamlObjectWriter>, un <xref:System.Xaml.XamlType> cuya `true` para <xref:System.Xaml.XamlType.IsUnknown%2A> no se puede escribir en un gráfico de objetos.</span><span class="sxs-lookup"><span data-stu-id="fdbce-309">For a load path that involves <xref:System.Xaml.XamlObjectWriter>, a <xref:System.Xaml.XamlType> that has `true` for <xref:System.Xaml.XamlType.IsUnknown%2A> cannot be written into an object graph.</span></span> <span data-ttu-id="fdbce-310">En las implementaciones predeterminadas en <xref:System.Xaml> , el <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A?displayProperty=nameWithType> llamar a produce un <xref:System.Xaml.XamlObjectWriterException> cuando la correspondiente <xref:System.Xaml.XamlType> informes `true` para <xref:System.Xaml.XamlType.IsUnknown%2A>.</span><span class="sxs-lookup"><span data-stu-id="fdbce-310">Under the default implementations in <xref:System.Xaml> , the <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A?displayProperty=nameWithType> call throws a <xref:System.Xaml.XamlObjectWriterException> when the relevant <xref:System.Xaml.XamlType> reports `true` for <xref:System.Xaml.XamlType.IsUnknown%2A>.</span></span> <span data-ttu-id="fdbce-311">No debe pasar un <xref:System.Xaml.XamlType> cuya <xref:System.Xaml.XamlType.IsUnknown%2A> como `true` a menos que esté preparado para controlar las excepciones de <xref:System.Xaml.XamlObjectWriter>, o tienen otras formas de ajustar la <xref:System.Xaml.XamlObjectWriter> comportamiento o el flujo de nodo XAML antes de escribir el objeto gráfico.</span><span class="sxs-lookup"><span data-stu-id="fdbce-311">You should not pass a <xref:System.Xaml.XamlType> that has <xref:System.Xaml.XamlType.IsUnknown%2A> as `true` unless you are prepared to handle the exceptions from <xref:System.Xaml.XamlObjectWriter>, or you have other ways to adjust the <xref:System.Xaml.XamlObjectWriter> behavior or the XAML node stream prior to writing the object graph.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUsableDuringInitialization">
      <MemberSignature Language="C#" Value="public bool IsUsableDuringInitialization { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUsableDuringInitialization" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsUsableDuringInitialization" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsUsableDuringInitialization As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsUsableDuringInitialization { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsUsableDuringInitialization : bool" Usage="System.Xaml.XamlType.IsUsableDuringInitialization" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fdbce-312">Obtiene un valor que indica si este objeto <see cref="T:System.Xaml.XamlType" /> se compila de forma descendente durante la inicialización de XAML.</span><span class="sxs-lookup"><span data-stu-id="fdbce-312">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> is built top-down during XAML initialization.</span></span></summary>
        <value><span data-ttu-id="fdbce-313">Es <see langword="true" /> si este objeto <see cref="T:System.Xaml.XamlType" /> se compila de forma descendente durante la inicialización de XAML; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fdbce-313"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> is built top-down during XAML initialization; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="fdbce-314">El valor predeterminado es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fdbce-314">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdbce-315">Arriba a abajo es una metáfora que se aproxima al comportamiento del procesador XAML al crear el gráfico de objetos.</span><span class="sxs-lookup"><span data-stu-id="fdbce-315">Top-down is a metaphor that approximates XAML processor behavior when creating the object graph.</span></span> <span data-ttu-id="fdbce-316">Cuando compila de arriba a abajo, se crea un tipo, asociado al principal, y, a continuación, se establecen sus propiedades.</span><span class="sxs-lookup"><span data-stu-id="fdbce-316">When built top-down, a type is instantiated, attached to the parent, and then has its properties set.</span></span> <span data-ttu-id="fdbce-317">Construcción de arriba a abajo evita invocar controladores de cambio de propiedad varias veces.</span><span class="sxs-lookup"><span data-stu-id="fdbce-317">Top-down construction avoids invoking property-changed handlers multiple times.</span></span> <span data-ttu-id="fdbce-318">Dicho control propaga el gráfico de objetos y por lo tanto, elimina varias llamadas del controlador y proporciona una optimización del rendimiento para el inicio del gráfico de objetos.</span><span class="sxs-lookup"><span data-stu-id="fdbce-318">Such handling ripples up the object graph and therefore, eliminates the multiple handler calls and provides a performance optimization for startup of the object graph.</span></span>  
  
 <span data-ttu-id="fdbce-319">Si no utiliza la técnica de reflexión de CLR interna de predeterminada para un <xref:System.Xaml.XamlType>, pueden invocar las llamadas a esta propiedad <xref:System.Xaml.XamlType.LookupUsableDuringInitialization%2A> invalidaciones en <xref:System.Xaml.XamlType> las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="fdbce-319">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupUsableDuringInitialization%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="fdbce-320">Para obtener más información acerca de los valores devueltos y otros comportamientos, consulte la documentación de <xref:System.Xaml.XamlType.LookupUsableDuringInitialization%2A> en este tipo.</span><span class="sxs-lookup"><span data-stu-id="fdbce-320">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupUsableDuringInitialization%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Markup.XamlReader.LoadAsync(System.IO.Stream)" />
        <altmember cref="P:System.Windows.FrameworkElement.IsInitialized" />
      </Docs>
    </Member>
    <Member MemberName="IsWhitespaceSignificantCollection">
      <MemberSignature Language="C#" Value="public bool IsWhitespaceSignificantCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsWhitespaceSignificantCollection" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsWhitespaceSignificantCollection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsWhitespaceSignificantCollection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsWhitespaceSignificantCollection { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsWhitespaceSignificantCollection : bool" Usage="System.Xaml.XamlType.IsWhitespaceSignificantCollection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fdbce-321">Obtiene un valor que indica si este objeto <see cref="T:System.Xaml.XamlType" /> representa una colección con espacio en blanco significativo, según la definición de XML.</span><span class="sxs-lookup"><span data-stu-id="fdbce-321">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a whitespace significant collection, as per the XML definition.</span></span></summary>
        <value><span data-ttu-id="fdbce-322">Es <see langword="true" /> si este objeto <see cref="T:System.Xaml.XamlType" /> representa una colección con espacio en blanco significativo; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fdbce-322"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a whitespace significant collection; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdbce-323">Si no utiliza la técnica de reflexión de CLR interna de predeterminada para un <xref:System.Xaml.XamlType>, pueden invocar las llamadas a esta propiedad <xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A> invalidaciones en <xref:System.Xaml.XamlType> las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="fdbce-323">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="fdbce-324">Para obtener más información acerca de los valores devueltos y otros comportamientos, consulte la documentación de <xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A> en este tipo.</span><span class="sxs-lookup"><span data-stu-id="fdbce-324">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsXData">
      <MemberSignature Language="C#" Value="public bool IsXData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsXData" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsXData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsXData As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsXData { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsXData : bool" Usage="System.Xaml.XamlType.IsXData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fdbce-325">Obtiene un valor que indica si este objeto <see cref="T:System.Xaml.XamlType" /> representa <see langword="XDATA" /> en XML según la definición de XAML.</span><span class="sxs-lookup"><span data-stu-id="fdbce-325">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents XML <see langword="XDATA" />, as per the XAML definition.</span></span></summary>
        <value><span data-ttu-id="fdbce-326">Es <see langword="true" /> si este objeto <see cref="T:System.Xaml.XamlType" /> representa <see langword="XDATA" />; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fdbce-326"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents <see langword="XDATA" />; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdbce-327">Esta propiedad se alinea con el `[is xdata]` elemento de información en la especificación [MS-XAML].</span><span class="sxs-lookup"><span data-stu-id="fdbce-327">This property aligns to the `[is xdata]` information item in the [MS-XAML] specification.</span></span>  
  
 <span data-ttu-id="fdbce-328">Si no utiliza la técnica de reflexión de CLR interna de predeterminada para un <xref:System.Xaml.XamlType>, pueden invocar las llamadas a esta propiedad <xref:System.Xaml.XamlType.LookupIsXData%2A> invalidaciones en <xref:System.Xaml.XamlType> las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="fdbce-328">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsXData%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="fdbce-329">Para obtener más información acerca de los valores devueltos y otros comportamientos, consulte la documentación de <xref:System.Xaml.XamlType.LookupIsXData%2A> en este tipo.</span><span class="sxs-lookup"><span data-stu-id="fdbce-329">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupIsXData%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemType">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlType ItemType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlType ItemType" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.ItemType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ItemType As XamlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlType ^ ItemType { System::Xaml::XamlType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ItemType : System.Xaml.XamlType" Usage="System.Xaml.XamlType.ItemType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fdbce-330">Obtiene un valor que proporciona información de tipo para la propiedad <see langword="Items" /> de este objeto <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="fdbce-330">Gets a value that provides the type information for the <see langword="Items" /> property of this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <value><span data-ttu-id="fdbce-331">Objeto <see cref="T:System.Xaml.XamlType" /> para el tipo de los elementos de la colección; de lo contrario, es <see langword="null" /> si este objeto <see cref="T:System.Xaml.XamlType" /> no representa una colección.</span><span class="sxs-lookup"><span data-stu-id="fdbce-331">A <see cref="T:System.Xaml.XamlType" /> object for the type of the items in the collection; otherwise, <see langword="null" />, if this <see cref="T:System.Xaml.XamlType" /> does not represent a collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdbce-332">Esta propiedad solo es pertinente si este <xref:System.Xaml.XamlType> representa una colección (<xref:System.Xaml.XamlType.IsCollection%2A> es `true`).</span><span class="sxs-lookup"><span data-stu-id="fdbce-332">This property is only relevant if this <xref:System.Xaml.XamlType> represents a collection (<xref:System.Xaml.XamlType.IsCollection%2A> is `true`).</span></span> <span data-ttu-id="fdbce-333">El `Items` propiedad es cualquier propiedad que contiene los elementos de ese tipo de colección o matriz.</span><span class="sxs-lookup"><span data-stu-id="fdbce-333">The `Items` property is whatever property holds items in that type of collection or array.</span></span>  
  
 <span data-ttu-id="fdbce-334">Si no utiliza la técnica de reflexión de CLR interna de predeterminada para un <xref:System.Xaml.XamlType>, pueden invocar las llamadas a esta propiedad <xref:System.Xaml.XamlType.LookupItemType%2A> invalidaciones en <xref:System.Xaml.XamlType> las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="fdbce-334">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupItemType%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="fdbce-335">Para obtener más información acerca de los valores devueltos y otros comportamientos, consulte la documentación de <xref:System.Xaml.XamlType.LookupItemType%2A> en este tipo.</span><span class="sxs-lookup"><span data-stu-id="fdbce-335">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupItemType%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyType">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlType KeyType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlType KeyType" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.KeyType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeyType As XamlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlType ^ KeyType { System::Xaml::XamlType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.KeyType : System.Xaml.XamlType" Usage="System.Xaml.XamlType.KeyType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fdbce-336">Obtiene un valor que proporciona información de tipo para la propiedad de la clave de este objeto <see cref="T:System.Xaml.XamlType" />, si <see cref="T:System.Xaml.XamlType" /> representa un diccionario.</span><span class="sxs-lookup"><span data-stu-id="fdbce-336">Gets a value that provides the type information for the key property of this <see cref="T:System.Xaml.XamlType" />, if the <see cref="T:System.Xaml.XamlType" /> represents a dictionary.</span></span></summary>
        <value><span data-ttu-id="fdbce-337">Objeto <see cref="T:System.Xaml.XamlType" /> que corresponde al tipo de la clave para el uso del diccionario; de lo contrario, es <see langword="null" />, si este objeto <see cref="T:System.Xaml.XamlType" /> no representa un diccionario.</span><span class="sxs-lookup"><span data-stu-id="fdbce-337">A <see cref="T:System.Xaml.XamlType" /> object for the type of the key for dictionary usage, otherwise, <see langword="null" />, if this <see cref="T:System.Xaml.XamlType" /> does not represent a dictionary.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdbce-338">Esta propiedad solo es pertinente si este <xref:System.Xaml.XamlType> representa un diccionario (<xref:System.Xaml.XamlType.IsDictionary%2A> es `true`).</span><span class="sxs-lookup"><span data-stu-id="fdbce-338">This property is only relevant if this <xref:System.Xaml.XamlType> represents a dictionary (<xref:System.Xaml.XamlType.IsDictionary%2A> is `true`).</span></span>  
  
 <span data-ttu-id="fdbce-339">Si no utiliza la técnica de reflexión de CLR interna de predeterminada para un <xref:System.Xaml.XamlType>, pueden invocar las llamadas a esta propiedad <xref:System.Xaml.XamlType.LookupKeyType%2A> invalidaciones en <xref:System.Xaml.XamlType> las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="fdbce-339">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupKeyType%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="fdbce-340">Para obtener más información acerca de los valores devueltos y otros comportamientos, consulte la documentación de <xref:System.Xaml.XamlType.LookupKeyType%2A> en este tipo.</span><span class="sxs-lookup"><span data-stu-id="fdbce-340">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupKeyType%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupAliasedProperty">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlMember LookupAliasedProperty (System.Xaml.XamlDirective directive);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlMember LookupAliasedProperty(class System.Xaml.XamlDirective directive) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupAliasedProperty(System.Xaml.XamlDirective)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupAliasedProperty (directive As XamlDirective) As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlMember ^ LookupAliasedProperty(System::Xaml::XamlDirective ^ directive);" />
      <MemberSignature Language="F#" Value="abstract member LookupAliasedProperty : System.Xaml.XamlDirective -&gt; System.Xaml.XamlMember&#xA;override this.LookupAliasedProperty : System.Xaml.XamlDirective -&gt; System.Xaml.XamlMember" Usage="xamlType.LookupAliasedProperty directive" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directive" Type="System.Xaml.XamlDirective" />
      </Parameters>
      <Docs>
        <param name="directive"><span data-ttu-id="fdbce-341">Directiva para la cual se busca el miembro con alias.</span><span class="sxs-lookup"><span data-stu-id="fdbce-341">The directive for which to find the aliased member.</span></span></param>
        <summary><span data-ttu-id="fdbce-342">Devuelve el miembro XAML para el que se ha establecido como alias una directiva XAML mediante este objeto <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="fdbce-342">Returns the XAML member that is aliased to a XAML directive by this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <returns><span data-ttu-id="fdbce-343">Miembro con alias, si se encuentra; de lo contrario, devuelve <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fdbce-343">The aliased member, if found; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdbce-344">Se puede invocar este método cuando un autor de llamada recibe un valor de <xref:System.Xaml.XamlType.GetAliasedProperty%2A>.</span><span class="sxs-lookup"><span data-stu-id="fdbce-344">This method can be invoked when a caller gets a value from <xref:System.Xaml.XamlType.GetAliasedProperty%2A>.</span></span>  
  
 <span data-ttu-id="fdbce-345">La implementación predeterminada puede devolver resultados de las siguientes directivas XAML: `Key`; `Name`; `Uid`; y `xml:lang`.</span><span class="sxs-lookup"><span data-stu-id="fdbce-345">The default implementation can return results for the following XAML directives: `Key`; `Name`; `Uid`; and `xml:lang`.</span></span> <span data-ttu-id="fdbce-346">Los valores de estos dependen de reflexión subyacente y todavía podrían devolver `null` si no se encuentra ninguna propiedad de un alias.</span><span class="sxs-lookup"><span data-stu-id="fdbce-346">Values for these depend on underlying reflection and might still return `null` if no aliased property is found.</span></span>  
  
 <span data-ttu-id="fdbce-347">Invalide este método si no confía en la reflexión de CLR interna predeterminada y está usando metadatos u otras técnicas para notificar la información de sistema de tipos XAML o la información del esquema de un tipo.</span><span class="sxs-lookup"><span data-stu-id="fdbce-347">Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or the schema information of a type.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xaml.XamlDirective" />
        <altmember cref="T:System.Xaml.XamlLanguage" />
      </Docs>
    </Member>
    <Member MemberName="LookupAllAttachableMembers">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlMember&gt; LookupAllAttachableMembers ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.XamlMember&gt; LookupAllAttachableMembers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupAllAttachableMembers" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupAllAttachableMembers () As IEnumerable(Of XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::Xaml::XamlMember ^&gt; ^ LookupAllAttachableMembers();" />
      <MemberSignature Language="F#" Value="abstract member LookupAllAttachableMembers : unit -&gt; seq&lt;System.Xaml.XamlMember&gt;&#xA;override this.LookupAllAttachableMembers : unit -&gt; seq&lt;System.Xaml.XamlMember&gt;" Usage="xamlType.LookupAllAttachableMembers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlMember&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fdbce-348">Devuelve un conjunto enumerable que contiene todas las propiedades adjuntables expuestas por este objeto <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="fdbce-348">Returns an enumerable set that contains all attachable properties that are exposed by this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <returns><span data-ttu-id="fdbce-349">Conjunto enumerable que contiene cero o más valores de <see cref="T:System.Xaml.XamlMember" />; de lo contrario, es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fdbce-349">An enumerable set that contains zero or more <see cref="T:System.Xaml.XamlMember" /> values; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdbce-350">Se puede invocar este método cuando un autor de llamada recibe un valor de <xref:System.Xaml.XamlType.GetAllAttachableMembers%2A>.</span><span class="sxs-lookup"><span data-stu-id="fdbce-350">This method can be invoked when a caller gets a value from <xref:System.Xaml.XamlType.GetAllAttachableMembers%2A>.</span></span>  
  
 <span data-ttu-id="fdbce-351">Aunque <xref:System.Xaml.XamlType.GetAllAttachableMembers%2A> devuelve una colección genérica, esto `Lookup` método devuelve un conjunto enumerable genérico.</span><span class="sxs-lookup"><span data-stu-id="fdbce-351">Although <xref:System.Xaml.XamlType.GetAllAttachableMembers%2A> returns a generic collection, this `Lookup` method returns a generic enumerable set.</span></span>  
  
 <span data-ttu-id="fdbce-352">La implementación predeterminada usa la reflexión de CLR interna.</span><span class="sxs-lookup"><span data-stu-id="fdbce-352">The default implementation uses the internal CLR reflection.</span></span> <span data-ttu-id="fdbce-353">Cuando <xref:System.Xaml.XamlType.UnderlyingType%2A> es `null`, puede usar la implementación predeterminada <xref:System.Xaml.XamlType.BaseType%2A>, si está disponible.</span><span class="sxs-lookup"><span data-stu-id="fdbce-353">When <xref:System.Xaml.XamlType.UnderlyingType%2A> is `null`, the default implementation can use <xref:System.Xaml.XamlType.BaseType%2A>, if it is available.</span></span> <span data-ttu-id="fdbce-354">Llama este comportamiento <xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A> recursivamente para intentar encontrar un tipo base válido y devuelve `null` si no existe ningún tipo base válido.</span><span class="sxs-lookup"><span data-stu-id="fdbce-354">This behavior calls <xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A> recursively to attempt to find a valid base type and returns `null` if no valid base type exists.</span></span>  
  
 <span data-ttu-id="fdbce-355">Invalide este método si no confía en la reflexión de CLR interna predeterminada y está usando metadatos u otras técnicas para notificar la información de sistema de tipos XAML o información de esquema de un tipo.</span><span class="sxs-lookup"><span data-stu-id="fdbce-355">Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or schema information of a type.</span></span> <span data-ttu-id="fdbce-356">Un valor null devuelto se debe reservar para los casos donde no se puede determinar información debido a falta de compatibilidad de sistema o de reflexión de tipos.</span><span class="sxs-lookup"><span data-stu-id="fdbce-356">A null return should be reserved for cases where information cannot be determined because of lack of type system or reflection support.</span></span> <span data-ttu-id="fdbce-357">Si un tipo es válido y reflexión u otras técnicas están disponibles, pero un tipo no tiene miembros que se puede asociar, en su lugar, debe devolver un valor vacío <xref:System.Collections.Generic.IEnumerable%601> establecido.</span><span class="sxs-lookup"><span data-stu-id="fdbce-357">If a type is valid and reflection or other techniques are available, but a type does not have attachable members, you should instead return an empty <xref:System.Collections.Generic.IEnumerable%601> set.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupAllMembers">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlMember&gt; LookupAllMembers ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.XamlMember&gt; LookupAllMembers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupAllMembers" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupAllMembers () As IEnumerable(Of XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::Xaml::XamlMember ^&gt; ^ LookupAllMembers();" />
      <MemberSignature Language="F#" Value="abstract member LookupAllMembers : unit -&gt; seq&lt;System.Xaml.XamlMember&gt;&#xA;override this.LookupAllMembers : unit -&gt; seq&lt;System.Xaml.XamlMember&gt;" Usage="xamlType.LookupAllMembers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlMember&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fdbce-358">Devuelve un conjunto enumerable que contiene todos los miembros expuestos por este objeto <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="fdbce-358">Returns an enumerable set that contains all the members that are exposed by this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <returns><span data-ttu-id="fdbce-359">Conjunto enumerable que contiene cero o más valores de <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="fdbce-359">An enumerable set that contains zero or more <see cref="T:System.Xaml.XamlMember" /> values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdbce-360">Se puede invocar este método cuando un autor de llamada recibe un valor de <xref:System.Xaml.XamlType.GetAllMembers%2A>.</span><span class="sxs-lookup"><span data-stu-id="fdbce-360">This method can be invoked when a caller gets a value from <xref:System.Xaml.XamlType.GetAllMembers%2A>.</span></span>  
  
 <span data-ttu-id="fdbce-361">Aunque <xref:System.Xaml.XamlType.GetAllMembers%2A> devuelve una colección genérica, esto `Lookup` método devuelve un conjunto enumerable genérico.</span><span class="sxs-lookup"><span data-stu-id="fdbce-361">Although <xref:System.Xaml.XamlType.GetAllMembers%2A> returns a generic collection, this `Lookup` method returns a generic enumerable set.</span></span>  
  
 <span data-ttu-id="fdbce-362">La implementación predeterminada usa la reflexión de CLR interna.</span><span class="sxs-lookup"><span data-stu-id="fdbce-362">The default implementation uses the internal CLR reflection.</span></span> <span data-ttu-id="fdbce-363">Para los casos donde <xref:System.Xaml.XamlType.UnderlyingType%2A> es `null`, puede usar la implementación predeterminada <xref:System.Xaml.XamlType.BaseType%2A>, si está disponible.</span><span class="sxs-lookup"><span data-stu-id="fdbce-363">For cases where <xref:System.Xaml.XamlType.UnderlyingType%2A> is `null`, the default implementation can use <xref:System.Xaml.XamlType.BaseType%2A>, if it is available.</span></span> <span data-ttu-id="fdbce-364">Llama este comportamiento <xref:System.Xaml.XamlType.LookupAllMembers%2A> recursivamente para intentar encontrar un tipo base válido y devuelve `null` si no existe ningún tipo base válido.</span><span class="sxs-lookup"><span data-stu-id="fdbce-364">This behavior calls <xref:System.Xaml.XamlType.LookupAllMembers%2A> recursively to attempt to find a valid base type, and returns `null` if no valid base type exists.</span></span>  
  
 <span data-ttu-id="fdbce-365">Invalide este método si no confía en la reflexión de CLR interna predeterminada y está usando metadatos u otras técnicas para notificar la información de sistema de tipos XAML o información de esquema de un tipo.</span><span class="sxs-lookup"><span data-stu-id="fdbce-365">Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or schema information of a type.</span></span> <span data-ttu-id="fdbce-366">Un valor null devuelto se debe reservar para los casos donde no se puede determinar información debido a falta de compatibilidad de sistema o de reflexión de tipos.</span><span class="sxs-lookup"><span data-stu-id="fdbce-366">A null return should be reserved for cases where information cannot be determined because of lack of type system or reflection support.</span></span> <span data-ttu-id="fdbce-367">Si un tipo es válido, la reflexión u otras técnicas están disponibles; Si un tipo no tiene miembros, en su lugar, debe devolver un valor vacío <xref:System.Collections.Generic.IEnumerable%601> establecido.</span><span class="sxs-lookup"><span data-stu-id="fdbce-367">If a type is valid, reflection or other techniques are available; if a type does not have members, you should instead return an empty <xref:System.Collections.Generic.IEnumerable%601> set.</span></span>  
  
 <span data-ttu-id="fdbce-368">Devolver valores de <xref:System.Xaml.XamlType.LookupAllMembers%2A> y <xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A> deben ser mutuamente excluyentes.</span><span class="sxs-lookup"><span data-stu-id="fdbce-368">Return values for <xref:System.Xaml.XamlType.LookupAllMembers%2A> and <xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A> should be mutually exclusive.</span></span> <span data-ttu-id="fdbce-369">Si tienes una situación donde una propiedad de sistema de tipo de respaldo puede admitir un uso de la instancia estándar, así como un uso que se puede asociar, ese miembro debe notificarse como dos diferentes <xref:System.Xaml.XamlMember> valores, con un valor que aparece en la lista que se puede asociar y otro en el lista de miembros estándar.</span><span class="sxs-lookup"><span data-stu-id="fdbce-369">If you have a situation where a backing type system property can support a standard instance usage as well as an attachable usage, that member should be reported as two different <xref:System.Xaml.XamlMember> values, with one value appearing in the attachable list and another in the standard members list.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupAllowedContentTypes">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; LookupAllowedContentTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlType&gt; LookupAllowedContentTypes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupAllowedContentTypes" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupAllowedContentTypes () As IList(Of XamlType)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ LookupAllowedContentTypes();" />
      <MemberSignature Language="F#" Value="abstract member LookupAllowedContentTypes : unit -&gt; System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;&#xA;override this.LookupAllowedContentTypes : unit -&gt; System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;" Usage="xamlType.LookupAllowedContentTypes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fdbce-370">Devuelve una lista de los tipos que se pueden usar como valor de la propiedad <see cref="P:System.Xaml.XamlType.ContentProperty" /> de este objeto <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="fdbce-370">Returns a list of the types that are usable as the <see cref="P:System.Xaml.XamlType.ContentProperty" /> value for this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <returns><span data-ttu-id="fdbce-371">Lista de posibles tipos de contenido.</span><span class="sxs-lookup"><span data-stu-id="fdbce-371">A list of possible content types.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdbce-372">Se puede invocar este método cuando un autor de llamada recibe un valor de <xref:System.Xaml.XamlType.AllowedContentTypes%2A>.</span><span class="sxs-lookup"><span data-stu-id="fdbce-372">This method can be invoked when a caller gets a value from <xref:System.Xaml.XamlType.AllowedContentTypes%2A>.</span></span>  
  
 <span data-ttu-id="fdbce-373">Tipos que se evalúan como <xref:System.Xaml.XamlType.CanAssignTo%2A> para un tipo de contenido específico no se consideran varios tipos para los fines de <xref:System.Xaml.XamlType.AllowedContentTypes%2A>.</span><span class="sxs-lookup"><span data-stu-id="fdbce-373">Types that evaluate as <xref:System.Xaml.XamlType.CanAssignTo%2A> for a specific content type are not considered multiple types for purposes of <xref:System.Xaml.XamlType.AllowedContentTypes%2A>.</span></span>  
  
 <span data-ttu-id="fdbce-374">La implementación predeterminada puede usar otras propiedades de <xref:System.Xaml.XamlType> (<xref:System.Xaml.XamlType.ContentWrappers%2A>, <xref:System.Xaml.XamlType.ContentProperty%2A>, o <xref:System.Xaml.XamlType.ItemType%2A>) para obtener un resultado.</span><span class="sxs-lookup"><span data-stu-id="fdbce-374">The default implementation can use other properties of <xref:System.Xaml.XamlType> (<xref:System.Xaml.XamlType.ContentWrappers%2A>, <xref:System.Xaml.XamlType.ContentProperty%2A>, or <xref:System.Xaml.XamlType.ItemType%2A>) to obtain a result.</span></span> <span data-ttu-id="fdbce-375">El `Lookup` invalida de la lista de propiedades anterior también se puede invocar en esta determinación.</span><span class="sxs-lookup"><span data-stu-id="fdbce-375">The `Lookup` overrides for the preceding property list can also be invoked in this determination.</span></span>  
  
 <span data-ttu-id="fdbce-376">Invalide este método si no confía en la reflexión de CLR interna predeterminada y está usando metadatos u otras técnicas para notificar la información de sistema de tipos XAML o información de esquema de un tipo.</span><span class="sxs-lookup"><span data-stu-id="fdbce-376">Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or schema information of a type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupAttachableMember">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlMember LookupAttachableMember (string name);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlMember LookupAttachableMember(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupAttachableMember(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupAttachableMember (name As String) As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlMember ^ LookupAttachableMember(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member LookupAttachableMember : string -&gt; System.Xaml.XamlMember&#xA;override this.LookupAttachableMember : string -&gt; System.Xaml.XamlMember" Usage="xamlType.LookupAttachableMember name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="fdbce-377">Nombre del miembro adjuntable que se va a obtener, en el formulario <c>ownerTypeName.MemberName</c>.</span><span class="sxs-lookup"><span data-stu-id="fdbce-377">The name of the attachable member to get, in <c>ownerTypeName.MemberName</c> form.</span></span></param>
        <summary><span data-ttu-id="fdbce-378">Devuelve un <see cref="T:System.Xaml.XamlMember" /> para un adjuntable con nombre especificado en este <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="fdbce-378">Returns a <see cref="T:System.Xaml.XamlMember" /> for a specific named attachable from this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <returns><span data-ttu-id="fdbce-379">Objeto <see cref="T:System.Xaml.XamlMember" /> para el miembro adjuntable solicitado; de lo contrario, <see langword="null" />, si no existe ningún miembro adjuntable con ese nombre.</span><span class="sxs-lookup"><span data-stu-id="fdbce-379">A <see cref="T:System.Xaml.XamlMember" /> object for the requested attachable member; otherwise, <see langword="null" />, if no attachable member by that name exists.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdbce-380">Se puede invocar este método cuando un autor de llamada recibe un valor de <xref:System.Xaml.XamlType.GetAttachableMember%2A>.</span><span class="sxs-lookup"><span data-stu-id="fdbce-380">This method can be invoked when a caller gets a value from <xref:System.Xaml.XamlType.GetAttachableMember%2A>.</span></span>  
  
 <span data-ttu-id="fdbce-381">La implementación predeterminada usa la reflexión de CLR interna.</span><span class="sxs-lookup"><span data-stu-id="fdbce-381">The default implementation uses the internal CLR reflection.</span></span> <span data-ttu-id="fdbce-382">Cuando <xref:System.Xaml.XamlType.UnderlyingType%2A> es `null`, puede usar la implementación predeterminada <xref:System.Xaml.XamlType.BaseType%2A>, si está disponible.</span><span class="sxs-lookup"><span data-stu-id="fdbce-382">When <xref:System.Xaml.XamlType.UnderlyingType%2A> is `null`, the default implementation can use <xref:System.Xaml.XamlType.BaseType%2A>, if it is available.</span></span> <span data-ttu-id="fdbce-383">Llama este comportamiento <xref:System.Xaml.XamlType.LookupAttachableMember%2A> recursivamente para intentar encontrar un tipo base válido y devuelve `null` si no existe ningún tipo base válido.</span><span class="sxs-lookup"><span data-stu-id="fdbce-383">This behavior calls <xref:System.Xaml.XamlType.LookupAttachableMember%2A> recursively to attempt to find a valid base type and returns `null` if no valid base type exists.</span></span>  
  
 <span data-ttu-id="fdbce-384">Invalide este método si no confía en la reflexión de CLR interna predeterminada y está usando metadatos u otras técnicas para notificar la información de sistema de tipos XAML o información de esquema de un tipo.</span><span class="sxs-lookup"><span data-stu-id="fdbce-384">Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or schema information of a type.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="fdbce-385"><xref:System.Xaml.XamlType.LookupAttachableMember%2A> es virtual y, por lo tanto, se puede invalidar.</span><span class="sxs-lookup"><span data-stu-id="fdbce-385"><xref:System.Xaml.XamlType.LookupAttachableMember%2A> is virtual, and therefore, can be overridden.</span></span> <span data-ttu-id="fdbce-386">El reemplazo tiene el potencial (para propósitos malintencionados o de otro modo) para cambiar los miembros de un tipo XAML notificados para que ya no queden en la manera esperada con el <xref:System.ComponentModel.TypeDescriptor> `Get*` información sobre el tipo CLR subyacente.</span><span class="sxs-lookup"><span data-stu-id="fdbce-386">The override has the potential (whether for malicious purposes or otherwise) to change the reported members of a XAML type so that they no longer align in an expected way with the <xref:System.ComponentModel.TypeDescriptor> `Get*` information about the underlying CLR type.</span></span> <span data-ttu-id="fdbce-387">Para cualquier comprobación crítico para la seguridad de miembro reporting, para usar el tipo CLR subyacente en su lugar.</span><span class="sxs-lookup"><span data-stu-id="fdbce-387">For any security-critical checks of member reporting, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupBaseType">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlType LookupBaseType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlType LookupBaseType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupBaseType" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupBaseType () As XamlType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlType ^ LookupBaseType();" />
      <MemberSignature Language="F#" Value="abstract member LookupBaseType : unit -&gt; System.Xaml.XamlType&#xA;override this.LookupBaseType : unit -&gt; System.Xaml.XamlType" Usage="xamlType.LookupBaseType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fdbce-388">Devuelve el objeto <see cref="T:System.Xaml.XamlType" /> para el tipo base inmediato de este tipo XAML.</span><span class="sxs-lookup"><span data-stu-id="fdbce-388">Returns the <see cref="T:System.Xaml.XamlType" /> for the immediate base type of this XAML type.</span></span> <span data-ttu-id="fdbce-389">La determinación de este valor se basa en el tipo subyacente de este objeto <see cref="T:System.Xaml.XamlType" /> y el contexto de esquema.</span><span class="sxs-lookup"><span data-stu-id="fdbce-389">Determination of this value is based on the underlying type of this <see cref="T:System.Xaml.XamlType" /> and schema context.</span></span></summary>
        <returns><span data-ttu-id="fdbce-390"><see cref="T:System.Xaml.XamlType" /> para el tipo base inmediato de este tipo XAML.</span><span class="sxs-lookup"><span data-stu-id="fdbce-390">The <see cref="T:System.Xaml.XamlType" /> for the immediate base type of this XAML type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdbce-391">Se puede invocar este método cuando un autor de llamada recibe un valor de <xref:System.Xaml.XamlType.BaseType%2A>.</span><span class="sxs-lookup"><span data-stu-id="fdbce-391">This method can be invoked when a caller gets a value from <xref:System.Xaml.XamlType.BaseType%2A>.</span></span>  
  
 <span data-ttu-id="fdbce-392">La implementación predeterminada podría devolver una constante interna que representa la <xref:System.Object> si <xref:System.Xaml.XamlType.UnderlyingType%2A> es `null`.</span><span class="sxs-lookup"><span data-stu-id="fdbce-392">The default implementation might return an internal constant that represents the <xref:System.Object> if <xref:System.Xaml.XamlType.UnderlyingType%2A> is `null`.</span></span>  
  
 <span data-ttu-id="fdbce-393">Invalide este método si no confía en la reflexión de CLR interna predeterminada y está usando metadatos u otras técnicas para notificar la información de sistema de tipos XAML o información de esquema de un tipo.</span><span class="sxs-lookup"><span data-stu-id="fdbce-393">Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or schema information of a type.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="fdbce-394"><xref:System.Xaml.XamlType.LookupBaseType%2A> es virtual y, por lo tanto, se puede invalidar.</span><span class="sxs-lookup"><span data-stu-id="fdbce-394"><xref:System.Xaml.XamlType.LookupBaseType%2A> is virtual, and therefore, can be overridden.</span></span> <span data-ttu-id="fdbce-395">El reemplazo tiene el potencial (para propósitos malintencionados o de otro modo) para cambiar la información de tipo que se notifica sobre un tipo XAML para que ya no esté disponible en la manera esperada con la información del sistema de tipo de su tipo CLR subyacente.</span><span class="sxs-lookup"><span data-stu-id="fdbce-395">The override has the potential (whether for malicious purposes or otherwise) to change the reported type information about a XAML type so that it no longer aligns in an expected way with the type system information of its underlying CLR type.</span></span> <span data-ttu-id="fdbce-396">Para cualquier comprobación crítico para la seguridad de las operaciones de asignación y acceso, para usar el tipo CLR subyacente en su lugar.</span><span class="sxs-lookup"><span data-stu-id="fdbce-396">For any security-critical checks of assignment operations and access, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupCollectionKind">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlCollectionKind LookupCollectionKind ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.Xaml.Schema.XamlCollectionKind LookupCollectionKind() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupCollectionKind" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupCollectionKind () As XamlCollectionKind" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlCollectionKind LookupCollectionKind();" />
      <MemberSignature Language="F#" Value="abstract member LookupCollectionKind : unit -&gt; System.Xaml.Schema.XamlCollectionKind&#xA;override this.LookupCollectionKind : unit -&gt; System.Xaml.Schema.XamlCollectionKind" Usage="xamlType.LookupCollectionKind " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlCollectionKind</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fdbce-397">Devuelve un valor de la enumeración <see cref="T:System.Xaml.Schema.XamlCollectionKind" /> que declara el tipo de colección que este objeto <see cref="T:System.Xaml.XamlType" /> usa.</span><span class="sxs-lookup"><span data-stu-id="fdbce-397">Returns a value of the <see cref="T:System.Xaml.Schema.XamlCollectionKind" /> enumeration that declares which specific collection type this <see cref="T:System.Xaml.XamlType" /> uses.</span></span></summary>
        <returns><span data-ttu-id="fdbce-398">Valor de la enumeración <see cref="T:System.Xaml.Schema.XamlCollectionKind" />.</span><span class="sxs-lookup"><span data-stu-id="fdbce-398">A value of the <see cref="T:System.Xaml.Schema.XamlCollectionKind" /> enumeration.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdbce-399">Este método invoca un método privado interno (no pública `CollectionKind` o `GetCollectionKind` API existe en <xref:System.Xaml.XamlType>).</span><span class="sxs-lookup"><span data-stu-id="fdbce-399">This method is invoked by an internal private method (no public `CollectionKind` or `GetCollectionKind` API exists on <xref:System.Xaml.XamlType>).</span></span>  
  
 <span data-ttu-id="fdbce-400">La implementación predeterminada usa la reflexión de CLR interna.</span><span class="sxs-lookup"><span data-stu-id="fdbce-400">The default implementation uses the internal CLR reflection.</span></span> <span data-ttu-id="fdbce-401">Para los casos donde <xref:System.Xaml.XamlType.UnderlyingType%2A> es `null`, puede usar la implementación predeterminada <xref:System.Xaml.XamlType.BaseType%2A>, si está disponible.</span><span class="sxs-lookup"><span data-stu-id="fdbce-401">For cases where <xref:System.Xaml.XamlType.UnderlyingType%2A> is `null`, the default implementation can use <xref:System.Xaml.XamlType.BaseType%2A>, if it is available.</span></span> <span data-ttu-id="fdbce-402">Este comportamiento llama indirectamente <xref:System.Xaml.XamlType.LookupCollectionKind%2A> recursivamente para intentar buscar un tipo base válido; devuelve <xref:System.Xaml.Schema.XamlCollectionKind.None?displayProperty=nameWithType> si no existe ningún tipo base válido.</span><span class="sxs-lookup"><span data-stu-id="fdbce-402">This behavior indirectly calls <xref:System.Xaml.XamlType.LookupCollectionKind%2A> recursively to attempt to find a valid base type; it returns <xref:System.Xaml.Schema.XamlCollectionKind.None?displayProperty=nameWithType> if no valid base type exists.</span></span> <span data-ttu-id="fdbce-403">En general, la implementación predeterminada intenta encontrar el `Add` método del tipo subyacente por reflexión.</span><span class="sxs-lookup"><span data-stu-id="fdbce-403">In general, the default implementation attempts to find the `Add` method of the underlying type by reflection.</span></span> <span data-ttu-id="fdbce-404">Si se encuentra, el <xref:System.Reflection.MethodInfo> de la `Add` método es suficiente información para determinar qué <xref:System.Xaml.Schema.XamlCollectionKind> se debe devolver el valor.</span><span class="sxs-lookup"><span data-stu-id="fdbce-404">If found, the <xref:System.Reflection.MethodInfo> of the `Add` method is enough information to determine which <xref:System.Xaml.Schema.XamlCollectionKind> value should be returned.</span></span> <span data-ttu-id="fdbce-405">De lo contrario, devuelve <xref:System.Xaml.Schema.XamlCollectionKind.None?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="fdbce-405">Otherwise, it returns <xref:System.Xaml.Schema.XamlCollectionKind.None?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="fdbce-406">Invalide este método si no confía en la reflexión de CLR interna predeterminada y está usando metadatos u otras técnicas para notificar la información de sistema de tipos XAML o información de esquema de un tipo.</span><span class="sxs-lookup"><span data-stu-id="fdbce-406">Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or schema information of a type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupConstructionRequiresArguments">
      <MemberSignature Language="C#" Value="protected virtual bool LookupConstructionRequiresArguments ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupConstructionRequiresArguments() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupConstructionRequiresArguments" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupConstructionRequiresArguments () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupConstructionRequiresArguments();" />
      <MemberSignature Language="F#" Value="abstract member LookupConstructionRequiresArguments : unit -&gt; bool&#xA;override this.LookupConstructionRequiresArguments : unit -&gt; bool" Usage="xamlType.LookupConstructionRequiresArguments " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fdbce-407">Devuelve un valor que indica si este objeto <see cref="T:System.Xaml.XamlType" /> debe tener argumentos (restricciones genéricas a través de <see langword="x:TypeArguments" />, texto de inicialización u otras técnicas de XAML) para construir una instancia válida del tipo.</span><span class="sxs-lookup"><span data-stu-id="fdbce-407">Returns a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> must have arguments (generic constraints through <see langword="x:TypeArguments" />, initialization text, or other XAML techniques) to construct a valid instance of the type.</span></span></summary>
        <returns><span data-ttu-id="fdbce-408">Es <see langword="true" /> si la construcción de una instancia necesita valores de argumento; de lo contrario, es false.</span><span class="sxs-lookup"><span data-stu-id="fdbce-408"><see langword="true" /> if construction of an instance requires some argument value; otherwise, false.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdbce-409">Se puede invocar este método cuando un autor de llamada recibe un valor de <xref:System.Xaml.XamlType.ConstructionRequiresArguments%2A>.</span><span class="sxs-lookup"><span data-stu-id="fdbce-409">This method can be invoked when a caller gets a value from <xref:System.Xaml.XamlType.ConstructionRequiresArguments%2A>.</span></span>  
  
 <span data-ttu-id="fdbce-410">La implementación predeterminada devuelve `false` para los tipos que se consideran tipos de valor en el CLR de sistema de tipos.</span><span class="sxs-lookup"><span data-stu-id="fdbce-410">The default implementation returns `false` for types considered value types in the CLR type system.</span></span> <span data-ttu-id="fdbce-411">Para los tipos de valor, la reflexión de CLR que no <xref:System.Reflection.ConstructorInfo> se usa para determinar si existe un constructor predeterminado.</span><span class="sxs-lookup"><span data-stu-id="fdbce-411">For other than value types, CLR reflection <xref:System.Reflection.ConstructorInfo> is used to determine whether a default constructor exists.</span></span>  
  
 <span data-ttu-id="fdbce-412">Invalide este método si no confía en la reflexión de CLR interna predeterminada y está usando metadatos u otras técnicas para notificar la información de sistema de tipos XAML o información de esquema de un tipo.</span><span class="sxs-lookup"><span data-stu-id="fdbce-412">Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or schema information of a type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupContentProperty">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlMember LookupContentProperty ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlMember LookupContentProperty() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupContentProperty" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupContentProperty () As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlMember ^ LookupContentProperty();" />
      <MemberSignature Language="F#" Value="abstract member LookupContentProperty : unit -&gt; System.Xaml.XamlMember&#xA;override this.LookupContentProperty : unit -&gt; System.Xaml.XamlMember" Usage="xamlType.LookupContentProperty " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fdbce-413">Devuelve información sobre <see cref="T:System.Xaml.XamlMember" /> para la propiedad de contenido de este objeto <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="fdbce-413">Returns <see cref="T:System.Xaml.XamlMember" /> information for the content property of this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <returns><span data-ttu-id="fdbce-414">Información sobre <see cref="T:System.Xaml.XamlMember" /> para la propiedad de contenido de este objeto <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="fdbce-414"><see cref="T:System.Xaml.XamlMember" /> information for the content property of this <see cref="T:System.Xaml.XamlType" />.</span></span> <span data-ttu-id="fdbce-415">Puede ser <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fdbce-415">May be <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdbce-416">Se puede invocar este método cuando un autor de llamada recibe un valor de <xref:System.Xaml.XamlType.ContentProperty%2A>.</span><span class="sxs-lookup"><span data-stu-id="fdbce-416">This method can be invoked when a caller gets a value from <xref:System.Xaml.XamlType.ContentProperty%2A>.</span></span>  
  
 <span data-ttu-id="fdbce-417">La implementación predeterminada busca <xref:System.Windows.Markup.ContentPropertyAttribute> en la definición de tipo.</span><span class="sxs-lookup"><span data-stu-id="fdbce-417">The default implementation checks for <xref:System.Windows.Markup.ContentPropertyAttribute> on the type definition.</span></span> <span data-ttu-id="fdbce-418">También puede comprobar <xref:System.Xaml.XamlType.BaseType%2A> para el atributo si se encuentra ningún atributo en el tipo subyacente de inmediato.</span><span class="sxs-lookup"><span data-stu-id="fdbce-418">It can also check <xref:System.Xaml.XamlType.BaseType%2A> for the attribute if no attribute is found on the immediate underlying type.</span></span> <span data-ttu-id="fdbce-419">Si estas comprobaciones no detectan un tipo de contenido, la implementación predeterminada devuelve `null`.</span><span class="sxs-lookup"><span data-stu-id="fdbce-419">If these checks do not discover a content type, the default implementation returns `null`.</span></span>  
  
 <span data-ttu-id="fdbce-420">Invalide este método si no confía en la reflexión de CLR interna predeterminada y está usando metadatos u otras técnicas para notificar la información de sistema de tipos XAML o información de esquema de un tipo.</span><span class="sxs-lookup"><span data-stu-id="fdbce-420">Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or schema information of a type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupContentWrappers">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; LookupContentWrappers ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlType&gt; LookupContentWrappers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupContentWrappers" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupContentWrappers () As IList(Of XamlType)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ LookupContentWrappers();" />
      <MemberSignature Language="F#" Value="abstract member LookupContentWrappers : unit -&gt; System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;&#xA;override this.LookupContentWrappers : unit -&gt; System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;" Usage="xamlType.LookupContentWrappers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fdbce-421">Obtiene una lista de valores de <see cref="T:System.Xaml.XamlType" /> que representan los contenedores de contenido de este objeto <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="fdbce-421">Gets a list of <see cref="T:System.Xaml.XamlType" /> values that represent the content wrappers for this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <returns><span data-ttu-id="fdbce-422">Lista de valores de <see cref="T:System.Xaml.XamlType" /> que representan los contenedores de contenido de este objeto <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="fdbce-422">A list of <see cref="T:System.Xaml.XamlType" /> values that represent the content wrappers for this <see cref="T:System.Xaml.XamlType" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdbce-423">Contenedor de contenido es una clase que representa el tipo de colección de contenido cuando los tipos que se usan en esa colección no son contiguos en el sistema de tipos.</span><span class="sxs-lookup"><span data-stu-id="fdbce-423">A content wrapper is a class that represents the content collection type when the types that are used in that collection are not contiguous to the type system.</span></span> <span data-ttu-id="fdbce-424">Los tipos de elementos de recopilación para el contenedor de contenido deben estar limitado de alguna manera más allá de <xref:System.Object> o un equivalente de objeto neutro.</span><span class="sxs-lookup"><span data-stu-id="fdbce-424">The types of collection items for the content wrapper are expected to be limited in some manner beyond <xref:System.Object> or a neutral object equivalent.</span></span> <span data-ttu-id="fdbce-425">Sin embargo, esta limitación solo se aplica por el diseño o el propósito de las propiedades que usan ese tipo y no por el sistema de tipos.</span><span class="sxs-lookup"><span data-stu-id="fdbce-425">However, this limitation is only enforced by the design or purpose of the properties that use that type, and not by the type system.</span></span> <span data-ttu-id="fdbce-426">Puede haber más de un contenedor de contenido en un tipo.</span><span class="sxs-lookup"><span data-stu-id="fdbce-426">More than one content wrapper can exist on a type.</span></span>  
  
 <span data-ttu-id="fdbce-427">Para una clase de ejemplo y el escenario de la implementación WPF XAML, vea <xref:System.Windows.Documents.InlineCollection>.</span><span class="sxs-lookup"><span data-stu-id="fdbce-427">For an example class and scenario from the WPF XAML implementation, see <xref:System.Windows.Documents.InlineCollection>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupCustomAttributeProvider">
      <MemberSignature Language="C#" Value="protected virtual System.Reflection.ICustomAttributeProvider LookupCustomAttributeProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Reflection.ICustomAttributeProvider LookupCustomAttributeProvider() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupCustomAttributeProvider" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupCustomAttributeProvider () As ICustomAttributeProvider" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Reflection::ICustomAttributeProvider ^ LookupCustomAttributeProvider();" />
      <MemberSignature Language="F#" Value="abstract member LookupCustomAttributeProvider : unit -&gt; System.Reflection.ICustomAttributeProvider&#xA;override this.LookupCustomAttributeProvider : unit -&gt; System.Reflection.ICustomAttributeProvider" Usage="xamlType.LookupCustomAttributeProvider " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ICustomAttributeProvider</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fdbce-428">Cuando se implementa en una clase derivada, devuelve una implementación de <see cref="T:System.Reflection.ICustomAttributeProvider" />.</span><span class="sxs-lookup"><span data-stu-id="fdbce-428">When implemented in a derived class, returns an <see cref="T:System.Reflection.ICustomAttributeProvider" /> implementation.</span></span></summary>
        <returns><span data-ttu-id="fdbce-429">Implementación de <see cref="T:System.Reflection.ICustomAttributeProvider" />.</span><span class="sxs-lookup"><span data-stu-id="fdbce-429">An <see cref="T:System.Reflection.ICustomAttributeProvider" /> implementation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdbce-430">Invalide este método para proporcionar la reflexión interna con una manera alternativa para obtener los valores de atributo CLR.</span><span class="sxs-lookup"><span data-stu-id="fdbce-430">Override this method to provide the internal reflection with an alternative way to obtain CLR attribute values.</span></span> <span data-ttu-id="fdbce-431">En ausencia de una invalidación, el reflector interno usa la lógica de reflexión de CLR típica.</span><span class="sxs-lookup"><span data-stu-id="fdbce-431">In absence of an override, the internal reflector uses typical CLR reflection logic.</span></span>  
  
 <span data-ttu-id="fdbce-432">La implementación predeterminada devuelve `null`.</span><span class="sxs-lookup"><span data-stu-id="fdbce-432">The default implementation returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupDeferringLoader">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt; LookupDeferringLoader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.Xaml.XamlDeferringLoader&gt; LookupDeferringLoader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupDeferringLoader" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupDeferringLoader () As XamlValueConverter(Of XamlDeferringLoader)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlValueConverter&lt;System::Xaml::XamlDeferringLoader ^&gt; ^ LookupDeferringLoader();" />
      <MemberSignature Language="F#" Value="abstract member LookupDeferringLoader : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;&#xA;override this.LookupDeferringLoader : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;" Usage="xamlType.LookupDeferringLoader " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fdbce-433">Devuelve un objeto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, que se emplea para la carga aplazada de objetos declarados en XAML.</span><span class="sxs-lookup"><span data-stu-id="fdbce-433">Returns a <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> object, which is used for deferred loading of XAML-declared objects.</span></span></summary>
        <returns><span data-ttu-id="fdbce-434"><see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> que tiene una restricción <see cref="T:System.Xaml.XamlDeferringLoader" /> en el genérico.</span><span class="sxs-lookup"><span data-stu-id="fdbce-434">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> that has a <see cref="T:System.Xaml.XamlDeferringLoader" /> constraint on the generic.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdbce-435">Se puede invocar este método cuando un autor de llamada recibe un valor de <xref:System.Xaml.XamlType.DeferringLoader%2A>.</span><span class="sxs-lookup"><span data-stu-id="fdbce-435">This method can be invoked when a caller gets a value from <xref:System.Xaml.XamlType.DeferringLoader%2A>.</span></span> <span data-ttu-id="fdbce-436">Invalide este método si desea <xref:System.Xaml.XamlType.DeferringLoader%2A> para devolver un valor diferente que está habilitado de forma reflexión interna predeterminada y también proporcionan una personalizada <xref:System.Xaml.Schema.XamlTypeInvoker> información.</span><span class="sxs-lookup"><span data-stu-id="fdbce-436">Override this method if you want <xref:System.Xaml.XamlType.DeferringLoader%2A> to return a different value than is enabled by default internal reflection and are also providing custom <xref:System.Xaml.Schema.XamlTypeInvoker> information.</span></span>  
  
 <span data-ttu-id="fdbce-437">La implementación predeterminada devuelve un objeto basándose en la lectura <xref:System.Windows.Markup.XamlDeferLoadAttribute>.</span><span class="sxs-lookup"><span data-stu-id="fdbce-437">The default implementation returns an object on the basis of reading <xref:System.Windows.Markup.XamlDeferLoadAttribute>.</span></span> <span data-ttu-id="fdbce-438">También puede comprobar <xref:System.Xaml.XamlType.BaseType%2A> para el atributo si se encuentra ningún atributo en el tipo subyacente de inmediato.</span><span class="sxs-lookup"><span data-stu-id="fdbce-438">It can also  check <xref:System.Xaml.XamlType.BaseType%2A> for the attribute if no attribute is found on the immediate underlying type.</span></span> <span data-ttu-id="fdbce-439">Si un valor no está disponible, este método devuelve `null`.</span><span class="sxs-lookup"><span data-stu-id="fdbce-439">If a value is unavailable, this method returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupInvoker">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlTypeInvoker LookupInvoker ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.Schema.XamlTypeInvoker LookupInvoker() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupInvoker" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupInvoker () As XamlTypeInvoker" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlTypeInvoker ^ LookupInvoker();" />
      <MemberSignature Language="F#" Value="abstract member LookupInvoker : unit -&gt; System.Xaml.Schema.XamlTypeInvoker&#xA;override this.LookupInvoker : unit -&gt; System.Xaml.Schema.XamlTypeInvoker" Usage="xamlType.LookupInvoker " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlTypeInvoker</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fdbce-440">Devuelve un <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> que está asociado con este <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="fdbce-440">Returns a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> that is associated with this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <returns><span data-ttu-id="fdbce-441">Información de <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> para este <see cref="T:System.Xaml.XamlType" />; de lo contrario, es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fdbce-441">The <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> information for this <see cref="T:System.Xaml.XamlType" />; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdbce-442">Este método se puede invocar mediante llamadas a <xref:System.Xaml.XamlType.Invoker%2A>.</span><span class="sxs-lookup"><span data-stu-id="fdbce-442">This method can be invoked by calls to <xref:System.Xaml.XamlType.Invoker%2A>.</span></span>  
  
 <span data-ttu-id="fdbce-443">La implementación predeterminada no requiere que un <xref:System.Xaml.XamlType> se construye mediante uno de los constructores que pasan un inicial <xref:System.Xaml.Schema.XamlTypeInvoker>.</span><span class="sxs-lookup"><span data-stu-id="fdbce-443">The default implementation does not require that a <xref:System.Xaml.XamlType> be constructed by using one of the constructors that pass an initial <xref:System.Xaml.Schema.XamlTypeInvoker>.</span></span> <span data-ttu-id="fdbce-444">Sin embargo, un <xref:System.Xaml.XamlType.UnderlyingType%2A> valor debe existir para el <xref:System.Xaml.XamlType>; de lo contrario, la implementación predeterminada devuelve `null`.</span><span class="sxs-lookup"><span data-stu-id="fdbce-444">However, an <xref:System.Xaml.XamlType.UnderlyingType%2A> value must exist for the <xref:System.Xaml.XamlType>; otherwise, the default implementation returns `null`.</span></span>  
  
 <span data-ttu-id="fdbce-445">Invalide este método si crea también una clase derivada de <xref:System.Xaml.Schema.XamlTypeInvoker> y va a devolver la clase derivada.</span><span class="sxs-lookup"><span data-stu-id="fdbce-445">Override this method if you also create a derived class from <xref:System.Xaml.Schema.XamlTypeInvoker> and intend to return the derived class.</span></span> <span data-ttu-id="fdbce-446">Si la devolución `null`, <xref:System.Xaml.XamlType.Invoker%2A> devuelve <xref:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker%2A?displayProperty=nameWithType> a los llamadores.</span><span class="sxs-lookup"><span data-stu-id="fdbce-446">If you return `null`, <xref:System.Xaml.XamlType.Invoker%2A> returns <xref:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker%2A?displayProperty=nameWithType> to callers.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupIsAmbient">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsAmbient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsAmbient() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupIsAmbient" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsAmbient () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsAmbient();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsAmbient : unit -&gt; bool&#xA;override this.LookupIsAmbient : unit -&gt; bool" Usage="xamlType.LookupIsAmbient " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fdbce-447">Devuelve un valor que indica si este objeto <see cref="T:System.Xaml.XamlType" /> representa un tipo de ambiente según la definición de XAML.</span><span class="sxs-lookup"><span data-stu-id="fdbce-447">Returns a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents an ambient type, as per the XAML definition.</span></span></summary>
        <returns><span data-ttu-id="fdbce-448">Es <see langword="true" /> si este objeto <see cref="T:System.Xaml.XamlType" /> representa un tipo de ambiente; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fdbce-448"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents an ambient type; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdbce-449">Este método se puede invocar mediante llamadas a <xref:System.Xaml.XamlType.IsAmbient%2A>.</span><span class="sxs-lookup"><span data-stu-id="fdbce-449">This method can be invoked by calls to <xref:System.Xaml.XamlType.IsAmbient%2A>.</span></span>  
  
 <span data-ttu-id="fdbce-450">La implementación predeterminada usa la reflexión de CLR en el <xref:System.Xaml.XamlType.UnderlyingType%2A> y puede comprobar los tipos base.</span><span class="sxs-lookup"><span data-stu-id="fdbce-450">The default implementation uses CLR reflection on the <xref:System.Xaml.XamlType.UnderlyingType%2A> and can check the base types.</span></span> <span data-ttu-id="fdbce-451">Esta implementación comprueba el <xref:System.Windows.Markup.AmbientAttribute> que se aplica a la definición del tipo pertinente en el nivel de clase y devuelve `true` en este caso.</span><span class="sxs-lookup"><span data-stu-id="fdbce-451">This implementation checks for the <xref:System.Windows.Markup.AmbientAttribute> that is applied to the relevant type's definition at the class level and returns `true` in this case.</span></span> <span data-ttu-id="fdbce-452">Devuelven todos los demás casos `false`.</span><span class="sxs-lookup"><span data-stu-id="fdbce-452">All other cases return `false`.</span></span>  
  
 <span data-ttu-id="fdbce-453">Invalide este método si desea que <xref:System.Xaml.XamlType.IsAmbient%2A> para devolver un valor diferente que está habilitado por reflexión interna predeterminada.</span><span class="sxs-lookup"><span data-stu-id="fdbce-453">Override this method if you want <xref:System.Xaml.XamlType.IsAmbient%2A> to return a different value than is enabled by default internal reflection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupIsConstructible">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsConstructible ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsConstructible() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupIsConstructible" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsConstructible () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsConstructible();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsConstructible : unit -&gt; bool&#xA;override this.LookupIsConstructible : unit -&gt; bool" Usage="xamlType.LookupIsConstructible " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fdbce-454">Devuelve un valor que indica si este objeto <see cref="T:System.Xaml.XamlType" /> representa un tipo que se puede construir según la definición de XAML.</span><span class="sxs-lookup"><span data-stu-id="fdbce-454">Returns a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a constructible type, as per the XAML definition.</span></span></summary>
        <returns><span data-ttu-id="fdbce-455">Es <see langword="true" /> si este objeto <see cref="T:System.Xaml.XamlType" /> representa un tipo que se puede construir; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fdbce-455"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a constructible type; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdbce-456">Este método se puede invocar mediante llamadas a <xref:System.Xaml.XamlType.IsConstructible%2A>.</span><span class="sxs-lookup"><span data-stu-id="fdbce-456">This method can be invoked by calls to <xref:System.Xaml.XamlType.IsConstructible%2A>.</span></span>  
  
 <span data-ttu-id="fdbce-457">La implementación predeterminada usa la reflexión de CLR en el <xref:System.Xaml.XamlType.UnderlyingType%2A>.</span><span class="sxs-lookup"><span data-stu-id="fdbce-457">The default implementation uses CLR reflection on the <xref:System.Xaml.XamlType.UnderlyingType%2A>.</span></span> <span data-ttu-id="fdbce-458">El tipo debe ser concreto, no anidado y cerrado.</span><span class="sxs-lookup"><span data-stu-id="fdbce-458">The type must be concrete, non-nested, and closed.</span></span> <span data-ttu-id="fdbce-459">La implementación predeterminada comprueba si el tipo es un tipo de valor y la devolución de <xref:System.Xaml.XamlType.ConstructionRequiresArguments%2A>.</span><span class="sxs-lookup"><span data-stu-id="fdbce-459">The default implementation checks whether the type is a value type and the return of <xref:System.Xaml.XamlType.ConstructionRequiresArguments%2A>.</span></span> <span data-ttu-id="fdbce-460">Para un valor null <xref:System.Xaml.XamlType.UnderlyingType%2A>, este método devuelve `true`.</span><span class="sxs-lookup"><span data-stu-id="fdbce-460">For a null <xref:System.Xaml.XamlType.UnderlyingType%2A>, this method returns `true`.</span></span>  
  
 <span data-ttu-id="fdbce-461">Invalide este método si desea que <xref:System.Xaml.XamlType.IsConstructible%2A> para devolver un valor diferente que está habilitado por reflexión interna predeterminada.</span><span class="sxs-lookup"><span data-stu-id="fdbce-461">Override this method if you want <xref:System.Xaml.XamlType.IsConstructible%2A> to return a different value than is enabled by default internal reflection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupIsMarkupExtension">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsMarkupExtension ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsMarkupExtension() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupIsMarkupExtension" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsMarkupExtension () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsMarkupExtension();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsMarkupExtension : unit -&gt; bool&#xA;override this.LookupIsMarkupExtension : unit -&gt; bool" Usage="xamlType.LookupIsMarkupExtension " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fdbce-462">Devuelve un valor que indica si este objeto <see cref="T:System.Xaml.XamlType" /> representa una extensión de marcado.</span><span class="sxs-lookup"><span data-stu-id="fdbce-462">Returns a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a markup extension.</span></span></summary>
        <returns><span data-ttu-id="fdbce-463">Es <see langword="true" /> si este objeto <see cref="T:System.Xaml.XamlType" /> representa una extensión de marcado; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fdbce-463"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a markup extension; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdbce-464">Este método se puede invocar mediante llamadas a <xref:System.Xaml.XamlType.IsMarkupExtension%2A>.</span><span class="sxs-lookup"><span data-stu-id="fdbce-464">This method can be invoked by calls to <xref:System.Xaml.XamlType.IsMarkupExtension%2A>.</span></span>  
  
 <span data-ttu-id="fdbce-465">La implementación predeterminada consta solo de esta llamada:</span><span class="sxs-lookup"><span data-stu-id="fdbce-465">The default implementation consists only of this call:</span></span>  
  
 `return CanAssignTo(XamlLanguage.MarkupExtension);`  
  
 <span data-ttu-id="fdbce-466">Invalide este método si desea que <xref:System.Xaml.XamlType.IsMarkupExtension%2A> para utilizar una lógica diferente.</span><span class="sxs-lookup"><span data-stu-id="fdbce-466">Override this method if you want <xref:System.Xaml.XamlType.IsMarkupExtension%2A> to use different logic.</span></span>  
  
 <span data-ttu-id="fdbce-467">En términos de especificación de XAML, este tipo debe ser asignable a `x:MarkupExtension` con el fin de devolver `true` para <xref:System.Xaml.XamlType.IsMarkupExtension%2A>.</span><span class="sxs-lookup"><span data-stu-id="fdbce-467">In XAML specification terms, this type must be assignable to `x:MarkupExtension` in order to return `true` for <xref:System.Xaml.XamlType.IsMarkupExtension%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupIsNameScope">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsNameScope ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsNameScope() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupIsNameScope" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsNameScope () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsNameScope();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsNameScope : unit -&gt; bool&#xA;override this.LookupIsNameScope : unit -&gt; bool" Usage="xamlType.LookupIsNameScope " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fdbce-468">Devuelve un valor que indica si este objeto <see cref="T:System.Xaml.XamlType" /> representa un ámbito de nombres XAML según la definición de XAML.</span><span class="sxs-lookup"><span data-stu-id="fdbce-468">Returns a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a XAML namescope, as per the XAML definition.</span></span></summary>
        <returns><span data-ttu-id="fdbce-469">Es <see langword="true" /> si este objeto <see cref="T:System.Xaml.XamlType" /> representa un ámbito de nombres XAML; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fdbce-469"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a XAML namescope; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdbce-470">Este método se puede invocar mediante llamadas a <xref:System.Xaml.XamlType.IsNameScope%2A>.</span><span class="sxs-lookup"><span data-stu-id="fdbce-470">This method can be invoked by calls to <xref:System.Xaml.XamlType.IsNameScope%2A>.</span></span>  
  
 <span data-ttu-id="fdbce-471">La implementación predeterminada crea un <xref:System.Xaml.XamlType.CanAssignTo%2A> llamar indirectamente con el tipo <xref:System.Windows.Markup.INameScope>.</span><span class="sxs-lookup"><span data-stu-id="fdbce-471">The default implementation makes a <xref:System.Xaml.XamlType.CanAssignTo%2A> call indirectly against the type <xref:System.Windows.Markup.INameScope>.</span></span> <span data-ttu-id="fdbce-472"><xref:System.Windows.Markup.INameScope> es una interfaz que se define en el ensamblado WindowsBase.dll.</span><span class="sxs-lookup"><span data-stu-id="fdbce-472"><xref:System.Windows.Markup.INameScope> is an interface that is defined in the assembly WindowsBase.dll.</span></span> <span data-ttu-id="fdbce-473">Esta técnica para la identificación de ámbito de nombres XAML se usa tanto las implementaciones de XAML de WPF y Windows Workflow Foundation.</span><span class="sxs-lookup"><span data-stu-id="fdbce-473">This technique for XAML namescope identification is used both by WPF and Windows Workflow Foundation implementations of XAML.</span></span>  
  
 <span data-ttu-id="fdbce-474">Invalide este método si desea que <xref:System.Xaml.XamlType.IsNameScope%2A> para utilizar una lógica diferente.</span><span class="sxs-lookup"><span data-stu-id="fdbce-474">Override this method if you want <xref:System.Xaml.XamlType.IsNameScope%2A> to use different logic.</span></span>  
  
 <span data-ttu-id="fdbce-475">Un ámbito de nombres XAML exige la exclusividad del nombre de la propiedad o propiedades que se usan para `x:Name`  /  `[name property]`.</span><span class="sxs-lookup"><span data-stu-id="fdbce-475">A XAML namescope enforces the name uniqueness of the property or properties that are used for `x:Name` / `[name property]`.</span></span> <span data-ttu-id="fdbce-476">Si <xref:System.Xaml.XamlType.IsNameScope%2A> es `true`, a continuación, algún mecanismo para exigir la unicidad debe existir y debe evaluarse desde la perspectiva de este tipo que posee un ámbito de nombres XAML.</span><span class="sxs-lookup"><span data-stu-id="fdbce-476">If <xref:System.Xaml.XamlType.IsNameScope%2A> is `true`, then some mechanism for enforcing uniqueness should exist and should evaluate from the perspective of this type owning a XAML namescope.</span></span> <span data-ttu-id="fdbce-477">El ámbito de nombres XAML, a continuación, se extiende al contenido del tipo hasta que se encuentra otro tipo propietario de ámbito de nombres XAML.</span><span class="sxs-lookup"><span data-stu-id="fdbce-477">The XAML namescope then extends to the content of the type until another XAML namescope owning type is encountered.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlObjectWriter.RootNameScope" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsNullable">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsNullable ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsNullable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupIsNullable" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsNullable () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsNullable();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsNullable : unit -&gt; bool&#xA;override this.LookupIsNullable : unit -&gt; bool" Usage="xamlType.LookupIsNullable " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fdbce-478">Devuelve un valor que indica si este objeto <see cref="T:System.Xaml.XamlType" /> representa un tipo que acepta valores NULL según la definición de XAML.</span><span class="sxs-lookup"><span data-stu-id="fdbce-478">Returns a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a nullable type, as per the XAML definition.</span></span></summary>
        <returns><span data-ttu-id="fdbce-479">Es <see langword="true" /> si este objeto <see cref="T:System.Xaml.XamlType" /> representa un tipo que acepta valores NULL; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fdbce-479"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a nullable type; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdbce-480">Este método se puede invocar mediante llamadas a <xref:System.Xaml.XamlType.IsNullable%2A>.</span><span class="sxs-lookup"><span data-stu-id="fdbce-480">This method can be invoked by calls to <xref:System.Xaml.XamlType.IsNullable%2A>.</span></span>  
  
 <span data-ttu-id="fdbce-481">La implementación predeterminada toma una decisión basándose en el CLR concepto fundamental de biblioteca que acepta valores NULL, comprueban con respecto a <xref:System.Xaml.XamlType.UnderlyingType%2A>.</span><span class="sxs-lookup"><span data-stu-id="fdbce-481">The default implementation makes a determination based on the CLR core library nullable concept, checked against <xref:System.Xaml.XamlType.UnderlyingType%2A>.</span></span> <span data-ttu-id="fdbce-482">Para un valor null <xref:System.Xaml.XamlType.UnderlyingType%2A>, devuelve `true`.</span><span class="sxs-lookup"><span data-stu-id="fdbce-482">For a null <xref:System.Xaml.XamlType.UnderlyingType%2A>, it returns `true`.</span></span>  
  
 <span data-ttu-id="fdbce-483">Invalide este método si desea que <xref:System.Xaml.XamlType.IsNullable%2A> para utilizar una lógica diferente.</span><span class="sxs-lookup"><span data-stu-id="fdbce-483">Override this method if you want <xref:System.Xaml.XamlType.IsNullable%2A> to use different logic.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupIsPublic">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsPublic ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsPublic() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupIsPublic" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsPublic () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsPublic();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsPublic : unit -&gt; bool&#xA;override this.LookupIsPublic : unit -&gt; bool" Usage="xamlType.LookupIsPublic " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fdbce-484">Devuelve un valor que indica si este objeto <see cref="T:System.Xaml.XamlType" /> representa un tipo público en el sistema de tipos adecuado.</span><span class="sxs-lookup"><span data-stu-id="fdbce-484">Returns a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a public type in the relevant type system.</span></span></summary>
        <returns><span data-ttu-id="fdbce-485">Es <see langword="true" /> si este objeto <see cref="T:System.Xaml.XamlType" /> representa un tipo público; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fdbce-485"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a public type; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdbce-486">Este método se puede invocar mediante llamadas a <xref:System.Xaml.XamlType.IsPublic%2A>.</span><span class="sxs-lookup"><span data-stu-id="fdbce-486">This method can be invoked by calls to <xref:System.Xaml.XamlType.IsPublic%2A>.</span></span>  
  
 <span data-ttu-id="fdbce-487">La implementación predeterminada usa la reflexión de CLR en un valor no null <xref:System.Xaml.XamlType.UnderlyingType%2A>.</span><span class="sxs-lookup"><span data-stu-id="fdbce-487">The default implementation uses CLR reflection against a non-null <xref:System.Xaml.XamlType.UnderlyingType%2A>.</span></span> <span data-ttu-id="fdbce-488">Para un valor null <xref:System.Xaml.XamlType.UnderlyingType%2A>, devuelve `true`.</span><span class="sxs-lookup"><span data-stu-id="fdbce-488">For a null <xref:System.Xaml.XamlType.UnderlyingType%2A>, it returns `true`.</span></span>  
  
 <span data-ttu-id="fdbce-489">Invalide este método si desea que <xref:System.Xaml.XamlType.IsPublic%2A> para utilizar una lógica diferente.</span><span class="sxs-lookup"><span data-stu-id="fdbce-489">Override this method if you want <xref:System.Xaml.XamlType.IsPublic%2A> to use different logic.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="fdbce-490"><xref:System.Xaml.XamlType.LookupIsPublic%2A> es virtual y, por lo tanto, se puede invalidar.</span><span class="sxs-lookup"><span data-stu-id="fdbce-490"><xref:System.Xaml.XamlType.LookupIsPublic%2A> is virtual, and therefore, can be overridden.</span></span> <span data-ttu-id="fdbce-491">El reemplazo tiene el potencial (para propósitos malintencionados o de otro modo) para cambiar la información de acceso que se notifica sobre un tipo XAML para que ya no esté disponible en la manera esperada con la información de tipo de sistema o de acceso de su tipo CLR subyacente.</span><span class="sxs-lookup"><span data-stu-id="fdbce-491">The override has the potential (whether for malicious purposes or otherwise) to change the reported access information about a XAML type so that it no longer aligns in an expected way with the type system or access information of its underlying CLR type.</span></span> <span data-ttu-id="fdbce-492">Para cualquier comprobación crítico para la seguridad de las operaciones de asignación y acceso, para usar el tipo CLR subyacente en su lugar.</span><span class="sxs-lookup"><span data-stu-id="fdbce-492">For any security-critical checks of assignment operations and access, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupIsUnknown">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsUnknown ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsUnknown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupIsUnknown" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsUnknown () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsUnknown();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsUnknown : unit -&gt; bool&#xA;override this.LookupIsUnknown : unit -&gt; bool" Usage="xamlType.LookupIsUnknown " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fdbce-493">Devuelve un valor que indica si este objeto <see cref="T:System.Xaml.XamlType" /> representa un tipo que no se puede resolver en el sistema de tipos subyacente.</span><span class="sxs-lookup"><span data-stu-id="fdbce-493">Returns a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a type that cannot be resolved in the underlying type system.</span></span></summary>
        <returns><span data-ttu-id="fdbce-494">Es <see langword="true" /> si este objeto <see cref="T:System.Xaml.XamlType" /> representa un tipo que no se puede resolver; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fdbce-494"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a nonresolvable type; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdbce-495">Este método se puede invocar mediante llamadas a <xref:System.Xaml.XamlType.IsUnknown%2A>.</span><span class="sxs-lookup"><span data-stu-id="fdbce-495">This method can be invoked by calls to <xref:System.Xaml.XamlType.IsUnknown%2A>.</span></span>  
  
 <span data-ttu-id="fdbce-496">La implementación predeterminada puede usar la reflexión de CLR.</span><span class="sxs-lookup"><span data-stu-id="fdbce-496">The default implementation can use CLR reflection.</span></span> <span data-ttu-id="fdbce-497">Para un valor null <xref:System.Xaml.XamlType.UnderlyingType%2A>, devuelve `true`.</span><span class="sxs-lookup"><span data-stu-id="fdbce-497">For a null <xref:System.Xaml.XamlType.UnderlyingType%2A>, it returns `true`.</span></span>  
  
 <span data-ttu-id="fdbce-498">Invalide este método si desea que <xref:System.Xaml.XamlType.IsUnknown%2A> para utilizar una lógica diferente.</span><span class="sxs-lookup"><span data-stu-id="fdbce-498">Override this method if you want <xref:System.Xaml.XamlType.IsUnknown%2A> to use different logic.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupIsWhitespaceSignificantCollection">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsWhitespaceSignificantCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsWhitespaceSignificantCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsWhitespaceSignificantCollection () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsWhitespaceSignificantCollection();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsWhitespaceSignificantCollection : unit -&gt; bool&#xA;override this.LookupIsWhitespaceSignificantCollection : unit -&gt; bool" Usage="xamlType.LookupIsWhitespaceSignificantCollection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fdbce-499">Devuelve un valor que indica si este objeto <see cref="T:System.Xaml.XamlType" /> representa una colección con espacio en blanco significativo, según la definición de XML.</span><span class="sxs-lookup"><span data-stu-id="fdbce-499">Returns a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a whitespace significant collection, as per the XML definition.</span></span></summary>
        <returns><span data-ttu-id="fdbce-500">Es <see langword="true" /> si este objeto <see cref="T:System.Xaml.XamlType" /> representa una colección con espacio en blanco significativo; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fdbce-500"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a white-space significant collection; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdbce-501">Este método se puede invocar mediante llamadas a <xref:System.Xaml.XamlType.IsWhitespaceSignificantCollection%2A>.</span><span class="sxs-lookup"><span data-stu-id="fdbce-501">This method can be invoked by calls to <xref:System.Xaml.XamlType.IsWhitespaceSignificantCollection%2A>.</span></span>  
  
 <span data-ttu-id="fdbce-502">La implementación predeterminada devuelve un valor basado en lectura <xref:System.Windows.Markup.WhitespaceSignificantCollectionAttribute>.</span><span class="sxs-lookup"><span data-stu-id="fdbce-502">The default implementation returns a value based on reading <xref:System.Windows.Markup.WhitespaceSignificantCollectionAttribute>.</span></span> <span data-ttu-id="fdbce-503">También puede comprobar el <xref:System.Xaml.XamlType.BaseType%2A> para el atributo si se encuentra ningún atributo en el tipo subyacente de inmediato.</span><span class="sxs-lookup"><span data-stu-id="fdbce-503">It can also check the <xref:System.Xaml.XamlType.BaseType%2A> for the attribute if no attribute is found on the immediate underlying type.</span></span> <span data-ttu-id="fdbce-504">Si un valor no está disponible, devuelve `false`.</span><span class="sxs-lookup"><span data-stu-id="fdbce-504">If a value is not available, it returns `false`.</span></span>  
  
 <span data-ttu-id="fdbce-505">Invalide este método si desea que <xref:System.Xaml.XamlType.IsWhitespaceSignificantCollection%2A> para utilizar una lógica diferente.</span><span class="sxs-lookup"><span data-stu-id="fdbce-505">Override this method if you want <xref:System.Xaml.XamlType.IsWhitespaceSignificantCollection%2A> to use different logic.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupIsXData">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsXData ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsXData() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupIsXData" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsXData () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsXData();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsXData : unit -&gt; bool&#xA;override this.LookupIsXData : unit -&gt; bool" Usage="xamlType.LookupIsXData " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fdbce-506">Devuelve un valor que indica si este objeto <see cref="T:System.Xaml.XamlType" /> representa <see langword="XDATA" /> en XML según la definición de XAML.</span><span class="sxs-lookup"><span data-stu-id="fdbce-506">Returns a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents XML <see langword="XDATA" />, as per the XAML definition.</span></span></summary>
        <returns><span data-ttu-id="fdbce-507">Es <see langword="true" /> si este objeto <see cref="T:System.Xaml.XamlType" /> representa <see langword="XDATA" />; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fdbce-507"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents <see langword="XDATA" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdbce-508">Este método se puede invocar mediante llamadas a <xref:System.Xaml.XamlType.IsXData%2A>.</span><span class="sxs-lookup"><span data-stu-id="fdbce-508">This method can be invoked by calls to <xref:System.Xaml.XamlType.IsXData%2A>.</span></span>  
  
 <span data-ttu-id="fdbce-509">La implementación predeterminada crea un <xref:System.Xaml.XamlType.CanAssignTo%2A> llamar indirectamente con el tipo <xref:System.Xml.Serialization.IXmlSerializable>.</span><span class="sxs-lookup"><span data-stu-id="fdbce-509">The default implementation makes a <xref:System.Xaml.XamlType.CanAssignTo%2A> call indirectly against the type <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 <span data-ttu-id="fdbce-510">Invalide este método si desea que <xref:System.Xaml.XamlType.IsXData%2A> para utilizar una lógica diferente.</span><span class="sxs-lookup"><span data-stu-id="fdbce-510">Override this method if you want <xref:System.Xaml.XamlType.IsXData%2A> to use different logic.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupItemType">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlType LookupItemType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlType LookupItemType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupItemType" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupItemType () As XamlType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlType ^ LookupItemType();" />
      <MemberSignature Language="F#" Value="abstract member LookupItemType : unit -&gt; System.Xaml.XamlType&#xA;override this.LookupItemType : unit -&gt; System.Xaml.XamlType" Usage="xamlType.LookupItemType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fdbce-511">Devuelve un valor que proporciona información de tipo para la propiedad <see langword="Items" /> de este objeto <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="fdbce-511">Returns a value that provides the type information for the <see langword="Items" /> property of this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <returns><span data-ttu-id="fdbce-512">Objeto <see cref="T:System.Xaml.XamlType" /> para el tipo de los elementos de la colección; de lo contrario, es <see langword="null" /> si este objeto <see cref="T:System.Xaml.XamlType" /> no representa una colección.</span><span class="sxs-lookup"><span data-stu-id="fdbce-512">A <see cref="T:System.Xaml.XamlType" /> object for the type of the items in the collection; otherwise, <see langword="null" /> if this <see cref="T:System.Xaml.XamlType" /> does not represent a collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdbce-513">Este método se puede invocar mediante llamadas a <xref:System.Xaml.XamlType.ItemType%2A>.</span><span class="sxs-lookup"><span data-stu-id="fdbce-513">This method can be invoked by calls to <xref:System.Xaml.XamlType.ItemType%2A>.</span></span>  
  
 <span data-ttu-id="fdbce-514">La implementación predeterminada puede usar los conceptos de reflexión de CLR, como la comprobación de un `Add` método <xref:System.Reflection.MethodInfo> y el uso de la <xref:System.Reflection.ParameterInfo>; comprobación <xref:System.Xaml.XamlType.IsArray%2A>; y la comprobación de <xref:System.Xaml.XamlType.BaseType%2A> y probando la misma lógica.</span><span class="sxs-lookup"><span data-stu-id="fdbce-514">The default implementation can use CLR reflection concepts, such as checking for an `Add` method by <xref:System.Reflection.MethodInfo> and using the <xref:System.Reflection.ParameterInfo>; checking <xref:System.Xaml.XamlType.IsArray%2A>; and checking <xref:System.Xaml.XamlType.BaseType%2A> and trying the same logic there.</span></span>  
  
 <span data-ttu-id="fdbce-515">Invalide este método si desea que <xref:System.Xaml.XamlType.ItemType%2A> para utilizar una lógica diferente.</span><span class="sxs-lookup"><span data-stu-id="fdbce-515">Override this method if you want <xref:System.Xaml.XamlType.ItemType%2A> to use different logic.</span></span> <span data-ttu-id="fdbce-516">Casos donde <xref:System.Xaml.XamlType.LookupCollectionKind%2A> devuelve <xref:System.Xaml.Schema.XamlCollectionKind.None?displayProperty=nameWithType> debe devolver `null`.</span><span class="sxs-lookup"><span data-stu-id="fdbce-516">Cases where <xref:System.Xaml.XamlType.LookupCollectionKind%2A> returns <xref:System.Xaml.Schema.XamlCollectionKind.None?displayProperty=nameWithType> should return `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupKeyType">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlType LookupKeyType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlType LookupKeyType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupKeyType" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupKeyType () As XamlType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlType ^ LookupKeyType();" />
      <MemberSignature Language="F#" Value="abstract member LookupKeyType : unit -&gt; System.Xaml.XamlType&#xA;override this.LookupKeyType : unit -&gt; System.Xaml.XamlType" Usage="xamlType.LookupKeyType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fdbce-517">Devuelve un valor que proporciona información de tipo para la propiedad de clave de este objeto <see cref="T:System.Xaml.XamlType" /> si <see cref="T:System.Xaml.XamlType" /> representa un diccionario.</span><span class="sxs-lookup"><span data-stu-id="fdbce-517">Returns a value that provides the type information for the key property of this <see cref="T:System.Xaml.XamlType" />, if the <see cref="T:System.Xaml.XamlType" /> represents a dictionary.</span></span></summary>
        <returns><span data-ttu-id="fdbce-518">Objeto <see cref="T:System.Xaml.XamlType" /> del tipo de la clave que representa un diccionario o <see langword="null" /> si este objeto <see cref="T:System.Xaml.XamlType" /> no representa un diccionario.</span><span class="sxs-lookup"><span data-stu-id="fdbce-518">A <see cref="T:System.Xaml.XamlType" /> object for the type of the key for dictionary usage, or <see langword="null" /> if this <see cref="T:System.Xaml.XamlType" /> does not represent a dictionary,</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdbce-519">Este método se puede invocar mediante llamadas a <xref:System.Xaml.XamlType.KeyType%2A>.</span><span class="sxs-lookup"><span data-stu-id="fdbce-519">This method can be invoked by calls to <xref:System.Xaml.XamlType.KeyType%2A>.</span></span>  
  
 <span data-ttu-id="fdbce-520">La implementación predeterminada puede usar los conceptos de reflexión de CLR, como la comprobación de un `Add` método <xref:System.Reflection.MethodInfo> y el uso de la <xref:System.Reflection.ParameterInfo>; y la comprobación de <xref:System.Xaml.XamlType.BaseType%2A> y probando la misma lógica.</span><span class="sxs-lookup"><span data-stu-id="fdbce-520">The default implementation can use CLR reflection concepts, such as checking for an `Add` method by <xref:System.Reflection.MethodInfo> and using the <xref:System.Reflection.ParameterInfo>; and checking <xref:System.Xaml.XamlType.BaseType%2A> and trying the same logic there.</span></span>  
  
 <span data-ttu-id="fdbce-521">Invalide este método si desea que <xref:System.Xaml.XamlType.KeyType%2A> para utilizar una lógica diferente.</span><span class="sxs-lookup"><span data-stu-id="fdbce-521">Override this method if you want <xref:System.Xaml.XamlType.KeyType%2A> to use different logic.</span></span> <span data-ttu-id="fdbce-522">Casos donde <xref:System.Xaml.XamlType.LookupCollectionKind%2A> no devuelve <xref:System.Xaml.Schema.XamlCollectionKind.Dictionary?displayProperty=nameWithType> debe devolver `null`.</span><span class="sxs-lookup"><span data-stu-id="fdbce-522">Cases where <xref:System.Xaml.XamlType.LookupCollectionKind%2A> does not return <xref:System.Xaml.Schema.XamlCollectionKind.Dictionary?displayProperty=nameWithType> should return `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupMarkupExtensionReturnType">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlType LookupMarkupExtensionReturnType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlType LookupMarkupExtensionReturnType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupMarkupExtensionReturnType" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupMarkupExtensionReturnType () As XamlType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlType ^ LookupMarkupExtensionReturnType();" />
      <MemberSignature Language="F#" Value="abstract member LookupMarkupExtensionReturnType : unit -&gt; System.Xaml.XamlType&#xA;override this.LookupMarkupExtensionReturnType : unit -&gt; System.Xaml.XamlType" Usage="xamlType.LookupMarkupExtensionReturnType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fdbce-523">Devuelve un valor que proporciona información de tipo para el valor devuelto de <see langword="ProvideValue" /> de este objeto <see cref="T:System.Xaml.XamlType" /> si representa una extensión de marcado.</span><span class="sxs-lookup"><span data-stu-id="fdbce-523">Returns a value that provides the type information for the returned <see langword="ProvideValue" /> of this <see cref="T:System.Xaml.XamlType" />, if it represents a markup extension.</span></span></summary>
        <returns><span data-ttu-id="fdbce-524">Objeto <see cref="T:System.Xaml.XamlType" /> del tipo de valor devuelto que representa una extensión de marcado; de lo contrario, es <see langword="null" /> si <see cref="T:System.Xaml.XamlType" /> no representa una extensión de marcado.</span><span class="sxs-lookup"><span data-stu-id="fdbce-524">A <see cref="T:System.Xaml.XamlType" /> object for the return type for markup extension usage; otherwise, <see langword="null" />, if this <see cref="T:System.Xaml.XamlType" /> does not represent a markup extension.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdbce-525">Este método se puede invocar mediante llamadas a <xref:System.Xaml.XamlType.MarkupExtensionReturnType%2A>.</span><span class="sxs-lookup"><span data-stu-id="fdbce-525">This method can be invoked by calls to <xref:System.Xaml.XamlType.MarkupExtensionReturnType%2A>.</span></span>  
  
 <span data-ttu-id="fdbce-526">La implementación predeterminada devuelve un <xref:System.Xaml.XamlType> basándose en la lectura <xref:System.Windows.Markup.MarkupExtensionReturnTypeAttribute>.</span><span class="sxs-lookup"><span data-stu-id="fdbce-526">The default implementation returns a <xref:System.Xaml.XamlType> on the basis of reading <xref:System.Windows.Markup.MarkupExtensionReturnTypeAttribute>.</span></span> <span data-ttu-id="fdbce-527">También puede comprobar <xref:System.Xaml.XamlType.BaseType%2A> para el atributo si se encuentra ningún atributo en el tipo subyacente de inmediato.</span><span class="sxs-lookup"><span data-stu-id="fdbce-527">It can also check <xref:System.Xaml.XamlType.BaseType%2A> for the attribute if no attribute is found on the immediate underlying type.</span></span> <span data-ttu-id="fdbce-528">Si un valor no está disponible, devuelve `null`.</span><span class="sxs-lookup"><span data-stu-id="fdbce-528">If a value is not available, it returns `null`.</span></span>  
  
 <span data-ttu-id="fdbce-529">Invalide este método si desea que <xref:System.Xaml.XamlType.MarkupExtensionReturnType%2A> para utilizar una lógica diferente.</span><span class="sxs-lookup"><span data-stu-id="fdbce-529">Override this method if you want <xref:System.Xaml.XamlType.MarkupExtensionReturnType%2A> to use different logic.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupMember">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlMember LookupMember (string name, bool skipReadOnlyCheck);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlMember LookupMember(string name, bool skipReadOnlyCheck) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupMember(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupMember (name As String, skipReadOnlyCheck As Boolean) As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlMember ^ LookupMember(System::String ^ name, bool skipReadOnlyCheck);" />
      <MemberSignature Language="F#" Value="abstract member LookupMember : string * bool -&gt; System.Xaml.XamlMember&#xA;override this.LookupMember : string * bool -&gt; System.Xaml.XamlMember" Usage="xamlType.LookupMember (name, skipReadOnlyCheck)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="skipReadOnlyCheck" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="fdbce-530">Nombre del miembro que se va a obtener (en forma de cadena).</span><span class="sxs-lookup"><span data-stu-id="fdbce-530">The name of the member to get (as a string).</span></span></param>
        <param name="skipReadOnlyCheck"><span data-ttu-id="fdbce-531">Es <see langword="true" /> para devolver un miembro aunque dicho miembro tenga el valor <see langword="true" /> para la propiedad <see cref="P:System.Xaml.XamlMember.IsReadOnly" />; es <see langword="false" /> para no devolver ningún miembro con la propiedad <see cref="P:System.Xaml.XamlMember.IsReadOnly" />.</span><span class="sxs-lookup"><span data-stu-id="fdbce-531"><see langword="true" /> to return a member even if that member has a <see langword="true" /> value for <see cref="P:System.Xaml.XamlMember.IsReadOnly" />; <see langword="false" /> to not return a <see cref="P:System.Xaml.XamlMember.IsReadOnly" /> member.</span></span> <span data-ttu-id="fdbce-532">El valor predeterminado es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fdbce-532">The default is <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="fdbce-533">Devuelve el objeto <see cref="T:System.Xaml.XamlMember" /> para un miembro con nombre específico de este tipo <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="fdbce-533">Returns the <see cref="T:System.Xaml.XamlMember" /> for a specific named member from this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <returns><span data-ttu-id="fdbce-534">Información de <see cref="T:System.Xaml.XamlMember" /> para el miembro, si se encuentra; de lo contrario, devuelve <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fdbce-534">The <see cref="T:System.Xaml.XamlMember" /> information for the member, if a member was found; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdbce-535">Este método se puede invocar mediante llamadas a <xref:System.Xaml.XamlType.GetMember%2A>.</span><span class="sxs-lookup"><span data-stu-id="fdbce-535">This method can be invoked by calls to <xref:System.Xaml.XamlType.GetMember%2A>.</span></span>  
  
 <span data-ttu-id="fdbce-536">La implementación predeterminada devuelve un <xref:System.Xaml.XamlType> en función de reflexión de CLR interna y evaluación en el contexto de esquema.</span><span class="sxs-lookup"><span data-stu-id="fdbce-536">The default implementation returns a <xref:System.Xaml.XamlType> based on internal CLR reflection and evaluation against the schema context.</span></span>  
  
 <span data-ttu-id="fdbce-537">Invalide este método si desea que <xref:System.Xaml.XamlType.GetMember%2A> para utilizar una lógica diferente.</span><span class="sxs-lookup"><span data-stu-id="fdbce-537">Override this method if you want <xref:System.Xaml.XamlType.GetMember%2A> to use different logic.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="fdbce-538"><xref:System.Xaml.XamlType.LookupMember%2A> es virtual y, por lo tanto, se puede invalidar.</span><span class="sxs-lookup"><span data-stu-id="fdbce-538"><xref:System.Xaml.XamlType.LookupMember%2A> is virtual, and therefore, can be overridden.</span></span> <span data-ttu-id="fdbce-539">El reemplazo tiene el potencial (para propósitos malintencionados o de otro modo) para cambiar los miembros de un tipo XAML notificados para que ya no queden en la manera esperada con el <xref:System.ComponentModel.TypeDescriptor> `Get*` información sobre el tipo CLR subyacente.</span><span class="sxs-lookup"><span data-stu-id="fdbce-539">The override has the potential (whether for malicious purposes or otherwise) to change the reported members of a XAML type so that they no longer align in an expected way with the <xref:System.ComponentModel.TypeDescriptor> `Get*` information about the underlying CLR type.</span></span> <span data-ttu-id="fdbce-540">Para cualquier comprobación crítico para la seguridad de miembro reporting, para usar el tipo CLR subyacente en su lugar.</span><span class="sxs-lookup"><span data-stu-id="fdbce-540">For any security-critical checks of member reporting, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupPositionalParameters">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; LookupPositionalParameters (int parameterCount);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlType&gt; LookupPositionalParameters(int32 parameterCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupPositionalParameters(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupPositionalParameters (parameterCount As Integer) As IList(Of XamlType)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ LookupPositionalParameters(int parameterCount);" />
      <MemberSignature Language="F#" Value="abstract member LookupPositionalParameters : int -&gt; System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;&#xA;override this.LookupPositionalParameters : int -&gt; System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;" Usage="xamlType.LookupPositionalParameters parameterCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="parameterCount"><span data-ttu-id="fdbce-541">Número de parámetros del modo de sintaxis o constructor del que se va a obtener información.</span><span class="sxs-lookup"><span data-stu-id="fdbce-541">The count (arity) of the particular syntax or constructor mode that you want information about.</span></span></param>
        <summary><span data-ttu-id="fdbce-542">Para los tipos de extensión de marcado, devuelve los tipos de los parámetros posicionales admitidos en un uso específico de las extensiones de marcado para este objeto <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="fdbce-542">For markup extension types, returns the types of the positional parameters that are supported in a specific markup extension usage for this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <returns><span data-ttu-id="fdbce-543">Lista de valores de <see cref="T:System.Xaml.XamlType" />, donde cada <see cref="T:System.Xaml.XamlType" /> es el tipo para esa posición en la sintaxis.</span><span class="sxs-lookup"><span data-stu-id="fdbce-543">A list of <see cref="T:System.Xaml.XamlType" /> values where each such <see cref="T:System.Xaml.XamlType" /> is the type for that position in the syntax.</span></span> <span data-ttu-id="fdbce-544">Es preciso especificar esos tipos en el mismo orden al proporcionar entradas de marcado para la extensión de marcado.</span><span class="sxs-lookup"><span data-stu-id="fdbce-544">You must specify those types in the same order when supplying markup input for the markup extension.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdbce-545">Este método se puede invocar mediante llamadas a <xref:System.Xaml.XamlType.GetPositionalParameters%2A>.</span><span class="sxs-lookup"><span data-stu-id="fdbce-545">This method can be invoked by calls to <xref:System.Xaml.XamlType.GetPositionalParameters%2A>.</span></span>  
  
 <span data-ttu-id="fdbce-546">La implementación predeterminada usa la información de reflexión interna basada en búsqueda de constructores y comprobar la aridad.</span><span class="sxs-lookup"><span data-stu-id="fdbce-546">The default implementation uses internal reflection information based on finding constructors and checking the arity.</span></span> <span data-ttu-id="fdbce-547">Invalide este método si desea que <xref:System.Xaml.XamlType.GetPositionalParameters%2A> para utilizar una lógica diferente.</span><span class="sxs-lookup"><span data-stu-id="fdbce-547">Override this method if you want <xref:System.Xaml.XamlType.GetPositionalParameters%2A> to use different logic.</span></span>  
  
 <span data-ttu-id="fdbce-548">Esta API solo es pertinente si este <xref:System.Xaml.XamlType> representa una extensión de marcado (<xref:System.Xaml.XamlType.IsMarkupExtension%2A> es `true`).</span><span class="sxs-lookup"><span data-stu-id="fdbce-548">This API is only relevant if this <xref:System.Xaml.XamlType> represents a markup extension (<xref:System.Xaml.XamlType.IsMarkupExtension%2A> is `true`).</span></span>  
  
 <span data-ttu-id="fdbce-549">La entrada `parameterCount` no es para solicitar el tipo de un parámetro posicional concreto.</span><span class="sxs-lookup"><span data-stu-id="fdbce-549">The input `parameterCount` is not for requesting the type of a specific positional parameter.</span></span> <span data-ttu-id="fdbce-550">Es para especificar la aridad de uso de una extensión de marcado.</span><span class="sxs-lookup"><span data-stu-id="fdbce-550">It is for specifying the arity of a markup extension usage.</span></span> <span data-ttu-id="fdbce-551">Uso de la extensión de marcado a menudo tiene varias signaturas y usa diferentes parámetros de aridad (recuento) de los parámetros posicionales para diferenciar.</span><span class="sxs-lookup"><span data-stu-id="fdbce-551">Markup extension usage often has multiple signatures and uses different parameter arity (count) of positional parameters to differentiate.</span></span> <span data-ttu-id="fdbce-552">Sin embargo, puede configurar un contexto de esquema para permitir duplicar aridades y usar tipos de los parámetros posicionales para diferenciación.</span><span class="sxs-lookup"><span data-stu-id="fdbce-552">However, you can configure a schema context to allow duplicate arities and use types of the positional parameters for differentiation.</span></span> <span data-ttu-id="fdbce-553">Para obtener más información, vea <xref:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity%2A>.</span><span class="sxs-lookup"><span data-stu-id="fdbce-553">For more information, see <xref:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity%2A>.</span></span> <span data-ttu-id="fdbce-554">Un recuento de aridad concreta, pueden variar las posiciones de parámetro y tipos.</span><span class="sxs-lookup"><span data-stu-id="fdbce-554">For a specific arity count, the parameter positions and types can vary.</span></span> <span data-ttu-id="fdbce-555">Para obtener el tipo posicional del uso de extensión de marcado de una aridad concreta, llame primero a <xref:System.Xaml.XamlType.GetPositionalParameters%2A> con el recuento de aridad.</span><span class="sxs-lookup"><span data-stu-id="fdbce-555">To get the positional type of a specific arity's markup extension usage, you first call <xref:System.Xaml.XamlType.GetPositionalParameters%2A> with the arity count.</span></span> <span data-ttu-id="fdbce-556">A continuación, obtenga el elemento en esa posición de la colección devuelta.</span><span class="sxs-lookup"><span data-stu-id="fdbce-556">Then get the item at that position from the returned collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupSetMarkupExtensionHandler">
      <MemberSignature Language="C#" Value="protected virtual EventHandler&lt;System.Windows.Markup.XamlSetMarkupExtensionEventArgs&gt; LookupSetMarkupExtensionHandler ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.EventHandler`1&lt;class System.Windows.Markup.XamlSetMarkupExtensionEventArgs&gt; LookupSetMarkupExtensionHandler() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupSetMarkupExtensionHandler" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupSetMarkupExtensionHandler () As EventHandler(Of XamlSetMarkupExtensionEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual EventHandler&lt;System::Windows::Markup::XamlSetMarkupExtensionEventArgs ^&gt; ^ LookupSetMarkupExtensionHandler();" />
      <MemberSignature Language="F#" Value="abstract member LookupSetMarkupExtensionHandler : unit -&gt; EventHandler&lt;System.Windows.Markup.XamlSetMarkupExtensionEventArgs&gt;&#xA;override this.LookupSetMarkupExtensionHandler : unit -&gt; EventHandler&lt;System.Windows.Markup.XamlSetMarkupExtensionEventArgs&gt;" Usage="xamlType.LookupSetMarkupExtensionHandler " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Markup.XamlSetMarkupExtensionEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fdbce-557">Devuelve una devolución de llamada de controlador que se va a usar para establecer las extensiones de marcado.</span><span class="sxs-lookup"><span data-stu-id="fdbce-557">Returns a handler callback to use for the set operations of markup extensions.</span></span></summary>
        <returns><span data-ttu-id="fdbce-558">Devolución de llamada de controlador que se va a usar para establecer las extensiones de marcado.</span><span class="sxs-lookup"><span data-stu-id="fdbce-558">A handler callback to use for the set operations of markup extensions.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdbce-559">La implementación predeterminada devuelve un valor basado en lectura <xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute>.</span><span class="sxs-lookup"><span data-stu-id="fdbce-559">The default implementation returns a value based on reading <xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute>.</span></span> <span data-ttu-id="fdbce-560">También puede comprobar <xref:System.Xaml.XamlType.BaseType%2A> para el atributo si se encuentra ningún atributo en el tipo subyacente de inmediato.</span><span class="sxs-lookup"><span data-stu-id="fdbce-560">It can also check <xref:System.Xaml.XamlType.BaseType%2A> for the attribute if no attribute is found on the immediate underlying type.</span></span> <span data-ttu-id="fdbce-561">Si un valor no está disponible, devuelve `null`.</span><span class="sxs-lookup"><span data-stu-id="fdbce-561">If a value is unavailable, it returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupSetTypeConverterHandler">
      <MemberSignature Language="C#" Value="protected virtual EventHandler&lt;System.Windows.Markup.XamlSetTypeConverterEventArgs&gt; LookupSetTypeConverterHandler ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.EventHandler`1&lt;class System.Windows.Markup.XamlSetTypeConverterEventArgs&gt; LookupSetTypeConverterHandler() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupSetTypeConverterHandler" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupSetTypeConverterHandler () As EventHandler(Of XamlSetTypeConverterEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual EventHandler&lt;System::Windows::Markup::XamlSetTypeConverterEventArgs ^&gt; ^ LookupSetTypeConverterHandler();" />
      <MemberSignature Language="F#" Value="abstract member LookupSetTypeConverterHandler : unit -&gt; EventHandler&lt;System.Windows.Markup.XamlSetTypeConverterEventArgs&gt;&#xA;override this.LookupSetTypeConverterHandler : unit -&gt; EventHandler&lt;System.Windows.Markup.XamlSetTypeConverterEventArgs&gt;" Usage="xamlType.LookupSetTypeConverterHandler " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Markup.XamlSetTypeConverterEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fdbce-562">Devuelve un controlador que se va a usar para establecer el convertidor de tipos.</span><span class="sxs-lookup"><span data-stu-id="fdbce-562">Returns a handler to use for type converter setting cases.</span></span></summary>
        <returns><span data-ttu-id="fdbce-563">Controlador que se va a usar para establecer el convertidor de tipos.</span><span class="sxs-lookup"><span data-stu-id="fdbce-563">A handler to use for type converter setting cases.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdbce-564">La implementación predeterminada devuelve un valor basado en lectura <xref:System.Windows.Markup.XamlSetTypeConverterAttribute>.</span><span class="sxs-lookup"><span data-stu-id="fdbce-564">The default implementation returns a value based on reading <xref:System.Windows.Markup.XamlSetTypeConverterAttribute>.</span></span> <span data-ttu-id="fdbce-565">También puede comprobar <xref:System.Xaml.XamlType.BaseType%2A> para el atributo si se encuentra ningún atributo en el tipo subyacente de inmediato.</span><span class="sxs-lookup"><span data-stu-id="fdbce-565">It can also check <xref:System.Xaml.XamlType.BaseType%2A> for the attribute if no attribute is found on the immediate underlying type.</span></span> <span data-ttu-id="fdbce-566">Si un valor no está disponible, devuelve `null`.</span><span class="sxs-lookup"><span data-stu-id="fdbce-566">If a value is unavailable, it returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupTrimSurroundingWhitespace">
      <MemberSignature Language="C#" Value="protected virtual bool LookupTrimSurroundingWhitespace ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupTrimSurroundingWhitespace() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupTrimSurroundingWhitespace" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupTrimSurroundingWhitespace () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupTrimSurroundingWhitespace();" />
      <MemberSignature Language="F#" Value="abstract member LookupTrimSurroundingWhitespace : unit -&gt; bool&#xA;override this.LookupTrimSurroundingWhitespace : unit -&gt; bool" Usage="xamlType.LookupTrimSurroundingWhitespace " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fdbce-567">Devuelve un valor que indica si este objeto <see cref="T:System.Xaml.XamlType" /> debe serializarse en un modo que recorte el espacio en blanco circundante.</span><span class="sxs-lookup"><span data-stu-id="fdbce-567">Returns a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> should be serialized using a mode that  trims surrounding whitespace.</span></span></summary>
        <returns><span data-ttu-id="fdbce-568">Es <see langword="true" /> si este objeto <see cref="T:System.Xaml.XamlType" /> debe serializarse en un modo que recorte el espacio en blanco circundante; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fdbce-568"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> should be serialized in a mode that trims surrounding whitespace; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdbce-569">Este método se puede invocar mediante llamadas a <xref:System.Xaml.XamlType.TrimSurroundingWhitespace%2A>.</span><span class="sxs-lookup"><span data-stu-id="fdbce-569">This method can be invoked by calls to <xref:System.Xaml.XamlType.TrimSurroundingWhitespace%2A>.</span></span>  
  
 <span data-ttu-id="fdbce-570">La implementación predeterminada devuelve un valor basado en lectura <xref:System.Windows.Markup.TrimSurroundingWhitespaceAttribute>.</span><span class="sxs-lookup"><span data-stu-id="fdbce-570">The default implementation returns a value based on reading <xref:System.Windows.Markup.TrimSurroundingWhitespaceAttribute>.</span></span> <span data-ttu-id="fdbce-571">También puede comprobar <xref:System.Xaml.XamlType.BaseType%2A> para el atributo si se encuentra ningún atributo en el tipo subyacente de inmediato.</span><span class="sxs-lookup"><span data-stu-id="fdbce-571">It can also check <xref:System.Xaml.XamlType.BaseType%2A> for the attribute if no attribute is found on the immediate underlying type.</span></span> <span data-ttu-id="fdbce-572">Si un valor no está disponible, devuelve `false`.</span><span class="sxs-lookup"><span data-stu-id="fdbce-572">If a value is unavailable, it returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupTypeConverter">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt; LookupTypeConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.ComponentModel.TypeConverter&gt; LookupTypeConverter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupTypeConverter" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupTypeConverter () As XamlValueConverter(Of TypeConverter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlValueConverter&lt;System::ComponentModel::TypeConverter ^&gt; ^ LookupTypeConverter();" />
      <MemberSignature Language="F#" Value="abstract member LookupTypeConverter : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;&#xA;override this.LookupTypeConverter : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;" Usage="xamlType.LookupTypeConverter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fdbce-573">Devuelve un objeto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> que tiene una restricción <see cref="T:System.ComponentModel.TypeConverter" />, que representa el comportamiento de la conversión de tipos para los valores de este objeto <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="fdbce-573">Returns a <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> that has a <see cref="T:System.ComponentModel.TypeConverter" /> constraint, which represents type-conversion behavior for values of this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <returns><span data-ttu-id="fdbce-574">Objeto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> con la restricción <see cref="T:System.ComponentModel.TypeConverter" /> que representa el comportamiento de la conversión de tipos para los valores de este objeto <see cref="T:System.Xaml.XamlType" />; de lo contrario, es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fdbce-574">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> with <see cref="T:System.ComponentModel.TypeConverter" /> constraint that represents type-conversion behavior for values of this <see cref="T:System.Xaml.XamlType" />; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdbce-575">Este método se puede invocar mediante llamadas a <xref:System.Xaml.XamlType.TypeConverter%2A>.</span><span class="sxs-lookup"><span data-stu-id="fdbce-575">This method can be invoked by calls to <xref:System.Xaml.XamlType.TypeConverter%2A>.</span></span>  
  
 <span data-ttu-id="fdbce-576">La implementación predeterminada devuelve un valor basado en lectura <xref:System.ComponentModel.TypeConverterAttribute>.</span><span class="sxs-lookup"><span data-stu-id="fdbce-576">The default implementation returns a value based on reading <xref:System.ComponentModel.TypeConverterAttribute>.</span></span> <span data-ttu-id="fdbce-577">También puede comprobar la implementación predeterminada <xref:System.Xaml.XamlType.BaseType%2A> para el atributo si se encuentra ningún atributo en el tipo subyacente de inmediato.</span><span class="sxs-lookup"><span data-stu-id="fdbce-577">The default implementation can also check <xref:System.Xaml.XamlType.BaseType%2A> for the attribute if no attribute is found on the immediate underlying type.</span></span> <span data-ttu-id="fdbce-578">También incluye una lógica especial para la conversión predeterminada de enumeraciones, tipos de valor comunes y genéricos.</span><span class="sxs-lookup"><span data-stu-id="fdbce-578">It also includes special logic for default conversion of enumerations, common value types, and generics.</span></span> <span data-ttu-id="fdbce-579">Si un valor no está disponible, devuelve `null`.</span><span class="sxs-lookup"><span data-stu-id="fdbce-579">If a value is unavailable, it returns `null`.</span></span>  
  
 <span data-ttu-id="fdbce-580">Invalide este método si desea que <xref:System.Xaml.XamlType.TypeConverter%2A> para utilizar una lógica diferente.</span><span class="sxs-lookup"><span data-stu-id="fdbce-580">Override this method if you want <xref:System.Xaml.XamlType.TypeConverter%2A> to use different logic.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupUnderlyingType">
      <MemberSignature Language="C#" Value="protected virtual Type LookupUnderlyingType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Type LookupUnderlyingType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupUnderlyingType" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupUnderlyingType () As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual Type ^ LookupUnderlyingType();" />
      <MemberSignature Language="F#" Value="abstract member LookupUnderlyingType : unit -&gt; Type&#xA;override this.LookupUnderlyingType : unit -&gt; Type" Usage="xamlType.LookupUnderlyingType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fdbce-581">Devuelve el objeto <see cref="T:System.Type" /> de CLR subyacente a este objeto <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="fdbce-581">Returns the CLR <see cref="T:System.Type" /> that underlies this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <returns><span data-ttu-id="fdbce-582">Objeto <see cref="T:System.Type" /> de CLR subyacente a este objeto <see cref="T:System.Xaml.XamlType" />; de lo contrario, es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fdbce-582">The CLR <see cref="T:System.Type" /> that underlies this <see cref="T:System.Xaml.XamlType" />; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdbce-583">Este método se puede invocar mediante llamadas a <xref:System.Xaml.XamlType.UnderlyingType%2A>.</span><span class="sxs-lookup"><span data-stu-id="fdbce-583">This method can be invoked by calls to <xref:System.Xaml.XamlType.UnderlyingType%2A>.</span></span>  
  
 <span data-ttu-id="fdbce-584">La implementación predeterminada devuelve un campo interno.</span><span class="sxs-lookup"><span data-stu-id="fdbce-584">The default implementation returns an internal field.</span></span> <span data-ttu-id="fdbce-585">Ese campo generalmente se inicializa durante la construcción y su valor se basa en el constructor que llamaba a la información que proporcionó.</span><span class="sxs-lookup"><span data-stu-id="fdbce-585">That field is generally initialized during construction and its value is based on which constructor was called and the information that you provided.</span></span>  
  
 <span data-ttu-id="fdbce-586">Invalide este método si desea que <xref:System.Xaml.XamlType.UnderlyingType%2A> para utilizar una lógica diferente.</span><span class="sxs-lookup"><span data-stu-id="fdbce-586">Override this method if you want <xref:System.Xaml.XamlType.UnderlyingType%2A> to use different logic.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupUsableDuringInitialization">
      <MemberSignature Language="C#" Value="protected virtual bool LookupUsableDuringInitialization ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupUsableDuringInitialization() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupUsableDuringInitialization" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupUsableDuringInitialization () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupUsableDuringInitialization();" />
      <MemberSignature Language="F#" Value="abstract member LookupUsableDuringInitialization : unit -&gt; bool&#xA;override this.LookupUsableDuringInitialization : unit -&gt; bool" Usage="xamlType.LookupUsableDuringInitialization " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fdbce-587">Devuelve un valor que indica si este objeto <see cref="T:System.Xaml.XamlType" /> se compila de forma descendente durante la inicialización de XAML.</span><span class="sxs-lookup"><span data-stu-id="fdbce-587">Returns a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> is built top-down during XAML initialization.</span></span></summary>
        <returns><span data-ttu-id="fdbce-588">Es <see langword="true" /> si este objeto <see cref="T:System.Xaml.XamlType" /> se compila de forma descendente durante la inicialización de XAML; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fdbce-588"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> is built top-down during XAML initialization; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdbce-589">Arriba a abajo es una metáfora que se aproxima al comportamiento del procesador XAML cuando crea el gráfico de objetos.</span><span class="sxs-lookup"><span data-stu-id="fdbce-589">Top-down is a metaphor that approximates XAML processor behavior when it creates the object graph.</span></span> <span data-ttu-id="fdbce-590">Cuando compila de arriba a abajo, se crea la instancia de un tipo, adjunta al elemento primario, y se establecen sus propiedades.</span><span class="sxs-lookup"><span data-stu-id="fdbce-590">When built top-down, a type is instantiated, attached to the parent, and has its properties set.</span></span> <span data-ttu-id="fdbce-591">Construcción de arriba a abajo evita invocar controladores de cambio de propiedad varias veces.</span><span class="sxs-lookup"><span data-stu-id="fdbce-591">Top-down construction avoids invoking property-changed handlers multiple times.</span></span> <span data-ttu-id="fdbce-592">Dicho control propaga el gráfico de objetos y por lo tanto, elimina varias llamadas del controlador y proporciona una optimización del rendimiento para el inicio del gráfico de objetos.</span><span class="sxs-lookup"><span data-stu-id="fdbce-592">Such handling ripples up the object graph and therefore, eliminates the multiple handler calls and provides a performance optimization for startup of the object graph.</span></span>  
  
 <span data-ttu-id="fdbce-593">Este método se puede invocar mediante llamadas a <xref:System.Xaml.XamlType.IsUsableDuringInitialization%2A>.</span><span class="sxs-lookup"><span data-stu-id="fdbce-593">This method can be invoked by calls to <xref:System.Xaml.XamlType.IsUsableDuringInitialization%2A>.</span></span>  
  
 <span data-ttu-id="fdbce-594">La implementación predeterminada devuelve un valor basado en lectura <xref:System.Windows.Markup.UsableDuringInitializationAttribute>.</span><span class="sxs-lookup"><span data-stu-id="fdbce-594">The default implementation returns a value based on reading <xref:System.Windows.Markup.UsableDuringInitializationAttribute>.</span></span> <span data-ttu-id="fdbce-595">También puede comprobar <xref:System.Xaml.XamlType.BaseType%2A> para el atributo si se encuentra ningún atributo en el tipo subyacente de inmediato.</span><span class="sxs-lookup"><span data-stu-id="fdbce-595">It can also check <xref:System.Xaml.XamlType.BaseType%2A> for the attribute if no attribute is found on the immediate underlying type.</span></span> <span data-ttu-id="fdbce-596">Si un valor no está disponible, devuelve `false`.</span><span class="sxs-lookup"><span data-stu-id="fdbce-596">If a value is unavailable, it returns `false`.</span></span>  
  
 <span data-ttu-id="fdbce-597">Invalide este método si desea que <xref:System.Xaml.XamlType.IsUsableDuringInitialization%2A> para utilizar una lógica diferente.</span><span class="sxs-lookup"><span data-stu-id="fdbce-597">Override this method if you want <xref:System.Xaml.XamlType.IsUsableDuringInitialization%2A> to use different logic.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupValueSerializer">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt; LookupValueSerializer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.Windows.Markup.ValueSerializer&gt; LookupValueSerializer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupValueSerializer" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupValueSerializer () As XamlValueConverter(Of ValueSerializer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlValueConverter&lt;System::Windows::Markup::ValueSerializer ^&gt; ^ LookupValueSerializer();" />
      <MemberSignature Language="F#" Value="abstract member LookupValueSerializer : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt;&#xA;override this.LookupValueSerializer : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt;" Usage="xamlType.LookupValueSerializer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fdbce-598">Devuelve un objeto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> que tiene una restricción <see cref="T:System.Windows.Markup.ValueSerializer" />, que representa el comportamiento de serialización para los valores de este objeto <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="fdbce-598">Returns a <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> that has a <see cref="T:System.Windows.Markup.ValueSerializer" /> constraint, which represents value serialization behavior for values of this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <returns><span data-ttu-id="fdbce-599">Objeto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> con la restricción <see cref="T:System.Windows.Markup.ValueSerializer" /> que representa el comportamiento de serialización para los valores de este objeto <see cref="T:System.Xaml.XamlType" />; de lo contrario, es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fdbce-599">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> with <see cref="T:System.Windows.Markup.ValueSerializer" /> constraint that represents value serialization behavior for values of this <see cref="T:System.Xaml.XamlType" />; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdbce-600">Este método se puede invocar mediante llamadas a <xref:System.Xaml.XamlType.ValueSerializer%2A>.</span><span class="sxs-lookup"><span data-stu-id="fdbce-600">This method can be invoked by calls to <xref:System.Xaml.XamlType.ValueSerializer%2A>.</span></span>  
  
 <span data-ttu-id="fdbce-601">La implementación predeterminada devuelve un valor basado en lectura <xref:System.Windows.Markup.ValueSerializerAttribute>.</span><span class="sxs-lookup"><span data-stu-id="fdbce-601">The default implementation returns a value based on reading <xref:System.Windows.Markup.ValueSerializerAttribute>.</span></span> <span data-ttu-id="fdbce-602">También puede comprobar <xref:System.Xaml.XamlType.BaseType%2A> para el atributo si se encuentra ningún atributo en el tipo subyacente de inmediato.</span><span class="sxs-lookup"><span data-stu-id="fdbce-602">It can also check <xref:System.Xaml.XamlType.BaseType%2A> for the attribute if no attribute is found on the immediate underlying type.</span></span> <span data-ttu-id="fdbce-603">También incluye una lógica especial para la serialización predeterminada de enumeraciones, tipos de valor comunes o genéricos.</span><span class="sxs-lookup"><span data-stu-id="fdbce-603">It also includes special logic for default serialization of enumerations, common value types, or generics.</span></span> <span data-ttu-id="fdbce-604">Si un valor no está disponible, devuelve `null`.</span><span class="sxs-lookup"><span data-stu-id="fdbce-604">If a value is unavailable, it returns `null`.</span></span>  
  
 <span data-ttu-id="fdbce-605">Invalide este método si desea que <xref:System.Xaml.XamlType.ValueSerializer%2A> para utilizar una lógica diferente.</span><span class="sxs-lookup"><span data-stu-id="fdbce-605">Override this method if you want <xref:System.Xaml.XamlType.ValueSerializer%2A> to use different logic.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MarkupExtensionReturnType">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlType MarkupExtensionReturnType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlType MarkupExtensionReturnType" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.MarkupExtensionReturnType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MarkupExtensionReturnType As XamlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlType ^ MarkupExtensionReturnType { System::Xaml::XamlType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MarkupExtensionReturnType : System.Xaml.XamlType" Usage="System.Xaml.XamlType.MarkupExtensionReturnType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fdbce-606">Obtiene un valor que proporciona información de tipo para el valor devuelto de <see langword="ProvideValue" /> de este objeto <see cref="T:System.Xaml.XamlType" /> si representa una extensión de marcado.</span><span class="sxs-lookup"><span data-stu-id="fdbce-606">Gets a value that provides the type information for the returned <see langword="ProvideValue" /> of this <see cref="T:System.Xaml.XamlType" />, if it represents a markup extension.</span></span></summary>
        <value><span data-ttu-id="fdbce-607">Objeto <see cref="T:System.Xaml.XamlType" /> del tipo de valor devuelto que representa una extensión de marcado; de lo contrario, es <see langword="null" /> si <see cref="T:System.Xaml.XamlType" /> no representa una extensión de marcado.</span><span class="sxs-lookup"><span data-stu-id="fdbce-607">A <see cref="T:System.Xaml.XamlType" /> object for the return type for markup extension usage; otherwise, <see langword="null" />, if this <see cref="T:System.Xaml.XamlType" /> does not represent a markup extension.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdbce-608">Esta propiedad solo es pertinente si este <xref:System.Xaml.XamlType> representa una extensión de marcado (`x:MarkupExtension` está en la lista de tipos asignables).</span><span class="sxs-lookup"><span data-stu-id="fdbce-608">This property is only relevant if this <xref:System.Xaml.XamlType> represents a markup extension (`x:MarkupExtension` is in the assignable types list).</span></span>  
  
 <span data-ttu-id="fdbce-609">Si no utiliza la técnica de reflexión de CLR interna de predeterminada para un <xref:System.Xaml.XamlType>, pueden invocar las llamadas a esta propiedad <xref:System.Xaml.XamlType.LookupMarkupExtensionReturnType%2A> invalidaciones en <xref:System.Xaml.XamlType> las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="fdbce-609">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupMarkupExtensionReturnType%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="fdbce-610">Para obtener más información acerca de los valores devueltos y otros comportamientos, consulte la documentación de <xref:System.Xaml.XamlType.LookupMarkupExtensionReturnType%2A> en este tipo.</span><span class="sxs-lookup"><span data-stu-id="fdbce-610">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupMarkupExtensionReturnType%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Xaml.XamlType.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fdbce-611">Obtiene el nombre de cadena del tipo representado por este objeto <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="fdbce-611">Gets the string name of the type that this <see cref="T:System.Xaml.XamlType" /> represents.</span></span></summary>
        <value><span data-ttu-id="fdbce-612">Nombre de cadena de este tipo XAML.</span><span class="sxs-lookup"><span data-stu-id="fdbce-612">The string name of this XAML type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdbce-613">Normalmente, esta propiedad obtiene el nombre de esquema construido (por la <xref:System.Xaml.XamlType.%23ctor%2A> firma), o el nombre de la <xref:System.Type>, si se construye utilizando el constructor pertinente del sistema de tipos CLR.</span><span class="sxs-lookup"><span data-stu-id="fdbce-613">This property typically gets the schema-constructed name (per the <xref:System.Xaml.XamlType.%23ctor%2A> signature), or the name of the <xref:System.Type>, if it is constructed by using the pertinent constructor of the CLR type system.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Xaml.XamlType xamlType1, System.Xaml.XamlType xamlType2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class System.Xaml.XamlType xamlType1, class System.Xaml.XamlType xamlType2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.op_Equality(System.Xaml.XamlType,System.Xaml.XamlType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (xamlType1 As XamlType, xamlType2 As XamlType) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Xaml::XamlType ^ xamlType1, System::Xaml::XamlType ^ xamlType2);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Xaml.XamlType * System.Xaml.XamlType -&gt; bool" Usage="xamlType1 = xamlType2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlType1" Type="System.Xaml.XamlType" />
        <Parameter Name="xamlType2" Type="System.Xaml.XamlType" />
      </Parameters>
      <Docs>
        <param name="xamlType1"><span data-ttu-id="fdbce-614"><see cref="T:System.Xaml.XamlType" /> o <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fdbce-614">A <see cref="T:System.Xaml.XamlType" /> or <see langword="null" />.</span></span></param>
        <param name="xamlType2"><span data-ttu-id="fdbce-615"><see cref="T:System.Xaml.XamlType" /> o <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fdbce-615">A <see cref="T:System.Xaml.XamlType" /> or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="fdbce-616">Determina si dos objetos <see cref="T:System.Xaml.XamlType" /> especificados tienen el mismo valor.</span><span class="sxs-lookup"><span data-stu-id="fdbce-616">Determines whether two specified <see cref="T:System.Xaml.XamlType" /> objects have the same value.</span></span></summary>
        <returns><span data-ttu-id="fdbce-617"><see langword="true" /> si el valor de <paramref name="xamlType1" /> es el mismo que el valor de <paramref name="xamlType2" />; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fdbce-617"><see langword="true" /> if the value of <paramref name="xamlType1" /> is the same as the value of <paramref name="xamlType2" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Xaml.XamlType xamlType1, System.Xaml.XamlType xamlType2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Xaml.XamlType xamlType1, class System.Xaml.XamlType xamlType2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.op_Inequality(System.Xaml.XamlType,System.Xaml.XamlType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (xamlType1 As XamlType, xamlType2 As XamlType) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Xaml::XamlType ^ xamlType1, System::Xaml::XamlType ^ xamlType2);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Xaml.XamlType * System.Xaml.XamlType -&gt; bool" Usage="System.Xaml.XamlType.op_Inequality (xamlType1, xamlType2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlType1" Type="System.Xaml.XamlType" />
        <Parameter Name="xamlType2" Type="System.Xaml.XamlType" />
      </Parameters>
      <Docs>
        <param name="xamlType1"><span data-ttu-id="fdbce-618"><see cref="T:System.Xaml.XamlType" /> o <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fdbce-618">A <see cref="T:System.Xaml.XamlType" /> or <see langword="null" />.</span></span></param>
        <param name="xamlType2"><span data-ttu-id="fdbce-619"><see cref="T:System.Xaml.XamlType" /> o <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fdbce-619">A <see cref="T:System.Xaml.XamlType" /> or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="fdbce-620">Determina si dos objetos <see cref="T:System.Xaml.XamlType" /> especificados tienen valores diferentes.</span><span class="sxs-lookup"><span data-stu-id="fdbce-620">Determines whether two specified <see cref="T:System.Xaml.XamlType" /> objects have different values.</span></span></summary>
        <returns><span data-ttu-id="fdbce-621"><see langword="true" /> si el valor de <paramref name="xamlType1" /> es diferente que el valor de <paramref name="xamlType2" />; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fdbce-621"><see langword="true" /> if the value of <paramref name="xamlType1" /> is different from the value of <paramref name="xamlType2" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreferredXamlNamespace">
      <MemberSignature Language="C#" Value="public string PreferredXamlNamespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PreferredXamlNamespace" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.PreferredXamlNamespace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PreferredXamlNamespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PreferredXamlNamespace { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PreferredXamlNamespace : string" Usage="System.Xaml.XamlType.PreferredXamlNamespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fdbce-622">Obtiene el espacio de nombres XAML primario de este objeto <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="fdbce-622">Gets the single XAML namespace that is the primary XAML namespace for this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <value><span data-ttu-id="fdbce-623">Identificador, en forma de cadena, del espacio de nombres XAML primario de este tipo XAML.</span><span class="sxs-lookup"><span data-stu-id="fdbce-623">The identifier, as a string, of the primary XAML namespace for this XAML type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdbce-624">Esta implementación proporciona el mismo valor que una llamada a <xref:System.Xaml.XamlType.GetXamlNamespaces%2A> y, a continuación, obtener la primera cadena de valor desde el conjunto enumerable devuelto.</span><span class="sxs-lookup"><span data-stu-id="fdbce-624">This implementation provides the same value as calling <xref:System.Xaml.XamlType.GetXamlNamespaces%2A> and then getting the first value string from the returned enumerable set.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SchemaContext">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlSchemaContext SchemaContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlSchemaContext SchemaContext" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.SchemaContext" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SchemaContext As XamlSchemaContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlSchemaContext ^ SchemaContext { System::Xaml::XamlSchemaContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SchemaContext : System.Xaml.XamlSchemaContext" Usage="System.Xaml.XamlType.SchemaContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlSchemaContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fdbce-625">Obtiene el objeto <see cref="T:System.Xaml.XamlSchemaContext" /> activo para procesar este objeto <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="fdbce-625">Gets the active <see cref="T:System.Xaml.XamlSchemaContext" /> for processing this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <value><span data-ttu-id="fdbce-626">Objeto <see cref="T:System.Xaml.XamlSchemaContext" /> activo para procesar este objeto <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="fdbce-626">The active <see cref="T:System.Xaml.XamlSchemaContext" /> for processing this <see cref="T:System.Xaml.XamlType" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdbce-627"><xref:System.Xaml.XamlSchemaContext> es una entrada de parámetro necesarios al construir un <xref:System.Xaml.XamlType>.</span><span class="sxs-lookup"><span data-stu-id="fdbce-627"><xref:System.Xaml.XamlSchemaContext> is a required parameter entry when constructing a <xref:System.Xaml.XamlType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="xamlType.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fdbce-628">Devuelve una representación de cadena de este objeto <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="fdbce-628">Returns a string representation of this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <returns><span data-ttu-id="fdbce-629">Representación de cadena de este objeto <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="fdbce-629">A string representation of this <see cref="T:System.Xaml.XamlType" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdbce-630">El <xref:System.Xaml.XamlType> implementací <xref:System.Object.ToString%2A> devuelve el <xref:System.Xaml.XamlType.Name%2A> propiedad de la <xref:System.Xaml.XamlType>.</span><span class="sxs-lookup"><span data-stu-id="fdbce-630">The <xref:System.Xaml.XamlType> implementation of <xref:System.Object.ToString%2A> returns the <xref:System.Xaml.XamlType.Name%2A> property of the <xref:System.Xaml.XamlType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TrimSurroundingWhitespace">
      <MemberSignature Language="C#" Value="public bool TrimSurroundingWhitespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TrimSurroundingWhitespace" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.TrimSurroundingWhitespace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TrimSurroundingWhitespace As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TrimSurroundingWhitespace { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.TrimSurroundingWhitespace : bool" Usage="System.Xaml.XamlType.TrimSurroundingWhitespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fdbce-631">Obtiene un valor que indica si este objeto <see cref="T:System.Xaml.XamlType" /> dispone de un comportamiento de serialización con control del espacio en blanco para recortar el espacio en blanco circundante en su contenido.</span><span class="sxs-lookup"><span data-stu-id="fdbce-631">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> has whitespace handling behavior for serialization that trims the surrounding whitespace in its content.</span></span></summary>
        <value><span data-ttu-id="fdbce-632">Es <see langword="true" /> si este objeto <see cref="T:System.Xaml.XamlType" /> representa un tipo que recorta el espacio en blanco; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fdbce-632"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a type that uses whitespace trimming; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdbce-633">Si no utiliza la técnica de reflexión de CLR interna de predeterminada para un <xref:System.Xaml.XamlType>, pueden invocar las llamadas a esta propiedad <xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A> invalidaciones en <xref:System.Xaml.XamlType> las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="fdbce-633">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="fdbce-634">Para obtener más información acerca de los valores devueltos y otros comportamientos, consulte la documentación de <xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A> en este tipo.</span><span class="sxs-lookup"><span data-stu-id="fdbce-634">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeArguments">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; TypeArguments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlType&gt; TypeArguments" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.TypeArguments" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TypeArguments As IList(Of XamlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ TypeArguments { System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TypeArguments : System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;" Usage="System.Xaml.XamlType.TypeArguments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fdbce-635">Obtiene una lista de argumentos de tipo para los casos en los que este objeto <see cref="T:System.Xaml.XamlType" /> representa un tipo genérico.</span><span class="sxs-lookup"><span data-stu-id="fdbce-635">Gets a list of type arguments for cases where this <see cref="T:System.Xaml.XamlType" /> represents a generic.</span></span></summary>
        <value><span data-ttu-id="fdbce-636">Lista de argumentos de tipo; de lo contrario, es <see langword="null" /> si este objeto <see cref="T:System.Xaml.XamlType" /> no representa un tipo genérico.</span><span class="sxs-lookup"><span data-stu-id="fdbce-636">A list of type argument types; otherwise, <see langword="null" />, if this <see cref="T:System.Xaml.XamlType" /> does not represent a generic.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdbce-637">Hay ciertos escenarios para un <xref:System.Xaml.XamlType> cuando una llamada a la <xref:System.Xaml.XamlType.TypeArguments%2A> parámetro devuelve una lista donde los tipos todavía están abiertos.</span><span class="sxs-lookup"><span data-stu-id="fdbce-637">There are certain scenarios for a <xref:System.Xaml.XamlType> where calling the <xref:System.Xaml.XamlType.TypeArguments%2A> parameter returns a list where the types are still open.</span></span> <span data-ttu-id="fdbce-638">En este caso, uno o varios de los devueltos <xref:System.Xaml.XamlType> valores tendrá los valores de marcador de posición para <xref:System.Xaml.XamlType.Name%2A?displayProperty=nameWithType>, tales como `T`, para representar que el tipo genérico todavía está abierto.</span><span class="sxs-lookup"><span data-stu-id="fdbce-638">In this case, one or more of the returned <xref:System.Xaml.XamlType> values will have placeholder values for <xref:System.Xaml.XamlType.Name%2A?displayProperty=nameWithType>, such as `T`, to represent that the generic is still open.</span></span> <span data-ttu-id="fdbce-639">Esta situación puede producirse si se produce un <xref:System.Xaml.XamlType> desde una llamada a <xref:System.Xaml.XamlSchemaContext.GetXamlType%2A>, en lugar de desde una implementación de lector XAML.</span><span class="sxs-lookup"><span data-stu-id="fdbce-639">This scenario can occur if you get a <xref:System.Xaml.XamlType> from a call to <xref:System.Xaml.XamlSchemaContext.GetXamlType%2A>, instead of from a XAML reader implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeConverter">
      <MemberSignature Language="C#" Value="public System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt; TypeConverter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.ComponentModel.TypeConverter&gt; TypeConverter" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.TypeConverter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TypeConverter As XamlValueConverter(Of TypeConverter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Schema::XamlValueConverter&lt;System::ComponentModel::TypeConverter ^&gt; ^ TypeConverter { System::Xaml::Schema::XamlValueConverter&lt;System::ComponentModel::TypeConverter ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TypeConverter : System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;" Usage="System.Xaml.XamlType.TypeConverter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fdbce-640">Obtiene un objeto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> con la restricción <see cref="T:System.ComponentModel.TypeConverter" /> que representa el comportamiento de la conversión de tipos para los valores de este objeto <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="fdbce-640">Gets a <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> with <see cref="T:System.ComponentModel.TypeConverter" /> constraint that represents type conversion behavior for values of this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <value><span data-ttu-id="fdbce-641">Objeto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> con la restricción <see cref="T:System.ComponentModel.TypeConverter" /> que representa el comportamiento de la conversión de tipos para los valores de este objeto <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="fdbce-641">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> with <see cref="T:System.ComponentModel.TypeConverter" /> constraint that represents type conversion behavior for values of this <see cref="T:System.Xaml.XamlType" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdbce-642">Si no utiliza la técnica de reflexión de CLR interna de predeterminada para un <xref:System.Xaml.XamlType>, pueden invocar las llamadas a esta propiedad <xref:System.Xaml.XamlType.LookupTypeConverter%2A> invalidaciones en <xref:System.Xaml.XamlType> las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="fdbce-642">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupTypeConverter%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="fdbce-643">Para obtener más información acerca de los valores devueltos y otros comportamientos, consulte la documentación de <xref:System.Xaml.XamlType.LookupTypeConverter%2A> en este tipo.</span><span class="sxs-lookup"><span data-stu-id="fdbce-643">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupTypeConverter%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnderlyingType">
      <MemberSignature Language="C#" Value="public Type UnderlyingType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type UnderlyingType" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.UnderlyingType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UnderlyingType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ UnderlyingType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UnderlyingType : Type" Usage="System.Xaml.XamlType.UnderlyingType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fdbce-644">Obtiene el objeto <see cref="T:System.Type" /> de CLR subyacente a este objeto <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="fdbce-644">Gets the CLR <see cref="T:System.Type" /> that underlies this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <value><span data-ttu-id="fdbce-645">Objeto <see cref="T:System.Type" /> de CLR subyacente a este objeto <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="fdbce-645">The CLR <see cref="T:System.Type" /> that underlies this <see cref="T:System.Xaml.XamlType" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValueSerializer">
      <MemberSignature Language="C#" Value="public System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt; ValueSerializer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.Windows.Markup.ValueSerializer&gt; ValueSerializer" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.ValueSerializer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValueSerializer As XamlValueConverter(Of ValueSerializer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Schema::XamlValueConverter&lt;System::Windows::Markup::ValueSerializer ^&gt; ^ ValueSerializer { System::Xaml::Schema::XamlValueConverter&lt;System::Windows::Markup::ValueSerializer ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ValueSerializer : System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt;" Usage="System.Xaml.XamlType.ValueSerializer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fdbce-646">Obtiene un objeto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> con la restricción <see cref="T:System.Windows.Markup.ValueSerializer" /> que representa el comportamiento de serialización para los valores de este objeto <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="fdbce-646">Gets a <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> with <see cref="T:System.Windows.Markup.ValueSerializer" /> constraint that represents value serialization behavior for values of this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <value><span data-ttu-id="fdbce-647">Objeto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> con la restricción <see cref="T:System.Windows.Markup.ValueSerializer" /> que representa el comportamiento de serialización para los valores de este objeto <see cref="T:System.Xaml.XamlType" />; de lo contrario, es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fdbce-647">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> with <see cref="T:System.Windows.Markup.ValueSerializer" /> constraint that represents value serialization behavior for values of this <see cref="T:System.Xaml.XamlType" />; otherwise, <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdbce-648">Si no utiliza la técnica de reflexión de CLR interna de predeterminada para un <xref:System.Xaml.XamlType>, pueden invocar las llamadas a esta propiedad <xref:System.Xaml.XamlType.LookupValueSerializer%2A> invalidaciones en <xref:System.Xaml.XamlType> las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="fdbce-648">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupValueSerializer%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="fdbce-649">Para obtener más información acerca de los valores devueltos y otros comportamientos, consulte la documentación de <xref:System.Xaml.XamlType.LookupValueSerializer%2A> en este tipo.</span><span class="sxs-lookup"><span data-stu-id="fdbce-649">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupValueSerializer%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
<Type Name="ToolboxCategoryItems" FullName="System.Activities.Presentation.Toolbox.ToolboxCategoryItems">
  <Metadata><Meta Name="ms.openlocfilehash" Value="721a6ca1abcfaf48e9f63793b12b465165450656" /><Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="11/20/2018" /><Meta Name="ms.locfileid" Value="52233012" /></Metadata><TypeSignature Language="C#" Value="public sealed class ToolboxCategoryItems : System.Collections.Generic.ICollection&lt;System.Activities.Presentation.Toolbox.ToolboxCategory&gt;, System.Collections.Generic.IEnumerable&lt;System.Activities.Presentation.Toolbox.ToolboxCategory&gt;, System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ToolboxCategoryItems extends System.Object implements class System.Collections.Generic.ICollection`1&lt;class System.Activities.Presentation.Toolbox.ToolboxCategory&gt;, class System.Collections.Generic.IEnumerable`1&lt;class System.Activities.Presentation.Toolbox.ToolboxCategory&gt;, class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ToolboxCategoryItems&#xA;Implements ICollection(Of ToolboxCategory), IEnumerable(Of ToolboxCategory), IList" />
  <TypeSignature Language="C++ CLI" Value="public ref class ToolboxCategoryItems sealed : System::Collections::Generic::ICollection&lt;System::Activities::Presentation::Toolbox::ToolboxCategory ^&gt;, System::Collections::Generic::IEnumerable&lt;System::Activities::Presentation::Toolbox::ToolboxCategory ^&gt;, System::Collections::IList" />
  <TypeSignature Language="F#" Value="type ToolboxCategoryItems = class&#xA;    interface ICollection&lt;ToolboxCategory&gt;&#xA;    interface seq&lt;ToolboxCategory&gt;&#xA;    interface IEnumerable&#xA;    interface IList&#xA;    interface ICollection" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;System.Activities.Presentation.Toolbox.ToolboxCategory&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Activities.Presentation.Toolbox.ToolboxCategory&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="2f669-101">Una colección de objetos <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" />.</span><span class="sxs-lookup"><span data-stu-id="2f669-101">A collection of <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" /> objects.</span></span> <span data-ttu-id="2f669-102">Esta clase es <see langword="sealed" /> y no se puede heredar. Proporciona compatibilidad para la categorización de los elementos del cuadro de herramientas cuando se hospeda de nuevo el Diseñador de flujo de trabajo de Windows fuera de Visual Studio 2010.</span><span class="sxs-lookup"><span data-stu-id="2f669-102">This class is <see langword="sealed" /> and so cannot be inherited.This class provides support for the categorization of toolbox items when re-hosting the Windows Workflow Designer outside of Visual Studio 2010.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ToolboxCategoryItems ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ToolboxCategoryItems();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2f669-103">Crea una instancia de la clase <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />.</span><span class="sxs-lookup"><span data-stu-id="2f669-103">Creates an instance of the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Activities.Presentation.Toolbox.ToolboxCategory item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(class System.Activities.Presentation.Toolbox.ToolboxCategory item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.Add(System.Activities.Presentation.Toolbox.ToolboxCategory)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (item As ToolboxCategory)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(System::Activities::Presentation::Toolbox::ToolboxCategory ^ item);" />
      <MemberSignature Language="F#" Value="abstract member Add : System.Activities.Presentation.Toolbox.ToolboxCategory -&gt; unit&#xA;override this.Add : System.Activities.Presentation.Toolbox.ToolboxCategory -&gt; unit" Usage="toolboxCategoryItems.Add item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Activities.Presentation.Toolbox.ToolboxCategory" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="2f669-104"><see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" /> que se agrega a la colección.</span><span class="sxs-lookup"><span data-stu-id="2f669-104">The <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" /> to add to the collection.</span></span></param>
        <summary><span data-ttu-id="2f669-105">Agrega una categoría de cuadro de herramientas especificada al final de la colección de elementos de categoría de cuadro de herramientas.</span><span class="sxs-lookup"><span data-stu-id="2f669-105">Adds a specified toolbox category to the end of the toolbox category items collection.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2f669-106">El valor de <paramref name="item" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2f669-106">The <paramref name="item" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="toolboxCategoryItems.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2f669-107">Quita todos los elementos de la colección <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />.</span><span class="sxs-lookup"><span data-stu-id="2f669-107">Removes all the items from the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> collection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Activities.Presentation.Toolbox.ToolboxCategory item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(class System.Activities.Presentation.Toolbox.ToolboxCategory item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.Contains(System.Activities.Presentation.Toolbox.ToolboxCategory)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (item As ToolboxCategory) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(System::Activities::Presentation::Toolbox::ToolboxCategory ^ item);" />
      <MemberSignature Language="F#" Value="abstract member Contains : System.Activities.Presentation.Toolbox.ToolboxCategory -&gt; bool&#xA;override this.Contains : System.Activities.Presentation.Toolbox.ToolboxCategory -&gt; bool" Usage="toolboxCategoryItems.Contains item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Activities.Presentation.Toolbox.ToolboxCategory" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="2f669-108">El elemento de categoría de cuadro de herramientas que se busca.</span><span class="sxs-lookup"><span data-stu-id="2f669-108">The toolbox category item to look for.</span></span></param>
        <summary><span data-ttu-id="2f669-109">Determina si la colección <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> contiene un elemento de categoría de cuadro de herramientas concreto.</span><span class="sxs-lookup"><span data-stu-id="2f669-109">Determines whether the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> collection contains a specific toolbox category item.</span></span></summary>
        <returns><span data-ttu-id="2f669-110">Es <see langword="true" /> si <paramref name="item" /> se encuentra en <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2f669-110"><see langword="true" /> if the <paramref name="item" /> is found in the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2f669-111">El valor de <paramref name="item" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2f669-111">The <paramref name="item" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Activities.Presentation.Toolbox.ToolboxCategory[] array, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Activities.Presentation.Toolbox.ToolboxCategory[] array, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.CopyTo(System.Activities.Presentation.Toolbox.ToolboxCategory[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As ToolboxCategory(), arrayIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(cli::array &lt;System::Activities::Presentation::Toolbox::ToolboxCategory ^&gt; ^ array, int arrayIndex);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : System.Activities.Presentation.Toolbox.ToolboxCategory[] * int -&gt; unit&#xA;override this.CopyTo : System.Activities.Presentation.Toolbox.ToolboxCategory[] * int -&gt; unit" Usage="toolboxCategoryItems.CopyTo (array, arrayIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Activities.Presentation.Toolbox.ToolboxCategory[]" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="2f669-112">La clase <see cref="T:System.Array" /> unidimensional que constituye el destino de los elementos copiados desde la colección <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />.</span><span class="sxs-lookup"><span data-stu-id="2f669-112">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> collection.</span></span> <span data-ttu-id="2f669-113"><see cref="T:System.Array" /> debe tener una indización de base cero.</span><span class="sxs-lookup"><span data-stu-id="2f669-113">The <see cref="T:System.Array" /> must have zero-based indexing.</span></span></param>
        <param name="arrayIndex"><span data-ttu-id="2f669-114">El índice de base cero de la matriz de destino.</span><span class="sxs-lookup"><span data-stu-id="2f669-114">The zero-based index of the target array.</span></span></param>
        <summary><span data-ttu-id="2f669-115">Copia toda la colección <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> en una clase <see cref="T:System.Array" />, unidimensional y compatible, comenzando en el índice especificado de la clase <see cref="T:System.Array" /> de destino.</span><span class="sxs-lookup"><span data-stu-id="2f669-115">Copies the entire <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> collection to a compatible one-dimensional <see cref="T:System.Array" />, starting at the specified index of the target <see cref="T:System.Array" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f669-116">Los elementos se copian en la matriz <xref:System.Array> en el mismo orden en el que el enumerador recorre en iteración la colección <xref:System.Activities.Presentation.Toolbox.ToolboxCategory>.</span><span class="sxs-lookup"><span data-stu-id="2f669-116">The elements are copied to the <xref:System.Array> in the same order in which the enumerator iterates through the <xref:System.Activities.Presentation.Toolbox.ToolboxCategory> collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2f669-117">El valor de <paramref name="array" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2f669-117">The <paramref name="array" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Activities.Presentation.Toolbox.ToolboxCategoryItems.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f669-118">Obtiene el número de herramientas incluidas en la colección <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />.</span><span class="sxs-lookup"><span data-stu-id="2f669-118">Gets the number of tools contained in the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />.</span></span></summary>
        <value><span data-ttu-id="2f669-119">Número de elementos contenidos en <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />.</span><span class="sxs-lookup"><span data-stu-id="2f669-119">The number of elements contained in the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f669-120"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> implementa el <xref:System.Collections.ICollection> interfaz.</span><span class="sxs-lookup"><span data-stu-id="2f669-120"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> implements  the <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerator&lt;System.Activities.Presentation.Toolbox.ToolboxCategory&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;class System.Activities.Presentation.Toolbox.ToolboxCategory&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator(Of ToolboxCategory)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerator&lt;System::Activities::Presentation::Toolbox::ToolboxCategory ^&gt; ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;System.Activities.Presentation.Toolbox.ToolboxCategory&gt;&#xA;override this.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;System.Activities.Presentation.Toolbox.ToolboxCategory&gt;" Usage="toolboxCategoryItems.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Activities.Presentation.Toolbox.ToolboxCategory&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2f669-121">Devuelve un enumerador que itera por la colección <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />.</span><span class="sxs-lookup"><span data-stu-id="2f669-121">Returns an enumerator that iterates through the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> collection.</span></span></summary>
        <returns><span data-ttu-id="2f669-122">Estructura <see cref="T:System.Collections.Generic.IEnumerator`1" /> para la colección <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />.</span><span class="sxs-lookup"><span data-stu-id="2f669-122">An <see cref="T:System.Collections.Generic.IEnumerator`1" /> for the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f669-123">Los enumeradores pueden utilizarse para leer los datos de una colección, pero no pueden utilizarse para modificar la colección subyacente.</span><span class="sxs-lookup"><span data-stu-id="2f669-123">Enumerators can be used to read the data in a collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="2f669-124">En principio, el enumerador se coloca antes del primer elemento de la colección.</span><span class="sxs-lookup"><span data-stu-id="2f669-124">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="2f669-125">En esta posición, el valor de propiedad <xref:System.Collections.Generic.IEnumerator%601.Current> está sin definir.</span><span class="sxs-lookup"><span data-stu-id="2f669-125">At this position, <xref:System.Collections.Generic.IEnumerator%601.Current> is undefined.</span></span> <span data-ttu-id="2f669-126">Por lo tanto, debe llamar a <xref:System.Collections.IEnumerator.MoveNext> para adelantar el enumerador hasta el primer elemento de la colección antes de leer el valor de <xref:System.Collections.Generic.IEnumerator%601.Current>.</span><span class="sxs-lookup"><span data-stu-id="2f669-126">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Generic.IEnumerator%601.Current>.</span></span> <span data-ttu-id="2f669-127">Un enumerador es válido mientras la colección no cambie.</span><span class="sxs-lookup"><span data-stu-id="2f669-127">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="2f669-128">Cualquier cambio en la colección (por ejemplo, agregar, modificar o eliminar elementos) invalidará permanentemente al enumerador y dejará su comportamiento sin definir.</span><span class="sxs-lookup"><span data-stu-id="2f669-128">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is no longer valid and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="2f669-129">El enumerador no tiene acceso exclusivo a la colección y, por tanto, la enumeración en una colección no es intrínsicamente un procedimiento seguro para subprocesos.</span><span class="sxs-lookup"><span data-stu-id="2f669-129">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Activities.Presentation.Toolbox.ToolboxCategoryItems.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.IsReadOnly</InterfaceMember>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f669-130">Obtiene un valor que indica si <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> es de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="2f669-130">Gets a value that indicates whether the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> is read-only.</span></span></summary>
        <value><span data-ttu-id="2f669-131">Es <see langword="true" /> si la interfaz <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> es de solo lectura; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2f669-131"><see langword="true" /> if the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> is read-only; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f669-132"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> implementa la interfaz <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="2f669-132"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> implements the <xref:System.Collections.IList> interface.</span></span> <span data-ttu-id="2f669-133">Una colección de solo lectura no permite que se agreguen, quiten o modifiquen elementos una vez que se ha creado.</span><span class="sxs-lookup"><span data-stu-id="2f669-133">A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Activities.Presentation.Toolbox.ToolboxCategory this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Presentation.Toolbox.ToolboxCategory Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As ToolboxCategory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::Presentation::Toolbox::ToolboxCategory ^ default[int] { System::Activities::Presentation::Toolbox::ToolboxCategory ^ get(int index); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Activities.Presentation.Toolbox.ToolboxCategory" Usage="System.Activities.Presentation.Toolbox.ToolboxCategoryItems.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Toolbox.ToolboxCategory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="2f669-134">El índice de base cero del elemento de categoría de cuadro de herramientas que se va a obtener.</span><span class="sxs-lookup"><span data-stu-id="2f669-134">The zero-based index of the toolbox category item to get.</span></span></param>
        <summary><span data-ttu-id="2f669-135">Obtiene la categoría de cuadro de herramientas que se encuentra en el índice especificado.</span><span class="sxs-lookup"><span data-stu-id="2f669-135">Gets the toolbox category at the specified index.</span></span></summary>
        <value><span data-ttu-id="2f669-136">La instancia de <see cref="T:System.Object" /> correspondiente a la categoría de cuadro de herramientas situada en el índice especificado.</span><span class="sxs-lookup"><span data-stu-id="2f669-136">The toolbox category <see cref="T:System.Object" /> at the specified index.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f669-137"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> implementa la interfaz <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="2f669-137"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> implements the <xref:System.Collections.IList> interface.</span></span> <span data-ttu-id="2f669-138">Esta propiedad permite obtener acceso a un elemento específico de la colección utilizando la sintaxis siguiente: `myCollection[index]`.</span><span class="sxs-lookup"><span data-stu-id="2f669-138">This property provides the ability to access a specific element in the collection by using the following syntax: `myCollection[index]`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (System.Activities.Presentation.Toolbox.ToolboxCategory item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(class System.Activities.Presentation.Toolbox.ToolboxCategory item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.Remove(System.Activities.Presentation.Toolbox.ToolboxCategory)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (item As ToolboxCategory) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Remove(System::Activities::Presentation::Toolbox::ToolboxCategory ^ item);" />
      <MemberSignature Language="F#" Value="abstract member Remove : System.Activities.Presentation.Toolbox.ToolboxCategory -&gt; bool&#xA;override this.Remove : System.Activities.Presentation.Toolbox.ToolboxCategory -&gt; bool" Usage="toolboxCategoryItems.Remove item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Activities.Presentation.Toolbox.ToolboxCategory" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="2f669-139"><see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" /> que se va a quitar.</span><span class="sxs-lookup"><span data-stu-id="2f669-139">The <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" /> to remove.</span></span></param>
        <summary><span data-ttu-id="2f669-140">Quita la primera aparición de una categoría de cuadro de herramientas específica de la colección <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />.</span><span class="sxs-lookup"><span data-stu-id="2f669-140">Removes the first occurrence of a specific toolbox category from the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />.</span></span></summary>
        <returns><span data-ttu-id="2f669-141"><see langword="true" /> si se ha encontrado y quitado el elemento de la colección; de lo contrario, devuelve <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2f669-141"><see langword="true" /> if the item is found and removed from the collection; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="2f669-142">Este método devuelve <see langword="false" /> si <paramref name="item" /> especificado no se encuentra.</span><span class="sxs-lookup"><span data-stu-id="2f669-142">This method returns <see langword="false" /> if the <paramref name="item" /> specified is not found.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="2f669-143">La clase <see cref="T:System.Array" /> unidimensional que constituye el destino de los elementos copiados desde la colección <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />.</span><span class="sxs-lookup"><span data-stu-id="2f669-143">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> collection.</span></span> <span data-ttu-id="2f669-144"><see cref="T:System.Array" /> debe tener una indización de base cero.</span><span class="sxs-lookup"><span data-stu-id="2f669-144">The <see cref="T:System.Array" /> must have zero-based indexing.</span></span></param>
        <param name="index"><span data-ttu-id="2f669-145">El índice de base cero de la matriz de destino.</span><span class="sxs-lookup"><span data-stu-id="2f669-145">The zero-based index of the target array.</span></span></param>
        <summary><span data-ttu-id="2f669-146">Copia toda la colección <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> en una clase <see cref="T:System.Array" />, unidimensional y compatible, comenzando en el índice especificado de la clase <see cref="T:System.Array" /> de destino.</span><span class="sxs-lookup"><span data-stu-id="2f669-146">Copies the entire <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> collection to a compatible one-dimensional <see cref="T:System.Array" />, starting at the specified index of the target <see cref="T:System.Array" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f669-147">Los elementos se copian en la matriz <xref:System.Array> en el mismo orden en el que el enumerador recorre en iteración la colección <xref:System.Activities.Presentation.Toolbox.ToolboxCategory>.</span><span class="sxs-lookup"><span data-stu-id="2f669-147">The elements are copied to the <xref:System.Array> in the same order in which the enumerator iterates through the <xref:System.Activities.Presentation.Toolbox.ToolboxCategory> collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2f669-148">El valor de <paramref name="array" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2f669-148">The <paramref name="array" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.Count">
      <MemberSignature Language="C#" Value="int System.Collections.ICollection.Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Collections.ICollection.Count" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.System#Collections#ICollection#Count" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Count As Integer Implements ICollection.Count" />
      <MemberSignature Language="C++ CLI" Value="property int System::Collections::ICollection::Count { int get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f669-149">Obtiene el número de categorías de cuadro de herramientas contenidas en la colección <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />.</span><span class="sxs-lookup"><span data-stu-id="2f669-149">Gets the number of toolbox categories contained in the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> collection.</span></span></summary>
        <value><span data-ttu-id="2f669-150">El número de elementos contenidos en la colección <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />.</span><span class="sxs-lookup"><span data-stu-id="2f669-150">The number of items contained in the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f669-151"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> implementa la interfaz <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="2f669-151"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> implements the <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f669-152">Obtiene un valor que indica si el acceso a <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> está sincronizado (es seguro para subprocesos).</span><span class="sxs-lookup"><span data-stu-id="2f669-152">Gets a value that indicates whether access to the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> is synchronized (thread safe).</span></span></summary>
        <value><span data-ttu-id="2f669-153">Es <see langword="true" /> si el acceso a <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> está sincronizado (es seguro para subprocesos); de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2f669-153"><see langword="true" /> if access to the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> is synchronized (thread safe); otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f669-154"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> implementa la interfaz <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="2f669-154"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> implements the <xref:System.Collections.ICollection> interface.</span></span> <span data-ttu-id="2f669-155">La propiedad <xref:System.Activities.Presentation.Toolbox.ToolboxCategory.System%23Collections%23ICollection%23SyncRoot%2A> devuelve un objeto que puede usarse para sincronizar el acceso a <xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems>.</span><span class="sxs-lookup"><span data-stu-id="2f669-155">The <xref:System.Activities.Presentation.Toolbox.ToolboxCategory.System%23Collections%23ICollection%23SyncRoot%2A> property returns an object, which can be used to synchronize access to the <xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f669-156">Obtiene un objeto que se puede usar para sincronizar el acceso a <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />.</span><span class="sxs-lookup"><span data-stu-id="2f669-156">Gets an object that can be used to synchronize access to the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />.</span></span></summary>
        <value><span data-ttu-id="2f669-157">Objeto que se puede usar para sincronizar el acceso a <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />.</span><span class="sxs-lookup"><span data-stu-id="2f669-157">An object that can be used to synchronize access to the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f669-158"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> implementa la interfaz <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="2f669-158"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> implements the <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2f669-159">Devuelve un enumerador que itera por la colección <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />.</span><span class="sxs-lookup"><span data-stu-id="2f669-159">Returns an enumerator that iterates through the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> collection.</span></span></summary>
        <returns><span data-ttu-id="2f669-160">Estructura <see cref="T:System.Collections.IEnumerator" /> para la colección <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />.</span><span class="sxs-lookup"><span data-stu-id="2f669-160">An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f669-161">Los enumeradores pueden utilizarse para leer los datos de una colección, pero no pueden utilizarse para modificar la colección subyacente.</span><span class="sxs-lookup"><span data-stu-id="2f669-161">Enumerators can be used to read the data in a collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="2f669-162">En principio, el enumerador se coloca antes del primer elemento de la colección.</span><span class="sxs-lookup"><span data-stu-id="2f669-162">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="2f669-163">En esta posición, el valor de propiedad <xref:System.Collections.Generic.IEnumerator%601.Current> está sin definir.</span><span class="sxs-lookup"><span data-stu-id="2f669-163">At this position, <xref:System.Collections.Generic.IEnumerator%601.Current> is undefined.</span></span> <span data-ttu-id="2f669-164">Por lo tanto, debe llamar a <xref:System.Collections.IEnumerator.MoveNext> para adelantar el enumerador hasta el primer elemento de la colección antes de leer el valor de <xref:System.Collections.Generic.IEnumerator%601.Current>.</span><span class="sxs-lookup"><span data-stu-id="2f669-164">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Generic.IEnumerator%601.Current>.</span></span> <span data-ttu-id="2f669-165">Un enumerador es válido mientras la colección no cambie.</span><span class="sxs-lookup"><span data-stu-id="2f669-165">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="2f669-166">Cualquier cambio en la colección (por ejemplo, agregar, modificar o eliminar elementos) invalidará permanentemente al enumerador y dejará su comportamiento sin definir.</span><span class="sxs-lookup"><span data-stu-id="2f669-166">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is no longer valid and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="2f669-167">El enumerador no tiene acceso exclusivo a la colección y, por tanto, la enumeración en una colección no es intrínsicamente un procedimiento seguro para subprocesos.</span><span class="sxs-lookup"><span data-stu-id="2f669-167">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (value As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ value) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="2f669-168">La posición en la que se inserta el nuevo elemento.</span><span class="sxs-lookup"><span data-stu-id="2f669-168">The position into which the new element is inserted.</span></span></param>
        <summary><span data-ttu-id="2f669-169">Agrega una herramienta a la colección <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />.</span><span class="sxs-lookup"><span data-stu-id="2f669-169">Adds a tool to the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />.</span></span></summary>
        <returns><span data-ttu-id="2f669-170">El índice de base cero de la herramienta agregada a la colección.</span><span class="sxs-lookup"><span data-stu-id="2f669-170">The zero-based index of the tool added to the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f669-171"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> implementa la interfaz <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="2f669-171"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> implements the <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2f669-172">El parámetro <paramref name="value" /> es de un tipo que no se puede asignar a la interfaz <see cref="T:System.Collections.IList" /> que implementa la colección.</span><span class="sxs-lookup"><span data-stu-id="2f669-172">The <paramref name="value" /> is of a type that is not assignable to the <see cref="T:System.Collections.IList" /> implemented by the collection.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Clear">
      <MemberSignature Language="C#" Value="void IList.Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.System#Collections#IList#Clear" />
      <MemberSignature Language="VB.NET" Value="Sub Clear () Implements IList.Clear" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Clear() = System::Collections::IList::Clear;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2f669-173">Quita todas las herramientas de la colección <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />.</span><span class="sxs-lookup"><span data-stu-id="2f669-173">Removes all the tools from the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f669-174"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> implementa la interfaz <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="2f669-174"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> implements the <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (value As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ value) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="2f669-175">La instancia de <see cref="T:System.Object" /> correspondiente a la herramienta que se va a buscar en la colección.</span><span class="sxs-lookup"><span data-stu-id="2f669-175">The tool <see cref="T:System.Object" /> to locate in the collection.</span></span></param>
        <summary><span data-ttu-id="2f669-176">Determina si la colección <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> contiene una herramienta específica.</span><span class="sxs-lookup"><span data-stu-id="2f669-176">Determines whether the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> contains a specific tool.</span></span></summary>
        <returns><span data-ttu-id="2f669-177">Es <see langword="true" /> si <paramref name="value" /> se encuentra en <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2f669-177"><see langword="true" /> if the <paramref name="value" /> is found in the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f669-178"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> implementa la interfaz <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="2f669-178"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> implements the <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2f669-179">El valor de <paramref name="value" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2f669-179">The <paramref name="value" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (value As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ value) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="2f669-180">Objeto que se va a buscar en <see cref="T:System.Collections.IList" />.</span><span class="sxs-lookup"><span data-stu-id="2f669-180">The object to locate in the <see cref="T:System.Collections.IList" />.</span></span></param>
        <summary><span data-ttu-id="2f669-181">Determina el índice de una herramienta específica de <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />.</span><span class="sxs-lookup"><span data-stu-id="2f669-181">Determines the index of a specific tool in the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />.</span></span></summary>
        <returns><span data-ttu-id="2f669-182">Devuelve el índice de <paramref name="value" /> si se encuentra en la lista; de lo contrario, devuelve -1.</span><span class="sxs-lookup"><span data-stu-id="2f669-182">The index of <paramref name="value" /> if found in the list; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f669-183"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> implementa la interfaz <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="2f669-183"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> implements the <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2f669-184">El valor de <paramref name="value" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2f669-184">The <paramref name="value" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, value As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ value) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="2f669-185">Índice basado en cero en el que debe insertarse <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="2f669-185">The zero-based index at which <paramref name="value" /> should be inserted.</span></span></param>
        <param name="value"><span data-ttu-id="2f669-186">La instancia de <see cref="T:System.Object" /> insertada en la colección.</span><span class="sxs-lookup"><span data-stu-id="2f669-186">The <see cref="T:System.Object" /> inserted into the collection.</span></span></param>
        <summary><span data-ttu-id="2f669-187">Inserta una categoría de cuadro de herramientas en el índice especificado de la colección <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />.</span><span class="sxs-lookup"><span data-stu-id="2f669-187">Inserts a toolbox category into the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> collection at the specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f669-188"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> implementa la interfaz <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="2f669-188"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> implements the <xref:System.Collections.IList> interface.</span></span>  
  
 <span data-ttu-id="2f669-189">Si `index` es igual al número de elementos de <xref:System.Collections.IList>, entonces `value` se agrega al final.</span><span class="sxs-lookup"><span data-stu-id="2f669-189">If `index` equals the number of items in the <xref:System.Collections.IList>, then `value` is appended to the end.</span></span>  
  
 <span data-ttu-id="2f669-190">En colecciones de elementos contiguos, como listas, los elementos que van a continuación del punto de inserción se desplazan hacia abajo para alojar el elemento nuevo.</span><span class="sxs-lookup"><span data-stu-id="2f669-190">In collections of contiguous elements, such as lists, the elements that follow the insertion point move down to accommodate the new element.</span></span> <span data-ttu-id="2f669-191">Si la colección está indizada, también se actualizan los índices de los elementos que se han movido.</span><span class="sxs-lookup"><span data-stu-id="2f669-191">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="2f669-192">El parámetro <paramref name="index" /> no es válido para la colección <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />.</span><span class="sxs-lookup"><span data-stu-id="2f669-192">The <paramref name="index" /> is not valid for the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> collection.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2f669-193">El valor de <paramref name="value" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2f669-193">The <paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="2f669-194">La colección es de solo lectura o tiene un tamaño fijo que se ha superado.</span><span class="sxs-lookup"><span data-stu-id="2f669-194">The collection is read-only or has a fixed size that has been exceeded.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f669-195">Obtiene un valor que indica si el objeto <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> tiene un tamaño fijo.</span><span class="sxs-lookup"><span data-stu-id="2f669-195">Gets a value that indicates whether the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> has a fixed size.</span></span></summary>
        <value><span data-ttu-id="2f669-196">Es <see langword="true" /> si la interfaz <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> tiene un tamaño fijo; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2f669-196"><see langword="true" /> if the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> has a fixed size; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f669-197"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> implementa la interfaz <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="2f669-197"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> implements the <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.System#Collections#IList#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements IList.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f669-198">Obtiene un valor que indica si <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> es de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="2f669-198">Gets a value that indicates whether the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> is read-only.</span></span></summary>
        <value><span data-ttu-id="2f669-199">Es <see langword="true" /> si la interfaz <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> es de solo lectura; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2f669-199"><see langword="true" /> if the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> is read-only; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f669-200"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> implementa la interfaz <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="2f669-200"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> implements the <xref:System.Collections.IList> interface.</span></span> <span data-ttu-id="2f669-201">Una colección de solo lectura no permite que se agreguen, quiten o modifiquen elementos una vez que se ha creado.</span><span class="sxs-lookup"><span data-stu-id="2f669-201">A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::IList::Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="2f669-202">El índice de base cero del elemento de categoría de cuadro de herramientas que se va a obtener o establecer.</span><span class="sxs-lookup"><span data-stu-id="2f669-202">The zero-based index of the toolbox category item to get or set.</span></span></param>
        <summary><span data-ttu-id="2f669-203">Obtiene o establece la categoría de cuadro de herramientas situada en el índice especificado de la colección.</span><span class="sxs-lookup"><span data-stu-id="2f669-203">Gets or sets the toolbox category at a specified index of the collection.</span></span></summary>
        <value><span data-ttu-id="2f669-204">La instancia de <see cref="T:System.Object" /> correspondiente a la categoría de cuadro de herramientas situada en el índice especificado.</span><span class="sxs-lookup"><span data-stu-id="2f669-204">The toolbox category <see cref="T:System.Object" /> at the specified index.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f669-205"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> implementa la interfaz <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="2f669-205"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> implements the <xref:System.Collections.IList> interface.</span></span> <span data-ttu-id="2f669-206">Esta propiedad permite obtener acceso a un elemento específico de la colección utilizando la sintaxis siguiente: `myCollection[index]`.</span><span class="sxs-lookup"><span data-stu-id="2f669-206">This property provides the ability to access a specific element in the collection by using the following syntax: `myCollection[index]`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2f669-207"><paramref name="value" /> está establecido en <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2f669-207">The <paramref name="value" /> set is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (value As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ value) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="2f669-208">La instancia de <see cref="T:System.Object" /> correspondiente a la herramienta que se va a quitar de la colección <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />.</span><span class="sxs-lookup"><span data-stu-id="2f669-208">The tool <see cref="T:System.Object" /> to remove from the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> collection.</span></span></param>
        <summary><span data-ttu-id="2f669-209">Quita la primera aparición de una categoría de cuadro de herramientas específica de la colección <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />.</span><span class="sxs-lookup"><span data-stu-id="2f669-209">Removes the first occurrence of a specific toolbox category from the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f669-210"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> implementa la interfaz <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="2f669-210"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> implements the <xref:System.Collections.IList> interface.</span></span>  
  
 <span data-ttu-id="2f669-211">En colecciones de elementos contiguos, como listas, los elementos que van a continuación del elemento eliminado se desplazan hacia arriba para ocupar el espacio libre.</span><span class="sxs-lookup"><span data-stu-id="2f669-211">In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</span></span> <span data-ttu-id="2f669-212">Si la colección está indizada, también se actualizan los índices de los elementos que se han movido.</span><span class="sxs-lookup"><span data-stu-id="2f669-212">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.RemoveAt">
      <MemberSignature Language="C#" Value="void IList.RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.System#Collections#IList#RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub RemoveAt (index As Integer) Implements IList.RemoveAt" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.RemoveAt(int index) = System::Collections::IList::RemoveAt;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="2f669-213">El índice de base cero del elemento de categoría de cuadro de herramientas que se va a quitar.</span><span class="sxs-lookup"><span data-stu-id="2f669-213">The zero-based index of the toolbox category item to remove.</span></span></param>
        <summary><span data-ttu-id="2f669-214">Quita una categoría de cuadro de herramientas situada en el índice especificado de la colección <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />.</span><span class="sxs-lookup"><span data-stu-id="2f669-214">Removes a toolbox category at the specified index of the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f669-215"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> implementa la interfaz <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="2f669-215"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> implements the <xref:System.Collections.IList> interface.</span></span>  
  
 <span data-ttu-id="2f669-216">En colecciones de elementos contiguos, como listas, los elementos que van a continuación del elemento eliminado se desplazan hacia arriba para ocupar el espacio libre.</span><span class="sxs-lookup"><span data-stu-id="2f669-216">In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</span></span> <span data-ttu-id="2f669-217">Si la colección está indizada, también se actualizan los índices de los elementos que se han movido.</span><span class="sxs-lookup"><span data-stu-id="2f669-217">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="2f669-218">El parámetro <paramref name="index" /> no es válido para la colección <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />.</span><span class="sxs-lookup"><span data-stu-id="2f669-218">The <paramref name="index" /> is not valid for the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> collection.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
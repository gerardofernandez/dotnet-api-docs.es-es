<Type Name="DiscoveryVersionConverter" FullName="System.ServiceModel.Discovery.Configuration.DiscoveryVersionConverter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="865a7f57b417e0b701ee8543b60eb4e9cf4bcf77" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39849197" /></Metadata><TypeSignature Language="C#" Value="public class DiscoveryVersionConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DiscoveryVersionConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Discovery.Configuration.DiscoveryVersionConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class DiscoveryVersionConverter&#xA;Inherits TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class DiscoveryVersionConverter : System::ComponentModel::TypeConverter" />
  <TypeSignature Language="F#" Value="type DiscoveryVersionConverter = class&#xA;    inherit TypeConverter" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Discovery</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="7bf8a-101">Proporciona una funcionalidad para cambiar una versión del protocolo WS-Discovery a otro tipo.</span><span class="sxs-lookup"><span data-stu-id="7bf8a-101">Provides functionality to change a WS-Discovery protocol version to another type.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DiscoveryVersionConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Discovery.Configuration.DiscoveryVersionConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DiscoveryVersionConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Discovery</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7bf8a-102">Crea una nueva instancia de la clase <see cref="T:System.ServiceModel.Discovery.Configuration.DiscoveryVersionConverter" />.</span><span class="sxs-lookup"><span data-stu-id="7bf8a-102">Creates a new instance of the <see cref="T:System.ServiceModel.Discovery.Configuration.DiscoveryVersionConverter" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Discovery.Configuration.DiscoveryVersionConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertFrom (context As ITypeDescriptorContext, sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ sourceType);" />
      <MemberSignature Language="F#" Value="abstract member CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool&#xA;override this.CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="discoveryVersionConverter.CanConvertFrom (context, sourceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Discovery</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="7bf8a-103">Escriba información de formato de descriptor que ayuda en la conversión de un objeto <see cref="T:System.ServiceModel.Discovery.DiscoveryVersion" /> a otro tipo.</span><span class="sxs-lookup"><span data-stu-id="7bf8a-103">Type descriptor format information that assists in the conversion of a <see cref="T:System.ServiceModel.Discovery.DiscoveryVersion" /> object to another type.</span></span></param>
        <param name="sourceType"><span data-ttu-id="7bf8a-104">El objeto <see cref="T:System.ServiceModel.Discovery.DiscoveryVersion" /> que se cambia al tipo de este convertidor.</span><span class="sxs-lookup"><span data-stu-id="7bf8a-104">The <see cref="T:System.ServiceModel.Discovery.DiscoveryVersion" /> object that is changed to the type of this converter.</span></span></param>
        <summary><span data-ttu-id="7bf8a-105">Devuelve un valor que indica si es posible cambiar el objeto <see cref="T:System.ServiceModel.Discovery.DiscoveryVersion" /> determinado al tipo de este convertidor y usar el contexto especificado y la información de referencia cultural.</span><span class="sxs-lookup"><span data-stu-id="7bf8a-105">Returns a value that indicates whether it is possible to change the given <see cref="T:System.ServiceModel.Discovery.DiscoveryVersion" /> object to the type of this converter and using the specified context and culture information.</span></span></summary>
        <returns><span data-ttu-id="7bf8a-106"><see langword="true" /> si es posible cambiar el objeto <see cref="T:System.ServiceModel.Discovery.DiscoveryVersion" /> especificado al tipo de este convertidor; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7bf8a-106"><see langword="true" /> if it is possible to change the specified <see cref="T:System.ServiceModel.Discovery.DiscoveryVersion" /> object to the type of this converter; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Discovery.Configuration.DiscoveryVersionConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertTo (context As ITypeDescriptorContext, destinationType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="abstract member CanConvertTo : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool&#xA;override this.CanConvertTo : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="discoveryVersionConverter.CanConvertTo (context, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Discovery</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="7bf8a-107">Escriba información de formato de descriptor que ayuda en la conversión de un objeto <see cref="T:System.ServiceModel.Discovery.DiscoveryVersion" /> a otro tipo.</span><span class="sxs-lookup"><span data-stu-id="7bf8a-107">Type descriptor format information that assists in the conversion of a <see cref="T:System.ServiceModel.Discovery.DiscoveryVersion" /> object to another type.</span></span></param>
        <param name="destinationType"><span data-ttu-id="7bf8a-108">El tipo al que el objeto <see cref="T:System.ServiceModel.Discovery.DiscoveryVersion" /> ha cambiado.</span><span class="sxs-lookup"><span data-stu-id="7bf8a-108">The type to which the <see cref="T:System.ServiceModel.Discovery.DiscoveryVersion" /> object is changed.</span></span></param>
        <summary><span data-ttu-id="7bf8a-109">Devuelve un valor que indica si es posible cambiar el objeto <see cref="T:System.ServiceModel.Discovery.DiscoveryVersion" /> determinado al tipo especificado y utilizar el contexto especificado e información de referencia cultural.</span><span class="sxs-lookup"><span data-stu-id="7bf8a-109">Returns a value that indicates whether it is possible to change the given <see cref="T:System.ServiceModel.Discovery.DiscoveryVersion" /> to the specified type and using the specified context and culture information.</span></span></summary>
        <returns><span data-ttu-id="7bf8a-110"><see langword="true" /> si es posible cambiar el objeto <see cref="T:System.ServiceModel.Discovery.DiscoveryVersion" /> especificado al tipo especificado; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7bf8a-110"><see langword="true" /> if it is possible to change the specified <see cref="T:System.ServiceModel.Discovery.DiscoveryVersion" /> object to the specified type; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Discovery.Configuration.DiscoveryVersionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj&#xA;override this.ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj" Usage="discoveryVersionConverter.ConvertFrom (context, culture, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Discovery</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="7bf8a-111">Escriba información de formato de descriptor que ayuda en la conversión de un objeto <see cref="T:System.ServiceModel.Discovery.DiscoveryVersion" /> a otro tipo.</span><span class="sxs-lookup"><span data-stu-id="7bf8a-111">Type descriptor format information that assists in the conversion of a <see cref="T:System.ServiceModel.Discovery.DiscoveryVersion" /> object to another type.</span></span></param>
        <param name="culture"><span data-ttu-id="7bf8a-112">Información de referencia cultural que se va a usar en la conversión de tipo.</span><span class="sxs-lookup"><span data-stu-id="7bf8a-112">The culture information to use in the type conversion.</span></span></param>
        <param name="value"><span data-ttu-id="7bf8a-113">El objeto <see cref="T:System.ServiceModel.Discovery.DiscoveryVersion" /> que se va a cambiar.</span><span class="sxs-lookup"><span data-stu-id="7bf8a-113">The <see cref="T:System.ServiceModel.Discovery.DiscoveryVersion" /> object to change.</span></span></param>
        <summary><span data-ttu-id="7bf8a-114">Convierte el objeto <see cref="T:System.ServiceModel.Discovery.DiscoveryVersion" /> determinado al tipo de este convertidor usando el contexto especificado y la información de referencia cultural.</span><span class="sxs-lookup"><span data-stu-id="7bf8a-114">Converts the given <see cref="T:System.ServiceModel.Discovery.DiscoveryVersion" /> object to the type of this converter, using the specified context and culture information.</span></span></summary>
        <returns><span data-ttu-id="7bf8a-115">El objeto <see cref="T:System.ServiceModel.Discovery.DiscoveryVersion" /> que se ha cambiado al tipo de este convertidor.</span><span class="sxs-lookup"><span data-stu-id="7bf8a-115">A <see cref="T:System.ServiceModel.Discovery.DiscoveryVersion" /> that has been changed to the type of this converter.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Discovery.Configuration.DiscoveryVersionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="abstract member ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj&#xA;override this.ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj" Usage="discoveryVersionConverter.ConvertTo (context, culture, value, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Discovery</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="7bf8a-116">Escriba información de formato de descriptor que ayuda en la conversión de un objeto <see cref="T:System.ServiceModel.Discovery.DiscoveryVersion" /> a otro tipo.</span><span class="sxs-lookup"><span data-stu-id="7bf8a-116">Type descriptor format information that assists in the conversion of a <see cref="T:System.ServiceModel.Discovery.DiscoveryVersion" /> object to another type.</span></span></param>
        <param name="culture"><span data-ttu-id="7bf8a-117">Información de referencia cultural que se va a usar en la conversión de tipo.</span><span class="sxs-lookup"><span data-stu-id="7bf8a-117">The culture information to use in the type conversion.</span></span></param>
        <param name="value"><span data-ttu-id="7bf8a-118">El objeto <see cref="T:System.ServiceModel.Discovery.DiscoveryVersion" /> que se va a cambiar.</span><span class="sxs-lookup"><span data-stu-id="7bf8a-118">The <see cref="T:System.ServiceModel.Discovery.DiscoveryVersion" /> to change.</span></span></param>
        <param name="destinationType"><span data-ttu-id="7bf8a-119">El tipo al que el objeto <see cref="T:System.ServiceModel.Discovery.DiscoveryVersion" /> se está cambiando.</span><span class="sxs-lookup"><span data-stu-id="7bf8a-119">The type to which the <see cref="T:System.ServiceModel.Discovery.DiscoveryVersion" /> object is being changed.</span></span></param>
        <summary><span data-ttu-id="7bf8a-120">Convierte el objeto <see cref="T:System.ServiceModel.Discovery.DiscoveryVersion" /> dado al tipo especificado utilizando el contexto y la información de referencia cultural especificados.</span><span class="sxs-lookup"><span data-stu-id="7bf8a-120">Converts the given <see cref="T:System.ServiceModel.Discovery.DiscoveryVersion" /> to the specified type, using the specified context and culture information.</span></span></summary>
        <returns><span data-ttu-id="7bf8a-121">Objeto <see cref="T:System.ServiceModel.Discovery.DiscoveryVersion" /> que se ha cambiando al tipo especificado.</span><span class="sxs-lookup"><span data-stu-id="7bf8a-121">A <see cref="T:System.ServiceModel.Discovery.DiscoveryVersion" /> that has been changed to the specified type.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
<Type Name="XmlTextWriter" FullName="System.Xml.XmlTextWriter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1c303be50fe6df69393cd96a32d54050b5c8b99e" />
    <Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="11/29/2018" />
    <Meta Name="ms.locfileid" Value="52596359" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XmlTextWriter : System.Xml.XmlWriter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlTextWriter extends System.Xml.XmlWriter" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlTextWriter" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlTextWriter&#xA;Inherits XmlWriter" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlTextWriter : System::Xml::XmlWriter" />
  <TypeSignature Language="F#" Value="type XmlTextWriter = class&#xA;    inherit XmlWriter" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xml.XmlWriter</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2">
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="7046f-101">Representa un sistema de escritura que proporciona un medio rápido, sin almacenamiento en caché y con desplazamiento sólo hacia delante para generar secuencias o archivos con datos XML que satisface las recomendaciones relativas a espacios de nombres en XML y Extensible Markup Language (XML) 1.0 del Consorcio W3C.</span>
      <span class="sxs-lookup">
        <span data-stu-id="7046f-101">Represents a writer that provides a fast, non-cached, forward-only way of generating streams or files containing XML data that conforms to the W3C Extensible Markup Language (XML) 1.0 and the Namespaces in XML recommendations.</span>
      </span>
      <span data-ttu-id="7046f-102">A partir de .NET Framework 2.0, se recomienda usar la clase <see cref="T:System.Xml.XmlWriter" /> en su lugar.</span>
      <span class="sxs-lookup">
        <span data-stu-id="7046f-102">Starting with the .NET Framework 2.0, we recommend that you use the <see cref="T:System.Xml.XmlWriter" /> class instead.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7046f-103">Esta clase implementa la <xref:System.Xml.XmlWriter> clase.</span><span class="sxs-lookup"><span data-stu-id="7046f-103">This class implements the <xref:System.Xml.XmlWriter> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7046f-104">A partir de .NET Framework 2.0, se recomienda crear <xref:System.Xml.XmlWriter> instancias utilizando el <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método y el <xref:System.Xml.XmlWriterSettings> clase para aprovechar las ventajas de la nueva funcionalidad.</span><span class="sxs-lookup"><span data-stu-id="7046f-104">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="7046f-105">`XmlTextWriter` mantiene una pila de espacio de nombres correspondiente a todos los espacios de nombres definidos en la pila del elemento actual.</span><span class="sxs-lookup"><span data-stu-id="7046f-105">`XmlTextWriter` maintains a namespace stack corresponding to all the namespaces defined in the current element stack.</span></span> <span data-ttu-id="7046f-106">Uso de `XmlTextWriter` puede declarar espacios de nombres manualmente.</span><span class="sxs-lookup"><span data-stu-id="7046f-106">Using `XmlTextWriter` you can declare namespaces manually.</span></span>  
  
```csharp  
w.WriteStartElement("root");  
w.WriteAttributeString("xmlns", "x", null, "urn:1");  
 w.WriteStartElement("item","urn:1");  
 w.WriteEndElement();  
 w.WriteStartElement("item","urn:1");  
 w.WriteEndElement();  
w.WriteEndElement();  
```  
  
 <span data-ttu-id="7046f-107">El código de C# anterior genera el resultado siguiente.</span><span class="sxs-lookup"><span data-stu-id="7046f-107">The above C# code produces the following output.</span></span> <span data-ttu-id="7046f-108">`XmlTextWriter` promociona la declaración de espacio de nombres al elemento raíz para evitar que esté duplicada en los dos elementos secundarios.</span><span class="sxs-lookup"><span data-stu-id="7046f-108">`XmlTextWriter` promotes the namespace declaration to the root element to avoid having it duplicated on the two child elements.</span></span> <span data-ttu-id="7046f-109">Los elementos secundarios obtienen el prefijo de la declaración de espacio de nombres.</span><span class="sxs-lookup"><span data-stu-id="7046f-109">The child elements pick up the prefix from the namespace declaration.</span></span>  
  
```xml  
<root xmlns:x="urn:1">  
 <x:item/>  
 <x:item/>  
</x:root>  
```  
  
 <span data-ttu-id="7046f-110">`XmlTextWriter` También permite reemplazar la declaración de espacio de nombres actual.</span><span class="sxs-lookup"><span data-stu-id="7046f-110">`XmlTextWriter` also allows you to override the current namespace declaration.</span></span> <span data-ttu-id="7046f-111">En el ejemplo siguiente, el espacio de nombres URI "123" se reemplaza por "abc" para generar el elemento XML `<x:node xmlns:x="abc"/>`.</span><span class="sxs-lookup"><span data-stu-id="7046f-111">In the following example, the namespace URI "123" is overridden by "abc" to produce the XML element `<x:node xmlns:x="abc"/>`.</span></span>  
  
```csharp  
w.WriteStartElement("x","node","123");  
w.WriteAttributeString("xmlns","x",null,"abc");  
```  
  
 <span data-ttu-id="7046f-112">Mediante el uso de los métodos de escritura que toman un prefijo como argumento también puede especificar qué prefijo se va a usar.</span><span class="sxs-lookup"><span data-stu-id="7046f-112">By using the write methods that take a prefix as an argument you can also specify which prefix to use.</span></span> <span data-ttu-id="7046f-113">En el ejemplo siguiente, se asignan dos prefijos diferentes al mismo espacio de nombres URI para generar el texto XML `<x:root xmlns:x="urn:1"><y:item xmlns:y="urn:1"/></x:root>`.</span><span class="sxs-lookup"><span data-stu-id="7046f-113">In the following example, two different prefixes are mapped to the same namespace URI to produce the XML text `<x:root xmlns:x="urn:1"><y:item xmlns:y="urn:1"/></x:root>`.</span></span>  
  
```csharp  
XmlTextWriter w = new XmlTextWriter(Console.Out);  
w.WriteStartElement("x","root","urn:1");  
 w.WriteStartElement("y","item","urn:1");  
 w.WriteEndElement();  
w.WriteEndElement();  
w.Close();  
```  
  
 <span data-ttu-id="7046f-114">Si hay varias declaraciones de espacio de nombres que asignan prefijos diferentes al mismo espacio de nombres URI, `XmlTextWriter` recorre la pila de declaraciones de espacio de nombres con versiones anteriores y elegir el más próximo.</span><span class="sxs-lookup"><span data-stu-id="7046f-114">If there are multiple namespace declarations mapping different prefixes to the same namespace URI, `XmlTextWriter` walks the stack of namespace declarations backwards and picks the closest one.</span></span>  
  
```csharp  
XmlTextWriter w = new XmlTextWriter(Console.Out);  
w.Formatting = Formatting.Indented;  
w.WriteStartElement("x","root","urn:1");  
w.WriteStartElement("y","item","urn:1");  
w.WriteAttributeString("attr","urn:1","123");  
w.WriteEndElement();  
w.WriteEndElement();  
w.Close();  
```  
  
 <span data-ttu-id="7046f-115">En el anterior ejemplo de C#, porque el `WriteAttributeString` llamada no especifica un prefijo, el sistema de escritura utiliza el último prefijo insertado en la pila de espacio de nombres y genera el código XML siguiente:</span><span class="sxs-lookup"><span data-stu-id="7046f-115">In the above C# example, because the `WriteAttributeString` call does not specify a prefix, the writer uses the last prefix pushed onto the namespace stack, and produces the following XML:</span></span>  
  
```xml  
<x:root xmlns:x="urn:1">  
 <y:item y:attr="123" xmlns:y="urn:1" />  
</x:root>  
```  
  
 <span data-ttu-id="7046f-116">Si se producen conflictos de espacio de nombres, `XmlTextWriter` resuelve mediante la generación de prefijos alternativos.</span><span class="sxs-lookup"><span data-stu-id="7046f-116">If namespace conflicts occur, `XmlTextWriter` resolves them by generating alternate prefixes.</span></span> <span data-ttu-id="7046f-117">Por ejemplo, si un atributo y un elemento tienen el mismo prefijo, pero con distintos espacios de nombres, `XmlWriter` genera otro prefijo para el atributo.</span><span class="sxs-lookup"><span data-stu-id="7046f-117">For example, if an attribute and element have the same prefix but different namespaces, `XmlWriter` generates an alternate prefix for the attribute.</span></span> <span data-ttu-id="7046f-118">Los prefijos generados se denominan `n{i}` donde `i` es un número que empieza en 1.</span><span class="sxs-lookup"><span data-stu-id="7046f-118">The generated prefixes are named `n{i}` where `i` is a number beginning at 1.</span></span> <span data-ttu-id="7046f-119">El número se restablece en 1 para cada elemento.</span><span class="sxs-lookup"><span data-stu-id="7046f-119">The number is reset to 1 for each element.</span></span>  
  
 <span data-ttu-id="7046f-120">Los atributos que están asociados con un URI de espacio de nombres deben tener un prefijo (valor predeterminado, los espacios de nombres no se aplican a los atributos).</span><span class="sxs-lookup"><span data-stu-id="7046f-120">Attributes which are associated with a namespace URI must have a prefix (default namespaces do not apply to attributes).</span></span> <span data-ttu-id="7046f-121">Esto se ajusta a la sección 5.2 del W3C recomendación de Namespaces en XML.</span><span class="sxs-lookup"><span data-stu-id="7046f-121">This conforms to section 5.2 of the W3C Namespaces in XML recommendation.</span></span> <span data-ttu-id="7046f-122">Si un atributo hace referencia a un URI de espacio de nombres, pero no especifica un prefijo, el sistema de escritura genera un prefijo para el atributo.</span><span class="sxs-lookup"><span data-stu-id="7046f-122">If an attribute references a namespace URI, but does not specify a prefix, the writer generates a prefix for the attribute.</span></span>  
  
 <span data-ttu-id="7046f-123">Al escribir un elemento vacío, un espacio adicional se agrega entre el nombre de la etiqueta y la etiqueta de cierre, por ejemplo `<item />`.</span><span class="sxs-lookup"><span data-stu-id="7046f-123">When writing an empty element, an additional space is added between tag name and the closing tag, for example `<item />`.</span></span> <span data-ttu-id="7046f-124">Esto proporciona compatibilidad con exploradores más antiguos.</span><span class="sxs-lookup"><span data-stu-id="7046f-124">This provides compatibility with older browsers.</span></span>  
  
 <span data-ttu-id="7046f-125">Cuando un `String` se utiliza como parámetro de método, `null` y `String.Empty` son equivalentes.</span><span class="sxs-lookup"><span data-stu-id="7046f-125">When a `String` is used as method parameter, `null` and `String.Empty` are equivalent.</span></span> <span data-ttu-id="7046f-126">`String.Empty` sigue las reglas del W3C.</span><span class="sxs-lookup"><span data-stu-id="7046f-126">`String.Empty` follows the W3C rules.</span></span>  
  
 <span data-ttu-id="7046f-127">Para escribir datos fuertemente tipados, use la <xref:System.Xml.XmlConvert> clase para convertir tipos de datos en cadena.</span><span class="sxs-lookup"><span data-stu-id="7046f-127">To write strongly typed data, use the <xref:System.Xml.XmlConvert> class to convert data types to string.</span></span> <span data-ttu-id="7046f-128">Por ejemplo, el siguiente código C# convierte los datos de `Double` a `String` y escribe el elemento `<price>19.95</price>`.</span><span class="sxs-lookup"><span data-stu-id="7046f-128">For example, the following C# code converts the data from `Double` to `String` and writes the element `<price>19.95</price>`.</span></span>  
  
```csharp  
Double price = 19.95;  
writer.WriteElementString("price", XmlConvert.ToString(price));  
```  
  
 <span data-ttu-id="7046f-129">`XmlTextWriter` no compruebe lo siguiente:</span><span class="sxs-lookup"><span data-stu-id="7046f-129">`XmlTextWriter` does not check for the following:</span></span>  
  
-   <span data-ttu-id="7046f-130">Caracteres no válidos en nombres de atributo y elemento.</span><span class="sxs-lookup"><span data-stu-id="7046f-130">Invalid characters in attribute and element names.</span></span>  
  
-   <span data-ttu-id="7046f-131">Caracteres Unicode que no se ajustan la codificación especificada.</span><span class="sxs-lookup"><span data-stu-id="7046f-131">Unicode characters that do not fit the specified encoding.</span></span> <span data-ttu-id="7046f-132">Si los caracteres Unicode no ajustan la codificación especificada, el `XmlTextWriter` no realiza escape de los caracteres Unicode en las entidades de caracteres.</span><span class="sxs-lookup"><span data-stu-id="7046f-132">If the Unicode characters do not fit the specified encoding, the `XmlTextWriter` does not escape the Unicode characters into character entities.</span></span>  
  
-   <span data-ttu-id="7046f-133">Atributos duplicados.</span><span class="sxs-lookup"><span data-stu-id="7046f-133">Duplicate attributes.</span></span>  
  
-   <span data-ttu-id="7046f-134">Caracteres en el identificador público del tipo de documento o el identificador del sistema.</span><span class="sxs-lookup"><span data-stu-id="7046f-134">Characters in the DOCTYPE public identifier or system identifier.</span></span>  
  
## <a name="security-considerations"></a><span data-ttu-id="7046f-135">Consideraciones de seguridad</span><span class="sxs-lookup"><span data-stu-id="7046f-135">Security Considerations</span></span>  
 <span data-ttu-id="7046f-136">Los elementos siguientes son las cosas a tener en cuenta al trabajar con el <xref:System.Xml.XmlTextWriter> clase.</span><span class="sxs-lookup"><span data-stu-id="7046f-136">The following items are things to consider when working with the <xref:System.Xml.XmlTextWriter> class.</span></span>  
  
-   <span data-ttu-id="7046f-137">Las excepciones producidas por la <xref:System.Xml.XmlTextWriter> pueden revelar información de ruta de acceso que no desea que se ejecuta hasta la aplicación.</span><span class="sxs-lookup"><span data-stu-id="7046f-137">Exceptions thrown by the <xref:System.Xml.XmlTextWriter> can disclose path information that you do not want bubbled up to the application.</span></span> <span data-ttu-id="7046f-138">Las aplicaciones deben detectar las excepciones y procesarlas de la manera correspondiente.</span><span class="sxs-lookup"><span data-stu-id="7046f-138">Your applications must catch exceptions and process them appropriately.</span></span>  
  
-   <span data-ttu-id="7046f-139">Cuando se pasa <xref:System.Xml.XmlTextWriter> a otra aplicación, la secuencia subyacente queda expuesta a esa aplicación.</span><span class="sxs-lookup"><span data-stu-id="7046f-139">When you pass the <xref:System.Xml.XmlTextWriter> to another application the underlying stream is exposed to that application.</span></span> <span data-ttu-id="7046f-140">Si necesita pasar el objeto <xref:System.Xml.XmlTextWriter> a una aplicación de confianza parcial, debería utilizar en su lugar un objeto <xref:System.Xml.XmlWriter> creado por el método <xref:System.Xml.XmlWriter.Create%2A>.</span><span class="sxs-lookup"><span data-stu-id="7046f-140">If you need to pass the <xref:System.Xml.XmlTextWriter> to a semi-trusted application, you should use an <xref:System.Xml.XmlWriter> object created by the <xref:System.Xml.XmlWriter.Create%2A> method instead.</span></span>  
  
-   <span data-ttu-id="7046f-141">El <xref:System.Xml.XmlTextWriter> no valida los datos que se pasan a la <xref:System.Xml.XmlTextWriter.WriteDocType%2A> o <xref:System.Xml.XmlTextWriter.WriteRaw%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="7046f-141">The <xref:System.Xml.XmlTextWriter> does not validate any data that is passed to the <xref:System.Xml.XmlTextWriter.WriteDocType%2A> or <xref:System.Xml.XmlTextWriter.WriteRaw%2A> methods.</span></span> <span data-ttu-id="7046f-142">No se deben pasar datos arbitrarios a estos métodos.</span><span class="sxs-lookup"><span data-stu-id="7046f-142">You should not pass arbitrary data to these methods.</span></span>  
  
-   <span data-ttu-id="7046f-143">Si se cambia la configuración predeterminada, no hay ninguna garantía de que la salida generada es datos XML con formato correcto.</span><span class="sxs-lookup"><span data-stu-id="7046f-143">If the default settings are changed, there is no guarantee that the generated output is well-formed XML data.</span></span>  
  
-   <span data-ttu-id="7046f-144">No acepte componentes auxiliares, como un <xref:System.Text.Encoding> objeto desde un origen de confianza.</span><span class="sxs-lookup"><span data-stu-id="7046f-144">Do not accept supporting components, such as an <xref:System.Text.Encoding> object, from an untrusted source.</span></span>  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/e695047f-3c0f-4045-8708-5baea91cc380">
      <span data-ttu-id="7046f-145">Documentos y datos XML</span>
      <span class="sxs-lookup">
        <span data-stu-id="7046f-145">XML Documents and Data</span>
      </span>
    </related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="7046f-146">Crea una instancia de la clase <see langword="XmlTextWriter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-146">Creates an instance of the <see langword="XmlTextWriter" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="7046f-147">A partir de .NET Framework 2.0, se recomienda crear <xref:System.Xml.XmlWriter> instancias utilizando el <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método y el <xref:System.Xml.XmlWriterSettings> clase para aprovechar las ventajas de la nueva funcionalidad.</span><span class="sxs-lookup"><span data-stu-id="7046f-147">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTextWriter (System.IO.TextWriter w);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextWriter w) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.#ctor(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (w As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlTextWriter(System::IO::TextWriter ^ w);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlTextWriter : System.IO.TextWriter -&gt; System.Xml.XmlTextWriter" Usage="new System.Xml.XmlTextWriter w" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="w" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="w">
          <span data-ttu-id="7046f-148">
            <see langword="TextWriter" /> en el que se va a escribir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-148">The <see langword="TextWriter" /> to write to.</span>
          </span>
          <span data-ttu-id="7046f-149">Se supone que <see langword="TextWriter" /> ya está establecido en la codificación correcta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-149">It is assumed that the <see langword="TextWriter" /> is already set to the correct encoding.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7046f-150">Crea una instancia de la clase <see langword="XmlTextWriter" /> mediante el objeto <see cref="T:System.IO.TextWriter" /> especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-150">Creates an instance of the <see langword="XmlTextWriter" /> class using the specified <see cref="T:System.IO.TextWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="7046f-151">A partir de .NET Framework 2.0, se recomienda crear <xref:System.Xml.XmlWriter> instancias utilizando el <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método y el <xref:System.Xml.XmlWriterSettings> clase para aprovechar las ventajas de la nueva funcionalidad.</span><span class="sxs-lookup"><span data-stu-id="7046f-151">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTextWriter (System.IO.Stream w, System.Text.Encoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream w, class System.Text.Encoding encoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.#ctor(System.IO.Stream,System.Text.Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlTextWriter(System::IO::Stream ^ w, System::Text::Encoding ^ encoding);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlTextWriter : System.IO.Stream * System.Text.Encoding -&gt; System.Xml.XmlTextWriter" Usage="new System.Xml.XmlTextWriter (w, encoding)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="w" Type="System.IO.Stream" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="w">
          <span data-ttu-id="7046f-152">Flujo en el que desea escribir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-152">The stream to which you want to write.</span>
          </span>
        </param>
        <param name="encoding">
          <span data-ttu-id="7046f-153">Codificación que se va a generar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-153">The encoding to generate.</span>
          </span>
          <span data-ttu-id="7046f-154">Si la codificación es <see langword="null" />, escribe la secuencia como UTF-8 y omite el atributo de codificación de la instrucción <see langword="ProcessingInstruction" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-154">If encoding is <see langword="null" /> it writes out the stream as UTF-8 and omits the encoding attribute from the <see langword="ProcessingInstruction" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7046f-155">Crea una instancia de la clase <see langword="XmlTextWriter" /> mediante la secuencia y la codificación especificadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-155">Creates an instance of the <see langword="XmlTextWriter" /> class using the specified stream and encoding.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="7046f-156">A partir de .NET Framework 2.0, se recomienda crear <xref:System.Xml.XmlWriter> instancias utilizando el <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método y el <xref:System.Xml.XmlWriterSettings> clase para aprovechar las ventajas de la nueva funcionalidad.</span><span class="sxs-lookup"><span data-stu-id="7046f-156">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7046f-157">No se admite la codificación o no se puede escribir en la secuencia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-157">The encoding is not supported or the stream cannot be written to.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7046f-158">El valor de <paramref name="w" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-158">
              <paramref name="w" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTextWriter (string filename, System.Text.Encoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string filename, class System.Text.Encoding encoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.#ctor(System.String,System.Text.Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlTextWriter(System::String ^ filename, System::Text::Encoding ^ encoding);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlTextWriter : string * System.Text.Encoding -&gt; System.Xml.XmlTextWriter" Usage="new System.Xml.XmlTextWriter (filename, encoding)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="filename">
          <span data-ttu-id="7046f-159">Nombre del archivo en el que se va a escribir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-159">The filename to write to.</span>
          </span>
          <span data-ttu-id="7046f-160">Si existe el archivo, lo truncará y lo sobrescribirá con el nuevo contenido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-160">If the file exists, it truncates it and overwrites it with the new content.</span>
          </span>
        </param>
        <param name="encoding">
          <span data-ttu-id="7046f-161">Codificación que se va a generar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-161">The encoding to generate.</span>
          </span>
          <span data-ttu-id="7046f-162">Si la codificación es <see langword="null" />, escribe el archivo como UTF-8 y omite el atributo de codificación de la instrucción <see langword="ProcessingInstruction" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-162">If encoding is <see langword="null" /> it writes the file out as UTF-8, and omits the encoding attribute from the <see langword="ProcessingInstruction" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7046f-163">Crea una instancia de la clase <see cref="T:System.Xml.XmlTextWriter" /> mediante el archivo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-163">Creates an instance of the <see cref="T:System.Xml.XmlTextWriter" /> class using the specified file.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="7046f-164">A partir de .NET Framework 2.0, se recomienda crear <xref:System.Xml.XmlWriter> instancias utilizando el <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método y el <xref:System.Xml.XmlWriterSettings> clase para aprovechar las ventajas de la nueva funcionalidad.</span><span class="sxs-lookup"><span data-stu-id="7046f-164">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7046f-165">No se admite la codificación; el nombre de archivo está vacío, sólo contiene espacios en blanco o contiene uno o más caracteres no válidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-165">The encoding is not supported; the filename is empty, contains only white space, or contains one or more invalid characters.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="7046f-166">Se denegó el acceso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-166">Access is denied.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7046f-167">El nombre de archivo es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-167">The filename is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="7046f-168">No se encuentra el directorio en el que hay que escribir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-168">The directory to write to is not found.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="7046f-169">El nombre de archivo incluye una sintaxis no correcta o no válida para el nombre de archivo, el nombre de directorio o la etiqueta de volumen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-169">The filename includes an incorrect or invalid syntax for file name, directory name, or volume label syntax.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="7046f-170">El llamador no dispone del permiso requerido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-170">The caller does not have the required permission.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BaseStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream BaseStream { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream BaseStream" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.BaseStream" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BaseStream As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Stream ^ BaseStream { System::IO::Stream ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BaseStream : System.IO.Stream" Usage="System.Xml.XmlTextWriter.BaseStream" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7046f-171">Obtiene el objeto de flujo subyacente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-171">Gets the underlying stream object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7046f-172">Secuencia en la que está escribiendo <see langword="XmlTextWriter" /> o <see langword="null" /> si se construyó <see langword="XmlTextWriter" /> mediante <see cref="T:System.IO.TextWriter" /> que no se hereda de la clase <see cref="T:System.IO.StreamWriter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-172">The stream to which the <see langword="XmlTextWriter" /> is writing or <see langword="null" /> if the <see langword="XmlTextWriter" /> was constructed using a <see cref="T:System.IO.TextWriter" /> that does not inherit from the <see cref="T:System.IO.StreamWriter" /> class.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="7046f-173">A partir de .NET Framework 2.0, se recomienda crear <xref:System.Xml.XmlWriter> instancias utilizando el <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método y el <xref:System.Xml.XmlWriterSettings> clase para aprovechar las ventajas de la nueva funcionalidad.</span><span class="sxs-lookup"><span data-stu-id="7046f-173">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="7046f-174">Si se construyó el sistema de escritura mediante un `TextWriter` que se deriva el `StreamWriter` (clase), esta propiedad es equivalente a la <xref:System.IO.StreamWriter.BaseStream%2A?displayProperty=nameWithType> propiedad.</span><span class="sxs-lookup"><span data-stu-id="7046f-174">If the writer was constructed using a `TextWriter` that is derived from the `StreamWriter` class, this property is equivalent to the <xref:System.IO.StreamWriter.BaseStream%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="7046f-175">Si se construyó el sistema de escritura mediante un <xref:System.IO.Stream>, esta propiedad devuelve el `Stream` pasado al constructor.</span><span class="sxs-lookup"><span data-stu-id="7046f-175">If the writer was constructed using a <xref:System.IO.Stream>, this property returns the `Stream` passed to the constructor.</span></span> <span data-ttu-id="7046f-176">Si el sistema de escritura se construyó con un nombre de archivo, esta propiedad devuelve el `Stream` que representa el archivo.</span><span class="sxs-lookup"><span data-stu-id="7046f-176">If the writer was constructed using a file name, this property returns the `Stream` representing the file.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="xmlTextWriter.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7046f-177">Cierra este flujo y el flujo subyacente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-177">Closes this stream and the underlying stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="7046f-178">A partir de .NET Framework 2.0, se recomienda crear <xref:System.Xml.XmlWriter> instancias utilizando el <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método y el <xref:System.Xml.XmlWriterSettings> clase para aprovechar las ventajas de la nueva funcionalidad.</span><span class="sxs-lookup"><span data-stu-id="7046f-178">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="7046f-179">Todos los elementos o atributos que se dejan abiertos se cierran automáticamente.</span><span class="sxs-lookup"><span data-stu-id="7046f-179">Any elements or attributes left open are automatically closed.</span></span>  
  
 <span data-ttu-id="7046f-180">Este método no produce ninguna excepción.</span><span class="sxs-lookup"><span data-stu-id="7046f-180">This method does not throw any exceptions.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7046f-181">El ejemplo siguiente escribe un fragmento XML.</span><span class="sxs-lookup"><span data-stu-id="7046f-181">The following example writes an XML fragment.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberSignature Language="F#" Value="override this.Flush : unit -&gt; unit" Usage="xmlTextWriter.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7046f-182">Vuelca el contenido del búfer en los flujos subyacentes y también vuelca el flujo subyacente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-182">Flushes whatever is in the buffer to the underlying streams and also flushes the underlying stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="7046f-183">A partir de .NET Framework 2.0, se recomienda crear <xref:System.Xml.XmlWriter> instancias utilizando el <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método y el <xref:System.Xml.XmlWriterSettings> clase para aprovechar las ventajas de la nueva funcionalidad.</span><span class="sxs-lookup"><span data-stu-id="7046f-183">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="7046f-184">Esto se denomina en lugar de <xref:System.Xml.XmlTextWriter.Close%2A> cuando desee escribir más en la secuencia subyacente sin perder lo que aún está en el búfer.</span><span class="sxs-lookup"><span data-stu-id="7046f-184">This is called instead of <xref:System.Xml.XmlTextWriter.Close%2A> when you want to write more to the underlying stream without losing what is still in the buffer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7046f-185">El ejemplo siguiente se escribe dos fragmentos de XML.</span><span class="sxs-lookup"><span data-stu-id="7046f-185">The following example writes out two XML fragments.</span></span>  
  
 [!code-cpp[XmlTextWriter.Flush#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlTextWriter.Flush/CPP/write2docs.cpp#1)]
 [!code-csharp[XmlTextWriter.Flush#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlTextWriter.Flush/CS/write2docs.cs#1)]
 [!code-vb[XmlTextWriter.Flush#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlTextWriter.Flush/VB/write2docs.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Formatting">
      <MemberSignature Language="C#" Value="public System.Xml.Formatting Formatting { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.Formatting Formatting" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.Formatting" />
      <MemberSignature Language="VB.NET" Value="Public Property Formatting As Formatting" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Formatting Formatting { System::Xml::Formatting get(); void set(System::Xml::Formatting value); };" />
      <MemberSignature Language="F#" Value="member this.Formatting : System.Xml.Formatting with get, set" Usage="System.Xml.XmlTextWriter.Formatting" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Formatting</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7046f-186">Indica cómo se da formato a la salida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-186">Indicates how the output is formatted.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7046f-187">Uno de los valores de <see cref="T:System.Xml.Formatting" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-187">One of the <see cref="T:System.Xml.Formatting" /> values.</span>
          </span>
          <span data-ttu-id="7046f-188">El valor predeterminado es <see langword="Formatting.None" /> (sin formato especial).</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-188">The default is <see langword="Formatting.None" /> (no special formatting).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="7046f-189">A partir de .NET Framework 2.0, se recomienda crear <xref:System.Xml.XmlWriter> instancias utilizando el <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método y el <xref:System.Xml.XmlWriterSettings> clase para aprovechar las ventajas de la nueva funcionalidad.</span><span class="sxs-lookup"><span data-stu-id="7046f-189">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="7046f-190">Si el `Indented` opción está activada, se aplica sangría a los elementos secundarios mediante la <xref:System.Xml.XmlTextWriter.Indentation%2A> y <xref:System.Xml.XmlTextWriter.IndentChar%2A> propiedades.</span><span class="sxs-lookup"><span data-stu-id="7046f-190">If the `Indented` option is set, child elements are indented using the <xref:System.Xml.XmlTextWriter.Indentation%2A> and <xref:System.Xml.XmlTextWriter.IndentChar%2A> properties.</span></span> <span data-ttu-id="7046f-191">Se aplica sangría al contenido del elemento únicamente.</span><span class="sxs-lookup"><span data-stu-id="7046f-191">Only element content is indented.</span></span> <span data-ttu-id="7046f-192">El siguiente código C# escribe elementos HTML, incluidos el contenido mixto:</span><span class="sxs-lookup"><span data-stu-id="7046f-192">The following C# code writes out HTML elements including mixed content:</span></span>  
  
```csharp  
XmlTextWriter w = new XmlTextWriter(Console.Out);   
 w.Formatting = Formatting.Indented;   
 w.WriteStartElement("ol");   
 w.WriteStartElement("li");   
 w.WriteString("The big "); // This means "li" now has a mixed content model.  
 w.WriteElementString("b", "E");   
 w.WriteElementString("i", "lephant");   
 w.WriteString(" walks slowly.");   
 w.WriteEndElement();   
 w.WriteEndElement();  
```  
  
 <span data-ttu-id="7046f-193">El código anterior genera el siguiente resultado:</span><span class="sxs-lookup"><span data-stu-id="7046f-193">The above code produces the following output:</span></span>  
  
```xml  
<ol>   
  <li>The big <b>E</b><i>lephant</i> walks slowly.</li>   
</ol>  
```  
  
 <span data-ttu-id="7046f-194">Cuando se ve en HTML no aparezca ningún espacio en blanco entre los elementos en negrita y cursiva.</span><span class="sxs-lookup"><span data-stu-id="7046f-194">When this is viewed in HTML no white space appears between the bold and italic elements.</span></span> <span data-ttu-id="7046f-195">De hecho, en este ejemplo, si se ha agregado la sangría entre estos elementos de la palabra "Elefante" sería dividida incorrectamente.</span><span class="sxs-lookup"><span data-stu-id="7046f-195">In fact, in this example, if indenting was added between these elements the word "Elephant" would be incorrectly broken.</span></span>  
  
> [!NOTE]
> <span data-ttu-id="7046f-196">Escribir cualquier texto de contenido, excepto `String.Empty` coloca ese elemento en modo de contenido mixto.</span><span class="sxs-lookup"><span data-stu-id="7046f-196">Writing any text content, excluding `String.Empty` puts that element into mixed content mode.</span></span> <span data-ttu-id="7046f-197">Los elementos secundarios no heredan este estado de modo "mixto".</span><span class="sxs-lookup"><span data-stu-id="7046f-197">Child elements do not inherit this "mixed" mode status.</span></span> <span data-ttu-id="7046f-198">Un elemento secundario de un elemento "mixto" aplica sangría, a menos que sea también contiene contenido "mixto".</span><span class="sxs-lookup"><span data-stu-id="7046f-198">A child element of a "mixed" element does indenting, unless it is also contains "mixed" content.</span></span> <span data-ttu-id="7046f-199">[Contenido del elemento](https://www.w3.org/TR/1998/REC-xml-19980210#sec-element-content) y [contenido mixto](https://www.w3.org/TR/1998/REC-xml-19980210#sec-mixed-content) se definen según las definiciones de XML 1.0 de estos términos.</span><span class="sxs-lookup"><span data-stu-id="7046f-199">[Element content](https://www.w3.org/TR/1998/REC-xml-19980210#sec-element-content) and [mixed content](https://www.w3.org/TR/1998/REC-xml-19980210#sec-mixed-content) are defined according to the XML 1.0 definitions of these terms.</span></span>  
  
## Examples  
 <span data-ttu-id="7046f-200">El ejemplo siguiente escribe un fragmento XML.</span><span class="sxs-lookup"><span data-stu-id="7046f-200">The following example writes an XML fragment.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Formatting" />
      </Docs>
    </Member>
    <Member MemberName="Indentation">
      <MemberSignature Language="C#" Value="public int Indentation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Indentation" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.Indentation" />
      <MemberSignature Language="VB.NET" Value="Public Property Indentation As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Indentation { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Indentation : int with get, set" Usage="System.Xml.XmlTextWriter.Indentation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7046f-201">Obtiene o establece el número de caracteres IndentChars que se escriben para cada nivel de la jerarquía cuando la propiedad <see cref="P:System.Xml.XmlTextWriter.Formatting" /> está establecida en <see langword="Formatting.Indented" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-201">Gets or sets how many IndentChars to write for each level in the hierarchy when <see cref="P:System.Xml.XmlTextWriter.Formatting" /> is set to <see langword="Formatting.Indented" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7046f-202">Número de caracteres <see langword="IndentChars" /> de cada nivel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-202">Number of <see langword="IndentChars" /> for each level.</span>
          </span>
          <span data-ttu-id="7046f-203">El valor predeterminado es 2.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-203">The default is 2.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="7046f-204">A partir de .NET Framework 2.0, se recomienda crear <xref:System.Xml.XmlWriter> instancias utilizando el <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método y el <xref:System.Xml.XmlWriterSettings> clase para aprovechar las ventajas de la nueva funcionalidad.</span><span class="sxs-lookup"><span data-stu-id="7046f-204">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="7046f-205">Se aplica sangría a los siguientes tipos de nodo: `DocumentType`, `Element`, `Comment`, `ProcessingInstruction`, y `CDATASection`.</span><span class="sxs-lookup"><span data-stu-id="7046f-205">Indentation is performed on following node types: `DocumentType`, `Element`, `Comment`, `ProcessingInstruction`, and `CDATASection`.</span></span> <span data-ttu-id="7046f-206">No se ven afectados todos los demás tipos de nodo.</span><span class="sxs-lookup"><span data-stu-id="7046f-206">All other node types are not affected.</span></span> <span data-ttu-id="7046f-207">El `XmlTextWriter` no aplica sangría el subconjunto DTD interno.</span><span class="sxs-lookup"><span data-stu-id="7046f-207">The `XmlTextWriter` does not indent the internal DTD subset.</span></span> <span data-ttu-id="7046f-208">Sin embargo, podría hacer lo siguiente para aplicar formato al subconjunto DTD interno.</span><span class="sxs-lookup"><span data-stu-id="7046f-208">However, you could do the following to apply formatting to the internal DTD subset.</span></span>  
  
```csharp  
String name = "Employees";  
String pubid = null;  
String sysid = null;  
String subset =  
@"  
    <!ELEMENT Employees (Employee)+>  
    <!ELEMENT Employee EMPTY>  
    <!ATTLIST Employee firstname CDATA #REQUIRED>  
    <!ENTITY Company 'Microsoft'>]>  
";  
XmlTextWriter tw = new XmlTextWriter(Console.Out);  
tw.WriteDocType(name, pubid, sysid, subset);  
```  
  
   
  
## Examples  
 <span data-ttu-id="7046f-209">El ejemplo siguiente escribe un fragmento XML.</span><span class="sxs-lookup"><span data-stu-id="7046f-209">The following example writes an XML fragment.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7046f-210">Establecimiento de esta propiedad en un valor negativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-210">Setting this property to a negative value.</span>
          </span>
        </exception>
        <altmember cref="P:System.Xml.XmlTextWriter.IndentChar" />
        <altmember cref="T:System.Xml.Formatting" />
      </Docs>
    </Member>
    <Member MemberName="IndentChar">
      <MemberSignature Language="C#" Value="public char IndentChar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char IndentChar" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.IndentChar" />
      <MemberSignature Language="VB.NET" Value="Public Property IndentChar As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property char IndentChar { char get(); void set(char value); };" />
      <MemberSignature Language="F#" Value="member this.IndentChar : char with get, set" Usage="System.Xml.XmlTextWriter.IndentChar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7046f-211">Obtiene o establece el carácter que se va a utilizar para aplicar sangría cuando la propiedad <see cref="P:System.Xml.XmlTextWriter.Formatting" /> se establece en <see langword="Formatting.Indented" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-211">Gets or sets which character to use for indenting when <see cref="P:System.Xml.XmlTextWriter.Formatting" /> is set to <see langword="Formatting.Indented" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7046f-212">Carácter que se va a usar para la sangría.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-212">The character to use for indenting.</span>
          </span>
          <span data-ttu-id="7046f-213">El valor predeterminado es el carácter de espacio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-213">The default is space.</span>
          </span>
          <block subset="none" type="note">
            <para>
              <span data-ttu-id="7046f-214">
                <see langword="XmlTextWriter" /> permite establecer esta propiedad en cualquier carácter.</span>
              <span class="sxs-lookup">
                <span data-stu-id="7046f-214">The <see langword="XmlTextWriter" /> allows you to set this property to any character.</span>
              </span>
              <span data-ttu-id="7046f-215">Para asegurar la validez de XML, es preciso especificar un carácter de espacio en blanco válido: 0x9, 0x10, 0x13 ó 0x20.</span>
              <span class="sxs-lookup">
                <span data-stu-id="7046f-215">To ensure valid XML, you must specify a valid white space character, 0x9, 0x10, 0x13 or 0x20.</span>
              </span>
            </para>
          </block>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="7046f-216">A partir de .NET Framework 2.0, se recomienda crear <xref:System.Xml.XmlWriter> instancias utilizando el <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método y el <xref:System.Xml.XmlWriterSettings> clase para aprovechar las ventajas de la nueva funcionalidad.</span><span class="sxs-lookup"><span data-stu-id="7046f-216">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.XmlTextWriter.Indentation" />
        <altmember cref="T:System.Xml.Formatting" />
      </Docs>
    </Member>
    <Member MemberName="LookupPrefix">
      <MemberSignature Language="C#" Value="public override string LookupPrefix (string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string LookupPrefix(string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.LookupPrefix(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function LookupPrefix (ns As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ LookupPrefix(System::String ^ ns);" />
      <MemberSignature Language="F#" Value="override this.LookupPrefix : string -&gt; string" Usage="xmlTextWriter.LookupPrefix ns" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ns">
          <span data-ttu-id="7046f-217">URI de espacio de nombres cuyo prefijo se desea buscar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-217">Namespace URI whose prefix you want to find.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7046f-218">Devuelve el prefijo más próximo definido en el ámbito de espacio de nombres actual correspondiente al identificador URI de espacio de nombres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-218">Returns the closest prefix defined in the current namespace scope for the namespace URI.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7046f-219">Prefijo que coincide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-219">The matching prefix.</span>
          </span>
          <span data-ttu-id="7046f-220">O bien <see langword="null" /> si no se encuentra ningún URI de espacio de nombres coincidente en el ámbito actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-220">Or <see langword="null" /> if no matching namespace URI is found in the current scope.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="7046f-221">A partir de .NET Framework 2.0, se recomienda crear <xref:System.Xml.XmlWriter> instancias utilizando el <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método y el <xref:System.Xml.XmlWriterSettings> clase para aprovechar las ventajas de la nueva funcionalidad.</span><span class="sxs-lookup"><span data-stu-id="7046f-221">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7046f-222">El ejemplo siguiente se escribe un libro.</span><span class="sxs-lookup"><span data-stu-id="7046f-222">The following example writes out a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7046f-223">
            <paramref name="ns" /> es <see langword="null" /> o <see langword="String.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-223">
              <paramref name="ns" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Namespaces">
      <MemberSignature Language="C#" Value="public bool Namespaces { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Namespaces" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.Namespaces" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespaces As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Namespaces { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Namespaces : bool with get, set" Usage="System.Xml.XmlTextWriter.Namespaces" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7046f-224">Obtiene o establece un valor que indica si se ha de aplicar la compatibilidad de espacio de nombres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-224">Gets or sets a value indicating whether to do namespace support.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7046f-225">
            <see langword="true" /> para admitir los espacios de nombres; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-225">
              <see langword="true" /> to support namespaces; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="7046f-226">El valor predeterminado es <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-226">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="7046f-227">A partir de .NET Framework 2.0, se recomienda crear <xref:System.Xml.XmlWriter> instancias utilizando el <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método y el <xref:System.Xml.XmlWriterSettings> clase para aprovechar las ventajas de la nueva funcionalidad.</span><span class="sxs-lookup"><span data-stu-id="7046f-227">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="7046f-228">Esta propiedad determina si el sistema de escritura es compatible con los espacios de nombres de W3C en la recomendación de XML que se encuentra en www.w3.org/TR/REC-xml-names.</span><span class="sxs-lookup"><span data-stu-id="7046f-228">This property determines whether the writer supports the W3C Namespaces in XML recommendation located at www.w3.org/TR/REC-xml-names.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="7046f-229">Esta propiedad sólo se puede cambiar en el estado <see langword="WriteState.Start" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-229">You can only change this property when in the <see langword="WriteState.Start" /> state.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="QuoteChar">
      <MemberSignature Language="C#" Value="public char QuoteChar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char QuoteChar" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.QuoteChar" />
      <MemberSignature Language="VB.NET" Value="Public Property QuoteChar As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property char QuoteChar { char get(); void set(char value); };" />
      <MemberSignature Language="F#" Value="member this.QuoteChar : char with get, set" Usage="System.Xml.XmlTextWriter.QuoteChar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7046f-230">Obtiene o establece qué carácter se va a usar para delimitar los valores de atributo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-230">Gets or sets which character to use to quote attribute values.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7046f-231">Carácter que se va a usar para delimitar los valores de atributo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-231">The character to use to quote attribute values.</span>
          </span>
          <span data-ttu-id="7046f-232">Esto debe ser una comilla simple (&amp;#39;) o una comilla doble (&amp;#34;).</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-232">This must be a single quote (&amp;#39;) or a double quote (&amp;#34;).</span>
          </span>
          <span data-ttu-id="7046f-233">Las comillas dobles son el valor predeterminado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-233">The default is a double quote.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="7046f-234">A partir de .NET Framework 2.0, se recomienda crear <xref:System.Xml.XmlWriter> instancias utilizando el <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método y el <xref:System.Xml.XmlWriterSettings> clase para aprovechar las ventajas de la nueva funcionalidad.</span><span class="sxs-lookup"><span data-stu-id="7046f-234">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7046f-235">Establecimiento de esta propiedad en un valor distinto de comillas dobles o simples.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-235">Setting this property to something other than either a single or double quote.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteBase64">
      <MemberSignature Language="C#" Value="public override void WriteBase64 (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteBase64(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteBase64 (buffer As Byte(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteBase64(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.WriteBase64 : byte[] * int * int -&gt; unit" Usage="xmlTextWriter.WriteBase64 (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="7046f-236">Matriz de bytes que se va a codificar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-236">Byte array to encode.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="7046f-237">Posición en el búfer que indica el inicio de los bytes que se van a escribir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-237">The position within the buffer indicating the start of the bytes to write.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="7046f-238">Número de bytes que se van a escribir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-238">The number of bytes to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7046f-239">Codifica los bytes binarios especificados en base64 y escribe el texto resultante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-239">Encodes the specified binary bytes as base64 and writes out the resulting text.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="7046f-240">A partir de .NET Framework 2.0, se recomienda crear <xref:System.Xml.XmlWriter> instancias utilizando el <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método y el <xref:System.Xml.XmlWriterSettings> clase para aprovechar las ventajas de la nueva funcionalidad.</span><span class="sxs-lookup"><span data-stu-id="7046f-240">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7046f-241">El siguiente ejemplo codifica un archivo de entrada con `WriteBase64` y genera un archivo XML temporal.</span><span class="sxs-lookup"><span data-stu-id="7046f-241">The following example encodes an input file using `WriteBase64` and generates a temporary XML file.</span></span> <span data-ttu-id="7046f-242">El archivo XML temporal se descodifica mediante la <xref:System.Xml.XmlTextReader.ReadBase64%2A> método y se compara con el archivo original.</span><span class="sxs-lookup"><span data-stu-id="7046f-242">The temporary XML file is decoded using the <xref:System.Xml.XmlTextReader.ReadBase64%2A> method and compared to the original file.</span></span>  
  
 [!code-cpp[XmlWriter.WriteBase64#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlWriter.WriteBase64/CPP/writebase64.cpp#1)]
 [!code-csharp[XmlWriter.WriteBase64#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteBase64/CS/writebase64.cs#1)]
 [!code-vb[XmlWriter.WriteBase64#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteBase64/VB/writebase64.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7046f-243">El valor de <paramref name="buffer" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-243">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7046f-244">La longitud del búfer menos <paramref name="index" /> es menor que <paramref name="count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-244">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="7046f-245">
            <paramref name="index" /> o <paramref name="count" /> es menor que cero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-245">
              <paramref name="index" /> or <paramref name="count" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="7046f-246">El valor de <see cref="P:System.Xml.XmlTextWriter.WriteState" /> es <see langword="Closed" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-246">The <see cref="P:System.Xml.XmlTextWriter.WriteState" /> is <see langword="Closed" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteBinHex">
      <MemberSignature Language="C#" Value="public override void WriteBinHex (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteBinHex(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteBinHex(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteBinHex (buffer As Byte(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteBinHex(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.WriteBinHex : byte[] * int * int -&gt; unit" Usage="xmlTextWriter.WriteBinHex (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="7046f-247">Matriz de bytes que se va a codificar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-247">Byte array to encode.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="7046f-248">Posición en el búfer que indica el inicio de los bytes que se van a escribir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-248">The position in the buffer indicating the start of the bytes to write.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="7046f-249">Número de bytes que se van a escribir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-249">The number of bytes to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7046f-250">Codifica los bytes binarios especificados como binhex y escribe el texto resultante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-250">Encodes the specified binary bytes as binhex and writes out the resulting text.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="7046f-251">A partir de .NET Framework 2.0, se recomienda crear <xref:System.Xml.XmlWriter> instancias utilizando el <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método y el <xref:System.Xml.XmlWriterSettings> clase para aprovechar las ventajas de la nueva funcionalidad.</span><span class="sxs-lookup"><span data-stu-id="7046f-251">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7046f-252">El valor de <paramref name="buffer" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-252">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7046f-253">La longitud del búfer menos <paramref name="index" /> es menor que <paramref name="count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-253">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="7046f-254">
            <paramref name="index" /> o <paramref name="count" /> es menor que cero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-254">
              <paramref name="index" /> or <paramref name="count" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="7046f-255">
            <see cref="P:System.Xml.XmlTextWriter.WriteState" /> está cerrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-255">The <see cref="P:System.Xml.XmlTextWriter.WriteState" /> is Closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteCData">
      <MemberSignature Language="C#" Value="public override void WriteCData (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteCData(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteCData(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteCData (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteCData(System::String ^ text);" />
      <MemberSignature Language="F#" Value="override this.WriteCData : string -&gt; unit" Usage="xmlTextWriter.WriteCData text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="7046f-256">Texto que se va a colocar en el bloque CDATA.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-256">Text to place inside the CDATA block.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7046f-257">Escribe un bloque &lt;![CDATA[...]]&gt; que contiene el texto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-257">Writes out a &lt;![CDATA[...]]&gt; block containing the specified text.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="7046f-258">A partir de .NET Framework 2.0, se recomienda crear <xref:System.Xml.XmlWriter> instancias utilizando el <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método y el <xref:System.Xml.XmlWriterSettings> clase para aprovechar las ventajas de la nueva funcionalidad.</span><span class="sxs-lookup"><span data-stu-id="7046f-258">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="7046f-259">Si `text` sea `null` o `String.Empty`, este método escribe un bloque CDATA vacío, por ejemplo \<! [ [] CDATA</span><span class="sxs-lookup"><span data-stu-id="7046f-259">If `text` is either `null` or `String.Empty`, this method writes an empty CDATA block, for example \<![CDATA[]</span></span>]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7046f-260">El texto daría como resultado un documento XML con formato incorrecto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-260">The text would result in a non-well formed XML document.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="7046f-261">El valor de <see cref="P:System.Xml.XmlTextWriter.WriteState" /> es <see langword="Closed" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-261">The <see cref="P:System.Xml.XmlTextWriter.WriteState" /> is <see langword="Closed" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteCharEntity">
      <MemberSignature Language="C#" Value="public override void WriteCharEntity (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteCharEntity(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteCharEntity(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteCharEntity (ch As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteCharEntity(char ch);" />
      <MemberSignature Language="F#" Value="override this.WriteCharEntity : char -&gt; unit" Usage="xmlTextWriter.WriteCharEntity ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch">
          <span data-ttu-id="7046f-262">Carácter Unicode para el cual se va a generar una entidad de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-262">Unicode character for which to generate a character entity.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7046f-263">Impone la generación de una entidad de caracteres para el valor de carácter Unicode especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-263">Forces the generation of a character entity for the specified Unicode character value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="7046f-264">A partir de .NET Framework 2.0, se recomienda crear <xref:System.Xml.XmlWriter> instancias utilizando el <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método y el <xref:System.Xml.XmlWriterSettings> clase para aprovechar las ventajas de la nueva funcionalidad.</span><span class="sxs-lookup"><span data-stu-id="7046f-264">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="7046f-265">Este método escribe el carácter Unicode en formato de referencia de entidad de carácter hexadecimal.</span><span class="sxs-lookup"><span data-stu-id="7046f-265">This method writes the Unicode character in hexadecimal character entity reference format.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7046f-266">En el ejemplo siguiente se usa el `WriteCharEntity` método para escribir una dirección de correo electrónico.</span><span class="sxs-lookup"><span data-stu-id="7046f-266">The following example uses the `WriteCharEntity` method to write an email address.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteTimeSpan Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteTimeSpan Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteTimeSpan Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteTimeSpan Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteTimeSpan Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteTimeSpan Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7046f-267">El carácter está en el intervalo de caracteres de par suplente, <see langword="0xd800" /> - <see langword="0xdfff" />; o el texto daría como resultado un documento XML con formato incorrecto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-267">The character is in the surrogate pair character range, <see langword="0xd800" /> - <see langword="0xdfff" />; or the text would result in a non-well formed XML document.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="7046f-268">El valor de <see cref="P:System.Xml.XmlTextWriter.WriteState" /> es <see langword="Closed" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-268">The <see cref="P:System.Xml.XmlTextWriter.WriteState" /> is <see langword="Closed" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteChars">
      <MemberSignature Language="C#" Value="public override void WriteChars (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteChars(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteChars(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteChars (buffer As Char(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteChars(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.WriteChars : char[] * int * int -&gt; unit" Usage="xmlTextWriter.WriteChars (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="7046f-269">Matriz de caracteres que contiene el texto que se va a escribir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-269">Character array containing the text to write.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="7046f-270">Posición en el búfer que indica el inicio del texto que se va a escribir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-270">The position in the buffer indicating the start of the text to write.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="7046f-271">Número de caracteres que se van a escribir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-271">The number of characters to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7046f-272">Escribe texto en un búfer cada vez.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-272">Writes text one buffer at a time.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="7046f-273">A partir de .NET Framework 2.0, se recomienda crear <xref:System.Xml.XmlWriter> instancias utilizando el <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método y el <xref:System.Xml.XmlWriterSettings> clase para aprovechar las ventajas de la nueva funcionalidad.</span><span class="sxs-lookup"><span data-stu-id="7046f-273">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="7046f-274">Este método puede usarse para escribir grandes cantidades de un búfer de texto a la vez.</span><span class="sxs-lookup"><span data-stu-id="7046f-274">This method can be used to write large amounts of text one buffer at a time.</span></span>  
  
 <span data-ttu-id="7046f-275">Se deben realizar un tratamiento especial para garantizar la `WriteChars` método no divida los caracteres de par suplente en varias escrituras en el búfer.</span><span class="sxs-lookup"><span data-stu-id="7046f-275">Special handling must be done to ensure the `WriteChars` method does not split surrogate pair characters across multiple buffer writes.</span></span> <span data-ttu-id="7046f-276">La especificación XML define los intervalos válidos para los pares suplentes.</span><span class="sxs-lookup"><span data-stu-id="7046f-276">The XML specification defines the valid ranges for surrogate pairs.</span></span>  
  
 <span data-ttu-id="7046f-277">Se produce una excepción si se escriben caracteres de par suplente que daría lugar a los caracteres de par suplente que se va a dividir en el búfer.</span><span class="sxs-lookup"><span data-stu-id="7046f-277">An exception is thrown if surrogate pair characters are written that would result in the surrogate pair characters being split in the buffer.</span></span>  
  
   
  
## Examples  
 [!code-csharp[XmlTextWriter.WriteChars#1](~/samples/snippets/csharp/VS_Snippets_Data/xmltextwriter.writechars/cs/xmlwriterwritecharsexample.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7046f-278">El valor de <paramref name="buffer" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-278">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="7046f-279">
            <paramref name="index" /> o <paramref name="count" /> es menor que cero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-279">
              <paramref name="index" /> or <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="7046f-280">O bien</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-280">-or-</span>
          </span>
          <span data-ttu-id="7046f-281">La longitud de búfer menos <paramref name="index" /> es menor que <paramref name="count" />; la llamada tiene como resultado la división de los caracteres de par suplente o la escritura de un par suplente no válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-281">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />; the call results in surrogate pair characters being split or an invalid surrogate pair being written.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="7046f-282">
            <see cref="P:System.Xml.XmlTextWriter.WriteState" /> está cerrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-282">The <see cref="P:System.Xml.XmlTextWriter.WriteState" /> is Closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteComment">
      <MemberSignature Language="C#" Value="public override void WriteComment (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteComment(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteComment(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteComment (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteComment(System::String ^ text);" />
      <MemberSignature Language="F#" Value="override this.WriteComment : string -&gt; unit" Usage="xmlTextWriter.WriteComment text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="7046f-283">Texto que se va a colocar en el comentario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-283">Text to place inside the comment.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7046f-284">Escribe un comentario &lt;!--...--&gt; que contiene el texto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-284">Writes out a comment &lt;!--...--&gt; containing the specified text.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="7046f-285">A partir de .NET Framework 2.0, se recomienda crear <xref:System.Xml.XmlWriter> instancias utilizando el <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método y el <xref:System.Xml.XmlWriterSettings> clase para aprovechar las ventajas de la nueva funcionalidad.</span><span class="sxs-lookup"><span data-stu-id="7046f-285">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="7046f-286">Si `text` sea `null` o `String.Empty`, este método escribe un `Comment` sin datos de contenido, por ejemplo \<!--->.</span><span class="sxs-lookup"><span data-stu-id="7046f-286">If `text` is either `null` or `String.Empty`, this method writes a `Comment` with no data content, for example \<!---->.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7046f-287">El ejemplo siguiente escribe un archivo XML que representa un libro.</span><span class="sxs-lookup"><span data-stu-id="7046f-287">The following example writes an XML file representing a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7046f-288">El texto daría como resultado un documento XML de formato incorrecto</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-288">The text would result in a non-well formed XML document</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="7046f-289">El valor de <see cref="P:System.Xml.XmlTextWriter.WriteState" /> es <see langword="Closed" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-289">The <see cref="P:System.Xml.XmlTextWriter.WriteState" /> is <see langword="Closed" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteDocType">
      <MemberSignature Language="C#" Value="public override void WriteDocType (string name, string pubid, string sysid, string subset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteDocType(string name, string pubid, string sysid, string subset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteDocType(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteDocType (name As String, pubid As String, sysid As String, subset As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteDocType(System::String ^ name, System::String ^ pubid, System::String ^ sysid, System::String ^ subset);" />
      <MemberSignature Language="F#" Value="override this.WriteDocType : string * string * string * string -&gt; unit" Usage="xmlTextWriter.WriteDocType (name, pubid, sysid, subset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="pubid" Type="System.String" />
        <Parameter Name="sysid" Type="System.String" />
        <Parameter Name="subset" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="7046f-290">Nombre de DOCTYPE.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-290">The name of the DOCTYPE.</span>
          </span>
          <span data-ttu-id="7046f-291">No puede estar vacío.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-291">This must be non-empty.</span>
          </span>
        </param>
        <param name="pubid">
          <span data-ttu-id="7046f-292">Si su valor no es nulo, también se escribe PUBLIC "pubid" "sysid", donde <paramref name="pubid" /> y <paramref name="sysid" /> se reemplazan por el valor de los argumentos especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-292">If non-null it also writes PUBLIC "pubid" "sysid" where <paramref name="pubid" /> and <paramref name="sysid" /> are replaced with the value of the given arguments.</span>
          </span>
        </param>
        <param name="sysid">
          <span data-ttu-id="7046f-293">Si el valor de <paramref name="pubid" /> es nulo y el de <paramref name="sysid" /> no lo es, se escribe System "sysid", donde <paramref name="sysid" /> se reemplaza por el valor de este argumento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-293">If <paramref name="pubid" /> is null and <paramref name="sysid" /> is non-null it writes SYSTEM "sysid" where <paramref name="sysid" /> is replaced with the value of this argument.</span>
          </span>
        </param>
        <param name="subset">
          <span data-ttu-id="7046f-294">En caso de un valor no nulo, se escribe [subset], donde subset se reemplaza por el valor de este argumento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-294">If non-null it writes [subset] where subset is replaced with the value of this argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7046f-295">Escribe la declaración DOCTYPE con el nombre y los atributos opcionales especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-295">Writes the DOCTYPE declaration with the specified name and optional attributes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="7046f-296">A partir de .NET Framework 2.0, se recomienda crear <xref:System.Xml.XmlWriter> instancias utilizando el <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método y el <xref:System.Xml.XmlWriterSettings> clase para aprovechar las ventajas de la nueva funcionalidad.</span><span class="sxs-lookup"><span data-stu-id="7046f-296">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="7046f-297">Este método no comprueba los caracteres no válidos en `pubid`, `sysid` o `subset`.</span><span class="sxs-lookup"><span data-stu-id="7046f-297">This method does not check for invalid characters in `pubid`, `sysid` or `subset`.</span></span> <span data-ttu-id="7046f-298">No comprueba que el subconjunto interno está bien formado.</span><span class="sxs-lookup"><span data-stu-id="7046f-298">It also does not check that the internal subset is well-formed.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="7046f-299">El <xref:System.Xml.XmlTextWriter> no valida los datos que se pasan a la <xref:System.Xml.XmlTextWriter.WriteDocType%2A> método.</span><span class="sxs-lookup"><span data-stu-id="7046f-299">The <xref:System.Xml.XmlTextWriter> does not validate any data that is passed to the <xref:System.Xml.XmlTextWriter.WriteDocType%2A> method.</span></span> <span data-ttu-id="7046f-300">No se deben pasar datos arbitrarios a este método.</span><span class="sxs-lookup"><span data-stu-id="7046f-300">You should not pass arbitrary data to this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7046f-301">El ejemplo siguiente escribe un archivo XML que representa un libro.</span><span class="sxs-lookup"><span data-stu-id="7046f-301">The following example writes an XML file representing a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="7046f-302">Se llamó a este método fuera del prólogo (después del elemento raíz).</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-302">This method was called outside the prolog (after the root element).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7046f-303">
            <paramref name="name" /> es <see langword="null" /> o <see langword="String.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-303">
              <paramref name="name" /> is <see langword="null" /> or <see langword="String.Empty" /></span>
          </span>
          <span data-ttu-id="7046f-304">O bien</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-304">-or-</span>
          </span>
          <span data-ttu-id="7046f-305">El valor de <paramref name="name" /> daría como resultado un archivo XML no válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-305">the value for <paramref name="name" /> would result in invalid XML.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEndAttribute">
      <MemberSignature Language="C#" Value="public override void WriteEndAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteEndAttribute() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteEndAttribute" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteEndAttribute ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteEndAttribute();" />
      <MemberSignature Language="F#" Value="override this.WriteEndAttribute : unit -&gt; unit" Usage="xmlTextWriter.WriteEndAttribute " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7046f-306">Cierra la anterior llamada al método <see cref="M:System.Xml.XmlTextWriter.WriteStartAttribute(System.String,System.String,System.String)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-306">Closes the previous <see cref="M:System.Xml.XmlTextWriter.WriteStartAttribute(System.String,System.String,System.String)" /> call.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="7046f-307">A partir de .NET Framework 2.0, se recomienda crear <xref:System.Xml.XmlWriter> instancias utilizando el <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método y el <xref:System.Xml.XmlWriterSettings> clase para aprovechar las ventajas de la nueva funcionalidad.</span><span class="sxs-lookup"><span data-stu-id="7046f-307">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="7046f-308">Si se llama a `WriteStartAttribute`, puede cerrar el atributo con este método.</span><span class="sxs-lookup"><span data-stu-id="7046f-308">If you call `WriteStartAttribute`, you can close the attribute with this method.</span></span>  
  
 <span data-ttu-id="7046f-309">También puede cerrar el atributo mediante una llamada a `WriteStartAttribute` nuevo, una llamada a <xref:System.Xml.XmlWriter.WriteAttributeString%2A>, o una llamada a <xref:System.Xml.XmlTextWriter.WriteEndElement%2A>.</span><span class="sxs-lookup"><span data-stu-id="7046f-309">You can also close the attribute by calling `WriteStartAttribute` again, calling <xref:System.Xml.XmlWriter.WriteAttributeString%2A>, or calling <xref:System.Xml.XmlTextWriter.WriteEndElement%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7046f-310">El ejemplo siguiente se escribe un libro.</span><span class="sxs-lookup"><span data-stu-id="7046f-310">The following example writes out a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEndDocument">
      <MemberSignature Language="C#" Value="public override void WriteEndDocument ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteEndDocument() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteEndDocument" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteEndDocument ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteEndDocument();" />
      <MemberSignature Language="F#" Value="override this.WriteEndDocument : unit -&gt; unit" Usage="xmlTextWriter.WriteEndDocument " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7046f-311">Cierra todos los elementos o atributos abiertos y coloca de nuevo el sistema de escritura en el estado de inicio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-311">Closes any open elements or attributes and puts the writer back in the Start state.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="7046f-312">A partir de .NET Framework 2.0, se recomienda crear <xref:System.Xml.XmlWriter> instancias utilizando el <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método y el <xref:System.Xml.XmlWriterSettings> clase para aprovechar las ventajas de la nueva funcionalidad.</span><span class="sxs-lookup"><span data-stu-id="7046f-312">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7046f-313">El ejemplo siguiente escribe un archivo XML que representa un libro.</span><span class="sxs-lookup"><span data-stu-id="7046f-313">The following example writes an XML file representing a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7046f-314">El documento XML no es válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-314">The XML document is invalid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEndElement">
      <MemberSignature Language="C#" Value="public override void WriteEndElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteEndElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteEndElement" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteEndElement ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteEndElement();" />
      <MemberSignature Language="F#" Value="override this.WriteEndElement : unit -&gt; unit" Usage="xmlTextWriter.WriteEndElement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7046f-315">Cierra un elemento y extrae el correspondiente ámbito de espacio de nombres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-315">Closes one element and pops the corresponding namespace scope.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="7046f-316">A partir de .NET Framework 2.0, se recomienda crear <xref:System.Xml.XmlWriter> instancias utilizando el <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método y el <xref:System.Xml.XmlWriterSettings> clase para aprovechar las ventajas de la nueva funcionalidad.</span><span class="sxs-lookup"><span data-stu-id="7046f-316">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="7046f-317">Si el elemento no contiene ningún contenido short etiqueta final "/ >" se escribe; en caso contrario, se escribe una etiqueta de cierre completa.</span><span class="sxs-lookup"><span data-stu-id="7046f-317">If the element contains no content a short end tag "/>" is written; otherwise a full end tag is written.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7046f-318">El ejemplo siguiente escribe un archivo XML que representa un libro.</span><span class="sxs-lookup"><span data-stu-id="7046f-318">The following example writes an XML file representing a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteEndElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteEndElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteEndElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteEndElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteEndElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteEndElement Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEntityRef">
      <MemberSignature Language="C#" Value="public override void WriteEntityRef (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteEntityRef(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteEntityRef(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteEntityRef (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteEntityRef(System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.WriteEntityRef : string -&gt; unit" Usage="xmlTextWriter.WriteEntityRef name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="7046f-319">Nombre de la referencia a entidad.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-319">Name of the entity reference.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7046f-320">Escribe una referencia a entidad como <see langword="&amp;name;" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-320">Writes out an entity reference as <see langword="&amp;name;" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="7046f-321">A partir de .NET Framework 2.0, se recomienda crear <xref:System.Xml.XmlWriter> instancias utilizando el <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método y el <xref:System.Xml.XmlWriterSettings> clase para aprovechar las ventajas de la nueva funcionalidad.</span><span class="sxs-lookup"><span data-stu-id="7046f-321">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7046f-322">El ejemplo siguiente escribe un archivo XML que representa un libro.</span><span class="sxs-lookup"><span data-stu-id="7046f-322">The following example writes an XML file representing a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7046f-323">El texto generaría un documento XML de formato incorrecto o <paramref name="name" /> es <see langword="null" /> o <see langword="String.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-323">The text would result in a non-well formed XML document or <paramref name="name" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteFullEndElement">
      <MemberSignature Language="C#" Value="public override void WriteFullEndElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteFullEndElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteFullEndElement" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteFullEndElement ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteFullEndElement();" />
      <MemberSignature Language="F#" Value="override this.WriteFullEndElement : unit -&gt; unit" Usage="xmlTextWriter.WriteFullEndElement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7046f-324">Cierra un elemento y extrae el correspondiente ámbito de espacio de nombres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-324">Closes one element and pops the corresponding namespace scope.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="7046f-325">A partir de .NET Framework 2.0, se recomienda crear <xref:System.Xml.XmlWriter> instancias utilizando el <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método y el <xref:System.Xml.XmlWriterSettings> clase para aprovechar las ventajas de la nueva funcionalidad.</span><span class="sxs-lookup"><span data-stu-id="7046f-325">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="7046f-326">Este método siempre escribe la etiqueta de cierre completa.</span><span class="sxs-lookup"><span data-stu-id="7046f-326">This method always writes the full end tag.</span></span> <span data-ttu-id="7046f-327">Esto es útil cuando se trabaja con los elementos que deben incluir una etiqueta de cierre completa.</span><span class="sxs-lookup"><span data-stu-id="7046f-327">This is useful when dealing with elements that must include a full end tag.</span></span> <span data-ttu-id="7046f-328">Por ejemplo, los exploradores esperan que los bloques de script HTML se cierren con "\</script >".</span><span class="sxs-lookup"><span data-stu-id="7046f-328">For example, browsers expect HTML script blocks to be closed with "\</script>".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7046f-329">El ejemplo siguiente se escribe un elemento sin contenido.</span><span class="sxs-lookup"><span data-stu-id="7046f-329">The following example writes out an element with no content.</span></span> <span data-ttu-id="7046f-330">Se utiliza WriteFullEndElement para escribir la etiqueta de elemento de cierre completa.</span><span class="sxs-lookup"><span data-stu-id="7046f-330">It uses WriteFullEndElement to write the full end element tag.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteFullEndElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteFullEndElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteFullEndElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteFullEndElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteFullEndElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteFullEndElement Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteName">
      <MemberSignature Language="C#" Value="public override void WriteName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteName (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteName(System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.WriteName : string -&gt; unit" Usage="xmlTextWriter.WriteName name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="7046f-331">Nombre que se va a escribir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-331">Name to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7046f-332">Escribe el nombre especificado, asegurando que se trata de un nombre válido de acuerdo con la recomendación relativa a XML 1.0 del Consorcio W3C (https://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-332">Writes out the specified name, ensuring it is a valid name according to the W3C XML 1.0 recommendation (https://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="7046f-333">A partir de .NET Framework 2.0, se recomienda crear <xref:System.Xml.XmlWriter> instancias utilizando el <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método y el <xref:System.Xml.XmlWriterSettings> clase para aprovechar las ventajas de la nueva funcionalidad.</span><span class="sxs-lookup"><span data-stu-id="7046f-333">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="7046f-334">Si <xref:System.Xml.XmlTextWriter.Namespaces%2A> está establecido en `true`, `WriteName` también comprueba que el nombre también es válido de acuerdo con el W3C recomendación de Namespaces en XML.</span><span class="sxs-lookup"><span data-stu-id="7046f-334">If <xref:System.Xml.XmlTextWriter.Namespaces%2A> is set to `true`, `WriteName` also checks that the name is also valid according to the W3C Namespaces in XML recommendation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7046f-335">
            <paramref name="name" /> no es un nombre XML válido, o <paramref name="name" /> es <see langword="null" /> o <see langword="String.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-335">
              <paramref name="name" /> is not a valid XML name; or <paramref name="name" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNmToken">
      <MemberSignature Language="C#" Value="public override void WriteNmToken (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteNmToken(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteNmToken(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteNmToken (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteNmToken(System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.WriteNmToken : string -&gt; unit" Usage="xmlTextWriter.WriteNmToken name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="7046f-336">Nombre que se va a escribir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-336">Name to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7046f-337">Escribe el nombre especificado, asegurando que se trata de un <see langword="NmToken" /> válido de acuerdo con la recomendación relativa a XML 1.0 del Consorcio W3C (https://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-337">Writes out the specified name, ensuring it is a valid <see langword="NmToken" /> according to the W3C XML 1.0 recommendation (https://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="7046f-338">A partir de .NET Framework 2.0, se recomienda crear <xref:System.Xml.XmlWriter> instancias utilizando el <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método y el <xref:System.Xml.XmlWriterSettings> clase para aprovechar las ventajas de la nueva funcionalidad.</span><span class="sxs-lookup"><span data-stu-id="7046f-338">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7046f-339">
            <paramref name="name" /> no es un <see langword="NmToken" /> válido; o <paramref name="name" /> es <see langword="null" /> o <see langword="String.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-339">
              <paramref name="name" /> is not a valid <see langword="NmToken" />; or <paramref name="name" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteProcessingInstruction">
      <MemberSignature Language="C#" Value="public override void WriteProcessingInstruction (string name, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteProcessingInstruction(string name, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteProcessingInstruction(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteProcessingInstruction (name As String, text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteProcessingInstruction(System::String ^ name, System::String ^ text);" />
      <MemberSignature Language="F#" Value="override this.WriteProcessingInstruction : string * string -&gt; unit" Usage="xmlTextWriter.WriteProcessingInstruction (name, text)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="7046f-340">Nombre de la instrucción de procesamiento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-340">Name of the processing instruction.</span>
          </span>
        </param>
        <param name="text">
          <span data-ttu-id="7046f-341">Texto que se va a incluir en la instrucción de procesamiento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-341">Text to include in the processing instruction.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7046f-342">Escribe una instrucción de procesamiento con un espacio entre el nombre y el texto: &lt;?nombre texto?&gt;.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-342">Writes out a processing instruction with a space between the name and text as follows: &lt;?name text?&gt;.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="7046f-343">A partir de .NET Framework 2.0, se recomienda crear <xref:System.Xml.XmlWriter> instancias utilizando el <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método y el <xref:System.Xml.XmlWriterSettings> clase para aprovechar las ventajas de la nueva funcionalidad.</span><span class="sxs-lookup"><span data-stu-id="7046f-343">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="7046f-344">Si `text` sea `null` o `String.Empty`, este método escribe un `ProcessingInstruction` sin datos de contenido, por ejemplo \<? nombre? >.</span><span class="sxs-lookup"><span data-stu-id="7046f-344">If `text` is either `null` or `String.Empty`, this method writes a `ProcessingInstruction` with no data content, for example \<?name?>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7046f-345">El ejemplo siguiente escribe un archivo XML que representa un libro.</span><span class="sxs-lookup"><span data-stu-id="7046f-345">The following example writes an XML file representing a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7046f-346">El texto daría como resultado un documento XML con formato incorrecto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-346">The text would result in a non-well formed XML document.</span>
          </span>
          <span data-ttu-id="7046f-347">
            <paramref name="name" /> es <see langword="null" /> o <see langword="String.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-347">
              <paramref name="name" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span>
          </span>
          <span data-ttu-id="7046f-348">Este método se utiliza para crear una declaración XML después de llamar al método <see cref="M:System.Xml.XmlTextWriter.WriteStartDocument" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-348">This method is being used to create an XML declaration after <see cref="M:System.Xml.XmlTextWriter.WriteStartDocument" /> has already been called.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteQualifiedName">
      <MemberSignature Language="C#" Value="public override void WriteQualifiedName (string localName, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteQualifiedName(string localName, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteQualifiedName(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteQualifiedName (localName As String, ns As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteQualifiedName(System::String ^ localName, System::String ^ ns);" />
      <MemberSignature Language="F#" Value="override this.WriteQualifiedName : string * string -&gt; unit" Usage="xmlTextWriter.WriteQualifiedName (localName, ns)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName">
          <span data-ttu-id="7046f-349">Nombre local que se va a escribir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-349">The local name to write.</span>
          </span>
        </param>
        <param name="ns">
          <span data-ttu-id="7046f-350">URI de espacio de nombres que se va a asociar al nombre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-350">The namespace URI to associate with the name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7046f-351">Escribe el nombre completo del espacio de nombres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-351">Writes out the namespace-qualified name.</span>
          </span>
          <span data-ttu-id="7046f-352">Este método busca un prefijo que está en el ámbito del espacio de nombres especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-352">This method looks up the prefix that is in scope for the given namespace.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="7046f-353">A partir de .NET Framework 2.0, se recomienda crear <xref:System.Xml.XmlWriter> instancias utilizando el <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método y el <xref:System.Xml.XmlWriterSettings> clase para aprovechar las ventajas de la nueva funcionalidad.</span><span class="sxs-lookup"><span data-stu-id="7046f-353">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="7046f-354">Por ejemplo, el código de Microsoft Visual C# siguiente:</span><span class="sxs-lookup"><span data-stu-id="7046f-354">For example, the following Microsoft Visual C# code:</span></span>  
  
```csharp  
writer.Formatting = Formatting.Indented;  
writer.WriteStartElement("root");  
 writer.WriteAttributeString("xmlns","x",null,"urn:abc");  
 writer.WriteStartElement("item");  
 writer.WriteStartAttribute("href",null);  
 writer.WriteString("#");  
 writer.WriteQualifiedName("test","urn:abc");  
 writer.WriteEndAttribute();  
 writer.WriteEndElement();  
 writer.WriteEndElement();  
 writer.Close();  
```  
  
 <span data-ttu-id="7046f-355">Genera el siguiente resultado:</span><span class="sxs-lookup"><span data-stu-id="7046f-355">Generates the following output:</span></span>  
  
```xml  
<root xmlns:x="urn:abc">  
 <item href="#x:test"/>  
 </root>  
```  
  
 <span data-ttu-id="7046f-356">Si `ns` se asigna al actual espacio de nombres predeterminado, ningún prefijo se genera.</span><span class="sxs-lookup"><span data-stu-id="7046f-356">If `ns` maps to the current default namespace, no prefix is generated.</span></span>  
  
 <span data-ttu-id="7046f-357">Al escribir valores de atributo, este método genera un prefijo si `ns` no se encuentra.</span><span class="sxs-lookup"><span data-stu-id="7046f-357">When writing attribute values, this method generates a prefix if `ns` is not found.</span></span> <span data-ttu-id="7046f-358">Al escribir el contenido del elemento, produce una excepción si `ns` no se encuentra.</span><span class="sxs-lookup"><span data-stu-id="7046f-358">When writing element content, it throws an exception if `ns` is not found.</span></span>  
  
 <span data-ttu-id="7046f-359">Si este sistema de escritura admite espacios de nombres (<xref:System.Xml.XmlTextWriter.Namespaces%2A> está establecido en `true`), este método también comprueba que el nombre es válido según el [W3C recomendación de Namespaces en XML](https://www.w3.org/TR/REC-xml-names).</span><span class="sxs-lookup"><span data-stu-id="7046f-359">If this writer supports namespaces (<xref:System.Xml.XmlTextWriter.Namespaces%2A> is set to `true`), this method also checks that the name is valid according to the [W3C Namespaces in XML recommendation](https://www.w3.org/TR/REC-xml-names).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7046f-360">El ejemplo siguiente se escribe una parte de un esquema XSD.</span><span class="sxs-lookup"><span data-stu-id="7046f-360">The following example writes out a portion of a XSD schema.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteQualifiedName Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteQualifiedName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteQualifiedName Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteQualifiedName Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteQualifiedName Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteQualifiedName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7046f-361">
            <paramref name="localName" /> es <see langword="null" /> o <see langword="String.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-361">
              <paramref name="localName" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span>
          </span>
          <span data-ttu-id="7046f-362">
            <paramref name="localName" /> no es un nombre válido según la especificación relativa a espacios de nombres del Consorcio W3C.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-362">
              <paramref name="localName" /> is not a valid name according to the W3C Namespaces spec.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteRaw">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="7046f-363">Escribe manualmente el marcado sin formato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-363">Writes raw markup manually.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="7046f-364">A partir de .NET Framework 2.0, se recomienda crear <xref:System.Xml.XmlWriter> instancias utilizando el <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método y el <xref:System.Xml.XmlWriterSettings> clase para aprovechar las ventajas de la nueva funcionalidad.</span><span class="sxs-lookup"><span data-stu-id="7046f-364">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteRaw">
      <MemberSignature Language="C#" Value="public override void WriteRaw (string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteRaw(string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteRaw(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteRaw (data As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteRaw(System::String ^ data);" />
      <MemberSignature Language="F#" Value="override this.WriteRaw : string -&gt; unit" Usage="xmlTextWriter.WriteRaw data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="7046f-365">Cadena que contiene el texto que se va a escribir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-365">String containing the text to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7046f-366">Escribe manualmente el marcado sin formato de una cadena.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-366">Writes raw markup manually from a string.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="7046f-367">A partir de .NET Framework 2.0, se recomienda crear <xref:System.Xml.XmlWriter> instancias utilizando el <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método y el <xref:System.Xml.XmlWriterSettings> clase para aprovechar las ventajas de la nueva funcionalidad.</span><span class="sxs-lookup"><span data-stu-id="7046f-367">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="7046f-368">Este método no realiza escape de caracteres especiales.</span><span class="sxs-lookup"><span data-stu-id="7046f-368">This method does not escape special characters.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="7046f-369">El <xref:System.Xml.XmlTextWriter> no valida los datos que se pasan a la <xref:System.Xml.XmlTextWriter.WriteRaw%2A> método.</span><span class="sxs-lookup"><span data-stu-id="7046f-369">The <xref:System.Xml.XmlTextWriter> does not validate any data that is passed to the <xref:System.Xml.XmlTextWriter.WriteRaw%2A> method.</span></span> <span data-ttu-id="7046f-370">No se deben pasar datos arbitrarios a este método.</span><span class="sxs-lookup"><span data-stu-id="7046f-370">You should not pass arbitrary data to this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7046f-371">El ejemplo siguiente escribe una cadena con el `WriteRaw` método.</span><span class="sxs-lookup"><span data-stu-id="7046f-371">The following example writes a string using the `WriteRaw` method.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteRaw1 Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteRaw1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteRaw1 Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteRaw1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteRaw1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteRaw1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteRaw">
      <MemberSignature Language="C#" Value="public override void WriteRaw (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteRaw(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteRaw(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteRaw (buffer As Char(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteRaw(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.WriteRaw : char[] * int * int -&gt; unit" Usage="xmlTextWriter.WriteRaw (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="7046f-372">Matriz de caracteres que contiene el texto que se va a escribir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-372">Character array containing the text to write.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="7046f-373">Posición en el búfer que indica el inicio del texto que se va a escribir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-373">The position within the buffer indicating the start of the text to write.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="7046f-374">Número de caracteres que se van a escribir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-374">The number of characters to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7046f-375">Escribe manualmente el marcado sin formato de un búfer de caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-375">Writes raw markup manually from a character buffer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="7046f-376">A partir de .NET Framework 2.0, se recomienda crear <xref:System.Xml.XmlWriter> instancias utilizando el <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método y el <xref:System.Xml.XmlWriterSettings> clase para aprovechar las ventajas de la nueva funcionalidad.</span><span class="sxs-lookup"><span data-stu-id="7046f-376">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="7046f-377">Este método no realiza escape de caracteres especiales.</span><span class="sxs-lookup"><span data-stu-id="7046f-377">This method does not escape special characters.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="7046f-378">El <xref:System.Xml.XmlTextWriter> no valida los datos que se pasan a la <xref:System.Xml.XmlTextWriter.WriteRaw%2A> método.</span><span class="sxs-lookup"><span data-stu-id="7046f-378">The <xref:System.Xml.XmlTextWriter> does not validate any data that is passed to the <xref:System.Xml.XmlTextWriter.WriteRaw%2A> method.</span></span> <span data-ttu-id="7046f-379">No se deben pasar datos arbitrarios a este método.</span><span class="sxs-lookup"><span data-stu-id="7046f-379">You should not pass arbitrary data to this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7046f-380">El valor de <paramref name="buffer" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-380">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="7046f-381">
            <paramref name="index" /> o <paramref name="count" /> es menor que cero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-381">
              <paramref name="index" /> or <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="7046f-382">O bien</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-382">-or-</span>
          </span>
          <span data-ttu-id="7046f-383">La longitud del búfer menos <paramref name="index" /> es menor que <paramref name="count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-383">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartAttribute">
      <MemberSignature Language="C#" Value="public override void WriteStartAttribute (string prefix, string localName, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteStartAttribute(string prefix, string localName, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteStartAttribute(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteStartAttribute (prefix As String, localName As String, ns As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteStartAttribute(System::String ^ prefix, System::String ^ localName, System::String ^ ns);" />
      <MemberSignature Language="F#" Value="override this.WriteStartAttribute : string * string * string -&gt; unit" Usage="xmlTextWriter.WriteStartAttribute (prefix, localName, ns)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix">
          <span data-ttu-id="7046f-384">Prefijo <see langword="Namespace" /> del atributo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-384">
              <see langword="Namespace" /> prefix of the attribute.</span>
          </span>
        </param>
        <param name="localName">
          <span data-ttu-id="7046f-385">
            <see langword="LocalName" /> del atributo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-385">
              <see langword="LocalName" /> of the attribute.</span>
          </span>
        </param>
        <param name="ns">
          <span data-ttu-id="7046f-386">
            <see langword="NamespaceURI" /> del atributo</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-386">
              <see langword="NamespaceURI" /> of the attribute</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7046f-387">Escribe el inicio de un atributo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-387">Writes the start of an attribute.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="7046f-388">A partir de .NET Framework 2.0, se recomienda crear <xref:System.Xml.XmlWriter> instancias utilizando el <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método y el <xref:System.Xml.XmlWriterSettings> clase para aprovechar las ventajas de la nueva funcionalidad.</span><span class="sxs-lookup"><span data-stu-id="7046f-388">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="7046f-389">Se trata de una versión más avanzada de <xref:System.Xml.XmlWriter.WriteAttributeString%2A> que le permite escribir un valor de atributo con varios métodos de escritura, como <xref:System.Xml.XmlTextWriter.WriteString%2A>.</span><span class="sxs-lookup"><span data-stu-id="7046f-389">This is a more advanced version of <xref:System.Xml.XmlWriter.WriteAttributeString%2A> that allows you to write an attribute value using multiple write methods, such as <xref:System.Xml.XmlTextWriter.WriteString%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7046f-390">El ejemplo siguiente se escribe un libro.</span><span class="sxs-lookup"><span data-stu-id="7046f-390">The following example writes out a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7046f-391">
            <paramref name="localName" /> es <see langword="null" /> o <see langword="String.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-391">
              <paramref name="localName" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.XmlTextWriter.WriteEndAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteStartDocument">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="7046f-392">Escribe la declaración XML con la versión "1.0".</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-392">Writes the XML declaration with the version "1.0".</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="7046f-393">A partir de .NET Framework 2.0, se recomienda crear <xref:System.Xml.XmlWriter> instancias utilizando el <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método y el <xref:System.Xml.XmlWriterSettings> clase para aprovechar las ventajas de la nueva funcionalidad.</span><span class="sxs-lookup"><span data-stu-id="7046f-393">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteStartDocument">
      <MemberSignature Language="C#" Value="public override void WriteStartDocument ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteStartDocument() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteStartDocument" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteStartDocument ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteStartDocument();" />
      <MemberSignature Language="F#" Value="override this.WriteStartDocument : unit -&gt; unit" Usage="xmlTextWriter.WriteStartDocument " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7046f-394">Escribe la declaración XML con la versión "1.0".</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-394">Writes the XML declaration with the version "1.0".</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="7046f-395">A partir de .NET Framework 2.0, se recomienda crear <xref:System.Xml.XmlWriter> instancias utilizando el <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método y el <xref:System.Xml.XmlWriterSettings> clase para aprovechar las ventajas de la nueva funcionalidad.</span><span class="sxs-lookup"><span data-stu-id="7046f-395">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="7046f-396">El nivel de codificación del documento viene determinada por cómo se implementa el sistema de escritura.</span><span class="sxs-lookup"><span data-stu-id="7046f-396">The encoding level of the document is determined by how the writer is implemented.</span></span> <span data-ttu-id="7046f-397">Por ejemplo, si un <xref:System.Text.Encoding> se especifica en el `XmlTextWriter` constructor, esto determina el valor del atributo de codificación.</span><span class="sxs-lookup"><span data-stu-id="7046f-397">For example, if an <xref:System.Text.Encoding> object is specified in the `XmlTextWriter` constructor, this determines the value of the encoding attribute.</span></span> <span data-ttu-id="7046f-398">Este método no crea un atributo independiente.</span><span class="sxs-lookup"><span data-stu-id="7046f-398">This method does not create a standalone attribute.</span></span>  
  
 <span data-ttu-id="7046f-399">Cuando `WriteStartDocument` se denomina el escritor valida que va a escribir es un documento XML bien formado.</span><span class="sxs-lookup"><span data-stu-id="7046f-399">When `WriteStartDocument` is called the writer validates that what you are writing is a well-formed XML document.</span></span> <span data-ttu-id="7046f-400">Por ejemplo, comprueba que la declaración XML es el primer nodo, que uno y solo un elemento de nivel de raíz existe y así sucesivamente.</span><span class="sxs-lookup"><span data-stu-id="7046f-400">For example, it checks that the XML declaration is the first node, that one and only one root-level element exists and so on.</span></span> <span data-ttu-id="7046f-401">Si no se llama a este método, el sistema de escritura se supone un fragmento XML se escribe y aplica ninguna regla de nivel de raíz.</span><span class="sxs-lookup"><span data-stu-id="7046f-401">If this method is not called, the writer assumes an XML fragment is being written and applies no root level rules.</span></span>  
  
 <span data-ttu-id="7046f-402">Si `WriteStartDocument` se ha llamado y, a continuación, el <xref:System.Xml.XmlTextWriter.WriteProcessingInstruction%2A> método se utiliza para crear otra declaración XML, se produce una excepción.</span><span class="sxs-lookup"><span data-stu-id="7046f-402">If `WriteStartDocument` has been called and then the <xref:System.Xml.XmlTextWriter.WriteProcessingInstruction%2A> method is used to create another XML declaration, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7046f-403">El ejemplo siguiente escribe un archivo XML que representa un libro.</span><span class="sxs-lookup"><span data-stu-id="7046f-403">The following example writes an XML file representing a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="7046f-404">Este no es el primer método Write al que se llama después de llamar al constructor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-404">This is not the first write method called after the constructor.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartDocument">
      <MemberSignature Language="C#" Value="public override void WriteStartDocument (bool standalone);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteStartDocument(bool standalone) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteStartDocument(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteStartDocument (standalone As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteStartDocument(bool standalone);" />
      <MemberSignature Language="F#" Value="override this.WriteStartDocument : bool -&gt; unit" Usage="xmlTextWriter.WriteStartDocument standalone" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="standalone" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="standalone">
          <span data-ttu-id="7046f-405">Si es <see langword="true" />, escribirá "standalone=yes"; si es <see langword="false" />, escribirá "standalone=no".</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-405">If <see langword="true" />, it writes "standalone=yes"; if <see langword="false" />, it writes "standalone=no".</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7046f-406">Escribe la declaración XML con la versión "1.0" así como el atributo independiente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-406">Writes the XML declaration with the version "1.0" and the standalone attribute.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="7046f-407">A partir de .NET Framework 2.0, se recomienda crear <xref:System.Xml.XmlWriter> instancias utilizando el <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método y el <xref:System.Xml.XmlWriterSettings> clase para aprovechar las ventajas de la nueva funcionalidad.</span><span class="sxs-lookup"><span data-stu-id="7046f-407">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="7046f-408">El nivel de codificación del documento viene determinada por cómo se implementa el sistema de escritura.</span><span class="sxs-lookup"><span data-stu-id="7046f-408">The encoding level of the document is determined by how the writer is implemented.</span></span> <span data-ttu-id="7046f-409">Por ejemplo, si un <xref:System.Text.Encoding> se especifica en el `XmlTextWriter` constructor, esto determina el valor del atributo de codificación.</span><span class="sxs-lookup"><span data-stu-id="7046f-409">For example, if an <xref:System.Text.Encoding> object is specified in the `XmlTextWriter` constructor, this determines the value of the encoding attribute.</span></span>  
  
 <span data-ttu-id="7046f-410">Cuando `WriteStartDocument` se denomina el escritor valida que va a escribir es un documento XML bien formado.</span><span class="sxs-lookup"><span data-stu-id="7046f-410">When `WriteStartDocument` is called the writer validates that what you are writing is a well-formed XML document.</span></span> <span data-ttu-id="7046f-411">Por ejemplo, comprueba que la declaración XML es el primer nodo, que uno y solo un elemento de nivel de raíz existe y así sucesivamente.</span><span class="sxs-lookup"><span data-stu-id="7046f-411">For example, it checks that the XML declaration is the first node, that one and only one root-level element exists and so on.</span></span> <span data-ttu-id="7046f-412">Si no se llama a este método, el sistema de escritura se supone un fragmento XML se escribe y aplica ninguna regla de nivel de raíz.</span><span class="sxs-lookup"><span data-stu-id="7046f-412">If this method is not called, the writer assumes an XML fragment is being written and applies no root level rules.</span></span>  
  
 <span data-ttu-id="7046f-413">Si `WriteStartDocument` se ha llamado y, a continuación, el <xref:System.Xml.XmlTextWriter.WriteProcessingInstruction%2A> método se utiliza para crear otra declaración XML, se produce una excepción.</span><span class="sxs-lookup"><span data-stu-id="7046f-413">If `WriteStartDocument` has been called and then the <xref:System.Xml.XmlTextWriter.WriteProcessingInstruction%2A> method is used to create another XML declaration, an exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="7046f-414">Este no es el primer método Write al que se llama después de llamar al constructor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-414">This is not the first write method called after the constructor.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartElement">
      <MemberSignature Language="C#" Value="public override void WriteStartElement (string prefix, string localName, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteStartElement(string prefix, string localName, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteStartElement(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteStartElement (prefix As String, localName As String, ns As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteStartElement(System::String ^ prefix, System::String ^ localName, System::String ^ ns);" />
      <MemberSignature Language="F#" Value="override this.WriteStartElement : string * string * string -&gt; unit" Usage="xmlTextWriter.WriteStartElement (prefix, localName, ns)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix">
          <span data-ttu-id="7046f-415">Prefijo de espacio de nombres del elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-415">The namespace prefix of the element.</span>
          </span>
        </param>
        <param name="localName">
          <span data-ttu-id="7046f-416">Nombre local del elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-416">The local name of the element.</span>
          </span>
        </param>
        <param name="ns">
          <span data-ttu-id="7046f-417">Identificador URI de espacio de nombres que se va a asociar al elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-417">The namespace URI to associate with the element.</span>
          </span>
          <span data-ttu-id="7046f-418">Si este espacio de nombres ya está en el ámbito y tiene asociado un prefijo, el sistema de escritura también lo escribe automáticamente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-418">If this namespace is already in scope and has an associated prefix then the writer automatically writes that prefix also.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7046f-419">Escribe la etiqueta de apertura especificada y la asocia al espacio de nombres y al prefijo especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-419">Writes the specified start tag and associates it with the given namespace and prefix.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="7046f-420">A partir de .NET Framework 2.0, se recomienda crear <xref:System.Xml.XmlWriter> instancias utilizando el <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método y el <xref:System.Xml.XmlWriterSettings> clase para aprovechar las ventajas de la nueva funcionalidad.</span><span class="sxs-lookup"><span data-stu-id="7046f-420">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="7046f-421">Después de llamar a este método se puede escribir atributos o crear contenido mediante <xref:System.Xml.XmlTextWriter.WriteComment%2A>, <xref:System.Xml.XmlTextWriter.WriteString%2A>, o <xref:System.Xml.XmlTextWriter.WriteStartElement%2A> para los elementos secundarios.</span><span class="sxs-lookup"><span data-stu-id="7046f-421">After calling this method you can either write attributes or create content using <xref:System.Xml.XmlTextWriter.WriteComment%2A>, <xref:System.Xml.XmlTextWriter.WriteString%2A>, or <xref:System.Xml.XmlTextWriter.WriteStartElement%2A> for child elements.</span></span> <span data-ttu-id="7046f-422">Puede cerrar el elemento con <xref:System.Xml.XmlTextWriter.WriteEndElement%2A> en qué momento se escribe una etiqueta de cierre.</span><span class="sxs-lookup"><span data-stu-id="7046f-422">You can close the element with <xref:System.Xml.XmlTextWriter.WriteEndElement%2A> at which time an end tag is written out.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7046f-423">El ejemplo siguiente se escribe un libro.</span><span class="sxs-lookup"><span data-stu-id="7046f-423">The following example writes out a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="7046f-424">El sistema de escritura está cerrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-424">The writer is closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteState">
      <MemberSignature Language="C#" Value="public override System.Xml.WriteState WriteState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.WriteState WriteState" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.WriteState" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property WriteState As WriteState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::WriteState WriteState { System::Xml::WriteState get(); };" />
      <MemberSignature Language="F#" Value="member this.WriteState : System.Xml.WriteState" Usage="System.Xml.XmlTextWriter.WriteState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.WriteState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7046f-425">Obtiene el estado del sistema de escritura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-425">Gets the state of the writer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7046f-426">Uno de los valores de <see cref="T:System.Xml.WriteState" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-426">One of the <see cref="T:System.Xml.WriteState" /> values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="7046f-427">A partir de .NET Framework 2.0, se recomienda crear <xref:System.Xml.XmlWriter> instancias utilizando el <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método y el <xref:System.Xml.XmlWriterSettings> clase para aprovechar las ventajas de la nueva funcionalidad.</span><span class="sxs-lookup"><span data-stu-id="7046f-427">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public override void WriteString (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteString(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteString (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteString(System::String ^ text);" />
      <MemberSignature Language="F#" Value="override this.WriteString : string -&gt; unit" Usage="xmlTextWriter.WriteString text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="7046f-428">Texto que se va a escribir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-428">Text to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7046f-429">Escribe el contenido de texto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-429">Writes the given text content.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="7046f-430">A partir de .NET Framework 2.0, se recomienda crear <xref:System.Xml.XmlWriter> instancias utilizando el <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método y el <xref:System.Xml.XmlWriterSettings> clase para aprovechar las ventajas de la nueva funcionalidad.</span><span class="sxs-lookup"><span data-stu-id="7046f-430">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="7046f-431">`WriteString` hace lo siguiente</span><span class="sxs-lookup"><span data-stu-id="7046f-431">`WriteString` does the following</span></span>  
  
-   <span data-ttu-id="7046f-432">Los caracteres `&`, `<`, y `>` se reemplazan por `&amp;`, `&lt;`, y `&gt;`, respectivamente.</span><span class="sxs-lookup"><span data-stu-id="7046f-432">The characters `&`, `<`, and `>` are replaced with `&amp;`, `&lt;`, and `&gt;`, respectively.</span></span>  
  
-   <span data-ttu-id="7046f-433">Los valores de caracteres en el intervalo de 0 x-0x1F (excluidos los caracteres de espacio en blanco 0xD, 0xA y 0 x 9) se reemplazan por entidades de caracteres numéricos (`&#0;` a través de `&#0x1F`).</span><span class="sxs-lookup"><span data-stu-id="7046f-433">Character values in the range 0x-0x1F (excluding white space characters 0x9, 0xA, and 0xD) are replaced with numeric character entities (`&#0;` through `&#0x1F`).</span></span>  
  
-   <span data-ttu-id="7046f-434">Si `WriteString` se llama en el contexto de un valor de atributo, las comillas dobles y simples se reemplazan por `&quot;` y `&apos;` respectivamente.</span><span class="sxs-lookup"><span data-stu-id="7046f-434">If `WriteString` is called in the context of an attribute value, double and single quotes are replaced with `&quot;` and `&apos;` respectively.</span></span>  
  
 <span data-ttu-id="7046f-435">Por ejemplo, esta cadena de entrada `test<item>test` se escribe como</span><span class="sxs-lookup"><span data-stu-id="7046f-435">For example, this input string `test<item>test` is written as</span></span>  
  
```  
test&lt;item&gt;test  
```  
  
 <span data-ttu-id="7046f-436">Si `text` sea `null` o `String.Empty`, este método escribe un nodo de texto sin contenido.</span><span class="sxs-lookup"><span data-stu-id="7046f-436">If `text` is either `null` or `String.Empty`, this method writes a text node with no data content.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7046f-437">El ejemplo siguiente escribe un fragmento XML.</span><span class="sxs-lookup"><span data-stu-id="7046f-437">The following example writes an XML fragment.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7046f-438">La cadena de texto contiene un par suplente no válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-438">The text string contains an invalid surrogate pair.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteSurrogateCharEntity">
      <MemberSignature Language="C#" Value="public override void WriteSurrogateCharEntity (char lowChar, char highChar);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteSurrogateCharEntity(char lowChar, char highChar) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteSurrogateCharEntity(System.Char,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteSurrogateCharEntity (lowChar As Char, highChar As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteSurrogateCharEntity(char lowChar, char highChar);" />
      <MemberSignature Language="F#" Value="override this.WriteSurrogateCharEntity : char * char -&gt; unit" Usage="xmlTextWriter.WriteSurrogateCharEntity (lowChar, highChar)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lowChar" Type="System.Char" />
        <Parameter Name="highChar" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="lowChar">
          <span data-ttu-id="7046f-439">Suplente bajo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-439">The low surrogate.</span>
          </span>
          <span data-ttu-id="7046f-440">Debe ser un valor comprendido entre <see langword="0xDC00" /> y <see langword="0xDFFF" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-440">This must be a value between <see langword="0xDC00" /> and <see langword="0xDFFF" />.</span>
          </span>
        </param>
        <param name="highChar">
          <span data-ttu-id="7046f-441">Suplente alto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-441">The high surrogate.</span>
          </span>
          <span data-ttu-id="7046f-442">Debe ser un valor comprendido entre <see langword="0xD800" /> y <see langword="0xDBFF" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-442">This must be a value between <see langword="0xD800" /> and <see langword="0xDBFF" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7046f-443">Genera y escribe la entidad de carácter suplente del par de caracteres suplentes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-443">Generates and writes the surrogate character entity for the surrogate character pair.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="7046f-444">A partir de .NET Framework 2.0, se recomienda crear <xref:System.Xml.XmlWriter> instancias utilizando el <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método y el <xref:System.Xml.XmlWriterSettings> clase para aprovechar las ventajas de la nueva funcionalidad.</span><span class="sxs-lookup"><span data-stu-id="7046f-444">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="7046f-445">Este método solo es aplicable en sistemas que utilizan la codificación UTF-16.</span><span class="sxs-lookup"><span data-stu-id="7046f-445">This method is only applicable on systems that use UTF-16 encoding.</span></span>  
  
 <span data-ttu-id="7046f-446">La entidad de carácter suplente se escribe en formato hexadecimal.</span><span class="sxs-lookup"><span data-stu-id="7046f-446">The surrogate character entity is written in hexadecimal format.</span></span> <span data-ttu-id="7046f-447">El intervalo de caracteres suplentes es `#x10000` a `#x10FFFF`.</span><span class="sxs-lookup"><span data-stu-id="7046f-447">The range for surrogate characters is `#x10000` to `#x10FFFF`.</span></span> <span data-ttu-id="7046f-448">La siguiente fórmula se usa para generar la entidad de carácter suplente: (`highChar` - `0xD800`) \* `0x400` + (`lowChar` - `0xDC00`) + `0x10000`.</span><span class="sxs-lookup"><span data-stu-id="7046f-448">The following formula is used to generate the surrogate character entity: (`highChar` - `0xD800`) \* `0x400` + (`lowChar` - `0xDC00`) + `0x10000`.</span></span>  
  
 <span data-ttu-id="7046f-449">HTML y XML, el juego de caracteres del documento (y, por tanto, la notación de referencias de carácter numérico) se basan en UCS [ISO 10646].</span><span class="sxs-lookup"><span data-stu-id="7046f-449">For both HTML and XML, the document character set (and therefore the notation of numeric character references) is based on UCS [ISO-10646].</span></span> <span data-ttu-id="7046f-450">Una referencia de carácter numérico individual en un documento de origen, por tanto, es posible que en algunos casos corresponden a dos unidades de 16 bits en una cadena (un suplente alto y un suplente bajo).</span><span class="sxs-lookup"><span data-stu-id="7046f-450">A single numeric character reference in a source document may therefore in some cases correspond to two 16-bit units in a string (a high surrogate and a low surrogate).</span></span> <span data-ttu-id="7046f-451">Estas unidades de 16 bits se conocen como un par suplente.</span><span class="sxs-lookup"><span data-stu-id="7046f-451">These 16-bit units are referred to as a surrogate pair.</span></span>  
  
 <span data-ttu-id="7046f-452">Para obtener más información sobre caracteres suplentes o caracteres, consulte la sección 3.7 del Unicode 3.0/Unicode 2.0 estándar que se encuentra en <https://www.unicode.org>, o [sección 2.2 de la recomendación W3C XML 1.0](https://www.w3.org/TR/REC-xml#charsets).</span><span class="sxs-lookup"><span data-stu-id="7046f-452">For more information regarding surrogates or characters, refer to section 3.7 of the Unicode 3.0/Unicode 2.0 standard located at <https://www.unicode.org>, or [section 2.2 of the W3C XML 1.0 Recommendation](https://www.w3.org/TR/REC-xml#charsets).</span></span>
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">
          <span data-ttu-id="7046f-453">Se ha pasado un par de caracteres suplentes no válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-453">An invalid surrogate character pair was passed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteWhitespace">
      <MemberSignature Language="C#" Value="public override void WriteWhitespace (string ws);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteWhitespace(string ws) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteWhitespace(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteWhitespace (ws As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteWhitespace(System::String ^ ws);" />
      <MemberSignature Language="F#" Value="override this.WriteWhitespace : string -&gt; unit" Usage="xmlTextWriter.WriteWhitespace ws" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ws" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ws">
          <span data-ttu-id="7046f-454">Cadena de caracteres de espacio en blanco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-454">The string of white space characters.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7046f-455">Escribe el espacio en blanco especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-455">Writes out the given white space.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="7046f-456">A partir de .NET Framework 2.0, se recomienda crear <xref:System.Xml.XmlWriter> instancias utilizando el <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método y el <xref:System.Xml.XmlWriterSettings> clase para aprovechar las ventajas de la nueva funcionalidad.</span><span class="sxs-lookup"><span data-stu-id="7046f-456">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="7046f-457">Este método se usa para dar formato a su documento manualmente.</span><span class="sxs-lookup"><span data-stu-id="7046f-457">This method is used to manually format your document.</span></span> <span data-ttu-id="7046f-458">Use el <xref:System.Xml.XmlTextWriter.Formatting%2A> propiedad tenga el escritor de dar formato al resultado automáticamente.</span><span class="sxs-lookup"><span data-stu-id="7046f-458">Use the <xref:System.Xml.XmlTextWriter.Formatting%2A> property to have the writer format the output automatically.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7046f-459">En el ejemplo siguiente se usa el `WriteWhitespace` método para controlar el archivo de formato.</span><span class="sxs-lookup"><span data-stu-id="7046f-459">The following example uses the `WriteWhitespace` method to control how the file is formatted.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.XmlSpace Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.XmlSpace Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.XmlSpace Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.XmlSpace Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.XmlSpace Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.XmlSpace Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7046f-460">La cadena no contiene caracteres de espacio en blanco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-460">The string contains non-white space characters.</span>
          </span>
        </exception>
        <altmember cref="P:System.Xml.XmlTextWriter.Formatting" />
      </Docs>
    </Member>
    <Member MemberName="XmlLang">
      <MemberSignature Language="C#" Value="public override string XmlLang { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string XmlLang" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.XmlLang" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property XmlLang As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ XmlLang { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.XmlLang : string" Usage="System.Xml.XmlTextWriter.XmlLang" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7046f-461">Obtiene el ámbito de <see langword="xml:lang" /> actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-461">Gets the current <see langword="xml:lang" /> scope.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7046f-462">El <see langword="xml:lang" /> actual o <see langword="null" /> si no hay <see langword="xml:lang" /> en el ámbito actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-462">The current <see langword="xml:lang" /> or <see langword="null" /> if there is no <see langword="xml:lang" /> in the current scope.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="7046f-463">A partir de .NET Framework 2.0, se recomienda crear <xref:System.Xml.XmlWriter> instancias utilizando el <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método y el <xref:System.Xml.XmlWriterSettings> clase para aprovechar las ventajas de la nueva funcionalidad.</span><span class="sxs-lookup"><span data-stu-id="7046f-463">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="7046f-464">Esta propiedad permite que un componente averiguar el estado en que otro componente ha dejado el sistema de escritura.</span><span class="sxs-lookup"><span data-stu-id="7046f-464">This property allows one component to find out what state another component has left the writer in.</span></span> <span data-ttu-id="7046f-465">Por ejemplo, quizás quiere un componente le diga al otro qué texto de Ayuda de lenguaje para generar.</span><span class="sxs-lookup"><span data-stu-id="7046f-465">For example, perhaps one component wants to tell another which language help text to generate.</span></span> <span data-ttu-id="7046f-466">La información de idioma se comunica escribiendo un `xml:lang` atributo.</span><span class="sxs-lookup"><span data-stu-id="7046f-466">The language information is communicated by writing an `xml:lang` attribute.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlSpace">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlSpace XmlSpace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XmlSpace XmlSpace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.XmlSpace" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property XmlSpace As XmlSpace" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlSpace XmlSpace { System::Xml::XmlSpace get(); };" />
      <MemberSignature Language="F#" Value="member this.XmlSpace : System.Xml.XmlSpace" Usage="System.Xml.XmlTextWriter.XmlSpace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlSpace</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7046f-467">Obtiene <see cref="T:System.Xml.XmlSpace" /> que representa el ámbito de <see langword="xml:space" /> actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-467">Gets an <see cref="T:System.Xml.XmlSpace" /> representing the current <see langword="xml:space" /> scope.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7046f-468">
            <see langword="XmlSpace" /> que representa el ámbito de <see langword="xml:space" /> actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7046f-468">An <see langword="XmlSpace" /> representing the current <see langword="xml:space" /> scope.</span>
          </span>
          <list type="table">
            <listheader>
              <term>
                <span data-ttu-id="7046f-469">Valor</span>
                <span class="sxs-lookup">
                  <span data-stu-id="7046f-469">Value</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="7046f-470">Significado</span>
                <span class="sxs-lookup">
                  <span data-stu-id="7046f-470">Meaning</span>
                </span>
              </description>
            </listheader>
            <item>
              <term>
                <span data-ttu-id="7046f-471">None</span>
                <span class="sxs-lookup">
                  <span data-stu-id="7046f-471">None</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="7046f-472">Este es el valor predeterminado si no existe ningún ámbito de <see langword="xml:space" />.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="7046f-472">This is the default if no <see langword="xml:space" /> scope exists.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="7046f-473">Default</span>
                <span class="sxs-lookup">
                  <span data-stu-id="7046f-473">Default</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="7046f-474">El ámbito actual es <see langword="xml:space" />="default".</span>
                <span class="sxs-lookup">
                  <span data-stu-id="7046f-474">The current scope is <see langword="xml:space" />="default".</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="7046f-475">Preserve</span>
                <span class="sxs-lookup">
                  <span data-stu-id="7046f-475">Preserve</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="7046f-476">El ámbito actual es <see langword="xml:space" />="preserve".</span>
                <span class="sxs-lookup">
                  <span data-stu-id="7046f-476">The current scope is <see langword="xml:space" />="preserve".</span>
                </span>
              </description>
            </item>
          </list>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="7046f-477">A partir de .NET Framework 2.0, se recomienda crear <xref:System.Xml.XmlWriter> instancias utilizando el <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> método y el <xref:System.Xml.XmlWriterSettings> clase para aprovechar las ventajas de la nueva funcionalidad.</span><span class="sxs-lookup"><span data-stu-id="7046f-477">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="7046f-478">Esta propiedad permite que un componente averiguar en qué estado a que otro componente ha dejado el sistema de escritura.</span><span class="sxs-lookup"><span data-stu-id="7046f-478">This property allows one component to find out in what state another component has left the writer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7046f-479">En el ejemplo siguiente se usa el `WriteWhitespace` método para controlar el archivo de formato.</span><span class="sxs-lookup"><span data-stu-id="7046f-479">The following example uses the `WriteWhitespace` method to control how the file is formatted.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.XmlSpace Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.XmlSpace Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.XmlSpace Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.XmlSpace Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.XmlSpace Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.XmlSpace Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
<Type Name="XmlDataDocument" FullName="System.Xml.XmlDataDocument">
  <Metadata><Meta Name="ms.openlocfilehash" Value="14e33d5c19a3b65b9a2838b1e77fce6c48b7f183" /><Meta Name="ms.sourcegitcommit" Value="42a3c35677e9d87eeb503607ae50c9d39827d414" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="12/17/2018" /><Meta Name="ms.locfileid" Value="53458361" /></Metadata><TypeSignature Language="C#" Value="public class XmlDataDocument : System.Xml.XmlDocument" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlDataDocument extends System.Xml.XmlDocument" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlDataDocument" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlDataDocument&#xA;Inherits XmlDocument" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlDataDocument : System::Xml::XmlDocument" />
  <TypeSignature Language="F#" Value="type XmlDataDocument = class&#xA;    inherit XmlDocument" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xml.XmlDocument</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Obsolete("XmlDataDocument class will be removed in a future release.")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="dd64d-101">Permite que los datos estructurados se almacenen, recuperen y manipulen mediante un <see cref="T:System.Data.DataSet" /> relacional.</span><span class="sxs-lookup"><span data-stu-id="dd64d-101">Allows structured data to be stored, retrieved, and manipulated through a relational <see cref="T:System.Data.DataSet" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd64d-102">Esta clase extiende <xref:System.Xml.XmlDocument>.</span><span class="sxs-lookup"><span data-stu-id="dd64d-102">This class extends <xref:System.Xml.XmlDocument>.</span></span> <span data-ttu-id="dd64d-103">Permite cargar datos relacionales o datos XML y manipularlos utilizando Document Object Model (DOM) de World Wide Web Consortium (W3C).</span><span class="sxs-lookup"><span data-stu-id="dd64d-103">It enables you to load either relational data or XML data and manipulate that data using the World Wide Web Consortium (W3C) Document Object Model (DOM).</span></span> <span data-ttu-id="dd64d-104">DOM presenta los datos como una jerarquía de objetos de nodo.</span><span class="sxs-lookup"><span data-stu-id="dd64d-104">The DOM presents data as a hierarchy of node objects.</span></span> <span data-ttu-id="dd64d-105">Dado que `XmlDataDocument` implementa el <xref:System.Xml.XPath.IXPathNavigable> interfaz, también puede utilizarse como documento de origen para el <xref:System.Xml.Xsl.XslTransform> clase.</span><span class="sxs-lookup"><span data-stu-id="dd64d-105">Because `XmlDataDocument` implements the <xref:System.Xml.XPath.IXPathNavigable> interface, it can also be used as the source document for the <xref:System.Xml.Xsl.XslTransform> class.</span></span>  
  
 <span data-ttu-id="dd64d-106">`XmlDataDocument` tiene una relación estrecha con los `DataSet` (clase), que proporciona una vista relacional de los datos XML cargados.</span><span class="sxs-lookup"><span data-stu-id="dd64d-106">`XmlDataDocument` has a close affiliation with the `DataSet` class, which provides a relational view of the loaded XML data.</span></span> <span data-ttu-id="dd64d-107">Los cambios realizados en el `XmlDataDocument` se reflejan en el `DataSet` y viceversa.</span><span class="sxs-lookup"><span data-stu-id="dd64d-107">Any changes made to the `XmlDataDocument` are reflected in the `DataSet` and vice versa.</span></span>  
  
 <span data-ttu-id="dd64d-108">Para cargar un `DataSet` con datos XML, utilice <xref:System.Data.DataSet.ReadXmlSchema%2A> para generar una asignación relacional.</span><span class="sxs-lookup"><span data-stu-id="dd64d-108">To load a `DataSet` with XML data, use <xref:System.Data.DataSet.ReadXmlSchema%2A> to build a relational mapping.</span></span> <span data-ttu-id="dd64d-109">A continuación, se pueden cargar los datos XML mediante <xref:System.Xml.XmlDataDocument.Load%2A> o <xref:System.Xml.XmlDocument.LoadXml%2A>.</span><span class="sxs-lookup"><span data-stu-id="dd64d-109">The XML data can then be loaded using <xref:System.Xml.XmlDataDocument.Load%2A> or <xref:System.Xml.XmlDocument.LoadXml%2A>.</span></span>  
  
 <span data-ttu-id="dd64d-110">Para cargar datos relacionales, especifique el `DataSet` que contiene los datos relacionales como parámetro en el <xref:System.Xml.XmlDataDocument.%23ctor%2A> constructor.</span><span class="sxs-lookup"><span data-stu-id="dd64d-110">To load relational data, specify the `DataSet` containing the relational data as the parameter in the <xref:System.Xml.XmlDataDocument.%23ctor%2A> constructor.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="dd64d-111">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlDataDocument" />.</span><span class="sxs-lookup"><span data-stu-id="dd64d-111">Initializes a new instance of the <see cref="T:System.Xml.XmlDataDocument" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlDataDocument ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDataDocument.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlDataDocument();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dd64d-112">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlDataDocument" />.</span><span class="sxs-lookup"><span data-stu-id="dd64d-112">Initializes a new instance of the <see cref="T:System.Xml.XmlDataDocument" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd64d-113">Un valor vacío <xref:System.Data.DataSet> se creó y asoció la `XmlDataDocument`.</span><span class="sxs-lookup"><span data-stu-id="dd64d-113">An empty <xref:System.Data.DataSet> is created and associated with the `XmlDataDocument`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlDataDocument (System.Data.DataSet dataset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.DataSet dataset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDataDocument.#ctor(System.Data.DataSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlDataDocument(System::Data::DataSet ^ dataset);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlDataDocument : System.Data.DataSet -&gt; System.Xml.XmlDataDocument" Usage="new System.Xml.XmlDataDocument dataset" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dataset" Type="System.Data.DataSet" />
      </Parameters>
      <Docs>
        <param name="dataset"><span data-ttu-id="dd64d-114"><see langword="DataSet" /> que se va a cargar en <see langword="XmlDataDocument" />.</span><span class="sxs-lookup"><span data-stu-id="dd64d-114">The <see langword="DataSet" /> to load into <see langword="XmlDataDocument" />.</span></span></param>
        <summary><span data-ttu-id="dd64d-115">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlDataDocument" /> con el objeto <see cref="T:System.Data.DataSet" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="dd64d-115">Initializes a new instance of the <see cref="T:System.Xml.XmlDataDocument" /> class with the specified <see cref="T:System.Data.DataSet" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd64d-116">El `XmlDataDocument` está sincronizada con los valores especificados `DataSet`.</span><span class="sxs-lookup"><span data-stu-id="dd64d-116">The `XmlDataDocument` is synchronized with the specified `DataSet`.</span></span> <span data-ttu-id="dd64d-117">Los datos en el `DataSet` está inmediatamente disponible a través de la `XmlDataDocument`.</span><span class="sxs-lookup"><span data-stu-id="dd64d-117">Any data in the `DataSet` is immediately available through the `XmlDataDocument`.</span></span> <span data-ttu-id="dd64d-118">Los cambios en el `DataSet` se propagan en la `XmlDataDocument`.</span><span class="sxs-lookup"><span data-stu-id="dd64d-118">Any changes in the `DataSet` are propagated in the `XmlDataDocument`.</span></span> <span data-ttu-id="dd64d-119">Los cambios realizados en el `XmlDataDocument`, siempre que coincidan con el `DataSet` esquema, se propagan en la `DataSet`.</span><span class="sxs-lookup"><span data-stu-id="dd64d-119">Any changes made in the `XmlDataDocument`, provided they match the `DataSet` schema, are propagated in the `DataSet`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dd64d-120">En el ejemplo siguiente se carga una tabla de clientes en un `XmlDataDocument`.</span><span class="sxs-lookup"><span data-stu-id="dd64d-120">The following example loads a customer table into an `XmlDataDocument`.</span></span>  
  
 <span data-ttu-id="dd64d-121">El ejemplo utiliza la base de datos Northwind de SQL Server 2000.</span><span class="sxs-lookup"><span data-stu-id="dd64d-121">The example uses the SQL Server 2000 Northwind database.</span></span>  
  
 [!code-cpp[Classic WebData XmlDataDocument.XmlDataDocument1 Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDataDocument.XmlDataDocument1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDataDocument.XmlDataDocument1 Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDataDocument.XmlDataDocument1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDataDocument.XmlDataDocument1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDataDocument.XmlDataDocument1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.SqlClient.SqlConnection" />
        <altmember cref="T:System.Data.SqlClient.SqlDataAdapter" />
      </Docs>
    </Member>
    <Member MemberName="CloneNode">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlNode CloneNode (bool deep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Xml.XmlNode CloneNode(bool deep) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDataDocument.CloneNode(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CloneNode (deep As Boolean) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Xml::XmlNode ^ CloneNode(bool deep);" />
      <MemberSignature Language="F#" Value="override this.CloneNode : bool -&gt; System.Xml.XmlNode" Usage="xmlDataDocument.CloneNode deep" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deep" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="deep"><span data-ttu-id="dd64d-122"><see langword="true" /> para clonar de forma recursiva el subárbol del nodo especificado; <see langword="false" /> solo para clonar el nodo en sí.</span><span class="sxs-lookup"><span data-stu-id="dd64d-122"><see langword="true" /> to recursively clone the subtree under the specified node; <see langword="false" /> to clone only the node itself.</span></span></param>
        <summary><span data-ttu-id="dd64d-123">Crea un duplicado del nodo actual.</span><span class="sxs-lookup"><span data-stu-id="dd64d-123">Creates a duplicate of the current node.</span></span></summary>
        <returns><span data-ttu-id="dd64d-124">Nodo clonado.</span><span class="sxs-lookup"><span data-stu-id="dd64d-124">The cloned node.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd64d-125">Clonar el `XmlDataDocument` también clona el <xref:System.Data.DataSet> esquema.</span><span class="sxs-lookup"><span data-stu-id="dd64d-125">Cloning the `XmlDataDocument` also clones the <xref:System.Data.DataSet> schema.</span></span>  
  
 <span data-ttu-id="dd64d-126">Si `deep` está establecido en `false`, clonado `DataSet` tiene ningún dato; que es, no hay ninguna fila.</span><span class="sxs-lookup"><span data-stu-id="dd64d-126">If `deep` is set to `false`, the cloned `DataSet` has no data; that is, no rows.</span></span>  
  
 <span data-ttu-id="dd64d-127">Si `deep` está establecido en `true`, clonado `DataSet` se establece con el esquema y, a continuación, se rellena con los datos.</span><span class="sxs-lookup"><span data-stu-id="dd64d-127">If `deep` is set to `true`, the cloned `DataSet` is set with the schema and then populated with the data.</span></span>  
  
 <span data-ttu-id="dd64d-128">Consulte <xref:System.Xml.XmlNode.CloneNode%2A> en el `XmlNode` clase para ver una tabla que describe cómo se comporta este método con cada uno de los tipos de nodo.</span><span class="sxs-lookup"><span data-stu-id="dd64d-128">See <xref:System.Xml.XmlNode.CloneNode%2A> in the `XmlNode` class to see a table describing how this method behaves with each of the different node types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dd64d-129">En el ejemplo siguiente se carga un `DataSet` en un `XmlDataDocument` y, a continuación, crea un clon superficial de la `XmlDataDocument`.</span><span class="sxs-lookup"><span data-stu-id="dd64d-129">The following example loads a `DataSet` into an `XmlDataDocument` and then creates a shallow clone of the `XmlDataDocument`.</span></span>  
  
 <span data-ttu-id="dd64d-130">El ejemplo utiliza la base de datos Northwind de SQL Server 2000.</span><span class="sxs-lookup"><span data-stu-id="dd64d-130">The example uses the SQL Server 2000 Northwind database.</span></span>  
  
 [!code-cpp[Classic WebData XmlDataDocument.CloneNode Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDataDocument.CloneNode Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDataDocument.CloneNode Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDataDocument.CloneNode Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDataDocument.CloneNode Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDataDocument.CloneNode Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateElement">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlElement CreateElement (string prefix, string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Xml.XmlElement CreateElement(string prefix, string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDataDocument.CreateElement(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateElement (prefix As String, localName As String, namespaceURI As String) As XmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Xml::XmlElement ^ CreateElement(System::String ^ prefix, System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="override this.CreateElement : string * string * string -&gt; System.Xml.XmlElement" Usage="xmlDataDocument.CreateElement (prefix, localName, namespaceURI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix"><span data-ttu-id="dd64d-131">Prefijo del elemento nuevo.</span><span class="sxs-lookup"><span data-stu-id="dd64d-131">The prefix of the new element.</span></span> <span data-ttu-id="dd64d-132">Si es String.Empty o <see langword="null" />, no hay prefijo.</span><span class="sxs-lookup"><span data-stu-id="dd64d-132">If String.Empty or <see langword="null" />, there is no prefix.</span></span></param>
        <param name="localName"><span data-ttu-id="dd64d-133">Nombre local del nuevo elemento.</span><span class="sxs-lookup"><span data-stu-id="dd64d-133">The local name of the new element.</span></span></param>
        <param name="namespaceURI"><span data-ttu-id="dd64d-134">Identificador de recursos uniforme (URI) del espacio de nombres del nuevo elemento.</span><span class="sxs-lookup"><span data-stu-id="dd64d-134">The namespace Uniform Resource Identifier (URI) of the new element.</span></span> <span data-ttu-id="dd64d-135">Si es String.Empty o <see langword="null" />, no hay URI del espacio de nombres.</span><span class="sxs-lookup"><span data-stu-id="dd64d-135">If String.Empty or <see langword="null" />, there is no namespaceURI.</span></span></param>
        <summary><span data-ttu-id="dd64d-136">Crea un elemento con los <see cref="P:System.Xml.XmlNode.Prefix" />, <see cref="P:System.Xml.XmlDocument.LocalName" /> y <see cref="P:System.Xml.XmlNode.NamespaceURI" /> especificados.</span><span class="sxs-lookup"><span data-stu-id="dd64d-136">Creates an element with the specified <see cref="P:System.Xml.XmlNode.Prefix" />, <see cref="P:System.Xml.XmlDocument.LocalName" /> , and <see cref="P:System.Xml.XmlNode.NamespaceURI" />.</span></span></summary>
        <returns><span data-ttu-id="dd64d-137">Un nuevo objeto <see cref="T:System.Xml.XmlElement" />.</span><span class="sxs-lookup"><span data-stu-id="dd64d-137">A new <see cref="T:System.Xml.XmlElement" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd64d-138">`Note to Inheritors` Si se sobrecarga de esta función, no se puede usar para la extensibilidad.</span><span class="sxs-lookup"><span data-stu-id="dd64d-138">`Note to Inheritors` If you overload this function, it cannot be used for extensibility.</span></span> <span data-ttu-id="dd64d-139">En su lugar, puede devolver un elemento creado por la clase base, en este caso, `XmlDataDocument`.</span><span class="sxs-lookup"><span data-stu-id="dd64d-139">Instead, you can return an element created by the base class, in this case, `XmlDataDocument`.</span></span> <span data-ttu-id="dd64d-140">Vea el ejemplo siguiente.</span><span class="sxs-lookup"><span data-stu-id="dd64d-140">See the following example.</span></span>  
  
```csharp  
class MyXmlDataDocument : XmlDataDocument {  
 public override XmlElement CreateElement(string prefix, string localName, string nsURI) {  
   //Ensure we are returning the base class implementation of element.  
   XmlElement e = base.CreateElement(prefix, localName, nsURI);  
   //Add additional code here.  
   return e;    //Return the element created by XmlDataDocument.  
 }      
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateEntityReference">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlEntityReference CreateEntityReference (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Xml.XmlEntityReference CreateEntityReference(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDataDocument.CreateEntityReference(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateEntityReference (name As String) As XmlEntityReference" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Xml::XmlEntityReference ^ CreateEntityReference(System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.CreateEntityReference : string -&gt; System.Xml.XmlEntityReference" Usage="xmlDataDocument.CreateEntityReference name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlEntityReference</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="dd64d-141">Nombre de la referencia a entidad.</span><span class="sxs-lookup"><span data-stu-id="dd64d-141">The name of the entity reference.</span></span></param>
        <summary><span data-ttu-id="dd64d-142">Crea un objeto <see cref="T:System.Xml.XmlEntityReference" /> con el nombre especificado.</span><span class="sxs-lookup"><span data-stu-id="dd64d-142">Creates an <see cref="T:System.Xml.XmlEntityReference" /> with the specified name.</span></span></summary>
        <returns><span data-ttu-id="dd64d-143"><see cref="T:System.Xml.XmlEntityReference" /> con el nombre especificado.</span><span class="sxs-lookup"><span data-stu-id="dd64d-143">An <see cref="T:System.Xml.XmlEntityReference" /> with the specified name.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd64d-144"><xref:System.Xml.XmlEntityReference> no se puede crear nodos para <xref:System.Xml.XmlDataDocument> objetos.</span><span class="sxs-lookup"><span data-stu-id="dd64d-144"><xref:System.Xml.XmlEntityReference> nodes cannot be created for <xref:System.Xml.XmlDataDocument> objects.</span></span> <span data-ttu-id="dd64d-145">Si se llama a este método, se produce una excepción.</span><span class="sxs-lookup"><span data-stu-id="dd64d-145">Calling this method throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="dd64d-146">Llamada a este método.</span><span class="sxs-lookup"><span data-stu-id="dd64d-146">Calling this method.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateNavigator">
      <MemberSignature Language="C#" Value="protected override System.Xml.XPath.XPathNavigator CreateNavigator (System.Xml.XmlNode node);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Xml.XPath.XPathNavigator CreateNavigator(class System.Xml.XmlNode node) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDataDocument.CreateNavigator(System.Xml.XmlNode)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateNavigator (node As XmlNode) As XPathNavigator" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Xml::XPath::XPathNavigator ^ CreateNavigator(System::Xml::XmlNode ^ node);" />
      <MemberSignature Language="F#" Value="override this.CreateNavigator : System.Xml.XmlNode -&gt; System.Xml.XPath.XPathNavigator" Usage="xmlDataDocument.CreateNavigator node" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathNavigator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Xml.XmlNode" />
      </Parameters>
      <Docs>
        <param name="node"><span data-ttu-id="dd64d-147"><see cref="T:System.Xml.XmlNode" /> en el que se desea que el explorador se sitúe inicialmente.</span><span class="sxs-lookup"><span data-stu-id="dd64d-147">The <see cref="T:System.Xml.XmlNode" /> you want the navigator initially positioned on.</span></span></param>
        <summary><span data-ttu-id="dd64d-148">Crea un nuevo objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> para navegar por este documento.</span><span class="sxs-lookup"><span data-stu-id="dd64d-148">Creates a new <see cref="T:System.Xml.XPath.XPathNavigator" /> object for navigating this document.</span></span> <span data-ttu-id="dd64d-149"><see langword="XPathNavigator" /> se sitúa en el nodo que se especifica en el parámetro <paramref name="node" />.</span><span class="sxs-lookup"><span data-stu-id="dd64d-149">The <see langword="XPathNavigator" /> is positioned on the node specified in the <paramref name="node" /> parameter.</span></span></summary>
        <returns><span data-ttu-id="dd64d-150">Objeto <see langword="XPathNavigator" /> que se utiliza para navegar por el documento.</span><span class="sxs-lookup"><span data-stu-id="dd64d-150">An <see langword="XPathNavigator" /> used to navigate the document.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd64d-151">El `XPathNavigator` proporciona acceso aleatorio de solo lectura a los datos.</span><span class="sxs-lookup"><span data-stu-id="dd64d-151">The `XPathNavigator` provides read-only, random access to data.</span></span> <span data-ttu-id="dd64d-152">Dado que está optimizado para las transformaciones XSLT, ofrece ventajas de rendimiento cuando se usa como mecanismo de entrada la <xref:System.Xml.Xsl.XslTransform.Transform%2A> método.</span><span class="sxs-lookup"><span data-stu-id="dd64d-152">Because it is optimized for XSLT transformations, it provides performance benefits when used as an input mechanism to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dd64d-153">Para ver una transformación XSLT con `XmlDataDocument` y un `XPathNavigator`, consulte el <xref:System.Xml.Xsl.XslTransform.Transform%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="dd64d-153">To see an XSLT transformation using `XmlDataDocument` and an `XPathNavigator`, see the <xref:System.Xml.Xsl.XslTransform.Transform%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Xsl.XslTransform" />
      </Docs>
    </Member>
    <Member MemberName="DataSet">
      <MemberSignature Language="C#" Value="public System.Data.DataSet DataSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.DataSet DataSet" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlDataDocument.DataSet" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataSet As DataSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DataSet ^ DataSet { System::Data::DataSet ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataSet : System.Data.DataSet" Usage="System.Xml.XmlDataDocument.DataSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dd64d-154">Obtiene un <see cref="T:System.Data.DataSet" /> que proporciona una representación relacional de los datos de <see langword="XmlDataDocument" />.</span><span class="sxs-lookup"><span data-stu-id="dd64d-154">Gets a <see cref="T:System.Data.DataSet" /> that provides a relational representation of the data in the <see langword="XmlDataDocument" />.</span></span></summary>
        <value><span data-ttu-id="dd64d-155"><see langword="DataSet" /> que se puede utilizar para tener acceso a los datos de <see langword="XmlDataDocument" /> mediante un modelo relacional.</span><span class="sxs-lookup"><span data-stu-id="dd64d-155">A <see langword="DataSet" /> that can be used to access the data in the <see langword="XmlDataDocument" /> using a relational model.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd64d-156">El `DataSet` podrá obtener acceso a los datos en el `XmlDataDocument` mediante un modelo relacional.</span><span class="sxs-lookup"><span data-stu-id="dd64d-156">The `DataSet` enables you to access the data in the `XmlDataDocument` using a relational model.</span></span> <span data-ttu-id="dd64d-157">Esto significa que puede controlar los datos como tablas y vistas, filas y columnas, relaciones y así sucesivamente.</span><span class="sxs-lookup"><span data-stu-id="dd64d-157">This means that you can handle the data as tables and views, rows and columns, relations, and so on.</span></span> <span data-ttu-id="dd64d-158">Los cambios realizados en el `DataSet` son visibles inmediatamente en el `XmlDataDocument`.</span><span class="sxs-lookup"><span data-stu-id="dd64d-158">Changes made in the `DataSet` are immediately visible in the `XmlDataDocument`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dd64d-159">En el ejemplo siguiente se modifica el precio de un libro utilizando el `DataSet` métodos.</span><span class="sxs-lookup"><span data-stu-id="dd64d-159">The following example modifies the price of a book using the `DataSet` methods.</span></span>  
  
 [!code-cpp[Classic WebData XmlDataDocument.DataSet Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDataDocument.DataSet Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDataDocument.DataSet Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDataDocument.DataSet Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDataDocument.DataSet Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDataDocument.DataSet Example/VB/source.vb#1)]  
  
 <span data-ttu-id="dd64d-160">El ejemplo utiliza los dos archivos siguientes como entrada.</span><span class="sxs-lookup"><span data-stu-id="dd64d-160">The example uses the following two files as input.</span></span>  
  
 `2books.xml`  
  
 [!code-xml[Classic WebData XmlDataDocument.DataSet Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlDataDocument.DataSet Example/XML/source.xml#2)]  
  
 `store.xsd`  
  
 [!code-xml[Classic WebData XmlDataDocument.DataSet Example#3](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlDataDocument.DataSet Example/XML/source.xml#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.DataSet" />
        <altmember cref="T:System.Data.DataTable" />
      </Docs>
    </Member>
    <Member MemberName="GetElementById">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlElement GetElementById (string elemId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Xml.XmlElement GetElementById(string elemId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDataDocument.GetElementById(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetElementById (elemId As String) As XmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Xml::XmlElement ^ GetElementById(System::String ^ elemId);" />
      <MemberSignature Language="F#" Value="override this.GetElementById : string -&gt; System.Xml.XmlElement" Usage="xmlDataDocument.GetElementById elemId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elemId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="elemId"><span data-ttu-id="dd64d-161">Identificador de atributo con el que debe haber una coincidencia.</span><span class="sxs-lookup"><span data-stu-id="dd64d-161">The attribute ID to match.</span></span></param>
        <summary><span data-ttu-id="dd64d-162">Obtiene el <see cref="T:System.Xml.XmlElement" /> con el identificador especificado.</span><span class="sxs-lookup"><span data-stu-id="dd64d-162">Gets the <see cref="T:System.Xml.XmlElement" /> with the specified ID.</span></span> <span data-ttu-id="dd64d-163">La clase <see cref="T:System.Xml.XmlDataDocument" /> no admite este método.</span><span class="sxs-lookup"><span data-stu-id="dd64d-163">This method is not supported by the <see cref="T:System.Xml.XmlDataDocument" /> class.</span></span> <span data-ttu-id="dd64d-164">Si se llama a este método, se produce una excepción.</span><span class="sxs-lookup"><span data-stu-id="dd64d-164">Calling this method throws an exception.</span></span></summary>
        <returns><span data-ttu-id="dd64d-165"><see cref="T:System.Xml.XmlElement" /> con el Id. especificado.</span><span class="sxs-lookup"><span data-stu-id="dd64d-165">An <see cref="T:System.Xml.XmlElement" /> with the specified ID.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd64d-166">La clase <xref:System.Xml.XmlDataDocument> no admite este método.</span><span class="sxs-lookup"><span data-stu-id="dd64d-166">This method is not supported by the <xref:System.Xml.XmlDataDocument> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="dd64d-167">Llamada a este método.</span><span class="sxs-lookup"><span data-stu-id="dd64d-167">Calling this method.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetElementFromRow">
      <MemberSignature Language="C#" Value="public System.Xml.XmlElement GetElementFromRow (System.Data.DataRow r);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlElement GetElementFromRow(class System.Data.DataRow r) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDataDocument.GetElementFromRow(System.Data.DataRow)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetElementFromRow (r As DataRow) As XmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlElement ^ GetElementFromRow(System::Data::DataRow ^ r);" />
      <MemberSignature Language="F#" Value="member this.GetElementFromRow : System.Data.DataRow -&gt; System.Xml.XmlElement" Usage="xmlDataDocument.GetElementFromRow r" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="r" Type="System.Data.DataRow" />
      </Parameters>
      <Docs>
        <param name="r"><span data-ttu-id="dd64d-168">Objeto <see langword="DataRow" /> cuyo <see langword="XmlElement" /> asociado se desea a recuperar.</span><span class="sxs-lookup"><span data-stu-id="dd64d-168">The <see langword="DataRow" /> whose associated <see langword="XmlElement" /> you want to retrieve.</span></span></param>
        <summary><span data-ttu-id="dd64d-169">Recupera el objeto <see cref="T:System.Xml.XmlElement" /> asociado al <see cref="T:System.Data.DataRow" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="dd64d-169">Retrieves the <see cref="T:System.Xml.XmlElement" /> associated with the specified <see cref="T:System.Data.DataRow" />.</span></span></summary>
        <returns><span data-ttu-id="dd64d-170"><see langword="XmlElement" /> que contiene una representación del objeto <see langword="DataRow" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="dd64d-170">The <see langword="XmlElement" /> containing a representation of the specified <see langword="DataRow" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="dd64d-171">En el ejemplo siguiente se carga un `DataSet` en un `XmlDataDocument` y, a continuación, se crea un `XmlElement` que representa el primer registro del cliente.</span><span class="sxs-lookup"><span data-stu-id="dd64d-171">The following example loads a `DataSet` into an `XmlDataDocument` and then creates an `XmlElement` representing the first customer record.</span></span>  
  
 <span data-ttu-id="dd64d-172">El ejemplo utiliza la base de datos Northwind de SQL Server 2000.</span><span class="sxs-lookup"><span data-stu-id="dd64d-172">The example uses the SQL Server 2000 Northwind database.</span></span>  
  
 [!code-cpp[Classic WebData XmlDataDocument.GetElementFromRow Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDataDocument.GetElementFromRow Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDataDocument.GetElementFromRow Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDataDocument.GetElementFromRow Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDataDocument.GetElementFromRow Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDataDocument.GetElementFromRow Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.DataSet" />
        <altmember cref="T:System.Data.DataTable" />
      </Docs>
    </Member>
    <Member MemberName="GetElementsByTagName">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlNodeList GetElementsByTagName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Xml.XmlNodeList GetElementsByTagName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDataDocument.GetElementsByTagName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetElementsByTagName (name As String) As XmlNodeList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Xml::XmlNodeList ^ GetElementsByTagName(System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.GetElementsByTagName : string -&gt; System.Xml.XmlNodeList" Usage="xmlDataDocument.GetElementsByTagName name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="dd64d-173">Nombre completo que se va a hacer coincidir.</span><span class="sxs-lookup"><span data-stu-id="dd64d-173">The qualified name to match.</span></span> <span data-ttu-id="dd64d-174">Se compara con la propiedad <see cref="P:System.Xml.XmlDocument.Name" /> del nodo coincidente.</span><span class="sxs-lookup"><span data-stu-id="dd64d-174">It is matched against the <see cref="P:System.Xml.XmlDocument.Name" /> property of the matching node.</span></span> <span data-ttu-id="dd64d-175">El valor especial "\*" coincide con todas las etiquetas.</span><span class="sxs-lookup"><span data-stu-id="dd64d-175">The special value "\*" matches all tags.</span></span></param>
        <summary><span data-ttu-id="dd64d-176">Devuelve un objeto <see cref="T:System.Xml.XmlNodeList" /> que contiene una lista de todos los elementos descendientes que coinciden con el <see cref="P:System.Xml.XmlDocument.Name" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="dd64d-176">Returns an <see cref="T:System.Xml.XmlNodeList" /> containing a list of all descendant elements that match the specified <see cref="P:System.Xml.XmlDocument.Name" />.</span></span></summary>
        <returns><span data-ttu-id="dd64d-177">Objeto <see cref="T:System.Xml.XmlNodeList" /> que contiene una lista de todos los nodos coincidentes.</span><span class="sxs-lookup"><span data-stu-id="dd64d-177">An <see cref="T:System.Xml.XmlNodeList" /> containing a list of all matching nodes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="dd64d-178">Se recomienda que utilice el <xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=nameWithType> o <xref:System.Xml.XmlNode.SelectSingleNode%2A?displayProperty=nameWithType> método en lugar de la <xref:System.Xml.XmlDataDocument.GetElementsByTagName%2A> método.</span><span class="sxs-lookup"><span data-stu-id="dd64d-178">It is recommended that you use the <xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=nameWithType> or <xref:System.Xml.XmlNode.SelectSingleNode%2A?displayProperty=nameWithType> method instead of the <xref:System.Xml.XmlDataDocument.GetElementsByTagName%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRowFromElement">
      <MemberSignature Language="C#" Value="public System.Data.DataRow GetRowFromElement (System.Xml.XmlElement e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow GetRowFromElement(class System.Xml.XmlElement e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDataDocument.GetRowFromElement(System.Xml.XmlElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRowFromElement (e As XmlElement) As DataRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataRow ^ GetRowFromElement(System::Xml::XmlElement ^ e);" />
      <MemberSignature Language="F#" Value="member this.GetRowFromElement : System.Xml.XmlElement -&gt; System.Data.DataRow" Usage="xmlDataDocument.GetRowFromElement e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Xml.XmlElement" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="dd64d-179">Objeto <see langword="XmlElement" /> cuyo <see langword="DataRow" /> asociado se desea a recuperar.</span><span class="sxs-lookup"><span data-stu-id="dd64d-179">The <see langword="XmlElement" /> whose associated <see langword="DataRow" /> you want to retrieve.</span></span></param>
        <summary><span data-ttu-id="dd64d-180">Recupera el objeto <see cref="T:System.Data.DataRow" /> asociado al <see cref="T:System.Xml.XmlElement" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="dd64d-180">Retrieves the <see cref="T:System.Data.DataRow" /> associated with the specified <see cref="T:System.Xml.XmlElement" />.</span></span></summary>
        <returns><span data-ttu-id="dd64d-181"><see langword="DataRow" /> que contiene una representación de <see langword="XmlElement" />; <see langword="null" /> si no hay <see langword="DataRow" /> asociado a <see langword="XmlElement" />.</span><span class="sxs-lookup"><span data-stu-id="dd64d-181">The <see langword="DataRow" /> containing a representation of the <see langword="XmlElement" />; <see langword="null" /> if there is no <see langword="DataRow" /> associated with the <see langword="XmlElement" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="dd64d-182">El ejemplo siguiente modifica el precio del primer libro.</span><span class="sxs-lookup"><span data-stu-id="dd64d-182">The following example modifies the price of the first book.</span></span>  
  
 [!code-cpp[XmlDataDocument.GetRowFromElement#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlDataDocument.GetRowFromElement/CPP/getrow.cpp#1)]
 [!code-csharp[XmlDataDocument.GetRowFromElement#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlDataDocument.GetRowFromElement/CS/getrow.cs#1)]
 [!code-vb[XmlDataDocument.GetRowFromElement#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlDataDocument.GetRowFromElement/VB/getrow.vb#1)]  
  
 <span data-ttu-id="dd64d-183">El ejemplo utiliza los archivos de entrada siguientes:</span><span class="sxs-lookup"><span data-stu-id="dd64d-183">The example uses the following input files:</span></span>  
  
 `2books.xml`  
  
 [!code-xml[Classic WebData XmlDataDocument.DataSet Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlDataDocument.DataSet Example/XML/source.xml#2)]  
  
 `store.xsd`  
  
 [!code-xml[Classic WebData XmlDataDocument.DataSet Example#3](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlDataDocument.DataSet Example/XML/source.xml#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Load">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="dd64d-184">Carga <see langword="XmlDataDocument" /> utilizando el origen de datos especificado y sincroniza <see cref="T:System.Data.DataSet" /> con los datos cargados.</span><span class="sxs-lookup"><span data-stu-id="dd64d-184">Loads the <see langword="XmlDataDocument" /> using the specified data source and synchronizes the <see cref="T:System.Data.DataSet" /> with the loaded data.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="dd64d-185">Para ver los datos XML de forma relacional, primero debe especificar un esquema que se usará para la asignación de datos.</span><span class="sxs-lookup"><span data-stu-id="dd64d-185">In order to view the XML data relationally, you must first specify a schema to use for data mapping.</span></span> <span data-ttu-id="dd64d-186">Esto puede hacerse mediante una llamada a la <xref:System.Data.DataSet.ReadXmlSchema%2A> método o mediante la creación de las tablas y columnas dentro de la `DataSet` manualmente.</span><span class="sxs-lookup"><span data-stu-id="dd64d-186">This can be done either by calling the <xref:System.Data.DataSet.ReadXmlSchema%2A> method or by creating the tables and columns within the `DataSet` manually.</span></span> <span data-ttu-id="dd64d-187">Este paso debe realizarse antes de llamar a `Load`.</span><span class="sxs-lookup"><span data-stu-id="dd64d-187">This step must be done before calling `Load`.</span></span>  
  
 <span data-ttu-id="dd64d-188">`XmlDataDocument` no se admite la creación de referencias de entidad.</span><span class="sxs-lookup"><span data-stu-id="dd64d-188">`XmlDataDocument` does not support creating entity references.</span></span> <span data-ttu-id="dd64d-189">Si los datos incluyen las referencias de entidad, el `Load` método resuelve y expande las referencias a entidades.</span><span class="sxs-lookup"><span data-stu-id="dd64d-189">If the data includes entity references, the `Load` method resolves and expands any entity references.</span></span> <span data-ttu-id="dd64d-190">Sin embargo, si está utilizando el `Load` sobrecarga que toma un <xref:System.Xml.XmlReader> como argumento, se debe especificar un `XmlReader` que pueda resolver entidades.</span><span class="sxs-lookup"><span data-stu-id="dd64d-190">However, if you are using the `Load` overload that takes a <xref:System.Xml.XmlReader> as an argument, you must specify an `XmlReader` that can resolve entities.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public override void Load (System.IO.Stream inStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Load(class System.IO.Stream inStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDataDocument.Load(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Load (inStream As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Load(System::IO::Stream ^ inStream);" />
      <MemberSignature Language="F#" Value="override this.Load : System.IO.Stream -&gt; unit" Usage="xmlDataDocument.Load inStream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="inStream"><span data-ttu-id="dd64d-191">Secuencia que contiene el documento XML que se va a cargar.</span><span class="sxs-lookup"><span data-stu-id="dd64d-191">The stream containing the XML document to load.</span></span></param>
        <summary><span data-ttu-id="dd64d-192">Carga el objeto <see langword="XmlDataDocument" /> desde la secuencia especificada.</span><span class="sxs-lookup"><span data-stu-id="dd64d-192">Loads the <see langword="XmlDataDocument" /> from the specified stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd64d-193">`XmlDataDocument` no se admite la creación de referencias de entidad.</span><span class="sxs-lookup"><span data-stu-id="dd64d-193">`XmlDataDocument` does not support creating entity references.</span></span> <span data-ttu-id="dd64d-194">Si los datos incluyen las referencias de entidad, el `Load` método resuelve y expande las referencias a entidades.</span><span class="sxs-lookup"><span data-stu-id="dd64d-194">If the data includes entity references, the `Load` method resolves and expands any entity references.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="dd64d-195">Para ver los datos XML de forma relacional, primero debe especificar un esquema que se usará para la asignación de datos.</span><span class="sxs-lookup"><span data-stu-id="dd64d-195">In order to view the XML data relationally, you must first specify a schema to use for data mapping.</span></span> <span data-ttu-id="dd64d-196">Esto puede hacerse mediante una llamada a la <xref:System.Data.DataSet.ReadXmlSchema%2A> método o mediante la creación de las tablas y columnas dentro de la `DataSet` manualmente.</span><span class="sxs-lookup"><span data-stu-id="dd64d-196">This can be done either by calling the <xref:System.Data.DataSet.ReadXmlSchema%2A> method or by creating the tables and columns within the `DataSet` manually.</span></span> <span data-ttu-id="dd64d-197">Este paso debe realizarse antes de llamar a `Load`.</span><span class="sxs-lookup"><span data-stu-id="dd64d-197">This step must be done before calling `Load`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public override void Load (System.IO.TextReader txtReader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Load(class System.IO.TextReader txtReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDataDocument.Load(System.IO.TextReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Load (txtReader As TextReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Load(System::IO::TextReader ^ txtReader);" />
      <MemberSignature Language="F#" Value="override this.Load : System.IO.TextReader -&gt; unit" Usage="xmlDataDocument.Load txtReader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="txtReader" Type="System.IO.TextReader" />
      </Parameters>
      <Docs>
        <param name="txtReader"><span data-ttu-id="dd64d-198"><see langword="TextReader" /> que se usa para introducir los datos XML en el documento.</span><span class="sxs-lookup"><span data-stu-id="dd64d-198">The <see langword="TextReader" /> used to feed the XML data into the document.</span></span></param>
        <summary><span data-ttu-id="dd64d-199">Carga <see langword="XmlDataDocument" /> desde el <see cref="T:System.IO.TextReader" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="dd64d-199">Loads the <see langword="XmlDataDocument" /> from the specified <see cref="T:System.IO.TextReader" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd64d-200">`XmlDataDocument` no se admite la creación de referencias de entidad.</span><span class="sxs-lookup"><span data-stu-id="dd64d-200">`XmlDataDocument` does not support creating entity references.</span></span> <span data-ttu-id="dd64d-201">Si los datos incluyen las referencias de entidad, el `Load` método resuelve y expande las referencias a entidades.</span><span class="sxs-lookup"><span data-stu-id="dd64d-201">If the data includes entity references, the `Load` method resolves and expands any entity references.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="dd64d-202">Para ver los datos XML de forma relacional, primero debe especificar un esquema que se usará para la asignación de datos.</span><span class="sxs-lookup"><span data-stu-id="dd64d-202">In order to view the XML data relationally, you must first specify a schema to use for data mapping.</span></span> <span data-ttu-id="dd64d-203">Esto puede hacerse mediante una llamada a la <xref:System.Data.DataSet.ReadXmlSchema%2A> método o mediante la creación de las tablas y columnas dentro de la `DataSet` manualmente.</span><span class="sxs-lookup"><span data-stu-id="dd64d-203">This can be done either by calling the <xref:System.Data.DataSet.ReadXmlSchema%2A> method or by creating the tables and columns within the `DataSet` manually.</span></span> <span data-ttu-id="dd64d-204">Este paso debe realizarse antes de llamar a `Load`.</span><span class="sxs-lookup"><span data-stu-id="dd64d-204">This step must be done before calling `Load`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public override void Load (string filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Load(string filename) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDataDocument.Load(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Load (filename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Load(System::String ^ filename);" />
      <MemberSignature Language="F#" Value="override this.Load : string -&gt; unit" Usage="xmlDataDocument.Load filename" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename"><span data-ttu-id="dd64d-205">Dirección URL del archivo que contiene el documento XML que se va a cargar.</span><span class="sxs-lookup"><span data-stu-id="dd64d-205">The URL of the file containing the XML document to load.</span></span></param>
        <summary><span data-ttu-id="dd64d-206">Carga <see langword="XmlDataDocument" /> utilizando la dirección URL especificada.</span><span class="sxs-lookup"><span data-stu-id="dd64d-206">Loads the <see langword="XmlDataDocument" /> using the specified URL.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd64d-207">`XmlDataDocument` no se admite la creación de referencias de entidad.</span><span class="sxs-lookup"><span data-stu-id="dd64d-207">`XmlDataDocument` does not support creating entity references.</span></span> <span data-ttu-id="dd64d-208">Si los datos incluyen las referencias de entidad, el `Load` método resuelve y expande las referencias a entidades.</span><span class="sxs-lookup"><span data-stu-id="dd64d-208">If the data includes entity references, the `Load` method resolves and expands any entity references.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="dd64d-209">Para ver los datos XML de forma relacional, primero debe especificar un esquema que se usará para la asignación de datos.</span><span class="sxs-lookup"><span data-stu-id="dd64d-209">In order to view the XML data relationally, you must first specify a schema to use for data mapping.</span></span> <span data-ttu-id="dd64d-210">Esto puede hacerse mediante una llamada a la <xref:System.Data.DataSet.ReadXmlSchema%2A> método o mediante la creación de las tablas y columnas dentro de la `DataSet` manualmente.</span><span class="sxs-lookup"><span data-stu-id="dd64d-210">This can be done either by calling the <xref:System.Data.DataSet.ReadXmlSchema%2A> method or by creating the tables and columns within the `DataSet` manually.</span></span> <span data-ttu-id="dd64d-211">Este paso debe realizarse antes de llamar a `Load`.</span><span class="sxs-lookup"><span data-stu-id="dd64d-211">This step must be done before calling `Load`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public override void Load (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Load(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDataDocument.Load(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Load (reader As XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Load(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="override this.Load : System.Xml.XmlReader -&gt; unit" Usage="xmlDataDocument.Load reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="dd64d-212"><see langword="XmlReader" /> que contiene el documento XML que se va a cargar.</span><span class="sxs-lookup"><span data-stu-id="dd64d-212">The <see langword="XmlReader" /> containing the XML document to load.</span></span></param>
        <summary><span data-ttu-id="dd64d-213">Carga <see langword="XmlDataDocument" /> desde el <see cref="T:System.Xml.XmlReader" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="dd64d-213">Loads the <see langword="XmlDataDocument" /> from the specified <see cref="T:System.Xml.XmlReader" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd64d-214">`XmlDataDocument` no se admite la creación de referencias de entidad.</span><span class="sxs-lookup"><span data-stu-id="dd64d-214">`XmlDataDocument` does not support creating entity references.</span></span> <span data-ttu-id="dd64d-215">Si el origen de datos contiene las referencias de entidad, debe crear un <xref:System.Xml.XmlValidatingReader> con el <xref:System.Xml.XmlValidatingReader.EntityHandling%2A> propiedad establecida en EntityHandling.ExpandEntities (que es el comportamiento predeterminado) y pasar la `XmlValidatingReader` a la `Load` método.</span><span class="sxs-lookup"><span data-stu-id="dd64d-215">If the data source contains entity references, you must create an <xref:System.Xml.XmlValidatingReader> with the <xref:System.Xml.XmlValidatingReader.EntityHandling%2A> property set to EntityHandling.ExpandEntities (this is the default behavior) and pass the `XmlValidatingReader` to the `Load` method.</span></span> <span data-ttu-id="dd64d-216">Si no usa un `XmlValidatingReader`, el `Load` método produce una excepción.</span><span class="sxs-lookup"><span data-stu-id="dd64d-216">If you do not use an `XmlValidatingReader`, the `Load` method throws an exception.</span></span>  
  
 <span data-ttu-id="dd64d-217">El `Load` método siempre conserva espacio en blanco significativo.</span><span class="sxs-lookup"><span data-stu-id="dd64d-217">The `Load` method always preserves significant white space.</span></span> <span data-ttu-id="dd64d-218">El <xref:System.Xml.XmlDocument.PreserveWhitespace%2A> propiedad determina si se conserva el espacio en blanco.</span><span class="sxs-lookup"><span data-stu-id="dd64d-218">The <xref:System.Xml.XmlDocument.PreserveWhitespace%2A> property determines whether or not white space is preserved.</span></span> <span data-ttu-id="dd64d-219">El valor predeterminado es `false`, no se conserva el espacio en blanco.</span><span class="sxs-lookup"><span data-stu-id="dd64d-219">The default is `false`, white space is not preserved.</span></span>  
  
 <span data-ttu-id="dd64d-220">Si el lector está en el estado inicial (es decir, ReadState) `Load` consume todo el contenido del lector y genera el DOM a partir de lo que encuentre.</span><span class="sxs-lookup"><span data-stu-id="dd64d-220">If the reader is in the initial state (that is, ReadState=ReadState.Initial), `Load` consumes the entire contents of the reader and builds the DOM from what it finds.</span></span>  
  
 <span data-ttu-id="dd64d-221">Si el lector está situado ya en algún nodo en profundidad "n", este método carga ese nodo y todos los nodos relacionados subsiguientes hasta la etiqueta de cierre que cierra la profundidad "n".</span><span class="sxs-lookup"><span data-stu-id="dd64d-221">If the reader is already positioned on some node at depth "n", then this method loads that node and all subsequent siblings up to the end tag that closes depth "n".</span></span> <span data-ttu-id="dd64d-222">Esto tiene los siguientes resultados.</span><span class="sxs-lookup"><span data-stu-id="dd64d-222">This has the following results.</span></span>  
  
 <span data-ttu-id="dd64d-223">Si el nodo actual y sus elementos relacionados posteriores tener un aspecto similares al siguiente:</span><span class="sxs-lookup"><span data-stu-id="dd64d-223">If the current node and its following siblings look similar to the following:</span></span>  
  
```xml  
<!--comment--><element1>one</element1><element2>two</element2>  
```  
  
 <span data-ttu-id="dd64d-224">`Load` produce una excepción, porque un documento no puede tener dos elementos de nivel de raíz.</span><span class="sxs-lookup"><span data-stu-id="dd64d-224">`Load` throws an exception, because a document cannot have two root-level elements.</span></span> <span data-ttu-id="dd64d-225">Si el nodo actual y sus elementos relacionados posteriores tener un aspecto similares al siguiente:</span><span class="sxs-lookup"><span data-stu-id="dd64d-225">If the current node and its following siblings look similar to the following:</span></span>  
  
```xml  
<!--comment--><?process  
    instruction?><!--comment--></endtag>  
```  
  
 <span data-ttu-id="dd64d-226">`Load` se realiza correctamente; Sin embargo, tendrá un árbol DOM incompleto, porque no hay ningún elemento de nivel de raíz.</span><span class="sxs-lookup"><span data-stu-id="dd64d-226">`Load` will succeed; however, you will have an incomplete DOM tree, because there is no root-level element.</span></span> <span data-ttu-id="dd64d-227">Tiene que agregar un elemento de nivel raíz antes de guardar el documento. en caso contrario, el <xref:System.Xml.XmlDocument.Save%2A> método produce una excepción.</span><span class="sxs-lookup"><span data-stu-id="dd64d-227">You have to add a root-level element before you save the document; otherwise, the <xref:System.Xml.XmlDocument.Save%2A> method throws an exception.</span></span>  
  
 <span data-ttu-id="dd64d-228">Si el sistema de lectura se encuentra situado en un nodo hoja que no es válido para el nivel raíz de un documento (por ejemplo, un nodo de atributos o espacios en blanco), el sistema de lectura continúa leyendo hasta estar situado en un nodo que se pueda utilizar para el nivel raíz.</span><span class="sxs-lookup"><span data-stu-id="dd64d-228">If the reader is positioned on a leaf node that is invalid for the root level of a document (for example, a white space or attribute node), the reader continues to read until it is positioned on a node that can be used for the root.</span></span> <span data-ttu-id="dd64d-229">El documento comienza a cargarse en este punto.</span><span class="sxs-lookup"><span data-stu-id="dd64d-229">The document begins loading at this point.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dd64d-230">En el ejemplo siguiente se modifica el precio de un libro utilizando el `DataSet` métodos.</span><span class="sxs-lookup"><span data-stu-id="dd64d-230">The following example modifies the price of a book using the `DataSet` methods.</span></span>  
  
 [!code-cpp[XmlDataDocument.Load#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlDataDocument.Load/CPP/loadrdr.cpp#1)]
 [!code-csharp[XmlDataDocument.Load#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlDataDocument.Load/CS/loadrdr.cs#1)]
 [!code-vb[XmlDataDocument.Load#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlDataDocument.Load/VB/loadrdr.vb#1)]  
  
 <span data-ttu-id="dd64d-231">El ejemplo utiliza los dos archivos de entrada siguientes.</span><span class="sxs-lookup"><span data-stu-id="dd64d-231">The example uses the following two input files.</span></span>  
  
 `2books.xml`  
  
 [!code-xml[XmlDataDocument.Load#2](~/samples/snippets/xml/VS_Snippets_Data/XmlDataDocument.Load/XML/2books.xml#2)]  
  
 `store.xsd`  
  
 [!code-xml[XmlDataDocument.Load#3](~/samples/snippets/xml/VS_Snippets_Data/XmlDataDocument.Load/XML/test.xsd#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="dd64d-232">El documento XML que se está cargando contiene referencias a entidades y el lector no puede resolver entidades.</span><span class="sxs-lookup"><span data-stu-id="dd64d-232">The XML being loaded contains entity references, and the reader cannot resolve entities.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
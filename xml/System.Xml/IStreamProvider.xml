<Type Name="IStreamProvider" FullName="System.Xml.IStreamProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b7f9bada72f0e036f0fdb2ae93db2c823ab1aa15" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="37729962" /></Metadata><TypeSignature Language="C#" Value="public interface IStreamProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IStreamProvider" />
  <TypeSignature Language="DocId" Value="T:System.Xml.IStreamProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface IStreamProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class IStreamProvider" />
  <TypeSignature Language="F#" Value="type IStreamProvider = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
    <AssemblyVersion>4.1.3.0</AssemblyVersion>
    <AssemblyVersion>4.1.4.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="8d98f-101">Representa una interfaz que se puede implementar mediante clases que proporcionan secuencias.</span><span class="sxs-lookup"><span data-stu-id="8d98f-101">Represents an interface that can be implemented by classes providing streams.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d98f-102">Al escribir un mensaje saliente que contiene un cuerpo transmitido a un sistema de escritura XML, <xref:System.ServiceModel.Channels.Message> utilizará una secuencia de llamadas similar a la siguiente en su implementación <xref:System.ServiceModel.Channels.Message.OnWriteBodyContents%28System.Xml.XmlDictionaryWriter%29>:</span><span class="sxs-lookup"><span data-stu-id="8d98f-102">When writing an outgoing message containing a streamed body to an XML writer, the <xref:System.ServiceModel.Channels.Message> will use a sequence of calls similar to the following in its <xref:System.ServiceModel.Channels.Message.OnWriteBodyContents%28System.Xml.XmlDictionaryWriter%29> implementation:</span></span>  
  
-   <span data-ttu-id="8d98f-103">Escriba cualquier información necesaria que preceda a la secuencia (por ejemplo, la etiqueta de apertura XML).</span><span class="sxs-lookup"><span data-stu-id="8d98f-103">Write any necessary information preceding the stream (For example, the opening XML tag).</span></span>  
  
-   <span data-ttu-id="8d98f-104">Escriba la secuencia.</span><span class="sxs-lookup"><span data-stu-id="8d98f-104">Write the stream.</span></span>  
  
-   <span data-ttu-id="8d98f-105">Escriba cualquier información que siga a la secuencia (por ejemplo, la etiqueta de cierre XML).</span><span class="sxs-lookup"><span data-stu-id="8d98f-105">Write any information following the stream (For example, the closing XML tag).</span></span>  
  
 <span data-ttu-id="8d98f-106">Esto funciona bien con codificaciones similares a la codificación XML textual.</span><span class="sxs-lookup"><span data-stu-id="8d98f-106">This works well with encodings that are similar to the textual XML encoding.</span></span> <span data-ttu-id="8d98f-107">Sin embargo, hay algunas codificaciones que no proporcionan información del conjunto de información (por ejemplo, etiquetas para iniciar y finalizar elementos XML) de XML junto con los datos contenidos en los elementos.</span><span class="sxs-lookup"><span data-stu-id="8d98f-107">However, there are some encodings that do not place XML infoset information (For example, tags for starting and ending XML elements) together with the data contained within elements.</span></span> <span data-ttu-id="8d98f-108">Por ejemplo, para la codificación MTOM, la codificación del mensaje se divide en varias partes.</span><span class="sxs-lookup"><span data-stu-id="8d98f-108">For example, in the MTOM encoding, the message is split into multiple parts.</span></span> <span data-ttu-id="8d98f-109">Una parte contiene el conjunto de información XML, que puede contener referencias a otras partes de contenidos de elementos reales.</span><span class="sxs-lookup"><span data-stu-id="8d98f-109">One part contains the XML infoset, which may contain references to other parts for actual element contents.</span></span> <span data-ttu-id="8d98f-110">Puesto que el conjunto de información XML será normalmente pequeño en comparación con el contenido transmitido, tiene sentido almacenar en búfer el conjunto de información, escribirlo y, a continuación, escribir el contenido de una manera transmitida.</span><span class="sxs-lookup"><span data-stu-id="8d98f-110">Since the XML infoset will normally be small compared to the streamed contents, it makes sense to buffer the infoset, write it out, and then write the contents in a streamed way.</span></span> <span data-ttu-id="8d98f-111">Esto significa que cuando se escribe la etiqueta de elemento de cierre, no deberíamos haber escrito todavía la secuencia.</span><span class="sxs-lookup"><span data-stu-id="8d98f-111">This means that by the time the closing element tag is written, we should not have written out the stream yet.</span></span>  
  
 <span data-ttu-id="8d98f-112">Para este propósito, se utiliza la interfaz <xref:System.Xml.IStreamProvider> .</span><span class="sxs-lookup"><span data-stu-id="8d98f-112">For this purpose, the <xref:System.Xml.IStreamProvider> interface is used.</span></span> <span data-ttu-id="8d98f-113">La interfaz tiene un método <xref:System.Xml.IStreamProvider.GetStream> que devuelve la secuencia que se va a escribir.</span><span class="sxs-lookup"><span data-stu-id="8d98f-113">The interface has a <xref:System.Xml.IStreamProvider.GetStream> method that returns the stream to be written.</span></span> <span data-ttu-id="8d98f-114">La manera correcta de escribir un cuerpo de mensaje transmitido <xref:System.ServiceModel.Channels.Message.OnWriteBodyContents%28System.Xml.XmlDictionaryWriter%29> es la siguiente:</span><span class="sxs-lookup"><span data-stu-id="8d98f-114">The correct way to write out a streamed message body in <xref:System.ServiceModel.Channels.Message.OnWriteBodyContents%28System.Xml.XmlDictionaryWriter%29> is as follows:</span></span>  
  
-   <span data-ttu-id="8d98f-115">Escriba cualquier información necesaria que preceda a la secuencia (por ejemplo, la etiqueta de apertura XML)</span><span class="sxs-lookup"><span data-stu-id="8d98f-115">Write any necessary information preceding the stream (For example, the opening XML tag)</span></span>  
  
-   <span data-ttu-id="8d98f-116">Llame a la sobrecarga `WriteValue` en el <xref:System.Xml.XmlDictionaryWriter> que toma <xref:System.Xml.IStreamProvider>, con una implementación `IStreamProvider` que devuelve la secuencia que se va a escribir.</span><span class="sxs-lookup"><span data-stu-id="8d98f-116">Call the `WriteValue` overload on the <xref:System.Xml.XmlDictionaryWriter> that takes an <xref:System.Xml.IStreamProvider>, with an `IStreamProvider` implementation that returns the stream to be written.</span></span>  
  
-   <span data-ttu-id="8d98f-117">Escriba cualquier información que siga a la secuencia (por ejemplo, la etiqueta de cierre XML)</span><span class="sxs-lookup"><span data-stu-id="8d98f-117">Write any information following the stream (For example, the closing XML tag)</span></span>  
  
 <span data-ttu-id="8d98f-118">Con este enfoque, el sistema de escritura XML puede escoger cuándo llamar <xref:System.Xml.IStreamProvider.GetStream> y escribir los datos transmitidos por secuencias.</span><span class="sxs-lookup"><span data-stu-id="8d98f-118">With this approach, the XML writer has a choice of when to call <xref:System.Xml.IStreamProvider.GetStream> and write out the streamed data.</span></span> <span data-ttu-id="8d98f-119">Por ejemplo, los sistemas de escritura XML textual y binario lo llamarán inmediatamente y escribirán el contenido transmitido entre las etiquetas de cierre e inicio.</span><span class="sxs-lookup"><span data-stu-id="8d98f-119">For example, the textual and binary XML writers will call it immediately and write out the streamed contents in between the start and end tags.</span></span> <span data-ttu-id="8d98f-120">El sistema de escritura de MTOM puede decidir llamar <xref:System.Xml.IStreamProvider.GetStream> posteriormente, cuando esté listo para escribir la parte adecuada del mensaje.</span><span class="sxs-lookup"><span data-stu-id="8d98f-120">The MTOM writer may decide to call <xref:System.Xml.IStreamProvider.GetStream> later, when it is ready to write the appropriate part of the message.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream GetStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream GetStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.IStreamProvider.GetStream" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStream () As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ GetStream();" />
      <MemberSignature Language="F#" Value="abstract member GetStream : unit -&gt; System.IO.Stream" Usage="iStreamProvider.GetStream " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8d98f-121">Obtiene una secuencia.</span><span class="sxs-lookup"><span data-stu-id="8d98f-121">Gets a stream.</span></span></summary>
        <returns><span data-ttu-id="8d98f-122">Un objeto <see cref="T:System.IO.Stream" />.</span><span class="sxs-lookup"><span data-stu-id="8d98f-122">A <see cref="T:System.IO.Stream" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d98f-123">Este método se puede utilizar para recuperar la secuencia que se va a escribir.</span><span class="sxs-lookup"><span data-stu-id="8d98f-123">This method can be used to return the stream to be written.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseStream">
      <MemberSignature Language="C#" Value="public void ReleaseStream (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReleaseStream(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.IStreamProvider.ReleaseStream(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReleaseStream(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="abstract member ReleaseStream : System.IO.Stream -&gt; unit" Usage="iStreamProvider.ReleaseStream stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="8d98f-124">La secuencia que se libera.</span><span class="sxs-lookup"><span data-stu-id="8d98f-124">The stream being released.</span></span></param>
        <summary><span data-ttu-id="8d98f-125">Libera una secuencia para la salida.</span><span class="sxs-lookup"><span data-stu-id="8d98f-125">Releases a stream to output.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
<Type Name="XmlNameTable" FullName="System.Xml.XmlNameTable">
  <Metadata><Meta Name="ms.openlocfilehash" Value="76c0bf7204acf4625cdc60ad69785ec23b3c807a" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58744866" /></Metadata><TypeSignature Language="C#" Value="public abstract class XmlNameTable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit XmlNameTable extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlNameTable" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class XmlNameTable" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlNameTable abstract" />
  <TypeSignature Language="F#" Value="type XmlNameTable = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="69f4a-101">Tabla de objetos en forma de cadena subdividida.</span><span class="sxs-lookup"><span data-stu-id="69f4a-101">Table of atomized string objects.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69f4a-102">Varias clases, como <xref:System.Xml.XmlDocument> y <xref:System.Xml.XmlReader>, utilice el `XmlNameTable` clase internamente para almacenar los nombres de atributo y elemento.</span><span class="sxs-lookup"><span data-stu-id="69f4a-102">Several classes, such as <xref:System.Xml.XmlDocument> and <xref:System.Xml.XmlReader>, use the `XmlNameTable` class internally to store attribute and element names.</span></span> <span data-ttu-id="69f4a-103">Cuando un nombre de atributo o elemento aparece varias veces en un documento XML, se almacena en `XmlNameTable` s칩lo una vez.</span><span class="sxs-lookup"><span data-stu-id="69f4a-103">When an element or attribute name occurs multiple times in an XML document, it is stored only once in the `XmlNameTable`.</span></span>  
  
 <span data-ttu-id="69f4a-104">Los nombres se almacenan como tipos de objetos de Common Language Runtime (CLR).</span><span class="sxs-lookup"><span data-stu-id="69f4a-104">The names are stored as common language runtime (CLR) object types.</span></span> <span data-ttu-id="69f4a-105">Esto permite comparar objetos en estas cadenas en lugar de comparar cadenas, que consume m치s recursos.</span><span class="sxs-lookup"><span data-stu-id="69f4a-105">This enables you to do object comparisons on these strings rather than a more expensive string comparison.</span></span> <span data-ttu-id="69f4a-106">Estos objetos de cadena se conocen como "cadenas subdivididas".</span><span class="sxs-lookup"><span data-stu-id="69f4a-106">These string objects are referred to as "atomized strings".</span></span>  
  
 <span data-ttu-id="69f4a-107">`XmlNameTable` se implementa en el <xref:System.Xml.NameTable> clase.</span><span class="sxs-lookup"><span data-stu-id="69f4a-107">`XmlNameTable` is implemented in the <xref:System.Xml.NameTable> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="69f4a-108">En el ejemplo siguiente se compara dos nombres de elemento.</span><span class="sxs-lookup"><span data-stu-id="69f4a-108">The following example compares two element names.</span></span>  
  
 [!code-csharp[NameTable_v2#1](~/samples/snippets/csharp/VS_Snippets_Data/NameTable_v2/CS/nametable.cs#1)]
 [!code-vb[NameTable_v2#1](~/samples/snippets/visualbasic/VS_Snippets_Data/NameTable_v2/VB/nametable.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xml.NameTable" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected XmlNameTable ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNameTable.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; XmlNameTable();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="69f4a-109">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlNameTable" />.</span><span class="sxs-lookup"><span data-stu-id="69f4a-109">Initializes a new instance of the <see cref="T:System.Xml.XmlNameTable" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="69f4a-110">Cuando se invalida en una clase derivada, subdivide la cadena especificada y la agrega a <see langword="XmlNameTable" />.</span><span class="sxs-lookup"><span data-stu-id="69f4a-110">When overridden in a derived class, atomizes the specified string and adds it to the <see langword="XmlNameTable" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69f4a-111">Para obtener m치s informaci칩n sobre cadenas subdivididas, vea <xref:System.Xml.XmlNameTable>.</span><span class="sxs-lookup"><span data-stu-id="69f4a-111">For more information on atomized strings, see <xref:System.Xml.XmlNameTable>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public abstract string Add (string array);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Add(string array) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNameTable.Add(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Add (array As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ Add(System::String ^ array);" />
      <MemberSignature Language="F#" Value="abstract member Add : string -&gt; string" Usage="xmlNameTable.Add array" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="69f4a-112">Nombre que se va a agregar.</span><span class="sxs-lookup"><span data-stu-id="69f4a-112">The name to add.</span></span></param>
        <summary><span data-ttu-id="69f4a-113">Cuando se invalida en una clase derivada, subdivide la cadena especificada y la agrega a <see langword="XmlNameTable" />.</span><span class="sxs-lookup"><span data-stu-id="69f4a-113">When overridden in a derived class, atomizes the specified string and adds it to the <see langword="XmlNameTable" />.</span></span></summary>
        <returns><span data-ttu-id="69f4a-114">Cadena subdividida nueva o cadena existente si ya hay una.</span><span class="sxs-lookup"><span data-stu-id="69f4a-114">The new atomized string or the existing one if it already exists.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69f4a-115">Para obtener m치s informaci칩n sobre cadenas subdivididas, vea <xref:System.Xml.XmlNameTable>.</span><span class="sxs-lookup"><span data-stu-id="69f4a-115">For more information on atomized strings, see <xref:System.Xml.XmlNameTable>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="69f4a-116"><paramref name="array" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="69f4a-116"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public abstract string Add (char[] array, int offset, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Add(char[] array, int32 offset, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNameTable.Add(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Add (array As Char(), offset As Integer, length As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ Add(cli::array &lt;char&gt; ^ array, int offset, int length);" />
      <MemberSignature Language="F#" Value="abstract member Add : char[] * int * int -&gt; string" Usage="xmlNameTable.Add (array, offset, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Char[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="69f4a-117">Matriz de caracteres que contiene el nombre que se va a agregar.</span><span class="sxs-lookup"><span data-stu-id="69f4a-117">The character array containing the name to add.</span></span></param>
        <param name="offset"><span data-ttu-id="69f4a-118">칈ndice de base cero de la matriz que especifica el primer car치cter del nombre.</span><span class="sxs-lookup"><span data-stu-id="69f4a-118">Zero-based index into the array specifying the first character of the name.</span></span></param>
        <param name="length"><span data-ttu-id="69f4a-119">N칰mero de caracteres del nombre.</span><span class="sxs-lookup"><span data-stu-id="69f4a-119">The number of characters in the name.</span></span></param>
        <summary><span data-ttu-id="69f4a-120">Cuando se invalida en una clase derivada, subdivide la cadena especificada y la agrega a <see langword="XmlNameTable" />.</span><span class="sxs-lookup"><span data-stu-id="69f4a-120">When overridden in a derived class, atomizes the specified string and adds it to the <see langword="XmlNameTable" />.</span></span></summary>
        <returns><span data-ttu-id="69f4a-121">Cadena subdividida nueva o cadena existente si ya hay una.</span><span class="sxs-lookup"><span data-stu-id="69f4a-121">The new atomized string or the existing one if it already exists.</span></span> <span data-ttu-id="69f4a-122">Si la longitud es cero, se devuelve String.Empty.</span><span class="sxs-lookup"><span data-stu-id="69f4a-122">If length is zero, String.Empty is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69f4a-123">Para obtener m치s informaci칩n sobre cadenas subdivididas, vea <xref:System.Xml.XmlNameTable>.</span><span class="sxs-lookup"><span data-stu-id="69f4a-123">For more information on atomized strings, see <xref:System.Xml.XmlNameTable>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="69f4a-124">0 &gt; <paramref name="offset" /></span><span class="sxs-lookup"><span data-stu-id="69f4a-124">0 &gt; <paramref name="offset" /></span></span>  
  
<span data-ttu-id="69f4a-125">O bien</span><span class="sxs-lookup"><span data-stu-id="69f4a-125">-or-</span></span> 
 <span data-ttu-id="69f4a-126"><paramref name="offset" /> &gt;= <paramref name="array" />.Length</span><span class="sxs-lookup"><span data-stu-id="69f4a-126"><paramref name="offset" /> &gt;= <paramref name="array" />.Length</span></span> 
<span data-ttu-id="69f4a-127">O bien</span><span class="sxs-lookup"><span data-stu-id="69f4a-127">-or-</span></span> 
 <span data-ttu-id="69f4a-128"><paramref name="length" /> &gt; <paramref name="array" />.Length</span><span class="sxs-lookup"><span data-stu-id="69f4a-128"><paramref name="length" /> &gt; <paramref name="array" />.Length</span></span> 
<span data-ttu-id="69f4a-129">Las condiciones anteriores no hacen que se produzca una excepci칩n si <paramref name="length" /> = 0.</span><span class="sxs-lookup"><span data-stu-id="69f4a-129">The above conditions do not cause an exception to be thrown if <paramref name="length" /> =0.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="69f4a-130"><paramref name="length" /> &lt; 0.</span><span class="sxs-lookup"><span data-stu-id="69f4a-130"><paramref name="length" /> &lt; 0.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Get">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="69f4a-131">Cuando se invalida en una clase derivada, obtiene la cadena subdividida.</span><span class="sxs-lookup"><span data-stu-id="69f4a-131">When overridden in a derived class, gets the atomized string.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69f4a-132">Para obtener m치s informaci칩n sobre cadenas subdivididas, vea <xref:System.Xml.XmlNameTable>.</span><span class="sxs-lookup"><span data-stu-id="69f4a-132">For more information on atomized strings, see <xref:System.Xml.XmlNameTable>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public abstract string Get (string array);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Get(string array) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNameTable.Get(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Get (array As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ Get(System::String ^ array);" />
      <MemberSignature Language="F#" Value="abstract member Get : string -&gt; string" Usage="xmlNameTable.Get array" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="69f4a-133">Nombre que se va a buscar.</span><span class="sxs-lookup"><span data-stu-id="69f4a-133">The name to look up.</span></span></param>
        <summary><span data-ttu-id="69f4a-134">Cuando se invalida en una clase derivada, obtiene la cadena subdividida que contiene el mismo valor que la cadena especificada.</span><span class="sxs-lookup"><span data-stu-id="69f4a-134">When overridden in a derived class, gets the atomized string containing the same value as the specified string.</span></span></summary>
        <returns><span data-ttu-id="69f4a-135">Cadena subdividida o <see langword="null" /> si la cadena no se ha subdividido todav칤a.</span><span class="sxs-lookup"><span data-stu-id="69f4a-135">The atomized string or <see langword="null" /> if the string has not already been atomized.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69f4a-136">Para obtener m치s informaci칩n sobre cadenas subdivididas, vea <xref:System.Xml.XmlNameTable>.</span><span class="sxs-lookup"><span data-stu-id="69f4a-136">For more information on atomized strings, see <xref:System.Xml.XmlNameTable>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="69f4a-137"><paramref name="array" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="69f4a-137"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public abstract string Get (char[] array, int offset, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Get(char[] array, int32 offset, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNameTable.Get(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Get (array As Char(), offset As Integer, length As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ Get(cli::array &lt;char&gt; ^ array, int offset, int length);" />
      <MemberSignature Language="F#" Value="abstract member Get : char[] * int * int -&gt; string" Usage="xmlNameTable.Get (array, offset, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Char[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="69f4a-138">Matriz de caracteres que contiene el nombre que se va a buscar.</span><span class="sxs-lookup"><span data-stu-id="69f4a-138">The character array containing the name to look up.</span></span></param>
        <param name="offset"><span data-ttu-id="69f4a-139">칈ndice de base cero de la matriz que especifica el primer car치cter del nombre.</span><span class="sxs-lookup"><span data-stu-id="69f4a-139">The zero-based index into the array specifying the first character of the name.</span></span></param>
        <param name="length"><span data-ttu-id="69f4a-140">N칰mero de caracteres del nombre.</span><span class="sxs-lookup"><span data-stu-id="69f4a-140">The number of characters in the name.</span></span></param>
        <summary><span data-ttu-id="69f4a-141">Cuando se invalida en una clase derivada, se obtiene la cadena subdividida que contiene los mismos caracteres que el intervalo de caracteres especificado en una matriz determinada.</span><span class="sxs-lookup"><span data-stu-id="69f4a-141">When overridden in a derived class, gets the atomized string containing the same characters as the specified range of characters in the given array.</span></span></summary>
        <returns><span data-ttu-id="69f4a-142">Cadena subdividida o <see langword="null" /> si la cadena no se ha subdividido todav칤a.</span><span class="sxs-lookup"><span data-stu-id="69f4a-142">The atomized string or <see langword="null" /> if the string has not already been atomized.</span></span> <span data-ttu-id="69f4a-143">Si <paramref name="length" /> es cero, se devuelve String.Empty.</span><span class="sxs-lookup"><span data-stu-id="69f4a-143">If <paramref name="length" /> is zero, String.Empty is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69f4a-144">Para obtener m치s informaci칩n sobre cadenas subdivididas, vea <xref:System.Xml.XmlNameTable>.</span><span class="sxs-lookup"><span data-stu-id="69f4a-144">For more information on atomized strings, see <xref:System.Xml.XmlNameTable>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="69f4a-145">0 &gt; <paramref name="offset" /></span><span class="sxs-lookup"><span data-stu-id="69f4a-145">0 &gt; <paramref name="offset" /></span></span>  
  
<span data-ttu-id="69f4a-146">O bien</span><span class="sxs-lookup"><span data-stu-id="69f4a-146">-or-</span></span> 
 <span data-ttu-id="69f4a-147"><paramref name="offset" /> &gt;= <paramref name="array" />.Length</span><span class="sxs-lookup"><span data-stu-id="69f4a-147"><paramref name="offset" /> &gt;= <paramref name="array" />.Length</span></span> 
<span data-ttu-id="69f4a-148">O bien</span><span class="sxs-lookup"><span data-stu-id="69f4a-148">-or-</span></span> 
 <span data-ttu-id="69f4a-149"><paramref name="length" /> &gt; <paramref name="array" />.Length</span><span class="sxs-lookup"><span data-stu-id="69f4a-149"><paramref name="length" /> &gt; <paramref name="array" />.Length</span></span> 
<span data-ttu-id="69f4a-150">Las condiciones anteriores no hacen que se produzca una excepci칩n si <paramref name="length" /> = 0.</span><span class="sxs-lookup"><span data-stu-id="69f4a-150">The above conditions do not cause an exception to be thrown if <paramref name="length" /> =0.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="69f4a-151"><paramref name="length" /> &lt; 0.</span><span class="sxs-lookup"><span data-stu-id="69f4a-151"><paramref name="length" /> &lt; 0.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
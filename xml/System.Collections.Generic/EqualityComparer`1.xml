<Type Name="EqualityComparer&lt;T&gt;" FullName="System.Collections.Generic.EqualityComparer&lt;T&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7115ac76f3ee3566b43f41fa0c15b44031985ef2" />
    <Meta Name="ms.sourcegitcommit" Value="c0c07dbd19cd7017243f9ac36915755f79bc8da6" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="11/27/2018" />
    <Meta Name="ms.locfileid" Value="52342044" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class EqualityComparer&lt;T&gt; : System.Collections.Generic.IEqualityComparer&lt;T&gt;, System.Collections.IEqualityComparer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit EqualityComparer`1&lt;T&gt; extends System.Object implements class System.Collections.Generic.IEqualityComparer`1&lt;!T&gt;, class System.Collections.IEqualityComparer" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Generic.EqualityComparer`1" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class EqualityComparer(Of T)&#xA;Implements IEqualityComparer, IEqualityComparer(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class EqualityComparer abstract : System::Collections::Generic::IEqualityComparer&lt;T&gt;, System::Collections::IEqualityComparer" />
  <TypeSignature Language="F#" Value="type EqualityComparer&lt;'T&gt; = class&#xA;    interface IEqualityComparer&#xA;    interface IEqualityComparer&lt;'T&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Collections</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEqualityComparer&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEqualityComparer</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="T">
      <span data-ttu-id="e1342-101">Tipo de objetos que se van a comparar.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e1342-101">The type of objects to compare.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="e1342-102">Proporciona una clase base para las implementaciones de la interfaz genérica <see cref="T:System.Collections.Generic.IEqualityComparer`1" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e1342-102">Provides a base class for implementations of the <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> generic interface.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1342-103">Derivar de esta clase para proporcionar una implementación personalizada de la <xref:System.Collections.Generic.IEqualityComparer%601> interfaz genérica para su uso con la colección de clases como la <xref:System.Collections.Generic.Dictionary%602> clase genérica, o con métodos como <xref:System.Collections.Generic.List%601.Sort%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="e1342-103">Derive from this class to provide a custom implementation of the <xref:System.Collections.Generic.IEqualityComparer%601> generic interface for use with collection classes such as the <xref:System.Collections.Generic.Dictionary%602> generic class, or with methods such as <xref:System.Collections.Generic.List%601.Sort%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="e1342-104">El <xref:System.Collections.Generic.EqualityComparer%601.Default%2A> propiedad comprueba si tipo `T` implementa el <xref:System.IEquatable%601?displayProperty=nameWithType> interfaz genérica y, si es así, devuelve un <xref:System.Collections.Generic.EqualityComparer%601> que llama a la implementación de la <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="e1342-104">The <xref:System.Collections.Generic.EqualityComparer%601.Default%2A> property checks whether type `T` implements the <xref:System.IEquatable%601?displayProperty=nameWithType> generic interface and, if so, returns an <xref:System.Collections.Generic.EqualityComparer%601> that invokes the implementation of the <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="e1342-105">De lo contrario, devuelve un <xref:System.Collections.Generic.EqualityComparer%601>, tal como lo proporciona `T`.</span><span class="sxs-lookup"><span data-stu-id="e1342-105">Otherwise, it returns an <xref:System.Collections.Generic.EqualityComparer%601>, as provided by `T`.</span></span>  
  
 <span data-ttu-id="e1342-106">Se recomienda derivar desde la <xref:System.Collections.Generic.EqualityComparer%601> clase en lugar de implementar la <xref:System.Collections.Generic.IEqualityComparer%601> interfaz, porque el <xref:System.Collections.Generic.EqualityComparer%601> las pruebas de igualdad mediante la clase el <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType> método en lugar de la <xref:System.Object.Equals%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="e1342-106">We recommend that you derive from the <xref:System.Collections.Generic.EqualityComparer%601> class instead of implementing the <xref:System.Collections.Generic.IEqualityComparer%601> interface, because the <xref:System.Collections.Generic.EqualityComparer%601> class tests for equality using the <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType> method instead of the <xref:System.Object.Equals%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="e1342-107">Esto es coherente con la `Contains`, `IndexOf`, `LastIndexOf`, y `Remove` métodos de la <xref:System.Collections.Generic.Dictionary%602> clase y otras colecciones genéricas.</span><span class="sxs-lookup"><span data-stu-id="e1342-107">This is consistent with the `Contains`, `IndexOf`, `LastIndexOf`, and `Remove` methods of the <xref:System.Collections.Generic.Dictionary%602> class and other generic collections.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e1342-108">En el ejemplo siguiente se crea una colección de diccionario de objetos de tipo `Box` con un comparador de igualdad.</span><span class="sxs-lookup"><span data-stu-id="e1342-108">The following example creates a dictionary collection of objects of type `Box` with an equality comparer.</span></span> <span data-ttu-id="e1342-109">Dos cuadros se consideran iguales si sus dimensiones son iguales.</span><span class="sxs-lookup"><span data-stu-id="e1342-109">Two boxes are considered equal if their dimensions are the same.</span></span> <span data-ttu-id="e1342-110">A continuación, agrega los cuadros a la colección.</span><span class="sxs-lookup"><span data-stu-id="e1342-110">It then adds the boxes to the collection.</span></span>  
  
 <span data-ttu-id="e1342-111">Se vuelve a crear el diccionario con un comparador de igualdad que define la igualdad de manera diferente: dos cuadros se consideran iguales si sus volúmenes son iguales.</span><span class="sxs-lookup"><span data-stu-id="e1342-111">The dictionary is recreated with an equality comparer that defines equality in a different way: Two boxes are considered equal if their volumes are the same.</span></span>  
  
 [!code-csharp[System.Collections.Generic.EqualityComparer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.equalitycomparer/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.EqualityComparer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.equalitycomparer/vb/program.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Collections.Generic.IEqualityComparer`1" />
    <altmember cref="T:System.IEquatable`1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EqualityComparer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.EqualityComparer`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; EqualityComparer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e1342-112">Inicializa una nueva instancia de la clase <see cref="T:System.Collections.Generic.EqualityComparer`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1342-112">Initializes a new instance of the <see cref="T:System.Collections.Generic.EqualityComparer`1" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.EqualityComparer&lt;T&gt; Default { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.EqualityComparer`1&lt;!T&gt; Default" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.EqualityComparer`1.Default" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Default As EqualityComparer(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Collections::Generic::EqualityComparer&lt;T&gt; ^ Default { System::Collections::Generic::EqualityComparer&lt;T&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Default : System.Collections.Generic.EqualityComparer&lt;'T&gt;" Usage="System.Collections.Generic.EqualityComparer&lt;'T&gt;.Default" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.EqualityComparer&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e1342-113">Devuelve un comparador de igualdad predeterminado para el tipo especificado por el argumento genérico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1342-113">Returns a default equality comparer for the type specified by the generic argument.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e1342-114">Instancia predeterminada de la clase <see cref="T:System.Collections.Generic.EqualityComparer`1" /> para el tipo <typeparamref name="T" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1342-114">The default instance of the <see cref="T:System.Collections.Generic.EqualityComparer`1" /> class for type <typeparamref name="T" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1342-115">El <xref:System.Collections.Generic.EqualityComparer%601.Default%2A> propiedad comprueba si tipo `T` implementa el <xref:System.IEquatable%601?displayProperty=nameWithType> interfaz y, si es así, devuelve un <xref:System.Collections.Generic.EqualityComparer%601> que utiliza esa implementación.</span><span class="sxs-lookup"><span data-stu-id="e1342-115">The <xref:System.Collections.Generic.EqualityComparer%601.Default%2A> property checks whether type `T` implements the <xref:System.IEquatable%601?displayProperty=nameWithType> interface and, if so, returns an <xref:System.Collections.Generic.EqualityComparer%601> that uses that implementation.</span></span> <span data-ttu-id="e1342-116">De lo contrario, devuelve un <xref:System.Collections.Generic.EqualityComparer%601> que usa los reemplazos de <xref:System.Object.Equals%2A?displayProperty=nameWithType> y <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> proporcionada por `T`.</span><span class="sxs-lookup"><span data-stu-id="e1342-116">Otherwise, it returns an <xref:System.Collections.Generic.EqualityComparer%601> that uses the overrides of <xref:System.Object.Equals%2A?displayProperty=nameWithType> and <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> provided by `T`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e1342-117">En el ejemplo siguiente se crea una colección que contiene los elementos de la `Box` escriba y, a continuación, busca un cuadro de coincidencia de otro cuadro mediante una llamada a la `FindFirst` método dos veces.</span><span class="sxs-lookup"><span data-stu-id="e1342-117">The following example creates a collection that contains elements of the `Box` type and then searches it for a box matching another box by calling the `FindFirst` method, twice.</span></span>
  
 <span data-ttu-id="e1342-118">La primera búsqueda no especifica ningún comparador de igualdad, lo que significa `FindFirst` utiliza <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> para determinar la igualdad de los cuadros.</span><span class="sxs-lookup"><span data-stu-id="e1342-118">The first search does not specify any equality comparer, which means `FindFirst` uses <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> to determine equality of boxes.</span></span> <span data-ttu-id="e1342-119">Que a su vez utiliza la implementación de la <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType> método en el `Box` clase.</span><span class="sxs-lookup"><span data-stu-id="e1342-119">That in turn uses the implementation of the <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType> method in the `Box` class.</span></span> <span data-ttu-id="e1342-120">Dos cuadros se consideran iguales si sus dimensiones son iguales.</span><span class="sxs-lookup"><span data-stu-id="e1342-120">Two boxes are considered equal if their dimensions are the same.</span></span>
  
 <span data-ttu-id="e1342-121">La segunda búsqueda especifica un comparador de igualdad (`BoxEqVolume`) que define la igualdad según el volumen.</span><span class="sxs-lookup"><span data-stu-id="e1342-121">The second search specifies an equality comparer (`BoxEqVolume`) that defines equality by volume.</span></span> <span data-ttu-id="e1342-122">Dos cuadros se consideran iguales si sus volúmenes son iguales.</span><span class="sxs-lookup"><span data-stu-id="e1342-122">Two boxes are considered equal if their volumes are the same.</span></span>
  
 [!code-csharp[System.Collections.Generic.EqualityComparer.Default#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.equalitycomparer.default/cs/program.cs)]
 [!code-vb[System.Collections.Generic.EqualityComparer.Default#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.equalitycomparer.default/vb/program.vb)]
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.IEqualityComparer`1" />
        <altmember cref="T:System.IEquatable`1" />
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public abstract bool Equals (T x, T y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(!T x, !T y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Equals (x As T, y As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool Equals(T x, T y);" />
      <MemberSignature Language="F#" Value="override this.Equals : 'T * 'T -&gt; bool" Usage="equalityComparer.Equals (x, y)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="T" />
        <Parameter Name="y" Type="T" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="e1342-123">Primer objeto que se va a comparar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1342-123">The first object to compare.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="e1342-124">Segundo objeto que se va a comparar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1342-124">The second object to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e1342-125">Cuando se reemplaza en una clase derivada, determina si dos objetos de tipo <typeparamref name="T" /> son iguales.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1342-125">When overridden in a derived class, determines whether two objects of type <typeparamref name="T" /> are equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e1342-126">
            <see langword="true" /> si los objetos especificados son iguales; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1342-126">
              <see langword="true" /> if the specified objects are equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1342-127">El <xref:System.Collections.Generic.EqualityComparer%601.Equals%2A> método es simétrico, reflexivo y transitivo.</span><span class="sxs-lookup"><span data-stu-id="e1342-127">The <xref:System.Collections.Generic.EqualityComparer%601.Equals%2A> method is reflexive, symmetric, and transitive.</span></span> <span data-ttu-id="e1342-128">Es decir, devuelve `true` si se usa para comparar un objeto consigo misma; `true` para dos objetos `x` y `y` si es `true` para `y` y `x`; y `true` para dos objetos `x` y `z` si es `true` para `x` y `y` y también `true` para `y` y `z`.</span><span class="sxs-lookup"><span data-stu-id="e1342-128">That is, it returns `true` if used to compare an object with itself; `true` for two objects `x` and `y` if it is `true` for `y` and `x`; and `true` for two objects `x` and `z` if it is `true` for `x` and `y` and also `true` for `y` and `z`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="e1342-129">Las implementaciones son necesarias para garantizar que si el <see cref="M:System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)" /> devuelve del método <see langword="true" /> para dos objetos <paramref name="x" /> y <paramref name="y" />, a continuación, el valor devuelto por la <see cref="M:System.Collections.Generic.EqualityComparer`1.GetHashCode(`0)" /> método para <paramref name="x" /> debe ser igual al valor devuelto para <paramref name="y" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e1342-129">Implementations are required to ensure that if the <see cref="M:System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)" /> method returns <see langword="true" /> for two objects <paramref name="x" /> and <paramref name="y" />, then the value returned by the <see cref="M:System.Collections.Generic.EqualityComparer`1.GetHashCode(`0)" /> method for <paramref name="x" /> must equal the value returned for <paramref name="y" />.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public abstract int GetHashCode (T obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHashCode(!T obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.EqualityComparer`1.GetHashCode(`0)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetHashCode (obj As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetHashCode(T obj);" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : 'T -&gt; int" Usage="equalityComparer.GetHashCode obj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="T" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="e1342-130">Objeto para el que se va a obtener un código hash.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1342-130">The object for which to get a hash code.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e1342-131">Cuando se reemplaza en una clase derivada sirve como función hash para los objetos especificados para los algoritmos hash y las estructuras de datos, como las tablas hash.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1342-131">When overridden in a derived class, serves as a hash function for the specified object for hashing algorithms and data structures, such as a hash table.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e1342-132">Código hash para el objeto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1342-132">A hash code for the specified object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e1342-133">El tipo de <paramref name="obj" /> es un tipo de referencia y <paramref name="obj" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1342-133">The type of <paramref name="obj" /> is a reference type and <paramref name="obj" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="e1342-134">Las implementaciones son necesarias para garantizar que si el <see cref="M:System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)" /> devuelve del método <see langword="true" /> para dos objetos <paramref name="x" /> y <paramref name="y" />, a continuación, el valor devuelto por la <see cref="M:System.Collections.Generic.EqualityComparer`1.GetHashCode(`0)" /> método para <paramref name="x" /> debe ser igual al valor devuelto para <paramref name="y" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e1342-134">Implementations are required to ensure that if the <see cref="M:System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)" /> method returns <see langword="true" /> for two objects <paramref name="x" /> and <paramref name="y" />, then the value returned by the <see cref="M:System.Collections.Generic.EqualityComparer`1.GetHashCode(`0)" /> method for <paramref name="x" /> must equal the value returned for <paramref name="y" />.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEqualityComparer.Equals">
      <MemberSignature Language="C#" Value="bool IEqualityComparer.Equals (object x, object y);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IEqualityComparer.Equals(object x, object y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.EqualityComparer`1.System#Collections#IEqualityComparer#Equals(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Equals (x As Object, y As Object) As Boolean Implements IEqualityComparer.Equals" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IEqualityComparer.Equals(System::Object ^ x, System::Object ^ y) = System::Collections::IEqualityComparer::Equals;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEqualityComparer.Equals(System.Object,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Object" />
        <Parameter Name="y" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="e1342-135">Primer objeto que se va a comparar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1342-135">The first object to compare.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="e1342-136">Segundo objeto que se va a comparar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1342-136">The second object to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e1342-137">Determina si los objetos especificados son iguales.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1342-137">Determines whether the specified objects are equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e1342-138">
            <see langword="true" /> si los objetos especificados son iguales; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1342-138">
              <see langword="true" /> if the specified objects are equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1342-139">Este método es un contenedor para el <xref:System.Collections.Generic.EqualityComparer%601.Equals%28%600%2C%600%29> método, por lo que `obj` debe convertirse al tipo especificado por el argumento genérico `T` de la instancia actual.</span><span class="sxs-lookup"><span data-stu-id="e1342-139">This method is a wrapper for the <xref:System.Collections.Generic.EqualityComparer%601.Equals%28%600%2C%600%29> method, so `obj` must be cast to the type specified by the generic argument `T` of the current instance.</span></span> <span data-ttu-id="e1342-140">Si no se puede convertir a `T`, un <xref:System.ArgumentException> se produce.</span><span class="sxs-lookup"><span data-stu-id="e1342-140">If it cannot be cast to `T`, an <xref:System.ArgumentException> is thrown.</span></span>  
  
 <span data-ttu-id="e1342-141">Comparar `null` está permitido y no genera una excepción.</span><span class="sxs-lookup"><span data-stu-id="e1342-141">Comparing `null` is allowed and does not generate an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e1342-142">El tipo de <paramref name="x" /> o <paramref name="y" /> no se puede convertir al tipo <typeparamref name="T" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1342-142">
              <paramref name="x" /> or <paramref name="y" /> is of a type that cannot be cast to type <typeparamref name="T" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEqualityComparer.GetHashCode">
      <MemberSignature Language="C#" Value="int IEqualityComparer.GetHashCode (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IEqualityComparer.GetHashCode(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.EqualityComparer`1.System#Collections#IEqualityComparer#GetHashCode(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function GetHashCode (obj As Object) As Integer Implements IEqualityComparer.GetHashCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IEqualityComparer.GetHashCode(System::Object ^ obj) = System::Collections::IEqualityComparer::GetHashCode;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEqualityComparer.GetHashCode(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="e1342-143">
            <see cref="T:System.Object" /> para el que se va a devolver un código hash.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1342-143">The <see cref="T:System.Object" /> for which a hash code is to be returned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e1342-144">Devuelve un código hash para el objeto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1342-144">Returns a hash code for the specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e1342-145">Código hash para el objeto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1342-145">A hash code for the specified object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1342-146">Este método es un contenedor para el <xref:System.Collections.Generic.EqualityComparer%601.GetHashCode%28%600%29> método, por lo que `obj` debe ser un tipo que se puede convertir al tipo especificado por el argumento de tipo genérico `T` de la instancia actual.</span><span class="sxs-lookup"><span data-stu-id="e1342-146">This method is a wrapper for the <xref:System.Collections.Generic.EqualityComparer%601.GetHashCode%28%600%29> method, so `obj` must be a type that can be cast to the type specified by the generic type argument `T` of the current instance.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e1342-147">El tipo de <paramref name="obj" /> es un tipo de referencia y <paramref name="obj" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1342-147">The type of <paramref name="obj" /> is a reference type and <paramref name="obj" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="e1342-148">O bien</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1342-148">-or-</span>
          </span>
          <span data-ttu-id="e1342-149">El tipo de <paramref name="obj" /> no se puede convertir al tipo <typeparamref name="T" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1342-149">
              <paramref name="obj" /> is of a type that cannot be cast to type <typeparamref name="T" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>
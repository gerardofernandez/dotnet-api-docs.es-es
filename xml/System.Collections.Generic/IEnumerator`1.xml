<Type Name="IEnumerator&lt;T&gt;" FullName="System.Collections.Generic.IEnumerator&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5390581ed5675b3092655fe58078f370167b3b67" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37701472" /></Metadata><TypeSignature Language="C#" Value="public interface IEnumerator&lt;out T&gt; : IDisposable, System.Collections.IEnumerator" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IEnumerator`1&lt;+ T&gt; implements class System.Collections.IEnumerator, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Generic.IEnumerator`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IEnumerator(Of Out T)&#xA;Implements IDisposable, IEnumerator" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public interface class IEnumerator : IDisposable, System::Collections::IEnumerator" />
  <TypeSignature Language="F#" Value="type IEnumerator&lt;'T&gt; = interface&#xA;    interface IDisposable&#xA;    interface IEnumerator" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <ParameterAttribute>Covariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerator</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T"><span data-ttu-id="5b4e3-101">Tipo de los objetos que se van a enumerar.</span><span class="sxs-lookup"><span data-stu-id="5b4e3-101">The type of objects to enumerate.</span></span></typeparam>
    <summary><span data-ttu-id="5b4e3-102">Admite una iteración simple en una colección genérica.</span><span class="sxs-lookup"><span data-stu-id="5b4e3-102">Supports a simple iteration over a generic collection.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5b4e3-103"><xref:System.Collections.Generic.IEnumerator%601> es la interfaz base para todos los enumeradores genéricos.</span><span class="sxs-lookup"><span data-stu-id="5b4e3-103"><xref:System.Collections.Generic.IEnumerator%601> is the base interface for all generic enumerators.</span></span>  
  
 <span data-ttu-id="5b4e3-104">El `foreach` instrucción del lenguaje C# (`for each` en C++, `For Each` en Visual Basic) oculta la complejidad de los enumeradores.</span><span class="sxs-lookup"><span data-stu-id="5b4e3-104">The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="5b4e3-105">Por lo tanto, se recomienda el uso de `foreach`, en lugar de manipular directamente el enumerador.</span><span class="sxs-lookup"><span data-stu-id="5b4e3-105">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="5b4e3-106">Los enumeradores pueden usarse para leer los datos de la colección, pero no para modificar la colección subyacente.</span><span class="sxs-lookup"><span data-stu-id="5b4e3-106">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="5b4e3-107">En principio, el enumerador se coloca antes del primer elemento de la colección.</span><span class="sxs-lookup"><span data-stu-id="5b4e3-107">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="5b4e3-108">En esta posición, el valor de propiedad <xref:System.Collections.Generic.IEnumerator%601.Current%2A> está sin definir.</span><span class="sxs-lookup"><span data-stu-id="5b4e3-108">At this position, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> is undefined.</span></span> <span data-ttu-id="5b4e3-109">Por lo tanto, debe llamar a <xref:System.Collections.IEnumerator.MoveNext%2A> para adelantar el enumerador hasta el primer elemento de la colección antes de leer el valor de <xref:System.Collections.Generic.IEnumerator%601.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="5b4e3-109">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Generic.IEnumerator%601.Current%2A>.</span></span>  
  
 <span data-ttu-id="5b4e3-110"><xref:System.Collections.Generic.IEnumerator%601.Current%2A> devuelve el mismo objeto hasta que se llama a <xref:System.Collections.IEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="5b4e3-110"><xref:System.Collections.Generic.IEnumerator%601.Current%2A> returns the same object until <xref:System.Collections.IEnumerator.MoveNext%2A> is called.</span></span> <span data-ttu-id="5b4e3-111"><xref:System.Collections.IEnumerator.MoveNext%2A> establece <xref:System.Collections.Generic.IEnumerator%601.Current%2A> en el siguiente elemento.</span><span class="sxs-lookup"><span data-stu-id="5b4e3-111"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.Generic.IEnumerator%601.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="5b4e3-112">Si <xref:System.Collections.IEnumerator.MoveNext%2A> pasa el final de la colección, el enumerador se coloca después del último elemento de la colección y <xref:System.Collections.IEnumerator.MoveNext%2A> devuelve `false`.</span><span class="sxs-lookup"><span data-stu-id="5b4e3-112">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="5b4e3-113">Cuando el enumerador está en esta posición, las llamadas subsiguientes a <xref:System.Collections.IEnumerator.MoveNext%2A> también devolver `false`.</span><span class="sxs-lookup"><span data-stu-id="5b4e3-113">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="5b4e3-114">Si la última llamada a <xref:System.Collections.IEnumerator.MoveNext%2A> devuelve `false`, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> es indefinido.</span><span class="sxs-lookup"><span data-stu-id="5b4e3-114">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> is undefined.</span></span> <span data-ttu-id="5b4e3-115">No puede volver a establecer la propiedad <xref:System.Collections.Generic.IEnumerator%601.Current%2A> en el primer elemento de la colección, sino que debe crear una nueva instancia del enumerador.</span><span class="sxs-lookup"><span data-stu-id="5b4e3-115">You cannot set <xref:System.Collections.Generic.IEnumerator%601.Current%2A> to the first element of the collection again; you must create a new enumerator instance instead.</span></span>  
  
 <span data-ttu-id="5b4e3-116">El <xref:System.Collections.IEnumerator.Reset%2A> método se proporciona para interoperabilidad COM.</span><span class="sxs-lookup"><span data-stu-id="5b4e3-116">The <xref:System.Collections.IEnumerator.Reset%2A> method is provided for COM interoperability.</span></span> <span data-ttu-id="5b4e3-117">No es necesario implementar; en su lugar, el implementador puede producir un <xref:System.NotSupportedException>.</span><span class="sxs-lookup"><span data-stu-id="5b4e3-117">It does not necessarily need to be implemented; instead, the implementer can simply throw a <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="5b4e3-118">Sin embargo, si decide hacerlo, debe asegurarse de que no confían en ningún llamadores la <xref:System.Collections.IEnumerator.Reset%2A> funcionalidad.</span><span class="sxs-lookup"><span data-stu-id="5b4e3-118">However, if you choose to do this, you should make sure no callers are relying on the <xref:System.Collections.IEnumerator.Reset%2A> functionality.</span></span>  
  
 <span data-ttu-id="5b4e3-119">Si se realizan cambios en la colección, como agregar, modificar o eliminar elementos, el comportamiento del enumerador es indefinido.</span><span class="sxs-lookup"><span data-stu-id="5b4e3-119">If changes are made to the collection, such as adding, modifying, or deleting elements, the behavior of the enumerator is undefined.</span></span>  
  
 <span data-ttu-id="5b4e3-120">El enumerador no tiene acceso exclusivo a la colección y, por tanto, la enumeración en una colección no es intrínsicamente un procedimiento seguro para subprocesos.</span><span class="sxs-lookup"><span data-stu-id="5b4e3-120">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="5b4e3-121">A fin de garantizar la seguridad de los subprocesos, se puede bloquear la colección durante toda la enumeración.</span><span class="sxs-lookup"><span data-stu-id="5b4e3-121">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span> <span data-ttu-id="5b4e3-122">Para permitir que varios subprocesos obtengan acceso de lectura y escritura a la colección, debe implementar su propia sincronización.</span><span class="sxs-lookup"><span data-stu-id="5b4e3-122">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="5b4e3-123">Las implementaciones predeterminadas de las colecciones del espacio de nombres <xref:System.Collections.Generic?displayProperty=nameWithType> no están sincronizadas.</span><span class="sxs-lookup"><span data-stu-id="5b4e3-123">Default implementations of collections in the <xref:System.Collections.Generic?displayProperty=nameWithType> namespace are not synchronized.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5b4e3-124">El ejemplo siguiente muestra una implementación de la <xref:System.Collections.Generic.IEnumerator%601> interfaz para una clase de colección de objetos personalizados.</span><span class="sxs-lookup"><span data-stu-id="5b4e3-124">The following example shows an implementation of the <xref:System.Collections.Generic.IEnumerator%601> interface for a collection class of custom objects.</span></span> <span data-ttu-id="5b4e3-125">El objeto personalizado es una instancia del tipo `Box`, y es la clase de colección `BoxCollection`.</span><span class="sxs-lookup"><span data-stu-id="5b4e3-125">The custom object is an instance of the type `Box`, and the collection class is `BoxCollection`.</span></span> <span data-ttu-id="5b4e3-126">Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Collections.Generic.ICollection%601> interfaz.</span><span class="sxs-lookup"><span data-stu-id="5b4e3-126">This code example is part of a larger example provided for the <xref:System.Collections.Generic.ICollection%601> interface.</span></span>  
  
 [!code-csharp[System.Collections.Generic.BoxExamples#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.boxexamples/cs/program.cs#3)]
 [!code-vb[System.Collections.Generic.BoxExamples#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.boxexamples/vb/program.vb#3)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><span data-ttu-id="5b4e3-127"><para>Implementa esta interfaz requiere la implementación de la interfaz no genérica <see cref="T:System.Collections.IEnumerator" /> interfaz. El <see cref="M:System.Collections.IEnumerator.MoveNext" /> y <see cref="M:System.Collections.IEnumerator.Reset" /> no dependen de los métodos <typeparamref name="T" />y solo aparecen en la interfaz no genérica. El <see cref="P:System.Collections.Generic.IEnumerator`1.Current" /> propiedad aparece en ambas interfaces y tiene diferentes tipos de valor devuelto. Implementar la interfaz no genérica <see cref="P:System.Collections.IEnumerator.Current" /> propiedad como una implementación de interfaz explícita. Esto permite que cualquier consumidor de la interfaz no genérica usar la interfaz genérica.  Además, <see cref="T:System.Collections.Generic.IEnumerator`1" /> implementa <see cref="T:System.IDisposable" />, que exige que implemente la <see cref="M:System.IDisposable.Dispose" /> método. Esto le permite cerrar las conexiones de base de datos o liberar identificadores de archivos u operaciones similares al usar otros recursos. Si no hay ningún recurso adicional para desechar, proporcione un valor vacío <see cref="M:System.IDisposable.Dispose" /> implementación.</para></span><span class="sxs-lookup"><span data-stu-id="5b4e3-127"><para>Implementing this interface requires implementing the nongeneric <see cref="T:System.Collections.IEnumerator" /> interface. The <see cref="M:System.Collections.IEnumerator.MoveNext" /> and <see cref="M:System.Collections.IEnumerator.Reset" /> methods do not depend on <typeparamref name="T" />, and appear only on the nongeneric interface. The <see cref="P:System.Collections.Generic.IEnumerator`1.Current" /> property appears on both interfaces, and has different return types. Implement the nongeneric <see cref="P:System.Collections.IEnumerator.Current" /> property as an explicit interface implementation. This allows any consumer of the nongeneric interface to consume the generic interface.  In addition, <see cref="T:System.Collections.Generic.IEnumerator`1" /> implements <see cref="T:System.IDisposable" />, which requires you to implement the <see cref="M:System.IDisposable.Dispose" /> method. This enables you to close database connections or release file handles or similar operations when using other resources. If there are no additional resources to dispose of, provide an empty <see cref="M:System.IDisposable.Dispose" /> implementation.</para></span></span></block>
    <altmember cref="T:System.Collections.Generic.IEnumerable`1" />
    <altmember cref="T:System.Collections.Generic.ICollection`1" />
    <altmember cref="N:System.Collections" />
  </Docs>
  <Members>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public T Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T Current" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.IEnumerator`1.Current" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Current As T" />
      <MemberSignature Language="F#" Value="member this.Current : 'T" Usage="System.Collections.Generic.IEnumerator&lt;'T&gt;.Current" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T Current { T get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5b4e3-128">Obtiene el elemento de la colección situado en la posición actual del enumerador.</span><span class="sxs-lookup"><span data-stu-id="5b4e3-128">Gets the element in the collection at the current position of the enumerator.</span></span></summary>
        <value><span data-ttu-id="5b4e3-129">Elemento de la colección en la posición actual del enumerador.</span><span class="sxs-lookup"><span data-stu-id="5b4e3-129">The element in the collection at the current position of the enumerator.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5b4e3-130"><xref:System.Collections.Generic.IEnumerator%601.Current%2A> no está definida en cualquiera de las condiciones siguientes:</span><span class="sxs-lookup"><span data-stu-id="5b4e3-130"><xref:System.Collections.Generic.IEnumerator%601.Current%2A> is undefined under any of the following conditions:</span></span>  
  
-   <span data-ttu-id="5b4e3-131">El enumerador se coloca antes del primer elemento de la colección, inmediatamente después de crea el enumerador.</span><span class="sxs-lookup"><span data-stu-id="5b4e3-131">The enumerator is positioned before the first element in the collection, immediately after the enumerator is created.</span></span>   <span data-ttu-id="5b4e3-132"><xref:System.Collections.IEnumerator.MoveNext%2A> debe llamarse para hacer avanzar el enumerador hasta el primer elemento de la colección antes de leer el valor de <xref:System.Collections.Generic.IEnumerator%601.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="5b4e3-132"><xref:System.Collections.IEnumerator.MoveNext%2A> must be called to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Generic.IEnumerator%601.Current%2A>.</span></span>  
  
-   <span data-ttu-id="5b4e3-133">La última llamada a <xref:System.Collections.IEnumerator.MoveNext%2A> devuelve `false`, lo que indica el final de la colección.</span><span class="sxs-lookup"><span data-stu-id="5b4e3-133">The last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, which indicates the end of the collection.</span></span>  
  
-   <span data-ttu-id="5b4e3-134">El enumerador queda invalidado debido a los cambios realizados en la colección, como agregar, modificar o eliminar elementos.</span><span class="sxs-lookup"><span data-stu-id="5b4e3-134">The enumerator is invalidated due to changes made in the collection, such as adding, modifying, or deleting elements.</span></span>  
  
 <span data-ttu-id="5b4e3-135"><xref:System.Collections.Generic.IEnumerator%601.Current%2A> devuelve el mismo objeto hasta que se llama a <xref:System.Collections.IEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="5b4e3-135"><xref:System.Collections.Generic.IEnumerator%601.Current%2A> returns the same object until <xref:System.Collections.IEnumerator.MoveNext%2A> is called.</span></span> <span data-ttu-id="5b4e3-136"><xref:System.Collections.IEnumerator.MoveNext%2A> establece <xref:System.Collections.Generic.IEnumerator%601.Current%2A> en el siguiente elemento.</span><span class="sxs-lookup"><span data-stu-id="5b4e3-136"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.Generic.IEnumerator%601.Current%2A> to the next element.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="5b4e3-137"><para>Implementa esta interfaz requiere la implementación de la interfaz no genérica <see cref="T:System.Collections.IEnumerator" /> interfaz. El <see cref="P:System.Collections.Generic.IEnumerator`1.Current" /> propiedad aparece en ambas interfaces y tiene diferentes tipos de valor devuelto. Implementar la interfaz no genérica <see cref="P:System.Collections.IEnumerator.Current" /> propiedad como una implementación de interfaz explícita. Esto permite que cualquier consumidor de la interfaz no genérica usar la interfaz genérica.</para></span><span class="sxs-lookup"><span data-stu-id="5b4e3-137"><para>Implementing this interface requires implementing the nongeneric <see cref="T:System.Collections.IEnumerator" /> interface. The <see cref="P:System.Collections.Generic.IEnumerator`1.Current" /> property appears on both interfaces, and has different return types. Implement the nongeneric <see cref="P:System.Collections.IEnumerator.Current" /> property as an explicit interface implementation. This allows any consumer of the nongeneric interface to consume the generic interface.</para></span></span></block>
        <altmember cref="P:System.Collections.IEnumerator.Current" />
        <altmember cref="M:System.Collections.IEnumerator.MoveNext" />
      </Docs>
    </Member>
  </Members>
</Type>
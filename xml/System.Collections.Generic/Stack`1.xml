<Type Name="Stack&lt;T&gt;" FullName="System.Collections.Generic.Stack&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3974e97e893db48f241a47a19c02bfa795c7a260" /><Meta Name="ms.sourcegitcommit" Value="c0c07dbd19cd7017243f9ac36915755f79bc8da6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="11/27/2018" /><Meta Name="ms.locfileid" Value="52353705" /></Metadata><TypeSignature Language="C#" Value="public class Stack&lt;T&gt; : System.Collections.Generic.IEnumerable&lt;T&gt;, System.Collections.Generic.IReadOnlyCollection&lt;T&gt;, System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit Stack`1&lt;T&gt; extends System.Object implements class System.Collections.Generic.IEnumerable`1&lt;!T&gt;, class System.Collections.Generic.IReadOnlyCollection`1&lt;!T&gt;, class System.Collections.ICollection, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Generic.Stack`1" />
  <TypeSignature Language="VB.NET" Value="Public Class Stack(Of T)&#xA;Implements ICollection, IEnumerable(Of T), IReadOnlyCollection(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class Stack : System::Collections::Generic::IEnumerable&lt;T&gt;, System::Collections::Generic::IReadOnlyCollection&lt;T&gt;, System::Collections::ICollection" />
  <TypeSignature Language="F#" Value="type Stack&lt;'T&gt; = class&#xA;    interface seq&lt;'T&gt;&#xA;    interface ICollection&#xA;    interface IReadOnlyCollection&lt;'T&gt;&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Collections</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IReadOnlyCollection&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Diagnostics.DebuggerDisplay("Count = {Count}")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.Collections.Generic.System_StackDebugView`1))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="T"><span data-ttu-id="09e30-101">Especifica el tipo de elementos de la pila.</span><span class="sxs-lookup"><span data-stu-id="09e30-101">Specifies the type of elements in the stack.</span></span></typeparam>
    <summary><span data-ttu-id="09e30-102">Representa una colección último en entrar, primero en salir (LIFO) de tamaño variable con instancias del mismo tipo especificado.</span><span class="sxs-lookup"><span data-stu-id="09e30-102">Represents a variable size last-in-first-out (LIFO) collection of instances of the same specified type.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09e30-103"><xref:System.Collections.Generic.Stack%601> se implementa como una matriz.</span><span class="sxs-lookup"><span data-stu-id="09e30-103"><xref:System.Collections.Generic.Stack%601> is implemented as an array.</span></span>  
  
 <span data-ttu-id="09e30-104">Las pilas y las colas son útiles cuando se necesita almacenamiento temporal de información; es decir, cuando desee descartar un elemento después de recuperar su valor.</span><span class="sxs-lookup"><span data-stu-id="09e30-104">Stacks and queues are useful when you need temporary storage for information; that is, when you might want to discard an element after retrieving its value.</span></span> <span data-ttu-id="09e30-105">Use <xref:System.Collections.Generic.Queue%601> si necesita acceder a la información en el mismo orden que se almacena en la colección.</span><span class="sxs-lookup"><span data-stu-id="09e30-105">Use <xref:System.Collections.Generic.Queue%601> if you need to access the information in the same order that it is stored in the collection.</span></span> <span data-ttu-id="09e30-106">Use <xref:System.Collections.Generic.Stack%601?displayProperty=nameWithType> si necesita acceder a la información en orden inverso.</span><span class="sxs-lookup"><span data-stu-id="09e30-106">Use <xref:System.Collections.Generic.Stack%601?displayProperty=nameWithType> if you need to access the information in reverse order.</span></span>  
  
 <span data-ttu-id="09e30-107">Use la <xref:System.Collections.Concurrent.ConcurrentStack%601?displayProperty=nameWithType> y <xref:System.Collections.Concurrent.ConcurrentQueue%601?displayProperty=nameWithType> tipos cuando necesite tener acceso a la colección desde varios subprocesos simultáneamente.</span><span class="sxs-lookup"><span data-stu-id="09e30-107">Use the <xref:System.Collections.Concurrent.ConcurrentStack%601?displayProperty=nameWithType> and <xref:System.Collections.Concurrent.ConcurrentQueue%601?displayProperty=nameWithType> types when you need to access the collection from multiple threads concurrently.</span></span>  
  
 <span data-ttu-id="09e30-108">Un uso común para <xref:System.Collections.Generic.Stack%601?displayProperty=nameWithType> consiste en conservar los Estados de las variables durante las llamadas a otros procedimientos.</span><span class="sxs-lookup"><span data-stu-id="09e30-108">A common use for <xref:System.Collections.Generic.Stack%601?displayProperty=nameWithType> is to preserve variable states during calls to other procedures.</span></span>  
  
 <span data-ttu-id="09e30-109">Se pueden realizar tres operaciones principales en un <xref:System.Collections.Generic.Stack%601?displayProperty=nameWithType> y sus elementos:</span><span class="sxs-lookup"><span data-stu-id="09e30-109">Three main operations can be performed on a <xref:System.Collections.Generic.Stack%601?displayProperty=nameWithType> and its elements:</span></span>  
  
-   <span data-ttu-id="09e30-110"><xref:System.Collections.Generic.Stack%601.Push%2A> Inserta un elemento en la parte superior de la <xref:System.Collections.Stack>.</span><span class="sxs-lookup"><span data-stu-id="09e30-110"><xref:System.Collections.Generic.Stack%601.Push%2A> inserts an element at the top of the <xref:System.Collections.Stack>.</span></span>  
  
-   <span data-ttu-id="09e30-111"><xref:System.Collections.Generic.Stack%601.Pop%2A> Quita un elemento de la parte superior de la <xref:System.Collections.Generic.Stack%601>.</span><span class="sxs-lookup"><span data-stu-id="09e30-111"><xref:System.Collections.Generic.Stack%601.Pop%2A> removes an element from the top of the <xref:System.Collections.Generic.Stack%601>.</span></span>  
  
-   <span data-ttu-id="09e30-112"><xref:System.Collections.Generic.Stack%601.Peek%2A> Devuelve un elemento que se encuentra en la parte superior de la <xref:System.Collections.Generic.Stack%601> pero no se quita de la <xref:System.Collections.Generic.Stack%601>.</span><span class="sxs-lookup"><span data-stu-id="09e30-112"><xref:System.Collections.Generic.Stack%601.Peek%2A> returns an element that is at the top of the <xref:System.Collections.Generic.Stack%601> but does not remove it from the <xref:System.Collections.Generic.Stack%601>.</span></span>  
  
 <span data-ttu-id="09e30-113">La capacidad de un <xref:System.Collections.Generic.Stack%601> es el número de elementos de la <xref:System.Collections.Generic.Stack%601> puede contener.</span><span class="sxs-lookup"><span data-stu-id="09e30-113">The capacity of a <xref:System.Collections.Generic.Stack%601> is the number of elements the <xref:System.Collections.Generic.Stack%601> can hold.</span></span> <span data-ttu-id="09e30-114">Cuando se agregan elementos a un <xref:System.Collections.Generic.Stack%601>, automáticamente se aumenta la capacidad según sea necesario mediante la reasignación de la matriz interna.</span><span class="sxs-lookup"><span data-stu-id="09e30-114">As elements are added to a <xref:System.Collections.Generic.Stack%601>, the capacity is automatically increased as required by reallocating the internal array.</span></span> <span data-ttu-id="09e30-115">La capacidad puede reducirse mediante una llamada a <xref:System.Collections.Generic.Stack%601.TrimExcess%2A>.</span><span class="sxs-lookup"><span data-stu-id="09e30-115">The capacity can be decreased by calling <xref:System.Collections.Generic.Stack%601.TrimExcess%2A>.</span></span>  
  
 <span data-ttu-id="09e30-116">Si <xref:System.Collections.Generic.Stack%601.Count%2A> es menor que la capacidad de la pila, <xref:System.Collections.Generic.Stack%601.Push%2A> es una operación o (1).</span><span class="sxs-lookup"><span data-stu-id="09e30-116">If <xref:System.Collections.Generic.Stack%601.Count%2A> is less than the capacity of the stack, <xref:System.Collections.Generic.Stack%601.Push%2A> is an O(1) operation.</span></span> <span data-ttu-id="09e30-117">Si la capacidad debe aumentarse para alojar el nuevo elemento, <xref:System.Collections.Generic.Stack%601.Push%2A> se convierte en una O (`n`) operación, donde `n` es <xref:System.Collections.Generic.Stack%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="09e30-117">If the capacity needs to be increased to accommodate the new element, <xref:System.Collections.Generic.Stack%601.Push%2A> becomes an O(`n`) operation, where `n` is <xref:System.Collections.Generic.Stack%601.Count%2A>.</span></span> <span data-ttu-id="09e30-118"><xref:System.Collections.Generic.Stack%601.Pop%2A> es una operación o (1).</span><span class="sxs-lookup"><span data-stu-id="09e30-118"><xref:System.Collections.Generic.Stack%601.Pop%2A> is an O(1) operation.</span></span>  
  
 <span data-ttu-id="09e30-119"><xref:System.Collections.Generic.Stack%601> acepta `null` como un valor válido para la referencia de tipos y permite elementos duplicados.</span><span class="sxs-lookup"><span data-stu-id="09e30-119"><xref:System.Collections.Generic.Stack%601> accepts `null` as a valid value for reference types and allows duplicate elements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09e30-120">En el ejemplo de código siguiente se muestra varios métodos de la <xref:System.Collections.Generic.Stack%601> clase genérica.</span><span class="sxs-lookup"><span data-stu-id="09e30-120">The following code example demonstrates several methods of the <xref:System.Collections.Generic.Stack%601> generic class.</span></span> <span data-ttu-id="09e30-121">El ejemplo de código crea una pila de cadenas con capacidad predeterminada y usa el <xref:System.Collections.Generic.Stack%601.Push%2A> método para insertar cinco cadenas en la pila.</span><span class="sxs-lookup"><span data-stu-id="09e30-121">The code example creates a stack of strings with default capacity and uses the <xref:System.Collections.Generic.Stack%601.Push%2A> method to push five strings onto the stack.</span></span> <span data-ttu-id="09e30-122">Se enumeran los elementos de la pila, que no cambia el estado de la pila.</span><span class="sxs-lookup"><span data-stu-id="09e30-122">The elements of the stack are enumerated, which does not change the state of the stack.</span></span> <span data-ttu-id="09e30-123">El <xref:System.Collections.Generic.Stack%601.Pop%2A> método se usa para extraer la primera cadena de la pila.</span><span class="sxs-lookup"><span data-stu-id="09e30-123">The <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop the first string off the stack.</span></span> <span data-ttu-id="09e30-124">El <xref:System.Collections.Generic.Stack%601.Peek%2A> método se utiliza para buscar el siguiente elemento en la pila y, a continuación, el <xref:System.Collections.Generic.Stack%601.Pop%2A> método se utiliza para introducirla.</span><span class="sxs-lookup"><span data-stu-id="09e30-124">The <xref:System.Collections.Generic.Stack%601.Peek%2A> method is used to look at the next item on the stack, and then the <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop it off.</span></span>  
  
 <span data-ttu-id="09e30-125">El <xref:System.Collections.Generic.Stack%601.ToArray%2A> método se utiliza para crear una matriz y copiar los elementos de la pila en él y, después, la matriz se pasa a la <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor que toma <xref:System.Collections.Generic.IEnumerable%601>, crear una copia de la pila con el orden de los elementos invertidos.</span><span class="sxs-lookup"><span data-stu-id="09e30-125">The <xref:System.Collections.Generic.Stack%601.ToArray%2A> method is used to create an array and copy the stack elements to it, then the array is passed to the <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor that takes <xref:System.Collections.Generic.IEnumerable%601>, creating a copy of the stack with the order of the elements reversed.</span></span> <span data-ttu-id="09e30-126">Se muestran los elementos de la copia.</span><span class="sxs-lookup"><span data-stu-id="09e30-126">The elements of the copy are displayed.</span></span>  
  
 <span data-ttu-id="09e30-127">Dos veces el tamaño de la pila se crea una matriz y el <xref:System.Collections.Generic.Stack%601.CopyTo%2A> método se usa para copiar los elementos de matriz, empezando por el centro de la matriz.</span><span class="sxs-lookup"><span data-stu-id="09e30-127">An array twice the size of the stack is created, and the <xref:System.Collections.Generic.Stack%601.CopyTo%2A> method is used to copy the array elements beginning at the middle of the array.</span></span> <span data-ttu-id="09e30-128">El <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor se utiliza de nuevo para crear una copia de la pila con el orden de los elementos invertidos; por tanto, son los tres elementos null al final.</span><span class="sxs-lookup"><span data-stu-id="09e30-128">The <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor is used again to create a copy of the stack with the order of elements reversed; thus, the three null elements are at the end.</span></span>  
  
 <span data-ttu-id="09e30-129">El <xref:System.Collections.Generic.Stack%601.Contains%2A> método se usa para mostrar que la cadena "4" está en la primera copia de la pila, tras el cual el <xref:System.Collections.Generic.Stack%601.Clear%2A> método borra la copia y el <xref:System.Collections.Generic.Stack%601.Count%2A> propiedad muestra que la pila está vacía.</span><span class="sxs-lookup"><span data-stu-id="09e30-129">The <xref:System.Collections.Generic.Stack%601.Contains%2A> method is used to show that the string "four" is in the first copy of the stack, after which the <xref:System.Collections.Generic.Stack%601.Clear%2A> method clears the copy and the <xref:System.Collections.Generic.Stack%601.Count%2A> property shows that the stack is empty.</span></span>  
  
 [!code-csharp[Generic.Stack#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Stack/cs/source.cs#1)]
 [!code-vb[Generic.Stack#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Stack/vb/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="09e30-130">Estáticos públicos (<see langword="Shared" /> en Visual Basic) los miembros de este tipo son seguros para subprocesos.</span><span class="sxs-lookup"><span data-stu-id="09e30-130">Public static (<see langword="Shared" /> in Visual Basic) members of this type are thread safe.</span></span> <span data-ttu-id="09e30-131">No se garantiza que los miembros de instancias sean seguros para la ejecución de subprocesos.</span><span class="sxs-lookup"><span data-stu-id="09e30-131">Any instance members are not guaranteed to be thread safe.</span></span>  
  
<span data-ttu-id="09e30-132">Un <see cref="T:System.Collections.Generic.Stack`1" /> puede admitir varios lectores simultáneamente, siempre y cuando no se modifica la colección.</span><span class="sxs-lookup"><span data-stu-id="09e30-132">A <see cref="T:System.Collections.Generic.Stack`1" /> can support multiple readers concurrently, as long as the collection is not modified.</span></span>  <span data-ttu-id="09e30-133">Aun así, enumerar una colección no es un procedimiento seguro para subprocesos.</span><span class="sxs-lookup"><span data-stu-id="09e30-133">Even so, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="09e30-134">A fin de garantizar la seguridad de los subprocesos, se puede bloquear la colección durante toda la enumeración.</span><span class="sxs-lookup"><span data-stu-id="09e30-134">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="09e30-135">Para permitir que varios subprocesos obtengan acceso de lectura y escritura a la colección, debe implementar su propia sincronización.</span><span class="sxs-lookup"><span data-stu-id="09e30-135">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span></threadsafe>
    <related type="Article" href="https://msdn.microsoft.com/library/f45331db-d595-46ec-9142-551d3d1eb1a7"><span data-ttu-id="09e30-136">Iteradores (C# y Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="09e30-136">Iterators (C# and Visual Basic)</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="09e30-137">Inicializa una nueva instancia de la clase <see cref="T:System.Collections.Generic.Stack`1" />.</span><span class="sxs-lookup"><span data-stu-id="09e30-137">Initializes a new instance of the <see cref="T:System.Collections.Generic.Stack`1" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Stack ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Stack`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Stack();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="09e30-138">Inicializa una nueva instancia de la clase <see cref="T:System.Collections.Generic.Stack`1" /> que está vacía y tiene la capacidad inicial predeterminada.</span><span class="sxs-lookup"><span data-stu-id="09e30-138">Initializes a new instance of the <see cref="T:System.Collections.Generic.Stack`1" /> class that is empty and has the default initial capacity.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09e30-139">La capacidad de un <xref:System.Collections.Generic.Stack%601> es el número de elementos que la <xref:System.Collections.Generic.Stack%601> puede contener.</span><span class="sxs-lookup"><span data-stu-id="09e30-139">The capacity of a <xref:System.Collections.Generic.Stack%601> is the number of elements that the <xref:System.Collections.Generic.Stack%601> can hold.</span></span> <span data-ttu-id="09e30-140">Cuando se agregan elementos a un <xref:System.Collections.Generic.Stack%601>, automáticamente se aumenta la capacidad según sea necesario mediante la reasignación de la matriz interna.</span><span class="sxs-lookup"><span data-stu-id="09e30-140">As elements are added to a <xref:System.Collections.Generic.Stack%601>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="09e30-141">Si se puede estimar el tamaño de la colección, al especificar la capacidad inicial elimina la necesidad de realizar una serie de operaciones de cambio de tamaño al agregar elementos a la <xref:System.Collections.Generic.Stack%601>.</span><span class="sxs-lookup"><span data-stu-id="09e30-141">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Generic.Stack%601>.</span></span>  
  
 <span data-ttu-id="09e30-142">La capacidad puede reducirse mediante una llamada a <xref:System.Collections.Generic.Stack%601.TrimExcess%2A>.</span><span class="sxs-lookup"><span data-stu-id="09e30-142">The capacity can be decreased by calling <xref:System.Collections.Generic.Stack%601.TrimExcess%2A>.</span></span>  
  
 <span data-ttu-id="09e30-143">Este constructor es una operación o (1).</span><span class="sxs-lookup"><span data-stu-id="09e30-143">This constructor is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09e30-144">En el ejemplo de código siguiente se muestra este constructor y varios métodos de la <xref:System.Collections.Generic.Stack%601> clase genérica.</span><span class="sxs-lookup"><span data-stu-id="09e30-144">The following code example demonstrates this constructor and several methods of the <xref:System.Collections.Generic.Stack%601> generic class.</span></span>  
  
 <span data-ttu-id="09e30-145">El ejemplo de código crea una pila de cadenas con capacidad predeterminada y usa el <xref:System.Collections.Generic.Stack%601.Push%2A> método para insertar cinco cadenas en la pila.</span><span class="sxs-lookup"><span data-stu-id="09e30-145">The code example creates a stack of strings with default capacity and uses the <xref:System.Collections.Generic.Stack%601.Push%2A> method to push five strings onto the stack.</span></span> <span data-ttu-id="09e30-146">Se enumeran los elementos de la pila, que no cambia el estado de la pila.</span><span class="sxs-lookup"><span data-stu-id="09e30-146">The elements of the stack are enumerated, which does not change the state of the stack.</span></span> <span data-ttu-id="09e30-147">El <xref:System.Collections.Generic.Stack%601.Pop%2A> método se usa para extraer la primera cadena de la pila.</span><span class="sxs-lookup"><span data-stu-id="09e30-147">The <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop the first string off the stack.</span></span> <span data-ttu-id="09e30-148">El <xref:System.Collections.Generic.Stack%601.Peek%2A> método se utiliza para buscar el siguiente elemento en la pila y, a continuación, el <xref:System.Collections.Generic.Stack%601.Pop%2A> método se utiliza para introducirla.</span><span class="sxs-lookup"><span data-stu-id="09e30-148">The <xref:System.Collections.Generic.Stack%601.Peek%2A> method is used to look at the next item on the stack, and then the <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop it off.</span></span>  
  
 <span data-ttu-id="09e30-149">El <xref:System.Collections.Generic.Stack%601.ToArray%2A> método se utiliza para crear una matriz y copiar los elementos de la pila en él y, después, la matriz se pasa a la <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor que toma <xref:System.Collections.Generic.IEnumerable%601>, crear una copia de la pila con el orden de los elementos invertidos.</span><span class="sxs-lookup"><span data-stu-id="09e30-149">The <xref:System.Collections.Generic.Stack%601.ToArray%2A> method is used to create an array and copy the stack elements to it, then the array is passed to the <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor that takes <xref:System.Collections.Generic.IEnumerable%601>, creating a copy of the stack with the order of the elements reversed.</span></span> <span data-ttu-id="09e30-150">Se muestran los elementos de la copia.</span><span class="sxs-lookup"><span data-stu-id="09e30-150">The elements of the copy are displayed.</span></span>  
  
 <span data-ttu-id="09e30-151">Dos veces el tamaño de la pila se crea una matriz y el <xref:System.Collections.Generic.Stack%601.CopyTo%2A> método se usa para copiar los elementos de matriz, empezando por el centro de la matriz.</span><span class="sxs-lookup"><span data-stu-id="09e30-151">An array twice the size of the stack is created, and the <xref:System.Collections.Generic.Stack%601.CopyTo%2A> method is used to copy the array elements beginning at the middle of the array.</span></span> <span data-ttu-id="09e30-152">El <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor se utiliza de nuevo para crear una copia de la pila con el orden de los elementos invertidos; por tanto, son los tres elementos null al final.</span><span class="sxs-lookup"><span data-stu-id="09e30-152">The <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor is used again to create a copy of the stack with the order of elements reversed; thus, the three null elements are at the end.</span></span>  
  
 <span data-ttu-id="09e30-153">El <xref:System.Collections.Generic.Stack%601.Contains%2A> método se usa para mostrar que la cadena "4" está en la primera copia de la pila, tras el cual el <xref:System.Collections.Generic.Stack%601.Clear%2A> método borra la copia y el <xref:System.Collections.Generic.Stack%601.Count%2A> propiedad muestra que la pila está vacía.</span><span class="sxs-lookup"><span data-stu-id="09e30-153">The <xref:System.Collections.Generic.Stack%601.Contains%2A> method is used to show that the string "four" is in the first copy of the stack, after which the <xref:System.Collections.Generic.Stack%601.Clear%2A> method clears the copy and the <xref:System.Collections.Generic.Stack%601.Count%2A> property shows that the stack is empty.</span></span>  
  
 [!code-csharp[Generic.Stack#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Stack/cs/source.cs#1)]
 [!code-vb[Generic.Stack#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Stack/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Stack (System.Collections.Generic.IEnumerable&lt;T&gt; collection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Stack`1.#ctor(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (collection As IEnumerable(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Stack(System::Collections::Generic::IEnumerable&lt;T&gt; ^ collection);" />
      <MemberSignature Language="F#" Value="new System.Collections.Generic.Stack&lt;'T&gt; : seq&lt;'T&gt; -&gt; System.Collections.Generic.Stack&lt;'T&gt;" Usage="new System.Collections.Generic.Stack&lt;'T&gt; collection" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="collection" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="09e30-154">Colección de la que se van a copiar los elementos.</span><span class="sxs-lookup"><span data-stu-id="09e30-154">The collection to copy elements from.</span></span></param>
        <summary><span data-ttu-id="09e30-155">Inicializa una nueva instancia de la clase <see cref="T:System.Collections.Generic.Stack`1" /> que contiene elementos copiados de la colección especificada y tiene una capacidad suficiente para aceptar el número de elementos copiados.</span><span class="sxs-lookup"><span data-stu-id="09e30-155">Initializes a new instance of the <see cref="T:System.Collections.Generic.Stack`1" /> class that contains elements copied from the specified collection and has sufficient capacity to accommodate the number of elements copied.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09e30-156">La capacidad de un <xref:System.Collections.Generic.Stack%601> es el número de elementos que la <xref:System.Collections.Generic.Stack%601> puede contener.</span><span class="sxs-lookup"><span data-stu-id="09e30-156">The capacity of a <xref:System.Collections.Generic.Stack%601> is the number of elements that the <xref:System.Collections.Generic.Stack%601> can hold.</span></span> <span data-ttu-id="09e30-157">Cuando se agregan elementos a un <xref:System.Collections.Generic.Stack%601>, automáticamente se aumenta la capacidad según sea necesario mediante la reasignación de la matriz interna.</span><span class="sxs-lookup"><span data-stu-id="09e30-157">As elements are added to a <xref:System.Collections.Generic.Stack%601>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="09e30-158">Si se puede estimar el tamaño de la colección, al especificar la capacidad inicial elimina la necesidad de realizar una serie de operaciones de cambio de tamaño al agregar elementos a la <xref:System.Collections.Generic.Stack%601>.</span><span class="sxs-lookup"><span data-stu-id="09e30-158">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Generic.Stack%601>.</span></span>  
  
 <span data-ttu-id="09e30-159">La capacidad puede reducirse mediante una llamada a <xref:System.Collections.Generic.Stack%601.TrimExcess%2A>.</span><span class="sxs-lookup"><span data-stu-id="09e30-159">The capacity can be decreased by calling <xref:System.Collections.Generic.Stack%601.TrimExcess%2A>.</span></span>  
  
 <span data-ttu-id="09e30-160">Los elementos se copian en el <xref:System.Collections.Generic.Stack%601> en el mismo orden que los lee el <xref:System.Collections.Generic.IEnumerator%601> de la colección.</span><span class="sxs-lookup"><span data-stu-id="09e30-160">The elements are copied onto the <xref:System.Collections.Generic.Stack%601> in the same order they are read by the <xref:System.Collections.Generic.IEnumerator%601> of the collection.</span></span>  
  
 <span data-ttu-id="09e30-161">Este constructor es O (`n`) operación, donde `n` es el número de elementos de `collection`.</span><span class="sxs-lookup"><span data-stu-id="09e30-161">This constructor is an O(`n`) operation, where `n` is the number of elements in `collection`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09e30-162">En el ejemplo de código siguiente se muestra este constructor y varios métodos de la <xref:System.Collections.Generic.Stack%601> clase genérica.</span><span class="sxs-lookup"><span data-stu-id="09e30-162">The following code example demonstrates this constructor and several methods of the <xref:System.Collections.Generic.Stack%601> generic class.</span></span>  
  
 <span data-ttu-id="09e30-163">El ejemplo de código crea una pila de cadenas con capacidad predeterminada y usa el <xref:System.Collections.Generic.Stack%601.Push%2A> método para insertar cinco cadenas en la pila.</span><span class="sxs-lookup"><span data-stu-id="09e30-163">The code example creates a stack of strings with default capacity and uses the <xref:System.Collections.Generic.Stack%601.Push%2A> method to push five strings onto the stack.</span></span> <span data-ttu-id="09e30-164">Se enumeran los elementos de la pila, que no cambia el estado de la pila.</span><span class="sxs-lookup"><span data-stu-id="09e30-164">The elements of the stack are enumerated, which does not change the state of the stack.</span></span> <span data-ttu-id="09e30-165">El <xref:System.Collections.Generic.Stack%601.Pop%2A> método se usa para extraer la primera cadena de la pila.</span><span class="sxs-lookup"><span data-stu-id="09e30-165">The <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop the first string off the stack.</span></span> <span data-ttu-id="09e30-166">El <xref:System.Collections.Generic.Stack%601.Peek%2A> método se utiliza para buscar el siguiente elemento en la pila y, a continuación, el <xref:System.Collections.Generic.Stack%601.Pop%2A> método se utiliza para introducirla.</span><span class="sxs-lookup"><span data-stu-id="09e30-166">The <xref:System.Collections.Generic.Stack%601.Peek%2A> method is used to look at the next item on the stack, and then the <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop it off.</span></span>  
  
 <span data-ttu-id="09e30-167">El <xref:System.Collections.Generic.Stack%601.ToArray%2A> método se utiliza para crear una matriz y copiar los elementos de la pila en él y, después, la matriz se pasa a la <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor que toma <xref:System.Collections.Generic.IEnumerable%601>, crear una copia de la pila con el orden de los elementos invertidos.</span><span class="sxs-lookup"><span data-stu-id="09e30-167">The <xref:System.Collections.Generic.Stack%601.ToArray%2A> method is used to create an array and copy the stack elements to it, then the array is passed to the <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor that takes <xref:System.Collections.Generic.IEnumerable%601>, creating a copy of the stack with the order of the elements reversed.</span></span> <span data-ttu-id="09e30-168">Se muestran los elementos de la copia.</span><span class="sxs-lookup"><span data-stu-id="09e30-168">The elements of the copy are displayed.</span></span>  
  
 <span data-ttu-id="09e30-169">Dos veces el tamaño de la pila se crea una matriz y el <xref:System.Collections.Generic.Stack%601.CopyTo%2A> método se usa para copiar los elementos de matriz, empezando por el centro de la matriz.</span><span class="sxs-lookup"><span data-stu-id="09e30-169">An array twice the size of the stack is created, and the <xref:System.Collections.Generic.Stack%601.CopyTo%2A> method is used to copy the array elements beginning at the middle of the array.</span></span> <span data-ttu-id="09e30-170">El <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor se utiliza de nuevo para crear una copia de la pila con el orden de los elementos invertidos; por tanto, son los tres elementos null al final.</span><span class="sxs-lookup"><span data-stu-id="09e30-170">The <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor is used again to create a copy of the stack with the order of elements reversed; thus, the three null elements are at the end.</span></span>  
  
 <span data-ttu-id="09e30-171">El <xref:System.Collections.Generic.Stack%601.Contains%2A> método se usa para mostrar que la cadena "4" está en la primera copia de la pila, tras el cual el <xref:System.Collections.Generic.Stack%601.Clear%2A> método borra la copia y el <xref:System.Collections.Generic.Stack%601.Count%2A> propiedad muestra que la pila está vacía.</span><span class="sxs-lookup"><span data-stu-id="09e30-171">The <xref:System.Collections.Generic.Stack%601.Contains%2A> method is used to show that the string "four" is in the first copy of the stack, after which the <xref:System.Collections.Generic.Stack%601.Clear%2A> method clears the copy and the <xref:System.Collections.Generic.Stack%601.Count%2A> property shows that the stack is empty.</span></span>  
  
 [!code-csharp[Generic.Stack#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Stack/cs/source.cs#1)]
 [!code-vb[Generic.Stack#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Stack/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="09e30-172">El valor de <paramref name="collection" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="09e30-172"><paramref name="collection" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Collections.Generic.ICollection`1" />
        <altmember cref="T:System.Collections.Generic.IEnumerator`1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Stack (int capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Stack`1.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (capacity As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Stack(int capacity);" />
      <MemberSignature Language="F#" Value="new System.Collections.Generic.Stack&lt;'T&gt; : int -&gt; System.Collections.Generic.Stack&lt;'T&gt;" Usage="new System.Collections.Generic.Stack&lt;'T&gt; capacity" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="capacity"><span data-ttu-id="09e30-173">Número inicial de elementos que puede contener la colección <see cref="T:System.Collections.Generic.Stack`1" />.</span><span class="sxs-lookup"><span data-stu-id="09e30-173">The initial number of elements that the <see cref="T:System.Collections.Generic.Stack`1" /> can contain.</span></span></param>
        <summary><span data-ttu-id="09e30-174">Inicializa una nueva instancia de la clase <see cref="T:System.Collections.Generic.Stack`1" /> que está vacía y tiene la capacidad inicial especificada o la capacidad inicial predeterminada, la que sea mayor.</span><span class="sxs-lookup"><span data-stu-id="09e30-174">Initializes a new instance of the <see cref="T:System.Collections.Generic.Stack`1" /> class that is empty and has the specified initial capacity or the default initial capacity, whichever is greater.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09e30-175">La capacidad de un <xref:System.Collections.Generic.Stack%601> es el número de elementos que la <xref:System.Collections.Generic.Stack%601> puede contener.</span><span class="sxs-lookup"><span data-stu-id="09e30-175">The capacity of a <xref:System.Collections.Generic.Stack%601> is the number of elements that the <xref:System.Collections.Generic.Stack%601> can hold.</span></span> <span data-ttu-id="09e30-176">Cuando se agregan elementos a un <xref:System.Collections.Generic.Stack%601>, automáticamente se aumenta la capacidad según sea necesario mediante la reasignación de la matriz interna.</span><span class="sxs-lookup"><span data-stu-id="09e30-176">As elements are added to a <xref:System.Collections.Generic.Stack%601>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="09e30-177">Si se puede estimar el tamaño de la colección, al especificar la capacidad inicial elimina la necesidad de realizar una serie de operaciones de cambio de tamaño al agregar elementos a la <xref:System.Collections.Generic.Stack%601>.</span><span class="sxs-lookup"><span data-stu-id="09e30-177">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Generic.Stack%601>.</span></span>  
  
 <span data-ttu-id="09e30-178">La capacidad puede reducirse mediante una llamada a <xref:System.Collections.Generic.Stack%601.TrimExcess%2A>.</span><span class="sxs-lookup"><span data-stu-id="09e30-178">The capacity can be decreased by calling <xref:System.Collections.Generic.Stack%601.TrimExcess%2A>.</span></span>  
  
 <span data-ttu-id="09e30-179">Este constructor es O (`n`) operación, donde `n` es `capacity`.</span><span class="sxs-lookup"><span data-stu-id="09e30-179">This constructor is an O(`n`) operation, where `n` is `capacity`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="09e30-180"><paramref name="capacity" /> es menor que cero.</span><span class="sxs-lookup"><span data-stu-id="09e30-180"><paramref name="capacity" /> is less than zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Stack`1.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="stack.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="09e30-181">Quita todos los objetos de la colección <see cref="T:System.Collections.Generic.Stack`1" />.</span><span class="sxs-lookup"><span data-stu-id="09e30-181">Removes all objects from the <see cref="T:System.Collections.Generic.Stack`1" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09e30-182"><xref:System.Collections.Generic.Stack%601.Count%2A> está establecido en cero y también se liberan las referencias a otros objetos de elementos de la colección.</span><span class="sxs-lookup"><span data-stu-id="09e30-182"><xref:System.Collections.Generic.Stack%601.Count%2A> is set to zero, and references to other objects from elements of the collection are also released.</span></span>  
  
 <span data-ttu-id="09e30-183">La capacidad permanece sin cambios.</span><span class="sxs-lookup"><span data-stu-id="09e30-183">The capacity remains unchanged.</span></span> <span data-ttu-id="09e30-184">Para restablecer la capacidad de la <xref:System.Collections.Generic.Stack%601>, llame a <xref:System.Collections.Generic.Stack%601.TrimExcess%2A>.</span><span class="sxs-lookup"><span data-stu-id="09e30-184">To reset the capacity of the <xref:System.Collections.Generic.Stack%601>, call <xref:System.Collections.Generic.Stack%601.TrimExcess%2A>.</span></span> <span data-ttu-id="09e30-185">Recorte vacío <xref:System.Collections.Generic.Stack%601> establece la capacidad de la <xref:System.Collections.Generic.Stack%601> a la capacidad predeterminada.</span><span class="sxs-lookup"><span data-stu-id="09e30-185">Trimming an empty <xref:System.Collections.Generic.Stack%601> sets the capacity of the <xref:System.Collections.Generic.Stack%601> to the default capacity.</span></span>  
  
 <span data-ttu-id="09e30-186">Este método es O (`n`) operación, donde `n` es <xref:System.Collections.Generic.Stack%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="09e30-186">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.Stack%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09e30-187">En el ejemplo de código siguiente se muestra varios métodos de la <xref:System.Collections.Generic.Stack%601> clase genérica, incluido el <xref:System.Collections.Generic.Stack%601.Clear%2A> método.</span><span class="sxs-lookup"><span data-stu-id="09e30-187">The following code example demonstrates several methods of the <xref:System.Collections.Generic.Stack%601> generic class, including the <xref:System.Collections.Generic.Stack%601.Clear%2A> method.</span></span>  
  
 <span data-ttu-id="09e30-188">El ejemplo de código crea una pila de cadenas con capacidad predeterminada y usa el <xref:System.Collections.Generic.Stack%601.Push%2A> método para insertar cinco cadenas en la pila.</span><span class="sxs-lookup"><span data-stu-id="09e30-188">The code example creates a stack of strings with default capacity and uses the <xref:System.Collections.Generic.Stack%601.Push%2A> method to push five strings onto the stack.</span></span> <span data-ttu-id="09e30-189">Se enumeran los elementos de la pila, que no cambia el estado de la pila.</span><span class="sxs-lookup"><span data-stu-id="09e30-189">The elements of the stack are enumerated, which does not change the state of the stack.</span></span> <span data-ttu-id="09e30-190">El <xref:System.Collections.Generic.Stack%601.Pop%2A> método se usa para extraer la primera cadena de la pila.</span><span class="sxs-lookup"><span data-stu-id="09e30-190">The <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop the first string off the stack.</span></span> <span data-ttu-id="09e30-191">El <xref:System.Collections.Generic.Stack%601.Peek%2A> método se utiliza para buscar el siguiente elemento en la pila y, a continuación, el <xref:System.Collections.Generic.Stack%601.Pop%2A> método se utiliza para introducirla.</span><span class="sxs-lookup"><span data-stu-id="09e30-191">The <xref:System.Collections.Generic.Stack%601.Peek%2A> method is used to look at the next item on the stack, and then the <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop it off.</span></span>  
  
 <span data-ttu-id="09e30-192">El <xref:System.Collections.Generic.Stack%601.ToArray%2A> método se utiliza para crear una matriz y copiar los elementos de la pila en él y, después, la matriz se pasa a la <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor que toma <xref:System.Collections.Generic.IEnumerable%601>, crear una copia de la pila con el orden de los elementos invertidos.</span><span class="sxs-lookup"><span data-stu-id="09e30-192">The <xref:System.Collections.Generic.Stack%601.ToArray%2A> method is used to create an array and copy the stack elements to it, then the array is passed to the <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor that takes <xref:System.Collections.Generic.IEnumerable%601>, creating a copy of the stack with the order of the elements reversed.</span></span> <span data-ttu-id="09e30-193">Se muestran los elementos de la copia.</span><span class="sxs-lookup"><span data-stu-id="09e30-193">The elements of the copy are displayed.</span></span>  
  
 <span data-ttu-id="09e30-194">Dos veces el tamaño de la pila se crea una matriz y el <xref:System.Collections.Generic.Stack%601.CopyTo%2A> método se usa para copiar los elementos de matriz, empezando por el centro de la matriz.</span><span class="sxs-lookup"><span data-stu-id="09e30-194">An array twice the size of the stack is created, and the <xref:System.Collections.Generic.Stack%601.CopyTo%2A> method is used to copy the array elements beginning at the middle of the array.</span></span> <span data-ttu-id="09e30-195">El <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor se utiliza de nuevo para crear una copia de la pila con el orden de los elementos invertidos; por tanto, son los tres elementos null al final.</span><span class="sxs-lookup"><span data-stu-id="09e30-195">The <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor is used again to create a copy of the stack with the order of elements reversed; thus, the three null elements are at the end.</span></span>  
  
 <span data-ttu-id="09e30-196">El <xref:System.Collections.Generic.Stack%601.Contains%2A> método se usa para mostrar que la cadena "4" está en la primera copia de la pila, tras el cual el <xref:System.Collections.Generic.Stack%601.Clear%2A> método borra la copia y el <xref:System.Collections.Generic.Stack%601.Count%2A> propiedad muestra que la pila está vacía.</span><span class="sxs-lookup"><span data-stu-id="09e30-196">The <xref:System.Collections.Generic.Stack%601.Contains%2A> method is used to show that the string "four" is in the first copy of the stack, after which the <xref:System.Collections.Generic.Stack%601.Clear%2A> method clears the copy and the <xref:System.Collections.Generic.Stack%601.Count%2A> property shows that the stack is empty.</span></span>  
  
 [!code-csharp[Generic.Stack#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Stack/cs/source.cs#1)]
 [!code-vb[Generic.Stack#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Stack/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Stack`1.Contains(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (item As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(T item);" />
      <MemberSignature Language="F#" Value="member this.Contains : 'T -&gt; bool" Usage="stack.Contains item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="09e30-197">Objeto que se va a buscar en <see cref="T:System.Collections.Generic.Stack`1" />.</span><span class="sxs-lookup"><span data-stu-id="09e30-197">The object to locate in the <see cref="T:System.Collections.Generic.Stack`1" />.</span></span> <span data-ttu-id="09e30-198">El valor puede ser <see langword="null" /> para los tipos de referencia.</span><span class="sxs-lookup"><span data-stu-id="09e30-198">The value can be <see langword="null" /> for reference types.</span></span></param>
        <summary><span data-ttu-id="09e30-199">Determina si un elemento se encuentra en <see cref="T:System.Collections.Generic.Stack`1" />.</span><span class="sxs-lookup"><span data-stu-id="09e30-199">Determines whether an element is in the <see cref="T:System.Collections.Generic.Stack`1" />.</span></span></summary>
        <returns><span data-ttu-id="09e30-200"><see langword="true" /> si <paramref name="item" /> se encuentra en la matriz <see cref="T:System.Collections.Generic.Stack`1" />; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="09e30-200"><see langword="true" /> if <paramref name="item" /> is found in the <see cref="T:System.Collections.Generic.Stack`1" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09e30-201">Este método determina la igualdad utilizando el comparador de igualdad predeterminado <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> para `T`, el tipo de valores en la lista.</span><span class="sxs-lookup"><span data-stu-id="09e30-201">This method determines equality using the default equality comparer <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> for `T`, the type of values in the list.</span></span>  
  
 <span data-ttu-id="09e30-202">Este método realiza una búsqueda lineal; por lo tanto, este método es O (`n`) operación, donde `n` es <xref:System.Collections.Generic.Stack%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="09e30-202">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.Stack%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09e30-203">En el ejemplo de código siguiente se muestra varios métodos de la <xref:System.Collections.Generic.Stack%601> clase genérica, incluido el <xref:System.Collections.Generic.Stack%601.Contains%2A> método.</span><span class="sxs-lookup"><span data-stu-id="09e30-203">The following code example demonstrates several methods of the <xref:System.Collections.Generic.Stack%601> generic class, including the <xref:System.Collections.Generic.Stack%601.Contains%2A> method.</span></span>  
  
 <span data-ttu-id="09e30-204">El ejemplo de código crea una pila de cadenas con capacidad predeterminada y usa el <xref:System.Collections.Generic.Stack%601.Push%2A> método para insertar cinco cadenas en la pila.</span><span class="sxs-lookup"><span data-stu-id="09e30-204">The code example creates a stack of strings with default capacity and uses the <xref:System.Collections.Generic.Stack%601.Push%2A> method to push five strings onto the stack.</span></span> <span data-ttu-id="09e30-205">Se enumeran los elementos de la pila, que no cambia el estado de la pila.</span><span class="sxs-lookup"><span data-stu-id="09e30-205">The elements of the stack are enumerated, which does not change the state of the stack.</span></span> <span data-ttu-id="09e30-206">El <xref:System.Collections.Generic.Stack%601.Pop%2A> método se usa para extraer la primera cadena de la pila.</span><span class="sxs-lookup"><span data-stu-id="09e30-206">The <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop the first string off the stack.</span></span> <span data-ttu-id="09e30-207">El <xref:System.Collections.Generic.Stack%601.Peek%2A> método se utiliza para buscar el siguiente elemento en la pila y, a continuación, el <xref:System.Collections.Generic.Stack%601.Pop%2A> método se utiliza para introducirla.</span><span class="sxs-lookup"><span data-stu-id="09e30-207">The <xref:System.Collections.Generic.Stack%601.Peek%2A> method is used to look at the next item on the stack, and then the <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop it off.</span></span>  
  
 <span data-ttu-id="09e30-208">El <xref:System.Collections.Generic.Stack%601.ToArray%2A> método se utiliza para crear una matriz y copiar los elementos de la pila en él y, después, la matriz se pasa a la <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor que toma <xref:System.Collections.Generic.IEnumerable%601>, crear una copia de la pila con el orden de los elementos invertidos.</span><span class="sxs-lookup"><span data-stu-id="09e30-208">The <xref:System.Collections.Generic.Stack%601.ToArray%2A> method is used to create an array and copy the stack elements to it, then the array is passed to the <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor that takes <xref:System.Collections.Generic.IEnumerable%601>, creating a copy of the stack with the order of the elements reversed.</span></span> <span data-ttu-id="09e30-209">Se muestran los elementos de la copia.</span><span class="sxs-lookup"><span data-stu-id="09e30-209">The elements of the copy are displayed.</span></span>  
  
 <span data-ttu-id="09e30-210">Dos veces el tamaño de la pila se crea una matriz y el <xref:System.Collections.Generic.Stack%601.CopyTo%2A> método se usa para copiar los elementos de matriz, empezando por el centro de la matriz.</span><span class="sxs-lookup"><span data-stu-id="09e30-210">An array twice the size of the stack is created, and the <xref:System.Collections.Generic.Stack%601.CopyTo%2A> method is used to copy the array elements beginning at the middle of the array.</span></span> <span data-ttu-id="09e30-211">El <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor se utiliza de nuevo para crear una copia de la pila con el orden de los elementos invertidos; por tanto, son los tres elementos null al final.</span><span class="sxs-lookup"><span data-stu-id="09e30-211">The <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor is used again to create a copy of the stack with the order of elements reversed; thus, the three null elements are at the end.</span></span>  
  
 <span data-ttu-id="09e30-212">El <xref:System.Collections.Generic.Stack%601.Contains%2A> método se usa para mostrar que la cadena "4" está en la primera copia de la pila, tras el cual el <xref:System.Collections.Generic.Stack%601.Clear%2A> método borra la copia y el <xref:System.Collections.Generic.Stack%601.Count%2A> propiedad muestra que la pila está vacía.</span><span class="sxs-lookup"><span data-stu-id="09e30-212">The <xref:System.Collections.Generic.Stack%601.Contains%2A> method is used to show that the string "four" is in the first copy of the stack, after which the <xref:System.Collections.Generic.Stack%601.Clear%2A> method clears the copy and the <xref:System.Collections.Generic.Stack%601.Count%2A> property shows that the stack is empty.</span></span>  
  
 [!code-csharp[Generic.Stack#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Stack/cs/source.cs#1)]
 [!code-vb[Generic.Stack#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Stack/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md"><span data-ttu-id="09e30-213">Realizar operaciones de cadenas que no tienen en cuenta las referencias culturales en colecciones</span><span class="sxs-lookup"><span data-stu-id="09e30-213">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (T[] array, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(!T[] array, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Stack`1.CopyTo(`0[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As T(), arrayIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;T&gt; ^ array, int arrayIndex);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : 'T[] * int -&gt; unit" Usage="stack.CopyTo (array, arrayIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="09e30-214"><see cref="T:System.Array" /> unidimensional que constituye el destino de los elementos copiados de <see cref="T:System.Collections.Generic.Stack`1" />.</span><span class="sxs-lookup"><span data-stu-id="09e30-214">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.Stack`1" />.</span></span> <span data-ttu-id="09e30-215">La matriz <see cref="T:System.Array" /> debe tener una indización de base cero.</span><span class="sxs-lookup"><span data-stu-id="09e30-215">The <see cref="T:System.Array" /> must have zero-based indexing.</span></span></param>
        <param name="arrayIndex"><span data-ttu-id="09e30-216">Índice de base cero en la <paramref name="array" /> donde comienza la copia.</span><span class="sxs-lookup"><span data-stu-id="09e30-216">The zero-based index in <paramref name="array" /> at which copying begins.</span></span></param>
        <summary><span data-ttu-id="09e30-217">Copia <see cref="T:System.Collections.Generic.Stack`1" /> en una <see cref="T:System.Array" /> unidimensional existente, a partir del índice especificado de la matriz.</span><span class="sxs-lookup"><span data-stu-id="09e30-217">Copies the <see cref="T:System.Collections.Generic.Stack`1" /> to an existing one-dimensional <see cref="T:System.Array" />, starting at the specified array index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09e30-218">Los elementos se copian en la matriz en orden de último en el primero en salir (LIFO), similar al orden de los elementos devueltos por una serie de llamadas a <xref:System.Collections.Generic.Stack%601.Pop%2A>.</span><span class="sxs-lookup"><span data-stu-id="09e30-218">The elements are copied onto the array in last-in-first-out (LIFO) order, similar to the order of the elements returned by a succession of calls to <xref:System.Collections.Generic.Stack%601.Pop%2A>.</span></span>  
  
 <span data-ttu-id="09e30-219">Este método es O (`n`) operación, donde `n` es <xref:System.Collections.Generic.Stack%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="09e30-219">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.Stack%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09e30-220">En el ejemplo de código siguiente se muestra varios métodos de la <xref:System.Collections.Generic.Stack%601> clase genérica, incluido el <xref:System.Collections.Generic.Stack%601.CopyTo%2A> método.</span><span class="sxs-lookup"><span data-stu-id="09e30-220">The following code example demonstrates several methods of the <xref:System.Collections.Generic.Stack%601> generic class, including the <xref:System.Collections.Generic.Stack%601.CopyTo%2A> method.</span></span>  
  
 <span data-ttu-id="09e30-221">El ejemplo de código crea una pila de cadenas con capacidad predeterminada y usa el <xref:System.Collections.Generic.Stack%601.Push%2A> método para insertar cinco cadenas en la pila.</span><span class="sxs-lookup"><span data-stu-id="09e30-221">The code example creates a stack of strings with default capacity and uses the <xref:System.Collections.Generic.Stack%601.Push%2A> method to push five strings onto the stack.</span></span> <span data-ttu-id="09e30-222">Se enumeran los elementos de la pila, que no cambia el estado de la pila.</span><span class="sxs-lookup"><span data-stu-id="09e30-222">The elements of the stack are enumerated, which does not change the state of the stack.</span></span> <span data-ttu-id="09e30-223">El <xref:System.Collections.Generic.Stack%601.Pop%2A> método se usa para extraer la primera cadena de la pila.</span><span class="sxs-lookup"><span data-stu-id="09e30-223">The <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop the first string off the stack.</span></span> <span data-ttu-id="09e30-224">El <xref:System.Collections.Generic.Stack%601.Peek%2A> método se utiliza para buscar el siguiente elemento en la pila y, a continuación, el <xref:System.Collections.Generic.Stack%601.Pop%2A> método se utiliza para introducirla.</span><span class="sxs-lookup"><span data-stu-id="09e30-224">The <xref:System.Collections.Generic.Stack%601.Peek%2A> method is used to look at the next item on the stack, and then the <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop it off.</span></span>  
  
 <span data-ttu-id="09e30-225">El <xref:System.Collections.Generic.Stack%601.ToArray%2A> método se utiliza para crear una matriz y copiar los elementos de la pila en él y, después, la matriz se pasa a la <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor que toma <xref:System.Collections.Generic.IEnumerable%601>, crear una copia de la pila con el orden de los elementos invertidos.</span><span class="sxs-lookup"><span data-stu-id="09e30-225">The <xref:System.Collections.Generic.Stack%601.ToArray%2A> method is used to create an array and copy the stack elements to it, then the array is passed to the <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor that takes <xref:System.Collections.Generic.IEnumerable%601>, creating a copy of the stack with the order of the elements reversed.</span></span> <span data-ttu-id="09e30-226">Se muestran los elementos de la copia.</span><span class="sxs-lookup"><span data-stu-id="09e30-226">The elements of the copy are displayed.</span></span>  
  
 <span data-ttu-id="09e30-227">Dos veces el tamaño de la pila se crea una matriz y el <xref:System.Collections.Generic.Stack%601.CopyTo%2A> método se usa para copiar los elementos de matriz, empezando por el centro de la matriz.</span><span class="sxs-lookup"><span data-stu-id="09e30-227">An array twice the size of the stack is created, and the <xref:System.Collections.Generic.Stack%601.CopyTo%2A> method is used to copy the array elements beginning at the middle of the array.</span></span> <span data-ttu-id="09e30-228">El <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor se utiliza de nuevo para crear una copia de la pila con el orden de los elementos invertidos; por tanto, son los tres elementos null al final.</span><span class="sxs-lookup"><span data-stu-id="09e30-228">The <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor is used again to create a copy of the stack with the order of elements reversed; thus, the three null elements are at the end.</span></span>  
  
 <span data-ttu-id="09e30-229">El <xref:System.Collections.Generic.Stack%601.Contains%2A> método se usa para mostrar que la cadena "4" está en la primera copia de la pila, tras el cual el <xref:System.Collections.Generic.Stack%601.Clear%2A> método borra la copia y el <xref:System.Collections.Generic.Stack%601.Count%2A> propiedad muestra que la pila está vacía.</span><span class="sxs-lookup"><span data-stu-id="09e30-229">The <xref:System.Collections.Generic.Stack%601.Contains%2A> method is used to show that the string "four" is in the first copy of the stack, after which the <xref:System.Collections.Generic.Stack%601.Clear%2A> method clears the copy and the <xref:System.Collections.Generic.Stack%601.Count%2A> property shows that the stack is empty.</span></span>  
  
 [!code-csharp[Generic.Stack#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Stack/cs/source.cs#1)]
 [!code-vb[Generic.Stack#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Stack/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="09e30-230">El valor de <paramref name="array" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="09e30-230"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="09e30-231"><paramref name="arrayIndex" /> es menor que cero.</span><span class="sxs-lookup"><span data-stu-id="09e30-231"><paramref name="arrayIndex" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="09e30-232">El número de elementos de la <see cref="T:System.Collections.Generic.Stack`1" /> de origen es mayor que el espacio disponible desde <paramref name="arrayIndex" /> hasta el final de la <paramref name="array" /> de destino.</span><span class="sxs-lookup"><span data-stu-id="09e30-232">The number of elements in the source <see cref="T:System.Collections.Generic.Stack`1" /> is greater than the available space from <paramref name="arrayIndex" /> to the end of the destination <paramref name="array" />.</span></span></exception>
        <altmember cref="M:System.Collections.Generic.Stack`1.ToArray" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.Stack`1.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Collections.Generic.Stack&lt;'T&gt;.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
        <InterfaceMember>P:System.Collections.Generic.IReadOnlyCollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="09e30-233">Obtiene el número de elementos incluidos en <see cref="T:System.Collections.Generic.Stack`1" />.</span><span class="sxs-lookup"><span data-stu-id="09e30-233">Gets the number of elements contained in the <see cref="T:System.Collections.Generic.Stack`1" />.</span></span></summary>
        <value><span data-ttu-id="09e30-234">Número de elementos contenidos en <see cref="T:System.Collections.Generic.Stack`1" />.</span><span class="sxs-lookup"><span data-stu-id="09e30-234">The number of elements contained in the <see cref="T:System.Collections.Generic.Stack`1" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09e30-235">La capacidad de la <xref:System.Collections.Generic.Stack%601> es el número de elementos que la <xref:System.Collections.Generic.Stack%601> puede almacenar.</span><span class="sxs-lookup"><span data-stu-id="09e30-235">The capacity of the <xref:System.Collections.Generic.Stack%601> is the number of elements that the <xref:System.Collections.Generic.Stack%601> can store.</span></span> <span data-ttu-id="09e30-236"><xref:System.Collections.Generic.Stack%601.Count%2A> es el número de elementos que son en realidad el <xref:System.Collections.Generic.Stack%601>.</span><span class="sxs-lookup"><span data-stu-id="09e30-236"><xref:System.Collections.Generic.Stack%601.Count%2A> is the number of elements that are actually in the <xref:System.Collections.Generic.Stack%601>.</span></span>  
  
 <span data-ttu-id="09e30-237">La capacidad siempre es mayor o igual que <xref:System.Collections.Generic.Stack%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="09e30-237">The capacity is always greater than or equal to <xref:System.Collections.Generic.Stack%601.Count%2A>.</span></span> <span data-ttu-id="09e30-238">Si <xref:System.Collections.Generic.Stack%601.Count%2A> supera la capacidad al agregar elementos, se aumenta la capacidad mediante la reasignación automática de la matriz interna antes de copiar los elementos antiguos y agregar los nuevos elementos.</span><span class="sxs-lookup"><span data-stu-id="09e30-238">If <xref:System.Collections.Generic.Stack%601.Count%2A> exceeds the capacity while adding elements, the capacity is increased by automatically reallocating the internal array before copying the old elements and adding the new elements.</span></span>  
  
 <span data-ttu-id="09e30-239">La recuperación del valor de esta propiedad es una operación O(1).</span><span class="sxs-lookup"><span data-stu-id="09e30-239">Retrieving the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09e30-240">En el ejemplo de código siguiente se muestra varias propiedades y métodos de la <xref:System.Collections.Generic.Stack%601> clase genérica, incluido el <xref:System.Collections.Generic.Stack%601.Count%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="09e30-240">The following code example demonstrates several properties and methods of the <xref:System.Collections.Generic.Stack%601> generic class, including the <xref:System.Collections.Generic.Stack%601.Count%2A> property.</span></span>  
  
 <span data-ttu-id="09e30-241">El ejemplo de código crea una pila de cadenas con capacidad predeterminada y usa el <xref:System.Collections.Generic.Stack%601.Push%2A> método para insertar cinco cadenas en la pila.</span><span class="sxs-lookup"><span data-stu-id="09e30-241">The code example creates a stack of strings with default capacity and uses the <xref:System.Collections.Generic.Stack%601.Push%2A> method to push five strings onto the stack.</span></span> <span data-ttu-id="09e30-242">Se enumeran los elementos de la pila, que no cambia el estado de la pila.</span><span class="sxs-lookup"><span data-stu-id="09e30-242">The elements of the stack are enumerated, which does not change the state of the stack.</span></span> <span data-ttu-id="09e30-243">El <xref:System.Collections.Generic.Stack%601.Pop%2A> método se usa para extraer la primera cadena de la pila.</span><span class="sxs-lookup"><span data-stu-id="09e30-243">The <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop the first string off the stack.</span></span> <span data-ttu-id="09e30-244">El <xref:System.Collections.Generic.Stack%601.Peek%2A> método se utiliza para buscar el siguiente elemento en la pila y, a continuación, el <xref:System.Collections.Generic.Stack%601.Pop%2A> método se utiliza para introducirla.</span><span class="sxs-lookup"><span data-stu-id="09e30-244">The <xref:System.Collections.Generic.Stack%601.Peek%2A> method is used to look at the next item on the stack, and then the <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop it off.</span></span>  
  
 <span data-ttu-id="09e30-245">El <xref:System.Collections.Generic.Stack%601.ToArray%2A> método se utiliza para crear una matriz y copiar los elementos de la pila en él y, después, la matriz se pasa a la <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor que toma <xref:System.Collections.Generic.IEnumerable%601>, crear una copia de la pila con el orden de los elementos invertidos.</span><span class="sxs-lookup"><span data-stu-id="09e30-245">The <xref:System.Collections.Generic.Stack%601.ToArray%2A> method is used to create an array and copy the stack elements to it, then the array is passed to the <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor that takes <xref:System.Collections.Generic.IEnumerable%601>, creating a copy of the stack with the order of the elements reversed.</span></span> <span data-ttu-id="09e30-246">Se muestran los elementos de la copia.</span><span class="sxs-lookup"><span data-stu-id="09e30-246">The elements of the copy are displayed.</span></span>  
  
 <span data-ttu-id="09e30-247">Dos veces el tamaño de la pila se crea una matriz y el <xref:System.Collections.Generic.Stack%601.CopyTo%2A> método se usa para copiar los elementos de matriz, empezando por el centro de la matriz.</span><span class="sxs-lookup"><span data-stu-id="09e30-247">An array twice the size of the stack is created, and the <xref:System.Collections.Generic.Stack%601.CopyTo%2A> method is used to copy the array elements beginning at the middle of the array.</span></span> <span data-ttu-id="09e30-248">El <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor se utiliza de nuevo para crear una copia de la pila con el orden de los elementos invertidos; por tanto, son los tres elementos null al final.</span><span class="sxs-lookup"><span data-stu-id="09e30-248">The <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor is used again to create a copy of the stack with the order of elements reversed; thus, the three null elements are at the end.</span></span>  
  
 <span data-ttu-id="09e30-249">El <xref:System.Collections.Generic.Stack%601.Contains%2A> método se usa para mostrar que la cadena "4" está en la primera copia de la pila, tras el cual el <xref:System.Collections.Generic.Stack%601.Clear%2A> método borra la copia y el <xref:System.Collections.Generic.Stack%601.Count%2A> propiedad muestra que la pila está vacía.</span><span class="sxs-lookup"><span data-stu-id="09e30-249">The <xref:System.Collections.Generic.Stack%601.Contains%2A> method is used to show that the string "four" is in the first copy of the stack, after which the <xref:System.Collections.Generic.Stack%601.Clear%2A> method clears the copy and the <xref:System.Collections.Generic.Stack%601.Count%2A> property shows that the stack is empty.</span></span>  
  
 [!code-csharp[Generic.Stack#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Stack/cs/source.cs#1)]
 [!code-vb[Generic.Stack#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Stack/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.Stack&lt;T&gt;.Enumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Collections.Generic.Stack`1/Enumerator&lt;!T&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Stack`1.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As Stack(Of T).Enumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::Stack&lt;T&gt;::Enumerator GetEnumerator();" />
      <MemberSignature Language="F#" Value="member this.GetEnumerator : unit -&gt; System.Collections.Generic.Stack&lt;'T&gt;.Enumerator" Usage="stack.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Stack&lt;T&gt;+Enumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="09e30-250">Devuelve un enumerador para la colección <see cref="T:System.Collections.Generic.Stack`1" />.</span><span class="sxs-lookup"><span data-stu-id="09e30-250">Returns an enumerator for the <see cref="T:System.Collections.Generic.Stack`1" />.</span></span></summary>
        <returns><span data-ttu-id="09e30-251">Estructura <see cref="T:System.Collections.Generic.Stack`1.Enumerator" /> para la colección <see cref="T:System.Collections.Generic.Stack`1" />.</span><span class="sxs-lookup"><span data-stu-id="09e30-251">An <see cref="T:System.Collections.Generic.Stack`1.Enumerator" /> for the <see cref="T:System.Collections.Generic.Stack`1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09e30-252">El `foreach` instrucción del lenguaje C# (`for each` en C++, `For Each` en Visual Basic) oculta la complejidad de los enumeradores.</span><span class="sxs-lookup"><span data-stu-id="09e30-252">The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) hides the complexity of the enumerators.</span></span> <span data-ttu-id="09e30-253">Por lo tanto, se recomienda el uso de `foreach`, en lugar de manipular directamente el enumerador.</span><span class="sxs-lookup"><span data-stu-id="09e30-253">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="09e30-254">Los enumeradores pueden usarse para leer los datos de la colección, pero no para modificar la colección subyacente.</span><span class="sxs-lookup"><span data-stu-id="09e30-254">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="09e30-255">En principio, el enumerador se coloca antes del primer elemento de la colección.</span><span class="sxs-lookup"><span data-stu-id="09e30-255">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="09e30-256">En esta posición, el valor de propiedad <xref:System.Collections.Generic.Stack%601.Enumerator.Current%2A> está sin definir.</span><span class="sxs-lookup"><span data-stu-id="09e30-256">At this position, <xref:System.Collections.Generic.Stack%601.Enumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="09e30-257">Por lo tanto, debe llamar a <xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> para adelantar el enumerador hasta el primer elemento de la colección antes de leer el valor de <xref:System.Collections.Generic.Stack%601.Enumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="09e30-257">Therefore, you must call <xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Generic.Stack%601.Enumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="09e30-258"><xref:System.Collections.Generic.Stack%601.Enumerator.Current%2A> devuelve el mismo objeto hasta que se llama a <xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="09e30-258"><xref:System.Collections.Generic.Stack%601.Enumerator.Current%2A> returns the same object until <xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> is called.</span></span> <span data-ttu-id="09e30-259"><xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> establece <xref:System.Collections.Generic.Stack%601.Enumerator.Current%2A> en el siguiente elemento.</span><span class="sxs-lookup"><span data-stu-id="09e30-259"><xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> sets <xref:System.Collections.Generic.Stack%601.Enumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="09e30-260">Si <xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> pasa el final de la colección, el enumerador se coloca después del último elemento de la colección y <xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> devuelve `false`.</span><span class="sxs-lookup"><span data-stu-id="09e30-260">If <xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="09e30-261">Cuando el enumerador está en esta posición, las llamadas subsiguientes a <xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> también devolver `false`.</span><span class="sxs-lookup"><span data-stu-id="09e30-261">When the enumerator is at this position, subsequent calls to <xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="09e30-262">Si la última llamada a <xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> devuelve `false`, <xref:System.Collections.Generic.Stack%601.Enumerator.Current%2A> es indefinido.</span><span class="sxs-lookup"><span data-stu-id="09e30-262">If the last call to <xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> returned `false`, <xref:System.Collections.Generic.Stack%601.Enumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="09e30-263">No puede volver a establecer la propiedad <xref:System.Collections.Generic.Stack%601.Enumerator.Current%2A> en el primer elemento de la colección, sino que debe crear una nueva instancia del enumerador.</span><span class="sxs-lookup"><span data-stu-id="09e30-263">You cannot set <xref:System.Collections.Generic.Stack%601.Enumerator.Current%2A> to the first element of the collection again; you must create a new enumerator instance instead.</span></span>  
  
 <span data-ttu-id="09e30-264">Un enumerador es válido mientras la colección no cambie.</span><span class="sxs-lookup"><span data-stu-id="09e30-264">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="09e30-265">Si se realizan cambios en la colección, como agregar, modificar, o eliminar elementos, el enumerador queda invalida invalidado y la siguiente llamada a <xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> o <xref:System.Collections.Generic.Stack%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A> produce una <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="09e30-265">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> or <xref:System.Collections.Generic.Stack%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="09e30-266">El enumerador no tiene acceso exclusivo a la colección y, por tanto, la enumeración en una colección no es intrínsicamente un procedimiento seguro para subprocesos.</span><span class="sxs-lookup"><span data-stu-id="09e30-266">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="09e30-267">A fin de garantizar la seguridad de los subprocesos, se puede bloquear la colección durante toda la enumeración.</span><span class="sxs-lookup"><span data-stu-id="09e30-267">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="09e30-268">Para permitir que varios subprocesos obtengan acceso de lectura y escritura a la colección, debe implementar su propia sincronización.</span><span class="sxs-lookup"><span data-stu-id="09e30-268">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="09e30-269">Las implementaciones de colecciones en predeterminadas <xref:System.Collections.Generic?displayProperty=nameWithType> no están sincronizadas.</span><span class="sxs-lookup"><span data-stu-id="09e30-269">Default implementations of collections in <xref:System.Collections.Generic?displayProperty=nameWithType> are not synchronized.</span></span>  
  
 <span data-ttu-id="09e30-270">Este método es una operación o (1).</span><span class="sxs-lookup"><span data-stu-id="09e30-270">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09e30-271">En el ejemplo de código siguiente se muestra que el <xref:System.Collections.Generic.Stack%601> clase genérica es enumerable.</span><span class="sxs-lookup"><span data-stu-id="09e30-271">The following code example demonstrates that the <xref:System.Collections.Generic.Stack%601> generic class is enumerable.</span></span> <span data-ttu-id="09e30-272">El `foreach` instrucción (`For Each` en Visual Basic, `for each` en C++) se utiliza para enumerar la cola.</span><span class="sxs-lookup"><span data-stu-id="09e30-272">The `foreach` statement (`For Each` in Visual Basic, `for each` in C++) is used to enumerate the queue.</span></span>  
  
 <span data-ttu-id="09e30-273">El ejemplo de código crea una pila de cadenas con capacidad predeterminada y usa el <xref:System.Collections.Generic.Stack%601.Push%2A> método para insertar cinco cadenas en la pila.</span><span class="sxs-lookup"><span data-stu-id="09e30-273">The code example creates a stack of strings with default capacity and uses the <xref:System.Collections.Generic.Stack%601.Push%2A> method to push five strings onto the stack.</span></span> <span data-ttu-id="09e30-274">Se enumeran los elementos de la pila, que no cambia el estado de la pila.</span><span class="sxs-lookup"><span data-stu-id="09e30-274">The elements of the stack are enumerated, which does not change the state of the stack.</span></span> <span data-ttu-id="09e30-275">El <xref:System.Collections.Generic.Stack%601.Pop%2A> método se usa para extraer la primera cadena de la pila.</span><span class="sxs-lookup"><span data-stu-id="09e30-275">The <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop the first string off the stack.</span></span> <span data-ttu-id="09e30-276">El <xref:System.Collections.Generic.Stack%601.Peek%2A> método se utiliza para buscar el siguiente elemento en la pila y, a continuación, el <xref:System.Collections.Generic.Stack%601.Pop%2A> método se utiliza para introducirla.</span><span class="sxs-lookup"><span data-stu-id="09e30-276">The <xref:System.Collections.Generic.Stack%601.Peek%2A> method is used to look at the next item on the stack, and then the <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop it off.</span></span>  
  
 <span data-ttu-id="09e30-277">El <xref:System.Collections.Generic.Stack%601.ToArray%2A> método se utiliza para crear una matriz y copiar los elementos de la pila en él y, después, la matriz se pasa a la <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor que toma <xref:System.Collections.Generic.IEnumerable%601>, crear una copia de la pila con el orden de los elementos invertidos.</span><span class="sxs-lookup"><span data-stu-id="09e30-277">The <xref:System.Collections.Generic.Stack%601.ToArray%2A> method is used to create an array and copy the stack elements to it, then the array is passed to the <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor that takes <xref:System.Collections.Generic.IEnumerable%601>, creating a copy of the stack with the order of the elements reversed.</span></span> <span data-ttu-id="09e30-278">Se muestran los elementos de la copia.</span><span class="sxs-lookup"><span data-stu-id="09e30-278">The elements of the copy are displayed.</span></span>  
  
 <span data-ttu-id="09e30-279">Dos veces el tamaño de la pila se crea una matriz y el <xref:System.Collections.Generic.Stack%601.CopyTo%2A> método se usa para copiar los elementos de matriz, empezando por el centro de la matriz.</span><span class="sxs-lookup"><span data-stu-id="09e30-279">An array twice the size of the stack is created, and the <xref:System.Collections.Generic.Stack%601.CopyTo%2A> method is used to copy the array elements beginning at the middle of the array.</span></span> <span data-ttu-id="09e30-280">El <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor se utiliza de nuevo para crear una copia de la pila con el orden de los elementos invertidos; por tanto, son los tres elementos null al final.</span><span class="sxs-lookup"><span data-stu-id="09e30-280">The <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor is used again to create a copy of the stack with the order of elements reversed; thus, the three null elements are at the end.</span></span>  
  
 <span data-ttu-id="09e30-281">El <xref:System.Collections.Generic.Stack%601.Contains%2A> método se usa para mostrar que la cadena "4" está en la primera copia de la pila, tras el cual el <xref:System.Collections.Generic.Stack%601.Clear%2A> método borra la copia y el <xref:System.Collections.Generic.Stack%601.Count%2A> propiedad muestra que la pila está vacía.</span><span class="sxs-lookup"><span data-stu-id="09e30-281">The <xref:System.Collections.Generic.Stack%601.Contains%2A> method is used to show that the string "four" is in the first copy of the stack, after which the <xref:System.Collections.Generic.Stack%601.Clear%2A> method clears the copy and the <xref:System.Collections.Generic.Stack%601.Count%2A> property shows that the stack is empty.</span></span>  
  
 [!code-csharp[Generic.Stack#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Stack/cs/source.cs#1)]
 [!code-vb[Generic.Stack#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Stack/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.Stack`1.Enumerator" />
        <altmember cref="T:System.Collections.Generic.IEnumerator`1" />
      </Docs>
    </Member>
    <Member MemberName="Peek">
      <MemberSignature Language="C#" Value="public T Peek ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !T Peek() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Stack`1.Peek" />
      <MemberSignature Language="VB.NET" Value="Public Function Peek () As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; T Peek();" />
      <MemberSignature Language="F#" Value="member this.Peek : unit -&gt; 'T" Usage="stack.Peek " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="09e30-282">Devuelve el objeto situado al principio de <see cref="T:System.Collections.Generic.Stack`1" /> sin eliminarlo.</span><span class="sxs-lookup"><span data-stu-id="09e30-282">Returns the object at the top of the <see cref="T:System.Collections.Generic.Stack`1" /> without removing it.</span></span></summary>
        <returns><span data-ttu-id="09e30-283">Objeto situado al principio de la colección <see cref="T:System.Collections.Generic.Stack`1" />.</span><span class="sxs-lookup"><span data-stu-id="09e30-283">The object at the top of the <see cref="T:System.Collections.Generic.Stack`1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09e30-284">Este método es similar al método <xref:System.Collections.Generic.Stack%601.Pop%2A>, pero <xref:System.Collections.Generic.Stack%601.Peek%2A> no modifica la colección <xref:System.Collections.Generic.Stack%601>.</span><span class="sxs-lookup"><span data-stu-id="09e30-284">This method is similar to the <xref:System.Collections.Generic.Stack%601.Pop%2A> method, but <xref:System.Collections.Generic.Stack%601.Peek%2A> does not modify the <xref:System.Collections.Generic.Stack%601>.</span></span>  
  
 <span data-ttu-id="09e30-285">Si tipo `T` es un tipo de referencia, `null` puede forzarse la <xref:System.Collections.Generic.Stack%601> como marcador de posición, si es necesario.</span><span class="sxs-lookup"><span data-stu-id="09e30-285">If type `T` is a reference type, `null` can be pushed onto the <xref:System.Collections.Generic.Stack%601> as a placeholder, if needed.</span></span>  
  
 <span data-ttu-id="09e30-286">Este método es una operación o (1).</span><span class="sxs-lookup"><span data-stu-id="09e30-286">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09e30-287">En el ejemplo de código siguiente se muestra varios métodos de la <xref:System.Collections.Generic.Stack%601> clase genérica, incluido el <xref:System.Collections.Generic.Stack%601.Peek%2A> método.</span><span class="sxs-lookup"><span data-stu-id="09e30-287">The following code example demonstrates several methods of the <xref:System.Collections.Generic.Stack%601> generic class, including the <xref:System.Collections.Generic.Stack%601.Peek%2A> method.</span></span>  
  
 <span data-ttu-id="09e30-288">El ejemplo de código crea una pila de cadenas con capacidad predeterminada y usa el <xref:System.Collections.Generic.Stack%601.Push%2A> método para insertar cinco cadenas en la pila.</span><span class="sxs-lookup"><span data-stu-id="09e30-288">The code example creates a stack of strings with default capacity and uses the <xref:System.Collections.Generic.Stack%601.Push%2A> method to push five strings onto the stack.</span></span> <span data-ttu-id="09e30-289">Se enumeran los elementos de la pila, que no cambia el estado de la pila.</span><span class="sxs-lookup"><span data-stu-id="09e30-289">The elements of the stack are enumerated, which does not change the state of the stack.</span></span> <span data-ttu-id="09e30-290">El <xref:System.Collections.Generic.Stack%601.Pop%2A> método se usa para extraer la primera cadena de la pila.</span><span class="sxs-lookup"><span data-stu-id="09e30-290">The <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop the first string off the stack.</span></span> <span data-ttu-id="09e30-291">El <xref:System.Collections.Generic.Stack%601.Peek%2A> método se utiliza para buscar el siguiente elemento en la pila y, a continuación, el <xref:System.Collections.Generic.Stack%601.Pop%2A> método se utiliza para introducirla.</span><span class="sxs-lookup"><span data-stu-id="09e30-291">The <xref:System.Collections.Generic.Stack%601.Peek%2A> method is used to look at the next item on the stack, and then the <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop it off.</span></span>  
  
 <span data-ttu-id="09e30-292">El <xref:System.Collections.Generic.Stack%601.ToArray%2A> método se utiliza para crear una matriz y copiar los elementos de la pila en él y, después, la matriz se pasa a la <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor que toma <xref:System.Collections.Generic.IEnumerable%601>, crear una copia de la pila con el orden de los elementos invertidos.</span><span class="sxs-lookup"><span data-stu-id="09e30-292">The <xref:System.Collections.Generic.Stack%601.ToArray%2A> method is used to create an array and copy the stack elements to it, then the array is passed to the <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor that takes <xref:System.Collections.Generic.IEnumerable%601>, creating a copy of the stack with the order of the elements reversed.</span></span> <span data-ttu-id="09e30-293">Se muestran los elementos de la copia.</span><span class="sxs-lookup"><span data-stu-id="09e30-293">The elements of the copy are displayed.</span></span>  
  
 <span data-ttu-id="09e30-294">Dos veces el tamaño de la pila se crea una matriz y el <xref:System.Collections.Generic.Stack%601.CopyTo%2A> método se usa para copiar los elementos de matriz, empezando por el centro de la matriz.</span><span class="sxs-lookup"><span data-stu-id="09e30-294">An array twice the size of the stack is created, and the <xref:System.Collections.Generic.Stack%601.CopyTo%2A> method is used to copy the array elements beginning at the middle of the array.</span></span> <span data-ttu-id="09e30-295">El <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor se utiliza de nuevo para crear una copia de la pila con el orden de los elementos invertidos; por tanto, son los tres elementos null al final.</span><span class="sxs-lookup"><span data-stu-id="09e30-295">The <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor is used again to create a copy of the stack with the order of elements reversed; thus, the three null elements are at the end.</span></span>  
  
 <span data-ttu-id="09e30-296">El <xref:System.Collections.Generic.Stack%601.Contains%2A> método se usa para mostrar que la cadena "4" está en la primera copia de la pila, tras el cual el <xref:System.Collections.Generic.Stack%601.Clear%2A> método borra la copia y el <xref:System.Collections.Generic.Stack%601.Count%2A> propiedad muestra que la pila está vacía.</span><span class="sxs-lookup"><span data-stu-id="09e30-296">The <xref:System.Collections.Generic.Stack%601.Contains%2A> method is used to show that the string "four" is in the first copy of the stack, after which the <xref:System.Collections.Generic.Stack%601.Clear%2A> method clears the copy and the <xref:System.Collections.Generic.Stack%601.Count%2A> property shows that the stack is empty.</span></span>  
  
 [!code-csharp[Generic.Stack#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Stack/cs/source.cs#1)]
 [!code-vb[Generic.Stack#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Stack/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="09e30-297">La colección <see cref="T:System.Collections.Generic.Stack`1" /> está vacía.</span><span class="sxs-lookup"><span data-stu-id="09e30-297">The <see cref="T:System.Collections.Generic.Stack`1" /> is empty.</span></span></exception>
        <altmember cref="M:System.Collections.Generic.Stack`1.Pop" />
        <altmember cref="M:System.Collections.Generic.Stack`1.Push(`0)" />
      </Docs>
    </Member>
    <Member MemberName="Pop">
      <MemberSignature Language="C#" Value="public T Pop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !T Pop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Stack`1.Pop" />
      <MemberSignature Language="VB.NET" Value="Public Function Pop () As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; T Pop();" />
      <MemberSignature Language="F#" Value="member this.Pop : unit -&gt; 'T" Usage="stack.Pop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="09e30-298">Quita y devuelve el objeto situado al principio de <see cref="T:System.Collections.Generic.Stack`1" />.</span><span class="sxs-lookup"><span data-stu-id="09e30-298">Removes and returns the object at the top of the <see cref="T:System.Collections.Generic.Stack`1" />.</span></span></summary>
        <returns><span data-ttu-id="09e30-299">Objeto eliminado del principio de la colección <see cref="T:System.Collections.Generic.Stack`1" />.</span><span class="sxs-lookup"><span data-stu-id="09e30-299">The object removed from the top of the <see cref="T:System.Collections.Generic.Stack`1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09e30-300">Este método es similar al método <xref:System.Collections.Generic.Stack%601.Peek%2A>, pero <xref:System.Collections.Generic.Stack%601.Peek%2A> no modifica la colección <xref:System.Collections.Generic.Stack%601>.</span><span class="sxs-lookup"><span data-stu-id="09e30-300">This method is similar to the <xref:System.Collections.Generic.Stack%601.Peek%2A> method, but <xref:System.Collections.Generic.Stack%601.Peek%2A> does not modify the <xref:System.Collections.Generic.Stack%601>.</span></span>  
  
 <span data-ttu-id="09e30-301">Si tipo `T` es un tipo de referencia, `null` puede forzarse la <xref:System.Collections.Generic.Stack%601> como marcador de posición, si es necesario.</span><span class="sxs-lookup"><span data-stu-id="09e30-301">If type `T` is a reference type, `null` can be pushed onto the <xref:System.Collections.Generic.Stack%601> as a placeholder, if needed.</span></span>  
  
 <span data-ttu-id="09e30-302"><xref:System.Collections.Generic.Stack%601> se implementa como una matriz.</span><span class="sxs-lookup"><span data-stu-id="09e30-302"><xref:System.Collections.Generic.Stack%601> is implemented as an array.</span></span> <span data-ttu-id="09e30-303">Este método es una operación o (1).</span><span class="sxs-lookup"><span data-stu-id="09e30-303">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09e30-304">En el ejemplo de código siguiente se muestra varios métodos de la <xref:System.Collections.Generic.Stack%601> clase genérica, incluido el <xref:System.Collections.Generic.Stack%601.Pop%2A> método.</span><span class="sxs-lookup"><span data-stu-id="09e30-304">The following code example demonstrates several methods of the <xref:System.Collections.Generic.Stack%601> generic class, including the <xref:System.Collections.Generic.Stack%601.Pop%2A> method.</span></span>  
  
 <span data-ttu-id="09e30-305">El ejemplo de código crea una pila de cadenas con capacidad predeterminada y usa el <xref:System.Collections.Generic.Stack%601.Push%2A> método para insertar cinco cadenas en la pila.</span><span class="sxs-lookup"><span data-stu-id="09e30-305">The code example creates a stack of strings with default capacity and uses the <xref:System.Collections.Generic.Stack%601.Push%2A> method to push five strings onto the stack.</span></span> <span data-ttu-id="09e30-306">Se enumeran los elementos de la pila, que no cambia el estado de la pila.</span><span class="sxs-lookup"><span data-stu-id="09e30-306">The elements of the stack are enumerated, which does not change the state of the stack.</span></span> <span data-ttu-id="09e30-307">El <xref:System.Collections.Generic.Stack%601.Pop%2A> método se usa para extraer la primera cadena de la pila.</span><span class="sxs-lookup"><span data-stu-id="09e30-307">The <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop the first string off the stack.</span></span> <span data-ttu-id="09e30-308">El <xref:System.Collections.Generic.Stack%601.Peek%2A> método se utiliza para buscar el siguiente elemento en la pila y, a continuación, el <xref:System.Collections.Generic.Stack%601.Pop%2A> método se utiliza para introducirla.</span><span class="sxs-lookup"><span data-stu-id="09e30-308">The <xref:System.Collections.Generic.Stack%601.Peek%2A> method is used to look at the next item on the stack, and then the <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop it off.</span></span>  
  
 <span data-ttu-id="09e30-309">El <xref:System.Collections.Generic.Stack%601.ToArray%2A> método se utiliza para crear una matriz y copiar los elementos de la pila en él y, después, la matriz se pasa a la <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor que toma <xref:System.Collections.Generic.IEnumerable%601>, crear una copia de la pila con el orden de los elementos invertidos.</span><span class="sxs-lookup"><span data-stu-id="09e30-309">The <xref:System.Collections.Generic.Stack%601.ToArray%2A> method is used to create an array and copy the stack elements to it, then the array is passed to the <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor that takes <xref:System.Collections.Generic.IEnumerable%601>, creating a copy of the stack with the order of the elements reversed.</span></span> <span data-ttu-id="09e30-310">Se muestran los elementos de la copia.</span><span class="sxs-lookup"><span data-stu-id="09e30-310">The elements of the copy are displayed.</span></span>  
  
 <span data-ttu-id="09e30-311">Dos veces el tamaño de la pila se crea una matriz y el <xref:System.Collections.Generic.Stack%601.CopyTo%2A> método se usa para copiar los elementos de matriz, empezando por el centro de la matriz.</span><span class="sxs-lookup"><span data-stu-id="09e30-311">An array twice the size of the stack is created, and the <xref:System.Collections.Generic.Stack%601.CopyTo%2A> method is used to copy the array elements beginning at the middle of the array.</span></span> <span data-ttu-id="09e30-312">El <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor se utiliza de nuevo para crear una copia de la pila con el orden de los elementos invertidos; por tanto, son los tres elementos null al final.</span><span class="sxs-lookup"><span data-stu-id="09e30-312">The <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor is used again to create a copy of the stack with the order of elements reversed; thus, the three null elements are at the end.</span></span>  
  
 <span data-ttu-id="09e30-313">El <xref:System.Collections.Generic.Stack%601.Contains%2A> método se usa para mostrar que la cadena "4" está en la primera copia de la pila, tras el cual el <xref:System.Collections.Generic.Stack%601.Clear%2A> método borra la copia y el <xref:System.Collections.Generic.Stack%601.Count%2A> propiedad muestra que la pila está vacía.</span><span class="sxs-lookup"><span data-stu-id="09e30-313">The <xref:System.Collections.Generic.Stack%601.Contains%2A> method is used to show that the string "four" is in the first copy of the stack, after which the <xref:System.Collections.Generic.Stack%601.Clear%2A> method clears the copy and the <xref:System.Collections.Generic.Stack%601.Count%2A> property shows that the stack is empty.</span></span>  
  
 [!code-csharp[Generic.Stack#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Stack/cs/source.cs#1)]
 [!code-vb[Generic.Stack#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Stack/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="09e30-314">La colección <see cref="T:System.Collections.Generic.Stack`1" /> está vacía.</span><span class="sxs-lookup"><span data-stu-id="09e30-314">The <see cref="T:System.Collections.Generic.Stack`1" /> is empty.</span></span></exception>
        <altmember cref="M:System.Collections.Generic.Stack`1.Peek" />
        <altmember cref="M:System.Collections.Generic.Stack`1.Push(`0)" />
      </Docs>
    </Member>
    <Member MemberName="Push">
      <MemberSignature Language="C#" Value="public void Push (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Push(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Stack`1.Push(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Push (item As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Push(T item);" />
      <MemberSignature Language="F#" Value="member this.Push : 'T -&gt; unit" Usage="stack.Push item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="09e30-315">Objeto que se va a insertar en la colección <see cref="T:System.Collections.Generic.Stack`1" />.</span><span class="sxs-lookup"><span data-stu-id="09e30-315">The object to push onto the <see cref="T:System.Collections.Generic.Stack`1" />.</span></span> <span data-ttu-id="09e30-316">El valor puede ser <see langword="null" /> para los tipos de referencia.</span><span class="sxs-lookup"><span data-stu-id="09e30-316">The value can be <see langword="null" /> for reference types.</span></span></param>
        <summary><span data-ttu-id="09e30-317">Inserta un objeto al principio de <see cref="T:System.Collections.Generic.Stack`1" />.</span><span class="sxs-lookup"><span data-stu-id="09e30-317">Inserts an object at the top of the <see cref="T:System.Collections.Generic.Stack`1" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09e30-318"><xref:System.Collections.Generic.Stack%601> se implementa como una matriz.</span><span class="sxs-lookup"><span data-stu-id="09e30-318"><xref:System.Collections.Generic.Stack%601> is implemented as an array.</span></span>  
  
 <span data-ttu-id="09e30-319">Si <xref:System.Collections.Generic.Stack%601.Count%2A> ya es igual a la capacidad, la capacidad de la <xref:System.Collections.Generic.Stack%601> incrementando reasignación automática de la matriz interna, y se copian los elementos existentes en la nueva matriz antes de agrega el nuevo elemento.</span><span class="sxs-lookup"><span data-stu-id="09e30-319">If <xref:System.Collections.Generic.Stack%601.Count%2A> already equals the capacity, the capacity of the <xref:System.Collections.Generic.Stack%601> is increased by automatically reallocating the internal array, and the existing elements are copied to the new array before the new element is added.</span></span>  
  
 <span data-ttu-id="09e30-320">Si tipo `T` es un tipo de referencia, `null` puede forzarse la <xref:System.Collections.Generic.Stack%601> como marcador de posición, si es necesario.</span><span class="sxs-lookup"><span data-stu-id="09e30-320">If type `T` is a reference type, `null` can be pushed onto the <xref:System.Collections.Generic.Stack%601> as a placeholder, if needed.</span></span> <span data-ttu-id="09e30-321">Ocupa una posición en la pila y se tratan como cualquier objeto.</span><span class="sxs-lookup"><span data-stu-id="09e30-321">It occupies a slot in the stack and is treated like any object.</span></span>  
  
 <span data-ttu-id="09e30-322">Si <xref:System.Collections.Generic.Stack%601.Count%2A> es menor que la capacidad de la pila, <xref:System.Collections.Generic.Stack%601.Push%2A> es una operación o (1).</span><span class="sxs-lookup"><span data-stu-id="09e30-322">If <xref:System.Collections.Generic.Stack%601.Count%2A> is less than the capacity of the stack, <xref:System.Collections.Generic.Stack%601.Push%2A> is an O(1) operation.</span></span> <span data-ttu-id="09e30-323">Si la capacidad debe aumentarse para alojar el nuevo elemento, <xref:System.Collections.Generic.Stack%601.Push%2A> se convierte en una O (`n`) operación, donde `n` es <xref:System.Collections.Generic.Stack%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="09e30-323">If the capacity needs to be increased to accommodate the new element, <xref:System.Collections.Generic.Stack%601.Push%2A> becomes an O(`n`) operation, where `n` is <xref:System.Collections.Generic.Stack%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09e30-324">En el ejemplo de código siguiente se muestra varios métodos de la <xref:System.Collections.Generic.Stack%601> clase genérica, incluido el <xref:System.Collections.Generic.Stack%601.Push%2A> método.</span><span class="sxs-lookup"><span data-stu-id="09e30-324">The following code example demonstrates several methods of the <xref:System.Collections.Generic.Stack%601> generic class, including the <xref:System.Collections.Generic.Stack%601.Push%2A> method.</span></span>  
  
 <span data-ttu-id="09e30-325">El ejemplo de código crea una pila de cadenas con capacidad predeterminada y usa el <xref:System.Collections.Generic.Stack%601.Push%2A> método para insertar cinco cadenas en la pila.</span><span class="sxs-lookup"><span data-stu-id="09e30-325">The code example creates a stack of strings with default capacity and uses the <xref:System.Collections.Generic.Stack%601.Push%2A> method to push five strings onto the stack.</span></span> <span data-ttu-id="09e30-326">Se enumeran los elementos de la pila, que no cambia el estado de la pila.</span><span class="sxs-lookup"><span data-stu-id="09e30-326">The elements of the stack are enumerated, which does not change the state of the stack.</span></span> <span data-ttu-id="09e30-327">El <xref:System.Collections.Generic.Stack%601.Pop%2A> método se usa para extraer la primera cadena de la pila.</span><span class="sxs-lookup"><span data-stu-id="09e30-327">The <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop the first string off the stack.</span></span> <span data-ttu-id="09e30-328">El <xref:System.Collections.Generic.Stack%601.Peek%2A> método se utiliza para buscar el siguiente elemento en la pila y, a continuación, el <xref:System.Collections.Generic.Stack%601.Pop%2A> método se utiliza para introducirla.</span><span class="sxs-lookup"><span data-stu-id="09e30-328">The <xref:System.Collections.Generic.Stack%601.Peek%2A> method is used to look at the next item on the stack, and then the <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop it off.</span></span>  
  
 <span data-ttu-id="09e30-329">El <xref:System.Collections.Generic.Stack%601.ToArray%2A> método se utiliza para crear una matriz y copiar los elementos de la pila en él y, después, la matriz se pasa a la <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor que toma <xref:System.Collections.Generic.IEnumerable%601>, crear una copia de la pila con el orden de los elementos invertidos.</span><span class="sxs-lookup"><span data-stu-id="09e30-329">The <xref:System.Collections.Generic.Stack%601.ToArray%2A> method is used to create an array and copy the stack elements to it, then the array is passed to the <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor that takes <xref:System.Collections.Generic.IEnumerable%601>, creating a copy of the stack with the order of the elements reversed.</span></span> <span data-ttu-id="09e30-330">Se muestran los elementos de la copia.</span><span class="sxs-lookup"><span data-stu-id="09e30-330">The elements of the copy are displayed.</span></span>  
  
 <span data-ttu-id="09e30-331">Dos veces el tamaño de la pila se crea una matriz y el <xref:System.Collections.Generic.Stack%601.CopyTo%2A> método se usa para copiar los elementos de matriz, empezando por el centro de la matriz.</span><span class="sxs-lookup"><span data-stu-id="09e30-331">An array twice the size of the stack is created, and the <xref:System.Collections.Generic.Stack%601.CopyTo%2A> method is used to copy the array elements beginning at the middle of the array.</span></span> <span data-ttu-id="09e30-332">El <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor se utiliza de nuevo para crear una copia de la pila con el orden de los elementos invertidos; por tanto, son los tres elementos null al final.</span><span class="sxs-lookup"><span data-stu-id="09e30-332">The <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor is used again to create a copy of the stack with the order of elements reversed; thus, the three null elements are at the end.</span></span>  
  
 <span data-ttu-id="09e30-333">El <xref:System.Collections.Generic.Stack%601.Contains%2A> método se usa para mostrar que la cadena "4" está en la primera copia de la pila, tras el cual el <xref:System.Collections.Generic.Stack%601.Clear%2A> método borra la copia y el <xref:System.Collections.Generic.Stack%601.Count%2A> propiedad muestra que la pila está vacía.</span><span class="sxs-lookup"><span data-stu-id="09e30-333">The <xref:System.Collections.Generic.Stack%601.Contains%2A> method is used to show that the string "four" is in the first copy of the stack, after which the <xref:System.Collections.Generic.Stack%601.Clear%2A> method clears the copy and the <xref:System.Collections.Generic.Stack%601.Count%2A> property shows that the stack is empty.</span></span>  
  
 [!code-csharp[Generic.Stack#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Stack/cs/source.cs#1)]
 [!code-vb[Generic.Stack#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Stack/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.Stack`1.Peek" />
        <altmember cref="M:System.Collections.Generic.Stack`1.Pop" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;T&gt; IEnumerable&lt;T&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;!T&gt; System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Stack`1.System#Collections#Generic#IEnumerable&lt;T&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of T) Implements IEnumerable(Of T).GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerator&lt;T&gt; ^ System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator() = System::Collections::Generic::IEnumerable&lt;T&gt;::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="09e30-334">Devuelve un enumerador que procesa una iteración en la colección.</span><span class="sxs-lookup"><span data-stu-id="09e30-334">Returns an enumerator that iterates through the collection.</span></span></summary>
        <returns><span data-ttu-id="09e30-335"><see cref="T:System.Collections.Generic.IEnumerator`1" /> que se puede utilizar para recorrer en iteración la colección.</span><span class="sxs-lookup"><span data-stu-id="09e30-335">An <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09e30-336">El `foreach` instrucción del lenguaje C# (`for each` en C++, `For Each` en Visual Basic) oculta la complejidad de los enumeradores.</span><span class="sxs-lookup"><span data-stu-id="09e30-336">The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) hides the complexity of the enumerators.</span></span> <span data-ttu-id="09e30-337">Por lo tanto, se recomienda el uso de `foreach`, en lugar de manipular directamente el enumerador.</span><span class="sxs-lookup"><span data-stu-id="09e30-337">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="09e30-338">Los enumeradores pueden usarse para leer los datos de la colección, pero no para modificar la colección subyacente.</span><span class="sxs-lookup"><span data-stu-id="09e30-338">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="09e30-339">En principio, el enumerador se coloca antes del primer elemento de la colección.</span><span class="sxs-lookup"><span data-stu-id="09e30-339">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="09e30-340">En esta posición, el valor de propiedad <xref:System.Collections.Generic.IEnumerator%601.Current%2A> está sin definir.</span><span class="sxs-lookup"><span data-stu-id="09e30-340">At this position, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> is undefined.</span></span> <span data-ttu-id="09e30-341">Por lo tanto, debe llamar a <xref:System.Collections.IEnumerator.MoveNext%2A> para adelantar el enumerador hasta el primer elemento de la colección antes de leer el valor de <xref:System.Collections.Generic.IEnumerator%601.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="09e30-341">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Generic.IEnumerator%601.Current%2A>.</span></span>  
  
 <span data-ttu-id="09e30-342"><xref:System.Collections.Generic.IEnumerator%601.Current%2A> devuelve el mismo objeto hasta que se llama a <xref:System.Collections.IEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="09e30-342"><xref:System.Collections.Generic.IEnumerator%601.Current%2A> returns the same object until <xref:System.Collections.IEnumerator.MoveNext%2A> is called.</span></span> <span data-ttu-id="09e30-343"><xref:System.Collections.IEnumerator.MoveNext%2A> establece <xref:System.Collections.Generic.IEnumerator%601.Current%2A> en el siguiente elemento.</span><span class="sxs-lookup"><span data-stu-id="09e30-343"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.Generic.IEnumerator%601.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="09e30-344">Si <xref:System.Collections.IEnumerator.MoveNext%2A> pasa el final de la colección, el enumerador se coloca después del último elemento de la colección y <xref:System.Collections.IEnumerator.MoveNext%2A> devuelve `false`.</span><span class="sxs-lookup"><span data-stu-id="09e30-344">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="09e30-345">Cuando el enumerador está en esta posición, las llamadas subsiguientes a <xref:System.Collections.IEnumerator.MoveNext%2A> también devolver `false`.</span><span class="sxs-lookup"><span data-stu-id="09e30-345">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="09e30-346">Si la última llamada a <xref:System.Collections.IEnumerator.MoveNext%2A> devuelve `false`, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> es indefinido.</span><span class="sxs-lookup"><span data-stu-id="09e30-346">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> is undefined.</span></span> <span data-ttu-id="09e30-347">No puede volver a establecer la propiedad <xref:System.Collections.Generic.IEnumerator%601.Current%2A> en el primer elemento de la colección, sino que debe crear una nueva instancia del enumerador.</span><span class="sxs-lookup"><span data-stu-id="09e30-347">You cannot set <xref:System.Collections.Generic.IEnumerator%601.Current%2A> to the first element of the collection again; you must create a new enumerator instance instead.</span></span>  
  
 <span data-ttu-id="09e30-348">Un enumerador es válido mientras la colección no cambie.</span><span class="sxs-lookup"><span data-stu-id="09e30-348">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="09e30-349">Si se realizan cambios en la colección, como agregar, modificar, o eliminar elementos, el enumerador queda invalida invalidado y la siguiente llamada a <xref:System.Collections.IEnumerator.MoveNext%2A> o <xref:System.Collections.IEnumerator.Reset%2A> produce una <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="09e30-349">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="09e30-350">El enumerador no tiene acceso exclusivo a la colección y, por tanto, la enumeración en una colección no es intrínsicamente un procedimiento seguro para subprocesos.</span><span class="sxs-lookup"><span data-stu-id="09e30-350">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="09e30-351">A fin de garantizar la seguridad de los subprocesos, se puede bloquear la colección durante toda la enumeración.</span><span class="sxs-lookup"><span data-stu-id="09e30-351">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="09e30-352">Para permitir que varios subprocesos obtengan acceso de lectura y escritura a la colección, debe implementar su propia sincronización.</span><span class="sxs-lookup"><span data-stu-id="09e30-352">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="09e30-353">Las implementaciones de colecciones en predeterminadas <xref:System.Collections.Generic?displayProperty=nameWithType> no están sincronizadas.</span><span class="sxs-lookup"><span data-stu-id="09e30-353">Default implementations of collections in <xref:System.Collections.Generic?displayProperty=nameWithType> are not synchronized.</span></span>  
  
 <span data-ttu-id="09e30-354">Este método es una operación o (1).</span><span class="sxs-lookup"><span data-stu-id="09e30-354">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.IEnumerator`1" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Stack`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int arrayIndex) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="09e30-355"><see cref="T:System.Array" /> unidimensional que constituye el destino de los elementos copiados de <see cref="T:System.Collections.ICollection" />.</span><span class="sxs-lookup"><span data-stu-id="09e30-355">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.ICollection" />.</span></span> <span data-ttu-id="09e30-356">La matriz <see cref="T:System.Array" /> debe tener una indización de base cero.</span><span class="sxs-lookup"><span data-stu-id="09e30-356">The <see cref="T:System.Array" /> must have zero-based indexing.</span></span></param>
        <param name="arrayIndex"><span data-ttu-id="09e30-357">Índice de base cero en la <paramref name="array" /> donde comienza la copia.</span><span class="sxs-lookup"><span data-stu-id="09e30-357">The zero-based index in <paramref name="array" /> at which copying begins.</span></span></param>
        <summary><span data-ttu-id="09e30-358">Copia los elementos de <see cref="T:System.Collections.ICollection" /> en <see cref="T:System.Array" />, empezando por un índice determinado de <see cref="T:System.Array" />.</span><span class="sxs-lookup"><span data-stu-id="09e30-358">Copies the elements of the <see cref="T:System.Collections.ICollection" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="09e30-359">Si el tipo del origen de <xref:System.Collections.ICollection> no puede convertirse automáticamente al tipo del destino `array`, las implementaciones no genérica de <xref:System.Collections.ICollection.CopyTo%2A?displayProperty=nameWithType> throw <xref:System.InvalidCastException>, mientras que las implementaciones genéricas inician <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="09e30-359">If the type of the source <xref:System.Collections.ICollection> cannot be cast automatically to the type of the destination `array`, the non-generic implementations of <xref:System.Collections.ICollection.CopyTo%2A?displayProperty=nameWithType> throw <xref:System.InvalidCastException>, whereas the generic implementations throw <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="09e30-360">Este método es O (`n`) operación, donde `n` es <xref:System.Collections.Generic.Stack%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="09e30-360">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.Stack%601.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="09e30-361">El valor de <paramref name="array" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="09e30-361"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="09e30-362"><paramref name="arrayIndex" /> es menor que cero.</span><span class="sxs-lookup"><span data-stu-id="09e30-362"><paramref name="arrayIndex" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="09e30-363"><paramref name="array" /> es multidimensional.</span><span class="sxs-lookup"><span data-stu-id="09e30-363"><paramref name="array" /> is multidimensional.</span></span>  
  
<span data-ttu-id="09e30-364">O bien</span><span class="sxs-lookup"><span data-stu-id="09e30-364">-or-</span></span> 
 <span data-ttu-id="09e30-365"><paramref name="array" /> no tiene una indización de base cero.</span><span class="sxs-lookup"><span data-stu-id="09e30-365"><paramref name="array" /> does not have zero-based indexing.</span></span>  
  
<span data-ttu-id="09e30-366">O bien</span><span class="sxs-lookup"><span data-stu-id="09e30-366">-or-</span></span> 
<span data-ttu-id="09e30-367">El número de elementos de la <see cref="T:System.Collections.ICollection" /> de origen es mayor que el espacio disponible desde <paramref name="arrayIndex" /> hasta el final de la <paramref name="array" /> de destino.</span><span class="sxs-lookup"><span data-stu-id="09e30-367">The number of elements in the source <see cref="T:System.Collections.ICollection" /> is greater than the available space from <paramref name="arrayIndex" /> to the end of the destination <paramref name="array" />.</span></span>  
  
<span data-ttu-id="09e30-368">O bien</span><span class="sxs-lookup"><span data-stu-id="09e30-368">-or-</span></span> 
<span data-ttu-id="09e30-369">El tipo de la <see cref="T:System.Collections.ICollection" /> de origen no puede convertirse automáticamente al tipo de la <paramref name="array" /> de destino.</span><span class="sxs-lookup"><span data-stu-id="09e30-369">The type of the source <see cref="T:System.Collections.ICollection" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.Stack`1.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="09e30-370">Obtiene un valor que indica si el acceso a la interfaz <see cref="T:System.Collections.ICollection" /> está sincronizado (es seguro para subprocesos).</span><span class="sxs-lookup"><span data-stu-id="09e30-370">Gets a value indicating whether access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe).</span></span></summary>
        <value><span data-ttu-id="09e30-371">Es <see langword="true" /> si el acceso a <see cref="T:System.Collections.ICollection" /> está sincronizado (es seguro para subprocesos); de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="09e30-371"><see langword="true" /> if access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe); otherwise, <see langword="false" />.</span></span>  <span data-ttu-id="09e30-372">En la implementación predeterminada de <see cref="T:System.Collections.Generic.Stack`1" />, esta propiedad siempre devuelve <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="09e30-372">In the default implementation of <see cref="T:System.Collections.Generic.Stack`1" />, this property always returns <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09e30-373">Las implementaciones de colecciones en predeterminadas <xref:System.Collections.Generic?displayProperty=nameWithType> no están sincronizadas.</span><span class="sxs-lookup"><span data-stu-id="09e30-373">Default implementations of collections in <xref:System.Collections.Generic?displayProperty=nameWithType> are not synchronized.</span></span>  
  
 <span data-ttu-id="09e30-374">Enumerar una colección no es intrínsecamente un procedimiento seguro para subprocesos.</span><span class="sxs-lookup"><span data-stu-id="09e30-374">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="09e30-375">En el caso excepcional donde enumeraciones compitan con accesos de escritura, se debe bloquear la colección durante toda la enumeración.</span><span class="sxs-lookup"><span data-stu-id="09e30-375">In the rare case where enumerations contend with write accesses, you must lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="09e30-376">Para permitir que varios subprocesos obtengan acceso de lectura y escritura a la colección, debe implementar su propia sincronización.</span><span class="sxs-lookup"><span data-stu-id="09e30-376">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="09e30-377"><xref:System.Collections.ICollection.SyncRoot%2A> Devuelve un objeto que puede utilizarse para sincronizar el acceso a la <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="09e30-377"><xref:System.Collections.ICollection.SyncRoot%2A> returns an object that can be used to synchronize access to the <xref:System.Collections.ICollection>.</span></span> <span data-ttu-id="09e30-378">La sincronización es eficaz solo si todos los subprocesos bloquean este objeto antes de acceder a la colección.</span><span class="sxs-lookup"><span data-stu-id="09e30-378">Synchronization is effective only if all threads lock this object before accessing the collection.</span></span>  
  
 <span data-ttu-id="09e30-379">La recuperación del valor de esta propiedad es una operación O(1).</span><span class="sxs-lookup"><span data-stu-id="09e30-379">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.SyncRoot" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.Stack`1.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="09e30-380">Obtiene un objeto que se puede usar para sincronizar el acceso a <see cref="T:System.Collections.ICollection" />.</span><span class="sxs-lookup"><span data-stu-id="09e30-380">Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</span></span></summary>
        <value><span data-ttu-id="09e30-381">Objeto que se puede usar para sincronizar el acceso a <see cref="T:System.Collections.ICollection" />.</span><span class="sxs-lookup"><span data-stu-id="09e30-381">An object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</span></span>  <span data-ttu-id="09e30-382">En la implementación predeterminada de <see cref="T:System.Collections.Generic.Stack`1" />, esta propiedad siempre devuelve la instancia actual.</span><span class="sxs-lookup"><span data-stu-id="09e30-382">In the default implementation of <see cref="T:System.Collections.Generic.Stack`1" />, this property always returns the current instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09e30-383">Las implementaciones de colecciones en predeterminadas <xref:System.Collections.Generic?displayProperty=nameWithType> no están sincronizadas.</span><span class="sxs-lookup"><span data-stu-id="09e30-383">Default implementations of collections in <xref:System.Collections.Generic?displayProperty=nameWithType> are not synchronized.</span></span>  
  
 <span data-ttu-id="09e30-384">Enumerar una colección no es intrínsecamente un procedimiento seguro para subprocesos.</span><span class="sxs-lookup"><span data-stu-id="09e30-384">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="09e30-385">A fin de garantizar la seguridad de los subprocesos, se puede bloquear la colección durante toda la enumeración.</span><span class="sxs-lookup"><span data-stu-id="09e30-385">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="09e30-386">Para permitir que varios subprocesos obtengan acceso de lectura y escritura a la colección, debe implementar su propia sincronización.</span><span class="sxs-lookup"><span data-stu-id="09e30-386">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="09e30-387"><xref:System.Collections.ICollection.SyncRoot%2A> Devuelve un objeto que puede utilizarse para sincronizar el acceso a la <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="09e30-387"><xref:System.Collections.ICollection.SyncRoot%2A> returns an object that can be used to synchronize access to the <xref:System.Collections.ICollection>.</span></span> <span data-ttu-id="09e30-388">La sincronización es eficaz solo si todos los subprocesos bloquean este objeto antes de acceder a la colección.</span><span class="sxs-lookup"><span data-stu-id="09e30-388">Synchronization is effective only if all threads lock this object before accessing the collection.</span></span> <span data-ttu-id="09e30-389">El código siguiente muestra el uso de la <xref:System.Collections.ICollection.SyncRoot%2A> propiedad para C#, C++ y Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="09e30-389">The following code shows the use of the <xref:System.Collections.ICollection.SyncRoot%2A> property for C#, C++, and Visual Basic.</span></span>  
  
```csharp  
ICollection ic = ...;  
lock (ic.SyncRoot) {  
   // Access the collection.  
}  
```  
  
```vb  
Dim ic As ICollection = ...  
SyncLock ic.SyncRoot  
   ' Access the collection.  
End SyncLock  
```  
  
```cpp#  
ICollection^ ic = ...;  
try {  
   Monitor::Enter(ic->SyncRoot);  
   // Access the collection.  
}  
finally {  
   Monitor::Exit(ic->SyncRoot);  
}  
```  
  
 <span data-ttu-id="09e30-390">La recuperación del valor de esta propiedad es una operación O(1).</span><span class="sxs-lookup"><span data-stu-id="09e30-390">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Stack`1.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="09e30-391">Devuelve un enumerador que recorre en iteración una colección.</span><span class="sxs-lookup"><span data-stu-id="09e30-391">Returns an enumerator that iterates through a collection.</span></span></summary>
        <returns><span data-ttu-id="09e30-392"><see cref="T:System.Collections.IEnumerator" /> que se puede utilizar para recorrer en iteración la colección.</span><span class="sxs-lookup"><span data-stu-id="09e30-392">An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09e30-393">El `foreach` instrucción del lenguaje C# (`for each` en C++, `For Each` en Visual Basic) oculta la complejidad de los enumeradores.</span><span class="sxs-lookup"><span data-stu-id="09e30-393">The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) hides the complexity of the enumerators.</span></span> <span data-ttu-id="09e30-394">Por lo tanto, se recomienda el uso de `foreach`, en lugar de manipular directamente el enumerador.</span><span class="sxs-lookup"><span data-stu-id="09e30-394">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="09e30-395">Los enumeradores pueden usarse para leer los datos de la colección, pero no para modificar la colección subyacente.</span><span class="sxs-lookup"><span data-stu-id="09e30-395">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="09e30-396">En principio, el enumerador se coloca antes del primer elemento de la colección.</span><span class="sxs-lookup"><span data-stu-id="09e30-396">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="09e30-397"><xref:System.Collections.IEnumerator.Reset%2A> también devuelve el enumerador a esta posición.</span><span class="sxs-lookup"><span data-stu-id="09e30-397"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span>  <span data-ttu-id="09e30-398">En esta posición, el valor de propiedad <xref:System.Collections.IEnumerator.Current%2A> está sin definir.</span><span class="sxs-lookup"><span data-stu-id="09e30-398">At this position, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="09e30-399">Por lo tanto, debe llamar a <xref:System.Collections.IEnumerator.MoveNext%2A> para adelantar el enumerador hasta el primer elemento de la colección antes de leer el valor de <xref:System.Collections.IEnumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="09e30-399">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="09e30-400"><xref:System.Collections.IEnumerator.Current%2A> devuelve el mismo objeto hasta que se llama a <xref:System.Collections.IEnumerator.MoveNext%2A> o a <xref:System.Collections.IEnumerator.Reset%2A>.</span><span class="sxs-lookup"><span data-stu-id="09e30-400"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="09e30-401"><xref:System.Collections.IEnumerator.MoveNext%2A> establece <xref:System.Collections.IEnumerator.Current%2A> en el siguiente elemento.</span><span class="sxs-lookup"><span data-stu-id="09e30-401"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="09e30-402">Si <xref:System.Collections.IEnumerator.MoveNext%2A> pasa el final de la colección, el enumerador se coloca después del último elemento de la colección y <xref:System.Collections.IEnumerator.MoveNext%2A> devuelve `false`.</span><span class="sxs-lookup"><span data-stu-id="09e30-402">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="09e30-403">Cuando el enumerador está en esta posición, las llamadas subsiguientes a <xref:System.Collections.IEnumerator.MoveNext%2A> también devolver `false`.</span><span class="sxs-lookup"><span data-stu-id="09e30-403">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="09e30-404">Si la última llamada a <xref:System.Collections.IEnumerator.MoveNext%2A> devuelve `false`, <xref:System.Collections.IEnumerator.Current%2A> es indefinido.</span><span class="sxs-lookup"><span data-stu-id="09e30-404">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="09e30-405">Para volver a establecer el valor de <xref:System.Collections.IEnumerator.Current%2A> en el primer elemento de la colección, se puede llamar primero a <xref:System.Collections.IEnumerator.Reset%2A> y después a <xref:System.Collections.IEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="09e30-405">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="09e30-406">Un enumerador es válido mientras la colección no cambie.</span><span class="sxs-lookup"><span data-stu-id="09e30-406">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="09e30-407">Si se realizan cambios en la colección, como agregar, modificar, o eliminar elementos, el enumerador queda invalida invalidado y la siguiente llamada a <xref:System.Collections.IEnumerator.MoveNext%2A> o <xref:System.Collections.IEnumerator.Reset%2A> produce una <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="09e30-407">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="09e30-408">El enumerador no tiene acceso exclusivo a la colección y, por tanto, la enumeración en una colección no es intrínsicamente un procedimiento seguro para subprocesos.</span><span class="sxs-lookup"><span data-stu-id="09e30-408">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="09e30-409">A fin de garantizar la seguridad de los subprocesos, se puede bloquear la colección durante toda la enumeración.</span><span class="sxs-lookup"><span data-stu-id="09e30-409">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="09e30-410">Para permitir que varios subprocesos obtengan acceso de lectura y escritura a la colección, debe implementar su propia sincronización.</span><span class="sxs-lookup"><span data-stu-id="09e30-410">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="09e30-411">Las implementaciones de colecciones en predeterminadas <xref:System.Collections.Generic?displayProperty=nameWithType> no están sincronizadas.</span><span class="sxs-lookup"><span data-stu-id="09e30-411">Default implementations of collections in <xref:System.Collections.Generic?displayProperty=nameWithType> are not synchronized.</span></span>  
  
 <span data-ttu-id="09e30-412">Este método es una operación o (1).</span><span class="sxs-lookup"><span data-stu-id="09e30-412">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.Stack`1.GetEnumerator" />
        <altmember cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" />
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="ToArray">
      <MemberSignature Language="C#" Value="public T[] ToArray ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !T[] ToArray() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Stack`1.ToArray" />
      <MemberSignature Language="VB.NET" Value="Public Function ToArray () As T()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;T&gt; ^ ToArray();" />
      <MemberSignature Language="F#" Value="member this.ToArray : unit -&gt; 'T[]" Usage="stack.ToArray " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="09e30-413">Copia <see cref="T:System.Collections.Generic.Stack`1" /> en una nueva matriz.</span><span class="sxs-lookup"><span data-stu-id="09e30-413">Copies the <see cref="T:System.Collections.Generic.Stack`1" /> to a new array.</span></span></summary>
        <returns><span data-ttu-id="09e30-414">Nueva matriz que contiene copias de los elementos de <see cref="T:System.Collections.Generic.Stack`1" />.</span><span class="sxs-lookup"><span data-stu-id="09e30-414">A new array containing copies of the elements of the <see cref="T:System.Collections.Generic.Stack`1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09e30-415">Los elementos se copian en la matriz en orden de último en el primero en salir (LIFO), similar al orden de los elementos devueltos por una serie de llamadas a <xref:System.Collections.Generic.Stack%601.Pop%2A>.</span><span class="sxs-lookup"><span data-stu-id="09e30-415">The elements are copied onto the array in last-in-first-out (LIFO) order, similar to the order of the elements returned by a succession of calls to <xref:System.Collections.Generic.Stack%601.Pop%2A>.</span></span>  
  
 <span data-ttu-id="09e30-416">Este método es O (`n`) operación, donde `n` es <xref:System.Collections.Generic.Stack%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="09e30-416">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.Stack%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09e30-417">En el ejemplo de código siguiente se muestra varios métodos de la <xref:System.Collections.Generic.Stack%601> clase genérica, incluido el <xref:System.Collections.Generic.Stack%601.ToArray%2A> método.</span><span class="sxs-lookup"><span data-stu-id="09e30-417">The following code example demonstrates several methods of the <xref:System.Collections.Generic.Stack%601> generic class, including the <xref:System.Collections.Generic.Stack%601.ToArray%2A> method.</span></span>  
  
 <span data-ttu-id="09e30-418">El ejemplo de código crea una pila de cadenas con capacidad predeterminada y usa el <xref:System.Collections.Generic.Stack%601.Push%2A> método para insertar cinco cadenas en la pila.</span><span class="sxs-lookup"><span data-stu-id="09e30-418">The code example creates a stack of strings with default capacity and uses the <xref:System.Collections.Generic.Stack%601.Push%2A> method to push five strings onto the stack.</span></span> <span data-ttu-id="09e30-419">Se enumeran los elementos de la pila, que no cambia el estado de la pila.</span><span class="sxs-lookup"><span data-stu-id="09e30-419">The elements of the stack are enumerated, which does not change the state of the stack.</span></span> <span data-ttu-id="09e30-420">El <xref:System.Collections.Generic.Stack%601.Pop%2A> método se usa para extraer la primera cadena de la pila.</span><span class="sxs-lookup"><span data-stu-id="09e30-420">The <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop the first string off the stack.</span></span> <span data-ttu-id="09e30-421">El <xref:System.Collections.Generic.Stack%601.Peek%2A> método se utiliza para buscar el siguiente elemento en la pila y, a continuación, el <xref:System.Collections.Generic.Stack%601.Pop%2A> método se utiliza para introducirla.</span><span class="sxs-lookup"><span data-stu-id="09e30-421">The <xref:System.Collections.Generic.Stack%601.Peek%2A> method is used to look at the next item on the stack, and then the <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop it off.</span></span>  
  
 <span data-ttu-id="09e30-422">El <xref:System.Collections.Generic.Stack%601.ToArray%2A> método se utiliza para crear una matriz y copiar los elementos de la pila en él y, después, la matriz se pasa a la <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor que toma <xref:System.Collections.Generic.IEnumerable%601>, crear una copia de la pila con el orden de los elementos invertidos.</span><span class="sxs-lookup"><span data-stu-id="09e30-422">The <xref:System.Collections.Generic.Stack%601.ToArray%2A> method is used to create an array and copy the stack elements to it, then the array is passed to the <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor that takes <xref:System.Collections.Generic.IEnumerable%601>, creating a copy of the stack with the order of the elements reversed.</span></span> <span data-ttu-id="09e30-423">Se muestran los elementos de la copia.</span><span class="sxs-lookup"><span data-stu-id="09e30-423">The elements of the copy are displayed.</span></span>  
  
 <span data-ttu-id="09e30-424">Dos veces el tamaño de la pila se crea una matriz y el <xref:System.Collections.Generic.Stack%601.CopyTo%2A> método se usa para copiar los elementos de matriz, empezando por el centro de la matriz.</span><span class="sxs-lookup"><span data-stu-id="09e30-424">An array twice the size of the stack is created, and the <xref:System.Collections.Generic.Stack%601.CopyTo%2A> method is used to copy the array elements beginning at the middle of the array.</span></span> <span data-ttu-id="09e30-425">El <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor se utiliza de nuevo para crear una copia de la pila con el orden de los elementos invertidos; por tanto, son los tres elementos null al final.</span><span class="sxs-lookup"><span data-stu-id="09e30-425">The <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor is used again to create a copy of the stack with the order of elements reversed; thus, the three null elements are at the end.</span></span>  
  
 <span data-ttu-id="09e30-426">El <xref:System.Collections.Generic.Stack%601.Contains%2A> método se usa para mostrar que la cadena "4" está en la primera copia de la pila, tras el cual el <xref:System.Collections.Generic.Stack%601.Clear%2A> método borra la copia y el <xref:System.Collections.Generic.Stack%601.Count%2A> propiedad muestra que la pila está vacía.</span><span class="sxs-lookup"><span data-stu-id="09e30-426">The <xref:System.Collections.Generic.Stack%601.Contains%2A> method is used to show that the string "four" is in the first copy of the stack, after which the <xref:System.Collections.Generic.Stack%601.Clear%2A> method clears the copy and the <xref:System.Collections.Generic.Stack%601.Count%2A> property shows that the stack is empty.</span></span>  
  
 [!code-csharp[Generic.Stack#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Stack/cs/source.cs#1)]
 [!code-vb[Generic.Stack#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Stack/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.Stack`1.CopyTo(`0[],System.Int32)" />
        <altmember cref="M:System.Collections.Generic.Stack`1.Pop" />
      </Docs>
    </Member>
    <Member MemberName="TrimExcess">
      <MemberSignature Language="C#" Value="public void TrimExcess ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TrimExcess() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Stack`1.TrimExcess" />
      <MemberSignature Language="VB.NET" Value="Public Sub TrimExcess ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TrimExcess();" />
      <MemberSignature Language="F#" Value="member this.TrimExcess : unit -&gt; unit" Usage="stack.TrimExcess " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="09e30-427">Establece la capacidad en el número real de elementos en la colección <see cref="T:System.Collections.Generic.Stack`1" />, si este número supone menos del 90 por ciento de la capacidad actual.</span><span class="sxs-lookup"><span data-stu-id="09e30-427">Sets the capacity to the actual number of elements in the <see cref="T:System.Collections.Generic.Stack`1" />, if that number is less than 90 percent of current capacity.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09e30-428">Este método puede utilizarse para minimizar la sobrecarga de memoria de una colección si ningún elemento nuevo se agregará a la colección.</span><span class="sxs-lookup"><span data-stu-id="09e30-428">This method can be used to minimize a collection's memory overhead if no new elements will be added to the collection.</span></span> <span data-ttu-id="09e30-429">El costo de reasignar y copiar una gran <xref:System.Collections.Generic.Stack%601> puede ser considerable, sin embargo, por lo que el <xref:System.Collections.Generic.Stack%601.TrimExcess%2A> método no hace nada si la lista está en más del 90 por ciento de capacidad.</span><span class="sxs-lookup"><span data-stu-id="09e30-429">The cost of reallocating and copying a large <xref:System.Collections.Generic.Stack%601> can be considerable, however, so the <xref:System.Collections.Generic.Stack%601.TrimExcess%2A> method does nothing if the list is at more than 90 percent of capacity.</span></span> <span data-ttu-id="09e30-430">Esto evita incurrir en un gran costo de reasignación para lograr una mejora relativamente pequeña.</span><span class="sxs-lookup"><span data-stu-id="09e30-430">This avoids incurring a large reallocation cost for a relatively small gain.</span></span>  
  
 <span data-ttu-id="09e30-431">Este método es O (`n`) operación, donde `n` es <xref:System.Collections.Generic.Stack%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="09e30-431">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.Stack%601.Count%2A>.</span></span>  
  
 <span data-ttu-id="09e30-432">Para restablecer un <xref:System.Collections.Generic.Stack%601> a su estado inicial, llame a la <xref:System.Collections.Generic.Stack%601.Clear%2A> método antes de llamar a <xref:System.Collections.Generic.Stack%601.TrimExcess%2A> método.</span><span class="sxs-lookup"><span data-stu-id="09e30-432">To reset a <xref:System.Collections.Generic.Stack%601> to its initial state, call the <xref:System.Collections.Generic.Stack%601.Clear%2A> method before calling <xref:System.Collections.Generic.Stack%601.TrimExcess%2A> method.</span></span> <span data-ttu-id="09e30-433">Recorte vacío <xref:System.Collections.Generic.Stack%601> establece la capacidad de la <xref:System.Collections.Generic.Stack%601> a la capacidad predeterminada.</span><span class="sxs-lookup"><span data-stu-id="09e30-433">Trimming an empty <xref:System.Collections.Generic.Stack%601> sets the capacity of the <xref:System.Collections.Generic.Stack%601> to the default capacity.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.Stack`1.Clear" />
        <altmember cref="P:System.Collections.Generic.Stack`1.Count" />
      </Docs>
    </Member>
    <Member MemberName="TryPeek">
      <MemberSignature Language="C#" Value="public bool TryPeek (out T result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryPeek([out] !T&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Stack`1.TryPeek(`0@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryPeek (ByRef result As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryPeek([Runtime::InteropServices::Out] T % result);" />
      <MemberSignature Language="F#" Value="member this.TryPeek :  -&gt; bool" Usage="stack.TryPeek result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="T" RefType="out" />
      </Parameters>
      <Docs>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryPop">
      <MemberSignature Language="C#" Value="public bool TryPop (out T result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryPop([out] !T&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Stack`1.TryPop(`0@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryPop (ByRef result As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryPop([Runtime::InteropServices::Out] T % result);" />
      <MemberSignature Language="F#" Value="member this.TryPop :  -&gt; bool" Usage="stack.TryPop result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="T" RefType="out" />
      </Parameters>
      <Docs>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
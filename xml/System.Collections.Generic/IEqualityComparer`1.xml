<Type Name="IEqualityComparer&lt;T&gt;" FullName="System.Collections.Generic.IEqualityComparer&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3e7072613516433c6ad7b3214207cd25563d0e8a" /><Meta Name="ms.sourcegitcommit" Value="1bb00d2f4343e73ae8d58668f02297a3cf10a4c1" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="06/15/2019" /><Meta Name="ms.locfileid" Value="63908537" /></Metadata><TypeSignature Language="C#" Value="public interface IEqualityComparer&lt;in T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IEqualityComparer`1&lt;- T&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Generic.IEqualityComparer`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IEqualityComparer(Of In T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public interface class IEqualityComparer" />
  <TypeSignature Language="F#" Value="type IEqualityComparer&lt;'T&gt; = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces />
  <Docs>
    <typeparam name="T"><span data-ttu-id="8d1ca-101">Tipo de objetos que se van a comparar.</span><span class="sxs-lookup"><span data-stu-id="8d1ca-101">The type of objects to compare.</span></span></typeparam>
    <summary><span data-ttu-id="8d1ca-102">Define métodos para admitir la comparación de objetos en concepto de igualdad.</span><span class="sxs-lookup"><span data-stu-id="8d1ca-102">Defines methods to support the comparison of objects for equality.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d1ca-103">Esta interfaz permite la implementación de comparación de igualdad personalizada para las colecciones.</span><span class="sxs-lookup"><span data-stu-id="8d1ca-103">This interface allows the implementation of customized equality comparison for collections.</span></span> <span data-ttu-id="8d1ca-104">Es decir, puede crear su propia definición de igualdad para el tipo `T`y especificar que esta definición se usa con un tipo de colección que acepta el <xref:System.Collections.Generic.IEqualityComparer%601> interfaz genérica.</span><span class="sxs-lookup"><span data-stu-id="8d1ca-104">That is, you can create your own definition of equality for type `T`, and specify that this definition be used with a collection type that accepts the <xref:System.Collections.Generic.IEqualityComparer%601> generic interface.</span></span> <span data-ttu-id="8d1ca-105">En .NET Framework, los constructores de la <xref:System.Collections.Generic.Dictionary%602> tipo de colección genérica Aceptar esta interfaz.</span><span class="sxs-lookup"><span data-stu-id="8d1ca-105">In the .NET Framework, constructors of the <xref:System.Collections.Generic.Dictionary%602> generic collection type accept this interface.</span></span>  
  
 <span data-ttu-id="8d1ca-106">Proporciona una implementación predeterminada de esta interfaz la <xref:System.Collections.Generic.EqualityComparer%601.Default%2A> propiedad de la <xref:System.Collections.Generic.EqualityComparer%601> clase genérica.</span><span class="sxs-lookup"><span data-stu-id="8d1ca-106">A default implementation of this interface is provided by the <xref:System.Collections.Generic.EqualityComparer%601.Default%2A> property of the <xref:System.Collections.Generic.EqualityComparer%601> generic class.</span></span> <span data-ttu-id="8d1ca-107">El <xref:System.StringComparer> la clase implementa <xref:System.Collections.Generic.IEqualityComparer%601> de tipo <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="8d1ca-107">The <xref:System.StringComparer> class implements <xref:System.Collections.Generic.IEqualityComparer%601> of type <xref:System.String>.</span></span>  
  
 <span data-ttu-id="8d1ca-108">Esta interfaz admite solo las comparaciones de igualdad.</span><span class="sxs-lookup"><span data-stu-id="8d1ca-108">This interface supports only equality comparisons.</span></span> <span data-ttu-id="8d1ca-109">Personalización de las comparaciones de ordenación y orden es proporcionada por el <xref:System.Collections.Generic.IComparer%601> interfaz genérica.</span><span class="sxs-lookup"><span data-stu-id="8d1ca-109">Customization of comparisons for sorting and ordering is provided by the <xref:System.Collections.Generic.IComparer%601> generic interface.</span></span>  
  
 <span data-ttu-id="8d1ca-110">Se recomienda derivar desde la <xref:System.Collections.Generic.EqualityComparer%601> clase en lugar de implementar la <xref:System.Collections.Generic.IEqualityComparer%601> interfaz, porque el <xref:System.Collections.Generic.EqualityComparer%601> las pruebas de igualdad mediante la clase el <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType> método en lugar de la <xref:System.Object.Equals%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="8d1ca-110">We recommend that you derive from the <xref:System.Collections.Generic.EqualityComparer%601> class instead of implementing the <xref:System.Collections.Generic.IEqualityComparer%601> interface, because the <xref:System.Collections.Generic.EqualityComparer%601> class tests for equality using the <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType> method instead of the <xref:System.Object.Equals%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="8d1ca-111">Esto es coherente con la `Contains`, `IndexOf`, `LastIndexOf`, y `Remove` métodos de la <xref:System.Collections.Generic.Dictionary%602> clase y otras colecciones genéricas.</span><span class="sxs-lookup"><span data-stu-id="8d1ca-111">This is consistent with the `Contains`, `IndexOf`, `LastIndexOf`, and `Remove` methods of the <xref:System.Collections.Generic.Dictionary%602> class and other generic collections.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d1ca-112">En el ejemplo siguiente se agrega personalizado `Box` objetos a una colección de diccionarios.</span><span class="sxs-lookup"><span data-stu-id="8d1ca-112">The following example adds custom `Box` objects to a dictionary collection.</span></span> <span data-ttu-id="8d1ca-113">El `Box` objetos se consideran iguales si sus dimensiones son iguales.</span><span class="sxs-lookup"><span data-stu-id="8d1ca-113">The `Box` objects are considered equal if their dimensions are the same.</span></span>  
  
 [!code-csharp[System.Collections.Generic.IEqualityComparer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.iequalitycomparer/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.IEqualityComparer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.iequalitycomparer/vb/program.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Collections.Generic.EqualityComparer`1" />
    <altmember cref="T:System.Collections.Generic.Dictionary`2" />
    <altmember cref="Overload:System.Collections.Generic.Dictionary`2.#ctor" />
    <altmember cref="T:System.Collections.Generic.IComparer`1" />
  </Docs>
  <Members>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (T x, T y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(!T x, !T y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (x As T, y As T) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member Equals : 'T * 'T -&gt; bool" Usage="iEqualityComparer.Equals (x, y)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(T x, T y);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="T" />
        <Parameter Name="y" Type="T" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="8d1ca-114">Primer objeto de tipo <paramref name="T" /> que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="8d1ca-114">The first object of type <paramref name="T" /> to compare.</span></span></param>
        <param name="y"><span data-ttu-id="8d1ca-115">Segundo objeto de tipo <paramref name="T" /> que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="8d1ca-115">The second object of type <paramref name="T" /> to compare.</span></span></param>
        <summary><span data-ttu-id="8d1ca-116">Determina si los objetos especificados son iguales.</span><span class="sxs-lookup"><span data-stu-id="8d1ca-116">Determines whether the specified objects are equal.</span></span></summary>
        <returns><span data-ttu-id="8d1ca-117"><see langword="true" /> si los objetos especificados son iguales; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8d1ca-117"><see langword="true" /> if the specified objects are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d1ca-118">Implemente este método para proporcionar una comparación de igualdad personalizada para el tipo `T`.</span><span class="sxs-lookup"><span data-stu-id="8d1ca-118">Implement this method to provide a customized equality comparison for type `T`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8d1ca-119">Las implementaciones son necesarias para garantizar que si el <see cref="M:System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)" /> devuelve del método <see langword="true" /> para dos objetos <paramref name="x" /> y <paramref name="y" />, a continuación, el valor devuelto por la <see cref="M:System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)" /> método para <paramref name="x" /> debe ser igual al valor devuelto para <paramref name="y" />.</span><span class="sxs-lookup"><span data-stu-id="8d1ca-119">Implementations are required to ensure that if the <see cref="M:System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)" /> method returns <see langword="true" /> for two objects <paramref name="x" /> and <paramref name="y" />, then the value returned by the <see cref="M:System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)" /> method for <paramref name="x" /> must equal the value returned for <paramref name="y" />.</span></span>  
  
<span data-ttu-id="8d1ca-120">El <see cref="M:System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)" /> método es simétrico, reflexivo y transitivo.</span><span class="sxs-lookup"><span data-stu-id="8d1ca-120">The <see cref="M:System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)" /> method is reflexive, symmetric, and transitive.</span></span> <span data-ttu-id="8d1ca-121">Es decir, devuelve <see langword="true" /> si se usa para comparar un objeto consigo misma; <see langword="true" /> para dos objetos <paramref name="x" /> y <paramref name="y" /> si es <see langword="true" /> para <paramref name="y" /> y <paramref name="x" />; y <see langword="true" /> para dos objetos <paramref name="x" /> y <paramref name="z" /> si es <see langword="true" /> para <paramref name="x" /> y <paramref name="y" /> y también <see langword="true" /> para <paramref name="y" /> y <paramref name="z" />.</span><span class="sxs-lookup"><span data-stu-id="8d1ca-121">That is, it returns <see langword="true" /> if used to compare an object with itself; <see langword="true" /> for two objects <paramref name="x" /> and <paramref name="y" /> if it is <see langword="true" /> for <paramref name="y" /> and <paramref name="x" />; and <see langword="true" /> for two objects <paramref name="x" /> and <paramref name="z" /> if it is <see langword="true" /> for <paramref name="x" /> and <paramref name="y" /> and also <see langword="true" /> for <paramref name="y" /> and <paramref name="z" />.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public int GetHashCode (T obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHashCode(!T obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHashCode (obj As T) As Integer" />
      <MemberSignature Language="F#" Value="abstract member GetHashCode : 'T -&gt; int" Usage="iEqualityComparer.GetHashCode obj" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetHashCode(T obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="T" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="8d1ca-122"><see cref="T:System.Object" /> para el que se va a devolver un código hash.</span><span class="sxs-lookup"><span data-stu-id="8d1ca-122">The <see cref="T:System.Object" /> for which a hash code is to be returned.</span></span></param>
        <summary><span data-ttu-id="8d1ca-123">Devuelve un código hash para el objeto especificado.</span><span class="sxs-lookup"><span data-stu-id="8d1ca-123">Returns a hash code for the specified object.</span></span></summary>
        <returns><span data-ttu-id="8d1ca-124">Código hash para el objeto especificado.</span><span class="sxs-lookup"><span data-stu-id="8d1ca-124">A hash code for the specified object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d1ca-125">Implemente este método para proporcionar un código hash personalizado para el tipo `T`, que corresponde a la comparación de igualdad personalizada proporcionada por el <xref:System.Collections.Generic.IEqualityComparer%601.Equals%2A> método.</span><span class="sxs-lookup"><span data-stu-id="8d1ca-125">Implement this method to provide a customized hash code for type `T`,corresponding to the customized equality comparison provided by the <xref:System.Collections.Generic.IEqualityComparer%601.Equals%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8d1ca-126">El tipo de <paramref name="obj" /> es un tipo de referencia y <paramref name="obj" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8d1ca-126">The type of <paramref name="obj" /> is a reference type and <paramref name="obj" /> is <see langword="null" />.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="8d1ca-127">Las implementaciones son necesarias para garantizar que si el <see cref="M:System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)" /> devuelve del método <see langword="true" /> para dos objetos <paramref name="x" /> y <paramref name="y" />, a continuación, el valor devuelto por la <see cref="M:System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)" /> método para <paramref name="x" /> debe ser igual al valor devuelto para <paramref name="y" />.</span><span class="sxs-lookup"><span data-stu-id="8d1ca-127">Implementations are required to ensure that if the <see cref="M:System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)" /> method returns <see langword="true" /> for two objects <paramref name="x" /> and <paramref name="y" />, then the value returned by the <see cref="M:System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)" /> method for <paramref name="x" /> must equal the value returned for <paramref name="y" />.</span></span></para></block>
        <altmember cref="M:System.Object.GetHashCode" />
        <altmember cref="T:System.Collections.IHashCodeProvider" />
      </Docs>
    </Member>
  </Members>
</Type>
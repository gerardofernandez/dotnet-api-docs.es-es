<Type Name="IDesignerSerializationManager" FullName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="75b6edbd5948705f247f71c9dfc01b0aeddc3edf" /><Meta Name="ms.sourcegitcommit" Value="1bb00d2f4343e73ae8d58668f02297a3cf10a4c1" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="06/15/2019" /><Meta Name="ms.locfileid" Value="63903710" /></Metadata><TypeSignature Language="C#" Value="public interface IDesignerSerializationManager : IServiceProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDesignerSerializationManager implements class System.IServiceProvider" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDesignerSerializationManager&#xA;Implements IServiceProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDesignerSerializationManager : IServiceProvider" />
  <TypeSignature Language="F#" Value="type IDesignerSerializationManager = interface&#xA;    interface IServiceProvider" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IServiceProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="5ae15-101">Proporciona una interfaz que puede administrar la serialización en tiempo de diseño.</span><span class="sxs-lookup"><span data-stu-id="5ae15-101">Provides an interface that can manage design-time serialization.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ae15-102">Puede utilizar un diseñador <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager> tener acceso a servicios útiles para administrar procesos de serialización en tiempo de diseño.</span><span class="sxs-lookup"><span data-stu-id="5ae15-102">A designer can utilize <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager> to access services useful to managing design-time serialization processes.</span></span> <span data-ttu-id="5ae15-103">Por ejemplo, una clase que implementa el Administrador de serialización de diseñador puede utilizar esta interfaz para crear objetos, buscar tipos, identificar los objetos y personalizar la serialización de tipos determinados.</span><span class="sxs-lookup"><span data-stu-id="5ae15-103">For example, a class that implements the designer serialization manager can use this interface to create objects, look up types, identify objects, and customize the serialization of particular types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5ae15-104">El ejemplo siguiente muestra cómo usar <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager> para serializar y deserializar instrucciones CODEDOM.</span><span class="sxs-lookup"><span data-stu-id="5ae15-104">The following example illustrates how to use <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager> to serialize and deserialize Code DOM statements.</span></span>  
  
 [!code-cpp[IDesignerSerializationManagerSample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/IDesignerSerializationManagerSample/CPP/idesignerserializationmanagersample.cpp#1)]
 [!code-csharp[IDesignerSerializationManagerSample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/IDesignerSerializationManagerSample/CS/idesignerserializationmanagersample.cs#1)]
 [!code-vb[IDesignerSerializationManagerSample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IDesignerSerializationManagerSample/VB/idesignerserializationmanagersample.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IServiceProvider" />
  </Docs>
  <Members>
    <Member MemberName="AddSerializationProvider">
      <MemberSignature Language="C#" Value="public void AddSerializationProvider (System.ComponentModel.Design.Serialization.IDesignerSerializationProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddSerializationProvider(class System.ComponentModel.Design.Serialization.IDesignerSerializationProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddSerializationProvider (provider As IDesignerSerializationProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddSerializationProvider(System::ComponentModel::Design::Serialization::IDesignerSerializationProvider ^ provider);" />
      <MemberSignature Language="F#" Value="abstract member AddSerializationProvider : System.ComponentModel.Design.Serialization.IDesignerSerializationProvider -&gt; unit" Usage="iDesignerSerializationManager.AddSerializationProvider provider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="5ae15-105">Proveedor de serialización que se va a agregar.</span><span class="sxs-lookup"><span data-stu-id="5ae15-105">The serialization provider to add.</span></span></param>
        <summary><span data-ttu-id="5ae15-106">Agrega el proveedor de serialización especificado al administrador de serialización.</span><span class="sxs-lookup"><span data-stu-id="5ae15-106">Adds the specified serialization provider to the serialization manager.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ae15-107">Este método agrega un proveedor de serialización personalizado al administrador de serialización.</span><span class="sxs-lookup"><span data-stu-id="5ae15-107">This method adds a custom serialization provider to the serialization manager.</span></span> <span data-ttu-id="5ae15-108">Los proveedores de serialización pueden proporcionar serializadores personalizados para un determinado tipo de objeto o conjunto de tipos de objetos.</span><span class="sxs-lookup"><span data-stu-id="5ae15-108">Serialization providers can provide custom serializers for a particular type of object or set of types of objects.</span></span> <span data-ttu-id="5ae15-109">Durante la serialización, se consulta cada proveedor de serialización personalizado con el fin de devolver un serializador para un determinado tipo de datos, si es que se puede proporcionar uno.</span><span class="sxs-lookup"><span data-stu-id="5ae15-109">During serialization, each custom serialization provider is queried to return a serializer for a specific data type, if it can provide one.</span></span> <span data-ttu-id="5ae15-110">El administrador de serialización usa el serializador personalizado proporcionado por este método antes de usar el serializador predeterminado para un tipo en particular.</span><span class="sxs-lookup"><span data-stu-id="5ae15-110">The serialization manager uses the custom serializer provided by this method before using the default serializer for a particular type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Design.Serialization.ContextStack Context { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.Serialization.ContextStack Context" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Context As ContextStack" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::Design::Serialization::ContextStack ^ Context { System::ComponentModel::Design::Serialization::ContextStack ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Context : System.ComponentModel.Design.Serialization.ContextStack" Usage="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.Serialization.ContextStack</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5ae15-111">Obtiene un área de almacenamiento definida por el usuario basada en pilas, útil para las comunicaciones entre los serializadores.</span><span class="sxs-lookup"><span data-stu-id="5ae15-111">Gets a stack-based, user-defined storage area that is useful for communication between serializers.</span></span></summary>
        <value><span data-ttu-id="5ae15-112"><see cref="T:System.ComponentModel.Design.Serialization.ContextStack" /> que almacena datos.</span><span class="sxs-lookup"><span data-stu-id="5ae15-112">A <see cref="T:System.ComponentModel.Design.Serialization.ContextStack" /> that stores data.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ae15-113">Esta área de almacenamiento proporciona comunicación de información de contexto de objeto a los serializadores.</span><span class="sxs-lookup"><span data-stu-id="5ae15-113">This storage area provides communication of object context information to serializers.</span></span> <span data-ttu-id="5ae15-114">Se puede almacenar y tener acceso a través de esta información de contexto acerca de los objetos que se está serializando <xref:System.ComponentModel.Design.Serialization.ContextStack>.</span><span class="sxs-lookup"><span data-stu-id="5ae15-114">Context information about objects that are being serialized can be stored and accessed through this <xref:System.ComponentModel.Design.Serialization.ContextStack>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public object CreateInstance (Type type, System.Collections.ICollection arguments, string name, bool addToContainer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateInstance(class System.Type type, class System.Collections.ICollection arguments, string name, bool addToContainer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ CreateInstance(Type ^ type, System::Collections::ICollection ^ arguments, System::String ^ name, bool addToContainer);" />
      <MemberSignature Language="F#" Value="abstract member CreateInstance : Type * System.Collections.ICollection * string * bool -&gt; obj" Usage="iDesignerSerializationManager.CreateInstance (type, arguments, name, addToContainer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="arguments" Type="System.Collections.ICollection" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="addToContainer" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="5ae15-115">Tipo de datos que se va crear.</span><span class="sxs-lookup"><span data-stu-id="5ae15-115">The data type to create.</span></span></param>
        <param name="arguments"><span data-ttu-id="5ae15-116">Argumentos que se van a pasar al constructor para este tipo.</span><span class="sxs-lookup"><span data-stu-id="5ae15-116">The arguments to pass to the constructor for this type.</span></span></param>
        <param name="name"><span data-ttu-id="5ae15-117">El nombre del objeto.</span><span class="sxs-lookup"><span data-stu-id="5ae15-117">The name of the object.</span></span> <span data-ttu-id="5ae15-118">Se puede utilizar este nombre para tener acceso al objeto más adelante a través de <see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(System.String)" />.</span><span class="sxs-lookup"><span data-stu-id="5ae15-118">This name can be used to access the object later through <see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(System.String)" />.</span></span> <span data-ttu-id="5ae15-119">Si se pasa <see langword="null" />, el objeto sigue creado pero no se puede tener acceso a él mediante el nombre.</span><span class="sxs-lookup"><span data-stu-id="5ae15-119">If <see langword="null" /> is passed, the object is still created but cannot be accessed by name.</span></span></param>
        <param name="addToContainer"><span data-ttu-id="5ae15-120">Si es <see langword="true" />, el objeto se agrega al contenedor de diseño.</span><span class="sxs-lookup"><span data-stu-id="5ae15-120">If <see langword="true" />, this object is added to the design container.</span></span> <span data-ttu-id="5ae15-121">El objeto debe implementar <see cref="T:System.ComponentModel.IComponent" /> para que esto surta efecto.</span><span class="sxs-lookup"><span data-stu-id="5ae15-121">The object must implement <see cref="T:System.ComponentModel.IComponent" /> for this to have any effect.</span></span></param>
        <summary><span data-ttu-id="5ae15-122">Crea una instancia del tipo especificado y la agrega a la colección de instancias designadas.</span><span class="sxs-lookup"><span data-stu-id="5ae15-122">Creates an instance of the specified type and adds it to a collection of named instances.</span></span></summary>
        <returns><span data-ttu-id="5ae15-123">Instancia del objeto recién creada.</span><span class="sxs-lookup"><span data-stu-id="5ae15-123">The newly created object instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ae15-124">Los objetos que implementan <xref:System.ComponentModel.IComponent> se agregan al contenedor de tiempo de diseño si el `addToContainer` parámetro es `true`.</span><span class="sxs-lookup"><span data-stu-id="5ae15-124">Objects that implement <xref:System.ComponentModel.IComponent> are added to the design-time container if the `addToContainer` parameter is `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInstance">
      <MemberSignature Language="C#" Value="public object GetInstance (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetInstance(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInstance (name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetInstance(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member GetInstance : string -&gt; obj" Usage="iDesignerSerializationManager.GetInstance name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="5ae15-125">Nombre del objeto que se va a recuperar.</span><span class="sxs-lookup"><span data-stu-id="5ae15-125">The name of the object to retrieve.</span></span></param>
        <summary><span data-ttu-id="5ae15-126">Obtiene una instancia de un objeto creado a partir del nombre especificado, o <see langword="null" /> si el objeto no existe.</span><span class="sxs-lookup"><span data-stu-id="5ae15-126">Gets an instance of a created object of the specified name, or <see langword="null" /> if that object does not exist.</span></span></summary>
        <returns><span data-ttu-id="5ae15-127">Instancia del objeto con el nombre dado, o <see langword="null" /> si no se encuentra ningún objeto por ese nombre.</span><span class="sxs-lookup"><span data-stu-id="5ae15-127">An instance of the object with the given name, or <see langword="null" /> if no object by that name can be found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ae15-128">El nombre del objeto para recuperar se ha establecido a través de una llamada anterior a <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A>.</span><span class="sxs-lookup"><span data-stu-id="5ae15-128">The name of the object to retrieve must have been set through a prior call to <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetName">
      <MemberSignature Language="C#" Value="public string GetName (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetName(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetName (value As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetName(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member GetName : obj -&gt; string" Usage="iDesignerSerializationManager.GetName value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="5ae15-129">Objeto para el que se va a recuperar el nombre.</span><span class="sxs-lookup"><span data-stu-id="5ae15-129">The object to retrieve the name for.</span></span></param>
        <summary><span data-ttu-id="5ae15-130">Obtiene el nombre del objeto especificado o <see langword="null" /> si el objeto no tiene nombre.</span><span class="sxs-lookup"><span data-stu-id="5ae15-130">Gets the name of the specified object, or <see langword="null" /> if the object has no name.</span></span></summary>
        <returns><span data-ttu-id="5ae15-131">Nombre del objeto, o <see langword="null" /> si el objeto no tiene nombre.</span><span class="sxs-lookup"><span data-stu-id="5ae15-131">The name of the object, or <see langword="null" /> if the object is unnamed.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSerializer">
      <MemberSignature Language="C#" Value="public object GetSerializer (Type objectType, Type serializerType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetSerializer(class System.Type objectType, class System.Type serializerType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer(System.Type,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSerializer (objectType As Type, serializerType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetSerializer(Type ^ objectType, Type ^ serializerType);" />
      <MemberSignature Language="F#" Value="abstract member GetSerializer : Type * Type -&gt; obj" Usage="iDesignerSerializationManager.GetSerializer (objectType, serializerType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectType" Type="System.Type" />
        <Parameter Name="serializerType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="objectType"><span data-ttu-id="5ae15-132">Tipo del objeto para el que se obtiene el serializador.</span><span class="sxs-lookup"><span data-stu-id="5ae15-132">The type of the object to get the serializer for.</span></span></param>
        <param name="serializerType"><span data-ttu-id="5ae15-133">Tipo del serializador que se va a recuperar.</span><span class="sxs-lookup"><span data-stu-id="5ae15-133">The type of the serializer to retrieve.</span></span></param>
        <summary><span data-ttu-id="5ae15-134">Obtiene un serializador del tipo solicitado para el tipo de objeto especificado.</span><span class="sxs-lookup"><span data-stu-id="5ae15-134">Gets a serializer of the requested type for the specified object type.</span></span></summary>
        <returns><span data-ttu-id="5ae15-135">Instancia del serializador solicitado, o <see langword="null" /> si no se encuentra ningún serializador adecuado.</span><span class="sxs-lookup"><span data-stu-id="5ae15-135">An instance of the requested serializer, or <see langword="null" /> if no appropriate serializer can be located.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public Type GetType (string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetType(string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetType (typeName As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetType(System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="abstract member GetType : string -&gt; Type" Usage="iDesignerSerializationManager.GetType typeName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName"><span data-ttu-id="5ae15-136">Nombre completo del tipo que se va a cargar.</span><span class="sxs-lookup"><span data-stu-id="5ae15-136">The fully qualified name of the type to load.</span></span></param>
        <summary><span data-ttu-id="5ae15-137">Obtiene un tipo del nombre especificado.</span><span class="sxs-lookup"><span data-stu-id="5ae15-137">Gets a type of the specified name.</span></span></summary>
        <returns><span data-ttu-id="5ae15-138">Instancia del tipo, o <see langword="null" /> si no se puede cargar el tipo.</span><span class="sxs-lookup"><span data-stu-id="5ae15-138">An instance of the type, or <see langword="null" /> if the type cannot be loaded.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public System.ComponentModel.PropertyDescriptorCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.PropertyDescriptorCollection Properties" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Properties As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::PropertyDescriptorCollection ^ Properties { System::ComponentModel::PropertyDescriptorCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : System.ComponentModel.PropertyDescriptorCollection" Usage="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5ae15-139">Indica las propiedades personalizadas que se pueden serializar con los serializadores disponibles.</span><span class="sxs-lookup"><span data-stu-id="5ae15-139">Indicates custom properties that can be serializable with available serializers.</span></span></summary>
        <value><span data-ttu-id="5ae15-140"><see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> que contiene las propiedades que se van a serializar.</span><span class="sxs-lookup"><span data-stu-id="5ae15-140">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> containing the properties to be serialized.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ae15-141">Esta propiedad puede contener una colección vacía.</span><span class="sxs-lookup"><span data-stu-id="5ae15-141">This property can contain an empty collection.</span></span> <span data-ttu-id="5ae15-142">Un serializador no debe presuponer jamás que dichas propiedades existen.</span><span class="sxs-lookup"><span data-stu-id="5ae15-142">A serializer should never assume that such properties exist.</span></span> <span data-ttu-id="5ae15-143">Una clase derivada o una implementación de <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager> define el conjunto de propiedades que se exponen aquí.</span><span class="sxs-lookup"><span data-stu-id="5ae15-143">A derived class or implementation of <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager> defines the set of properties that are exposed here.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="5ae15-144">Esta propiedad se puede rellenar con el código de usuario.</span><span class="sxs-lookup"><span data-stu-id="5ae15-144">This property can be populated by user code.</span></span> <span data-ttu-id="5ae15-145">Puede ser suficiente con llamar a <see cref="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type)" /> de <see cref="T:System.ComponentModel.TypeDescriptor" /> para rellenar esta colección.</span><span class="sxs-lookup"><span data-stu-id="5ae15-145">It may be sufficient to call <see cref="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type)" /> of <see cref="T:System.ComponentModel.TypeDescriptor" /> to populate this collection.</span></span> <span data-ttu-id="5ae15-146">El Administrador de serialización debe devolver una colección vacía si no existen propiedades personalizadas.</span><span class="sxs-lookup"><span data-stu-id="5ae15-146">The serialization manager must return an empty collection if no custom properties exist.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="RemoveSerializationProvider">
      <MemberSignature Language="C#" Value="public void RemoveSerializationProvider (System.ComponentModel.Design.Serialization.IDesignerSerializationProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveSerializationProvider(class System.ComponentModel.Design.Serialization.IDesignerSerializationProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.RemoveSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveSerializationProvider (provider As IDesignerSerializationProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveSerializationProvider(System::ComponentModel::Design::Serialization::IDesignerSerializationProvider ^ provider);" />
      <MemberSignature Language="F#" Value="abstract member RemoveSerializationProvider : System.ComponentModel.Design.Serialization.IDesignerSerializationProvider -&gt; unit" Usage="iDesignerSerializationManager.RemoveSerializationProvider provider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="5ae15-147">Proveedor que se va a quitar.</span><span class="sxs-lookup"><span data-stu-id="5ae15-147">The provider to remove.</span></span> <span data-ttu-id="5ae15-148">Se debe haber agregado este objeto con <see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)" />.</span><span class="sxs-lookup"><span data-stu-id="5ae15-148">This object must have been added using <see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)" />.</span></span></param>
        <summary><span data-ttu-id="5ae15-149">Quita un proveedor de serialización personalizado del administrador de serialización.</span><span class="sxs-lookup"><span data-stu-id="5ae15-149">Removes a custom serialization provider from the serialization manager.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReportError">
      <MemberSignature Language="C#" Value="public void ReportError (object errorInformation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReportError(object errorInformation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReportError (errorInformation As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReportError(System::Object ^ errorInformation);" />
      <MemberSignature Language="F#" Value="abstract member ReportError : obj -&gt; unit" Usage="iDesignerSerializationManager.ReportError errorInformation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="errorInformation" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="errorInformation"><span data-ttu-id="5ae15-150">Error que se va a notificar.</span><span class="sxs-lookup"><span data-stu-id="5ae15-150">The error to report.</span></span> <span data-ttu-id="5ae15-151">Este objeto de información puede ser de cualquier tipo de objeto.</span><span class="sxs-lookup"><span data-stu-id="5ae15-151">This information object can be of any object type.</span></span> <span data-ttu-id="5ae15-152">Si es una excepción, se extrae el mensaje de la excepción y se notifica al usuario.</span><span class="sxs-lookup"><span data-stu-id="5ae15-152">If it is an exception, the message of the exception is extracted and reported to the user.</span></span> <span data-ttu-id="5ae15-153">Si es de algún otro tipo, se llama a <see cref="M:System.Object.ToString" /> para mostrar la información al usuario.</span><span class="sxs-lookup"><span data-stu-id="5ae15-153">If it is any other type, <see cref="M:System.Object.ToString" /> is called to display the information to the user.</span></span></param>
        <summary><span data-ttu-id="5ae15-154">Notifica un error en la serialización.</span><span class="sxs-lookup"><span data-stu-id="5ae15-154">Reports an error in serialization.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ae15-155">Si el Administrador de serialización permite registrar varios errores en su implementación de <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError%2A>, se puede almacenar el objeto de información de error para un futuro informe donde se pueden mostrar todos los errores encontrados al mismo tiempo.</span><span class="sxs-lookup"><span data-stu-id="5ae15-155">If the serialization manager supports logging multiple errors in its implementation of <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError%2A>, it can store the error information object for a future report where all the errors encountered can be displayed at once.</span></span> <span data-ttu-id="5ae15-156">Si este método almacena varios errores, la serialización puede continuar después de llamar a este método.</span><span class="sxs-lookup"><span data-stu-id="5ae15-156">If this method stores multiple errors, serialization can continue after a call to this method.</span></span> <span data-ttu-id="5ae15-157">Si este método no permite registrar varios errores, este método debe producir una excepción, que anula la serialización.</span><span class="sxs-lookup"><span data-stu-id="5ae15-157">If this method does not support logging multiple errors, this method should throw an exception, which aborts serialization.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5ae15-158">El Administrador de serialización jamás deberá producir una excepción para los errores detectados durante la serialización.</span><span class="sxs-lookup"><span data-stu-id="5ae15-158">The serialization manager should never throw an exception for errors encountered during serialization.</span></span> <span data-ttu-id="5ae15-159">Solo debe producir una excepción durante la deserialización.</span><span class="sxs-lookup"><span data-stu-id="5ae15-159">It should only throw an exception during deserialization.</span></span> <span data-ttu-id="5ae15-160">En caso contrario, los usuarios se confundan ya que guardar el documento nunca deben producirse errores.</span><span class="sxs-lookup"><span data-stu-id="5ae15-160">Otherwise, users become confused because saving the document should never fail.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveName">
      <MemberSignature Language="C#" Value="event System.ComponentModel.Design.Serialization.ResolveNameEventHandler ResolveName;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.Design.Serialization.ResolveNameEventHandler ResolveName" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName" />
      <MemberSignature Language="VB.NET" Value="Event ResolveName As ResolveNameEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::Design::Serialization::ResolveNameEventHandler ^ ResolveName;" />
      <MemberSignature Language="F#" Value="member this.ResolveName : System.ComponentModel.Design.Serialization.ResolveNameEventHandler " Usage="member this.ResolveName : System.ComponentModel.Design.Serialization.ResolveNameEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.Serialization.ResolveNameEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5ae15-161">Tiene lugar cuando <see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName(System.Object)" /> no puede encontrar el nombre especificado en la tabla de nombres del administrador de serialización.</span><span class="sxs-lookup"><span data-stu-id="5ae15-161">Occurs when <see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName(System.Object)" /> cannot locate the specified name in the serialization manager's name table.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ae15-162">Este evento permite a un serializador crear un objeto a petición, de manera que el serializador no tenga que ordenar la creación de objetos por dependencia.</span><span class="sxs-lookup"><span data-stu-id="5ae15-162">This event provides a way for a serializer to create an object on demand, so that the serializer does not have to order object creation by dependency.</span></span> <span data-ttu-id="5ae15-163">El delegado de este evento se borra en cuanto se haya completado la serialización o deserialización.</span><span class="sxs-lookup"><span data-stu-id="5ae15-163">The delegate for this event is cleared immediately after serialization or deserialization is complete.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SerializationComplete">
      <MemberSignature Language="C#" Value="event EventHandler SerializationComplete;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SerializationComplete" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete" />
      <MemberSignature Language="VB.NET" Value="Event SerializationComplete As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SerializationComplete;" />
      <MemberSignature Language="F#" Value="member this.SerializationComplete : EventHandler " Usage="member this.SerializationComplete : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5ae15-164">Se produce al finalizar la serialización.</span><span class="sxs-lookup"><span data-stu-id="5ae15-164">Occurs when serialization is complete.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ae15-165">Este evento se provoca al finalizar la serialización o deserialización.</span><span class="sxs-lookup"><span data-stu-id="5ae15-165">This event is raised when serialization or deserialization is complete.</span></span>  
  
 <span data-ttu-id="5ae15-166">Por lo general, el código de serialización se escribe para emitir los datos de serialización y normalmente no requiere comprobaciones y procesos relacionados con el estado.</span><span class="sxs-lookup"><span data-stu-id="5ae15-166">Generally, serialization code is written to emit serialization data and does not typically require state-related checking and processing.</span></span> <span data-ttu-id="5ae15-167">Si es necesario mantener los datos de estado durante la serialización, se pueden establecer los datos y obtener acceso a ellos mediante un serializador, que puede escuchar el evento <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete>, y borrarlos después de la serialización.</span><span class="sxs-lookup"><span data-stu-id="5ae15-167">If it is necessary to maintain state data throughout serialization, data can be set and accessed by a serializer, which can listen to the <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete> event, and clear the data after serialization.</span></span> <span data-ttu-id="5ae15-168">Restaurar el estado adecuado después de serialización puede ser importante porque se pueden reutilizar los serializadores durante la serialización y los datos de estado sobrantes o las secuencias abiertas no sean correctos.</span><span class="sxs-lookup"><span data-stu-id="5ae15-168">Restoring the proper state after serialization can be important because serializers can be reused during serialization, and leftover state data or open streams might not be correct.</span></span>  
  
 <span data-ttu-id="5ae15-169">Por ejemplo, si necesita un serializador escribir en otro archivo, como un archivo de recursos, es inútil diseñar el serializador para cerrar el archivo cuando termine.</span><span class="sxs-lookup"><span data-stu-id="5ae15-169">For example, if a serializer needs to write to another file, such as a resource file, it is inefficient to design the serializer to close the file when finished.</span></span> <span data-ttu-id="5ae15-170">Serializar un gráfico de objetos normalmente requiere varios serializadores.</span><span class="sxs-lookup"><span data-stu-id="5ae15-170">Serializing an object graph usually requires several serializers.</span></span> <span data-ttu-id="5ae15-171">El archivo de recursos podría abrir y cerrar muchas veces.</span><span class="sxs-lookup"><span data-stu-id="5ae15-171">The resource file would be opened and closed many times.</span></span> <span data-ttu-id="5ae15-172">En su lugar, se puede cerrar el archivo de recursos al final de la serialización por un objeto que ha tenido en cuenta el <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete> eventos.</span><span class="sxs-lookup"><span data-stu-id="5ae15-172">Instead, the resource file can be closed at the end of serialization by an object that listened to the <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete> event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetName">
      <MemberSignature Language="C#" Value="public void SetName (object instance, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetName(object instance, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetName (instance As Object, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetName(System::Object ^ instance, System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member SetName : obj * string -&gt; unit" Usage="iDesignerSerializationManager.SetName (instance, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="5ae15-173">Instancia del objeto a la que se va a asignar un nombre.</span><span class="sxs-lookup"><span data-stu-id="5ae15-173">The object instance to name.</span></span></param>
        <param name="name"><span data-ttu-id="5ae15-174">Nombre que se va a asignar a la instancia.</span><span class="sxs-lookup"><span data-stu-id="5ae15-174">The name to give the instance.</span></span></param>
        <summary><span data-ttu-id="5ae15-175">Establece el nombre del objeto existente especificado.</span><span class="sxs-lookup"><span data-stu-id="5ae15-175">Sets the name of the specified existing object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ae15-176">Este método es útil cuando es necesario crear y, a continuación, asignar nombre a una instancia de un objeto sin usar <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A>.</span><span class="sxs-lookup"><span data-stu-id="5ae15-176">This method is useful when it is necessary to create and then name an instance of an object without using <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A>.</span></span> <span data-ttu-id="5ae15-177">Se produce una excepción si se intenta cambiar el nombre de un objeto existente o si se intenta asignar a un objeto nuevo un nombre que ya esté en uso.</span><span class="sxs-lookup"><span data-stu-id="5ae15-177">An exception is thrown if you try to rename an existing object or if you try to give a new object a name that is already taken.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
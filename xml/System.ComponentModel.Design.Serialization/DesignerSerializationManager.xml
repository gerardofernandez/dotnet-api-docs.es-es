<Type Name="DesignerSerializationManager" FullName="System.ComponentModel.Design.Serialization.DesignerSerializationManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="14688dd6cc92d5f40d50bf3a1da2f440b7d321eb" /><Meta Name="ms.sourcegitcommit" Value="42a3c35677e9d87eeb503607ae50c9d39827d414" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="12/17/2018" /><Meta Name="ms.locfileid" Value="53484049" /></Metadata><TypeSignature Language="C#" Value="public class DesignerSerializationManager : IServiceProvider, System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DesignerSerializationManager extends System.Object implements class System.ComponentModel.Design.Serialization.IDesignerSerializationManager, class System.IServiceProvider" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" />
  <TypeSignature Language="VB.NET" Value="Public Class DesignerSerializationManager&#xA;Implements IDesignerSerializationManager, IServiceProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class DesignerSerializationManager : IServiceProvider, System::ComponentModel::Design::Serialization::IDesignerSerializationManager" />
  <TypeSignature Language="F#" Value="type DesignerSerializationManager = class&#xA;    interface IDesignerSerializationManager&#xA;    interface IServiceProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.Design.Serialization.IDesignerSerializationManager</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IServiceProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="2ad6e-101">Proporciona una implementación de la interfaz <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-101">Provides an implementation of the <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> interface.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ad6e-102">El <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager> interfaz está diseñada para ser una interfaz independiente del formato a un objeto que controla la serialización.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-102">The <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager> interface is designed to be a format-independent interface to an object that controls serialization.</span></span> <span data-ttu-id="2ad6e-103">Básicamente proporciona contexto y los servicios a los serializadores, que realmente realizan la deserialización.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-103">It essentially provides context and services to serializers, which actually perform the deserialization.</span></span> <span data-ttu-id="2ad6e-104"><xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager> Ayuda en el proceso de deserialización mediante el seguimiento de los objetos.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-104"><xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager> assists in the deserialization process by keeping track of objects.</span></span> <span data-ttu-id="2ad6e-105">Esto es similar a la <xref:System.ComponentModel.Design.IDesignerHost> interfaz: diseñadores realmente proporcionan la interfaz de usuario (IU), y <xref:System.ComponentModel.Design.IDesignerHost> proporciona el elemento aglutinador que permite a los diseñadores diferentes que funcionan conjuntamente.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-105">This is similar in technique to the <xref:System.ComponentModel.Design.IDesignerHost> interface: designers actually provide the user interface (UI), and <xref:System.ComponentModel.Design.IDesignerHost> provides the glue that allows different designers to work together.</span></span>  
  
 <span data-ttu-id="2ad6e-106">El <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager> la clase implementa <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager>.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-106">The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager> class implements <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager>.</span></span> <span data-ttu-id="2ad6e-107">Está diseñado para proporcionar un formulario genérico de deserialización que es similar a los serializadores de tiempo de ejecución, como el <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-107">It is designed to provide a generic form of deserialization that is similar to run-time serializers like the <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>.</span></span>  
  
 <span data-ttu-id="2ad6e-108">La <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager> clase logra tres objetivos:</span><span class="sxs-lookup"><span data-stu-id="2ad6e-108">The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager> class achieves three goals:</span></span>  
  
-   <span data-ttu-id="2ad6e-109">Es un objeto simple y llave en mano que se puede usar para deserializar una variedad de formatos.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-109">It is a simple, turnkey object that can be used to deserialize a variety of formats.</span></span>  
  
-   <span data-ttu-id="2ad6e-110">Es genérico y no están vinculados a un formato concreto.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-110">It is generic and not tied to any particular format.</span></span> <span data-ttu-id="2ad6e-111">Se puede usar igualmente para la deserialización de CodeDOM, así como la deserialización de marcado.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-111">It can be used equally for CodeDOM deserialization as well as markup deserialization.</span></span>  
  
-   <span data-ttu-id="2ad6e-112">Es extensible y admite métodos de serialización diferente que se usan en escenarios de copiar y pegar y deshacer/rehacer.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-112">It is extensible and supports different serialization methods that are used in copy/paste and undo/redo scenarios.</span></span>  
  
 <span data-ttu-id="2ad6e-113">Serialización en tiempo de diseño tiene las siguientes diferencias de la serialización del objeto de tiempo de ejecución:</span><span class="sxs-lookup"><span data-stu-id="2ad6e-113">Design-time serialization has the following differences from run-time object serialization:</span></span>  
  
-   <span data-ttu-id="2ad6e-114">Objeto que realiza la serialización es generalmente independiente desde el objeto de tiempo de ejecución, para que un componente puede quitarse la lógica en tiempo de diseño.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-114">The object performing the serialization is generally separate from the run-time object, so that design-time logic can be removed from a component.</span></span>  
  
-   <span data-ttu-id="2ad6e-115">El esquema de serialización se da por supuesto que el objeto se crearán totalmente inicializado y, a continuación, puede modificar a través de las llamadas de propiedad y método durante la deserialización.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-115">The serialization scheme assumes the object will be created fully initialized, and then modified through property and method invocations during deserialization.</span></span>  
  
-   <span data-ttu-id="2ad6e-116">No se serializan las propiedades de un objeto que tienen valores que nunca se establecieron en el objeto (las propiedades contienen los valores predeterminados).</span><span class="sxs-lookup"><span data-stu-id="2ad6e-116">Properties of an object that have values that were never set on the object (the properties contain the default values) are not serialized.</span></span> <span data-ttu-id="2ad6e-117">Por el contrario, la secuencia de deserialización puede tener lagunas.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-117">Conversely, the deserialization stream may have holes.</span></span>  
  
-   <span data-ttu-id="2ad6e-118">Se hace hincapié en la calidad del contenido dentro de la secuencia de serialización, en lugar de la serialización completa de un objeto.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-118">Emphasis is placed on the quality of the content within the serialization stream, rather than the full serialization of an object.</span></span> <span data-ttu-id="2ad6e-119">Esto significa que si no hay ninguna manera definida para serializar un objeto, se puede omitir ese objeto en lugar de producir una excepción.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-119">This means that if there is no defined way to serialize an object, that object may be skipped rather than throwing an exception.</span></span> <span data-ttu-id="2ad6e-120">El motor de serialización puede proporcionar aquí la heurística para decidir qué errores se pueden omitir y cuáles son irrecuperables.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-120">The serialization engine may provide heuristics here to decide which failures can be ignored and which are unrecoverable.</span></span>  
  
-   <span data-ttu-id="2ad6e-121">La secuencia de serialización puede tener más datos que se necesita para la deserialización.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-121">The serialization stream may have more data than is needed for deserialization.</span></span> <span data-ttu-id="2ad6e-122">Serialización de código fuente, por ejemplo, tiene código de usuario mezclado con el código necesario para deserializar un gráfico de objetos.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-122">Source code serialization, for example, has user code mixed in with the code needed to deserialize an object graph.</span></span> <span data-ttu-id="2ad6e-123">Este código de usuario se debe omitir en la deserialización y conservar en la serialización.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-123">This user code must be ignored on deserialization and preserved on serialization.</span></span>  
  
 <span data-ttu-id="2ad6e-124">Debido a estas diferencias, se aplica un modelo de serialización diferente para la serialización en tiempo de diseño.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-124">Because of these differences, a different serialization model applies to design-time serialization.</span></span> <span data-ttu-id="2ad6e-125">Este modelo utiliza un objeto de serializador independiente para cada tipo de datos que se está serializando.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-125">This model utilizes a separate serializer object for each data type being serialized.</span></span> <span data-ttu-id="2ad6e-126">Cada serializador realiza su pequeña contribución para el problema como un todo.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-126">Each serializer provides its small contribution to the problem as a whole.</span></span> <span data-ttu-id="2ad6e-127">Estos serializadores todos están coordinados a través de un administrador de serialización comunes.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-127">These serializers are all coordinated through a common serialization manager.</span></span> <span data-ttu-id="2ad6e-128">El Administrador de serialización es responsable de mantener el estado entre estos serializadores diferentes.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-128">The serialization manager is responsible for maintaining state between these different serializers.</span></span> <span data-ttu-id="2ad6e-129">Por ejemplo, considere la siguiente clase:</span><span class="sxs-lookup"><span data-stu-id="2ad6e-129">As an example, consider the following class:</span></span>  
  
 [!code-csharp[System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject/CS/Program.cs#2)]
 [!code-vb[System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject/VB/Program.vb#2)]  
  
 <span data-ttu-id="2ad6e-130">Una instancia de esta clase utilizaría tres serializadores diferentes: uno para `SampleObject`, uno para las cadenas y otro para números enteros.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-130">An instance of this class would utilize three different serializers: one for `SampleObject`, one for strings, and another for integers.</span></span> <span data-ttu-id="2ad6e-131">El serializador para `SampleObject` se denomina el serializador raíz porque `SampleObject` es la raíz del gráfico de serialización.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-131">The serializer for `SampleObject` is called the root serializer because `SampleObject` is the root of the serialization graph.</span></span> <span data-ttu-id="2ad6e-132">También se pueden crear gráficos de objetos más complejos.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-132">More complex object graphs can be created as well.</span></span> <span data-ttu-id="2ad6e-133">Por ejemplo, considere lo que sucedería si `SampleObject` se cambiaron como sigue:</span><span class="sxs-lookup"><span data-stu-id="2ad6e-133">For example, consider what would happen if `SampleObject` were changed as follows:</span></span>  
  
 [!code-csharp[System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject/CS/SampleObject.cs#11)]
 [!code-vb[System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject/VB/SampleObject.vb#11)]  
  
 <span data-ttu-id="2ad6e-134">Esto permite `SampleObject` para tener un elemento secundario que es otra instancia de sí mismo.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-134">This allows `SampleObject` to have a child that is another instance of itself.</span></span> <span data-ttu-id="2ad6e-135">El código siguiente rellena el gráfico de objetos:</span><span class="sxs-lookup"><span data-stu-id="2ad6e-135">The following code fills in the object graph:</span></span>  
  
 [!code-csharp[System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#12](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject/CS/SampleObject.cs#12)]
 [!code-vb[System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#12](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject/VB/SampleObject.vb#12)]  
  
 <span data-ttu-id="2ad6e-136">Cuando `root` se serializa, habrá cuatro serializadores personalizados utilizados: serializador una raíz, un serializador para el elemento secundario `SampleObject`, un serializador para `int`y un serializador para `string`.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-136">When `root` is serialized, there will be four serializers used: one root serializer, one serializer for the child `SampleObject`, one serializer for `int`, and one serializer for `string`.</span></span> <span data-ttu-id="2ad6e-137">Los serializadores se almacenan en caché según el tipo, por lo que no hay ninguna necesidad de crear un serializador para cada instancia de `SampleObject`.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-137">Serializers are cached based on type, so there is no need to create a serializer for each instance of `SampleObject`.</span></span>  
  
 <span data-ttu-id="2ad6e-138">La <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager> clase se basa en la idea de una sesión de serialización.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-138">The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager> class is based on the idea of a serialization session.</span></span> <span data-ttu-id="2ad6e-139">Una sesión mantiene el estado que puede tener acceso a los serializadores distintos.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-139">A session maintains state that can be accessed by the various serializers.</span></span> <span data-ttu-id="2ad6e-140">Cuando se desecha una sesión, se destruye este estado.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-140">When a session is disposed, this state is destroyed.</span></span> <span data-ttu-id="2ad6e-141">Esto ayuda a garantizar que los serializadores permanezcan en gran medida sin estado, y ayuda a limpiar los serializadores que se esté dañado.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-141">This helps to ensure that serializers remain largely stateless, and helps to clean up serializers that are have been corrupted.</span></span> <span data-ttu-id="2ad6e-142">Las tablas siguientes describen cómo se administra el estado en y entre las sesiones.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-142">The following tables describe how state is managed in and among sessions.</span></span>  
  
## <a name="global-state"></a><span data-ttu-id="2ad6e-143">Estado global</span><span class="sxs-lookup"><span data-stu-id="2ad6e-143">Global State</span></span>  
 <span data-ttu-id="2ad6e-144">Este estado es propiedad del objeto de administrador de serialización, pero es independiente de la sesión de serialización actual.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-144">This state is owned by the serialization manager object, but is independent of the current serialization session.</span></span>  
  
|<span data-ttu-id="2ad6e-145">Object</span><span class="sxs-lookup"><span data-stu-id="2ad6e-145">Object</span></span>|<span data-ttu-id="2ad6e-146">Uso</span><span class="sxs-lookup"><span data-stu-id="2ad6e-146">Usage</span></span>|  
|------------|-----------|  
|<span data-ttu-id="2ad6e-147">Proveedores de serialización</span><span class="sxs-lookup"><span data-stu-id="2ad6e-147">Serialization providers</span></span>|<span data-ttu-id="2ad6e-148">Objetos se pueden agregar a sí mismos como proveedores de serialización personalizada.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-148">Objects can add themselves as custom serialization providers.</span></span> <span data-ttu-id="2ad6e-149">Dado que estos proveedores se usan para buscar serializadores, sobreviven a una sesión de serialización.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-149">Because these providers are used to locate serializers, they outlive a serialization session.</span></span>|  
  
## <a name="session-owned-state"></a><span data-ttu-id="2ad6e-150">Estado de sesión</span><span class="sxs-lookup"><span data-stu-id="2ad6e-150">Session-Owned State</span></span>  
 <span data-ttu-id="2ad6e-151">Este estado es propiedad de una sesión y se destruye cuando se destruye una sesión.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-151">This state is owned by a session and is destroyed when a session is destroyed.</span></span> <span data-ttu-id="2ad6e-152">Por lo tanto, tener acceso a las propiedades o métodos que manipulan este estado producirá una excepción si el Administrador de serialización no está en una sesión activa.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-152">Consequently, accessing any properties or methods that would manipulate this state will throw an exception if the serialization manager is not in an active session.</span></span>  
  
|<span data-ttu-id="2ad6e-153">Object</span><span class="sxs-lookup"><span data-stu-id="2ad6e-153">Object</span></span>|<span data-ttu-id="2ad6e-154">Uso</span><span class="sxs-lookup"><span data-stu-id="2ad6e-154">Usage</span></span>|  
|------------|-----------|  
|<span data-ttu-id="2ad6e-155">Evento<xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName> </span><span class="sxs-lookup"><span data-stu-id="2ad6e-155"><xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName> event</span></span>|<span data-ttu-id="2ad6e-156">El <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName> eventos se adjunta un serializador para proporcionar la resolución de nombres adicional.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-156">The <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName> event is attached by a serializer to provide additional resolution of names.</span></span> <span data-ttu-id="2ad6e-157">Todos los controladores se desasocian de este evento cuando finaliza una sesión.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-157">All handlers are detached from this event when a session terminates.</span></span>|  
|<span data-ttu-id="2ad6e-158">Evento<xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete> </span><span class="sxs-lookup"><span data-stu-id="2ad6e-158"><xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete> event</span></span>|<span data-ttu-id="2ad6e-159">El <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete> evento se genera justo antes de que se desecha una sesión.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-159">The <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete> event is raised just before a session is disposed.</span></span> <span data-ttu-id="2ad6e-160">A continuación, todos los controladores se desasocian de este evento.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-160">Then, all handlers are detached from this event.</span></span>|  
|<span data-ttu-id="2ad6e-161">Tabla de nombres</span><span class="sxs-lookup"><span data-stu-id="2ad6e-161">Name table</span></span>|<span data-ttu-id="2ad6e-162">El Administrador de serialización mantiene una tabla que asigna entre los objetos y sus nombres.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-162">The serialization manager maintains a table that maps between objects and their names.</span></span> <span data-ttu-id="2ad6e-163">Los serializadores pueden proporcionar nombres de objetos para facilitar su identificación.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-163">Serializers may give objects names for easy identification.</span></span> <span data-ttu-id="2ad6e-164">Esta tabla de nombres se borra cuando finaliza la sesión.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-164">This name table is cleared when the session terminates.</span></span>|  
|<span data-ttu-id="2ad6e-165">Memoria caché del serializador</span><span class="sxs-lookup"><span data-stu-id="2ad6e-165">Serializer cache</span></span>|<span data-ttu-id="2ad6e-166">El Administrador de serialización mantiene una caché de serializadores que se le ha pedido que proporcione.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-166">The serialization manager maintains a cache of serializers it has been asked to supply.</span></span> <span data-ttu-id="2ad6e-167">Esta caché se borra cuando finaliza la sesión.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-167">This cache is cleared when the session terminates.</span></span> <span data-ttu-id="2ad6e-168">El público <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer%2A> método puede llamar de forma segura en cualquier momento, pero su valor se almacena en caché solo si se llama desde dentro de una sesión.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-168">The public <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer%2A> method can safely be called at any time, but its value is cached only if it is called from within a session.</span></span>|  
|<span data-ttu-id="2ad6e-169">Pila de contexto</span><span class="sxs-lookup"><span data-stu-id="2ad6e-169">Context stack</span></span>|<span data-ttu-id="2ad6e-170">El Administrador de serialización mantiene un objeto que llama a la pila de contexto, que puede tener acceso con el <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-170">The serialization manager maintains an object called the context stack, which you can access with the <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context%2A> property.</span></span> <span data-ttu-id="2ad6e-171">Los serializadores pueden utilizar esta pila para almacenar información adicional que esté disponible para otros serializadores.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-171">Serializers can use this stack to store additional information that is available to other serializers.</span></span> <span data-ttu-id="2ad6e-172">Por ejemplo, un serializador que se está serializando un valor de propiedad puede insertar el nombre de propiedad en la pila de serialización antes de solicitar el valor se debe serializar.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-172">For example, a serializer that is serializing a property value can push the property name on the serialization stack before asking the value to serialize.</span></span> <span data-ttu-id="2ad6e-173">La pila se borra cuando finaliza la sesión.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-173">This stack is cleared when the session is terminated.</span></span>|  
|<span data-ttu-id="2ad6e-174">Lista de errores</span><span class="sxs-lookup"><span data-stu-id="2ad6e-174">Error list</span></span>|<span data-ttu-id="2ad6e-175">El Administrador de serialización mantiene una lista de errores producidos durante la serialización.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-175">The serialization manager maintains a list of errors that occurred during serialization.</span></span> <span data-ttu-id="2ad6e-176">Esta lista, que se accede mediante el <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors%2A> propiedad, se borra cuando se termina la sesión.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-176">This list, which is accessed through the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors%2A> property, is cleared when the session is terminated.</span></span> <span data-ttu-id="2ad6e-177">Obtener acceso a la <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors%2A> propiedad entre sesiones se producirá una excepción.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-177">Accessing the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors%2A> property between sessions will result in an exception.</span></span>|  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
    <altmember cref="T:System.ComponentModel.Design.IDesignerHost" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.ContextStack" />
    <altmember cref="T:System.IServiceProvider" />
    <altmember cref="T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2ad6e-178">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" />.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-178">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignerSerializationManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DesignerSerializationManager();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2ad6e-179">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" />.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-179">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ad6e-180">Este constructor establece la <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A> y <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A> propiedades a `true`.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-180">This constructor sets the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A> and <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A> properties to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames" />
        <altmember cref="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignerSerializationManager (IServiceProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IServiceProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.#ctor(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (provider As IServiceProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DesignerSerializationManager(IServiceProvider ^ provider);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Design.Serialization.DesignerSerializationManager : IServiceProvider -&gt; System.ComponentModel.Design.Serialization.DesignerSerializationManager" Usage="new System.ComponentModel.Design.Serialization.DesignerSerializationManager provider" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="provider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="2ad6e-181">Una clase <see cref="T:System.IServiceProvider" />.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-181">An <see cref="T:System.IServiceProvider" />.</span></span></param>
        <summary><span data-ttu-id="2ad6e-182">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" /> con el proveedor de servicios especificado.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-182">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" /> class with the given service provider.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ad6e-183">Si un serializador solicita servicios que no se puede satisfacer mediante el Administrador de serialización, la implementación predeterminada reenvía las solicitudes a la `provider` parámetro.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-183">If a serializer requests services that cannot be satisfied by the serialization manager, the default implementation will forward those requests to the `provider` parameter.</span></span>  
  
 <span data-ttu-id="2ad6e-184">Este constructor establece la <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A> y <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A> propiedades a `true`.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-184">This constructor sets the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A> and <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A> properties to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2ad6e-185">El valor de <paramref name="provider" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-185"><paramref name="provider" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.IServiceProvider" />
        <altmember cref="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames" />
        <altmember cref="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes" />
      </Docs>
    </Member>
    <Member MemberName="Container">
      <MemberSignature Language="C#" Value="public System.ComponentModel.IContainer Container { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.IContainer Container" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Container" />
      <MemberSignature Language="VB.NET" Value="Public Property Container As IContainer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::IContainer ^ Container { System::ComponentModel::IContainer ^ get(); void set(System::ComponentModel::IContainer ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Container : System.ComponentModel.IContainer with get, set" Usage="System.ComponentModel.Design.Serialization.DesignerSerializationManager.Container" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IContainer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2ad6e-186">Obtiene o establece el contenedor para este administrador de serialización.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-186">Gets or sets to the container for this serialization manager.</span></span></summary>
        <value><span data-ttu-id="2ad6e-187">Interfaz <see cref="T:System.ComponentModel.IContainer" /> a la que el administrador de serialización va a agregar componentes.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-187">The <see cref="T:System.ComponentModel.IContainer" /> to which the serialization manager will add components.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ad6e-188">Si existe un contenedor, todos los componentes que se crean mediante el Administrador de serialización se agregarán al contenedor.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-188">If a container exists, all components that are created by the serialization manager will be added to the container.</span></span> <span data-ttu-id="2ad6e-189">La implementación predeterminada de esta propiedad buscará el proveedor de servicios para un <xref:System.ComponentModel.Design.IDesignerHost> y usar el contenedor proporcionado por el host del diseñador, si existe uno.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-189">The default implementation of this property will search the service provider for an <xref:System.ComponentModel.Design.IDesignerHost> and use the container provided by the designer host, should one exist.</span></span> <span data-ttu-id="2ad6e-190">En caso contrario, esta propiedad devolverá `null` y no se agregará ningún componente en un contenedor.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-190">Otherwise, this property will return `null` and no components will be added to a container.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2ad6e-191">El administrador de serialización tiene una sesión de serialización activa.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-191">The serialization manager has an active serialization session.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="protected virtual object CreateInstance (Type type, System.Collections.ICollection arguments, string name, bool addToContainer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object CreateInstance(class System.Type type, class System.Collections.ICollection arguments, string name, bool addToContainer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ CreateInstance(Type ^ type, System::Collections::ICollection ^ arguments, System::String ^ name, bool addToContainer);" />
      <MemberSignature Language="F#" Value="abstract member CreateInstance : Type * System.Collections.ICollection * string * bool -&gt; obj&#xA;override this.CreateInstance : Type * System.Collections.ICollection * string * bool -&gt; obj" Usage="designerSerializationManager.CreateInstance (type, arguments, name, addToContainer)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="arguments" Type="System.Collections.ICollection" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="addToContainer" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="2ad6e-192">Tipo del que se va a crear una instancia.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-192">The type to create an instance of.</span></span></param>
        <param name="arguments"><span data-ttu-id="2ad6e-193">Parámetros del constructor del tipo.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-193">The parameters of the type's constructor.</span></span> <span data-ttu-id="2ad6e-194">Puede ser <see langword="null" /> o una colección vacía para invocar al constructor predeterminado.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-194">This can be <see langword="null" /> or an empty collection to invoke the default constructor.</span></span></param>
        <param name="name"><span data-ttu-id="2ad6e-195">Nombre que se va a dar al objeto.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-195">A name to give the object.</span></span> <span data-ttu-id="2ad6e-196">Si es <see langword="null" />, no se dará nombre al objeto, salvo que el propio objeto se agregue a un contenedor y el contenedor le dé un nombre.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-196">If <see langword="null" />, the object will not be given a name, unless the object is added to a container and the container gives the object a name.</span></span></param>
        <param name="addToContainer"><span data-ttu-id="2ad6e-197">Es <see langword="true" /> para agregar el objeto al contenedor si el objeto implementa <see cref="T:System.ComponentModel.IComponent" />; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-197"><see langword="true" /> to add the object to the container if the object implements <see cref="T:System.ComponentModel.IComponent" />; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="2ad6e-198">Crea una instancia de un tipo.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-198">Creates an instance of a type.</span></span></summary>
        <returns><span data-ttu-id="2ad6e-199">Nueva instancia del tipo especificado por <paramref name="type" />.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-199">A new instance of the type specified by <paramref name="type" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ad6e-200">Los serializadores llama a este método cuando intentan crear una instancia de un tipo.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-200">This method is called by serializers when they attempt to create an instance of a type.</span></span> <span data-ttu-id="2ad6e-201">La implementación predeterminada crea una nueva instancia del tipo, o que devuelva una instancia existente según los valores de la <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A> y <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A> propiedades.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-201">The default implementation creates a new instance of the type, or it may return an existing instance depending on the values of the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A> and <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A> properties.</span></span> <span data-ttu-id="2ad6e-202">El <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A> método usa la reflexión para crear instancias y llevará a cabo algunos genérica <xref:System.IConvertible> transformaciones en los parámetros para encontrar un constructor coincidente.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-202">The <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A> method uses reflection to create instances and will perform some generic <xref:System.IConvertible> transformations on parameters to find a matching constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.Serialization.SerializationException"><span data-ttu-id="2ad6e-203"><paramref name="type" /> no tiene un constructor que adopte los parámetros contenidos en <paramref name="arguments" />.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-203"><paramref name="type" /> does not have a constructor that takes parameters contained in <paramref name="arguments" />.</span></span></exception>
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateSession" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetInstance(System.String)" />
        <altmember cref="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances" />
        <altmember cref="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes" />
      </Docs>
    </Member>
    <Member MemberName="CreateSession">
      <MemberSignature Language="C#" Value="public IDisposable CreateSession ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IDisposable CreateSession() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateSession" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateSession () As IDisposable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IDisposable ^ CreateSession();" />
      <MemberSignature Language="F#" Value="member this.CreateSession : unit -&gt; IDisposable" Usage="designerSerializationManager.CreateSession " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2ad6e-204">Crea una nueva sesión de serialización.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-204">Creates a new serialization session.</span></span></summary>
        <returns><span data-ttu-id="2ad6e-205">Interfaz <see cref="T:System.IDisposable" /> que representa una nueva sesión de serialización.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-205">An <see cref="T:System.IDisposable" /> that represents a new serialization session.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ad6e-206">Mayoría de los datos en el Administrador de serialización es transitoria y solo tiene una duración de la vida de una sesión de serialización.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-206">Most data within the serialization manager is transient and only lives for the life of a serialization session.</span></span> <span data-ttu-id="2ad6e-207">Cuando se desecha una sesión, serialización se considera completa y se borra este estado transitorio.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-207">When a session is disposed, serialization is considered to be complete and this transient state is cleared.</span></span> <span data-ttu-id="2ad6e-208">Esto permite una única instancia de un administrador de serialización que se usará para serializar varios árboles de objetos.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-208">This allows a single instance of a serialization manager to be used to serialize multiple object trees.</span></span> <span data-ttu-id="2ad6e-209">Algunos Estados, incluyendo el proveedor de servicios y los proveedores de serialización personalizada que se han agregado al administrador de serialización, que abarcan las sesiones.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-209">Some state, including the service provider and any custom serialization providers that were added to the serialization manager, span sessions.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2ad6e-210">El administrador de serialización ya está en una sesión.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-210">The serialization manager is already within a session.</span></span> <span data-ttu-id="2ad6e-211">Esta versión de <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" /> no admite sesiones simultáneas.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-211">This version of <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" /> does not support simultaneous sessions.</span></span></exception>
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated(System.EventArgs)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Errors">
      <MemberSignature Language="C#" Value="public System.Collections.IList Errors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IList Errors" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Errors As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IList ^ Errors { System::Collections::IList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Errors : System.Collections.IList" Usage="System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2ad6e-212">Obtiene la lista de los errores que se han producido durante la serialización o deserialización.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-212">Gets the list of errors that occurred during serialization or deserialization.</span></span></summary>
        <value><span data-ttu-id="2ad6e-213">La lista de los errores que se han producido durante la serialización o deserialización.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-213">The list of errors that occurred during serialization or deserialization.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ad6e-214">Solo puede leer la lista de errores mientras está activa una sesión de serialización.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-214">You can only read the error list while a serialization session is active.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2ad6e-215">El acceso a esta propiedad se realizó fuera de una sesión de serialización.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-215">This property was accessed outside of a serialization session.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetRuntimeType">
      <MemberSignature Language="C#" Value="public Type GetRuntimeType (string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Type GetRuntimeType(string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetRuntimeType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRuntimeType (typeName As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetRuntimeType(System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="member this.GetRuntimeType : string -&gt; Type" Usage="designerSerializationManager.GetRuntimeType typeName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName"><span data-ttu-id="2ad6e-216">Nombre del tipo que se va a obtener.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-216">The name of the type to get.</span></span></param>
        <summary><span data-ttu-id="2ad6e-217">Obtiene el tipo que se corresponde con el nombre de tipo especificado.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-217">Gets the type corresponding to the specified type name.</span></span></summary>
        <returns><span data-ttu-id="2ad6e-218">El tipo especificado.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-218">The specified type.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSerializer">
      <MemberSignature Language="C#" Value="public object GetSerializer (Type objectType, Type serializerType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetSerializer(class System.Type objectType, class System.Type serializerType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer(System.Type,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSerializer (objectType As Type, serializerType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetSerializer(Type ^ objectType, Type ^ serializerType);" />
      <MemberSignature Language="F#" Value="member this.GetSerializer : Type * Type -&gt; obj" Usage="designerSerializationManager.GetSerializer (objectType, serializerType)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer(System.Type,System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectType" Type="System.Type" />
        <Parameter Name="serializerType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="objectType"><span data-ttu-id="2ad6e-219">Tipo de objeto para el que se va a recuperar el serializador.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-219">The type of object for which to retrieve the serializer.</span></span></param>
        <param name="serializerType"><span data-ttu-id="2ad6e-220">Tipo de serializador que se va a recuperar.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-220">The type of serializer to retrieve.</span></span></param>
        <summary><span data-ttu-id="2ad6e-221">Obtiene el serializador para el tipo de objeto especificado.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-221">Gets the serializer for the given object type.</span></span></summary>
        <returns><span data-ttu-id="2ad6e-222">Serializador para <paramref name="objectType" /> o <see langword="null" /> si no se ha encontrado.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-222">The serializer for <paramref name="objectType" />, or <see langword="null" />, if not found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ad6e-223">Puede solicitar el tipo de serializador que desee.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-223">You can request the type of serializer you would like.</span></span> <span data-ttu-id="2ad6e-224">Este método devuelve `null` si no hay ningún serializador del tipo solicitado para el tipo de objeto especificado.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-224">This method returns `null` if there is no serializer of the requested type for the specified object type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2ad6e-225">El valor de <paramref name="objectType" /> o <paramref name="serializerType" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-225"><paramref name="objectType" /> or <paramref name="serializerType" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#RemoveSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)" />
      </Docs>
    </Member>
    <Member MemberName="GetService">
      <MemberSignature Language="C#" Value="protected virtual object GetService (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object GetService(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetService(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetService (serviceType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ GetService(Type ^ serviceType);" />
      <MemberSignature Language="F#" Value="abstract member GetService : Type -&gt; obj&#xA;override this.GetService : Type -&gt; obj" Usage="designerSerializationManager.GetService serviceType" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IServiceProvider.GetService(System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType"><span data-ttu-id="2ad6e-226">Tipo de servicio que se va a recuperar.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-226">The type of service to retrieve.</span></span></param>
        <summary><span data-ttu-id="2ad6e-227">Obtiene el servicio solicitado.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-227">Gets the requested service.</span></span></summary>
        <returns><span data-ttu-id="2ad6e-228">Servicio solicitado o <see langword="null" /> si no se puede resolver el servicio.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-228">The requested service, or <see langword="null" /> if the service cannot be resolved.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ad6e-229">El <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetService%2A> método proporciona acceso al contenedor subyacente o al proveedor de servicios que se estableció en el constructor.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-229">The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetService%2A> method provides access to the underlying container or service provider that was set in the constructor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="protected virtual Type GetType (string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Type GetType(string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetType (typeName As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual Type ^ GetType(System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="override this.GetType : string -&gt; Type" Usage="designerSerializationManager.GetType typeName" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetType(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName"><span data-ttu-id="2ad6e-230">Nombre del tipo que se va a recuperar.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-230">The name of the type to retrieve.</span></span></param>
        <summary><span data-ttu-id="2ad6e-231">Obtiene el tipo solicitado.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-231">Gets the requested type.</span></span></summary>
        <returns><span data-ttu-id="2ad6e-232">Tipo solicitado o <see langword="null" /> si no se puede resolver el tipo.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-232">The requested type, or <see langword="null" /> if the type cannot be resolved.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ad6e-233">El <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType%2A> método buscará el proveedor de servicios para un <xref:System.ComponentModel.Design.ITypeResolutionService> y, si está disponible, delegará a ese servicio para resolver el tipo.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-233">The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType%2A> method will search the service provider for an <xref:System.ComponentModel.Design.ITypeResolutionService> and, if available, it will delegate to that service to resolve the type.</span></span> <span data-ttu-id="2ad6e-234">Si un <xref:System.ComponentModel.Design.ITypeResolutionService> no está disponible, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType%2A> llamará el <xref:System.Object.GetType%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-234">If an <xref:System.ComponentModel.Design.ITypeResolutionService> is not available, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType%2A> will call the <xref:System.Object.GetType%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnResolveName">
      <MemberSignature Language="C#" Value="protected virtual void OnResolveName (System.ComponentModel.Design.Serialization.ResolveNameEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnResolveName(class System.ComponentModel.Design.Serialization.ResolveNameEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName(System.ComponentModel.Design.Serialization.ResolveNameEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnResolveName (e As ResolveNameEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnResolveName(System::ComponentModel::Design::Serialization::ResolveNameEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnResolveName : System.ComponentModel.Design.Serialization.ResolveNameEventArgs -&gt; unit&#xA;override this.OnResolveName : System.ComponentModel.Design.Serialization.ResolveNameEventArgs -&gt; unit" Usage="designerSerializationManager.OnResolveName e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.Design.Serialization.ResolveNameEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="2ad6e-235">Objeto <see cref="T:System.ComponentModel.Design.Serialization.ResolveNameEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-235">A <see cref="T:System.ComponentModel.Design.Serialization.ResolveNameEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="2ad6e-236">Genera el evento <see cref="E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName" />.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-236">Raises the <see cref="E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ad6e-237">Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-237">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="2ad6e-238">Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="2ad6e-238">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="2ad6e-239">El método <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-239">The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="2ad6e-240">Ésta es la técnica preferida para controlar el evento en una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-240">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="2ad6e-241">Cuando se reemplaza <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName(System.ComponentModel.Design.Serialization.ResolveNameEventArgs)" /> en una clase derivada, asegúrese de llamar a la clase base <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName(System.ComponentModel.Design.Serialization.ResolveNameEventArgs)" /> método para que los delegados registrados reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-241">When overriding <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName(System.ComponentModel.Design.Serialization.ResolveNameEventArgs)" /> in a derived class, be sure to call the base class' <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName(System.ComponentModel.Design.Serialization.ResolveNameEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#SetName(System.Object,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="OnSessionCreated">
      <MemberSignature Language="C#" Value="protected virtual void OnSessionCreated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSessionCreated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSessionCreated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSessionCreated(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSessionCreated : EventArgs -&gt; unit&#xA;override this.OnSessionCreated : EventArgs -&gt; unit" Usage="designerSerializationManager.OnSessionCreated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="2ad6e-242">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-242">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="2ad6e-243">Genera el evento <see cref="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionCreated" />.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-243">Raises the <see cref="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionCreated" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ad6e-244">Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-244">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="2ad6e-245">Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="2ad6e-245">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="2ad6e-246">El método <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-246">The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="2ad6e-247">Ésta es la técnica preferida para controlar el evento en una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-247">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="2ad6e-248">Cuando se reemplaza <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated(System.EventArgs)" /> en una clase derivada, asegúrese de llamar a la clase base <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated(System.EventArgs)" /> método para que los delegados registrados reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-248">When overriding <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated(System.EventArgs)" /> in a derived class, be sure to call the base class' <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateSession" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnSessionDisposed">
      <MemberSignature Language="C#" Value="protected virtual void OnSessionDisposed (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSessionDisposed(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSessionDisposed (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSessionDisposed(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSessionDisposed : EventArgs -&gt; unit&#xA;override this.OnSessionDisposed : EventArgs -&gt; unit" Usage="designerSerializationManager.OnSessionDisposed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="2ad6e-249">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-249">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="2ad6e-250">Genera el evento <see cref="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionDisposed" />.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-250">Raises the <see cref="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionDisposed" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ad6e-251">Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-251">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="2ad6e-252">Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="2ad6e-252">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="2ad6e-253">El método <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-253">The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="2ad6e-254">Ésta es la técnica preferida para controlar el evento en una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-254">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="2ad6e-255">Cuando se reemplaza <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed(System.EventArgs)" /> en una clase derivada, asegúrese de llamar a la clase base <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed(System.EventArgs)" /> método para que los delegados registrados reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-255">When overriding <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed(System.EventArgs)" /> in a derived class, be sure to call the base class' <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateSession" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="PreserveNames">
      <MemberSignature Language="C#" Value="public bool PreserveNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PreserveNames" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames" />
      <MemberSignature Language="VB.NET" Value="Public Property PreserveNames As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PreserveNames { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.PreserveNames : bool with get, set" Usage="System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2ad6e-256">Obtiene o establece un valor que indica si el método <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> debe comprobar la presencia del nombre especificado en el contenedor.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-256">Gets or sets a value indicating whether the <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> method should check for the presence of the given name in the container.</span></span></summary>
        <value><span data-ttu-id="2ad6e-257"><see langword="true" /> si <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> va a pasar el nombre de componente determinado; <see langword="false" /> si <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> va a comprobar la presencia del nombre determinado en el contenedor.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-257"><see langword="true" /> if <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> will pass the given component name; <see langword="false" /> if <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> will check for the presence of the given name in the container.</span></span> <span data-ttu-id="2ad6e-258">De manera predeterminada, es <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-258">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ad6e-259">El <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A> propiedad determina el comportamiento de la <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> método.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-259">The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A> property determines the behavior of the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> method.</span></span> <span data-ttu-id="2ad6e-260">Si `true`, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> pasará el nombre del componente especificado.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-260">If `true`, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> will pass the given component name.</span></span> <span data-ttu-id="2ad6e-261">Si `false`, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> comprobará la presencia del nombre especificado en el contenedor.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-261">If `false`, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> will check for the presence of the given name in the container.</span></span> <span data-ttu-id="2ad6e-262">Si el nombre no existe en el contenedor, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> usará el nombre especificado.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-262">If the name does not exist in the container, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> will use the given name.</span></span> <span data-ttu-id="2ad6e-263">Si el nombre existe en el contenedor, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> pasará un valor null como el nombre de un componente cuando éste se agrega al contenedor, dándole un nombre nuevo.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-263">If the name does exist in the container, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> will pass a null value as the name of a component when adding it to the container, thereby giving it a new name.</span></span> <span data-ttu-id="2ad6e-264">Esta segunda variación es útil para implementar un serializador que siempre duplique objetos, en lugar de suponiendo que no existen esos objetos.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-264">This second variation is useful for implementing a serializer that always duplicates objects, rather than assuming those objects do not exist.</span></span> <span data-ttu-id="2ad6e-265">Comandos de pegar usan a menudo este tipo de serializador.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-265">Paste commands often use this type of serializer.</span></span>  
  
 <span data-ttu-id="2ad6e-266">Solo puede cambiar esta propiedad cuando no esté en una sesión de serialización.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-266">You can only change this property when you are not in a serialization session.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2ad6e-267">El cambio de esta propiedad se realizó desde una sesión de serialización.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-267">This property was changed from within a serialization session.</span></span></exception>
        <altmember cref="Overload:System.ComponentModel.Design.Serialization.DesignerSerializationManager.#ctor" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="PropertyProvider">
      <MemberSignature Language="C#" Value="public object PropertyProvider { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object PropertyProvider" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PropertyProvider" />
      <MemberSignature Language="VB.NET" Value="Public Property PropertyProvider As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ PropertyProvider { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PropertyProvider : obj with get, set" Usage="System.ComponentModel.Design.Serialization.DesignerSerializationManager.PropertyProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2ad6e-268">Obtiene el objeto que se debe utilizar para proporcionar propiedades a la propiedad <see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" /> del administrador de serialización.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-268">Gets the object that should be used to provide properties to the serialization manager's <see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" /> property.</span></span></summary>
        <value><span data-ttu-id="2ad6e-269">Objeto que se debe utilizar para proporcionar propiedades a la propiedad <see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" /> del administrador de serialización.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-269">The object that should be used to provide properties to the serialization manager's <see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" /> property.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ad6e-270">El <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PropertyProvider%2A> propiedad proporciona una manera de dar el Administrador de serialización de un conjunto de propiedades de serialización que se pueden utilizar los serializadores para guiar su comportamiento.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-270">The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PropertyProvider%2A> property provides a way to give the serialization manager a set of serialization properties that serializers can use to guide their behavior.</span></span>  
  
 <span data-ttu-id="2ad6e-271">Propiedades públicas de este objeto se inspeccionan y ajustadas en nuevos descriptores de propiedad que tienen un objeto de destino del Administrador de serialización.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-271">This object's public properties will be inspected and wrapped in new property descriptors that have a target object of the serialization manager.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RecycleInstances">
      <MemberSignature Language="C#" Value="public bool RecycleInstances { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RecycleInstances" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances" />
      <MemberSignature Language="VB.NET" Value="Public Property RecycleInstances As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RecycleInstances { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RecycleInstances : bool with get, set" Usage="System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2ad6e-272">Obtiene o establece un valor que indica si <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> va a crear siempre una nueva instancia de un tipo.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-272">Gets or sets a value that indicates whether <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> will always create a new instance of a type.</span></span></summary>
        <value><span data-ttu-id="2ad6e-273"><see langword="true" /> si <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> va a devolver la instancia existente; <see langword="false" /> si <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> va a crear una nueva instancia de un tipo.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-273"><see langword="true" /> if <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> will return the existing instance; <see langword="false" /> if <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> will create a new instance of a type.</span></span> <span data-ttu-id="2ad6e-274">De manera predeterminada, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-274">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ad6e-275">Si el <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A> propiedad es `false`, el <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> siempre creará una nueva instancia de un tipo.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-275">If the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A> property is `false`, the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> method will always create a new instance of a type.</span></span> <span data-ttu-id="2ad6e-276">Si <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A> es `true`, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> primero buscará en la tabla de nombres y el contenedor para un objeto del mismo nombre.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-276">If <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A> is `true`, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> will first search the name table and container for an object of the same name.</span></span> <span data-ttu-id="2ad6e-277">Si este tipo de objeto existe y es del mismo tipo, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> devolverá la instancia existente.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-277">If such an object exists and is of the same type, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> will return the existing instance.</span></span> <span data-ttu-id="2ad6e-278">Esta segunda variación es útil para implementar un serializador que se aplica el estado de serialización a un conjunto existente de objetos, en lugar de crear siempre un nuevo árbol.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-278">This second variation is useful for implementing a serializer that applies serialization state to an existing set of objects, rather than always creating a new tree.</span></span> <span data-ttu-id="2ad6e-279">El **deshacer** comando utiliza a menudo este tipo de serializador.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-279">The **Undo** command often uses this type of serializer.</span></span>  
  
 <span data-ttu-id="2ad6e-280">En el caso donde la <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A> propiedad es `true`, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A> propiedad va a modificar aún más el comportamiento de <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> según los tipos de los dos objetos.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-280">In the case where the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A> property is `true`, the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A> property will further modify the behavior of <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> depending on the types of the two objects.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2ad6e-281">El administrador de serialización tiene una sesión de serialización activa.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-281">The serialization manager has an active serialization session.</span></span></exception>
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" />
        <altmember cref="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes" />
      </Docs>
    </Member>
    <Member MemberName="SessionCreated">
      <MemberSignature Language="C#" Value="public event EventHandler SessionCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SessionCreated" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionCreated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SessionCreated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SessionCreated;" />
      <MemberSignature Language="F#" Value="member this.SessionCreated : EventHandler " Usage="member this.SessionCreated : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2ad6e-282">Tiene lugar cuando se crea una sesión.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-282">Occurs when a session is created.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SessionDisposed">
      <MemberSignature Language="C#" Value="public event EventHandler SessionDisposed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SessionDisposed" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionDisposed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SessionDisposed As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SessionDisposed;" />
      <MemberSignature Language="F#" Value="member this.SessionDisposed : EventHandler " Usage="member this.SessionDisposed : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2ad6e-283">Se produce cuando se desecha una sesión.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-283">Occurs when a session is disposed.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider">
      <MemberSignature Language="C#" Value="void IDesignerSerializationManager.AddSerializationProvider (System.ComponentModel.Design.Serialization.IDesignerSerializationProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider(class System.ComponentModel.Design.Serialization.IDesignerSerializationProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)" />
      <MemberSignature Language="VB.NET" Value="Sub AddSerializationProvider (provider As IDesignerSerializationProvider) Implements IDesignerSerializationManager.AddSerializationProvider" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider(System::ComponentModel::Design::Serialization::IDesignerSerializationProvider ^ provider) = System::ComponentModel::Design::Serialization::IDesignerSerializationManager::AddSerializationProvider;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="2ad6e-284">Proveedor de serialización que se va a agregar.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-284">The serialization provider to add.</span></span></param>
        <summary><span data-ttu-id="2ad6e-285">Agrega un proveedor de serialización personalizado al administrador de serialización.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-285">Adds a custom serialization provider to the serialization manager.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ad6e-286">Cuando el <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer%2A> método se usa para solicitar un proveedor de serialización, el Administrador de serialización las consultas a los proveedores de serialización personalizada en primer lugar antes busca en los metadatos del tipo del serializador adecuado.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-286">When the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer%2A> method is used to request a serialization provider, the serialization manager queries the custom serialization providers first before looking in the type's metadata for the appropriate serializer.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer(System.Type,System.Type)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#RemoveSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)" />
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context">
      <MemberSignature Language="C#" Value="System.ComponentModel.Design.Serialization.ContextStack System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.Serialization.ContextStack System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Context" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Context As ContextStack Implements IDesignerSerializationManager.Context" />
      <MemberSignature Language="C++ CLI" Value="property System::ComponentModel::Design::Serialization::ContextStack ^ System::ComponentModel::Design::Serialization::IDesignerSerializationManager::Context { System::ComponentModel::Design::Serialization::ContextStack ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.Serialization.ContextStack</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2ad6e-287">Obtiene la pila de contexto para esta sesión de serialización.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-287">Gets the context stack for this serialization session.</span></span></summary>
        <value><span data-ttu-id="2ad6e-288"><see cref="T:System.ComponentModel.Design.Serialization.ContextStack" /> que almacena datos.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-288">A <see cref="T:System.ComponentModel.Design.Serialization.ContextStack" /> that stores data.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ad6e-289">Una pila de contexto proporciona un área de almacenamiento definido por el usuario, que se implementa como una pila.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-289">A context stack provides a user-defined storage area, implemented as a stack.</span></span> <span data-ttu-id="2ad6e-290">Esta área de almacenamiento es una manera útil para proporcionar comunicación entre los serializadores, como la serialización es un proceso jerárquico.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-290">This storage area is a useful way to provide communication across serializers, as serialization is a generally hierarchical process.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2ad6e-291">El acceso a esta propiedad se realizó fuera de una sesión de serialización.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-291">This property was accessed outside of a serialization session.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.ContextStack" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateSession" />
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance">
      <MemberSignature Language="C#" Value="object IDesignerSerializationManager.CreateInstance (Type type, System.Collections.ICollection arguments, string name, bool addToContainer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(class System.Type type, class System.Collections.ICollection arguments, string name, bool addToContainer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(Type ^ type, System::Collections::ICollection ^ arguments, System::String ^ name, bool addToContainer) = System::ComponentModel::Design::Serialization::IDesignerSerializationManager::CreateInstance;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="arguments" Type="System.Collections.ICollection" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="addToContainer" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="2ad6e-292">Tipo de datos que se va crear.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-292">The data type to create.</span></span></param>
        <param name="arguments"><span data-ttu-id="2ad6e-293">Argumentos que se van a pasar al constructor para este tipo.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-293">The arguments to pass to the constructor for this type.</span></span></param>
        <param name="name"><span data-ttu-id="2ad6e-294">El nombre del objeto.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-294">The name of the object.</span></span> <span data-ttu-id="2ad6e-295">Se puede utilizar este nombre para tener acceso al objeto más adelante a través de <see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(System.String)" />.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-295">This name can be used to access the object later through <see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(System.String)" />.</span></span> <span data-ttu-id="2ad6e-296">Si se pasa <see langword="null" />, el objeto sigue creado pero no se puede tener acceso a él mediante el nombre.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-296">If <see langword="null" /> is passed, the object is still created but cannot be accessed by name.</span></span></param>
        <param name="addToContainer"><span data-ttu-id="2ad6e-297">Es <see langword="true" /> para agregar este objeto al contenedor de diseño.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-297"><see langword="true" /> to add this object to the design container.</span></span> <span data-ttu-id="2ad6e-298">El objeto debe implementar <see cref="T:System.ComponentModel.IComponent" /> para que esto surta efecto.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-298">The object must implement <see cref="T:System.ComponentModel.IComponent" /> for this to have any effect.</span></span></param>
        <summary><span data-ttu-id="2ad6e-299">Implementa el método <see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" />.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-299">Implements the <see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> method.</span></span></summary>
        <returns><span data-ttu-id="2ad6e-300">Instancia del objeto recién creada.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-300">The newly created object instance.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance">
      <MemberSignature Language="C#" Value="object IDesignerSerializationManager.GetInstance (string name);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetInstance(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function GetInstance (name As String) As Object Implements IDesignerSerializationManager.GetInstance" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(System::String ^ name) = System::ComponentModel::Design::Serialization::IDesignerSerializationManager::GetInstance;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="2ad6e-301">El nombre del objeto que se va a recuperar.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-301">The name of the object to retrieve.</span></span></param>
        <summary><span data-ttu-id="2ad6e-302">Recupera una instancia de un objeto creado con el nombre especificado.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-302">Retrieves an instance of a created object of the specified name.</span></span></summary>
        <returns><span data-ttu-id="2ad6e-303">Instancia del objeto con el nombre dado, o <see langword="null" /> si no se encuentra ningún objeto por ese nombre.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-303">An instance of the object with the given name, or <see langword="null" /> if no object by that name can be found.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2ad6e-304">El valor de <paramref name="name" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-304"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2ad6e-305">El acceso a esta propiedad se realizó fuera de una sesión de serialización.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-305">This property was accessed outside of a serialization session.</span></span></exception>
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName">
      <MemberSignature Language="C#" Value="string IDesignerSerializationManager.GetName (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function GetName (value As Object) As String Implements IDesignerSerializationManager.GetName" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName(System::Object ^ value) = System::ComponentModel::Design::Serialization::IDesignerSerializationManager::GetName;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="2ad6e-306">Objeto para el que se va a recuperar el nombre.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-306">The object for which to retrieve the name.</span></span></param>
        <summary><span data-ttu-id="2ad6e-307">Recupera un nombre para el objeto especificado.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-307">Retrieves a name for the specified object.</span></span></summary>
        <returns><span data-ttu-id="2ad6e-308">Nombre del objeto, o <see langword="null" /> si el objeto no tiene nombre.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-308">The name of the object, or <see langword="null" /> if the object is unnamed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ad6e-309">Si el <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23GetName%2A> método no encuentra un nombre correspondiente para el `value` parámetro, genera el <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName> eventos antes de devolver `null`.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-309">If the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23GetName%2A> method cannot find a corresponding name for the `value` parameter, it raises the <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName> event before it returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2ad6e-310">El valor de <paramref name="value" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-310"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2ad6e-311">El acceso a esta propiedad se realizó fuera de una sesión de serialización.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-311">This property was accessed outside of a serialization session.</span></span></exception>
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetInstance(System.String)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#SetName(System.Object,System.String)" />
        <altmember cref="E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName" />
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer">
      <MemberSignature Language="C#" Value="object IDesignerSerializationManager.GetSerializer (Type objectType, Type serializerType);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer(class System.Type objectType, class System.Type serializerType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetSerializer(System.Type,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Function GetSerializer (objectType As Type, serializerType As Type) As Object Implements IDesignerSerializationManager.GetSerializer" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer(Type ^ objectType, Type ^ serializerType) = System::ComponentModel::Design::Serialization::IDesignerSerializationManager::GetSerializer;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer(System.Type,System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectType" Type="System.Type" />
        <Parameter Name="serializerType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="objectType"><span data-ttu-id="2ad6e-312">Tipo del objeto para el que se obtiene el serializador.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-312">The type of the object to get the serializer for.</span></span></param>
        <param name="serializerType"><span data-ttu-id="2ad6e-313">Tipo del serializador que se va a recuperar.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-313">The type of the serializer to retrieve.</span></span></param>
        <summary><span data-ttu-id="2ad6e-314">Obtiene un serializador del tipo solicitado para el tipo de objeto especificado.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-314">Gets a serializer of the requested type for the specified object type.</span></span></summary>
        <returns><span data-ttu-id="2ad6e-315">Instancia del serializador solicitado, o <see langword="null" /> si no se encuentra ningún serializador adecuado.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-315">An instance of the requested serializer, or <see langword="null" /> if no appropriate serializer can be located.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetType">
      <MemberSignature Language="C#" Value="Type IDesignerSerializationManager.GetType (string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Type System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetType(string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function GetType (typeName As String) As Type Implements IDesignerSerializationManager.GetType" />
      <MemberSignature Language="C++ CLI" Value=" virtual Type ^ System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetType(System::String ^ typeName) = System::ComponentModel::Design::Serialization::IDesignerSerializationManager::GetType;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetType(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName"><span data-ttu-id="2ad6e-316">Nombre completo del tipo que se va a cargar.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-316">The fully qualified name of the type to load.</span></span></param>
        <summary><span data-ttu-id="2ad6e-317">Obtiene un tipo del nombre especificado.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-317">Gets a type of the specified name.</span></span></summary>
        <returns><span data-ttu-id="2ad6e-318">Instancia del tipo, o <see langword="null" /> si no se puede cargar el tipo.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-318">An instance of the type, or <see langword="null" /> if the type cannot be loaded.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2ad6e-319">El acceso a esta propiedad se realizó fuera de una sesión de serialización.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-319">This property was accessed outside of a serialization session.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties">
      <MemberSignature Language="C#" Value="System.ComponentModel.PropertyDescriptorCollection System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.PropertyDescriptorCollection System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Properties" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Properties As PropertyDescriptorCollection Implements IDesignerSerializationManager.Properties" />
      <MemberSignature Language="C++ CLI" Value="property System::ComponentModel::PropertyDescriptorCollection ^ System::ComponentModel::Design::Serialization::IDesignerSerializationManager::Properties { System::ComponentModel::PropertyDescriptorCollection ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2ad6e-320">Implementa la propiedad <see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" />.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-320">Implements the <see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" /> property.</span></span></summary>
        <value><span data-ttu-id="2ad6e-321"><see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> que contiene las propiedades que se van a serializar.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-321">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> containing the properties to be serialized.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.RemoveSerializationProvider">
      <MemberSignature Language="C#" Value="void IDesignerSerializationManager.RemoveSerializationProvider (System.ComponentModel.Design.Serialization.IDesignerSerializationProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.Serialization.IDesignerSerializationManager.RemoveSerializationProvider(class System.ComponentModel.Design.Serialization.IDesignerSerializationProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#RemoveSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)" />
      <MemberSignature Language="VB.NET" Value="Sub RemoveSerializationProvider (provider As IDesignerSerializationProvider) Implements IDesignerSerializationManager.RemoveSerializationProvider" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.Design.Serialization.IDesignerSerializationManager.RemoveSerializationProvider(System::ComponentModel::Design::Serialization::IDesignerSerializationProvider ^ provider) = System::ComponentModel::Design::Serialization::IDesignerSerializationManager::RemoveSerializationProvider;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.RemoveSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="2ad6e-322"><see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationProvider" /> que se va a quitar.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-322">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationProvider" /> to remove.</span></span></param>
        <summary><span data-ttu-id="2ad6e-323">Quita un proveedor de serialización agregado anteriormente.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-323">Removes a previously added serialization provider.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ad6e-324">El <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23RemoveSerializationProvider%2A> método quita un proveedor de serialización personalizado que había agregado anteriormente mediante una llamada a la <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23AddSerializationProvider%2A> método.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-324">The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23RemoveSerializationProvider%2A> method removes a custom serialization provider that was previously added by a call to the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23AddSerializationProvider%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer(System.Type,System.Type)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)" />
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError">
      <MemberSignature Language="C#" Value="void IDesignerSerializationManager.ReportError (object errorInformation);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError(object errorInformation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#ReportError(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub ReportError (errorInformation As Object) Implements IDesignerSerializationManager.ReportError" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError(System::Object ^ errorInformation) = System::ComponentModel::Design::Serialization::IDesignerSerializationManager::ReportError;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="errorInformation" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="errorInformation"><span data-ttu-id="2ad6e-325">Objeto que contiene la información de error, normalmente de tipo <see cref="T:System.String" /> o <see cref="T:System.Exception" />.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-325">An object containing the error information, usually of type <see cref="T:System.String" /> or <see cref="T:System.Exception" />.</span></span></param>
        <summary><span data-ttu-id="2ad6e-326">Se utiliza para crear un informe de error recuperable en la serialización.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-326">Used to report a recoverable error in serialization.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ad6e-327">Los serializadores se pueden escribir para controlar correctamente los errores recuperables mediante una llamada a la <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23ReportError%2A> método con la información de error.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-327">Serializers can be written to handle recoverable errors gracefully by calling the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23ReportError%2A> method with the error information.</span></span> <span data-ttu-id="2ad6e-328">El Administrador de serialización puede admitir una lista de errores de informes una vez completada, o puede iniciar una excepción desde este método y anular el proceso de serialización.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-328">The serialization manager may support reporting a list of errors after it completes, or it may throw an exception from this method and abort the serialization process.</span></span> <span data-ttu-id="2ad6e-329">El serializador debe continuar después de llamar a esta función.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-329">The serializer should continue after calling this function.</span></span>  
  
 <span data-ttu-id="2ad6e-330"><xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23ReportError%2A> Agrega el `errorInformation` parámetro para el <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors%2A> colección.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-330"><xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23ReportError%2A> adds the `errorInformation` parameter to the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors%2A> collection.</span></span> <span data-ttu-id="2ad6e-331">Si `errorInformation` es `null`, se realiza ninguna acción.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-331">If `errorInformation` is `null`, no action is taken.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2ad6e-332">El acceso a esta propiedad se realizó fuera de una sesión de serialización.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-332">This property was accessed outside of a serialization session.</span></span></exception>
        <altmember cref="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors" />
        <altmember cref="M:System.Collections.ArrayList.Add(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName">
      <MemberSignature Language="C#" Value="event System.ComponentModel.Design.Serialization.ResolveNameEventHandler System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.Design.Serialization.ResolveNameEventHandler System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#ResolveName" />
      <MemberSignature Language="VB.NET" Value="Custom Event ResolveName As ResolveNameEventHandler Implements System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.Serialization.ResolveNameEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2ad6e-333">Tiene lugar cuando <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)" /> no puede encontrar el nombre especificado en la tabla de nombres del administrador de serialización.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-333">Occurs when <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)" /> cannot locate the specified name in the serialization manager's name table.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="2ad6e-334">El `ResolveName` evento se desencadena cuando el <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23GetName%2A> se llama al método, pero no puede encontrar el nombre especificado en la tabla de nombres del Administrador de serialización.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-334">The `ResolveName` event is raised when the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23GetName%2A> method is called, but it fails to find the specified name in the serialization manager's name table.</span></span>

<span data-ttu-id="2ad6e-335">Este evento proporciona una manera para un serializador crear a petición un objeto para que el serializador no tiene que ordenar la creación de objetos por dependencia.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-335">This event provides a way for a serializer to demand-create an object so the serializer does not have to order object creation by dependency.</span></span> <span data-ttu-id="2ad6e-336">Este delegado se borra inmediatamente después de la serialización o deserialización se ha completado.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-336">This delegate is cleared immediately after serialization or deserialization is complete.</span></span>

]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2ad6e-337">El administrador de serialización no tiene una sesión de serialización activa.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-337">The serialization manager does not have an active serialization session.</span></span></exception>
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName(System.ComponentModel.Design.Serialization.ResolveNameEventArgs)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete">
      <MemberSignature Language="C#" Value="event EventHandler System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#SerializationComplete" />
      <MemberSignature Language="VB.NET" Value="Custom Event SerializationComplete As EventHandler Implements System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2ad6e-338">Se produce al finalizar la serialización.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-338">Occurs when serialization is complete.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="2ad6e-339">Normalmente, el proceso de serialización es de subproceso único y debe ser sin estado.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-339">Typically the serialization process is single-threaded and should be stateless.</span></span> <span data-ttu-id="2ad6e-340">Cuando estas características no se cumplen, la <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete> evento puede utilizarse para ayudar a organizar el proceso.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-340">When these characteristics are not true, the <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete> event can be used to help to organize the process.</span></span> <span data-ttu-id="2ad6e-341">Un serializador puede realizar un seguimiento de este evento para saber que el proceso de serialización está completado.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-341">A serializer can track this event to know that the serialization process is complete.</span></span>

<span data-ttu-id="2ad6e-342">Por ejemplo, a veces, necesita un serializador escribir en otro archivo, como un archivo de recursos.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-342">For example, sometimes a serializer needs to write to another file, such as a resource file.</span></span> <span data-ttu-id="2ad6e-343">En tal caso, sería poco eficaz para diseñar el serializador que se cierre el archivo cuando haya finalizado porque la serialización de un gráfico de objetos normalmente requiere varios serializadores; por lo tanto, el archivo de recursos podría abrir y cerrar muchas veces.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-343">In such a case, it would be inefficient to design the serializer to close the file when it is finished because serialization of an object graph generally requires several serializers; therefore, the resource file would be opened and closed many times.</span></span> <span data-ttu-id="2ad6e-344">En su lugar, el archivo de recursos puede obtenerse a través de un objeto que realiza el seguimiento de la <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete> evento y ese objeto podrían cerrar el archivo de recursos al final de la serialización.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-344">Instead, the resource file could be accessed through an object that tracked the <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete> event, and that object could close the resource file at the end of serialization.</span></span>

<span data-ttu-id="2ad6e-345">De forma similar, este evento puede utilizarse para quitar un servicio temporal instalado en el Administrador de serialización.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-345">In a related use, this event can be used to remove a temporary service installed in the serialization manager.</span></span>

]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2ad6e-346">El administrador de serialización no tiene una sesión de serialización activa.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-346">The serialization manager does not have an active serialization session.</span></span></exception>
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer(System.Type,System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName">
      <MemberSignature Language="C#" Value="void IDesignerSerializationManager.SetName (object instance, string name);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName(object instance, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#SetName(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub SetName (instance As Object, name As String) Implements IDesignerSerializationManager.SetName" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName(System::Object ^ instance, System::String ^ name) = System::ComponentModel::Design::Serialization::IDesignerSerializationManager::SetName;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName(System.Object,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="2ad6e-347">Objeto para el que se va a establecer el nombre.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-347">The object to set the name.</span></span></param>
        <param name="name"><span data-ttu-id="2ad6e-348">Objeto <see cref="T:System.String" /> que se ha utilizado como nombre del objeto.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-348">A <see cref="T:System.String" /> used as the name of the object.</span></span></param>
        <summary><span data-ttu-id="2ad6e-349">Establece el nombre para el objeto especificado.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-349">Sets the name for the specified object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ad6e-350">El <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23SetName%2A> método proporciona una manera de establecer el nombre de un objeto existente.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-350">The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23SetName%2A> method provides a way to set the name of an existing object.</span></span> <span data-ttu-id="2ad6e-351">Esto permite la creación de una instancia del objeto mediante una llamada a la <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23GetInstance%2A> método, se evita la sobrecarga de la <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> método.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-351">This enables creation of an instance of the object through a call to the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23GetInstance%2A> method, avoiding the overhead of the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2ad6e-352">Uno o ambos parámetros son <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-352">One or both of the parameters are <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2ad6e-353">El objeto especificado por la instancia ya tiene un nombre, o bien otro objeto con nombre ya utiliza <paramref name="name" />.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-353">The object specified by instance already has a name, or <paramref name="name" /> is already used by another named object.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2ad6e-354">El acceso a esta propiedad se realizó fuera de una sesión de serialización.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-354">This property was accessed outside of a serialization session.</span></span></exception>
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetInstance(System.String)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="System.IServiceProvider.GetService">
      <MemberSignature Language="C#" Value="object IServiceProvider.GetService (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.IServiceProvider.GetService(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#IServiceProvider#GetService(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Function GetService (serviceType As Type) As Object Implements IServiceProvider.GetService" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.IServiceProvider.GetService(Type ^ serviceType) = IServiceProvider::GetService;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IServiceProvider.GetService(System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType"><span data-ttu-id="2ad6e-355">Objeto que especifica el tipo de objeto de servicio que se va a obtener.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-355">An object that specifies the type of service object to get.</span></span></param>
        <summary><span data-ttu-id="2ad6e-356">Para obtener una descripción de este miembro, vea el método <see cref="M:System.IServiceProvider.GetService(System.Type)" />.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-356">For a description of this member, see the <see cref="M:System.IServiceProvider.GetService(System.Type)" /> method.</span></span></summary>
        <returns><span data-ttu-id="2ad6e-357">Objeto de servicio del tipo <paramref name="serviceType" />.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-357">A service object of type <paramref name="serviceType" />.</span></span>  
  
<span data-ttu-id="2ad6e-358">O bien</span><span class="sxs-lookup"><span data-stu-id="2ad6e-358">-or-</span></span> 
 <span data-ttu-id="2ad6e-359"><see langword="null" /> si no hay ningún objeto de servicio del tipo <paramref name="serviceType" />.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-359"><see langword="null" /> if there is no service object of type <paramref name="serviceType" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ad6e-360">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-360">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="2ad6e-361">Solo se puede utilizar cuando la instancia de <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager> se convierte en una interfaz <xref:System.IServiceProvider>.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-361">It can be used only when the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager> instance is cast to an <xref:System.IServiceProvider> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateRecycledTypes">
      <MemberSignature Language="C#" Value="public bool ValidateRecycledTypes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValidateRecycledTypes" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidateRecycledTypes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ValidateRecycledTypes { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ValidateRecycledTypes : bool with get, set" Usage="System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2ad6e-362">Obtiene o establece un valor que indica si el método <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> va a comprobar que los nombres coincidentes hagan referencia al mismo tipo.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-362">Gets or sets a value that indicates whether the <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> method will verify that matching names refer to the same type.</span></span></summary>
        <value><span data-ttu-id="2ad6e-363"><see langword="true" /> si <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> comprueba los tipos; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-363"><see langword="true" /> if <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> verifies types; otherwise, <see langword="false" /> if it does not.</span></span> <span data-ttu-id="2ad6e-364">De manera predeterminada, es <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-364">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ad6e-365">El <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A> propiedad modifica el comportamiento de la <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> método cuando el <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A> propiedad es `true`, tal como se detalla en la tabla siguiente.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-365">The <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A> property modifies the behavior of the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> method when the <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A> property is `true`, as detailed in the following table.</span></span>  
  
|`RecycleInstances`|`ValidateRecycledTypes`|<span data-ttu-id="2ad6e-366">Comportamiento de `CreateInstance`</span><span class="sxs-lookup"><span data-stu-id="2ad6e-366">Behavior of `CreateInstance`</span></span>|  
|------------------------|-----------------------------|----------------------------------|  
|`false`|<span data-ttu-id="2ad6e-367">`true` o `false`</span><span class="sxs-lookup"><span data-stu-id="2ad6e-367">`true` or `false`</span></span>|<span data-ttu-id="2ad6e-368">Crear siempre una nueva instancia del tipo especificado</span><span class="sxs-lookup"><span data-stu-id="2ad6e-368">Always create a new instance of the specified type</span></span>|  
|`true`|`false`|<span data-ttu-id="2ad6e-369">Si se encuentra una instancia coincidente, se devuelve, independientemente de su tipo.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-369">If a matching instance is found it is returned, regardless of its type.</span></span>|  
|`true`|`true`|<span data-ttu-id="2ad6e-370">Si se encuentra una instancia coincidente, se devuelve solo si su tipo es igual que la especificada en la llamada al método.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-370">If a matching instance is found, it is returned only if its type is the same as specified in the method call.</span></span>|  
  
 <span data-ttu-id="2ad6e-371"><xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A> es útil para transformar un tipo de objeto a otra si tienen propiedades similares pero no comparten ningún elemento primario común o interfaz.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-371"><xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A> is useful for morphing one type of object to another if they have similar properties but share no common parent or interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2ad6e-372">El administrador de serialización tiene una sesión de serialización activa.</span><span class="sxs-lookup"><span data-stu-id="2ad6e-372">The serialization manager has an active serialization session.</span></span></exception>
        <altmember cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" />
        <altmember cref="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances" />
      </Docs>
    </Member>
  </Members>
</Type>
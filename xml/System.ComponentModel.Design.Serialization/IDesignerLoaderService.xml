<Type Name="IDesignerLoaderService" FullName="System.ComponentModel.Design.Serialization.IDesignerLoaderService">
  <Metadata><Meta Name="ms.openlocfilehash" Value="91be6fb648bf803bf38fa96e6ee194581f86547f" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37698564" /></Metadata><TypeSignature Language="C#" Value="public interface IDesignerLoaderService" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDesignerLoaderService" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.Serialization.IDesignerLoaderService" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDesignerLoaderService" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDesignerLoaderService" />
  <TypeSignature Language="F#" Value="type IDesignerLoaderService = interface" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="3ffd3-101">Proporciona una interfaz que puede ampliar un cargador de diseñadores para admitir cargas asincrónicas de componentes externos.</span><span class="sxs-lookup"><span data-stu-id="3ffd3-101">Provides an interface that can extend a designer loader to support asynchronous loading of external components.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ffd3-102">Un <xref:System.ComponentModel.Design.Serialization.DesignerLoader> puede implementar esta interfaz para administrar la carga del diseñador que incluye los componentes externos.</span><span class="sxs-lookup"><span data-stu-id="3ffd3-102">A <xref:System.ComponentModel.Design.Serialization.DesignerLoader> can implement this interface to manage designer loading that involves external components.</span></span> <span data-ttu-id="3ffd3-103">Esta interfaz también permite que los componentes externos iniciar una recarga de la superficie de diseño mediante una llamada a <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload%2A>.</span><span class="sxs-lookup"><span data-stu-id="3ffd3-103">This interface also allows external components to initiate a reload of the design surface by calling <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload%2A>.</span></span> <span data-ttu-id="3ffd3-104">No tiene un cargador de diseñadores que implementan esta interfaz si no necesita compatibilidad con la carga asincrónica.</span><span class="sxs-lookup"><span data-stu-id="3ffd3-104">A designer loader does not have to implement this interface if it does not require support for asynchronous loading.</span></span>  
  
 <span data-ttu-id="3ffd3-105">Carga del diseñador mediante una implementación personalizada de la <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService> puede producirse en una variedad de formas.</span><span class="sxs-lookup"><span data-stu-id="3ffd3-105">Designer loading using a custom implementation of the <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService> can occur in a variety of ways.</span></span> <span data-ttu-id="3ffd3-106">Los componentes externos a veces están implicados en el proceso de carga.</span><span class="sxs-lookup"><span data-stu-id="3ffd3-106">Sometimes external components are involved in the loading process.</span></span> <span data-ttu-id="3ffd3-107">Para facilitar la carga con dependencias externas, la interfaz de servicio de cargador de diseñadores proporciona un mecanismo que se determina cuando la carga se complete y permite a cada parte de la carga para indicar que ha completado.</span><span class="sxs-lookup"><span data-stu-id="3ffd3-107">To facilitate loading with external dependencies, the designer loader service interface provides a mechanism that determines when loading is complete and allows each portion of loading to signal that it has completed.</span></span> <span data-ttu-id="3ffd3-108">El <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService> determina normalmente cuando la carga está completa mediante la comprobación de un contador que registra el número de dependencias de carga restante.</span><span class="sxs-lookup"><span data-stu-id="3ffd3-108">The <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService> typically determines when loading is complete by testing a counter that tracks the number of load dependencies remaining.</span></span> <span data-ttu-id="3ffd3-109">Cuando se complete cada parte de la carga, <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A> se llama a y el servicio reduce el contador.</span><span class="sxs-lookup"><span data-stu-id="3ffd3-109">When each portion of the load completes, <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A> is called, and the service decrements the counter.</span></span> <span data-ttu-id="3ffd3-110">Para establecer el número de procesos de carga dependiente, llame a <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A> una vez para cada proceso de carga que llama a <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A> cuando su carga está completa.</span><span class="sxs-lookup"><span data-stu-id="3ffd3-110">To set the number of dependent load processes, call <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A> once for each load process that calls <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A> when its loading is complete.</span></span> <span data-ttu-id="3ffd3-111">Cuando complete la carga final, las llamadas al servicio <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderHost.EndLoad%2A> en el host del cargador.</span><span class="sxs-lookup"><span data-stu-id="3ffd3-111">When the final loading is complete, the service calls <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderHost.EndLoad%2A> on the loader host.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddLoadDependency">
      <MemberSignature Language="C#" Value="public void AddLoadDependency ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddLoadDependency() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddLoadDependency ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddLoadDependency();" />
      <MemberSignature Language="F#" Value="abstract member AddLoadDependency : unit -&gt; unit" Usage="iDesignerLoaderService.AddLoadDependency " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3ffd3-112">Registra un componente externo como parte del proceso de carga administrado por esta interfaz.</span><span class="sxs-lookup"><span data-stu-id="3ffd3-112">Registers an external component as part of the load process managed by this interface.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ffd3-113">Llamar a <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A> una vez para cada objeto externo que participa en el proceso de carga.</span><span class="sxs-lookup"><span data-stu-id="3ffd3-113">Call <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A> once for each external object participating in the load process.</span></span> <span data-ttu-id="3ffd3-114"><xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A> se llama cuando se realiza el trabajo del proceso de carga.</span><span class="sxs-lookup"><span data-stu-id="3ffd3-114"><xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A> is called when the work of the load process is done.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DependentLoadComplete">
      <MemberSignature Language="C#" Value="public void DependentLoadComplete (bool successful, System.Collections.ICollection errorCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DependentLoadComplete(bool successful, class System.Collections.ICollection errorCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete(System.Boolean,System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DependentLoadComplete (successful As Boolean, errorCollection As ICollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DependentLoadComplete(bool successful, System::Collections::ICollection ^ errorCollection);" />
      <MemberSignature Language="F#" Value="abstract member DependentLoadComplete : bool * System.Collections.ICollection -&gt; unit" Usage="iDesignerLoaderService.DependentLoadComplete (successful, errorCollection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="successful" Type="System.Boolean" />
        <Parameter Name="errorCollection" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="successful"><span data-ttu-id="3ffd3-115">Es <see langword="true" /> si la carga del diseñador se realizó correctamente; es <see langword="false" /> si los errores impidieron que se completara la carga.</span><span class="sxs-lookup"><span data-stu-id="3ffd3-115"><see langword="true" /> if the load of the designer is successful; <see langword="false" /> if errors prevented the load from finishing.</span></span></param>
        <param name="errorCollection"><span data-ttu-id="3ffd3-116">Colección que contiene los errores que se produjeron durante la carga, en caso de haberlos.</span><span class="sxs-lookup"><span data-stu-id="3ffd3-116">A collection of errors that occurred during the load, if any.</span></span> <span data-ttu-id="3ffd3-117">De no haberlos, se pasa una colección vacía o <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="3ffd3-117">If no errors occurred, pass either an empty collection or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="3ffd3-118">Indica que ha finalizado una carga dependiente.</span><span class="sxs-lookup"><span data-stu-id="3ffd3-118">Signals that a dependent load has finished.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ffd3-119">Este método se llama para indicar que se ha completado una operación de carga dependiente.</span><span class="sxs-lookup"><span data-stu-id="3ffd3-119">This method is called to signal that a dependent loading operation has completed.</span></span> <span data-ttu-id="3ffd3-120">Llame a <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A> una vez para cada proceso que se registró mediante una llamada a <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A>, que ya se ha completado.</span><span class="sxs-lookup"><span data-stu-id="3ffd3-120">Call <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A> once for every process that was registered by calling <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A>, which has already completed.</span></span>  
  
 <span data-ttu-id="3ffd3-121">Si la carga dependiente se realiza correctamente, el llamador establece el `successful` parámetro `true` y pasa una colección vacía o `null` a la `errorCollection` parámetro.</span><span class="sxs-lookup"><span data-stu-id="3ffd3-121">If the dependent load succeeds, the caller sets the `successful` parameter to `true` and passes either an empty collection or `null` to the `errorCollection` parameter.</span></span> <span data-ttu-id="3ffd3-122">Si producen errores en la carga dependiente, el llamador establece el `successful` parámetro `false` y pasa una colección de excepciones que indican la causa o causas de error para el `errorCollection` parámetro.</span><span class="sxs-lookup"><span data-stu-id="3ffd3-122">If the dependent load encounters errors, the caller sets the `successful` parameter to `false` and passes a collection of exceptions that indicate the reason or reasons for failure to the `errorCollection` parameter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reload">
      <MemberSignature Language="C#" Value="public bool Reload ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Reload() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload" />
      <MemberSignature Language="VB.NET" Value="Public Function Reload () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Reload();" />
      <MemberSignature Language="F#" Value="abstract member Reload : unit -&gt; bool" Usage="iDesignerLoaderService.Reload " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3ffd3-123">Recarga el documento de diseño.</span><span class="sxs-lookup"><span data-stu-id="3ffd3-123">Reloads the design document.</span></span></summary>
        <returns><span data-ttu-id="3ffd3-124"><see langword="true" /> si se acepta la petición de recarga, o <see langword="false" /> si el cargador no permite la recarga.</span><span class="sxs-lookup"><span data-stu-id="3ffd3-124"><see langword="true" /> if the reload request is accepted, or <see langword="false" /> if the loader does not allow the reload.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ffd3-125">Cualquier objeto puede llamar a este método para solicitar el cargador recargue el documento de diseño.</span><span class="sxs-lookup"><span data-stu-id="3ffd3-125">Any object can call this method to request that the loader reload the design document.</span></span> <span data-ttu-id="3ffd3-126">Si el cargador admite la recarga y cumple con la recarga, puede devolver el cargador de diseñadores `true`.</span><span class="sxs-lookup"><span data-stu-id="3ffd3-126">If the loader supports reloading and complies with the reload, the designer loader can return `true`.</span></span> <span data-ttu-id="3ffd3-127">De lo contrario, devuelve `false`, que indica que no se produzca la recarga.</span><span class="sxs-lookup"><span data-stu-id="3ffd3-127">Otherwise, it returns `false`, indicating that the reload will not occur.</span></span> <span data-ttu-id="3ffd3-128">Los llamadores no pueden depender de la recarga sucede inmediatamente; el cargador de diseñadores puede programar para más tarde, o puede intentar volver a cargar a la vez.</span><span class="sxs-lookup"><span data-stu-id="3ffd3-128">Callers cannot rely on the reload happening immediately; the designer loader can schedule this for some other time, or it can try to reload at once.</span></span>  
  
 <span data-ttu-id="3ffd3-129">El llamador puede mostrar un mensaje al usuario si no se puede recargar el diseñador.</span><span class="sxs-lookup"><span data-stu-id="3ffd3-129">The caller can display a message to the user if the designer cannot be reloaded.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
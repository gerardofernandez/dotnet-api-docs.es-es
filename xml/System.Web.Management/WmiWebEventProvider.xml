<Type Name="WmiWebEventProvider" FullName="System.Web.Management.WmiWebEventProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b323b69301d8e6976b22274fac3677b2f57abfce" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51894147" /></Metadata><TypeSignature Language="C#" Value="public class WmiWebEventProvider : System.Web.Management.WebEventProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WmiWebEventProvider extends System.Web.Management.WebEventProvider" />
  <TypeSignature Language="DocId" Value="T:System.Web.Management.WmiWebEventProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class WmiWebEventProvider&#xA;Inherits WebEventProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class WmiWebEventProvider : System::Web::Management::WebEventProvider" />
  <TypeSignature Language="F#" Value="type WmiWebEventProvider = class&#xA;    inherit WebEventProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Management.WebEventProvider</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="4e838-101">Implementa un proveedor de eventos que asigna los eventos de supervisión del estado de ASP.NET a los eventos de Instrumental de administración Windows (WMI).</span><span class="sxs-lookup"><span data-stu-id="4e838-101">Implements an event provider that maps ASP.NET health-monitoring events to Windows Management Instrumentation (WMI) events.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4e838-102">Supervisión de estado ASP.NET permite al personal de producción y las operaciones administrar aplicaciones Web implementadas.</span><span class="sxs-lookup"><span data-stu-id="4e838-102">ASP.NET health monitoring allows production and operations staff to manage deployed Web applications.</span></span> <span data-ttu-id="4e838-103">El <xref:System.Web.Management> espacio de nombres contiene los tipos de evento de mantenimiento responsables de empaquetar datos de estado de la aplicación y los tipos de proveedor responsables de procesar estos datos.</span><span class="sxs-lookup"><span data-stu-id="4e838-103">The <xref:System.Web.Management> namespace contains the health-event types responsible for packaging application health-status data and the provider types responsible for processing this data.</span></span> <span data-ttu-id="4e838-104">También contiene los tipos compatibles que ayudan a administrar los eventos de estado.</span><span class="sxs-lookup"><span data-stu-id="4e838-104">It also contains supporting types that help during the management of health events.</span></span>  
  
 <span data-ttu-id="4e838-105">ASP.NET utiliza esta clase para los eventos de supervisión de estado se asignan a los eventos de WMI.</span><span class="sxs-lookup"><span data-stu-id="4e838-105">ASP.NET uses this class to map health-monitoring events to WMI events.</span></span> <span data-ttu-id="4e838-106">Para habilitar la entrega de eventos de supervisión de estado ASP.NET al subsistema WMI, debe configurar el <xref:System.Web.Management.WmiWebEventProvider> clase agregando la configuración adecuada en la `<healthMonitoring>` sección del archivo de configuración.</span><span class="sxs-lookup"><span data-stu-id="4e838-106">To enable the delivery of ASP.NET health-monitoring events to the WMI subsystem, you must configure the <xref:System.Web.Management.WmiWebEventProvider> class by adding the appropriate settings in the `<healthMonitoring>` section of the configuration file.</span></span>  
  
 <span data-ttu-id="4e838-107">La información contenida en el archivo Aspnet.mof describe los parámetros de los eventos WMI que se genera cuando los eventos de supervisión de estado ASP.NET se enrutan a la <xref:System.Web.Management.WmiWebEventProvider> clase y se asignan a los eventos de WMI.</span><span class="sxs-lookup"><span data-stu-id="4e838-107">The information contained in the Aspnet.mof file describes the parameters of the WMI events raised when ASP.NET health-monitoring events are routed to the <xref:System.Web.Management.WmiWebEventProvider> class and mapped into WMI events.</span></span> <span data-ttu-id="4e838-108">El archivo Aspnet.mof se encuentra en el directorio de compilación de .NET Framework, por ejemplo %windir%\Microsoft.NET\Framework\\*BuildNumber*.</span><span class="sxs-lookup"><span data-stu-id="4e838-108">The Aspnet.mof file is stored in the .NET Framework build directory, for example %windir%\Microsoft.NET\Framework\\*BuildNumber*.</span></span> <span data-ttu-id="4e838-109">Para obtener más información acerca de los informes de eventos de supervisión de estado como eventos de WMI, consulte [NIB: uso de WMI para eventos de supervisión de estado de entrega ASP.NET](https://msdn.microsoft.com/library/e57fea2f-610f-4432-9dd6-dd10a6c5bd10).</span><span class="sxs-lookup"><span data-stu-id="4e838-109">For more information about reporting health-monitoring events as WMI events, see [NIB: Using WMI to Deliver ASP.NET Health Monitoring Events](https://msdn.microsoft.com/library/e57fea2f-610f-4432-9dd6-dd10a6c5bd10).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4e838-110">En la mayoría de los casos podrá utilizar los tipos de supervisión de estado ASP.NET, tal como está implementado y controlará el sistema de supervisión de estado mediante la especificación de valores en la `<healthMonitoring>` sección de configuración.</span><span class="sxs-lookup"><span data-stu-id="4e838-110">In most cases you will be able to use the ASP.NET health-monitoring types as implemented, and you will control the health-monitoring system by specifying values in the `<healthMonitoring>` configuration section.</span></span> <span data-ttu-id="4e838-111">También se puede derivar de los tipos de supervisión de estado para crear sus propios eventos personalizados y proveedores.</span><span class="sxs-lookup"><span data-stu-id="4e838-111">You can also derive from the health-monitoring types to create your own custom events and providers.</span></span> <span data-ttu-id="4e838-112">Para obtener un ejemplo de creación de un proveedor personalizado, vea [Cómo: implementar el estado de supervisión personalizada proveedor ejemplo](https://msdn.microsoft.com/library/bbb1c959-e6e4-42b2-be62-49b7ca5ab72c).</span><span class="sxs-lookup"><span data-stu-id="4e838-112">For an example of creating a custom provider, see [How to: Implement the Health Monitoring Custom Provider Example](https://msdn.microsoft.com/library/bbb1c959-e6e4-42b2-be62-49b7ca5ab72c).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4e838-113">El ejemplo siguiente muestra cómo crear un consumidor de eventos WMI que se emite como resultado de los eventos de estado de la aplicación Web de supervisión de estado ASP.NET.</span><span class="sxs-lookup"><span data-stu-id="4e838-113">The following example shows how to create a consumer of WMI events issued by ASP.NET health monitoring as a result of Web-application health events.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4e838-114">La <xref:System.Web.Management.WmiWebEventProvider> clase y los tipos de evento de estado para supervisar ya están configurados de forma predeterminada.</span><span class="sxs-lookup"><span data-stu-id="4e838-114">The <xref:System.Web.Management.WmiWebEventProvider> class and the health event types to monitor are already configured by default.</span></span> <span data-ttu-id="4e838-115">Lo único que necesita hacer es definir la regla para todos los eventos de mantenimiento.</span><span class="sxs-lookup"><span data-stu-id="4e838-115">The only thing you need to do is to define the rule for all the health events.</span></span> <span data-ttu-id="4e838-116">Recuerde que los eventos de estado no se envían a la <xref:System.Web.Management.WmiWebEventProvider> proveedor de forma predeterminada.</span><span class="sxs-lookup"><span data-stu-id="4e838-116">Remember that the health events are not dispatched to the <xref:System.Web.Management.WmiWebEventProvider> provider by default.</span></span>  
  
 [!code-csharp[System.Web.Management.WmiWebEventProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WmiWebEventProvider/CS/WmiWebEventListener.cs#1)]
 [!code-vb[System.Web.Management.WmiWebEventProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WmiWebEventProvider/VB/WmiWebEventListener.vb#1)]  
  
 <span data-ttu-id="4e838-117">El ejemplo siguiente es un fragmento del archivo de configuración que se muestra un `<healthMonitoring>` sección de configuración que permite a ASP.NET usar el <xref:System.Web.Management.WmiWebEventProvider> proveedor para procesar todos los eventos de supervisión de estado.</span><span class="sxs-lookup"><span data-stu-id="4e838-117">The following example is a configuration file excerpt that shows a `<healthMonitoring>` configuration section that enables ASP.NET to use the <xref:System.Web.Management.WmiWebEventProvider> provider to process all health-monitoring events.</span></span>  
  
```  
<healthMonitoring>  
  <rules>  
    <add   
      name="Using Wmi"  
      eventName="All Events"   
      provider="WmiWebEventProvider"   
      profile="Critical"/>  
  </rules>  
</healthMonitoring>  
```  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/e003f224-70fe-4cd8-a71a-2dc81e2d7e4c"><span data-ttu-id="4e838-118">Información general de supervisión de estado de ASP.NET</span><span class="sxs-lookup"><span data-stu-id="4e838-118">ASP.NET Health Monitoring Overview</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/bbb1c959-e6e4-42b2-be62-49b7ca5ab72c"><span data-ttu-id="4e838-119">Supervisión de estado ASP.NET ejemplo de proveedor personalizado</span><span class="sxs-lookup"><span data-stu-id="4e838-119">ASP.NET Health-Monitoring Custom Provider Sample</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/ab894e83-7e2f-4af8-a116-b1bff8f815b2"><span data-ttu-id="4e838-120">Instalar y configurar los proveedores de ASP.NET</span><span class="sxs-lookup"><span data-stu-id="4e838-120">Installing and Configuring ASP.NET Providers</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WmiWebEventProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WmiWebEventProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WmiWebEventProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4e838-121">Inicializa una nueva instancia de la clase <see cref="T:System.Web.Management.WmiWebEventProvider" />.</span><span class="sxs-lookup"><span data-stu-id="4e838-121">Initializes a new instance of the <see cref="T:System.Web.Management.WmiWebEventProvider" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4e838-122">Este constructor se usa internamente por el sistema de supervisión de estado ASP.NET.</span><span class="sxs-lookup"><span data-stu-id="4e838-122">This constructor is used internally by the ASP.NET health-monitoring system.</span></span> <span data-ttu-id="4e838-123">No utiliza nunca para crear una instancia de la <xref:System.Web.Management.TraceWebEventProvider> clase, pero se puede llamar a este constructor cuando se implementa su propio tipo de proveedor que se hereda de esta clase.</span><span class="sxs-lookup"><span data-stu-id="4e838-123">You will never use it to create an instance of the <xref:System.Web.Management.TraceWebEventProvider> class, but you can call this constructor when you implement your own provider type that inherits from this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WmiWebEventProvider.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberSignature Language="F#" Value="override this.Flush : unit -&gt; unit" Usage="wmiWebEventProvider.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4e838-124">Quita todos los eventos del búfer del proveedor.</span><span class="sxs-lookup"><span data-stu-id="4e838-124">Removes all events from the provider's buffer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4e838-125">Cuando se llama a este método, todos los eventos del búfer del proveedor se quitan inmediatamente, independientemente de cuánto tiempo ha transcurrido desde la última escritura o cuántos eventos se encuentran en el búfer.</span><span class="sxs-lookup"><span data-stu-id="4e838-125">When this method is called, all the events in the provider's buffer are immediately removed, regardless of how much time has elapsed since the last write or how many events are in the buffer.</span></span> <span data-ttu-id="4e838-126">La hora de la última escritura se restablece a la hora del vaciado.</span><span class="sxs-lookup"><span data-stu-id="4e838-126">The time of the last write is reset to the time of the flushing action.</span></span> <span data-ttu-id="4e838-127">Al llamar a este método cuando no está habilitado el mecanismo de almacenamiento en búfer no tiene ningún efecto.</span><span class="sxs-lookup"><span data-stu-id="4e838-127">Calling this method when the buffering mechanism is not enabled has no effect.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize (string name, System.Collections.Specialized.NameValueCollection config);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize(string name, class System.Collections.Specialized.NameValueCollection config) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WmiWebEventProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize (name As String, config As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize(System::String ^ name, System::Collections::Specialized::NameValueCollection ^ config);" />
      <MemberSignature Language="F#" Value="override this.Initialize : string * System.Collections.Specialized.NameValueCollection -&gt; unit" Usage="wmiWebEventProvider.Initialize (name, config)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="config" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="4e838-128">El nombre utilizado en el archivo de configuración para identificar a este proveedor.</span><span class="sxs-lookup"><span data-stu-id="4e838-128">The name used in the configuration file to identify this provider.</span></span></param>
        <param name="config"><span data-ttu-id="4e838-129">Objeto <see cref="T:System.Collections.Specialized.NameValueCollection" /> que especifica los atributos asignados a este proveedor en el archivo de configuración.</span><span class="sxs-lookup"><span data-stu-id="4e838-129">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> object that specifies the attributes assigned for this provider in the configuration file.</span></span></param>
        <summary><span data-ttu-id="4e838-130">Establece los valores iniciales para este objeto.</span><span class="sxs-lookup"><span data-stu-id="4e838-130">Sets the initial values for this object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4e838-131">ASP.NET llama el <xref:System.Web.Management.WmiWebEventProvider.Initialize%2A> método después de llamar a la <xref:System.Web.Management.WmiWebEventProvider.%23ctor%2A> constructor.</span><span class="sxs-lookup"><span data-stu-id="4e838-131">ASP.NET calls the <xref:System.Web.Management.WmiWebEventProvider.Initialize%2A> method after calling the <xref:System.Web.Management.WmiWebEventProvider.%23ctor%2A> constructor.</span></span> <span data-ttu-id="4e838-132">Este método se llama para inicializar el <xref:System.Web.Management.WmiWebEventProvider> clase con la configuración y el nombre especificado en el archivo de configuración.</span><span class="sxs-lookup"><span data-stu-id="4e838-132">This method is called to initialize the <xref:System.Web.Management.WmiWebEventProvider> class with the configuration settings and name specified in the configuration file.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessEvent">
      <MemberSignature Language="C#" Value="public override void ProcessEvent (System.Web.Management.WebBaseEvent eventRaised);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ProcessEvent(class System.Web.Management.WebBaseEvent eventRaised) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WmiWebEventProvider.ProcessEvent(System.Web.Management.WebBaseEvent)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ProcessEvent (eventRaised As WebBaseEvent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ProcessEvent(System::Web::Management::WebBaseEvent ^ eventRaised);" />
      <MemberSignature Language="F#" Value="override this.ProcessEvent : System.Web.Management.WebBaseEvent -&gt; unit" Usage="wmiWebEventProvider.ProcessEvent eventRaised" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventRaised" Type="System.Web.Management.WebBaseEvent" />
      </Parameters>
      <Docs>
        <param name="eventRaised"><span data-ttu-id="4e838-133">Objeto <see cref="T:System.Web.Management.WebBaseEvent" /> que se va a procesar.</span><span class="sxs-lookup"><span data-stu-id="4e838-133">The <see cref="T:System.Web.Management.WebBaseEvent" /> object to process.</span></span></param>
        <summary><span data-ttu-id="4e838-134">Procesa el evento pasado al proveedor.</span><span class="sxs-lookup"><span data-stu-id="4e838-134">Processes the event passed to the provider.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4e838-135">Este es el método que llama la supervisión de estado ASP.NET para iniciar el procesamiento del evento.</span><span class="sxs-lookup"><span data-stu-id="4e838-135">This is the method that ASP.NET health monitoring calls to start the processing of the event.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="4e838-136">No se ha podido provocar el evento.</span><span class="sxs-lookup"><span data-stu-id="4e838-136">The event could not be raised.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Shutdown">
      <MemberSignature Language="C#" Value="public override void Shutdown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Shutdown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WmiWebEventProvider.Shutdown" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Shutdown ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Shutdown();" />
      <MemberSignature Language="F#" Value="override this.Shutdown : unit -&gt; unit" Usage="wmiWebEventProvider.Shutdown " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4e838-137">Realiza tareas asociadas al cierre del proveedor.</span><span class="sxs-lookup"><span data-stu-id="4e838-137">Performs tasks associated with shutting down the provider.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4e838-138">ASP.NET llama el <xref:System.Web.Management.EventLogWebEventProvider.Shutdown%2A> método cuando finaliza el dominio de aplicación que hospeda la aplicación Web.</span><span class="sxs-lookup"><span data-stu-id="4e838-138">ASP.NET calls the <xref:System.Web.Management.EventLogWebEventProvider.Shutdown%2A> method when the application domain that hosts the Web application terminates.</span></span> <span data-ttu-id="4e838-139">Se llama al método para llevar a cabo las tareas que permitirá que la aplicación al finalizar correctamente la conversación.</span><span class="sxs-lookup"><span data-stu-id="4e838-139">The method is called to perform tasks that will allow the application to end gracefully.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
<Type Name="IListContract&lt;T&gt;" FullName="System.AddIn.Contract.IListContract&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b93185b7c929c6518a44c9d831307f70820de03b" /><Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="11/20/2018" /><Meta Name="ms.locfileid" Value="52251966" /></Metadata><TypeSignature Language="C#" Value="public interface IListContract&lt;T&gt; : System.AddIn.Contract.IContract" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IListContract`1&lt;T&gt; implements class System.AddIn.Contract.IContract" />
  <TypeSignature Language="DocId" Value="T:System.AddIn.Contract.IListContract`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IListContract(Of T)&#xA;Implements IContract" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public interface class IListContract : System::AddIn::Contract::IContract" />
  <TypeSignature Language="F#" Value="type IListContract&lt;'T&gt; = interface&#xA;    interface IContract" />
  <AssemblyInfo>
    <AssemblyName>System.AddIn.Contract</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>System.AddIn.Contract.IContract</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T"><span data-ttu-id="58557-101">Tipo de contrato de los objetos de la lista.</span><span class="sxs-lookup"><span data-stu-id="58557-101">The contract type of the objects in the list.</span></span></typeparam>
    <summary><span data-ttu-id="58557-102">Representa una lista genérica de tipos que son definidos por un contrato y se utilizan para pasar colecciones de ese tipo de contrato entre un host y un complemento.</span><span class="sxs-lookup"><span data-stu-id="58557-102">Represents a generic list of types that are defined by a contract and are used to pass collections of that contract type between a host and an add-in.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58557-103">El <xref:System.AddIn.Pipeline.CollectionAdapters> clase utiliza un <xref:System.AddIn.Contract.IListContract%601> interfaz para pasar colecciones, en ambas direcciones entre el host y el complemento.</span><span class="sxs-lookup"><span data-stu-id="58557-103">The <xref:System.AddIn.Pipeline.CollectionAdapters> class uses an <xref:System.AddIn.Contract.IListContract%601> interface to pass collections, in both directions, between the host and the add-in.</span></span> <span data-ttu-id="58557-104">Se recomienda que utilice el <xref:System.AddIn.Pipeline.CollectionAdapters> clase en lugar de usar esta clase directamente en el código.</span><span class="sxs-lookup"><span data-stu-id="58557-104">It is recommended that you use the <xref:System.AddIn.Pipeline.CollectionAdapters> class instead of using this class directly in your code.</span></span> <span data-ttu-id="58557-105">Para obtener un ejemplo, vea [Tutorial: pasar colecciones entre Hosts y complementos](https://msdn.microsoft.com/library/b532c604-548e-4fab-b11c-377257dd0ee5).</span><span class="sxs-lookup"><span data-stu-id="58557-105">For an example, see [Walkthrough: Passing Collections Between Hosts and Add-Ins](https://msdn.microsoft.com/library/b532c604-548e-4fab-b11c-377257dd0ee5).</span></span>  
  
 <span data-ttu-id="58557-106">Esta clase puede utilizarse para pasar objetos por referencia entre dominios de aplicación porque no se serializan los objetos.</span><span class="sxs-lookup"><span data-stu-id="58557-106">This class can be used to pass objects by reference between application domains because the objects are not serialized.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IListContract`1.Add(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (item As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(T item);" />
      <MemberSignature Language="F#" Value="abstract member Add : 'T -&gt; unit" Usage="iListContract.Add item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="58557-107">Objeto que se va a agregar.</span><span class="sxs-lookup"><span data-stu-id="58557-107">The object to add.</span></span></param>
        <summary><span data-ttu-id="58557-108">Agrega un objeto a una colección <see cref="T:System.AddIn.Contract.IListContract`1" />.</span><span class="sxs-lookup"><span data-stu-id="58557-108">Adds an object to an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58557-109">El `item` parámetro debe ser de un tipo definido por el contrato.</span><span class="sxs-lookup"><span data-stu-id="58557-109">The `item` parameter must be of a type that is defined by the contract.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IListContract`1.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit" Usage="iListContract.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="58557-110">Quita todos los objetos de una colección <see cref="T:System.AddIn.Contract.IListContract`1" />.</span><span class="sxs-lookup"><span data-stu-id="58557-110">Removes all objects from an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IListContract`1.Contains(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (item As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(T item);" />
      <MemberSignature Language="F#" Value="abstract member Contains : 'T -&gt; bool" Usage="iListContract.Contains item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="58557-111">Objeto que se va a buscar en la colección.</span><span class="sxs-lookup"><span data-stu-id="58557-111">The object to look for in the collection.</span></span></param>
        <summary><span data-ttu-id="58557-112">Determina si un elemento concreto está en una colección <see cref="T:System.AddIn.Contract.IListContract`1" />.</span><span class="sxs-lookup"><span data-stu-id="58557-112">Determines whether a specific item is in an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection.</span></span></summary>
        <returns><span data-ttu-id="58557-113"><see langword="true" /> si <paramref name="item" /> está en la colección; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="58557-113"><see langword="true" /> if <paramref name="item" /> is in the collection; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCount">
      <MemberSignature Language="C#" Value="public int GetCount ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetCount() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IListContract`1.GetCount" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCount () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetCount();" />
      <MemberSignature Language="F#" Value="abstract member GetCount : unit -&gt; int" Usage="iListContract.GetCount " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="58557-114">Obtiene el número de elementos de una colección <see cref="T:System.AddIn.Contract.IListContract`1" />.</span><span class="sxs-lookup"><span data-stu-id="58557-114">Gets the number of items in an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection.</span></span></summary>
        <returns><span data-ttu-id="58557-115">Número de elementos de la colección.</span><span class="sxs-lookup"><span data-stu-id="58557-115">The number of items in the collection.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumeratorContract">
      <MemberSignature Language="C#" Value="public System.AddIn.Contract.IEnumeratorContract&lt;T&gt; GetEnumeratorContract ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.AddIn.Contract.IEnumeratorContract`1&lt;!T&gt; GetEnumeratorContract() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IListContract`1.GetEnumeratorContract" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumeratorContract () As IEnumeratorContract(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::AddIn::Contract::IEnumeratorContract&lt;T&gt; ^ GetEnumeratorContract();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumeratorContract : unit -&gt; System.AddIn.Contract.IEnumeratorContract&lt;'T&gt;" Usage="iListContract.GetEnumeratorContract " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.IEnumeratorContract&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="58557-116">Devuelve un enumerador que recorre en iteración una colección <see cref="T:System.AddIn.Contract.IListContract`1" />.</span><span class="sxs-lookup"><span data-stu-id="58557-116">Returns an enumerator that iterates through an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection.</span></span></summary>
        <returns><span data-ttu-id="58557-117">Enumerador <see cref="T:System.AddIn.Contract.IEnumeratorContract`1" /> que va a recorrer en iteración la colección.</span><span class="sxs-lookup"><span data-stu-id="58557-117">An <see cref="T:System.AddIn.Contract.IEnumeratorContract`1" /> enumerator to iterate through the collection.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIsReadOnly">
      <MemberSignature Language="C#" Value="public bool GetIsReadOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetIsReadOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IListContract`1.GetIsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Function GetIsReadOnly () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetIsReadOnly();" />
      <MemberSignature Language="F#" Value="abstract member GetIsReadOnly : unit -&gt; bool" Usage="iListContract.GetIsReadOnly " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="58557-118">Determina si una colección <see cref="T:System.AddIn.Contract.IListContract`1" /> es de sólo lectura.</span><span class="sxs-lookup"><span data-stu-id="58557-118">Determines whether an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection is read-only.</span></span></summary>
        <returns><span data-ttu-id="58557-119"><see langword="true" /> si la colección es de solo lectura; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="58557-119"><see langword="true" /> if the collection is read-only; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItem">
      <MemberSignature Language="C#" Value="public T GetItem (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !T GetItem(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IListContract`1.GetItem(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItem (index As Integer) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; T GetItem(int index);" />
      <MemberSignature Language="F#" Value="abstract member GetItem : int -&gt; 'T" Usage="iListContract.GetItem index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="58557-120">Índice de base cero del elemento que se va a obtener.</span><span class="sxs-lookup"><span data-stu-id="58557-120">The zero-based index of the item to get.</span></span></param>
        <summary><span data-ttu-id="58557-121">Devuelve el elemento en el índice especificado de una colección <see cref="T:System.AddIn.Contract.IListContract`1" />.</span><span class="sxs-lookup"><span data-stu-id="58557-121">Returns the item at the specified index of an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection.</span></span></summary>
        <returns><span data-ttu-id="58557-122">Elemento que se encuentra en el índice especificado.</span><span class="sxs-lookup"><span data-stu-id="58557-122">The item at the specified index.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58557-123">El <xref:System.AddIn.Contract.IListContract%601.GetItem%2A> método no quita el elemento en el índice especificado.</span><span class="sxs-lookup"><span data-stu-id="58557-123">The <xref:System.AddIn.Contract.IListContract%601.GetItem%2A> method does not remove the item at the specified index.</span></span> <span data-ttu-id="58557-124">Para quitar un elemento de la <xref:System.AddIn.Contract.IListContract%601> recopilación, uso el <xref:System.AddIn.Contract.IListContract%601.RemoveAt%2A> método.</span><span class="sxs-lookup"><span data-stu-id="58557-124">To remove an item from the <xref:System.AddIn.Contract.IListContract%601> collection, use the <xref:System.AddIn.Contract.IListContract%601.RemoveAt%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="58557-125"><paramref name="index" /> es menor que cero.</span><span class="sxs-lookup"><span data-stu-id="58557-125"><paramref name="index" /> is less than zero.</span></span>  
  
<span data-ttu-id="58557-126">O bien</span><span class="sxs-lookup"><span data-stu-id="58557-126">-or-</span></span> 
 <span data-ttu-id="58557-127"><paramref name="index" /> es igual o mayor que el valor devuelto de <see cref="M:System.AddIn.Contract.IListContract`1.GetCount" />.</span><span class="sxs-lookup"><span data-stu-id="58557-127"><paramref name="index" /> is equal to or greater than the return value of <see cref="M:System.AddIn.Contract.IListContract`1.GetCount" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IListContract`1.IndexOf(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (item As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(T item);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : 'T -&gt; int" Usage="iListContract.IndexOf item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="58557-128">Elemento de la colección.</span><span class="sxs-lookup"><span data-stu-id="58557-128">An item in the collection.</span></span></param>
        <summary><span data-ttu-id="58557-129">Devuelve el índice de un elemento concreto en una colección <see cref="T:System.AddIn.Contract.Collections.IListContract`1" />.</span><span class="sxs-lookup"><span data-stu-id="58557-129">Returns the index of a specific item in an <see cref="T:System.AddIn.Contract.Collections.IListContract`1" /> collection.</span></span></summary>
        <returns><span data-ttu-id="58557-130">Índice del elemento especificado.</span><span class="sxs-lookup"><span data-stu-id="58557-130">The index of the specified item.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58557-131">Si hay varios objetos del mismo tipo en la colección, este método identifica el índice del elemento que es la primera aparición del tipo especificado en la colección.</span><span class="sxs-lookup"><span data-stu-id="58557-131">If there are several objects of the same type in the collection, this method identifies the index of the item that is the first occurrence of the specified type in the collection.</span></span>  
  
 <span data-ttu-id="58557-132">El <xref:System.AddIn.Contract.IListContract%601.GetItem%2A> método no quita el elemento en el índice especificado.</span><span class="sxs-lookup"><span data-stu-id="58557-132">The <xref:System.AddIn.Contract.IListContract%601.GetItem%2A> method does not remove the item at the specified index.</span></span> <span data-ttu-id="58557-133">Para quitar un elemento de la <xref:System.AddIn.Contract.IListContract%601> recopilación, uso el <xref:System.AddIn.Contract.IListContract%601.RemoveAt%2A> método.</span><span class="sxs-lookup"><span data-stu-id="58557-133">To remove an item from the <xref:System.AddIn.Contract.IListContract%601> collection, use the <xref:System.AddIn.Contract.IListContract%601.RemoveAt%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="58557-134"><paramref name="index" /> es menor que cero.</span><span class="sxs-lookup"><span data-stu-id="58557-134"><paramref name="index" /> is less than zero.</span></span>  
  
<span data-ttu-id="58557-135">O bien</span><span class="sxs-lookup"><span data-stu-id="58557-135">-or-</span></span> 
 <span data-ttu-id="58557-136"><paramref name="index" /> es igual o mayor que el valor devuelto del método <see cref="M:System.AddIn.Contract.IListContract`1.GetCount" />.</span><span class="sxs-lookup"><span data-stu-id="58557-136"><paramref name="index" /> is equal to or greater than the return value of the <see cref="M:System.AddIn.Contract.IListContract`1.GetCount" /> method.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Insert(int32 index, !T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IListContract`1.Insert(System.Int32,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, item As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(int index, T item);" />
      <MemberSignature Language="F#" Value="abstract member Insert : int * 'T -&gt; unit" Usage="iListContract.Insert (index, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="58557-137">Índice de base cero en el que se va a insertar <paramref name="item" />.</span><span class="sxs-lookup"><span data-stu-id="58557-137">The zero-based index at which to insert <paramref name="item" />.</span></span></param>
        <param name="item"><span data-ttu-id="58557-138">Objeto <see cref="T:System.AddIn.Contract.IContract" /> que se va a insertar en la colección <see cref="T:System.AddIn.Contract.IListContract`1" />.</span><span class="sxs-lookup"><span data-stu-id="58557-138">The <see cref="T:System.AddIn.Contract.IContract" /> object to insert in the <see cref="T:System.AddIn.Contract.IListContract`1" /> collection.</span></span></param>
        <summary><span data-ttu-id="58557-139">Inserta un elemento en el índice especificado de una colección <see cref="T:System.AddIn.Contract.IListContract`1" />.</span><span class="sxs-lookup"><span data-stu-id="58557-139">Inserts an item at the specified index in an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58557-140">Después de llamar a la <xref:System.AddIn.Contract.IListContract%601.Insert%2A> mover de método, los elementos que siguen al punto de inserción alojar el nuevo elemento.</span><span class="sxs-lookup"><span data-stu-id="58557-140">After you call the <xref:System.AddIn.Contract.IListContract%601.Insert%2A> method, the items that follow the insertion point move to accommodate the new item.</span></span> <span data-ttu-id="58557-141">También se actualizan los índices de los elementos que se han movido.</span><span class="sxs-lookup"><span data-stu-id="58557-141">The indexes of the items that are moved are also updated.</span></span> <span data-ttu-id="58557-142">Para reemplazar un elemento en el índice especificado, use el <xref:System.AddIn.Contract.IListContract%601.SetItem%2A> método.</span><span class="sxs-lookup"><span data-stu-id="58557-142">To replace an item at a specified index, use the <xref:System.AddIn.Contract.IListContract%601.SetItem%2A> method.</span></span>  
  
 <span data-ttu-id="58557-143">Para determinar si un <xref:System.AddIn.Contract.IListContract%601> colección es de solo lectura, llame a la <xref:System.AddIn.Contract.IListContract%601.GetIsReadOnly%2A> método.</span><span class="sxs-lookup"><span data-stu-id="58557-143">To determine whether an <xref:System.AddIn.Contract.IListContract%601> collection is read-only, call the <xref:System.AddIn.Contract.IListContract%601.GetIsReadOnly%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="58557-144"><paramref name="index" /> es menor que cero.</span><span class="sxs-lookup"><span data-stu-id="58557-144"><paramref name="index" /> is less than zero.</span></span>  
  
<span data-ttu-id="58557-145">O bien</span><span class="sxs-lookup"><span data-stu-id="58557-145">-or-</span></span> 
 <span data-ttu-id="58557-146"><paramref name="index" /> es igual o mayor que el valor devuelto de <see cref="M:System.AddIn.Contract.IListContract`1.GetCount" />.</span><span class="sxs-lookup"><span data-stu-id="58557-146"><paramref name="index" /> is equal to or greater than the return value of <see cref="M:System.AddIn.Contract.IListContract`1.GetCount" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="58557-147">La colección <see cref="T:System.AddIn.Contract.IListContract`1" /> es de sólo lectura.</span><span class="sxs-lookup"><span data-stu-id="58557-147">The <see cref="T:System.AddIn.Contract.IListContract`1" /> collection is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IListContract`1.Remove(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (item As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Remove(T item);" />
      <MemberSignature Language="F#" Value="abstract member Remove : 'T -&gt; bool" Usage="iListContract.Remove item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="58557-148">Elemento que se va a quitar de la colección.</span><span class="sxs-lookup"><span data-stu-id="58557-148">The item to remove from the collection.</span></span></param>
        <summary><span data-ttu-id="58557-149">Quita un elemento de una colección <see cref="T:System.AddIn.Contract.IListContract`1" /> de un tipo especificado.</span><span class="sxs-lookup"><span data-stu-id="58557-149">Removes an item from an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection of a specified type.</span></span></summary>
        <returns><span data-ttu-id="58557-150">Es <see langword="true" /> si se quita un elemento; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="58557-150"><see langword="true" /> if an item is removed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58557-151">Debe repetir este método para cada objeto de un tipo determinado en la colección.</span><span class="sxs-lookup"><span data-stu-id="58557-151">You must repeat this method for each object of a particular type in the collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IListContract`1.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit" Usage="iListContract.RemoveAt index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="58557-152">El índice del elemento que se va a quitar.</span><span class="sxs-lookup"><span data-stu-id="58557-152">The index of the item to remove.</span></span></param>
        <summary><span data-ttu-id="58557-153">Quita el elemento situado en el índice especificado de una colección <see cref="T:System.AddIn.Contract.IListContract`1" />.</span><span class="sxs-lookup"><span data-stu-id="58557-153">Removes the item at the specified index in an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58557-154">Después de llamar a <xref:System.AddIn.Contract.IListContract%601.RemoveAt%2A>, los elementos que siguen al elemento quitado se mueve ocupar el hueco.</span><span class="sxs-lookup"><span data-stu-id="58557-154">After you call <xref:System.AddIn.Contract.IListContract%601.RemoveAt%2A>, the items that follow the removed item move to occupy the vacated spot.</span></span> <span data-ttu-id="58557-155">También se actualizan los índices de los elementos que se han movido.</span><span class="sxs-lookup"><span data-stu-id="58557-155">The indexes of the items that are moved are also updated.</span></span>  
  
 <span data-ttu-id="58557-156">Para determinar si un <xref:System.AddIn.Contract.IListContract%601> colección es de solo lectura, llame a la <xref:System.AddIn.Contract.IListContract%601.GetIsReadOnly%2A> método.</span><span class="sxs-lookup"><span data-stu-id="58557-156">To determine whether an <xref:System.AddIn.Contract.IListContract%601> collection is read-only, call the <xref:System.AddIn.Contract.IListContract%601.GetIsReadOnly%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="58557-157"><paramref name="index" /> es menor que cero.</span><span class="sxs-lookup"><span data-stu-id="58557-157"><paramref name="index" /> is less than zero.</span></span>  
  
<span data-ttu-id="58557-158">O bien</span><span class="sxs-lookup"><span data-stu-id="58557-158">-or-</span></span> 
 <span data-ttu-id="58557-159"><paramref name="index" /> es igual o mayor que el valor devuelto del método <see cref="M:System.AddIn.Contract.IListContract`1.GetCount" />.</span><span class="sxs-lookup"><span data-stu-id="58557-159"><paramref name="index" /> is equal to or greater than the return value of the <see cref="M:System.AddIn.Contract.IListContract`1.GetCount" /> method.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="58557-160">La colección <see cref="T:System.AddIn.Contract.IListContract`1" /> es de sólo lectura.</span><span class="sxs-lookup"><span data-stu-id="58557-160">The <see cref="T:System.AddIn.Contract.IListContract`1" /> collection is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetItem">
      <MemberSignature Language="C#" Value="public void SetItem (int index, T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetItem(int32 index, !T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IListContract`1.SetItem(System.Int32,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetItem (index As Integer, item As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetItem(int index, T item);" />
      <MemberSignature Language="F#" Value="abstract member SetItem : int * 'T -&gt; unit" Usage="iListContract.SetItem (index, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="58557-161">Índice de base cero donde se establece el elemento.</span><span class="sxs-lookup"><span data-stu-id="58557-161">The zero-based index at which to set the item.</span></span></param>
        <param name="item"><span data-ttu-id="58557-162">Elemento que se va a establecer en el índice especificado.</span><span class="sxs-lookup"><span data-stu-id="58557-162">The item to set at the specified index.</span></span></param>
        <summary><span data-ttu-id="58557-163">Establece el elemento en el índice especificado de una colección <see cref="T:System.AddIn.Contract.IListContract`1" />.</span><span class="sxs-lookup"><span data-stu-id="58557-163">Sets the item at the specified index in an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58557-164">El <xref:System.AddIn.Contract.IListContract%601.SetItem%2A> método establece el elemento en el índice especificado.</span><span class="sxs-lookup"><span data-stu-id="58557-164">The <xref:System.AddIn.Contract.IListContract%601.SetItem%2A> method sets the item at the specified index.</span></span> <span data-ttu-id="58557-165">Para agregar un elemento a la <xref:System.AddIn.Contract.IListContract%601> recopilación, uso el <xref:System.AddIn.Contract.IListContract%601.Insert%2A> método.</span><span class="sxs-lookup"><span data-stu-id="58557-165">To add an item to the <xref:System.AddIn.Contract.IListContract%601> collection, use the <xref:System.AddIn.Contract.IListContract%601.Insert%2A> method.</span></span>  
  
 <span data-ttu-id="58557-166">Para determinar si un <xref:System.AddIn.Contract.IListContract%601> colección es de solo lectura, llame a la <xref:System.AddIn.Contract.IListContract%601.GetIsReadOnly%2A> método.</span><span class="sxs-lookup"><span data-stu-id="58557-166">To determine whether an <xref:System.AddIn.Contract.IListContract%601> collection is read-only, call the <xref:System.AddIn.Contract.IListContract%601.GetIsReadOnly%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="58557-167"><paramref name="index" /> es menor que cero.</span><span class="sxs-lookup"><span data-stu-id="58557-167"><paramref name="index" /> is less than zero.</span></span>  
  
<span data-ttu-id="58557-168">O bien</span><span class="sxs-lookup"><span data-stu-id="58557-168">-or-</span></span> 
 <span data-ttu-id="58557-169"><paramref name="index" /> es igual o mayor que el valor devuelto del método <see cref="M:System.AddIn.Contract.IListContract`1.GetCount" />.</span><span class="sxs-lookup"><span data-stu-id="58557-169"><paramref name="index" /> is equal to or greater than the return value of the <see cref="M:System.AddIn.Contract.IListContract`1.GetCount" /> method.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="58557-170">La colección <see cref="T:System.AddIn.Contract.IListContract`1" /> es de sólo lectura.</span><span class="sxs-lookup"><span data-stu-id="58557-170">The <see cref="T:System.AddIn.Contract.IListContract`1" /> collection is read-only.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
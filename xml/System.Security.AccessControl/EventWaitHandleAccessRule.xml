<Type Name="EventWaitHandleAccessRule" FullName="System.Security.AccessControl.EventWaitHandleAccessRule">
  <Metadata><Meta Name="ms.openlocfilehash" Value="68e20d57a73a7a237932bce0695c5b3f87974ecb" /><Meta Name="ms.sourcegitcommit" Value="0d6aa6694f157a08fe52cd25b4d9d3dcf913e812" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="10/12/2018" /><Meta Name="ms.locfileid" Value="49145608" /></Metadata><TypeSignature Language="C#" Value="public sealed class EventWaitHandleAccessRule : System.Security.AccessControl.AccessRule" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EventWaitHandleAccessRule extends System.Security.AccessControl.AccessRule" />
  <TypeSignature Language="DocId" Value="T:System.Security.AccessControl.EventWaitHandleAccessRule" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EventWaitHandleAccessRule&#xA;Inherits AccessRule" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventWaitHandleAccessRule sealed : System::Security::AccessControl::AccessRule" />
  <TypeSignature Language="F#" Value="type EventWaitHandleAccessRule = class&#xA;    inherit AccessRule" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.AccessControl</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.AccessControl.AccessRule</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1">
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="45982-101">Representa un conjunto de derechos de acceso concedidos o denegados para un usuario o grupo.</span><span class="sxs-lookup"><span data-stu-id="45982-101">Represents a set of access rights allowed or denied for a user or group.</span></span> <span data-ttu-id="45982-102">Esta clase no puede heredarse.</span><span class="sxs-lookup"><span data-stu-id="45982-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45982-103">La <xref:System.Security.AccessControl.EventWaitHandleAccessRule> clase es un conjunto de clases de .NET Framework proporciona para administrar la seguridad de control de acceso de Windows en los eventos del sistema con nombre.</span><span class="sxs-lookup"><span data-stu-id="45982-103">The <xref:System.Security.AccessControl.EventWaitHandleAccessRule> class is one of a set of classes that the .NET Framework provides for managing Windows access control security on named system events.</span></span> <span data-ttu-id="45982-104">Para obtener información general de estas clases y su relación con las estructuras de control de acceso de Windows subyacentes, vea <xref:System.Security.AccessControl.EventWaitHandleSecurity>.</span><span class="sxs-lookup"><span data-stu-id="45982-104">For an overview of these classes, and their relationship to the underlying Windows access control structures, see <xref:System.Security.AccessControl.EventWaitHandleSecurity>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="45982-105">Seguridad de control de acceso de Windows solo es significativa para los eventos del sistema con nombre.</span><span class="sxs-lookup"><span data-stu-id="45982-105">Windows access control security is meaningful only for named system events.</span></span> <span data-ttu-id="45982-106">Si un <xref:System.Threading.EventWaitHandle> objeto representa un evento local, el control de acceso es irrelevante.</span><span class="sxs-lookup"><span data-stu-id="45982-106">If an <xref:System.Threading.EventWaitHandle> object represents a local event, access control is irrelevant.</span></span>  
  
 <span data-ttu-id="45982-107">Para obtener una lista de las reglas aplicadas actualmente a un evento con nombre, use la <xref:System.Threading.EventWaitHandle.GetAccessControl%2A?displayProperty=nameWithType> método para obtener un <xref:System.Security.AccessControl.EventWaitHandleSecurity> objeto y, a continuación, usar su <xref:System.Security.AccessControl.CommonObjectSecurity.GetAccessRules%2A> método para obtener una colección de <xref:System.Security.AccessControl.EventWaitHandleAccessRule> objetos.</span><span class="sxs-lookup"><span data-stu-id="45982-107">To get a list of the rules currently applied to a named event, use the <xref:System.Threading.EventWaitHandle.GetAccessControl%2A?displayProperty=nameWithType> method to get an <xref:System.Security.AccessControl.EventWaitHandleSecurity> object, and then use its <xref:System.Security.AccessControl.CommonObjectSecurity.GetAccessRules%2A> method to obtain a collection of <xref:System.Security.AccessControl.EventWaitHandleAccessRule> objects.</span></span>  
  
 <span data-ttu-id="45982-108"><xref:System.Security.AccessControl.EventWaitHandleAccessRule> los objetos no se asignan uno a uno con entradas de control de acceso en la lista de control de acceso discrecional (DACL) subyacente.</span><span class="sxs-lookup"><span data-stu-id="45982-108"><xref:System.Security.AccessControl.EventWaitHandleAccessRule> objects do not map one-to-one with access control entries in the underlying discretionary access control list (DACL).</span></span> <span data-ttu-id="45982-109">Cuando llegue el conjunto de todas las reglas de acceso para un evento, el conjunto contiene el número mínimo de reglas actualmente necesarias para expresar todas las entradas de control de acceso.</span><span class="sxs-lookup"><span data-stu-id="45982-109">When you get the set of all access rules for an event, the set contains the minimum number of rules currently required to express all the access control entries.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="45982-110">Las entradas de control de acceso subyacente cambian al aplicar y quitar las reglas.</span><span class="sxs-lookup"><span data-stu-id="45982-110">The underlying access control entries change as you apply and remove rules.</span></span> <span data-ttu-id="45982-111">La información de las reglas se combina si es posible, para mantener el menor número de entradas de control de acceso.</span><span class="sxs-lookup"><span data-stu-id="45982-111">The information in rules is merged if possible, to maintain the smallest number of access control entries.</span></span> <span data-ttu-id="45982-112">Por lo tanto, al obtener la lista de reglas actual, no podría ser exactamente igual que la lista de todas las reglas que ha agregado.</span><span class="sxs-lookup"><span data-stu-id="45982-112">Thus, when you get the current list of rules, it might not look exactly like the list of all the rules you have added.</span></span>  
  
 <span data-ttu-id="45982-113">Use <xref:System.Security.AccessControl.EventWaitHandleAccessRule> objetos para especificar los derechos de acceso para permitir o denegar a un usuario o grupo.</span><span class="sxs-lookup"><span data-stu-id="45982-113">Use <xref:System.Security.AccessControl.EventWaitHandleAccessRule> objects to specify the access rights to allow or deny to a user or group.</span></span> <span data-ttu-id="45982-114">Un <xref:System.Security.AccessControl.EventWaitHandleAccessRule> objeto siempre representa puede tener acceso o denegado el acceso, nunca ambas.</span><span class="sxs-lookup"><span data-stu-id="45982-114">An <xref:System.Security.AccessControl.EventWaitHandleAccessRule> object always represents either allowed access or denied access, never both.</span></span>  
  
 <span data-ttu-id="45982-115">Para aplicar una regla a un evento del sistema con nombre, use la <xref:System.Threading.EventWaitHandle.GetAccessControl%2A?displayProperty=nameWithType> método para obtener el <xref:System.Security.AccessControl.EventWaitHandleSecurity> objeto.</span><span class="sxs-lookup"><span data-stu-id="45982-115">To apply a rule to a named system event, use the <xref:System.Threading.EventWaitHandle.GetAccessControl%2A?displayProperty=nameWithType> method to get the <xref:System.Security.AccessControl.EventWaitHandleSecurity> object.</span></span> <span data-ttu-id="45982-116">Modificar el <xref:System.Security.AccessControl.EventWaitHandleSecurity> objeto mediante el uso de sus métodos para agregar la regla y, a continuación, utilice el <xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=nameWithType> método volver a adjuntar el objeto de seguridad.</span><span class="sxs-lookup"><span data-stu-id="45982-116">Modify the <xref:System.Security.AccessControl.EventWaitHandleSecurity> object by using its methods to add the rule, and then use the <xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=nameWithType> method to reattach the security object.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="45982-117">Cambios en un <xref:System.Security.AccessControl.EventWaitHandleSecurity> objeto no afectan a los niveles de acceso del evento con nombre hasta que llame a la <xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=nameWithType> método para asignar el objeto de seguridad modificada para el evento con nombre.</span><span class="sxs-lookup"><span data-stu-id="45982-117">Changes you make to an <xref:System.Security.AccessControl.EventWaitHandleSecurity> object do not affect the access levels of the named event until you call the <xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=nameWithType> method to assign the altered security object to the named event.</span></span>  
  
 <span data-ttu-id="45982-118"><xref:System.Security.AccessControl.EventWaitHandleAccessRule> los objetos son inmutables.</span><span class="sxs-lookup"><span data-stu-id="45982-118"><xref:System.Security.AccessControl.EventWaitHandleAccessRule> objects are immutable.</span></span> <span data-ttu-id="45982-119">Seguridad de un evento se modifica utilizando los métodos de la <xref:System.Security.AccessControl.EventWaitHandleSecurity> clase para agregar o quitar reglas; al hacerlo, se modifican las entradas de control de acceso subyacente.</span><span class="sxs-lookup"><span data-stu-id="45982-119">Security for an event is modified using the methods of the <xref:System.Security.AccessControl.EventWaitHandleSecurity> class to add or remove rules; as you do this, the underlying access control entries are modified.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="45982-120">Seguridad en objetos de sincronización no es compatible con Windows 98 o Windows Millennium Edition.</span><span class="sxs-lookup"><span data-stu-id="45982-120">Security on synchronization objects is not supported for Windows 98 or Windows Millennium Edition.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="45982-121">En el ejemplo de código siguiente se muestra la creación y uso de <xref:System.Security.AccessControl.EventWaitHandleAccessRule> objetos.</span><span class="sxs-lookup"><span data-stu-id="45982-121">The following code example demonstrates the creation and use of <xref:System.Security.AccessControl.EventWaitHandleAccessRule> objects.</span></span> <span data-ttu-id="45982-122">El ejemplo se crea un <xref:System.Security.AccessControl.EventWaitHandleSecurity> objeto, agrega las reglas que conceden y deniegan derechos distintos para el usuario actual y muestra el par de reglas resultante.</span><span class="sxs-lookup"><span data-stu-id="45982-122">The example creates an <xref:System.Security.AccessControl.EventWaitHandleSecurity> object, adds rules that allow and deny various rights for the current user, and displays the resulting pair of rules.</span></span> <span data-ttu-id="45982-123">En el ejemplo, a continuación, permite nuevos derechos para el usuario actual y muestra el resultado, que muestra que los nuevos derechos se combinan con las existentes <xref:System.Security.AccessControl.AccessControlType.Allow> regla.</span><span class="sxs-lookup"><span data-stu-id="45982-123">The example then allows new rights for the current user and displays the result, showing that the new rights are merged with the existing <xref:System.Security.AccessControl.AccessControlType.Allow> rule.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="45982-124">En este ejemplo no se adjunta el objeto de seguridad a un <xref:System.Threading.EventWaitHandle> objeto.</span><span class="sxs-lookup"><span data-stu-id="45982-124">This example does not attach the security object to a <xref:System.Threading.EventWaitHandle> object.</span></span> <span data-ttu-id="45982-125">Encontrará ejemplos donde se adjuntan los objetos de seguridad en <xref:System.Threading.EventWaitHandle.GetAccessControl%2A?displayProperty=nameWithType> y <xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="45982-125">Examples that attach security objects can be found in <xref:System.Threading.EventWaitHandle.GetAccessControl%2A?displayProperty=nameWithType> and <xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.EventWaitHandleSecurity.AddAccessRule#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.EventWaitHandleSecurity.AddAccessRule/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.EventWaitHandleSecurity.AddAccessRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.EventWaitHandleSecurity.AddAccessRule/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Security.AccessControl.EventWaitHandleSecurity" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="45982-126">Inicializa una nueva instancia de la clase <see cref="T:System.Security.AccessControl.EventWaitHandleAccessRule" />.</span><span class="sxs-lookup"><span data-stu-id="45982-126">Initializes a new instance of the <see cref="T:System.Security.AccessControl.EventWaitHandleAccessRule" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventWaitHandleAccessRule (System.Security.Principal.IdentityReference identity, System.Security.AccessControl.EventWaitHandleRights eventRights, System.Security.AccessControl.AccessControlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Principal.IdentityReference identity, valuetype System.Security.AccessControl.EventWaitHandleRights eventRights, valuetype System.Security.AccessControl.AccessControlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.EventWaitHandleAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.EventWaitHandleRights,System.Security.AccessControl.AccessControlType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (identity As IdentityReference, eventRights As EventWaitHandleRights, type As AccessControlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventWaitHandleAccessRule(System::Security::Principal::IdentityReference ^ identity, System::Security::AccessControl::EventWaitHandleRights eventRights, System::Security::AccessControl::AccessControlType type);" />
      <MemberSignature Language="F#" Value="new System.Security.AccessControl.EventWaitHandleAccessRule : System.Security.Principal.IdentityReference * System.Security.AccessControl.EventWaitHandleRights * System.Security.AccessControl.AccessControlType -&gt; System.Security.AccessControl.EventWaitHandleAccessRule" Usage="new System.Security.AccessControl.EventWaitHandleAccessRule (identity, eventRights, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="eventRights" Type="System.Security.AccessControl.EventWaitHandleRights" />
        <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" />
      </Parameters>
      <Docs>
        <param name="identity"><span data-ttu-id="45982-127">Usuario o grupo al que se aplica la regla.</span><span class="sxs-lookup"><span data-stu-id="45982-127">The user or group the rule applies to.</span></span> <span data-ttu-id="45982-128">Debe ser de tipo <see cref="T:System.Security.Principal.SecurityIdentifier" /> o de un tipo que, como <see cref="T:System.Security.Principal.NTAccount" />, se pueda convertir al tipo <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span><span class="sxs-lookup"><span data-stu-id="45982-128">Must be of type <see cref="T:System.Security.Principal.SecurityIdentifier" /> or a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span></span></param>
        <param name="eventRights"><span data-ttu-id="45982-129">Combinación bit a bit de valores de <see cref="T:System.Security.AccessControl.EventWaitHandleRights" /> que especifica los derechos concedidos o denegados.</span><span class="sxs-lookup"><span data-stu-id="45982-129">A bitwise combination of <see cref="T:System.Security.AccessControl.EventWaitHandleRights" /> values specifying the rights allowed or denied.</span></span></param>
        <param name="type"><span data-ttu-id="45982-130">Uno de los valores de <see cref="T:System.Security.AccessControl.AccessControlType" /> que especifica si se conceden o deniegan los derechos.</span><span class="sxs-lookup"><span data-stu-id="45982-130">One of the <see cref="T:System.Security.AccessControl.AccessControlType" /> values specifying whether the rights are allowed or denied.</span></span></param>
        <summary><span data-ttu-id="45982-131">Inicializa una nueva instancia de la clase <see cref="T:System.Security.AccessControl.EventWaitHandleAccessRule" />, que especifica el usuario o grupo al que se aplica la regla, los derechos de acceso y si se conceden o deniegan los derechos de acceso especificados.</span><span class="sxs-lookup"><span data-stu-id="45982-131">Initializes a new instance of the <see cref="T:System.Security.AccessControl.EventWaitHandleAccessRule" /> class, specifying the user or group the rule applies to, the access rights, and whether the specified access rights are allowed or denied.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45982-132">Para esperar en un <xref:System.Threading.EventWaitHandle> (mediante una llamada a la <xref:System.Threading.WaitHandle.WaitOne%2A>, <xref:System.Threading.WaitHandle.WaitAny%2A> o <xref:System.Threading.WaitHandle.WaitAll%2A> método), el usuario debe tener <xref:System.Security.AccessControl.EventWaitHandleRights.Synchronize?displayProperty=nameWithType> acceso.</span><span class="sxs-lookup"><span data-stu-id="45982-132">To wait on an <xref:System.Threading.EventWaitHandle> (by calling the <xref:System.Threading.WaitHandle.WaitOne%2A>, <xref:System.Threading.WaitHandle.WaitAny%2A> or <xref:System.Threading.WaitHandle.WaitAll%2A> method), a user must have <xref:System.Security.AccessControl.EventWaitHandleRights.Synchronize?displayProperty=nameWithType> access.</span></span> <span data-ttu-id="45982-133">Para señalar un evento llamando a la <xref:System.Threading.EventWaitHandle.Set%2A> método, o para restablecer el estado no señalizado mediante una llamada a la <xref:System.Threading.EventWaitHandle.Reset%2A> método, debe tener un usuario <xref:System.Security.AccessControl.EventWaitHandleRights.Modify?displayProperty=nameWithType> acceso.</span><span class="sxs-lookup"><span data-stu-id="45982-133">To signal an event by calling the <xref:System.Threading.EventWaitHandle.Set%2A> method, or to reset it to the unsignaled state by calling the <xref:System.Threading.EventWaitHandle.Reset%2A> method, a user must have <xref:System.Security.AccessControl.EventWaitHandleRights.Modify?displayProperty=nameWithType> access.</span></span> <span data-ttu-id="45982-134">Para indicar una <xref:System.Threading.EventWaitHandle> de objetos y, a continuación, esperar en él mediante una llamada a la <xref:System.Threading.WaitHandle.SignalAndWait%2A> método, debe tener un usuario <xref:System.Security.AccessControl.EventWaitHandleRights.Synchronize> y <xref:System.Security.AccessControl.EventWaitHandleRights.Modify> acceso.</span><span class="sxs-lookup"><span data-stu-id="45982-134">To signal an <xref:System.Threading.EventWaitHandle> object and then wait on it by calling the <xref:System.Threading.WaitHandle.SignalAndWait%2A> method, a user must have <xref:System.Security.AccessControl.EventWaitHandleRights.Synchronize> and <xref:System.Security.AccessControl.EventWaitHandleRights.Modify> access.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="45982-135"><paramref name="eventRights" /> especifica un valor no válido.</span><span class="sxs-lookup"><span data-stu-id="45982-135"><paramref name="eventRights" /> specifies an invalid value.</span></span>  
  
<span data-ttu-id="45982-136">O bien</span><span class="sxs-lookup"><span data-stu-id="45982-136">-or-</span></span> 
 <span data-ttu-id="45982-137"><paramref name="type" /> especifica un valor no válido.</span><span class="sxs-lookup"><span data-stu-id="45982-137"><paramref name="type" /> specifies an invalid value.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="45982-138">El valor de <paramref name="identity" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="45982-138"><paramref name="identity" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="45982-139">O bien</span><span class="sxs-lookup"><span data-stu-id="45982-139">-or-</span></span> 
 <span data-ttu-id="45982-140"><paramref name="eventRights" /> es cero.</span><span class="sxs-lookup"><span data-stu-id="45982-140"><paramref name="eventRights" /> is zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="45982-141"><paramref name="identity" /> no es de tipo <see cref="T:System.Security.Principal.SecurityIdentifier" />, ni de un tipo que, como <see cref="T:System.Security.Principal.NTAccount" />, se pueda convertir al tipo <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span><span class="sxs-lookup"><span data-stu-id="45982-141"><paramref name="identity" /> is neither of type <see cref="T:System.Security.Principal.SecurityIdentifier" /> nor of a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventWaitHandleAccessRule (string identity, System.Security.AccessControl.EventWaitHandleRights eventRights, System.Security.AccessControl.AccessControlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string identity, valuetype System.Security.AccessControl.EventWaitHandleRights eventRights, valuetype System.Security.AccessControl.AccessControlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.EventWaitHandleAccessRule.#ctor(System.String,System.Security.AccessControl.EventWaitHandleRights,System.Security.AccessControl.AccessControlType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (identity As String, eventRights As EventWaitHandleRights, type As AccessControlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventWaitHandleAccessRule(System::String ^ identity, System::Security::AccessControl::EventWaitHandleRights eventRights, System::Security::AccessControl::AccessControlType type);" />
      <MemberSignature Language="F#" Value="new System.Security.AccessControl.EventWaitHandleAccessRule : string * System.Security.AccessControl.EventWaitHandleRights * System.Security.AccessControl.AccessControlType -&gt; System.Security.AccessControl.EventWaitHandleAccessRule" Usage="new System.Security.AccessControl.EventWaitHandleAccessRule (identity, eventRights, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.String" />
        <Parameter Name="eventRights" Type="System.Security.AccessControl.EventWaitHandleRights" />
        <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" />
      </Parameters>
      <Docs>
        <param name="identity"><span data-ttu-id="45982-142">Nombre del usuario o grupo al que se aplica la regla.</span><span class="sxs-lookup"><span data-stu-id="45982-142">The name of the user or group the rule applies to.</span></span></param>
        <param name="eventRights"><span data-ttu-id="45982-143">Combinación bit a bit de valores de <see cref="T:System.Security.AccessControl.EventWaitHandleRights" /> que especifica los derechos concedidos o denegados.</span><span class="sxs-lookup"><span data-stu-id="45982-143">A bitwise combination of <see cref="T:System.Security.AccessControl.EventWaitHandleRights" /> values specifying the rights allowed or denied.</span></span></param>
        <param name="type"><span data-ttu-id="45982-144">Uno de los valores de <see cref="T:System.Security.AccessControl.AccessControlType" /> que especifica si se conceden o deniegan los derechos.</span><span class="sxs-lookup"><span data-stu-id="45982-144">One of the <see cref="T:System.Security.AccessControl.AccessControlType" /> values specifying whether the rights are allowed or denied.</span></span></param>
        <summary><span data-ttu-id="45982-145">Inicializa una nueva instancia de la clase <see cref="T:System.Security.AccessControl.EventWaitHandleAccessRule" />, que especifica el nombre del usuario o grupo al que se aplica la regla, los derechos de acceso y si se conceden o deniegan los derechos de acceso especificados.</span><span class="sxs-lookup"><span data-stu-id="45982-145">Initializes a new instance of the <see cref="T:System.Security.AccessControl.EventWaitHandleAccessRule" /> class, specifying the name of the user or group the rule applies to, the access rights, and whether the specified access rights are allowed or denied.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45982-146">Para esperar en un <xref:System.Threading.EventWaitHandle> (mediante una llamada a la <xref:System.Threading.WaitHandle.WaitOne%2A>, <xref:System.Threading.WaitHandle.WaitAny%2A> o <xref:System.Threading.WaitHandle.WaitAll%2A> método), el usuario debe tener <xref:System.Security.AccessControl.EventWaitHandleRights.Synchronize?displayProperty=nameWithType> acceso.</span><span class="sxs-lookup"><span data-stu-id="45982-146">To wait on an <xref:System.Threading.EventWaitHandle> (by calling the <xref:System.Threading.WaitHandle.WaitOne%2A>, <xref:System.Threading.WaitHandle.WaitAny%2A> or <xref:System.Threading.WaitHandle.WaitAll%2A> method), a user must have <xref:System.Security.AccessControl.EventWaitHandleRights.Synchronize?displayProperty=nameWithType> access.</span></span> <span data-ttu-id="45982-147">Para señalar un evento llamando a la <xref:System.Threading.EventWaitHandle.Set%2A> método, o para restablecer el estado no señalizado mediante una llamada a la <xref:System.Threading.EventWaitHandle.Reset%2A> método, debe tener un usuario <xref:System.Security.AccessControl.EventWaitHandleRights.Modify?displayProperty=nameWithType> acceso.</span><span class="sxs-lookup"><span data-stu-id="45982-147">To signal an event by calling the <xref:System.Threading.EventWaitHandle.Set%2A> method, or to reset it to the unsignaled state by calling the <xref:System.Threading.EventWaitHandle.Reset%2A> method, a user must have <xref:System.Security.AccessControl.EventWaitHandleRights.Modify?displayProperty=nameWithType> access.</span></span> <span data-ttu-id="45982-148">Para indicar una <xref:System.Threading.EventWaitHandle> de objetos y, a continuación, esperar en él mediante una llamada a la <xref:System.Threading.WaitHandle.SignalAndWait%2A> método, debe tener un usuario <xref:System.Security.AccessControl.EventWaitHandleRights.Synchronize> y <xref:System.Security.AccessControl.EventWaitHandleRights.Modify> acceso.</span><span class="sxs-lookup"><span data-stu-id="45982-148">To signal an <xref:System.Threading.EventWaitHandle> object and then wait on it by calling the <xref:System.Threading.WaitHandle.SignalAndWait%2A> method, a user must have <xref:System.Security.AccessControl.EventWaitHandleRights.Synchronize> and <xref:System.Security.AccessControl.EventWaitHandleRights.Modify> access.</span></span>  
  
 <span data-ttu-id="45982-149">Este constructor es equivalente a la creación de un <xref:System.Security.Principal.NTAccount> objeto, pasando `identity` a la <xref:System.Security.Principal.NTAccount.%23ctor%28System.String%29?displayProperty=nameWithType> constructor y pasando el recién creado <xref:System.Security.Principal.NTAccount> de objeto para el <xref:System.Security.AccessControl.EventWaitHandleAccessRule.%23ctor%28System.Security.Principal.IdentityReference%2CSystem.Security.AccessControl.EventWaitHandleRights%2CSystem.Security.AccessControl.AccessControlType%29> constructor.</span><span class="sxs-lookup"><span data-stu-id="45982-149">This constructor is equivalent to creating an <xref:System.Security.Principal.NTAccount> object, by passing `identity` to the <xref:System.Security.Principal.NTAccount.%23ctor%28System.String%29?displayProperty=nameWithType> constructor, and passing the newly created <xref:System.Security.Principal.NTAccount> object to the <xref:System.Security.AccessControl.EventWaitHandleAccessRule.%23ctor%28System.Security.Principal.IdentityReference%2CSystem.Security.AccessControl.EventWaitHandleRights%2CSystem.Security.AccessControl.AccessControlType%29> constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="45982-150">En el ejemplo de código siguiente se muestra el uso de este constructor para crear <xref:System.Security.AccessControl.EventWaitHandleAccessRule> objetos.</span><span class="sxs-lookup"><span data-stu-id="45982-150">The following code example demonstrates the use of this constructor to create <xref:System.Security.AccessControl.EventWaitHandleAccessRule> objects.</span></span> <span data-ttu-id="45982-151">El ejemplo se crea un <xref:System.Security.AccessControl.EventWaitHandleSecurity> objeto, agrega las reglas que conceden y deniegan derechos distintos para el usuario actual y muestra el par de reglas resultante.</span><span class="sxs-lookup"><span data-stu-id="45982-151">The example creates an <xref:System.Security.AccessControl.EventWaitHandleSecurity> object, adds rules that allow and deny various rights for the current user, and displays the resulting pair of rules.</span></span> <span data-ttu-id="45982-152">En el ejemplo, a continuación, permite nuevos derechos para el usuario actual y muestra el resultado, que muestra que los nuevos derechos se combinan con las existentes <xref:System.Security.AccessControl.AccessControlType.Allow> regla.</span><span class="sxs-lookup"><span data-stu-id="45982-152">The example then allows new rights for the current user and displays the result, showing that the new rights are merged with the existing <xref:System.Security.AccessControl.AccessControlType.Allow> rule.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="45982-153">En este ejemplo no se adjunta el objeto de seguridad a un <xref:System.Threading.EventWaitHandle> objeto.</span><span class="sxs-lookup"><span data-stu-id="45982-153">This example does not attach the security object to a <xref:System.Threading.EventWaitHandle> object.</span></span> <span data-ttu-id="45982-154">Encontrará ejemplos donde se adjuntan los objetos de seguridad en <xref:System.Threading.EventWaitHandle.GetAccessControl%2A?displayProperty=nameWithType> y <xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="45982-154">Examples that attach security objects can be found in <xref:System.Threading.EventWaitHandle.GetAccessControl%2A?displayProperty=nameWithType> and <xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.EventWaitHandleSecurity.AddAccessRule#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.EventWaitHandleSecurity.AddAccessRule/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.EventWaitHandleSecurity.AddAccessRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.EventWaitHandleSecurity.AddAccessRule/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="45982-155"><paramref name="eventRights" /> especifica un valor no válido.</span><span class="sxs-lookup"><span data-stu-id="45982-155"><paramref name="eventRights" /> specifies an invalid value.</span></span>  
  
<span data-ttu-id="45982-156">O bien</span><span class="sxs-lookup"><span data-stu-id="45982-156">-or-</span></span> 
 <span data-ttu-id="45982-157"><paramref name="type" /> especifica un valor no válido.</span><span class="sxs-lookup"><span data-stu-id="45982-157"><paramref name="type" /> specifies an invalid value.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="45982-158"><paramref name="eventRights" /> es cero.</span><span class="sxs-lookup"><span data-stu-id="45982-158"><paramref name="eventRights" /> is zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="45982-159">El valor de <paramref name="identity" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="45982-159"><paramref name="identity" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="45982-160">O bien</span><span class="sxs-lookup"><span data-stu-id="45982-160">-or-</span></span> 
 <span data-ttu-id="45982-161"><paramref name="identity" /> es cadena de longitud cero.</span><span class="sxs-lookup"><span data-stu-id="45982-161"><paramref name="identity" /> is a zero-length string.</span></span>  
  
<span data-ttu-id="45982-162">O bien</span><span class="sxs-lookup"><span data-stu-id="45982-162">-or-</span></span> 
 <span data-ttu-id="45982-163"><paramref name="identity" /> tiene más de 512 caracteres.</span><span class="sxs-lookup"><span data-stu-id="45982-163"><paramref name="identity" /> is longer than 512 characters.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EventWaitHandleRights">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.EventWaitHandleRights EventWaitHandleRights { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.AccessControl.EventWaitHandleRights EventWaitHandleRights" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.EventWaitHandleAccessRule.EventWaitHandleRights" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EventWaitHandleRights As EventWaitHandleRights" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::AccessControl::EventWaitHandleRights EventWaitHandleRights { System::Security::AccessControl::EventWaitHandleRights get(); };" />
      <MemberSignature Language="F#" Value="member this.EventWaitHandleRights : System.Security.AccessControl.EventWaitHandleRights" Usage="System.Security.AccessControl.EventWaitHandleAccessRule.EventWaitHandleRights" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.EventWaitHandleRights</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="45982-164">Obtiene los derechos concedidos o denegados por la regla de acceso.</span><span class="sxs-lookup"><span data-stu-id="45982-164">Gets the rights allowed or denied by the access rule.</span></span></summary>
        <value><span data-ttu-id="45982-165">Combinación bit a bit de valores <see cref="T:System.Security.AccessControl.EventWaitHandleRights" /> que indica los derechos concedidos o denegados mediante la regla de acceso.</span><span class="sxs-lookup"><span data-stu-id="45982-165">A bitwise combination of <see cref="T:System.Security.AccessControl.EventWaitHandleRights" /> values indicating the rights allowed or denied by the access rule.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45982-166"><xref:System.Security.AccessControl.EventWaitHandleAccessRule> los objetos son inmutables.</span><span class="sxs-lookup"><span data-stu-id="45982-166"><xref:System.Security.AccessControl.EventWaitHandleAccessRule> objects are immutable.</span></span> <span data-ttu-id="45982-167">Puede crear una nueva regla de acceso que representa un usuario diferente, distintos derechos u otra <xref:System.Security.AccessControl.AccessControlType>, pero no se puede modificar una regla de acceso existente.</span><span class="sxs-lookup"><span data-stu-id="45982-167">You can create a new access rule representing a different user, different rights, or a different <xref:System.Security.AccessControl.AccessControlType>, but you cannot modify an existing access rule.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="45982-168">En el ejemplo de código siguiente se muestra el uso de la <xref:System.Security.AccessControl.EventWaitHandleAccessRule.EventWaitHandleRights%2A> propiedad para mostrar los derechos en el conjunto de reglas contenidas en un <xref:System.Security.AccessControl.EventWaitHandleSecurity> objeto.</span><span class="sxs-lookup"><span data-stu-id="45982-168">The following code example demonstrates the use of the <xref:System.Security.AccessControl.EventWaitHandleAccessRule.EventWaitHandleRights%2A> property to display the rights in the set of rules contained in an <xref:System.Security.AccessControl.EventWaitHandleSecurity> object.</span></span> <span data-ttu-id="45982-169">El ejemplo se crea un <xref:System.Security.AccessControl.EventWaitHandleSecurity> objeto, agrega las reglas que conceden y deniegan derechos distintos para el usuario actual y muestra el par de reglas resultante.</span><span class="sxs-lookup"><span data-stu-id="45982-169">The example creates an <xref:System.Security.AccessControl.EventWaitHandleSecurity> object, adds rules that allow and deny various rights for the current user, and displays the resulting pair of rules.</span></span> <span data-ttu-id="45982-170">En el ejemplo, a continuación, permite nuevos derechos para el usuario actual y muestra el resultado, que muestra que los nuevos derechos se combinan con las existentes <xref:System.Security.AccessControl.AccessControlType.Allow> regla.</span><span class="sxs-lookup"><span data-stu-id="45982-170">The example then allows new rights for the current user and displays the result, showing that the new rights are merged with the existing <xref:System.Security.AccessControl.AccessControlType.Allow> rule.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="45982-171">En este ejemplo no se adjunta el objeto de seguridad a un <xref:System.Threading.EventWaitHandle> objeto.</span><span class="sxs-lookup"><span data-stu-id="45982-171">This example does not attach the security object to a <xref:System.Threading.EventWaitHandle> object.</span></span> <span data-ttu-id="45982-172">Encontrará ejemplos donde se adjuntan los objetos de seguridad en <xref:System.Threading.EventWaitHandle.GetAccessControl%2A?displayProperty=nameWithType> y <xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="45982-172">Examples that attach security objects can be found in <xref:System.Threading.EventWaitHandle.GetAccessControl%2A?displayProperty=nameWithType> and <xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.EventWaitHandleSecurity.AddAccessRule#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.EventWaitHandleSecurity.AddAccessRule/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.EventWaitHandleSecurity.AddAccessRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.EventWaitHandleSecurity.AddAccessRule/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
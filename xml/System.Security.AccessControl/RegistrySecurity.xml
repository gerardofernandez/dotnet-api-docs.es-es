<Type Name="RegistrySecurity" FullName="System.Security.AccessControl.RegistrySecurity">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9bc6f7493d7a9e1de154cf46db0d9c5021e7a5d9" /><Meta Name="ms.sourcegitcommit" Value="220917117f9d774aaa482439aa7324e39dc1f5b6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="02/25/2019" /><Meta Name="ms.locfileid" Value="56763826" /></Metadata><TypeSignature Language="C#" Value="public sealed class RegistrySecurity : System.Security.AccessControl.NativeObjectSecurity" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit RegistrySecurity extends System.Security.AccessControl.NativeObjectSecurity" />
  <TypeSignature Language="DocId" Value="T:System.Security.AccessControl.RegistrySecurity" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class RegistrySecurity&#xA;Inherits NativeObjectSecurity" />
  <TypeSignature Language="C++ CLI" Value="public ref class RegistrySecurity sealed : System::Security::AccessControl::NativeObjectSecurity" />
  <TypeSignature Language="F#" Value="type RegistrySecurity = class&#xA;    inherit NativeObjectSecurity" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.AccessControl.NativeObjectSecurity</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1">
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="b1768-101">Representa la seguridad de control de acceso de Windows para una clave del Registro.</span><span class="sxs-lookup"><span data-stu-id="b1768-101">Represents the Windows access control security for a registry key.</span></span> <span data-ttu-id="b1768-102">Esta clase no puede heredarse.</span><span class="sxs-lookup"><span data-stu-id="b1768-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1768-103">Un <xref:System.Security.AccessControl.RegistrySecurity> objeto especifica los derechos de acceso para una clave del registro y también especifica cómo se auditan los intentos de acceso.</span><span class="sxs-lookup"><span data-stu-id="b1768-103">A <xref:System.Security.AccessControl.RegistrySecurity> object specifies access rights for a registry key, and also specifies how access attempts are audited.</span></span> <span data-ttu-id="b1768-104">Derechos de acceso a la clave del registro se expresan como reglas, con cada regla de acceso representada por un <xref:System.Security.AccessControl.RegistryAccessRule> objeto.</span><span class="sxs-lookup"><span data-stu-id="b1768-104">Access rights to the registry key are expressed as rules, with each access rule represented by a <xref:System.Security.AccessControl.RegistryAccessRule> object.</span></span> <span data-ttu-id="b1768-105">Cada regla de auditoría se representa mediante un <xref:System.Security.AccessControl.RegistryAuditRule> objeto.</span><span class="sxs-lookup"><span data-stu-id="b1768-105">Each auditing rule is represented by a <xref:System.Security.AccessControl.RegistryAuditRule> object.</span></span>  
  
 <span data-ttu-id="b1768-106">Esto refleja el sistema de seguridad de Windows subyacente, en el que cada objeto asegurable tiene a lo sumo un control lista de acceso discrecional (DACL) que controla el acceso al objeto protegido y, a lo sumo lista de control de acceso de un sistema (SACL) que especifica que el acceso se auditan los intentos.</span><span class="sxs-lookup"><span data-stu-id="b1768-106">This mirrors the underlying Windows security system, in which each securable object has at most one discretionary access control list (DACL) that controls access to the secured object, and at most one system access control list (SACL) that specifies which access attempts are audited.</span></span> <span data-ttu-id="b1768-107">La DACL y SACL se ordenan las listas de entradas de control de acceso (ACE) que especifican el acceso y auditoría de los usuarios y grupos.</span><span class="sxs-lookup"><span data-stu-id="b1768-107">The DACL and SACL are ordered lists of access control entries (ACE) that specify access and auditing for users and groups.</span></span> <span data-ttu-id="b1768-108">Un <xref:System.Security.AccessControl.RegistryAccessRule> o <xref:System.Security.AccessControl.RegistryAuditRule> objeto podría representar más de una ACE.</span><span class="sxs-lookup"><span data-stu-id="b1768-108">A <xref:System.Security.AccessControl.RegistryAccessRule> or <xref:System.Security.AccessControl.RegistryAuditRule> object might represent more than one ACE.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b1768-109">Seguridad de control de acceso de Windows sólo puede aplicarse a las claves del registro.</span><span class="sxs-lookup"><span data-stu-id="b1768-109">Windows access control security can only be applied to registry keys.</span></span> <span data-ttu-id="b1768-110">No se puede aplicar a pares de clave/valor individuales almacenados en una clave.</span><span class="sxs-lookup"><span data-stu-id="b1768-110">It cannot be applied to individual key/value pairs stored in a key.</span></span>  
  
 <span data-ttu-id="b1768-111">El <xref:System.Security.AccessControl.RegistrySecurity>, <xref:System.Security.AccessControl.RegistryAccessRule>, y <xref:System.Security.AccessControl.RegistryAuditRule> clases ocultan los detalles de implementación de ACL y ACE.</span><span class="sxs-lookup"><span data-stu-id="b1768-111">The <xref:System.Security.AccessControl.RegistrySecurity>, <xref:System.Security.AccessControl.RegistryAccessRule>, and <xref:System.Security.AccessControl.RegistryAuditRule> classes hide the implementation details of ACLs and ACEs.</span></span> <span data-ttu-id="b1768-112">Le permiten pasar por alto los diferentes tipos ACE diecisiete y la complejidad de mantener correctamente la herencia y propagación de derechos de acceso.</span><span class="sxs-lookup"><span data-stu-id="b1768-112">They allow you to ignore the seventeen different ACE types and the complexity of correctly maintaining inheritance and propagation of access rights.</span></span> <span data-ttu-id="b1768-113">Estos objetos también están diseñados para evitar los errores de control de acceso comunes siguientes:</span><span class="sxs-lookup"><span data-stu-id="b1768-113">These objects are also designed to prevent the following common access control errors:</span></span>  
  
-   <span data-ttu-id="b1768-114">Crear un descriptor de seguridad con una DACL null.</span><span class="sxs-lookup"><span data-stu-id="b1768-114">Creating a security descriptor with a null DACL.</span></span> <span data-ttu-id="b1768-115">Una referencia a una DACL null permite que cualquier usuario agregar reglas de acceso a un objeto, la posibilidad de crear un ataque de denegación de servicio.</span><span class="sxs-lookup"><span data-stu-id="b1768-115">A null reference to a DACL allows any user to add access rules to an object, potentially creating a denial-of-service attack.</span></span> <span data-ttu-id="b1768-116">Un nuevo <xref:System.Security.AccessControl.RegistrySecurity> objeto comienza siempre con una DACL vacía que deniega el acceso a todos los usuarios.</span><span class="sxs-lookup"><span data-stu-id="b1768-116">A new <xref:System.Security.AccessControl.RegistrySecurity> object always starts with an empty DACL, which denies all access for all users.</span></span>  
  
-   <span data-ttu-id="b1768-117">Infringir la clasificación canónica de ACE.</span><span class="sxs-lookup"><span data-stu-id="b1768-117">Violating the canonical ordering of ACEs.</span></span> <span data-ttu-id="b1768-118">Si no se mantiene la lista ACE en la DACL en el orden canónico, los usuarios inadvertidamente se podrían dar acceso al objeto protegido.</span><span class="sxs-lookup"><span data-stu-id="b1768-118">If the ACE list in the DACL is not kept in the canonical order, users might inadvertently be given access to the secured object.</span></span> <span data-ttu-id="b1768-119">Por ejemplo, los derechos de acceso denegado siempre deben aparecer antes que los derechos de acceso permitido.</span><span class="sxs-lookup"><span data-stu-id="b1768-119">For example, denied access rights must always appear before allowed access rights.</span></span> <span data-ttu-id="b1768-120"><xref:System.Security.AccessControl.RegistrySecurity> objetos mantienen internamente el orden correcto.</span><span class="sxs-lookup"><span data-stu-id="b1768-120"><xref:System.Security.AccessControl.RegistrySecurity> objects maintain the correct order internally.</span></span>  
  
-   <span data-ttu-id="b1768-121">Manipular las marcas de descriptor de seguridad, que deberían ser bajo el control del Administrador de recursos solo.</span><span class="sxs-lookup"><span data-stu-id="b1768-121">Manipulating security descriptor flags, which should be under resource manager control only.</span></span>  
  
-   <span data-ttu-id="b1768-122">Crear combinaciones no válidas de marcadores ACE.</span><span class="sxs-lookup"><span data-stu-id="b1768-122">Creating invalid combinations of ACE flags.</span></span>  
  
-   <span data-ttu-id="b1768-123">Manipular ACE heredadas.</span><span class="sxs-lookup"><span data-stu-id="b1768-123">Manipulating inherited ACEs.</span></span> <span data-ttu-id="b1768-124">Herencia y propagación se controlan mediante el Administrador de recursos, en respuesta a cambios en las reglas de acceso y auditoría.</span><span class="sxs-lookup"><span data-stu-id="b1768-124">Inheritance and propagation are handled by the resource manager, in response to changes you make to access and audit rules.</span></span>  
  
-   <span data-ttu-id="b1768-125">Insertar ACE no tiene sentidas en las ACL.</span><span class="sxs-lookup"><span data-stu-id="b1768-125">Inserting meaningless ACEs into ACLs.</span></span>  
  
 <span data-ttu-id="b1768-126">Las únicas funciones no compatibles con los objetos de seguridad de .NET son actividades peligrosas que deben evitarse la mayoría de los desarrolladores de aplicaciones, como las siguientes:</span><span class="sxs-lookup"><span data-stu-id="b1768-126">The only capabilities not supported by the .NET security objects are dangerous activities that should be avoided by the majority of application developers, such as the following:</span></span>  
  
-   <span data-ttu-id="b1768-127">Tareas de bajo nivel que normalmente se realizan mediante el Administrador de recursos.</span><span class="sxs-lookup"><span data-stu-id="b1768-127">Low-level tasks that are normally performed by the resource manager.</span></span>  
  
-   <span data-ttu-id="b1768-128">Agregar o quitar entradas de control de acceso de maneras que no mantienen el orden canónico.</span><span class="sxs-lookup"><span data-stu-id="b1768-128">Adding or removing access control entries in ways that do not maintain the canonical ordering.</span></span>  
  
 <span data-ttu-id="b1768-129">Para modificar la seguridad de control de acceso de Windows para una clave del registro, use el <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType> método para obtener el <xref:System.Security.AccessControl.RegistrySecurity> objeto.</span><span class="sxs-lookup"><span data-stu-id="b1768-129">To modify Windows access control security for a registry key, use the <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType> method to get the <xref:System.Security.AccessControl.RegistrySecurity> object.</span></span> <span data-ttu-id="b1768-130">Modificar el objeto de seguridad agregando y quitando las reglas y, a continuación, utilizar el <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType> método para volver a conectarlo.</span><span class="sxs-lookup"><span data-stu-id="b1768-130">Modify the security object by adding and removing rules, and then use the <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType> method to reattach it.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="b1768-131">Cambios en un <xref:System.Security.AccessControl.RegistrySecurity> objeto no afectan a los niveles de acceso de la clave del registro hasta que llame a la <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType> método para asignar el objeto de seguridad modificado a la clave del registro.</span><span class="sxs-lookup"><span data-stu-id="b1768-131">Changes you make to a <xref:System.Security.AccessControl.RegistrySecurity> object do not affect the access levels of the registry key until you call the <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType> method to assign the altered security object to the registry key.</span></span>  
  
 <span data-ttu-id="b1768-132">Para copiar la seguridad de control de acceso de clave del registro de una a otra, utilice el <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType> método para obtener un <xref:System.Security.AccessControl.RegistrySecurity> objeto que representa las reglas de acceso y auditoría para la primera clave del registro y, a continuación, utilice el <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType> método para asignar esas reglas a la segunda clave del registro.</span><span class="sxs-lookup"><span data-stu-id="b1768-132">To copy access control security from one registry key to another, use the <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType> method to get a <xref:System.Security.AccessControl.RegistrySecurity> object representing the access and audit rules for the first registry key, and then use the <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType> method to assign those rules to the second registry key.</span></span> <span data-ttu-id="b1768-133">También puede asignar las reglas para una segunda clave del registro con un <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A?displayProperty=nameWithType> o <xref:Microsoft.Win32.RegistryKey.CreateSubKey%2A?displayProperty=nameWithType> método que toma un <xref:System.Security.AccessControl.RegistrySecurity> parámetro del objeto.</span><span class="sxs-lookup"><span data-stu-id="b1768-133">You can also assign the rules to a second registry key with an <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A?displayProperty=nameWithType> or <xref:Microsoft.Win32.RegistryKey.CreateSubKey%2A?displayProperty=nameWithType> method that takes a <xref:System.Security.AccessControl.RegistrySecurity> object parameter.</span></span>  
  
 <span data-ttu-id="b1768-134">Los usuarios con una inversión en el lenguaje de definición de descriptores de seguridad (SDDL) pueden usar el <xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm%2A> método para establecer reglas de acceso para una clave del registro y el <xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm%2A> método para obtener una cadena que representa las reglas de acceso en formato SDDL.</span><span class="sxs-lookup"><span data-stu-id="b1768-134">Users with an investment in the security descriptor definition language (SDDL) can use the <xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm%2A> method to set access rules for a registry key, and the <xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm%2A> method to obtain a string that represents the access rules in SDDL format.</span></span> <span data-ttu-id="b1768-135">Esto no se recomienda para nuevo desarrollo.</span><span class="sxs-lookup"><span data-stu-id="b1768-135">This is not recommended for new development.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b1768-136">Esta sección contiene dos ejemplos de código.</span><span class="sxs-lookup"><span data-stu-id="b1768-136">This section contains two code examples.</span></span> <span data-ttu-id="b1768-137">El primer ejemplo muestra cómo las reglas se combinan compatibles cuando se agregan y quitan y la segunda muestra cómo afectan a marcadores de herencia y propagación de la adición y eliminación de reglas.</span><span class="sxs-lookup"><span data-stu-id="b1768-137">The first example shows how compatible rules merge when added and removed, and the second shows how inheritance and propagation flags affect the addition and deletion of rules.</span></span>  
  
 <span data-ttu-id="b1768-138">Ejemplo 1</span><span class="sxs-lookup"><span data-stu-id="b1768-138">Example 1</span></span>  
  
 <span data-ttu-id="b1768-139">El siguiente ejemplo de código muestra cómo el <xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRule%2A> método quita los derechos de una regla compatible y cómo el <xref:System.Security.AccessControl.RegistrySecurity.AddAccessRule%2A> método combina los derechos con reglas compatibles.</span><span class="sxs-lookup"><span data-stu-id="b1768-139">The following code example shows how the <xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRule%2A> method removes rights from a compatible rule, and how the <xref:System.Security.AccessControl.RegistrySecurity.AddAccessRule%2A> method merges rights with compatible rules.</span></span>  
  
 <span data-ttu-id="b1768-140">El ejemplo se crea un <xref:System.Security.AccessControl.RegistrySecurity> objeto y agrega una regla que permite al usuario actual <xref:System.Security.AccessControl.RegistryRights.ReadKey?displayProperty=nameWithType> derechos.</span><span class="sxs-lookup"><span data-stu-id="b1768-140">The example creates a <xref:System.Security.AccessControl.RegistrySecurity> object and adds a rule that allows the current user <xref:System.Security.AccessControl.RegistryRights.ReadKey?displayProperty=nameWithType> rights.</span></span> <span data-ttu-id="b1768-141">El ejemplo, a continuación, crea una regla que concede al usuario <xref:System.Security.AccessControl.RegistryRights.SetValue?displayProperty=nameWithType>, con la misma herencia y derechos de propagación que la primera regla y usa el <xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRule%2A> método para quitar esta nueva regla de la <xref:System.Security.AccessControl.RegistrySecurity> objeto.</span><span class="sxs-lookup"><span data-stu-id="b1768-141">The example then creates a rule that grants the user <xref:System.Security.AccessControl.RegistryRights.SetValue?displayProperty=nameWithType>, with the same inheritance and propagation rights as the first rule, and uses the <xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRule%2A> method to remove this new rule from the <xref:System.Security.AccessControl.RegistrySecurity> object.</span></span> <span data-ttu-id="b1768-142"><xref:System.Security.AccessControl.RegistryRights.SetValue> es un componente de <xref:System.Security.AccessControl.RegistryRights.ReadKey>, por lo que se quita de la regla compatible.</span><span class="sxs-lookup"><span data-stu-id="b1768-142"><xref:System.Security.AccessControl.RegistryRights.SetValue> is a constituent of <xref:System.Security.AccessControl.RegistryRights.ReadKey>, so it is removed from the compatible rule.</span></span> <span data-ttu-id="b1768-143">Las reglas en el <xref:System.Security.AccessControl.RegistrySecurity> objeto se muestran los componentes restantes de <xref:System.Security.AccessControl.RegistryRights.ReadKey>.</span><span class="sxs-lookup"><span data-stu-id="b1768-143">The rules in the <xref:System.Security.AccessControl.RegistrySecurity> object are displayed, showing the remaining constituents of <xref:System.Security.AccessControl.RegistryRights.ReadKey>.</span></span>  
  
 <span data-ttu-id="b1768-144">El código de ejemplo, a continuación, llama a la <xref:System.Security.AccessControl.RegistrySecurity.AddAccessRule%2A> método para combinar el <xref:System.Security.AccessControl.RegistryRights.SetValue> botón derecho en la regla en el <xref:System.Security.AccessControl.RegistrySecurity> objeto.</span><span class="sxs-lookup"><span data-stu-id="b1768-144">The example code then calls the <xref:System.Security.AccessControl.RegistrySecurity.AddAccessRule%2A> method to merge the <xref:System.Security.AccessControl.RegistryRights.SetValue> right back into the rule in the <xref:System.Security.AccessControl.RegistrySecurity> object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b1768-145">En este ejemplo no se adjunta el objeto de seguridad a un <xref:Microsoft.Win32.RegistryKey> objeto.</span><span class="sxs-lookup"><span data-stu-id="b1768-145">This example does not attach the security object to a <xref:Microsoft.Win32.RegistryKey> object.</span></span> <span data-ttu-id="b1768-146">El segundo ejemplo de esta sección adjunta un objeto de seguridad, y también lo hacen los ejemplos <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType> y <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="b1768-146">The second example in this section attaches a security object, and so do the examples in <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType> and <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.RegistrySecurity.RemoveAccessRule#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.RegistrySecurity.RemoveAccessRule/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.RegistrySecurity.RemoveAccessRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.RegistrySecurity.RemoveAccessRule/VB/source.vb#1)]  
  
 <span data-ttu-id="b1768-147">Ejemplo 2</span><span class="sxs-lookup"><span data-stu-id="b1768-147">Example 2</span></span>  
  
 <span data-ttu-id="b1768-148">El ejemplo de código siguiente muestra las reglas de acceso con herencia y propagación.</span><span class="sxs-lookup"><span data-stu-id="b1768-148">The following code example demonstrates access rules with inheritance and propagation.</span></span> <span data-ttu-id="b1768-149">El ejemplo se crea un <xref:System.Security.AccessControl.RegistrySecurity> objeto, a continuación, crea y agrega dos reglas que tienen el <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit> marca.</span><span class="sxs-lookup"><span data-stu-id="b1768-149">The example creates a <xref:System.Security.AccessControl.RegistrySecurity> object, then creates and adds two rules that have the <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit> flag.</span></span> <span data-ttu-id="b1768-150">La primera regla no tiene ninguna marca de propagación, mientras la segunda tiene <xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit> y <xref:System.Security.AccessControl.PropagationFlags.InheritOnly>.</span><span class="sxs-lookup"><span data-stu-id="b1768-150">The first rule has no propagation flags, while the second has <xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit> and <xref:System.Security.AccessControl.PropagationFlags.InheritOnly>.</span></span>  
  
 <span data-ttu-id="b1768-151">El programa muestra las reglas en el <xref:System.Security.AccessControl.RegistrySecurity> objeto y, a continuación, utiliza el <xref:System.Security.AccessControl.RegistrySecurity> objeto va a crear una subclave.</span><span class="sxs-lookup"><span data-stu-id="b1768-151">The program displays the rules in the <xref:System.Security.AccessControl.RegistrySecurity> object, and then uses the <xref:System.Security.AccessControl.RegistrySecurity> object to create a subkey.</span></span> <span data-ttu-id="b1768-152">El programa crea a un elemento secundario de subclave y una una subclave y luego muestra la seguridad para cada subclave.</span><span class="sxs-lookup"><span data-stu-id="b1768-152">The program creates a child subkey and a grandchild subkey, then displays the security for each subkey.</span></span> <span data-ttu-id="b1768-153">Por último, el programa elimina las claves de prueba.</span><span class="sxs-lookup"><span data-stu-id="b1768-153">Finally, the program deletes the test keys.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.RegistryAccessRule.ctor2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.RegistryAccessRule.ctor2/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.RegistryAccessRule.ctor2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.RegistryAccessRule.ctor2/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RegistrySecurity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.RegistrySecurity.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RegistrySecurity();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b1768-154">Inicializa una nueva instancia de la clase <see cref="T:System.Security.AccessControl.RegistrySecurity" /> con valores predeterminados.</span><span class="sxs-lookup"><span data-stu-id="b1768-154">Initializes a new instance of the <see cref="T:System.Security.AccessControl.RegistrySecurity" /> class with default values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1768-155">Un nuevo <xref:System.Security.AccessControl.RegistrySecurity> objeto comienza siempre con una lista vacía de acceso discrecional (DACL), que se deniega el acceso a todos los usuarios.</span><span class="sxs-lookup"><span data-stu-id="b1768-155">A new <xref:System.Security.AccessControl.RegistrySecurity> object always starts with an empty discretionary access list (DACL), which denies all access for all users.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessRightType">
      <MemberSignature Language="C#" Value="public override Type AccessRightType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type AccessRightType" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.RegistrySecurity.AccessRightType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AccessRightType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ AccessRightType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AccessRightType : Type" Usage="System.Security.AccessControl.RegistrySecurity.AccessRightType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b1768-156">Obtiene el tipo de enumeración que la clase <see cref="T:System.Security.AccessControl.RegistrySecurity" /> utiliza para representar los derechos de acceso.</span><span class="sxs-lookup"><span data-stu-id="b1768-156">Gets the enumeration type that the <see cref="T:System.Security.AccessControl.RegistrySecurity" /> class uses to represent access rights.</span></span></summary>
        <value><span data-ttu-id="b1768-157">Objeto <see cref="T:System.Type" /> que representa la enumeración <see cref="T:System.Security.AccessControl.RegistryRights" />.</span><span class="sxs-lookup"><span data-stu-id="b1768-157">A <see cref="T:System.Type" /> object representing the <see cref="T:System.Security.AccessControl.RegistryRights" /> enumeration.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1768-158">Las clases que derivan de la <xref:System.Security.AccessControl.ObjectSecurity> clase invalidación el <xref:System.Security.AccessControl.ObjectSecurity.AccessRightType%2A> propiedad y devuelva el tipo que se utilizan para representar los derechos de acceso.</span><span class="sxs-lookup"><span data-stu-id="b1768-158">Classes that derive from the <xref:System.Security.AccessControl.ObjectSecurity> class override the <xref:System.Security.AccessControl.ObjectSecurity.AccessRightType%2A> property and return the type they use to represent access rights.</span></span> <span data-ttu-id="b1768-159">Cuando se trabaja con matrices o colecciones que contienen varios tipos de objetos de seguridad, use esta propiedad para determinar el tipo de enumeración correctos para utilizar con cada objeto de seguridad.</span><span class="sxs-lookup"><span data-stu-id="b1768-159">When you work with arrays or collections that contain multiple types of security objects, use this property to determine the correct enumeration type to use with each security object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessRuleFactory">
      <MemberSignature Language="C#" Value="public override System.Security.AccessControl.AccessRule AccessRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AccessControlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.AccessControl.AccessRule AccessRuleFactory(class System.Security.Principal.IdentityReference identityReference, int32 accessMask, bool isInherited, valuetype System.Security.AccessControl.InheritanceFlags inheritanceFlags, valuetype System.Security.AccessControl.PropagationFlags propagationFlags, valuetype System.Security.AccessControl.AccessControlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.RegistrySecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::AccessControl::AccessRule ^ AccessRuleFactory(System::Security::Principal::IdentityReference ^ identityReference, int accessMask, bool isInherited, System::Security::AccessControl::InheritanceFlags inheritanceFlags, System::Security::AccessControl::PropagationFlags propagationFlags, System::Security::AccessControl::AccessControlType type);" />
      <MemberSignature Language="F#" Value="override this.AccessRuleFactory : System.Security.Principal.IdentityReference * int * bool * System.Security.AccessControl.InheritanceFlags * System.Security.AccessControl.PropagationFlags * System.Security.AccessControl.AccessControlType -&gt; System.Security.AccessControl.AccessRule" Usage="registrySecurity.AccessRuleFactory (identityReference, accessMask, isInherited, inheritanceFlags, propagationFlags, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.AccessRule</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identityReference" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="accessMask" Type="System.Int32" />
        <Parameter Name="isInherited" Type="System.Boolean" />
        <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
        <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" />
      </Parameters>
      <Docs>
        <param name="identityReference"><span data-ttu-id="b1768-160">Objeto <see cref="T:System.Security.Principal.IdentityReference" /> que identifica al usuario o grupo al que se aplica la regla.</span><span class="sxs-lookup"><span data-stu-id="b1768-160">An <see cref="T:System.Security.Principal.IdentityReference" /> that identifies the user or group the rule applies to.</span></span></param>
        <param name="accessMask"><span data-ttu-id="b1768-161">Combinación de valores <see cref="T:System.Security.AccessControl.RegistryRights" /> bit a bit que especifica los derechos de acceso que se van a conceder o denegar, convertidos a un entero.</span><span class="sxs-lookup"><span data-stu-id="b1768-161">A bitwise combination of <see cref="T:System.Security.AccessControl.RegistryRights" /> values specifying the access rights to allow or deny, cast to an integer.</span></span></param>
        <param name="isInherited"><span data-ttu-id="b1768-162">Un valor booleano que especifica si se hereda la regla.</span><span class="sxs-lookup"><span data-stu-id="b1768-162">A Boolean value specifying whether the rule is inherited.</span></span></param>
        <param name="inheritanceFlags"><span data-ttu-id="b1768-163">Una combinación bit a bit de valores <see cref="T:System.Security.AccessControl.InheritanceFlags" /> que especifica cómo las subclaves heredan la regla.</span><span class="sxs-lookup"><span data-stu-id="b1768-163">A bitwise combination of <see cref="T:System.Security.AccessControl.InheritanceFlags" /> values specifying how the rule is inherited by subkeys.</span></span></param>
        <param name="propagationFlags"><span data-ttu-id="b1768-164">Una combinación bit a bit de valores <see cref="T:System.Security.AccessControl.PropagationFlags" /> que modifican la manera en que las subclaves heredan la regla.</span><span class="sxs-lookup"><span data-stu-id="b1768-164">A bitwise combination of <see cref="T:System.Security.AccessControl.PropagationFlags" /> values that modify the way the rule is inherited by subkeys.</span></span> <span data-ttu-id="b1768-165">No tiene sentido si el valor de <paramref name="inheritanceFlags" /> es <see cref="F:System.Security.AccessControl.InheritanceFlags.None" />.</span><span class="sxs-lookup"><span data-stu-id="b1768-165">Meaningless if the value of <paramref name="inheritanceFlags" /> is <see cref="F:System.Security.AccessControl.InheritanceFlags.None" />.</span></span></param>
        <param name="type"><span data-ttu-id="b1768-166">Uno de los valores de <see cref="T:System.Security.AccessControl.AccessControlType" /> que especifica si se conceden o deniegan los derechos.</span><span class="sxs-lookup"><span data-stu-id="b1768-166">One of the <see cref="T:System.Security.AccessControl.AccessControlType" /> values specifying whether the rights are allowed or denied.</span></span></param>
        <summary><span data-ttu-id="b1768-167">Crea una nueva regla de control de acceso para el usuario indicado con los derechos de acceso, el control de acceso y los marcadores especificados.</span><span class="sxs-lookup"><span data-stu-id="b1768-167">Creates a new access control rule for the specified user, with the specified access rights, access control, and flags.</span></span></summary>
        <returns><span data-ttu-id="b1768-168">Objeto <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> que representa los derechos indicados para el usuario especificado.</span><span class="sxs-lookup"><span data-stu-id="b1768-168">A <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> object representing the specified rights for the specified user.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1768-169">La manera recomendada para crear reglas de control de acceso es utilizar los constructores de la <xref:System.Security.AccessControl.RegistryAccessRule> clase.</span><span class="sxs-lookup"><span data-stu-id="b1768-169">The recommended way to create access control rules is to use the constructors of the <xref:System.Security.AccessControl.RegistryAccessRule> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b1768-170">Aunque puede especificar el <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit?displayProperty=nameWithType> marca, no hay ningún punto de hacerlo.</span><span class="sxs-lookup"><span data-stu-id="b1768-170">Although you can specify the <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit?displayProperty=nameWithType> flag, there is no point in doing so.</span></span> <span data-ttu-id="b1768-171">Para los fines de control de acceso, los pares nombre/valor de una subclave no son objetos independientes.</span><span class="sxs-lookup"><span data-stu-id="b1768-171">For the purposes of access control, the name/value pairs in a subkey are not separate objects.</span></span> <span data-ttu-id="b1768-172">Los derechos de acceso a los pares nombre/valor son controlados por los derechos de la subclave.</span><span class="sxs-lookup"><span data-stu-id="b1768-172">The access rights to name/value pairs are controlled by the rights of the subkey.</span></span> <span data-ttu-id="b1768-173">Además, dado que todas las subclaves son contenedores (es decir, puede contener otras subclaves), no se ven afectadas por la <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> marca.</span><span class="sxs-lookup"><span data-stu-id="b1768-173">Furthermore, since all subkeys are containers (that is, they can contain other subkeys), they are not affected by the <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> flag.</span></span> <span data-ttu-id="b1768-174">Por último, especificar el <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> marca innecesariamente complica el mantenimiento de reglas, puesto que interfiere con la combinación normal de reglas compatibles.</span><span class="sxs-lookup"><span data-stu-id="b1768-174">Finally, specifying the <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> flag needlessly complicates the maintenance of rules, because it interferes with the normal combination of compatible rules.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b1768-175"><paramref name="accessMask" />, <paramref name="inheritanceFlags" />, <paramref name="propagationFlags" /> o <paramref name="type" /> especifican un valor no válido.</span><span class="sxs-lookup"><span data-stu-id="b1768-175"><paramref name="accessMask" />, <paramref name="inheritanceFlags" />, <paramref name="propagationFlags" />, or <paramref name="type" /> specifies an invalid value.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b1768-176"><paramref name="identityReference" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b1768-176"><paramref name="identityReference" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="b1768-177">O bien</span><span class="sxs-lookup"><span data-stu-id="b1768-177">-or-</span></span> 
 <span data-ttu-id="b1768-178"><paramref name="accessMask" /> es cero.</span><span class="sxs-lookup"><span data-stu-id="b1768-178"><paramref name="accessMask" /> is zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b1768-179"><paramref name="identityReference" /> no es de tipo <see cref="T:System.Security.Principal.SecurityIdentifier" />, ni de un tipo que, como <see cref="T:System.Security.Principal.NTAccount" />, se pueda convertir al tipo <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span><span class="sxs-lookup"><span data-stu-id="b1768-179"><paramref name="identityReference" /> is neither of type <see cref="T:System.Security.Principal.SecurityIdentifier" />, nor of a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AccessRuleType">
      <MemberSignature Language="C#" Value="public override Type AccessRuleType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type AccessRuleType" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.RegistrySecurity.AccessRuleType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AccessRuleType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ AccessRuleType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AccessRuleType : Type" Usage="System.Security.AccessControl.RegistrySecurity.AccessRuleType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b1768-180">Obtiene el tipo que utiliza la clase <see cref="T:System.Security.AccessControl.RegistrySecurity" /> para representar las reglas de acceso.</span><span class="sxs-lookup"><span data-stu-id="b1768-180">Gets the type that the <see cref="T:System.Security.AccessControl.RegistrySecurity" /> class uses to represent access rules.</span></span></summary>
        <value><span data-ttu-id="b1768-181">Objeto <see cref="T:System.Type" /> que representa la clase <see cref="T:System.Security.AccessControl.RegistryAccessRule" />.</span><span class="sxs-lookup"><span data-stu-id="b1768-181">A <see cref="T:System.Type" /> object representing the <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> class.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1768-182">Las clases que derivan de la <xref:System.Security.AccessControl.ObjectSecurity> clase invalidación el <xref:System.Security.AccessControl.ObjectSecurity.AccessRuleType%2A> propiedad y devuelva el tipo que se utilizan para representar las reglas de acceso.</span><span class="sxs-lookup"><span data-stu-id="b1768-182">Classes that derive from the <xref:System.Security.AccessControl.ObjectSecurity> class override the <xref:System.Security.AccessControl.ObjectSecurity.AccessRuleType%2A> property and return the type they use to represent access rules.</span></span> <span data-ttu-id="b1768-183">Cuando se trabaja con matrices o colecciones que contienen varios tipos de objetos de seguridad, use esta propiedad para determinar el tipo de regla de acceso correcto a utilizar con cada objeto de seguridad.</span><span class="sxs-lookup"><span data-stu-id="b1768-183">When you work with arrays or collections that contain multiple types of security objects, use this property to determine the correct access rule type to use with each security object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAccessRule">
      <MemberSignature Language="C#" Value="public void AddAccessRule (System.Security.AccessControl.RegistryAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAccessRule(class System.Security.AccessControl.RegistryAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.RegistrySecurity.AddAccessRule(System.Security.AccessControl.RegistryAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAccessRule (rule As RegistryAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAccessRule(System::Security::AccessControl::RegistryAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.AddAccessRule : System.Security.AccessControl.RegistryAccessRule -&gt; unit" Usage="registrySecurity.AddAccessRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.RegistryAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule"><span data-ttu-id="b1768-184">La regla de control de acceso que se va a agregar.</span><span class="sxs-lookup"><span data-stu-id="b1768-184">The access control rule to add.</span></span></param>
        <summary><span data-ttu-id="b1768-185">Busca un control de acceso coincidente con el que se pueda combinar la nueva regla.</span><span class="sxs-lookup"><span data-stu-id="b1768-185">Searches for a matching access control with which the new rule can be merged.</span></span> <span data-ttu-id="b1768-186">Si no se encuentra ninguna, agrega la nueva regla.</span><span class="sxs-lookup"><span data-stu-id="b1768-186">If none are found, adds the new rule.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1768-187">El <xref:System.Security.AccessControl.RegistrySecurity.AddAccessRule%2A> método busca las reglas con el mismo usuario o grupo y el mismo <xref:System.Security.AccessControl.AccessControlType> como `rule`.</span><span class="sxs-lookup"><span data-stu-id="b1768-187">The <xref:System.Security.AccessControl.RegistrySecurity.AddAccessRule%2A> method searches for rules with the same user or group and the same <xref:System.Security.AccessControl.AccessControlType> as `rule`.</span></span> <span data-ttu-id="b1768-188">Si se encuentra ninguna, `rule` se agrega.</span><span class="sxs-lookup"><span data-stu-id="b1768-188">If none are found, `rule` is added.</span></span> <span data-ttu-id="b1768-189">Si se encuentra una regla de coincidencia, los derechos en `rule` se combinan con la regla existente.</span><span class="sxs-lookup"><span data-stu-id="b1768-189">If a matching rule is found, the rights in `rule` are merged with the existing rule.</span></span>  
  
 <span data-ttu-id="b1768-190">No se pueden combinar reglas si tienen marcadores de herencia diferente.</span><span class="sxs-lookup"><span data-stu-id="b1768-190">Rules cannot be merged if they have different inheritance flags.</span></span> <span data-ttu-id="b1768-191">Por ejemplo, si un usuario puede tener acceso de lectura sin marcadores de herencia y <xref:System.Security.AccessControl.RegistrySecurity.AddAccessRule%2A> se usa para agregar una regla que proporciona el acceso de escritura de usuario con herencia para subclaves (<xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit?displayProperty=nameWithType>), no se pueden combinar las dos reglas.</span><span class="sxs-lookup"><span data-stu-id="b1768-191">For example, if a user is allowed read access with no inheritance flags, and <xref:System.Security.AccessControl.RegistrySecurity.AddAccessRule%2A> is used to add a rule giving the user write access with inheritance for subkeys (<xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit?displayProperty=nameWithType>), the two rules cannot be merged.</span></span>  
  
 <span data-ttu-id="b1768-192">Las reglas con diferentes <xref:System.Security.AccessControl.AccessControlType> valores nunca se combinan.</span><span class="sxs-lookup"><span data-stu-id="b1768-192">Rules with different <xref:System.Security.AccessControl.AccessControlType> values are never merged.</span></span>  
  
 <span data-ttu-id="b1768-193">Las reglas expresan los permisos de la manera más económica.</span><span class="sxs-lookup"><span data-stu-id="b1768-193">Rules express rights in the most economical way.</span></span> <span data-ttu-id="b1768-194">Por ejemplo, si un usuario tiene <xref:System.Security.AccessControl.RegistryRights.QueryValues>, <xref:System.Security.AccessControl.RegistryRights.Notify> y <xref:System.Security.AccessControl.RegistryRights.ReadPermissions> derechos y agregar una regla que permita <xref:System.Security.AccessControl.RegistryRights.EnumerateSubKeys> derechos, el usuario tiene todas las partes constituyentes de <xref:System.Security.AccessControl.RegistryRights.ReadKey> derechos.</span><span class="sxs-lookup"><span data-stu-id="b1768-194">For example, if a user has <xref:System.Security.AccessControl.RegistryRights.QueryValues>, <xref:System.Security.AccessControl.RegistryRights.Notify> and <xref:System.Security.AccessControl.RegistryRights.ReadPermissions> rights, and you add a rule allowing <xref:System.Security.AccessControl.RegistryRights.EnumerateSubKeys> rights, the user has all the constituent parts of <xref:System.Security.AccessControl.RegistryRights.ReadKey> rights.</span></span> <span data-ttu-id="b1768-195">Si consulta los derechos del usuario, verá una regla que contenga <xref:System.Security.AccessControl.RegistryRights.ReadKey> derechos.</span><span class="sxs-lookup"><span data-stu-id="b1768-195">If you query the user's rights, you will see a rule containing <xref:System.Security.AccessControl.RegistryRights.ReadKey> rights.</span></span> <span data-ttu-id="b1768-196">De forma similar, si quita <xref:System.Security.AccessControl.RegistryRights.EnumerateSubKeys> derechos, los demás componentes del <xref:System.Security.AccessControl.RegistryRights.ReadKey> derechos volverá a aparecer.</span><span class="sxs-lookup"><span data-stu-id="b1768-196">Similarly, if you remove <xref:System.Security.AccessControl.RegistryRights.EnumerateSubKeys> rights, the other constituents of <xref:System.Security.AccessControl.RegistryRights.ReadKey> rights will reappear.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b1768-197">El siguiente ejemplo de código crea las reglas de acceso del registro y las agrega a un <xref:System.Security.AccessControl.RegistrySecurity> se combina el objeto y muestra cómo las reglas que conceden y deniegan derechos permanecen separadas, mientras que las reglas compatibles del mismo tipo.</span><span class="sxs-lookup"><span data-stu-id="b1768-197">The following code example creates registry access rules and adds them to a <xref:System.Security.AccessControl.RegistrySecurity> object, showing how rules that allow and deny rights remain separate, while compatible rules of the same kind are merged.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b1768-198">En este ejemplo no se adjunta el objeto de seguridad a un <xref:Microsoft.Win32.RegistryKey> objeto.</span><span class="sxs-lookup"><span data-stu-id="b1768-198">This example does not attach the security object to a <xref:Microsoft.Win32.RegistryKey> object.</span></span> <span data-ttu-id="b1768-199">Encontrará ejemplos donde se adjuntan los objetos de seguridad en <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType> y <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="b1768-199">Examples that attach security objects can be found in <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType> and <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="b1768-200">Encontrará un ejemplo de código que muestra marcadores de herencia y propagación en la <xref:System.Security.AccessControl.RegistryAccessRule> clase.</span><span class="sxs-lookup"><span data-stu-id="b1768-200">A code example that demonstrates inheritance and propagation flags can be found in the <xref:System.Security.AccessControl.RegistryAccessRule> class.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.RegistrySecurity.AddAccessRule#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.RegistrySecurity.AddAccessRule/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.RegistrySecurity.AddAccessRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.RegistrySecurity.AddAccessRule/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b1768-201"><paramref name="rule" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b1768-201"><paramref name="rule" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddAuditRule">
      <MemberSignature Language="C#" Value="public void AddAuditRule (System.Security.AccessControl.RegistryAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAuditRule(class System.Security.AccessControl.RegistryAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.RegistrySecurity.AddAuditRule(System.Security.AccessControl.RegistryAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAuditRule (rule As RegistryAuditRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAuditRule(System::Security::AccessControl::RegistryAuditRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.AddAuditRule : System.Security.AccessControl.RegistryAuditRule -&gt; unit" Usage="registrySecurity.AddAuditRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.RegistryAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule"><span data-ttu-id="b1768-202">La regla de auditoría que se va a agregar.</span><span class="sxs-lookup"><span data-stu-id="b1768-202">The audit rule to add.</span></span> <span data-ttu-id="b1768-203">El usuario especificado por esta regla determina la búsqueda.</span><span class="sxs-lookup"><span data-stu-id="b1768-203">The user specified by this rule determines the search.</span></span></param>
        <summary><span data-ttu-id="b1768-204">Busca una regla de auditoría con la que se pueda combinar la nueva regla.</span><span class="sxs-lookup"><span data-stu-id="b1768-204">Searches for an audit rule with which the new rule can be merged.</span></span> <span data-ttu-id="b1768-205">Si no se encuentra ninguna, agrega la nueva regla.</span><span class="sxs-lookup"><span data-stu-id="b1768-205">If none are found, adds the new rule.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1768-206">El <xref:System.Security.AccessControl.RegistrySecurity.AddAuditRule%2A> método busca las reglas con el mismo usuario o grupo que `rule`.</span><span class="sxs-lookup"><span data-stu-id="b1768-206">The <xref:System.Security.AccessControl.RegistrySecurity.AddAuditRule%2A> method searches for rules with the same user or group as `rule`.</span></span> <span data-ttu-id="b1768-207">Si se encuentra ninguna, `rule` se agrega.</span><span class="sxs-lookup"><span data-stu-id="b1768-207">If none are found, `rule` is added.</span></span> <span data-ttu-id="b1768-208">Si se encuentra una regla de coincidencia, las marcas en `rule` se combinan en una regla existente.</span><span class="sxs-lookup"><span data-stu-id="b1768-208">If a matching rule is found, the flags in `rule` are merged into the existing rule.</span></span>  
  
 <span data-ttu-id="b1768-209">No se pueden combinar reglas si tienen marcadores de herencia diferente.</span><span class="sxs-lookup"><span data-stu-id="b1768-209">Rules cannot be merged if they have different inheritance flags.</span></span> <span data-ttu-id="b1768-210">Por ejemplo, si los intentos de escribir en una clave se auditan para un usuario determinado, sin marcadores de herencia y <xref:System.Security.AccessControl.RegistrySecurity.AddAuditRule%2A> se usa para agregar una regla que especifique que son intentos para cambiar los permisos que se auditarán para el mismo usuario, pero con herencia para las subclaves (<xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit?displayProperty=nameWithType>), no se pueden combinar las dos reglas.</span><span class="sxs-lookup"><span data-stu-id="b1768-210">For example, if failed attempts to write to a key are audited for a particular user, with no inheritance flags, and <xref:System.Security.AccessControl.RegistrySecurity.AddAuditRule%2A> is used to add a rule specifying that failed attempts to change permissions are to be audited for the same user, but with inheritance for subkeys (<xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit?displayProperty=nameWithType>), the two rules cannot be merged.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AuditRuleFactory">
      <MemberSignature Language="C#" Value="public override System.Security.AccessControl.AuditRule AuditRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.AccessControl.AuditRule AuditRuleFactory(class System.Security.Principal.IdentityReference identityReference, int32 accessMask, bool isInherited, valuetype System.Security.AccessControl.InheritanceFlags inheritanceFlags, valuetype System.Security.AccessControl.PropagationFlags propagationFlags, valuetype System.Security.AccessControl.AuditFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.RegistrySecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::AccessControl::AuditRule ^ AuditRuleFactory(System::Security::Principal::IdentityReference ^ identityReference, int accessMask, bool isInherited, System::Security::AccessControl::InheritanceFlags inheritanceFlags, System::Security::AccessControl::PropagationFlags propagationFlags, System::Security::AccessControl::AuditFlags flags);" />
      <MemberSignature Language="F#" Value="override this.AuditRuleFactory : System.Security.Principal.IdentityReference * int * bool * System.Security.AccessControl.InheritanceFlags * System.Security.AccessControl.PropagationFlags * System.Security.AccessControl.AuditFlags -&gt; System.Security.AccessControl.AuditRule" Usage="registrySecurity.AuditRuleFactory (identityReference, accessMask, isInherited, inheritanceFlags, propagationFlags, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.AuditRule</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identityReference" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="accessMask" Type="System.Int32" />
        <Parameter Name="isInherited" Type="System.Boolean" />
        <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
        <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        <Parameter Name="flags" Type="System.Security.AccessControl.AuditFlags" />
      </Parameters>
      <Docs>
        <param name="identityReference"><span data-ttu-id="b1768-211">Objeto <see cref="T:System.Security.Principal.IdentityReference" /> que identifica al usuario o grupo al que se aplica la regla.</span><span class="sxs-lookup"><span data-stu-id="b1768-211">An <see cref="T:System.Security.Principal.IdentityReference" /> that identifies the user or group the rule applies to.</span></span></param>
        <param name="accessMask"><span data-ttu-id="b1768-212">Combinación de valores <see cref="T:System.Security.AccessControl.RegistryRights" /> bit a bit que especifica los derechos de acceso que se van a auditar, convertidos a un entero.</span><span class="sxs-lookup"><span data-stu-id="b1768-212">A bitwise combination of <see cref="T:System.Security.AccessControl.RegistryRights" /> values specifying the access rights to audit, cast to an integer.</span></span></param>
        <param name="isInherited"><span data-ttu-id="b1768-213">Un valor booleano que especifica si se hereda la regla.</span><span class="sxs-lookup"><span data-stu-id="b1768-213">A Boolean value specifying whether the rule is inherited.</span></span></param>
        <param name="inheritanceFlags"><span data-ttu-id="b1768-214">Una combinación bit a bit de valores <see cref="T:System.Security.AccessControl.InheritanceFlags" /> que especifica cómo las subclaves heredan la regla.</span><span class="sxs-lookup"><span data-stu-id="b1768-214">A bitwise combination of <see cref="T:System.Security.AccessControl.InheritanceFlags" /> values specifying how the rule is inherited by subkeys.</span></span></param>
        <param name="propagationFlags"><span data-ttu-id="b1768-215">Una combinación bit a bit de valores <see cref="T:System.Security.AccessControl.PropagationFlags" /> que modifican la manera en que las subclaves heredan la regla.</span><span class="sxs-lookup"><span data-stu-id="b1768-215">A bitwise combination of <see cref="T:System.Security.AccessControl.PropagationFlags" /> values that modify the way the rule is inherited by subkeys.</span></span> <span data-ttu-id="b1768-216">No tiene sentido si el valor de <paramref name="inheritanceFlags" /> es <see cref="F:System.Security.AccessControl.InheritanceFlags.None" />.</span><span class="sxs-lookup"><span data-stu-id="b1768-216">Meaningless if the value of <paramref name="inheritanceFlags" /> is <see cref="F:System.Security.AccessControl.InheritanceFlags.None" />.</span></span></param>
        <param name="flags"><span data-ttu-id="b1768-217">Una combinación bit a bit de valores <see cref="T:System.Security.AccessControl.AuditFlags" /> que especifica si el resultado de la operación auditada de acceso es de éxito, error o ambos.</span><span class="sxs-lookup"><span data-stu-id="b1768-217">A bitwise combination of <see cref="T:System.Security.AccessControl.AuditFlags" /> values specifying whether to audit successful access, failed access, or both.</span></span></param>
        <summary><span data-ttu-id="b1768-218">Crea una nueva regla de auditoría, que especifica el usuario al que se aplica la regla, los derechos de acceso que se van a auditar, la herencia y propagación de la regla y el resultado que desencadena la regla.</span><span class="sxs-lookup"><span data-stu-id="b1768-218">Creates a new audit rule, specifying the user the rule applies to, the access rights to audit, the inheritance and propagation of the rule, and the outcome that triggers the rule.</span></span></summary>
        <returns><span data-ttu-id="b1768-219">Un objeto <see cref="T:System.Security.AccessControl.RegistryAuditRule" /> que representa la regla de auditoría indicada para el usuario especificado, con los marcadores especificados.</span><span class="sxs-lookup"><span data-stu-id="b1768-219">A <see cref="T:System.Security.AccessControl.RegistryAuditRule" /> object representing the specified audit rule for the specified user, with the specified flags.</span></span> <span data-ttu-id="b1768-220">El tipo de valor devuelto del método es la clase base, <see cref="T:System.Security.AccessControl.AuditRule" />, pero el valor devuelto se puede convertir sin ningún riesgo a la clase derivada.</span><span class="sxs-lookup"><span data-stu-id="b1768-220">The return type of the method is the base class, <see cref="T:System.Security.AccessControl.AuditRule" />, but the return value can be cast safely to the derived class.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1768-221">La manera recomendada para crear las reglas de auditoría es utilizar los constructores de la <xref:System.Security.AccessControl.RegistryAuditRule> clase.</span><span class="sxs-lookup"><span data-stu-id="b1768-221">The recommended way to create audit rules is to use the constructors of the <xref:System.Security.AccessControl.RegistryAuditRule> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b1768-222">Aunque puede especificar el <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit?displayProperty=nameWithType> marca, no hay ningún punto de hacerlo.</span><span class="sxs-lookup"><span data-stu-id="b1768-222">Although you can specify the <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit?displayProperty=nameWithType> flag, there is no point in doing so.</span></span> <span data-ttu-id="b1768-223">Para los fines de control de auditoría, los pares nombre/valor de una subclave no son objetos independientes.</span><span class="sxs-lookup"><span data-stu-id="b1768-223">For the purposes of audit control, the name/value pairs in a subkey are not separate objects.</span></span> <span data-ttu-id="b1768-224">Los derechos de auditoría para los pares nombre/valor son controlados por los derechos de la subclave.</span><span class="sxs-lookup"><span data-stu-id="b1768-224">The audit rights to name/value pairs are controlled by the rights of the subkey.</span></span> <span data-ttu-id="b1768-225">Además, dado que todas las subclaves son contenedores (es decir, puede contener otras subclaves), no se ven afectadas por la <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> marca.</span><span class="sxs-lookup"><span data-stu-id="b1768-225">Furthermore, since all subkeys are containers (that is, they can contain other subkeys), they are not affected by the <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> flag.</span></span> <span data-ttu-id="b1768-226">Por último, especificar el <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> marca innecesariamente complica el mantenimiento de reglas, puesto que interfiere con la combinación normal de reglas compatibles.</span><span class="sxs-lookup"><span data-stu-id="b1768-226">Finally, specifying the <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> flag needlessly complicates the maintenance of rules, because it interferes with the normal combination of compatible rules.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b1768-227"><paramref name="accessMask" />, <paramref name="inheritanceFlags" />, <paramref name="propagationFlags" /> o <paramref name="flags" /> especifican un valor no válido.</span><span class="sxs-lookup"><span data-stu-id="b1768-227"><paramref name="accessMask" />, <paramref name="inheritanceFlags" />, <paramref name="propagationFlags" />, or <paramref name="flags" /> specifies an invalid value.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b1768-228"><paramref name="identityReference" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b1768-228"><paramref name="identityReference" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="b1768-229">O bien</span><span class="sxs-lookup"><span data-stu-id="b1768-229">-or-</span></span> 
 <span data-ttu-id="b1768-230"><paramref name="accessMask" /> es cero.</span><span class="sxs-lookup"><span data-stu-id="b1768-230"><paramref name="accessMask" /> is zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b1768-231"><paramref name="identityReference" /> no es de tipo <see cref="T:System.Security.Principal.SecurityIdentifier" />, ni de un tipo que, como <see cref="T:System.Security.Principal.NTAccount" />, se pueda convertir al tipo <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span><span class="sxs-lookup"><span data-stu-id="b1768-231"><paramref name="identityReference" /> is neither of type <see cref="T:System.Security.Principal.SecurityIdentifier" />, nor of a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AuditRuleType">
      <MemberSignature Language="C#" Value="public override Type AuditRuleType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type AuditRuleType" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.RegistrySecurity.AuditRuleType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AuditRuleType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ AuditRuleType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AuditRuleType : Type" Usage="System.Security.AccessControl.RegistrySecurity.AuditRuleType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b1768-232">Obtiene el tipo que utiliza la clase <see cref="T:System.Security.AccessControl.RegistrySecurity" /> para representar las reglas de auditoría.</span><span class="sxs-lookup"><span data-stu-id="b1768-232">Gets the type that the <see cref="T:System.Security.AccessControl.RegistrySecurity" /> class uses to represent audit rules.</span></span></summary>
        <value><span data-ttu-id="b1768-233">Objeto <see cref="T:System.Type" /> que representa la clase <see cref="T:System.Security.AccessControl.RegistryAuditRule" />.</span><span class="sxs-lookup"><span data-stu-id="b1768-233">A <see cref="T:System.Type" /> object representing the <see cref="T:System.Security.AccessControl.RegistryAuditRule" /> class.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1768-234">Las clases que derivan de la <xref:System.Security.AccessControl.ObjectSecurity> clase invalidación el <xref:System.Security.AccessControl.ObjectSecurity.AuditRuleType%2A> propiedad y devuelva el tipo que se utilizan para representar los derechos de auditoría.</span><span class="sxs-lookup"><span data-stu-id="b1768-234">Classes that derive from the <xref:System.Security.AccessControl.ObjectSecurity> class override the <xref:System.Security.AccessControl.ObjectSecurity.AuditRuleType%2A> property and return the type they use to represent audit rights.</span></span> <span data-ttu-id="b1768-235">Cuando se trabaja con matrices o colecciones que contienen varios tipos de objetos de seguridad, use esta propiedad para determinar el tipo de regla de auditoría correcta para utilizar con cada objeto de seguridad.</span><span class="sxs-lookup"><span data-stu-id="b1768-235">When you work with arrays or collections that contain multiple types of security objects, use this property to determine the correct audit rule type to use with each security object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAccessRule">
      <MemberSignature Language="C#" Value="public bool RemoveAccessRule (System.Security.AccessControl.RegistryAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveAccessRule(class System.Security.AccessControl.RegistryAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.RegistrySecurity.RemoveAccessRule(System.Security.AccessControl.RegistryAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveAccessRule (rule As RegistryAccessRule) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveAccessRule(System::Security::AccessControl::RegistryAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.RemoveAccessRule : System.Security.AccessControl.RegistryAccessRule -&gt; bool" Usage="registrySecurity.RemoveAccessRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.RegistryAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule"><span data-ttu-id="b1768-236"><see cref="T:System.Security.AccessControl.RegistryAccessRule" /> que especifica el usuario y <see cref="T:System.Security.AccessControl.AccessControlType" /> que se va a buscar y un conjunto de marcadores de herencia y propagación con los que una regla coincidente, si se encuentra, debe ser compatible.</span><span class="sxs-lookup"><span data-stu-id="b1768-236">A <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> that specifies the user and <see cref="T:System.Security.AccessControl.AccessControlType" /> to search for, and a set of inheritance and propagation flags that a matching rule, if found, must be compatible with.</span></span> <span data-ttu-id="b1768-237">Especifica los derechos que se van a quitar de la regla compatible, si se encuentra.</span><span class="sxs-lookup"><span data-stu-id="b1768-237">Specifies the rights to remove from the compatible rule, if found.</span></span></param>
        <summary><span data-ttu-id="b1768-238">Busca una regla de control de acceso con el mismo usuario y <see cref="T:System.Security.AccessControl.AccessControlType" /> (conceder o denegar) que la regla de acceso especificada y con marcadores de herencia y propagación compatibles; si encuentra este tipo de regla, quita de ésta los derechos contenidos en la regla de acceso especificada.</span><span class="sxs-lookup"><span data-stu-id="b1768-238">Searches for an access control rule with the same user and <see cref="T:System.Security.AccessControl.AccessControlType" /> (allow or deny) as the specified access rule, and with compatible inheritance and propagation flags; if such a rule is found, the rights contained in the specified access rule are removed from it.</span></span></summary>
        <returns><span data-ttu-id="b1768-239">Es <see langword="true" /> si se ha encontrado una regla compatible; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b1768-239"><see langword="true" /> if a compatible rule is found; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1768-240">Actual <xref:System.Security.AccessControl.RegistrySecurity> se busca una regla que tenga el mismo usuario y el mismo <xref:System.Security.AccessControl.AccessControlType> valor como `rule`.</span><span class="sxs-lookup"><span data-stu-id="b1768-240">The current <xref:System.Security.AccessControl.RegistrySecurity> is searched for a rule that has the same user and the same <xref:System.Security.AccessControl.AccessControlType> value as `rule`.</span></span> <span data-ttu-id="b1768-241">Si no se encuentra ninguna de estas reglas, se realiza ninguna acción y el método devuelve `false`.</span><span class="sxs-lookup"><span data-stu-id="b1768-241">If no such rule is found, no action is taken, and the method returns `false`.</span></span> <span data-ttu-id="b1768-242">Si se encuentran las reglas de coincidencia, se comprueban los marcadores de herencia y compatibilidad para la compatibilidad con las marcas especificadas en `rule`.</span><span class="sxs-lookup"><span data-stu-id="b1768-242">If matching rules are found, their inheritance and compatibility flags are checked for compatibility with the flags specified in `rule`.</span></span> <span data-ttu-id="b1768-243">Si se encuentra ninguna regla compatible, se realiza ninguna acción y el método devuelve `false`.</span><span class="sxs-lookup"><span data-stu-id="b1768-243">If no compatible rule is found, no action is taken, and the method returns `false`.</span></span> <span data-ttu-id="b1768-244">Si se encuentra una regla con marcadores compatibles, los derechos especifican en `rule` se quitan de la regla compatible, y el método devuelve `true`.</span><span class="sxs-lookup"><span data-stu-id="b1768-244">If a rule with compatible flags is found, the rights specified in `rule` are removed from the compatible rule, and the method returns `true`.</span></span> <span data-ttu-id="b1768-245">Si `rule` especifica los derechos no contenidos en la regla compatible, se realiza ninguna acción con respecto a dichos derechos.</span><span class="sxs-lookup"><span data-stu-id="b1768-245">If `rule` specifies rights not contained in the compatible rule, no action is taken with respect to those rights.</span></span> <span data-ttu-id="b1768-246">Si se quitan todos los derechos de la regla compatible, se quita la regla completa actual <xref:System.Security.AccessControl.RegistrySecurity> objeto.</span><span class="sxs-lookup"><span data-stu-id="b1768-246">If all rights are removed from the compatible rule, the entire rule is removed from the current <xref:System.Security.AccessControl.RegistrySecurity> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b1768-247">El siguiente ejemplo de código muestra cómo el <xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRule%2A> método quita los derechos de una regla compatible y cómo el <xref:System.Security.AccessControl.RegistrySecurity.AddAccessRule%2A> método combina los derechos con reglas compatibles.</span><span class="sxs-lookup"><span data-stu-id="b1768-247">The following code example shows how the <xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRule%2A> method removes rights from a compatible rule, and how the <xref:System.Security.AccessControl.RegistrySecurity.AddAccessRule%2A> method merges rights with compatible rules.</span></span>  
  
 <span data-ttu-id="b1768-248">El ejemplo se crea un <xref:System.Security.AccessControl.RegistrySecurity> objeto y agrega una regla que permite al usuario actual <xref:System.Security.AccessControl.RegistryRights.ReadKey?displayProperty=nameWithType> derechos.</span><span class="sxs-lookup"><span data-stu-id="b1768-248">The example creates a <xref:System.Security.AccessControl.RegistrySecurity> object and adds a rule that allows the current user <xref:System.Security.AccessControl.RegistryRights.ReadKey?displayProperty=nameWithType> rights.</span></span> <span data-ttu-id="b1768-249">El ejemplo, a continuación, crea una regla que concede al usuario <xref:System.Security.AccessControl.RegistryRights.SetValue?displayProperty=nameWithType>, con la misma herencia y derechos de propagación que la primera regla y usa el <xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRule%2A> método para quitar esta nueva regla de la <xref:System.Security.AccessControl.RegistrySecurity> objeto.</span><span class="sxs-lookup"><span data-stu-id="b1768-249">The example then creates a rule that grants the user <xref:System.Security.AccessControl.RegistryRights.SetValue?displayProperty=nameWithType>, with the same inheritance and propagation rights as the first rule, and uses the <xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRule%2A> method to remove this new rule from the <xref:System.Security.AccessControl.RegistrySecurity> object.</span></span> <span data-ttu-id="b1768-250"><xref:System.Security.AccessControl.RegistryRights.SetValue> es un componente de <xref:System.Security.AccessControl.RegistryRights.ReadKey>, por lo que se quita de la regla compatible.</span><span class="sxs-lookup"><span data-stu-id="b1768-250"><xref:System.Security.AccessControl.RegistryRights.SetValue> is a constituent of <xref:System.Security.AccessControl.RegistryRights.ReadKey>, so it is removed from the compatible rule.</span></span> <span data-ttu-id="b1768-251">Las reglas en el <xref:System.Security.AccessControl.RegistrySecurity> objeto se muestran los componentes restantes de <xref:System.Security.AccessControl.RegistryRights.ReadKey>.</span><span class="sxs-lookup"><span data-stu-id="b1768-251">The rules in the <xref:System.Security.AccessControl.RegistrySecurity> object are displayed, showing the remaining constituents of <xref:System.Security.AccessControl.RegistryRights.ReadKey>.</span></span>  
  
 <span data-ttu-id="b1768-252">El código de ejemplo, a continuación, llama a la <xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRule%2A> método para combinar el <xref:System.Security.AccessControl.RegistryRights.SetValue> botón derecho en la regla en el <xref:System.Security.AccessControl.RegistrySecurity> objeto.</span><span class="sxs-lookup"><span data-stu-id="b1768-252">The example code then calls the <xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRule%2A> method to merge the <xref:System.Security.AccessControl.RegistryRights.SetValue> right back into the rule in the <xref:System.Security.AccessControl.RegistrySecurity> object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b1768-253">En este ejemplo no se adjunta el objeto de seguridad a un <xref:Microsoft.Win32.RegistryKey> objeto.</span><span class="sxs-lookup"><span data-stu-id="b1768-253">This example does not attach the security object to a <xref:Microsoft.Win32.RegistryKey> object.</span></span> <span data-ttu-id="b1768-254">El segundo ejemplo de esta sección adjunta un objeto de seguridad, y también lo hacen los ejemplos <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType> <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="b1768-254">The second example in this section attaches a security object, and so do the examples in <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType><xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.RegistrySecurity.RemoveAccessRule#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.RegistrySecurity.RemoveAccessRule/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.RegistrySecurity.RemoveAccessRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.RegistrySecurity.RemoveAccessRule/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b1768-255"><paramref name="rule" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b1768-255"><paramref name="rule" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAccessRuleAll">
      <MemberSignature Language="C#" Value="public void RemoveAccessRuleAll (System.Security.AccessControl.RegistryAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAccessRuleAll(class System.Security.AccessControl.RegistryAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleAll(System.Security.AccessControl.RegistryAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAccessRuleAll (rule As RegistryAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAccessRuleAll(System::Security::AccessControl::RegistryAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.RemoveAccessRuleAll : System.Security.AccessControl.RegistryAccessRule -&gt; unit" Usage="registrySecurity.RemoveAccessRuleAll rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.RegistryAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule"><span data-ttu-id="b1768-256"><see cref="T:System.Security.AccessControl.RegistryAccessRule" /> que especifica el usuario y <see cref="T:System.Security.AccessControl.AccessControlType" /> que se va a buscar.</span><span class="sxs-lookup"><span data-stu-id="b1768-256">A <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> that specifies the user and <see cref="T:System.Security.AccessControl.AccessControlType" /> to search for.</span></span> <span data-ttu-id="b1768-257">Se pasan por alto los derechos, los marcadores de herencia o los marcadores de propagación especificados por esta regla. </span><span class="sxs-lookup"><span data-stu-id="b1768-257">Any rights, inheritance flags, or propagation flags specified by this rule are ignored.</span></span></param>
        <summary><span data-ttu-id="b1768-258">Busca todas las reglas de control de acceso con el mismo usuario y <see cref="T:System.Security.AccessControl.AccessControlType" /> (conceder o denegar) que la regla especificada y, si las encuentra, las quita.</span><span class="sxs-lookup"><span data-stu-id="b1768-258">Searches for all access control rules with the same user and <see cref="T:System.Security.AccessControl.AccessControlType" /> (allow or deny) as the specified rule and, if found, removes them.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1768-259">Actual <xref:System.Security.AccessControl.RegistrySecurity> se busca en las reglas que tienen el mismo usuario y el mismo <xref:System.Security.AccessControl.AccessControlType> valor como `rule`.</span><span class="sxs-lookup"><span data-stu-id="b1768-259">The current <xref:System.Security.AccessControl.RegistrySecurity> is searched for rules that have the same user and the same <xref:System.Security.AccessControl.AccessControlType> value as `rule`.</span></span> <span data-ttu-id="b1768-260">Los derechos, marcadores de herencia o marcadores de propagación especificados por `rule` se omiten al realizar esta búsqueda.</span><span class="sxs-lookup"><span data-stu-id="b1768-260">Any rights, inheritance flags, or propagation flags specified by `rule` are ignored when performing this search.</span></span> <span data-ttu-id="b1768-261">Si no se encuentra ninguna regla coincidente, se realiza ninguna acción.</span><span class="sxs-lookup"><span data-stu-id="b1768-261">If no matching rules are found, no action is taken.</span></span>  
  
 <span data-ttu-id="b1768-262">Por ejemplo, si un usuario tiene varias reglas que conceden derechos distintos con diferentes marcadores de herencia y propagación, puede quitar todas esas reglas mediante la creación de un <xref:System.Security.AccessControl.RegistryAccessRule> objeto que especifica el usuario y <xref:System.Security.AccessControl.AccessControlType.Allow?displayProperty=nameWithType>, con los derechos arbitrarios y las marcas, y pasar esa regla para el <xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleAll%2A> método.</span><span class="sxs-lookup"><span data-stu-id="b1768-262">For example, if a user has multiple rules that allow various rights with different inheritance and propagation flags, you can remove all those rules by creating a <xref:System.Security.AccessControl.RegistryAccessRule> object that specifies the user and <xref:System.Security.AccessControl.AccessControlType.Allow?displayProperty=nameWithType>, with any arbitrary rights and flags, and passing that rule to the <xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleAll%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b1768-263">En el ejemplo de código siguiente se muestra que el <xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleAll%2A> método quita todas las reglas que coinciden con el usuario y <xref:System.Security.AccessControl.AccessControlType>, omitiendo los derechos e indicadores.</span><span class="sxs-lookup"><span data-stu-id="b1768-263">The following code example shows that the <xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleAll%2A> method removes all rules that match user and <xref:System.Security.AccessControl.AccessControlType>, ignoring rights and flags.</span></span>  
  
 <span data-ttu-id="b1768-264">El ejemplo se crea un <xref:System.Security.AccessControl.RegistrySecurity> de objeto y se agregan reglas que conceden y deniegan diferentes derechos para el usuario actual, con marcadores de herencia y propagación diferentes.</span><span class="sxs-lookup"><span data-stu-id="b1768-264">The example creates a <xref:System.Security.AccessControl.RegistrySecurity> object and adds rules that allow and deny various rights for the current user, with different inheritance and propagation flags.</span></span> <span data-ttu-id="b1768-265">El ejemplo, a continuación, crea una nueva regla que permite al usuario tomar posesión actual y pasa esa regla para el <xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleAll%2A> método para quitar las dos reglas que permiten el acceso.</span><span class="sxs-lookup"><span data-stu-id="b1768-265">The example then creates a new rule that allows the current user to take ownership, and passes that rule to the <xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleAll%2A> method to remove the two rules that allow access.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b1768-266">En este ejemplo no se adjunta el objeto de seguridad a un <xref:Microsoft.Win32.RegistryKey> objeto.</span><span class="sxs-lookup"><span data-stu-id="b1768-266">This example does not attach the security object to a <xref:Microsoft.Win32.RegistryKey> object.</span></span> <span data-ttu-id="b1768-267">Consulte la <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType> método y el <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="b1768-267">See the <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType> method and the <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType> method.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleAll#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.RegistrySecurity.RemoveAccessRuleAll/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleAll#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.RegistrySecurity.RemoveAccessRuleAll/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b1768-268"><paramref name="rule" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b1768-268"><paramref name="rule" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAccessRuleSpecific">
      <MemberSignature Language="C#" Value="public void RemoveAccessRuleSpecific (System.Security.AccessControl.RegistryAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAccessRuleSpecific(class System.Security.AccessControl.RegistryAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.RegistryAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAccessRuleSpecific (rule As RegistryAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAccessRuleSpecific(System::Security::AccessControl::RegistryAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.RemoveAccessRuleSpecific : System.Security.AccessControl.RegistryAccessRule -&gt; unit" Usage="registrySecurity.RemoveAccessRuleSpecific rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.RegistryAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule"><span data-ttu-id="b1768-269"><see cref="T:System.Security.AccessControl.RegistryAccessRule" /> que se va a quitar.</span><span class="sxs-lookup"><span data-stu-id="b1768-269">The <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> to remove.</span></span></param>
        <summary><span data-ttu-id="b1768-270">Busca una regla de control de acceso que coincida exactamente con la regla especificada y, si la encuentra, la quita.</span><span class="sxs-lookup"><span data-stu-id="b1768-270">Searches for an access control rule that exactly matches the specified rule and, if found, removes it.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1768-271">La regla se quitarán solo si coincide exactamente con `rule` en todos los detalles, incluidas marcas.</span><span class="sxs-lookup"><span data-stu-id="b1768-271">The rule is removed only if it exactly matches `rule` in all details, including flags.</span></span> <span data-ttu-id="b1768-272">Otras reglas con el mismo usuario y <xref:System.Security.AccessControl.AccessControlType> no se ven afectados.</span><span class="sxs-lookup"><span data-stu-id="b1768-272">Other rules with the same user and <xref:System.Security.AccessControl.AccessControlType> are not affected.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="b1768-273">Una regla representa una o más entradas de control de acceso (ACE) subyacentes y estas entradas se dividen o se combinan según sea necesario cuando se modifican las reglas de seguridad de acceso para un usuario.</span><span class="sxs-lookup"><span data-stu-id="b1768-273">A rule represents one or more underlying access control entries (ACE), and these entries are split or combined as necessary when you modify the access security rules for a user.</span></span> <span data-ttu-id="b1768-274">Por lo tanto, una regla que ya no exista en la forma concreta que tenía cuando se agregó y, en ese caso el <xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleSpecific%2A> método no puede quitarla.</span><span class="sxs-lookup"><span data-stu-id="b1768-274">Thus, a rule might no longer exist in the specific form it had when it was added, and in that case the <xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleSpecific%2A> method cannot remove it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b1768-275">En el ejemplo de código siguiente se muestra que el <xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleSpecific%2A> método quita una regla solo si coincide exactamente.</span><span class="sxs-lookup"><span data-stu-id="b1768-275">The following code example shows that the <xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleSpecific%2A> method removes a rule only if it matches exactly.</span></span>  
  
 <span data-ttu-id="b1768-276">El ejemplo crea dos reglas que conceden derechos diferentes.</span><span class="sxs-lookup"><span data-stu-id="b1768-276">The example creates two rules that allow different rights.</span></span> <span data-ttu-id="b1768-277">Las reglas tienen marcadores de herencia y propagación compatibles, por lo que cuando se agrega la segunda regla se combina con la primera.</span><span class="sxs-lookup"><span data-stu-id="b1768-277">The rules have compatible inheritance and propagation flags, so when the second rule is added it merges with the first.</span></span> <span data-ttu-id="b1768-278">El ejemplo llama a la <xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleSpecific%2A> método, especificando la primera regla, pero dado que se combinan las reglas no hay ninguna regla que coincida con.</span><span class="sxs-lookup"><span data-stu-id="b1768-278">The example calls the <xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleSpecific%2A> method, specifying the first rule, but because the rules are merged there is no rule that matches.</span></span> <span data-ttu-id="b1768-279">El ejemplo llama a la <xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRule%2A> método para quitar la segunda regla de la regla combinada y, por último, llama a la <xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleSpecific%2A> método para quitar la primera regla.</span><span class="sxs-lookup"><span data-stu-id="b1768-279">The example then calls the <xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRule%2A> method to the remove the second rule from the merged rule, and finally calls the <xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleSpecific%2A> method to remove the first rule.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b1768-280">En este ejemplo no se adjunta el objeto de seguridad a un <xref:Microsoft.Win32.RegistryKey> objeto.</span><span class="sxs-lookup"><span data-stu-id="b1768-280">This example does not attach the security object to a <xref:Microsoft.Win32.RegistryKey> object.</span></span> <span data-ttu-id="b1768-281">Consulte la <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType> método y el <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="b1768-281">See the <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType> method and the <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType> method.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleSpecific#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.RegistrySecurity.RemoveAccessRuleSpecific/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleSpecific#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.RegistrySecurity.RemoveAccessRuleSpecific/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b1768-282"><paramref name="rule" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b1768-282"><paramref name="rule" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAuditRule">
      <MemberSignature Language="C#" Value="public bool RemoveAuditRule (System.Security.AccessControl.RegistryAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveAuditRule(class System.Security.AccessControl.RegistryAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.RegistrySecurity.RemoveAuditRule(System.Security.AccessControl.RegistryAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveAuditRule (rule As RegistryAuditRule) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveAuditRule(System::Security::AccessControl::RegistryAuditRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.RemoveAuditRule : System.Security.AccessControl.RegistryAuditRule -&gt; bool" Usage="registrySecurity.RemoveAuditRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.RegistryAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule"><span data-ttu-id="b1768-283"><see cref="T:System.Security.AccessControl.RegistryAuditRule" /> que especifica el usuario que se va a buscar y un conjunto de marcadores de herencia y propagación con los que una regla coincidente, si se encuentra, debe ser compatible.</span><span class="sxs-lookup"><span data-stu-id="b1768-283">A <see cref="T:System.Security.AccessControl.RegistryAuditRule" /> that specifies the user to search for, and a set of inheritance and propagation flags that a matching rule, if found, must be compatible with.</span></span> <span data-ttu-id="b1768-284">Especifica los derechos que se van a quitar de la regla compatible, si se encuentra.</span><span class="sxs-lookup"><span data-stu-id="b1768-284">Specifies the rights to remove from the compatible rule, if found.</span></span></param>
        <summary><span data-ttu-id="b1768-285">Busca una regla de control de auditoría con el mismo usuario que la regla especificada y con marcadores de herencia y propagación compatibles; si encuentra una regla compatible, quita de ésta los derechos contenidos en la regla especificada.</span><span class="sxs-lookup"><span data-stu-id="b1768-285">Searches for an audit control rule with the same user as the specified rule, and with compatible inheritance and propagation flags; if a compatible rule is found, the rights contained in the specified rule are removed from it.</span></span></summary>
        <returns><span data-ttu-id="b1768-286"><see langword="true" /> si se ha encontrado una regla compatible; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b1768-286"><see langword="true" /> if a compatible rule is found; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1768-287">Actual <xref:System.Security.AccessControl.RegistrySecurity> se busca una regla de auditoría que tenga el mismo usuario que `rule`.</span><span class="sxs-lookup"><span data-stu-id="b1768-287">The current <xref:System.Security.AccessControl.RegistrySecurity> is searched for an audit rule that has the same user as `rule`.</span></span> <span data-ttu-id="b1768-288">Si no se encuentra ninguna de estas reglas, se realiza ninguna acción y el método devuelve `false`.</span><span class="sxs-lookup"><span data-stu-id="b1768-288">If no such rule is found, no action is taken, and the method returns `false`.</span></span> <span data-ttu-id="b1768-289">Si se encuentran las reglas de coincidencia, se comprueban los marcadores de herencia y compatibilidad para la compatibilidad con las marcas especificadas en `rule`.</span><span class="sxs-lookup"><span data-stu-id="b1768-289">If matching rules are found, their inheritance and compatibility flags are checked for compatibility with the flags specified in `rule`.</span></span> <span data-ttu-id="b1768-290">Si se encuentra ninguna regla compatible, se realiza ninguna acción y el método devuelve `false`.</span><span class="sxs-lookup"><span data-stu-id="b1768-290">If no compatible rule is found, no action is taken, and the method returns `false`.</span></span> <span data-ttu-id="b1768-291">Si se encuentra una regla con marcadores compatibles, los derechos especifican en `rule` se quitan de la regla compatible, y el método devuelve `true`.</span><span class="sxs-lookup"><span data-stu-id="b1768-291">If a rule with compatible flags is found, the rights specified in `rule` are removed from the compatible rule, and the method returns `true`.</span></span> <span data-ttu-id="b1768-292">Si `rule` especifica los derechos no contenidos en la regla compatible, se realiza ninguna acción con respecto a dichos derechos.</span><span class="sxs-lookup"><span data-stu-id="b1768-292">If `rule` specifies rights not contained in the compatible rule, no action is taken with respect to those rights.</span></span> <span data-ttu-id="b1768-293">Si se quitan todos los derechos de la regla compatible, se quita la regla completa actual <xref:System.Security.AccessControl.RegistrySecurity> objeto.</span><span class="sxs-lookup"><span data-stu-id="b1768-293">If all rights are removed from the compatible rule, the entire rule is removed from the current <xref:System.Security.AccessControl.RegistrySecurity> object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b1768-294"><paramref name="rule" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b1768-294"><paramref name="rule" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAuditRuleAll">
      <MemberSignature Language="C#" Value="public void RemoveAuditRuleAll (System.Security.AccessControl.RegistryAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAuditRuleAll(class System.Security.AccessControl.RegistryAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.RegistrySecurity.RemoveAuditRuleAll(System.Security.AccessControl.RegistryAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAuditRuleAll (rule As RegistryAuditRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAuditRuleAll(System::Security::AccessControl::RegistryAuditRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.RemoveAuditRuleAll : System.Security.AccessControl.RegistryAuditRule -&gt; unit" Usage="registrySecurity.RemoveAuditRuleAll rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.RegistryAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule"><span data-ttu-id="b1768-295"><see cref="T:System.Security.AccessControl.RegistryAuditRule" /> que especifica el usuario que se va a buscar.</span><span class="sxs-lookup"><span data-stu-id="b1768-295">A <see cref="T:System.Security.AccessControl.RegistryAuditRule" /> that specifies the user to search for.</span></span> <span data-ttu-id="b1768-296">Se pasan por alto los derechos, los marcadores de herencia o los marcadores de propagación especificados por esta regla. </span><span class="sxs-lookup"><span data-stu-id="b1768-296">Any rights, inheritance flags, or propagation flags specified by this rule are ignored.</span></span></param>
        <summary><span data-ttu-id="b1768-297">Busca todas las reglas de auditoría con el mismo usuario que la regla especificada y, si las encuentra, las quita.</span><span class="sxs-lookup"><span data-stu-id="b1768-297">Searches for all audit rules with the same user as the specified rule and, if found, removes them.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1768-298">Actual <xref:System.Security.AccessControl.RegistrySecurity> se busca en las reglas de auditoría que tienen el mismo usuario que `rule`.</span><span class="sxs-lookup"><span data-stu-id="b1768-298">The current <xref:System.Security.AccessControl.RegistrySecurity> is searched for audit rules that have the same user as `rule`.</span></span> <span data-ttu-id="b1768-299">Los derechos, marcadores de herencia o marcadores de propagación especificados por `rule` se omiten al realizar esta búsqueda.</span><span class="sxs-lookup"><span data-stu-id="b1768-299">Any rights, inheritance flags, or propagation flags specified by `rule` are ignored when performing this search.</span></span> <span data-ttu-id="b1768-300">Si no se encuentra ninguna regla coincidente, se realiza ninguna acción.</span><span class="sxs-lookup"><span data-stu-id="b1768-300">If no matching rules are found, no action is taken.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b1768-301"><paramref name="rule" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b1768-301"><paramref name="rule" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAuditRuleSpecific">
      <MemberSignature Language="C#" Value="public void RemoveAuditRuleSpecific (System.Security.AccessControl.RegistryAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAuditRuleSpecific(class System.Security.AccessControl.RegistryAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.RegistrySecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.RegistryAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAuditRuleSpecific (rule As RegistryAuditRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAuditRuleSpecific(System::Security::AccessControl::RegistryAuditRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.RemoveAuditRuleSpecific : System.Security.AccessControl.RegistryAuditRule -&gt; unit" Usage="registrySecurity.RemoveAuditRuleSpecific rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.RegistryAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule"><span data-ttu-id="b1768-302"><see cref="T:System.Security.AccessControl.RegistryAuditRule" /> que se va a quitar.</span><span class="sxs-lookup"><span data-stu-id="b1768-302">The <see cref="T:System.Security.AccessControl.RegistryAuditRule" /> to be removed.</span></span></param>
        <summary><span data-ttu-id="b1768-303">Busca una regla de auditoría que coincida exactamente con la regla especificada y, si la encuentra, la quita.</span><span class="sxs-lookup"><span data-stu-id="b1768-303">Searches for an audit rule that exactly matches the specified rule and, if found, removes it.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1768-304">La regla se quitarán solo si coincide exactamente con `rule` en todos los detalles, incluidas marcas.</span><span class="sxs-lookup"><span data-stu-id="b1768-304">The rule is removed only if it exactly matches `rule` in all details, including flags.</span></span> <span data-ttu-id="b1768-305">No se ven afectadas otras reglas de auditoría para el mismo usuario.</span><span class="sxs-lookup"><span data-stu-id="b1768-305">Other audit rules for the same user are not affected.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="b1768-306">Una regla representa una o más entradas de control de acceso (ACE) subyacentes y estas entradas se dividen o se combinan según sea necesario cuando se modifican las reglas de seguridad de auditoría para un usuario.</span><span class="sxs-lookup"><span data-stu-id="b1768-306">A rule represents one or more underlying access control entries (ACE), and these entries are split or combined as necessary when you modify the audit security rules for a user.</span></span> <span data-ttu-id="b1768-307">Por lo tanto, una regla que ya no exista en la forma concreta que tenía cuando se agregó y, en ese caso el <xref:System.Security.AccessControl.RegistrySecurity.RemoveAuditRuleSpecific%2A> método no puede quitarla.</span><span class="sxs-lookup"><span data-stu-id="b1768-307">Thus, a rule might no longer exist in the specific form it had when it was added, and in that case the <xref:System.Security.AccessControl.RegistrySecurity.RemoveAuditRuleSpecific%2A> method cannot remove it.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b1768-308"><paramref name="rule" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b1768-308"><paramref name="rule" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ResetAccessRule">
      <MemberSignature Language="C#" Value="public void ResetAccessRule (System.Security.AccessControl.RegistryAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetAccessRule(class System.Security.AccessControl.RegistryAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.RegistrySecurity.ResetAccessRule(System.Security.AccessControl.RegistryAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetAccessRule (rule As RegistryAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetAccessRule(System::Security::AccessControl::RegistryAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.ResetAccessRule : System.Security.AccessControl.RegistryAccessRule -&gt; unit" Usage="registrySecurity.ResetAccessRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.RegistryAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule"><span data-ttu-id="b1768-309"><see cref="T:System.Security.AccessControl.RegistryAccessRule" /> que se va a agregar.</span><span class="sxs-lookup"><span data-stu-id="b1768-309">The <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> to add.</span></span> <span data-ttu-id="b1768-310">El usuario especificado por esta regla determina las reglas que se van a quitar antes de agregar esta regla.</span><span class="sxs-lookup"><span data-stu-id="b1768-310">The user specified by this rule determines the rules to remove before this rule is added.</span></span></param>
        <summary><span data-ttu-id="b1768-311">Quita todas las reglas de control de acceso con el mismo usuario que la regla especificada, independientemente de <see cref="T:System.Security.AccessControl.AccessControlType" />, y, a continuación, agrega la regla especificada.</span><span class="sxs-lookup"><span data-stu-id="b1768-311">Removes all access control rules with the same user as the specified rule, regardless of <see cref="T:System.Security.AccessControl.AccessControlType" />, and then adds the specified rule.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1768-312">Si no hay ninguna regla de acceso cuyo usuario coincide con la regla especificada, `rule` se agrega.</span><span class="sxs-lookup"><span data-stu-id="b1768-312">If there are no access rules whose user matches the specified rule, `rule` is added.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b1768-313">El siguiente ejemplo de código muestra cómo el <xref:System.Security.AccessControl.RegistrySecurity.ResetAccessRule%2A> método reemplaza todas las reglas de usuario coincidentes con la regla especificada para la coincidencia.</span><span class="sxs-lookup"><span data-stu-id="b1768-313">The following code example shows how the <xref:System.Security.AccessControl.RegistrySecurity.ResetAccessRule%2A> method replaces all rules for the matching user with the rule specified for the match.</span></span>  
  
 <span data-ttu-id="b1768-314">El ejemplo se crea un <xref:System.Security.AccessControl.RegistrySecurity> de objeto y se agregan reglas que conceden y deniegan diferentes derechos para el usuario actual, con marcadores de herencia y propagación diferentes.</span><span class="sxs-lookup"><span data-stu-id="b1768-314">The example creates a <xref:System.Security.AccessControl.RegistrySecurity> object and adds rules that allow and deny various rights for the current user, with different inheritance and propagation flags.</span></span> <span data-ttu-id="b1768-315">El ejemplo, a continuación, crea una nueva regla que permite al usuario solo leer la clave actual y usa el <xref:System.Security.AccessControl.RegistrySecurity.ResetAccessRule%2A> método para quitar todas las reglas para el usuario y reemplazarlos por la nueva regla.</span><span class="sxs-lookup"><span data-stu-id="b1768-315">The example then creates a new rule that allows the current user only to read the key, and uses the <xref:System.Security.AccessControl.RegistrySecurity.ResetAccessRule%2A> method to remove the all rules for the user and replace them with the new rule.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b1768-316">En este ejemplo no se adjunta el objeto de seguridad a un <xref:Microsoft.Win32.RegistryKey> objeto.</span><span class="sxs-lookup"><span data-stu-id="b1768-316">This example does not attach the security object to a <xref:Microsoft.Win32.RegistryKey> object.</span></span> <span data-ttu-id="b1768-317">Consulte la <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType> método y el <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="b1768-317">See the <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType> method and the <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType> method.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.RegistrySecurity.ResetAccessRule#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.RegistrySecurity.ResetAccessRule/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.RegistrySecurity.ResetAccessRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.RegistrySecurity.ResetAccessRule/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAccessRule">
      <MemberSignature Language="C#" Value="public void SetAccessRule (System.Security.AccessControl.RegistryAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAccessRule(class System.Security.AccessControl.RegistryAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.RegistrySecurity.SetAccessRule(System.Security.AccessControl.RegistryAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAccessRule (rule As RegistryAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAccessRule(System::Security::AccessControl::RegistryAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.SetAccessRule : System.Security.AccessControl.RegistryAccessRule -&gt; unit" Usage="registrySecurity.SetAccessRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.RegistryAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule"><span data-ttu-id="b1768-318"><see cref="T:System.Security.AccessControl.RegistryAccessRule" /> que se va a agregar.</span><span class="sxs-lookup"><span data-stu-id="b1768-318">The <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> to add.</span></span> <span data-ttu-id="b1768-319">El usuario y el objeto <see cref="T:System.Security.AccessControl.AccessControlType" /> de esta regla determinan las reglas que se van a quitar antes de agregar esta regla.</span><span class="sxs-lookup"><span data-stu-id="b1768-319">The user and <see cref="T:System.Security.AccessControl.AccessControlType" /> of this rule determine the rules to remove before this rule is added.</span></span></param>
        <summary><span data-ttu-id="b1768-320">Quita todas las reglas de control de acceso con el mismo usuario y <see cref="T:System.Security.AccessControl.AccessControlType" /> (conceder o denegar) que la regla especificada y, a continuación, agrega la regla especificada.</span><span class="sxs-lookup"><span data-stu-id="b1768-320">Removes all access control rules with the same user and <see cref="T:System.Security.AccessControl.AccessControlType" /> (allow or deny) as the specified rule, and then adds the specified rule.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1768-321">Si la regla especificada tiene <xref:System.Security.AccessControl.AccessControlType.Allow>, es el efecto de este método quitar todos los <xref:System.Security.AccessControl.AccessControlType.Allow> reglas para el usuario especificado, reemplazándolos por la regla especificada.</span><span class="sxs-lookup"><span data-stu-id="b1768-321">If the specified rule has <xref:System.Security.AccessControl.AccessControlType.Allow>, the effect of this method is to remove all <xref:System.Security.AccessControl.AccessControlType.Allow> rules for the specified user, replacing them with the specified rule.</span></span> <span data-ttu-id="b1768-322">Si la regla especificada tiene <xref:System.Security.AccessControl.AccessControlType.Deny>, todos los <xref:System.Security.AccessControl.AccessControlType.Deny> reglas para el usuario especificado se reemplazan por la regla especificada.</span><span class="sxs-lookup"><span data-stu-id="b1768-322">If the specified rule has <xref:System.Security.AccessControl.AccessControlType.Deny>, all <xref:System.Security.AccessControl.AccessControlType.Deny> rules for the specified user are replaced with the specified rule.</span></span>  
  
 <span data-ttu-id="b1768-323">Si no hay ninguna regla cuyo usuario y <xref:System.Security.AccessControl.AccessControlType> coincide con la regla especificada, `rule` se agrega.</span><span class="sxs-lookup"><span data-stu-id="b1768-323">If there are no rules whose user and <xref:System.Security.AccessControl.AccessControlType> match the specified rule, `rule` is added.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b1768-324">En el ejemplo de código siguiente se muestra que el <xref:System.Security.AccessControl.RegistrySecurity.SetAccessRule%2A> método quita todas las reglas que coinciden con el usuario y la <xref:System.Security.AccessControl.AccessControlType> de `rule`, omitiendo los derechos e indicadores y los reemplaza con `rule`.</span><span class="sxs-lookup"><span data-stu-id="b1768-324">The following code example shows that the <xref:System.Security.AccessControl.RegistrySecurity.SetAccessRule%2A> method removes all rules that match both the user and the <xref:System.Security.AccessControl.AccessControlType> of `rule`, ignoring rights and flags, and replaces them with `rule`.</span></span>  
  
 <span data-ttu-id="b1768-325">El ejemplo se crea un <xref:System.Security.AccessControl.RegistrySecurity> de objeto y se agregan reglas que conceden y deniegan diferentes derechos para el usuario actual, con marcadores de herencia y propagación diferentes.</span><span class="sxs-lookup"><span data-stu-id="b1768-325">The example creates a <xref:System.Security.AccessControl.RegistrySecurity> object and adds rules that allow and deny various rights for the current user, with different inheritance and propagation flags.</span></span> <span data-ttu-id="b1768-326">El ejemplo, a continuación, crea una nueva regla que permite al usuario solo leer la clave actual y usa el <xref:System.Security.AccessControl.RegistrySecurity.SetAccessRule%2A> método para quitar las dos reglas que permiten el acceso y reemplazarlos por la nueva regla.</span><span class="sxs-lookup"><span data-stu-id="b1768-326">The example then creates a new rule that allows the current user only to read the key, and uses the <xref:System.Security.AccessControl.RegistrySecurity.SetAccessRule%2A> method to remove the two rules that allow access and to replace them with the new rule.</span></span> <span data-ttu-id="b1768-327">No se ve afectada la regla que deniegue el acceso.</span><span class="sxs-lookup"><span data-stu-id="b1768-327">The rule that denies access is not affected.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b1768-328">En este ejemplo no se adjunta el objeto de seguridad a un <xref:Microsoft.Win32.RegistryKey> objeto.</span><span class="sxs-lookup"><span data-stu-id="b1768-328">This example does not attach the security object to a <xref:Microsoft.Win32.RegistryKey> object.</span></span> <span data-ttu-id="b1768-329">Consulte la <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType> método y el <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="b1768-329">See the <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType> method and the <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType> method.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.RegistrySecurity.SetAccessRule#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.RegistrySecurity.SetAccessRule/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.RegistrySecurity.SetAccessRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.RegistrySecurity.SetAccessRule/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b1768-330"><paramref name="rule" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b1768-330"><paramref name="rule" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetAuditRule">
      <MemberSignature Language="C#" Value="public void SetAuditRule (System.Security.AccessControl.RegistryAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAuditRule(class System.Security.AccessControl.RegistryAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.RegistrySecurity.SetAuditRule(System.Security.AccessControl.RegistryAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAuditRule (rule As RegistryAuditRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAuditRule(System::Security::AccessControl::RegistryAuditRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.SetAuditRule : System.Security.AccessControl.RegistryAuditRule -&gt; unit" Usage="registrySecurity.SetAuditRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.RegistryAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule"><span data-ttu-id="b1768-331"><see cref="T:System.Security.AccessControl.RegistryAuditRule" /> que se va a agregar.</span><span class="sxs-lookup"><span data-stu-id="b1768-331">The <see cref="T:System.Security.AccessControl.RegistryAuditRule" /> to add.</span></span> <span data-ttu-id="b1768-332">El usuario especificado por esta regla determina las reglas que se van a quitar antes de agregar esta regla.</span><span class="sxs-lookup"><span data-stu-id="b1768-332">The user specified by this rule determines the rules to remove before this rule is added.</span></span></param>
        <summary><span data-ttu-id="b1768-333">Quita todas las reglas de auditoría con el mismo usuario que la regla especificada, sin tener en cuenta el valor de <see cref="T:System.Security.AccessControl.AuditFlags" />, y, a continuación, agrega la regla especificada.</span><span class="sxs-lookup"><span data-stu-id="b1768-333">Removes all audit rules with the same user as the specified rule, regardless of the <see cref="T:System.Security.AccessControl.AuditFlags" /> value, and then adds the specified rule.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1768-334">Si no hay ninguna regla de auditoría cuyo usuario coincide con la regla especificada, `rule` se agrega.</span><span class="sxs-lookup"><span data-stu-id="b1768-334">If there are no audit rules whose user matches the specified rule, `rule` is added.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b1768-335"><paramref name="rule" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b1768-335"><paramref name="rule" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
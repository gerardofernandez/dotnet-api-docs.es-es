<Type Name="CommonAcl" FullName="System.Security.AccessControl.CommonAcl">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7ed9c6867806a346d0490130f4e1d6cc262b19e7" /><Meta Name="ms.sourcegitcommit" Value="42a3c35677e9d87eeb503607ae50c9d39827d414" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="12/17/2018" /><Meta Name="ms.locfileid" Value="53460077" /></Metadata><TypeSignature Language="C#" Value="public abstract class CommonAcl : System.Security.AccessControl.GenericAcl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit CommonAcl extends System.Security.AccessControl.GenericAcl" />
  <TypeSignature Language="DocId" Value="T:System.Security.AccessControl.CommonAcl" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class CommonAcl&#xA;Inherits GenericAcl" />
  <TypeSignature Language="C++ CLI" Value="public ref class CommonAcl abstract : System::Security::AccessControl::GenericAcl" />
  <TypeSignature Language="F#" Value="type CommonAcl = class&#xA;    inherit GenericAcl" />
  <AssemblyInfo>
    <AssemblyName>System.Security.AccessControl</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.AccessControl.GenericAcl</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="e8bea-101">Representa una lista de control de acceso (ACL) y es la clase base de las clases <see cref="T:System.Security.AccessControl.DiscretionaryAcl" /> y <see cref="T:System.Security.AccessControl.SystemAcl" />.</span><span class="sxs-lookup"><span data-stu-id="e8bea-101">Represents an access control list (ACL) and is the base class for the <see cref="T:System.Security.AccessControl.DiscretionaryAcl" /> and <see cref="T:System.Security.AccessControl.SystemAcl" /> classes.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
-   <span data-ttu-id="e8bea-102">Ciertas combinaciones de herencia y los indicadores de máscara de acceso tienen sentido:</span><span class="sxs-lookup"><span data-stu-id="e8bea-102">Certain combinations of inheritance and access mask flags are meaningless:</span></span>  
  
-   <span data-ttu-id="e8bea-103">Se quita cualquier entrada de control de acceso (ACE) con una máscara de acceso de cero.</span><span class="sxs-lookup"><span data-stu-id="e8bea-103">Any access control entry (ACE) with a zero-access mask is removed.</span></span>  
  
-   <span data-ttu-id="e8bea-104">Se quitan las ACE de sólo heredar dentro de las ACL de objetos.</span><span class="sxs-lookup"><span data-stu-id="e8bea-104">Inherit-only ACEs inside object ACLs are removed.</span></span>  
  
-   <span data-ttu-id="e8bea-105"><xref:System.Security.AccessControl.PropagationFlags.InheritOnly>, <xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit>, <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit>, y <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> marcas en todas las ACE de hoja se borran las ACL de objetos.</span><span class="sxs-lookup"><span data-stu-id="e8bea-105"><xref:System.Security.AccessControl.PropagationFlags.InheritOnly>, <xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit>, <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit>, and <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> flags on all ACEs in leaf object ACLs are cleared.</span></span>  
  
-   <span data-ttu-id="e8bea-106">Las ACE que tienen un <xref:System.Security.AccessControl.PropagationFlags.InheritOnly> marca en ausencia de la <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit> o <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> marca no tienen sentida, y se quitan.</span><span class="sxs-lookup"><span data-stu-id="e8bea-106">ACEs that have an <xref:System.Security.AccessControl.PropagationFlags.InheritOnly> flag in the absence of the <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit> or <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> flag are meaningless; they are removed.</span></span>  
  
-   <span data-ttu-id="e8bea-107">El <xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit> marca en ausencia de la <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit> o <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> se puede quitar la marca.</span><span class="sxs-lookup"><span data-stu-id="e8bea-107">The <xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit> flag in the absence of the <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit> or <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> flag can be removed.</span></span>  
  
-   <span data-ttu-id="e8bea-108">Las ACE que tienen un <xref:System.Security.AccessControl.AuditFlags> valor <xref:System.Security.AccessControl.AuditFlags.Success> o <xref:System.Security.AccessControl.AuditFlags.Failure> en control de acceso discrecional (DACL) de listas se quitan.</span><span class="sxs-lookup"><span data-stu-id="e8bea-108">ACEs that have an <xref:System.Security.AccessControl.AuditFlags> value of <xref:System.Security.AccessControl.AuditFlags.Success> or <xref:System.Security.AccessControl.AuditFlags.Failure> in discretionary access control lists (DACLs) are removed.</span></span>  
  
-   <span data-ttu-id="e8bea-109">Cualquier ACE que no especifica de auditoría <xref:System.Security.AccessControl.AuditFlags.Success> o <xref:System.Security.AccessControl.AuditFlags.Failure> se quita.</span><span class="sxs-lookup"><span data-stu-id="e8bea-109">Any audit ACE that does not specify either <xref:System.Security.AccessControl.AuditFlags.Success> or <xref:System.Security.AccessControl.AuditFlags.Failure> is removed.</span></span>  
  
-   <span data-ttu-id="e8bea-110">En las DACL, se quitan y SystemAlarm ACE se quitan.</span><span class="sxs-lookup"><span data-stu-id="e8bea-110">On DACLs, SystemAudit and SystemAlarm ACEs are removed.</span></span>  
  
-   <span data-ttu-id="e8bea-111">En las listas de control de acceso de sistema (SACL), se quitan las ACE AccessAllowed y AccessDenied.</span><span class="sxs-lookup"><span data-stu-id="e8bea-111">On system access control lists (SACLs), AccessAllowed and AccessDenied ACEs are removed.</span></span>  
  
 <span data-ttu-id="e8bea-112">Orden canónico se mantiene según el algoritmo siguiente:</span><span class="sxs-lookup"><span data-stu-id="e8bea-112">Canonical order is maintained according to the following algorithm:</span></span>  
  
-   <span data-ttu-id="e8bea-113">ACE explícitas tienen prioridad sobre las ACE heredadas; Esta regla se aplica a las DACL y las SACL.</span><span class="sxs-lookup"><span data-stu-id="e8bea-113">Explicit ACEs take precedence over inherited ACEs; this rule applies to both DACLs and SACLs.</span></span>  
  
-   <span data-ttu-id="e8bea-114">En las DACL, entre las ACE explícitas, las ACE que deniegan el acceso tienen prioridad sobre las ACE que conceden acceso.</span><span class="sxs-lookup"><span data-stu-id="e8bea-114">In DACLs, among the explicit ACEs, ACEs that deny access take precedence over ACEs that allow access.</span></span> <span data-ttu-id="e8bea-115">Para las ACL de objetos de directorio, las ACE elementos preceden a las ACE del objeto.</span><span class="sxs-lookup"><span data-stu-id="e8bea-115">For directory object ACLs, the nonobject ACEs come before object ACEs.</span></span>  
  
-   <span data-ttu-id="e8bea-116">Todas las ACE comunes tienen prioridad sobre las ACE.</span><span class="sxs-lookup"><span data-stu-id="e8bea-116">All common ACEs take precedence over noncommon ACEs.</span></span>  
  
-   <span data-ttu-id="e8bea-117">Las ACE heredadas mantienen su orden relativo después canonicidad.</span><span class="sxs-lookup"><span data-stu-id="e8bea-117">Inherited ACEs maintain their relative order after canonicity.</span></span>  
  
-   <span data-ttu-id="e8bea-118">ACE desconocidas y personalizadas no se permiten en las DACL y las SACL.</span><span class="sxs-lookup"><span data-stu-id="e8bea-118">Unrecognized and custom ACEs are disallowed in both DACLs and SACLs.</span></span>  
  
-   <span data-ttu-id="e8bea-119">Dentro de los intervalos contiguos (AccessDenied explícita y AccessAllowed ACE en las DACL, todas las ACE explícitas en las SACL), las ACE se ordenan mediante el uso de la <xref:System.Security.Principal.SecurityIdentifier.CompareTo%2A> métodos de la <xref:System.Security.Principal.SecurityIdentifier> objetos asociados con las ACE.</span><span class="sxs-lookup"><span data-stu-id="e8bea-119">Within contiguous ranges (explicit AccessDenied and AccessAllowed ACEs on DACLs, all explicit ACEs on SACLs), the ACEs are sorted by using the <xref:System.Security.Principal.SecurityIdentifier.CompareTo%2A> methods of the <xref:System.Security.Principal.SecurityIdentifier> objects associated with the ACEs.</span></span>  
  
 <span data-ttu-id="e8bea-120">Se combinan las ACE adyacentes, si procede.</span><span class="sxs-lookup"><span data-stu-id="e8bea-120">Adjacent ACEs are combined, if appropriate.</span></span>  <span data-ttu-id="e8bea-121">Esto reduce el tamaño de la ACL sin que afecte a la semántica de control de acceso que concede.</span><span class="sxs-lookup"><span data-stu-id="e8bea-121">This reduces the size of the ACL without affecting the access control semantics it grants.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="BinaryLength">
      <MemberSignature Language="C#" Value="public override sealed int BinaryLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BinaryLength" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.CommonAcl.BinaryLength" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable ReadOnly Property BinaryLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int BinaryLength { int get(); };" />
      <MemberSignature Language="F#" Value="member this.BinaryLength : int" Usage="System.Security.AccessControl.CommonAcl.BinaryLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e8bea-122">Obtiene la longitud, en bytes, de la representación binaria del objeto <see cref="T:System.Security.AccessControl.CommonAcl" /> actual.</span><span class="sxs-lookup"><span data-stu-id="e8bea-122">Gets the length, in bytes, of the binary representation of the current <see cref="T:System.Security.AccessControl.CommonAcl" /> object.</span></span> <span data-ttu-id="e8bea-123">Debe usarse este valor de longitud antes de hacer el cálculo de referencias de la lista de control de acceso (ACL) en una matriz binaria mediante el método <see cref="M:System.Security.AccessControl.CommonAcl.GetBinaryForm(System.Byte[],System.Int32)" />.</span><span class="sxs-lookup"><span data-stu-id="e8bea-123">This length should be used before marshaling the access control list (ACL) into a binary array by using the <see cref="M:System.Security.AccessControl.CommonAcl.GetBinaryForm(System.Byte[],System.Int32)" /> method.</span></span></summary>
        <value><span data-ttu-id="e8bea-124">La longitud, en bytes, de la representación binaria del objeto <see cref="T:System.Security.AccessControl.CommonAcl" /> actual.</span><span class="sxs-lookup"><span data-stu-id="e8bea-124">The length, in bytes, of the binary representation of the current <see cref="T:System.Security.AccessControl.CommonAcl" /> object.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public override sealed int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.CommonAcl.Count" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Security.AccessControl.CommonAcl.Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e8bea-125">Obtiene el número de entradas de control de acceso (ACE) del objeto <see cref="T:System.Security.AccessControl.CommonAcl" /> actual.</span><span class="sxs-lookup"><span data-stu-id="e8bea-125">Gets the number of access control entries (ACEs) in the current <see cref="T:System.Security.AccessControl.CommonAcl" /> object.</span></span></summary>
        <value><span data-ttu-id="e8bea-126">Número de ACE del objeto <see cref="T:System.Security.AccessControl.CommonAcl" /> actual.</span><span class="sxs-lookup"><span data-stu-id="e8bea-126">The number of ACEs in the current <see cref="T:System.Security.AccessControl.CommonAcl" /> object.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBinaryForm">
      <MemberSignature Language="C#" Value="public override sealed void GetBinaryForm (byte[] binaryForm, int offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void GetBinaryForm(unsigned int8[] binaryForm, int32 offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.CommonAcl.GetBinaryForm(System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub GetBinaryForm (binaryForm As Byte(), offset As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void GetBinaryForm(cli::array &lt;System::Byte&gt; ^ binaryForm, int offset);" />
      <MemberSignature Language="F#" Value="override this.GetBinaryForm : byte[] * int -&gt; unit" Usage="commonAcl.GetBinaryForm (binaryForm, offset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binaryForm" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="binaryForm"><span data-ttu-id="e8bea-127">Matriz de bytes para la cual se va a realizar el cálculo de referencias del contenido del objeto <see cref="T:System.Security.AccessControl.CommonAcl" />.</span><span class="sxs-lookup"><span data-stu-id="e8bea-127">The byte array into which the contents of the <see cref="T:System.Security.AccessControl.CommonAcl" /> is marshaled.</span></span></param>
        <param name="offset"><span data-ttu-id="e8bea-128">El desplazamiento desde el cual comenzará la serialización</span><span class="sxs-lookup"><span data-stu-id="e8bea-128">The offset at which to start marshaling.</span></span></param>
        <summary><span data-ttu-id="e8bea-129">Realiza el cálculo de referencias del objeto <see cref="T:System.Security.AccessControl.CommonAcl" /> en la matriz de bytes especificada a partir de la posición de desplazamiento indicada.</span><span class="sxs-lookup"><span data-stu-id="e8bea-129">Marshals the contents of the <see cref="T:System.Security.AccessControl.CommonAcl" /> object into the specified byte array beginning at the specified offset.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCanonical">
      <MemberSignature Language="C#" Value="public bool IsCanonical { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCanonical" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.CommonAcl.IsCanonical" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCanonical As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCanonical { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCanonical : bool" Usage="System.Security.AccessControl.CommonAcl.IsCanonical" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e8bea-130">Obtiene un valor booleano que especifica si las entradas de control de acceso (ACE) del objeto <see cref="T:System.Security.AccessControl.CommonAcl" /> actual están en orden canónico.</span><span class="sxs-lookup"><span data-stu-id="e8bea-130">Gets a Boolean value that specifies whether the access control entries (ACEs) in the current <see cref="T:System.Security.AccessControl.CommonAcl" /> object are in canonical order.</span></span></summary>
        <value><span data-ttu-id="e8bea-131">Es <see langword="true" /> si las ACE del objeto <see cref="T:System.Security.AccessControl.CommonAcl" /> actual están en orden canónico; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e8bea-131"><see langword="true" /> if the ACEs in the current <see cref="T:System.Security.AccessControl.CommonAcl" /> object are in canonical order; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsContainer">
      <MemberSignature Language="C#" Value="public bool IsContainer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsContainer" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.CommonAcl.IsContainer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsContainer As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsContainer { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsContainer : bool" Usage="System.Security.AccessControl.CommonAcl.IsContainer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e8bea-132">Establece si el objeto <see cref="T:System.Security.AccessControl.CommonAcl" /> es un contenedor.</span><span class="sxs-lookup"><span data-stu-id="e8bea-132">Sets whether the <see cref="T:System.Security.AccessControl.CommonAcl" /> object is a container.</span></span></summary>
        <value><span data-ttu-id="e8bea-133">Es <see langword="true" /> si el objeto <see cref="T:System.Security.AccessControl.CommonAcl" /> actual es un contenedor.</span><span class="sxs-lookup"><span data-stu-id="e8bea-133"><see langword="true" /> if the current <see cref="T:System.Security.AccessControl.CommonAcl" /> object is a container.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDS">
      <MemberSignature Language="C#" Value="public bool IsDS { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDS" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.CommonAcl.IsDS" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDS As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDS { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDS : bool" Usage="System.Security.AccessControl.CommonAcl.IsDS" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e8bea-134">Establece si el objeto <see cref="T:System.Security.AccessControl.CommonAcl" /> actual es una lista de control de acceso (ACL) de objetos de directorio.</span><span class="sxs-lookup"><span data-stu-id="e8bea-134">Sets whether the current <see cref="T:System.Security.AccessControl.CommonAcl" /> object is a directory object access control list (ACL).</span></span></summary>
        <value><span data-ttu-id="e8bea-135">Es <see langword="true" /> si el objeto <see cref="T:System.Security.AccessControl.CommonAcl" /> actual es una ACL de objetos de directorio.</span><span class="sxs-lookup"><span data-stu-id="e8bea-135"><see langword="true" /> if the current <see cref="T:System.Security.AccessControl.CommonAcl" /> object is a directory object ACL.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override sealed System.Security.AccessControl.GenericAce this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.AccessControl.GenericAce Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.CommonAcl.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides NotOverridable Property Item(index As Integer) As GenericAce" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::AccessControl::GenericAce ^ default[int] { System::Security::AccessControl::GenericAce ^ get(int index); void set(int index, System::Security::AccessControl::GenericAce ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Security.AccessControl.GenericAce with get, set" Usage="System.Security.AccessControl.CommonAcl.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.GenericAce</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="e8bea-136">Índice de base cero de <see cref="T:System.Security.AccessControl.CommonAce" /> que se va a obtener o establecer.</span><span class="sxs-lookup"><span data-stu-id="e8bea-136">The zero-based index of the <see cref="T:System.Security.AccessControl.CommonAce" /> to get or set.</span></span></param>
        <summary><span data-ttu-id="e8bea-137">Obtiene o establece la clase <see cref="T:System.Security.AccessControl.CommonAce" /> en el índice especificado.</span><span class="sxs-lookup"><span data-stu-id="e8bea-137">Gets or sets the <see cref="T:System.Security.AccessControl.CommonAce" /> at the specified index.</span></span></summary>
        <value><span data-ttu-id="e8bea-138"><see cref="T:System.Security.AccessControl.CommonAce" /> en el índice especificado.</span><span class="sxs-lookup"><span data-stu-id="e8bea-138">The <see cref="T:System.Security.AccessControl.CommonAce" /> at the specified index.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Purge">
      <MemberSignature Language="C#" Value="public void Purge (System.Security.Principal.SecurityIdentifier sid);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Purge(class System.Security.Principal.SecurityIdentifier sid) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.CommonAcl.Purge(System.Security.Principal.SecurityIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Purge (sid As SecurityIdentifier)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Purge(System::Security::Principal::SecurityIdentifier ^ sid);" />
      <MemberSignature Language="F#" Value="member this.Purge : System.Security.Principal.SecurityIdentifier -&gt; unit" Usage="commonAcl.Purge sid" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sid" Type="System.Security.Principal.SecurityIdentifier" />
      </Parameters>
      <Docs>
        <param name="sid"><span data-ttu-id="e8bea-139">Objeto <see cref="T:System.Security.Principal.SecurityIdentifier" /> que se va a comprobar.</span><span class="sxs-lookup"><span data-stu-id="e8bea-139">The <see cref="T:System.Security.Principal.SecurityIdentifier" /> object to check for.</span></span></param>
        <summary><span data-ttu-id="e8bea-140">Quita todas las entradas de control de acceso (ACE) contenidas en este objeto <see cref="T:System.Security.AccessControl.CommonAcl" /> que están asociadas al objeto <see cref="T:System.Security.Principal.SecurityIdentifier" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="e8bea-140">Removes all access control entries (ACEs) contained by this <see cref="T:System.Security.AccessControl.CommonAcl" /> object that are associated with the specified <see cref="T:System.Security.Principal.SecurityIdentifier" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveInheritedAces">
      <MemberSignature Language="C#" Value="public void RemoveInheritedAces ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveInheritedAces() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.CommonAcl.RemoveInheritedAces" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveInheritedAces ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveInheritedAces();" />
      <MemberSignature Language="F#" Value="member this.RemoveInheritedAces : unit -&gt; unit" Usage="commonAcl.RemoveInheritedAces " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e8bea-141">Quita todas las entradas de control de acceso (ACE) heredadas de este objeto <see cref="T:System.Security.AccessControl.CommonAcl" />.</span><span class="sxs-lookup"><span data-stu-id="e8bea-141">Removes all inherited access control entries (ACEs) from this <see cref="T:System.Security.AccessControl.CommonAcl" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Revision">
      <MemberSignature Language="C#" Value="public override sealed byte Revision { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8 Revision" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.CommonAcl.Revision" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable ReadOnly Property Revision As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Byte Revision { System::Byte get(); };" />
      <MemberSignature Language="F#" Value="member this.Revision : byte" Usage="System.Security.AccessControl.CommonAcl.Revision" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e8bea-142">Obtiene el nivel de revisión del objeto <see cref="T:System.Security.AccessControl.CommonAcl" />.</span><span class="sxs-lookup"><span data-stu-id="e8bea-142">Gets the revision level of the <see cref="T:System.Security.AccessControl.CommonAcl" />.</span></span></summary>
        <value><span data-ttu-id="e8bea-143">Valor de tipo byte que indica el nivel de revisión del objeto <see cref="T:System.Security.AccessControl.CommonAcl" />.</span><span class="sxs-lookup"><span data-stu-id="e8bea-143">A byte value that specifies the revision level of the <see cref="T:System.Security.AccessControl.CommonAcl" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
<Type Name="AsyncResult" FullName="System.Runtime.Remoting.Messaging.AsyncResult">
  <Metadata><Meta Name="ms.openlocfilehash" Value="dc0d37c6403e708442c5d9a420583a08ac46d972" /><Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="10/04/2018" /><Meta Name="ms.locfileid" Value="48711423" /></Metadata><TypeSignature Language="C#" Value="public class AsyncResult : IAsyncResult, System.Runtime.Remoting.Messaging.IMessageSink" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi beforefieldinit AsyncResult extends System.Object implements class System.IAsyncResult, class System.Runtime.Remoting.Messaging.IMessageSink" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Remoting.Messaging.AsyncResult" />
  <TypeSignature Language="VB.NET" Value="Public Class AsyncResult&#xA;Implements IAsyncResult, IMessageSink" />
  <TypeSignature Language="C++ CLI" Value="public ref class AsyncResult : IAsyncResult, System::Runtime::Remoting::Messaging::IMessageSink" />
  <TypeSignature Language="F#" Value="type AsyncResult = class&#xA;    interface IAsyncResult&#xA;    interface IMessageSink" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IAsyncResult</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Remoting.Messaging.IMessageSink</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="758a7-101">Encapsula los resultados de una operación asincrónica en un delegado.</span><span class="sxs-lookup"><span data-stu-id="758a7-101">Encapsulates the results of an asynchronous operation on a delegate.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="758a7-102">La <xref:System.Runtime.Remoting.Messaging.AsyncResult> clase se utiliza en combinación con llamadas a métodos asincrónicos realizadas mediante delegados.</span><span class="sxs-lookup"><span data-stu-id="758a7-102">The <xref:System.Runtime.Remoting.Messaging.AsyncResult> class is used in conjunction with asynchronous method calls made using delegates.</span></span> <span data-ttu-id="758a7-103">El <xref:System.IAsyncResult> devuelto desde el delegado `BeginInvoke` método puede convertirse en un <xref:System.Runtime.Remoting.Messaging.AsyncResult>.</span><span class="sxs-lookup"><span data-stu-id="758a7-103">The <xref:System.IAsyncResult> returned from the delegate's `BeginInvoke` method can be cast to an <xref:System.Runtime.Remoting.Messaging.AsyncResult>.</span></span> <span data-ttu-id="758a7-104">El <xref:System.Runtime.Remoting.Messaging.AsyncResult> tiene la <xref:System.Runtime.Remoting.Messaging.AsyncResult.AsyncDelegate%2A> objeto de propiedad que contiene el delegado que se ha invocado la llamada asincrónica.</span><span class="sxs-lookup"><span data-stu-id="758a7-104">The <xref:System.Runtime.Remoting.Messaging.AsyncResult> has the <xref:System.Runtime.Remoting.Messaging.AsyncResult.AsyncDelegate%2A> property that holds the delegate object on which the asynchronous call was invoked.</span></span>  
  
 <span data-ttu-id="758a7-105">Para obtener más información acerca de `BeginInvoke` y llamadas asincrónicas mediante delegados, vea [Asynchronous Programming Using Delegates](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-using-delegates.md).</span><span class="sxs-lookup"><span data-stu-id="758a7-105">For more information about `BeginInvoke` and asynchronous calls using delegates, see [Asynchronous Programming Using Delegates](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-using-delegates.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="758a7-106">En el ejemplo siguiente se muestra cómo usar el <xref:System.Runtime.Remoting.Messaging.AsyncResult.AsyncWaitHandle%2A> propiedad va a obtener un <xref:System.Threading.WaitHandle>y cómo esperar una llamada asincrónica en un delegado.</span><span class="sxs-lookup"><span data-stu-id="758a7-106">The following example demonstrates how to use the <xref:System.Runtime.Remoting.Messaging.AsyncResult.AsyncWaitHandle%2A> property to get a <xref:System.Threading.WaitHandle>, and how to wait for an asynchronous call on a delegate.</span></span> <span data-ttu-id="758a7-107"><xref:System.Threading.WaitHandle> se señaliza cuando finaliza la llamada asincrónica y puede esperar a que termine llamando al método <xref:System.Threading.WaitHandle.WaitOne%2A>.</span><span class="sxs-lookup"><span data-stu-id="758a7-107">The <xref:System.Threading.WaitHandle> is signaled when the asynchronous call completes, and you can wait for it by calling the <xref:System.Threading.WaitHandle.WaitOne%2A> method.</span></span>  
  
 <span data-ttu-id="758a7-108">El ejemplo consta de dos clases, la clase que contiene el método que se llama de forma asincrónica, y la clase que contiene el `Main` método que realiza la llamada.</span><span class="sxs-lookup"><span data-stu-id="758a7-108">The example consists of two classes, the class that contains the method which is called asynchronously, and the class that contains the `Main` method that makes the call.</span></span>  
  
 <span data-ttu-id="758a7-109">Para obtener más información y más ejemplos de llamar a métodos de forma asincrónica mediante delegados, vea [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="758a7-109">For more information and more examples of calling methods asynchronously by using delegates, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
 [!code-cpp[AsyncDelegateExamples#1](~/samples/snippets/cpp/VS_Snippets_CLR/AsyncDelegateExamples/cpp/TestMethod.cpp#1)]
 [!code-csharp[AsyncDelegateExamples#1](~/samples/snippets/csharp/VS_Snippets_CLR/AsyncDelegateExamples/CS/TestMethod.cs#1)]
 [!code-vb[AsyncDelegateExamples#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AsyncDelegateExamples/VB/TestMethod.vb#1)]  
[!code-cpp[AsyncDelegateExamples#3](~/samples/snippets/cpp/VS_Snippets_CLR/AsyncDelegateExamples/cpp/waithandle.cpp#3)]
[!code-csharp[AsyncDelegateExamples#3](~/samples/snippets/csharp/VS_Snippets_CLR/AsyncDelegateExamples/CS/waithandle.cs#3)]
[!code-vb[AsyncDelegateExamples#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/AsyncDelegateExamples/VB/WaitHandle.vb#3)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-using-delegates.md"><span data-ttu-id="758a7-110">Programación asincrónica mediante delegados</span><span class="sxs-lookup"><span data-stu-id="758a7-110">Asynchronous Programming Using Delegates</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="AsyncDelegate">
      <MemberSignature Language="C#" Value="public virtual object AsyncDelegate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object AsyncDelegate" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Messaging.AsyncResult.AsyncDelegate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AsyncDelegate As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ AsyncDelegate { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AsyncDelegate : obj" Usage="System.Runtime.Remoting.Messaging.AsyncResult.AsyncDelegate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="758a7-111">Obtiene el objeto delegado en el que se ha invocado la llamada asincrónica.</span><span class="sxs-lookup"><span data-stu-id="758a7-111">Gets the delegate object on which the asynchronous call was invoked.</span></span></summary>
        <value><span data-ttu-id="758a7-112">Objeto delegado en el que se ha invocado la llamada asincrónica.</span><span class="sxs-lookup"><span data-stu-id="758a7-112">The delegate object on which the asynchronous call was invoked.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="758a7-113">El <xref:System.Runtime.Remoting.Messaging.AsyncResult.AsyncDelegate%2A> propiedad se puede convertir a la clase real del delegado definido por el usuario.</span><span class="sxs-lookup"><span data-stu-id="758a7-113">The <xref:System.Runtime.Remoting.Messaging.AsyncResult.AsyncDelegate%2A> property can be cast to the actual class of the user-defined delegate.</span></span>  
  
 <span data-ttu-id="758a7-114">Por ejemplo, si el delegado que se usó para realizar la llamada asincrónica es de tipo `MyDelegate`, el delegado devuelto por esta propiedad debe convertirse a `MyDelegate`.</span><span class="sxs-lookup"><span data-stu-id="758a7-114">For example, if the delegate that was used to make the asynchronous call is of type `MyDelegate`, the delegate that is returned by this property must be cast to `MyDelegate`.</span></span> <span data-ttu-id="758a7-115">El método de devolución de llamada, a continuación, puede llamar al delegado `EndInvoke` método con la firma correcta, con el fin de obtener los resultados de la llamada al método asincrónico.</span><span class="sxs-lookup"><span data-stu-id="758a7-115">The callback method can then call the delegate's `EndInvoke` method with the correct signature, in order to obtain the results of the asynchronous method call.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="758a7-116">En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Runtime.Remoting.Messaging.AsyncResult.AsyncDelegate%2A> propiedad que se va a obtener el delegado que se usó para realizar la llamada asincrónica, para poder llamar a `EndInvoke`.</span><span class="sxs-lookup"><span data-stu-id="758a7-116">The following code example demonstrates how to use the <xref:System.Runtime.Remoting.Messaging.AsyncResult.AsyncDelegate%2A> property to get the delegate that was used to make the asynchronous call, in order to call `EndInvoke`.</span></span> <span data-ttu-id="758a7-117">Las conversiones de ejemplo la <xref:System.IAsyncResult>, que es el único parámetro del método de devolución de llamada, a un <xref:System.Runtime.Remoting.Messaging.AsyncResult> objeto.</span><span class="sxs-lookup"><span data-stu-id="758a7-117">The example casts the <xref:System.IAsyncResult>, which is the only parameter of the callback method, to an <xref:System.Runtime.Remoting.Messaging.AsyncResult> object.</span></span>  
  
 <span data-ttu-id="758a7-118">El ejemplo consta de dos clases, la clase que contiene el método que se llama de forma asincrónica, y la clase que contiene el `Main` método que realiza la llamada.</span><span class="sxs-lookup"><span data-stu-id="758a7-118">The example consists of two classes, the class that contains the method which is called asynchronously, and the class that contains the `Main` method that makes the call.</span></span>  
  
 <span data-ttu-id="758a7-119">Para obtener más información sobre la forma en que funciona este ejemplo de devolución de llamada y más ejemplos de llamar a métodos de forma asincrónica mediante delegados, vea [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="758a7-119">For more information on the way this callback example works, and more examples of calling methods asynchronously by using delegates, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
 [!code-cpp[AsyncDelegateExamples#1](~/samples/snippets/cpp/VS_Snippets_CLR/AsyncDelegateExamples/cpp/TestMethod.cpp#1)]
 [!code-csharp[AsyncDelegateExamples#1](~/samples/snippets/csharp/VS_Snippets_CLR/AsyncDelegateExamples/CS/TestMethod.cs#1)]
 [!code-vb[AsyncDelegateExamples#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AsyncDelegateExamples/VB/TestMethod.vb#1)]  
[!code-cpp[AsyncDelegateExamples#5](~/samples/snippets/cpp/VS_Snippets_CLR/AsyncDelegateExamples/cpp/callback.cpp#5)]
[!code-csharp[AsyncDelegateExamples#5](~/samples/snippets/csharp/VS_Snippets_CLR/AsyncDelegateExamples/CS/callback.cs#5)]
[!code-vb[AsyncDelegateExamples#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/AsyncDelegateExamples/VB/callback.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AsyncProcessMessage">
      <MemberSignature Language="C#" Value="public virtual System.Runtime.Remoting.Messaging.IMessageCtrl AsyncProcessMessage (System.Runtime.Remoting.Messaging.IMessage msg, System.Runtime.Remoting.Messaging.IMessageSink replySink);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Runtime.Remoting.Messaging.IMessageCtrl AsyncProcessMessage(class System.Runtime.Remoting.Messaging.IMessage msg, class System.Runtime.Remoting.Messaging.IMessageSink replySink) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Messaging.AsyncResult.AsyncProcessMessage(System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Messaging.IMessageSink)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AsyncProcessMessage (msg As IMessage, replySink As IMessageSink) As IMessageCtrl" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Runtime::Remoting::Messaging::IMessageCtrl ^ AsyncProcessMessage(System::Runtime::Remoting::Messaging::IMessage ^ msg, System::Runtime::Remoting::Messaging::IMessageSink ^ replySink);" />
      <MemberSignature Language="F#" Value="abstract member AsyncProcessMessage : System.Runtime.Remoting.Messaging.IMessage * System.Runtime.Remoting.Messaging.IMessageSink -&gt; System.Runtime.Remoting.Messaging.IMessageCtrl&#xA;override this.AsyncProcessMessage : System.Runtime.Remoting.Messaging.IMessage * System.Runtime.Remoting.Messaging.IMessageSink -&gt; System.Runtime.Remoting.Messaging.IMessageCtrl" Usage="asyncResult.AsyncProcessMessage (msg, replySink)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Remoting.Messaging.IMessageSink.AsyncProcessMessage(System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Messaging.IMessageSink)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.Messaging.IMessageCtrl</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Runtime.Remoting.Messaging.IMessage" />
        <Parameter Name="replySink" Type="System.Runtime.Remoting.Messaging.IMessageSink" />
      </Parameters>
      <Docs>
        <param name="msg"><span data-ttu-id="758a7-120">Interfaz <see cref="T:System.Runtime.Remoting.Messaging.IMessage" /> de solicitud.</span><span class="sxs-lookup"><span data-stu-id="758a7-120">The request <see cref="T:System.Runtime.Remoting.Messaging.IMessage" /> interface.</span></span></param>
        <param name="replySink"><span data-ttu-id="758a7-121">Interfaz <see cref="T:System.Runtime.Remoting.Messaging.IMessageSink" /> de respuesta.</span><span class="sxs-lookup"><span data-stu-id="758a7-121">The response <see cref="T:System.Runtime.Remoting.Messaging.IMessageSink" /> interface.</span></span></param>
        <summary><span data-ttu-id="758a7-122">Implementa la interfaz <see cref="T:System.Runtime.Remoting.Messaging.IMessageSink" />.</span><span class="sxs-lookup"><span data-stu-id="758a7-122">Implements the <see cref="T:System.Runtime.Remoting.Messaging.IMessageSink" /> interface.</span></span></summary>
        <returns><span data-ttu-id="758a7-123">No se devuelve ningún valor.</span><span class="sxs-lookup"><span data-stu-id="758a7-123">No value is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="758a7-124">El <xref:System.Runtime.Remoting.Messaging.AsyncResult.AsyncProcessMessage%2A> método de la <xref:System.Runtime.Remoting.Messaging.IMessageSink> interfaz no es relevante para el <xref:System.Runtime.Remoting.Messaging.AsyncResult> clase.</span><span class="sxs-lookup"><span data-stu-id="758a7-124">The <xref:System.Runtime.Remoting.Messaging.AsyncResult.AsyncProcessMessage%2A> method of the <xref:System.Runtime.Remoting.Messaging.IMessageSink> interface is not relevant to the <xref:System.Runtime.Remoting.Messaging.AsyncResult> class.</span></span> <span data-ttu-id="758a7-125">Implementación por <xref:System.Runtime.Remoting.Messaging.AsyncResult> produce una <xref:System.NotSupportedException>.</span><span class="sxs-lookup"><span data-stu-id="758a7-125">Implementation by <xref:System.Runtime.Remoting.Messaging.AsyncResult> throws a <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="758a7-126">En su lugar, obtenga una <xref:System.Runtime.Remoting.Messaging.AsyncResult> convirtiendo el <xref:System.IAsyncResult> interfaz devuelta por una llamada asincrónica realizada mediante un delegado.</span><span class="sxs-lookup"><span data-stu-id="758a7-126">Instead, obtain an <xref:System.Runtime.Remoting.Messaging.AsyncResult> by casting the <xref:System.IAsyncResult> interface returned by an asynchronous call made using a delegate.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AsyncState">
      <MemberSignature Language="C#" Value="public virtual object AsyncState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object AsyncState" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Messaging.AsyncResult.AsyncState" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AsyncState As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ AsyncState { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AsyncState : obj" Usage="System.Runtime.Remoting.Messaging.AsyncResult.AsyncState" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IAsyncResult.AsyncState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="758a7-127">Obtiene el objeto proporcionado como el último parámetro de una llamada al método <see langword="BeginInvoke" />.</span><span class="sxs-lookup"><span data-stu-id="758a7-127">Gets the object provided as the last parameter of a <see langword="BeginInvoke" /> method call.</span></span></summary>
        <value><span data-ttu-id="758a7-128">Obtiene el objeto proporcionado como el último parámetro de una llamada al método <see langword="BeginInvoke" />.</span><span class="sxs-lookup"><span data-stu-id="758a7-128">The object provided as the last parameter of a <see langword="BeginInvoke" /> method call.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="758a7-129">Para obtener más información sobre la `BeginInvoke` método, consulte [Asynchronous Programming Using Delegates](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-using-delegates.md).</span><span class="sxs-lookup"><span data-stu-id="758a7-129">For more information about the `BeginInvoke` method, see [Asynchronous Programming Using Delegates](~/docs/standard/asynchronous-programming-patterns/asynchronous-programming-using-delegates.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="758a7-130">En el ejemplo de código siguiente se muestra cómo el <xref:System.Runtime.Remoting.Messaging.AsyncResult.AsyncState%2A> propiedad se utiliza para pasar información a un método de devolución de llamada.</span><span class="sxs-lookup"><span data-stu-id="758a7-130">The following code example demonstrates how the <xref:System.Runtime.Remoting.Messaging.AsyncResult.AsyncState%2A> property is used to pass information to a callback method.</span></span> <span data-ttu-id="758a7-131">El último parámetro de la `BeginInvoke` llamada al método es una cadena de formato, el método de devolución de llamada que se utiliza para dar formato a un mensaje de salida.</span><span class="sxs-lookup"><span data-stu-id="758a7-131">The last parameter of the `BeginInvoke` method call is a format string, which the callback method uses to format an output message.</span></span>  
  
 <span data-ttu-id="758a7-132">El ejemplo consta de dos clases, la clase que contiene el método que se llama de forma asincrónica, y la clase que contiene el `Main` método que realiza la llamada.</span><span class="sxs-lookup"><span data-stu-id="758a7-132">The example consists of two classes, the class that contains the method which is called asynchronously, and the class that contains the `Main` method that makes the call.</span></span>  
  
 <span data-ttu-id="758a7-133">Para obtener más información sobre la forma en que funciona este ejemplo de devolución de llamada y más ejemplos de llamar a métodos de forma asincrónica mediante delegados, vea [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="758a7-133">For more information on the way this callback example works, and more examples of calling methods asynchronously by using delegates, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
 [!code-cpp[AsyncDelegateExamples#1](~/samples/snippets/cpp/VS_Snippets_CLR/AsyncDelegateExamples/cpp/TestMethod.cpp#1)]
 [!code-csharp[AsyncDelegateExamples#1](~/samples/snippets/csharp/VS_Snippets_CLR/AsyncDelegateExamples/CS/TestMethod.cs#1)]
 [!code-vb[AsyncDelegateExamples#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AsyncDelegateExamples/VB/TestMethod.vb#1)]  
[!code-cpp[AsyncDelegateExamples#5](~/samples/snippets/cpp/VS_Snippets_CLR/AsyncDelegateExamples/cpp/callback.cpp#5)]
[!code-csharp[AsyncDelegateExamples#5](~/samples/snippets/csharp/VS_Snippets_CLR/AsyncDelegateExamples/CS/callback.cs#5)]
[!code-vb[AsyncDelegateExamples#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/AsyncDelegateExamples/VB/callback.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AsyncWaitHandle">
      <MemberSignature Language="C#" Value="public virtual System.Threading.WaitHandle AsyncWaitHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.WaitHandle AsyncWaitHandle" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Messaging.AsyncResult.AsyncWaitHandle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AsyncWaitHandle As WaitHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Threading::WaitHandle ^ AsyncWaitHandle { System::Threading::WaitHandle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AsyncWaitHandle : System.Threading.WaitHandle" Usage="System.Runtime.Remoting.Messaging.AsyncResult.AsyncWaitHandle" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IAsyncResult.AsyncWaitHandle</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.WaitHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="758a7-134">Obtiene un <see cref="T:System.Threading.WaitHandle" /> que encapsula identificadores de sincronización Win32, y permite la implementación de varios esquemas de sincronización.</span><span class="sxs-lookup"><span data-stu-id="758a7-134">Gets a <see cref="T:System.Threading.WaitHandle" /> that encapsulates Win32 synchronization handles, and allows the implementation of various synchronization schemes.</span></span></summary>
        <value><span data-ttu-id="758a7-135"><see cref="T:System.Threading.WaitHandle" /> que encapsula identificadores de sincronización Win32, y permite la implementación de varios esquemas de sincronización.</span><span class="sxs-lookup"><span data-stu-id="758a7-135">A <see cref="T:System.Threading.WaitHandle" /> that encapsulates Win32 synchronization handles, and allows the implementation of various synchronization schemes.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="758a7-136">El <xref:System.Threading.WaitHandle> devuelta por este método se señala automáticamente cuando se ha completado la operación asincrónica.</span><span class="sxs-lookup"><span data-stu-id="758a7-136">The <xref:System.Threading.WaitHandle> returned by this method is automatically signaled when the asynchronous operation has completed.</span></span>  
  
 <span data-ttu-id="758a7-137">El identificador de espera no se cierra automáticamente cuando se llama a `EndInvoke` en el delegado que se usó para llamar al método asincrónico.</span><span class="sxs-lookup"><span data-stu-id="758a7-137">The wait handle is not closed automatically when you call `EndInvoke` on the delegate that was used to make the asynchronous method call.</span></span> <span data-ttu-id="758a7-138">Si libera todas las referencias al identificador de espera, se liberarán los recursos del sistema cuando la recolección de elementos no utilizados reclame el identificador de espera.</span><span class="sxs-lookup"><span data-stu-id="758a7-138">If you release all references to the wait handle, system resources are freed when garbage collection reclaims the wait handle.</span></span> <span data-ttu-id="758a7-139">Para liberar los recursos del sistema tan pronto como haya terminado de utilizar el identificador de espera, llame a la <xref:System.Threading.WaitHandle.Close%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="758a7-139">To free the system resources as soon as you are finished using the wait handle, call the <xref:System.Threading.WaitHandle.Close%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="758a7-140">Colección de elementos no utilizados funciona más eficazmente cuando los objetos descartables se cierran o eliminan de forma explícita.</span><span class="sxs-lookup"><span data-stu-id="758a7-140">Garbage collection works more efficiently when disposable objects are explicitly closed or disposed.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="758a7-141">El <xref:System.Threading.WaitHandle> contenidos en el <xref:System.Runtime.Remoting.Messaging.AsyncResult.AsyncWaitHandle%2A> propiedad puede utilizarse para bloquear el subproceso actual hasta que se complete la llamada asincrónica.</span><span class="sxs-lookup"><span data-stu-id="758a7-141">The <xref:System.Threading.WaitHandle> contained in the <xref:System.Runtime.Remoting.Messaging.AsyncResult.AsyncWaitHandle%2A> property can be used to block the current thread until the asynchronous call is complete.</span></span> <span data-ttu-id="758a7-142">Sin embargo, el <xref:System.Threading.WaitHandle> pasará por alto el <xref:System.AsyncCallback>, si se especificó durante la `BeginInvoke` llamar.</span><span class="sxs-lookup"><span data-stu-id="758a7-142">However the <xref:System.Threading.WaitHandle> will ignore the <xref:System.AsyncCallback>, if one was specified during the `BeginInvoke` call.</span></span> <span data-ttu-id="758a7-143">Por lo tanto, puede ocurrir que la aplicación se cierre antes de la <xref:System.AsyncCallback> ha terminado de ejecutarse, incluso si un <xref:System.Threading.WaitHandle> se utiliza para bloquear hasta que complete la llamada asincrónica.</span><span class="sxs-lookup"><span data-stu-id="758a7-143">Therefore, a situation can occur where the application shuts down before the <xref:System.AsyncCallback> has finished executing, even if a <xref:System.Threading.WaitHandle> is used to block until the asynchronous call completion.</span></span> <span data-ttu-id="758a7-144">Para obtener un ejemplo de esta situación, vea el ejemplo de la <xref:System.Runtime.Remoting.Messaging.AsyncResult> clase y quite el <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType> instrucción.</span><span class="sxs-lookup"><span data-stu-id="758a7-144">For an example of such a situation, see the example for the <xref:System.Runtime.Remoting.Messaging.AsyncResult> class, and remove the <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType> statement.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="758a7-145">En el ejemplo siguiente se muestra cómo usar el <xref:System.Runtime.Remoting.Messaging.AsyncResult.AsyncWaitHandle%2A> propiedad va a obtener un <xref:System.Threading.WaitHandle>y cómo esperar una llamada asincrónica en un delegado.</span><span class="sxs-lookup"><span data-stu-id="758a7-145">The following example demonstrates how to use the <xref:System.Runtime.Remoting.Messaging.AsyncResult.AsyncWaitHandle%2A> property to get a <xref:System.Threading.WaitHandle>, and how to wait for an asynchronous call on a delegate.</span></span> <span data-ttu-id="758a7-146"><xref:System.Threading.WaitHandle> se señaliza cuando finaliza la llamada asincrónica y puede esperar a que termine llamando al método <xref:System.Threading.WaitHandle.WaitOne%2A>.</span><span class="sxs-lookup"><span data-stu-id="758a7-146">The <xref:System.Threading.WaitHandle> is signaled when the asynchronous call completes, and you can wait for it by calling the <xref:System.Threading.WaitHandle.WaitOne%2A> method.</span></span>  
  
 <span data-ttu-id="758a7-147">El ejemplo consta de dos clases, la clase que contiene el método que se llama de forma asincrónica, y la clase que contiene el `Main` método que realiza la llamada.</span><span class="sxs-lookup"><span data-stu-id="758a7-147">The example consists of two classes, the class that contains the method which is called asynchronously, and the class that contains the `Main` method that makes the call.</span></span>  
  
 <span data-ttu-id="758a7-148">Para obtener más información y más ejemplos de llamar a métodos de forma asincrónica mediante delegados, vea [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="758a7-148">For more information and more examples of calling methods asynchronously by using delegates, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
 [!code-cpp[AsyncDelegateExamples#1](~/samples/snippets/cpp/VS_Snippets_CLR/AsyncDelegateExamples/cpp/TestMethod.cpp#1)]
 [!code-csharp[AsyncDelegateExamples#1](~/samples/snippets/csharp/VS_Snippets_CLR/AsyncDelegateExamples/CS/TestMethod.cs#1)]
 [!code-vb[AsyncDelegateExamples#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AsyncDelegateExamples/VB/TestMethod.vb#1)]  
[!code-cpp[AsyncDelegateExamples#3](~/samples/snippets/cpp/VS_Snippets_CLR/AsyncDelegateExamples/cpp/waithandle.cpp#3)]
[!code-csharp[AsyncDelegateExamples#3](~/samples/snippets/csharp/VS_Snippets_CLR/AsyncDelegateExamples/CS/waithandle.cs#3)]
[!code-vb[AsyncDelegateExamples#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/AsyncDelegateExamples/VB/WaitHandle.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Threading.WaitHandle" />
      </Docs>
    </Member>
    <Member MemberName="CompletedSynchronously">
      <MemberSignature Language="C#" Value="public virtual bool CompletedSynchronously { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CompletedSynchronously" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Messaging.AsyncResult.CompletedSynchronously" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CompletedSynchronously As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CompletedSynchronously { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CompletedSynchronously : bool" Usage="System.Runtime.Remoting.Messaging.AsyncResult.CompletedSynchronously" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IAsyncResult.CompletedSynchronously</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="758a7-149">Obtiene un valor que indica si la llamada de <see langword="BeginInvoke" /> ha finalizado de forma sincrónica.</span><span class="sxs-lookup"><span data-stu-id="758a7-149">Gets a value indicating whether the <see langword="BeginInvoke" /> call completed synchronously.</span></span></summary>
        <value><span data-ttu-id="758a7-150"><see langword="true" /> si la llamada de <see langword="BeginInvoke" /> ha finalizado de forma sincrónica; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="758a7-150"><see langword="true" /> if the <see langword="BeginInvoke" /> call completed synchronously; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="758a7-151">Si se detecta que el `BeginInvoke` llamada que se hayan completado sincrónicamente en el <xref:System.AsyncCallback> delegado, es probable que el subproceso que llama a BeginInvoke es el subproceso actual.</span><span class="sxs-lookup"><span data-stu-id="758a7-151">If it is detected that the `BeginInvoke` call completed synchronously in the <xref:System.AsyncCallback> delegate, it is probable that the thread that called BeginInvoke is the current thread.</span></span> <span data-ttu-id="758a7-152">La mayoría de los proveedores de la <xref:System.IAsyncResult> interfaz no usará la capacidad y devolverá el valor predeterminado es `false`.</span><span class="sxs-lookup"><span data-stu-id="758a7-152">Most providers of the <xref:System.IAsyncResult> interface will not use the capability and will return a default `false`.</span></span>  
  
 <span data-ttu-id="758a7-153">La implementación actual de <xref:System.Runtime.Remoting.Messaging.AsyncResult.CompletedSynchronously%2A> siempre devuelve `false`.</span><span class="sxs-lookup"><span data-stu-id="758a7-153">Current implementation of <xref:System.Runtime.Remoting.Messaging.AsyncResult.CompletedSynchronously%2A> always returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndInvokeCalled">
      <MemberSignature Language="C#" Value="public bool EndInvokeCalled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EndInvokeCalled" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Messaging.AsyncResult.EndInvokeCalled" />
      <MemberSignature Language="VB.NET" Value="Public Property EndInvokeCalled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EndInvokeCalled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EndInvokeCalled : bool with get, set" Usage="System.Runtime.Remoting.Messaging.AsyncResult.EndInvokeCalled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="758a7-154">Obtiene o establece un valor que indica si se ha llamado a <see langword="EndInvoke" /> en el <see cref="T:System.Runtime.Remoting.Messaging.AsyncResult" /> actual.</span><span class="sxs-lookup"><span data-stu-id="758a7-154">Gets or sets a value indicating whether <see langword="EndInvoke" /> has been called on the current <see cref="T:System.Runtime.Remoting.Messaging.AsyncResult" />.</span></span></summary>
        <value><span data-ttu-id="758a7-155"><see langword="true" /> si se ha llamado a <see langword="EndInvoke" /> en el <see cref="T:System.Runtime.Remoting.Messaging.AsyncResult" /> actual; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="758a7-155"><see langword="true" /> if <see langword="EndInvoke" /> has been called on the current <see cref="T:System.Runtime.Remoting.Messaging.AsyncResult" />; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetReplyMessage">
      <MemberSignature Language="C#" Value="public virtual System.Runtime.Remoting.Messaging.IMessage GetReplyMessage ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Runtime.Remoting.Messaging.IMessage GetReplyMessage() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Messaging.AsyncResult.GetReplyMessage" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetReplyMessage () As IMessage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Runtime::Remoting::Messaging::IMessage ^ GetReplyMessage();" />
      <MemberSignature Language="F#" Value="abstract member GetReplyMessage : unit -&gt; System.Runtime.Remoting.Messaging.IMessage&#xA;override this.GetReplyMessage : unit -&gt; System.Runtime.Remoting.Messaging.IMessage" Usage="asyncResult.GetReplyMessage " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.Messaging.IMessage</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="758a7-156">Obtiene el mensaje de respuesta para la llamada asincrónica.</span><span class="sxs-lookup"><span data-stu-id="758a7-156">Gets the response message for the asynchronous call.</span></span></summary>
        <returns><span data-ttu-id="758a7-157">Mensaje de comunicación remota que debería representar una respuesta a una llamada a método en un objeto remoto.</span><span class="sxs-lookup"><span data-stu-id="758a7-157">A remoting message that should represent a response to a method call on a remote object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="758a7-158">El <xref:System.Runtime.Remoting.Messaging.AsyncResult.GetReplyMessage%2A> método puede devolver un objeto después de la <xref:System.Runtime.Remoting.Messaging.AsyncResult.SyncProcessMessage%2A> se llama al método.</span><span class="sxs-lookup"><span data-stu-id="758a7-158">The <xref:System.Runtime.Remoting.Messaging.AsyncResult.GetReplyMessage%2A> method can return an object after the <xref:System.Runtime.Remoting.Messaging.AsyncResult.SyncProcessMessage%2A> method is called.</span></span> <span data-ttu-id="758a7-159">El <xref:System.Runtime.Remoting.Messaging.IMessage> valor devuelto se puede convertir en un <xref:System.Runtime.Remoting.Messaging.IMethodReturnMessage>.</span><span class="sxs-lookup"><span data-stu-id="758a7-159">The <xref:System.Runtime.Remoting.Messaging.IMessage> return value can be cast to an <xref:System.Runtime.Remoting.Messaging.IMethodReturnMessage>.</span></span>  
  
 <span data-ttu-id="758a7-160">Sin embargo, no es necesario llamar a alguno de estos métodos directamente.</span><span class="sxs-lookup"><span data-stu-id="758a7-160">However, you do not need to call either of these methods directly.</span></span> <span data-ttu-id="758a7-161">Están diseñados para su uso por la infraestructura de comunicación remota de .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="758a7-161">They are intended for use by the remoting infrastructure of the .NET Framework.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCompleted">
      <MemberSignature Language="C#" Value="public virtual bool IsCompleted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCompleted" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Messaging.AsyncResult.IsCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsCompleted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsCompleted { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCompleted : bool" Usage="System.Runtime.Remoting.Messaging.AsyncResult.IsCompleted" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IAsyncResult.IsCompleted</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="758a7-162">Obtiene un valor que indica si el servidor ha completado la llamada.</span><span class="sxs-lookup"><span data-stu-id="758a7-162">Gets a value indicating whether the server has completed the call.</span></span></summary>
        <value><span data-ttu-id="758a7-163"><see langword="true" /> después de que el servidor complete la llamada; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="758a7-163"><see langword="true" /> after the server has completed the call; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="758a7-164">El servidor no debe usar los recursos proporcionados por el cliente fuera de lo acordado semántica de uso compartido después de que establece la <xref:System.Runtime.Remoting.Messaging.AsyncResult.IsCompleted%2A> propiedad `true`.</span><span class="sxs-lookup"><span data-stu-id="758a7-164">The server must not use any client supplied resources outside of the agreed upon sharing semantics after it sets the <xref:System.Runtime.Remoting.Messaging.AsyncResult.IsCompleted%2A> property to `true`.</span></span> <span data-ttu-id="758a7-165">Por lo tanto, es seguro para el cliente los recursos después de destruir el <xref:System.Runtime.Remoting.Messaging.AsyncResult.IsCompleted%2A> propiedad devuelve `true`.</span><span class="sxs-lookup"><span data-stu-id="758a7-165">Thus, it is safe for the client to destroy the resources after the <xref:System.Runtime.Remoting.Messaging.AsyncResult.IsCompleted%2A> property returns `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="758a7-166">El ejemplo siguiente muestra cómo usar el <xref:System.IAsyncResult.IsCompleted%2A> propiedad de la <xref:System.Runtime.Remoting.Messaging.AsyncResult> devuelto por `BeginInvoke` para detectar cuándo se completa una llamada asincrónica.</span><span class="sxs-lookup"><span data-stu-id="758a7-166">The following example shows how to use the <xref:System.IAsyncResult.IsCompleted%2A> property of the <xref:System.Runtime.Remoting.Messaging.AsyncResult> returned by `BeginInvoke` to discover when an asynchronous call completes.</span></span> <span data-ttu-id="758a7-167">Puede hacer esto último cuando realice la llamada asincrónica desde un subproceso que dé servicio a la interfaz de usuario.</span><span class="sxs-lookup"><span data-stu-id="758a7-167">You might do this when making the asynchronous call from a thread that services the user interface.</span></span> <span data-ttu-id="758a7-168">Sondear la finalización de una llamada asincrónica permite al subproceso de llamada seguirse ejecutando mientras la llamada asincrónica se ejecuta en un subproceso <xref:System.Threading.ThreadPool>.</span><span class="sxs-lookup"><span data-stu-id="758a7-168">Polling for completion allows the calling thread to continue executing while the asynchronous call executes on a <xref:System.Threading.ThreadPool> thread.</span></span>  
  
 <span data-ttu-id="758a7-169">El ejemplo consta de dos clases, la clase que contiene el método que se llama de forma asincrónica, y la clase que contiene el `Main` método que realiza la llamada.</span><span class="sxs-lookup"><span data-stu-id="758a7-169">The example consists of two classes, the class that contains the method which is called asynchronously, and the class that contains the `Main` method that makes the call.</span></span>  
  
 <span data-ttu-id="758a7-170">Para obtener más información y más ejemplos de llamar a métodos de forma asincrónica mediante delegados, vea [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="758a7-170">For more information and more examples of calling methods asynchronously by using delegates, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
 [!code-cpp[AsyncDelegateExamples#1](~/samples/snippets/cpp/VS_Snippets_CLR/AsyncDelegateExamples/cpp/TestMethod.cpp#1)]
 [!code-csharp[AsyncDelegateExamples#1](~/samples/snippets/csharp/VS_Snippets_CLR/AsyncDelegateExamples/CS/TestMethod.cs#1)]
 [!code-vb[AsyncDelegateExamples#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AsyncDelegateExamples/VB/TestMethod.vb#1)]  
[!code-cpp[AsyncDelegateExamples#4](~/samples/snippets/cpp/VS_Snippets_CLR/AsyncDelegateExamples/cpp/polling.cpp#4)]
[!code-csharp[AsyncDelegateExamples#4](~/samples/snippets/csharp/VS_Snippets_CLR/AsyncDelegateExamples/CS/polling.cs#4)]
[!code-vb[AsyncDelegateExamples#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/AsyncDelegateExamples/VB/polling.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NextSink">
      <MemberSignature Language="C#" Value="public System.Runtime.Remoting.Messaging.IMessageSink NextSink { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.Remoting.Messaging.IMessageSink NextSink" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Messaging.AsyncResult.NextSink" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NextSink As IMessageSink" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Remoting::Messaging::IMessageSink ^ NextSink { System::Runtime::Remoting::Messaging::IMessageSink ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NextSink : System.Runtime.Remoting.Messaging.IMessageSink" Usage="System.Runtime.Remoting.Messaging.AsyncResult.NextSink" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.Remoting.Messaging.IMessageSink.NextSink</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.Messaging.IMessageSink</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="758a7-171">Obtiene el siguiente receptor de mensajes en la cadena de receptores.</span><span class="sxs-lookup"><span data-stu-id="758a7-171">Gets the next message sink in the sink chain.</span></span></summary>
        <value><span data-ttu-id="758a7-172">Interfaz <see cref="T:System.Runtime.Remoting.Messaging.IMessageSink" /> que representa el receptor del mensaje siguiente en la cadena de receptores.</span><span class="sxs-lookup"><span data-stu-id="758a7-172">An <see cref="T:System.Runtime.Remoting.Messaging.IMessageSink" /> interface that represents the next message sink in the sink chain.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="758a7-173">La implementación actual de <xref:System.Runtime.Remoting.Messaging.AsyncResult.NextSink%2A> devuelve `null`.</span><span class="sxs-lookup"><span data-stu-id="758a7-173">The current implementation of <xref:System.Runtime.Remoting.Messaging.AsyncResult.NextSink%2A> returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetMessageCtrl">
      <MemberSignature Language="C#" Value="public virtual void SetMessageCtrl (System.Runtime.Remoting.Messaging.IMessageCtrl mc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetMessageCtrl(class System.Runtime.Remoting.Messaging.IMessageCtrl mc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Messaging.AsyncResult.SetMessageCtrl(System.Runtime.Remoting.Messaging.IMessageCtrl)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetMessageCtrl (mc As IMessageCtrl)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetMessageCtrl(System::Runtime::Remoting::Messaging::IMessageCtrl ^ mc);" />
      <MemberSignature Language="F#" Value="abstract member SetMessageCtrl : System.Runtime.Remoting.Messaging.IMessageCtrl -&gt; unit&#xA;override this.SetMessageCtrl : System.Runtime.Remoting.Messaging.IMessageCtrl -&gt; unit" Usage="asyncResult.SetMessageCtrl mc" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mc" Type="System.Runtime.Remoting.Messaging.IMessageCtrl" />
      </Parameters>
      <Docs>
        <param name="mc"><span data-ttu-id="758a7-174">Valor de <see cref="T:System.Runtime.Remoting.Messaging.IMessageCtrl" /> para la llamada a método remoto actual.</span><span class="sxs-lookup"><span data-stu-id="758a7-174">The <see cref="T:System.Runtime.Remoting.Messaging.IMessageCtrl" /> for the current remote method call.</span></span></param>
        <summary><span data-ttu-id="758a7-175">Establece <see cref="T:System.Runtime.Remoting.Messaging.IMessageCtrl" /> para la llamada a método remoto actual, que proporciona una manera de controlar los mensajes asincrónicos una vez enviados.</span><span class="sxs-lookup"><span data-stu-id="758a7-175">Sets an <see cref="T:System.Runtime.Remoting.Messaging.IMessageCtrl" /> for the current remote method call, which provides a way to control asynchronous messages after they have been dispatched.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="758a7-176">No es necesario llamar a la <xref:System.Runtime.Remoting.Messaging.AsyncResult.SetMessageCtrl%2A> método.</span><span class="sxs-lookup"><span data-stu-id="758a7-176">You do not need to call the <xref:System.Runtime.Remoting.Messaging.AsyncResult.SetMessageCtrl%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SyncProcessMessage">
      <MemberSignature Language="C#" Value="public virtual System.Runtime.Remoting.Messaging.IMessage SyncProcessMessage (System.Runtime.Remoting.Messaging.IMessage msg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Runtime.Remoting.Messaging.IMessage SyncProcessMessage(class System.Runtime.Remoting.Messaging.IMessage msg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Messaging.AsyncResult.SyncProcessMessage(System.Runtime.Remoting.Messaging.IMessage)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SyncProcessMessage (msg As IMessage) As IMessage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Runtime::Remoting::Messaging::IMessage ^ SyncProcessMessage(System::Runtime::Remoting::Messaging::IMessage ^ msg);" />
      <MemberSignature Language="F#" Value="abstract member SyncProcessMessage : System.Runtime.Remoting.Messaging.IMessage -&gt; System.Runtime.Remoting.Messaging.IMessage&#xA;override this.SyncProcessMessage : System.Runtime.Remoting.Messaging.IMessage -&gt; System.Runtime.Remoting.Messaging.IMessage" Usage="asyncResult.SyncProcessMessage msg" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Remoting.Messaging.IMessageSink.SyncProcessMessage(System.Runtime.Remoting.Messaging.IMessage)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.Messaging.IMessage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Runtime.Remoting.Messaging.IMessage" />
      </Parameters>
      <Docs>
        <param name="msg"><span data-ttu-id="758a7-177">Mensaje de respuesta a una llamada a método en un objeto remoto.</span><span class="sxs-lookup"><span data-stu-id="758a7-177">A response message to a method call on a remote object.</span></span></param>
        <summary><span data-ttu-id="758a7-178">Procesa sincrónicamente un mensaje de respuesta devuelto por una llamada a método en un objeto remoto.</span><span class="sxs-lookup"><span data-stu-id="758a7-178">Synchronously processes a response message returned by a method call on a remote object.</span></span></summary>
        <returns><span data-ttu-id="758a7-179">Devuelve <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="758a7-179">Returns <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="758a7-180">El <xref:System.Runtime.Remoting.Messaging.AsyncResult.SyncProcessMessage%2A> método implementa el <xref:System.Runtime.Remoting.Messaging.IMessageSink> interfaz.</span><span class="sxs-lookup"><span data-stu-id="758a7-180">The <xref:System.Runtime.Remoting.Messaging.AsyncResult.SyncProcessMessage%2A> method implements the <xref:System.Runtime.Remoting.Messaging.IMessageSink> interface.</span></span> <span data-ttu-id="758a7-181">No es necesario llamar a este método directamente.</span><span class="sxs-lookup"><span data-stu-id="758a7-181">You do not need to call this method directly.</span></span> <span data-ttu-id="758a7-182">Está pensado para su uso por la infraestructura de comunicación remota de .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="758a7-182">It is intended for use by the remoting infrastructure of the .NET Framework.</span></span>  
  
 <span data-ttu-id="758a7-183"><xref:System.Runtime.Remoting.Messaging.AsyncResult.SyncProcessMessage%2A> invoca el código de consumidor <xref:System.AsyncCallback> delegar.</span><span class="sxs-lookup"><span data-stu-id="758a7-183"><xref:System.Runtime.Remoting.Messaging.AsyncResult.SyncProcessMessage%2A> invokes the consumer code's <xref:System.AsyncCallback> delegate.</span></span> <span data-ttu-id="758a7-184">También establece la <xref:System.Runtime.Remoting.Messaging.IMethodReturnMessage> instancia devuelta por la <xref:System.Runtime.Remoting.Messaging.AsyncResult.GetReplyMessage%2A> método.</span><span class="sxs-lookup"><span data-stu-id="758a7-184">It also sets the <xref:System.Runtime.Remoting.Messaging.IMethodReturnMessage> instance returned by the <xref:System.Runtime.Remoting.Messaging.AsyncResult.GetReplyMessage%2A> method.</span></span> <span data-ttu-id="758a7-185">Si el `msg` parámetro es de tipo <xref:System.Runtime.Remoting.Messaging.IMethodReturnMessage>, el mismo objeto devuelto por <xref:System.Runtime.Remoting.Messaging.AsyncResult.GetReplyMessage%2A>.</span><span class="sxs-lookup"><span data-stu-id="758a7-185">If the `msg` parameter is of type <xref:System.Runtime.Remoting.Messaging.IMethodReturnMessage>, the same object is returned by <xref:System.Runtime.Remoting.Messaging.AsyncResult.GetReplyMessage%2A>.</span></span> <span data-ttu-id="758a7-186">En caso contrario, se devuelve un mensaje de respuesta que contiene una excepción de comunicación remota.</span><span class="sxs-lookup"><span data-stu-id="758a7-186">Otherwise, a reply message that contains a remoting exception is returned.</span></span>  
  
 <span data-ttu-id="758a7-187"><xref:System.Runtime.Remoting.Messaging.AsyncResult.SyncProcessMessage%2A> También modifica el valor devuelto por la <xref:System.Runtime.Remoting.Messaging.AsyncResult.IsCompleted%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="758a7-187"><xref:System.Runtime.Remoting.Messaging.AsyncResult.SyncProcessMessage%2A> also modifies the value returned by the <xref:System.Runtime.Remoting.Messaging.AsyncResult.IsCompleted%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
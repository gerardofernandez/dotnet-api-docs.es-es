<Type Name="Stopwatch" FullName="System.Diagnostics.Stopwatch">
  <Metadata><Meta Name="ms.openlocfilehash" Value="572c07c63e217bd42123a99dcb7db0ed56c9ca75" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58728657" /></Metadata><TypeSignature Language="C#" Value="public class Stopwatch" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Stopwatch extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.Stopwatch" />
  <TypeSignature Language="VB.NET" Value="Public Class Stopwatch" />
  <TypeSignature Language="C++ CLI" Value="public ref class Stopwatch" />
  <TypeSignature Language="F#" Value="type Stopwatch = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="d5f76-101">Proporciona un conjunto de métodos y propiedades que puede usar para medir el tiempo transcurrido con precisión.</span><span class="sxs-lookup"><span data-stu-id="d5f76-101">Provides a set of methods and properties that you can use to accurately measure elapsed time.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5f76-102">Un <xref:System.Diagnostics.Stopwatch> instancia puede medir el tiempo transcurrido para un intervalo o el total de tiempo transcurrido entre varios intervalos.</span><span class="sxs-lookup"><span data-stu-id="d5f76-102">A <xref:System.Diagnostics.Stopwatch> instance can measure elapsed time for one interval, or the total of elapsed time across multiple intervals.</span></span> <span data-ttu-id="d5f76-103">En una típica <xref:System.Diagnostics.Stopwatch> escenario, se llama a la <xref:System.Diagnostics.Stopwatch.Start%2A> método, a continuación, finalmente, llamar el <xref:System.Diagnostics.Stopwatch.Stop%2A> método y, a continuación, compruebe el tiempo transcurrido mediante el <xref:System.Diagnostics.Stopwatch.Elapsed%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="d5f76-103">In a typical <xref:System.Diagnostics.Stopwatch> scenario, you call the <xref:System.Diagnostics.Stopwatch.Start%2A> method, then eventually call the <xref:System.Diagnostics.Stopwatch.Stop%2A> method, and then you check elapsed time using the <xref:System.Diagnostics.Stopwatch.Elapsed%2A> property.</span></span>  
  
 <span data-ttu-id="d5f76-104">Un <xref:System.Diagnostics.Stopwatch> instancia está en ejecución o detenido; use <xref:System.Diagnostics.Stopwatch.IsRunning%2A> para determinar el estado actual de un <xref:System.Diagnostics.Stopwatch>.</span><span class="sxs-lookup"><span data-stu-id="d5f76-104">A <xref:System.Diagnostics.Stopwatch> instance is either running or stopped; use <xref:System.Diagnostics.Stopwatch.IsRunning%2A> to determine the current state of a <xref:System.Diagnostics.Stopwatch>.</span></span> <span data-ttu-id="d5f76-105">Usar <xref:System.Diagnostics.Stopwatch.Start%2A> para empezar a medir el tiempo transcurrido; use <xref:System.Diagnostics.Stopwatch.Stop%2A> para detener la medición de tiempo transcurrido.</span><span class="sxs-lookup"><span data-stu-id="d5f76-105">Use <xref:System.Diagnostics.Stopwatch.Start%2A> to begin measuring elapsed time; use <xref:System.Diagnostics.Stopwatch.Stop%2A> to stop measuring elapsed time.</span></span> <span data-ttu-id="d5f76-106">Consultar el valor de tiempo transcurrido mediante las propiedades <xref:System.Diagnostics.Stopwatch.Elapsed%2A>, <xref:System.Diagnostics.Stopwatch.ElapsedMilliseconds%2A>, o <xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A>.</span><span class="sxs-lookup"><span data-stu-id="d5f76-106">Query the elapsed time value through the properties <xref:System.Diagnostics.Stopwatch.Elapsed%2A>, <xref:System.Diagnostics.Stopwatch.ElapsedMilliseconds%2A>, or <xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A>.</span></span> <span data-ttu-id="d5f76-107">Puede consultar las propiedades de tiempo transcurrido mientras la instancia está en ejecución o detenido.</span><span class="sxs-lookup"><span data-stu-id="d5f76-107">You can query the elapsed time properties while the instance is running or stopped.</span></span> <span data-ttu-id="d5f76-108">Mientras que el tiempo transcurrido propiedades debiera aumentar paulatinamente el <xref:System.Diagnostics.Stopwatch> está ejecutando; permanecen constantes cuando se detiene la instancia.</span><span class="sxs-lookup"><span data-stu-id="d5f76-108">The elapsed time properties steadily increase while the <xref:System.Diagnostics.Stopwatch> is running; they remain constant when the instance is stopped.</span></span>  
  
 <span data-ttu-id="d5f76-109">De forma predeterminada, el valor de tiempo transcurrido de una <xref:System.Diagnostics.Stopwatch> instancia es igual que el total de todos los intervalos de tiempo medido.</span><span class="sxs-lookup"><span data-stu-id="d5f76-109">By default, the elapsed time value of a <xref:System.Diagnostics.Stopwatch> instance equals the total of all measured time intervals.</span></span> <span data-ttu-id="d5f76-110">Cada llamada a <xref:System.Diagnostics.Stopwatch.Start%2A> empieza el recuento en el tiempo transcurrido acumulado; cada llamada a <xref:System.Diagnostics.Stopwatch.Stop%2A> finaliza la medición del intervalo actual y se bloquea el valor de tiempo transcurrido acumulado.</span><span class="sxs-lookup"><span data-stu-id="d5f76-110">Each call to <xref:System.Diagnostics.Stopwatch.Start%2A> begins counting at the cumulative elapsed time; each call to <xref:System.Diagnostics.Stopwatch.Stop%2A> ends the current interval measurement and freezes the cumulative elapsed time value.</span></span> <span data-ttu-id="d5f76-111">Use la <xref:System.Diagnostics.Stopwatch.Reset%2A> método para borrar el tiempo transcurrido acumulado en una existente <xref:System.Diagnostics.Stopwatch> instancia.</span><span class="sxs-lookup"><span data-stu-id="d5f76-111">Use the <xref:System.Diagnostics.Stopwatch.Reset%2A> method to clear the cumulative elapsed time in an existing <xref:System.Diagnostics.Stopwatch> instance.</span></span>  
  
 <span data-ttu-id="d5f76-112">El <xref:System.Diagnostics.Stopwatch> mide el tiempo transcurrido por el recuento de tics de temporizador en el mecanismo de temporización subyacente.</span><span class="sxs-lookup"><span data-stu-id="d5f76-112">The <xref:System.Diagnostics.Stopwatch> measures elapsed time by counting timer ticks in the underlying timer mechanism.</span></span> <span data-ttu-id="d5f76-113">Si el sistema operativo y hardware instalado admiten un contador de rendimiento de alta resolución, el <xref:System.Diagnostics.Stopwatch> clase utiliza ese contador para medir el tiempo transcurrido.</span><span class="sxs-lookup"><span data-stu-id="d5f76-113">If the installed hardware and operating system support a high-resolution performance counter, then the <xref:System.Diagnostics.Stopwatch> class uses that counter to measure elapsed time.</span></span> <span data-ttu-id="d5f76-114">En caso contrario, el <xref:System.Diagnostics.Stopwatch> clase usa el temporizador del sistema para medir el tiempo transcurrido.</span><span class="sxs-lookup"><span data-stu-id="d5f76-114">Otherwise, the <xref:System.Diagnostics.Stopwatch> class uses the system timer to measure elapsed time.</span></span> <span data-ttu-id="d5f76-115">Use la <xref:System.Diagnostics.Stopwatch.Frequency> y <xref:System.Diagnostics.Stopwatch.IsHighResolution> campos para determinar la precisión y la resolución de la <xref:System.Diagnostics.Stopwatch> implementación del control de tiempo.</span><span class="sxs-lookup"><span data-stu-id="d5f76-115">Use the <xref:System.Diagnostics.Stopwatch.Frequency> and <xref:System.Diagnostics.Stopwatch.IsHighResolution> fields to determine the precision and resolution of the <xref:System.Diagnostics.Stopwatch> timing implementation.</span></span>  
  
 <span data-ttu-id="d5f76-116">La <xref:System.Diagnostics.Stopwatch> clase ayuda a la manipulación de los contadores de rendimiento relacionados con el control de tiempo dentro del código administrado.</span><span class="sxs-lookup"><span data-stu-id="d5f76-116">The <xref:System.Diagnostics.Stopwatch> class assists the manipulation of timing-related performance counters within managed code.</span></span> <span data-ttu-id="d5f76-117">En concreto, el <xref:System.Diagnostics.Stopwatch.Frequency> campo y <xref:System.Diagnostics.Stopwatch.GetTimestamp%2A> método puede usarse en lugar de las API de Win32 no administrada `QueryPerformanceFrequency` y `QueryPerformanceCounter`.</span><span class="sxs-lookup"><span data-stu-id="d5f76-117">Specifically, the <xref:System.Diagnostics.Stopwatch.Frequency> field and <xref:System.Diagnostics.Stopwatch.GetTimestamp%2A> method can be used in place of the unmanaged Win32 APIs `QueryPerformanceFrequency` and `QueryPerformanceCounter`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d5f76-118">En un equipo con varios procesadores, no importa qué procesador se ejecuta el subproceso en.</span><span class="sxs-lookup"><span data-stu-id="d5f76-118">On a multiprocessor computer, it does not matter which processor the thread runs on.</span></span> <span data-ttu-id="d5f76-119">Sin embargo, debido a errores en el BIOS o la capa de abstracción de Hardware (HAL), puede obtener resultados diferentes de control de tiempo en procesadores diferentes.</span><span class="sxs-lookup"><span data-stu-id="d5f76-119">However, because of bugs in the BIOS or the Hardware Abstraction Layer (HAL), you can get different timing results on different processors.</span></span> <span data-ttu-id="d5f76-120">Para especificar la afinidad del procesador para un subproceso, use el <xref:System.Diagnostics.ProcessThread.ProcessorAffinity%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="d5f76-120">To specify processor affinity for a thread, use the <xref:System.Diagnostics.ProcessThread.ProcessorAffinity%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d5f76-121">En el ejemplo siguiente se muestra cómo usar el <xref:System.Diagnostics.Stopwatch> clase para determinar el tiempo de ejecución para una aplicación.</span><span class="sxs-lookup"><span data-stu-id="d5f76-121">The following example demonstrates how to use the <xref:System.Diagnostics.Stopwatch> class to determine the execution time for an application.</span></span>  
  
 [!code-csharp[System.Diagnostics.Stopwatch#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.Stopwatch/CS/source.cs#1)]
 [!code-vb[System.Diagnostics.Stopwatch#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.Stopwatch/VB/source.vb#1)]  
  
 <span data-ttu-id="d5f76-122">En el ejemplo siguiente se muestra el uso de la <xref:System.Diagnostics.Stopwatch> clase para calcular los datos de rendimiento.</span><span class="sxs-lookup"><span data-stu-id="d5f76-122">The following example demonstrates the use of the <xref:System.Diagnostics.Stopwatch> class to calculate performance data.</span></span>  
  
 [!code-cpp[StopWatchPerfSample#1](~/samples/snippets/cpp/VS_Snippets_CLR/StopWatchPerfSample/CPP/source.cpp#1)]
 [!code-csharp[StopWatchPerfSample#1](~/samples/snippets/csharp/VS_Snippets_CLR/StopWatchPerfSample/CS/source.cs#1)]
 [!code-vb[StopWatchPerfSample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/StopWatchPerfSample/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.TimeSpan" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Stopwatch ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Stopwatch.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Stopwatch();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d5f76-123">Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.Stopwatch" />.</span><span class="sxs-lookup"><span data-stu-id="d5f76-123">Initializes a new instance of the <see cref="T:System.Diagnostics.Stopwatch" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5f76-124">El valor devuelto <xref:System.Diagnostics.Stopwatch> se detiene la instancia y la propiedad de tiempo transcurrido de la instancia es cero.</span><span class="sxs-lookup"><span data-stu-id="d5f76-124">The returned <xref:System.Diagnostics.Stopwatch> instance is stopped, and the elapsed time property of the instance is zero.</span></span>  
  
 <span data-ttu-id="d5f76-125">Use la <xref:System.Diagnostics.Stopwatch.Start%2A> que comience a medir el tiempo transcurrido con el nuevo método <xref:System.Diagnostics.Stopwatch> instancia.</span><span class="sxs-lookup"><span data-stu-id="d5f76-125">Use the <xref:System.Diagnostics.Stopwatch.Start%2A> method to begin measuring elapsed time with the new <xref:System.Diagnostics.Stopwatch> instance.</span></span> <span data-ttu-id="d5f76-126">Use la <xref:System.Diagnostics.Stopwatch.StartNew%2A> método para inicializar un nuevo <xref:System.Diagnostics.Stopwatch> instancia e inícielo inmediatamente.</span><span class="sxs-lookup"><span data-stu-id="d5f76-126">Use the <xref:System.Diagnostics.Stopwatch.StartNew%2A> method to initialize a new <xref:System.Diagnostics.Stopwatch> instance and immediately start it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d5f76-127">En el ejemplo siguiente se inicializa un <xref:System.Diagnostics.Stopwatch> instancia mediante un constructor de clase simple.</span><span class="sxs-lookup"><span data-stu-id="d5f76-127">The following example initializes a <xref:System.Diagnostics.Stopwatch> instance by using a simple class constructor.</span></span>  
  
 [!code-csharp[System.Diagnostics.Stopwatch#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.Stopwatch/CS/source.cs#1)]
 [!code-vb[System.Diagnostics.Stopwatch#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.Stopwatch/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.Stopwatch.StartNew" />
      </Docs>
    </Member>
    <Member MemberName="Elapsed">
      <MemberSignature Language="C#" Value="public TimeSpan Elapsed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan Elapsed" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Stopwatch.Elapsed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Elapsed As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan Elapsed { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.Elapsed : TimeSpan" Usage="System.Diagnostics.Stopwatch.Elapsed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d5f76-128">Obtiene el tiempo total transcurrido medido por la instancia actual.</span><span class="sxs-lookup"><span data-stu-id="d5f76-128">Gets the total elapsed time measured by the current instance.</span></span></summary>
        <value><span data-ttu-id="d5f76-129"><see cref="T:System.TimeSpan" /> de sólo lectura que representa el tiempo transcurrido total medido por la instancia actual.</span><span class="sxs-lookup"><span data-stu-id="d5f76-129">A read-only <see cref="T:System.TimeSpan" /> representing the total elapsed time measured by the current instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5f76-130">En una típica <xref:System.Diagnostics.Stopwatch> escenario, se llama a la <xref:System.Diagnostics.Stopwatch.Start%2A> método, a continuación, finalmente, llamar el <xref:System.Diagnostics.Stopwatch.Stop%2A> método y, a continuación, compruebe el tiempo transcurrido mediante el <xref:System.Diagnostics.Stopwatch.Elapsed%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="d5f76-130">In a typical <xref:System.Diagnostics.Stopwatch> scenario, you call the <xref:System.Diagnostics.Stopwatch.Start%2A> method, then eventually call the <xref:System.Diagnostics.Stopwatch.Stop%2A> method, and then you check elapsed time using the <xref:System.Diagnostics.Stopwatch.Elapsed%2A> property.</span></span>  
  
 <span data-ttu-id="d5f76-131">Use la <xref:System.Diagnostics.Stopwatch.Elapsed%2A> utilizando el valor de propiedad para recuperar el tiempo transcurrido <xref:System.TimeSpan> métodos y propiedades.</span><span class="sxs-lookup"><span data-stu-id="d5f76-131">Use the <xref:System.Diagnostics.Stopwatch.Elapsed%2A> property to retrieve the elapsed time value using <xref:System.TimeSpan> methods and properties.</span></span> <span data-ttu-id="d5f76-132">Por ejemplo, puede dar formato devuelto <xref:System.TimeSpan> de instancia en una representación de texto, o se pasa a otra clase que requiera un <xref:System.TimeSpan> parámetro.</span><span class="sxs-lookup"><span data-stu-id="d5f76-132">For example, you can format the returned <xref:System.TimeSpan> instance into a text representation, or pass it to another class that requires a <xref:System.TimeSpan> parameter.</span></span>  
  
 <span data-ttu-id="d5f76-133">Puede consultar las propiedades <xref:System.Diagnostics.Stopwatch.Elapsed%2A>, <xref:System.Diagnostics.Stopwatch.ElapsedMilliseconds%2A>, y <xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A> mientras el <xref:System.Diagnostics.Stopwatch> instancia está en ejecución o detenido.</span><span class="sxs-lookup"><span data-stu-id="d5f76-133">You can query the properties <xref:System.Diagnostics.Stopwatch.Elapsed%2A>, <xref:System.Diagnostics.Stopwatch.ElapsedMilliseconds%2A>, and <xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A> while the <xref:System.Diagnostics.Stopwatch> instance is running or stopped.</span></span> <span data-ttu-id="d5f76-134">Mientras que el tiempo transcurrido propiedades debiera aumentar paulatinamente el <xref:System.Diagnostics.Stopwatch> está ejecutando; permanecen constantes cuando se detiene la instancia.</span><span class="sxs-lookup"><span data-stu-id="d5f76-134">The elapsed time properties steadily increase while the <xref:System.Diagnostics.Stopwatch> is running; they remain constant when the instance is stopped.</span></span>  
  
 <span data-ttu-id="d5f76-135">De forma predeterminada, el valor de tiempo transcurrido de una <xref:System.Diagnostics.Stopwatch> instancia es igual que el total de todos los intervalos de tiempo medido.</span><span class="sxs-lookup"><span data-stu-id="d5f76-135">By default, the elapsed time value of a <xref:System.Diagnostics.Stopwatch> instance equals the total of all measured time intervals.</span></span> <span data-ttu-id="d5f76-136">Cada llamada a <xref:System.Diagnostics.Stopwatch.Start%2A> empieza el recuento en el tiempo transcurrido acumulado; cada llamada a <xref:System.Diagnostics.Stopwatch.Stop%2A> finaliza la medición del intervalo actual y se bloquea el valor de tiempo transcurrido acumulado.</span><span class="sxs-lookup"><span data-stu-id="d5f76-136">Each call to <xref:System.Diagnostics.Stopwatch.Start%2A> begins counting at the cumulative elapsed time; each call to <xref:System.Diagnostics.Stopwatch.Stop%2A> ends the current interval measurement and freezes the cumulative elapsed time value.</span></span> <span data-ttu-id="d5f76-137">Use la <xref:System.Diagnostics.Stopwatch.Reset%2A> método para borrar el tiempo transcurrido acumulado en una existente <xref:System.Diagnostics.Stopwatch> instancia.</span><span class="sxs-lookup"><span data-stu-id="d5f76-137">Use the <xref:System.Diagnostics.Stopwatch.Reset%2A> method to clear the cumulative elapsed time in an existing <xref:System.Diagnostics.Stopwatch> instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d5f76-138">En el ejemplo siguiente se muestra cómo usar el <xref:System.Diagnostics.Stopwatch.Elapsed%2A> propiedad para determinar el tiempo de ejecución para una aplicación.</span><span class="sxs-lookup"><span data-stu-id="d5f76-138">The following example demonstrates how to use the <xref:System.Diagnostics.Stopwatch.Elapsed%2A> property to determine the execution time for an application.</span></span>  
  
 [!code-csharp[System.Diagnostics.Stopwatch#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.Stopwatch/CS/source.cs#1)]
 [!code-vb[System.Diagnostics.Stopwatch#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.Stopwatch/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.TimeSpan" />
        <altmember cref="P:System.Diagnostics.Stopwatch.ElapsedMilliseconds" />
        <altmember cref="P:System.Diagnostics.Stopwatch.ElapsedTicks" />
      </Docs>
    </Member>
    <Member MemberName="ElapsedMilliseconds">
      <MemberSignature Language="C#" Value="public long ElapsedMilliseconds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 ElapsedMilliseconds" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Stopwatch.ElapsedMilliseconds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ElapsedMilliseconds As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long ElapsedMilliseconds { long get(); };" />
      <MemberSignature Language="F#" Value="member this.ElapsedMilliseconds : int64" Usage="System.Diagnostics.Stopwatch.ElapsedMilliseconds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d5f76-139">Obtiene el tiempo total transcurrido medido por la instancia actual, en milisegundos.</span><span class="sxs-lookup"><span data-stu-id="d5f76-139">Gets the total elapsed time measured by the current instance, in milliseconds.</span></span></summary>
        <value><span data-ttu-id="d5f76-140">Entero largo de solo lectura que representa el número total de milisegundos medido por la instancia actual.</span><span class="sxs-lookup"><span data-stu-id="d5f76-140">A read-only long integer representing the total number of milliseconds measured by the current instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5f76-141">Esta propiedad representa el tiempo transcurrido redondeado hacia abajo hasta el valor de milisegundo entero más cercano.</span><span class="sxs-lookup"><span data-stu-id="d5f76-141">This property represents elapsed time rounded down to the nearest whole millisecond value.</span></span> <span data-ttu-id="d5f76-142">Para medir la precisión mayor, utilice el <xref:System.Diagnostics.Stopwatch.Elapsed%2A> o <xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A> propiedades.</span><span class="sxs-lookup"><span data-stu-id="d5f76-142">For higher precision measurements, use the <xref:System.Diagnostics.Stopwatch.Elapsed%2A> or <xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A> properties.</span></span>  
  
 <span data-ttu-id="d5f76-143">Puede consultar las propiedades <xref:System.Diagnostics.Stopwatch.Elapsed%2A>, <xref:System.Diagnostics.Stopwatch.ElapsedMilliseconds%2A>, y <xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A> mientras el <xref:System.Diagnostics.Stopwatch> instancia está en ejecución o detenido.</span><span class="sxs-lookup"><span data-stu-id="d5f76-143">You can query the properties <xref:System.Diagnostics.Stopwatch.Elapsed%2A>, <xref:System.Diagnostics.Stopwatch.ElapsedMilliseconds%2A>, and <xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A> while the <xref:System.Diagnostics.Stopwatch> instance is running or stopped.</span></span> <span data-ttu-id="d5f76-144">Mientras que el tiempo transcurrido propiedades debiera aumentar paulatinamente el <xref:System.Diagnostics.Stopwatch> está ejecutando; permanecen constantes cuando se detiene la instancia.</span><span class="sxs-lookup"><span data-stu-id="d5f76-144">The elapsed time properties steadily increase while the <xref:System.Diagnostics.Stopwatch> is running; they remain constant when the instance is stopped.</span></span>  
  
 <span data-ttu-id="d5f76-145">De forma predeterminada, el valor de tiempo transcurrido de una <xref:System.Diagnostics.Stopwatch> instancia es igual que el total de todos los intervalos de tiempo medido.</span><span class="sxs-lookup"><span data-stu-id="d5f76-145">By default, the elapsed time value of a <xref:System.Diagnostics.Stopwatch> instance equals the total of all measured time intervals.</span></span> <span data-ttu-id="d5f76-146">Cada llamada a <xref:System.Diagnostics.Stopwatch.Start%2A> empieza el recuento en el tiempo transcurrido acumulado; cada llamada a <xref:System.Diagnostics.Stopwatch.Stop%2A> finaliza la medición del intervalo actual y se bloquea el valor de tiempo transcurrido acumulado.</span><span class="sxs-lookup"><span data-stu-id="d5f76-146">Each call to <xref:System.Diagnostics.Stopwatch.Start%2A> begins counting at the cumulative elapsed time; each call to <xref:System.Diagnostics.Stopwatch.Stop%2A> ends the current interval measurement and freezes the cumulative elapsed time value.</span></span> <span data-ttu-id="d5f76-147">Use la <xref:System.Diagnostics.Stopwatch.Reset%2A> método para borrar el tiempo transcurrido acumulado en una existente <xref:System.Diagnostics.Stopwatch> instancia.</span><span class="sxs-lookup"><span data-stu-id="d5f76-147">Use the <xref:System.Diagnostics.Stopwatch.Reset%2A> method to clear the cumulative elapsed time in an existing <xref:System.Diagnostics.Stopwatch> instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d5f76-148">En el ejemplo siguiente se usa el <xref:System.Diagnostics.Stopwatch> clase para medir el rendimiento de cuatro implementaciones diferentes para analizar un entero de una cadena.</span><span class="sxs-lookup"><span data-stu-id="d5f76-148">The following example uses the <xref:System.Diagnostics.Stopwatch> class to measure the performance of four different implementations for parsing an integer from a string.</span></span> <span data-ttu-id="d5f76-149">Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Diagnostics.Stopwatch> clase.</span><span class="sxs-lookup"><span data-stu-id="d5f76-149">This code example is part of a larger example provided for the <xref:System.Diagnostics.Stopwatch> class.</span></span>  
  
 [!code-cpp[StopWatchPerfSample#3](~/samples/snippets/cpp/VS_Snippets_CLR/StopWatchPerfSample/CPP/source.cpp#3)]
 [!code-csharp[StopWatchPerfSample#3](~/samples/snippets/csharp/VS_Snippets_CLR/StopWatchPerfSample/CS/source.cs#3)]
 [!code-vb[StopWatchPerfSample#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/StopWatchPerfSample/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.Stopwatch.Elapsed" />
        <altmember cref="P:System.Diagnostics.Stopwatch.ElapsedTicks" />
      </Docs>
    </Member>
    <Member MemberName="ElapsedTicks">
      <MemberSignature Language="C#" Value="public long ElapsedTicks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 ElapsedTicks" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Stopwatch.ElapsedTicks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ElapsedTicks As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long ElapsedTicks { long get(); };" />
      <MemberSignature Language="F#" Value="member this.ElapsedTicks : int64" Usage="System.Diagnostics.Stopwatch.ElapsedTicks" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d5f76-150">Obtiene el tiempo total transcurrido medido por la instancia actual, en tics de temporizador.</span><span class="sxs-lookup"><span data-stu-id="d5f76-150">Gets the total elapsed time measured by the current instance, in timer ticks.</span></span></summary>
        <value><span data-ttu-id="d5f76-151">Un entero largo de solo lectura que representa el número total de tics de temporizador medido por la instancia actual.</span><span class="sxs-lookup"><span data-stu-id="d5f76-151">A read-only long integer representing the total number of timer ticks measured by the current instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5f76-152">Esta propiedad representa el número de pasos transcurridos en el mecanismo de temporización subyacente.</span><span class="sxs-lookup"><span data-stu-id="d5f76-152">This property represents the number of elapsed ticks in the underlying timer mechanism.</span></span> <span data-ttu-id="d5f76-153">Un TIC es la unidad más pequeña de tiempo que el <xref:System.Diagnostics.Stopwatch> temporizador puede medir.</span><span class="sxs-lookup"><span data-stu-id="d5f76-153">A tick is the smallest unit of time that the <xref:System.Diagnostics.Stopwatch> timer can measure.</span></span> <span data-ttu-id="d5f76-154">Use la <xref:System.Diagnostics.Stopwatch.Frequency> campo para convertir el <xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A> valor en un número de segundos.</span><span class="sxs-lookup"><span data-stu-id="d5f76-154">Use the <xref:System.Diagnostics.Stopwatch.Frequency> field to convert the <xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A> value into a number of seconds.</span></span>  
  
 <span data-ttu-id="d5f76-155">Puede consultar las propiedades <xref:System.Diagnostics.Stopwatch.Elapsed%2A>, <xref:System.Diagnostics.Stopwatch.ElapsedMilliseconds%2A>, y <xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A> mientras el <xref:System.Diagnostics.Stopwatch> instancia está en ejecución o detenido.</span><span class="sxs-lookup"><span data-stu-id="d5f76-155">You can query the properties <xref:System.Diagnostics.Stopwatch.Elapsed%2A>, <xref:System.Diagnostics.Stopwatch.ElapsedMilliseconds%2A>, and <xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A> while the <xref:System.Diagnostics.Stopwatch> instance is running or stopped.</span></span> <span data-ttu-id="d5f76-156">Mientras que el tiempo transcurrido propiedades debiera aumentar paulatinamente el <xref:System.Diagnostics.Stopwatch> está ejecutando; permanecen constantes cuando se detiene la instancia.</span><span class="sxs-lookup"><span data-stu-id="d5f76-156">The elapsed time properties steadily increase while the <xref:System.Diagnostics.Stopwatch> is running; they remain constant when the instance is stopped.</span></span>  
  
 <span data-ttu-id="d5f76-157">De forma predeterminada, el valor de tiempo transcurrido de una <xref:System.Diagnostics.Stopwatch> instancia es igual que el total de todos los intervalos de tiempo medido.</span><span class="sxs-lookup"><span data-stu-id="d5f76-157">By default, the elapsed time value of a <xref:System.Diagnostics.Stopwatch> instance equals the total of all measured time intervals.</span></span> <span data-ttu-id="d5f76-158">Cada llamada a <xref:System.Diagnostics.Stopwatch.Start%2A> empieza el recuento en el tiempo transcurrido acumulado; cada llamada a <xref:System.Diagnostics.Stopwatch.Stop%2A> finaliza la medición del intervalo actual y se bloquea el valor de tiempo transcurrido acumulado.</span><span class="sxs-lookup"><span data-stu-id="d5f76-158">Each call to <xref:System.Diagnostics.Stopwatch.Start%2A> begins counting at the cumulative elapsed time; each call to <xref:System.Diagnostics.Stopwatch.Stop%2A> ends the current interval measurement and freezes the cumulative elapsed time value.</span></span> <span data-ttu-id="d5f76-159">Use la <xref:System.Diagnostics.Stopwatch.Reset%2A> método para borrar el tiempo transcurrido acumulado en una existente <xref:System.Diagnostics.Stopwatch> instancia.</span><span class="sxs-lookup"><span data-stu-id="d5f76-159">Use the <xref:System.Diagnostics.Stopwatch.Reset%2A> method to clear the cumulative elapsed time in an existing <xref:System.Diagnostics.Stopwatch> instance.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d5f76-160"><xref:System.Diagnostics.Stopwatch> pasos son diferentes de <xref:System.DateTime.Ticks%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d5f76-160"><xref:System.Diagnostics.Stopwatch> ticks are different from <xref:System.DateTime.Ticks%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="d5f76-161">Cada paso en el <xref:System.DateTime.Ticks%2A?displayProperty=nameWithType> valor representa un intervalo de 100 nanosegundos.</span><span class="sxs-lookup"><span data-stu-id="d5f76-161">Each tick in the <xref:System.DateTime.Ticks%2A?displayProperty=nameWithType> value represents one 100-nanosecond interval.</span></span> <span data-ttu-id="d5f76-162">Cada paso en el <xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A> valor representa el intervalo de tiempo igual a 1 segundo dividido por el <xref:System.Diagnostics.Stopwatch.Frequency>.</span><span class="sxs-lookup"><span data-stu-id="d5f76-162">Each tick in the <xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A> value represents the time interval equal to 1 second divided by the <xref:System.Diagnostics.Stopwatch.Frequency>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d5f76-163">En el ejemplo siguiente se usa el <xref:System.Diagnostics.Stopwatch> clase para medir el rendimiento de cuatro implementaciones diferentes para analizar un entero de una cadena.</span><span class="sxs-lookup"><span data-stu-id="d5f76-163">The following example uses the <xref:System.Diagnostics.Stopwatch> class to measure the performance of four different implementations for parsing an integer from a string.</span></span> <span data-ttu-id="d5f76-164">Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Diagnostics.Stopwatch> clase.</span><span class="sxs-lookup"><span data-stu-id="d5f76-164">This code example is part of a larger example provided for the <xref:System.Diagnostics.Stopwatch> class.</span></span>  
  
 [!code-cpp[StopWatchPerfSample#4](~/samples/snippets/cpp/VS_Snippets_CLR/StopWatchPerfSample/CPP/source.cpp#4)]
 [!code-csharp[StopWatchPerfSample#4](~/samples/snippets/csharp/VS_Snippets_CLR/StopWatchPerfSample/CS/source.cs#4)]
 [!code-vb[StopWatchPerfSample#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/StopWatchPerfSample/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.Stopwatch.Elapsed" />
        <altmember cref="P:System.Diagnostics.Stopwatch.ElapsedMilliseconds" />
        <altmember cref="F:System.Diagnostics.Stopwatch.Frequency" />
      </Docs>
    </Member>
    <Member MemberName="Frequency">
      <MemberSignature Language="C#" Value="public static readonly long Frequency;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly int64 Frequency" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.Stopwatch.Frequency" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Frequency As Long " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly long Frequency;" />
      <MemberSignature Language="F#" Value=" staticval mutable Frequency : int64" Usage="System.Diagnostics.Stopwatch.Frequency" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d5f76-165">Obtiene la frecuencia del temporizador en forma de número de tics por segundo.</span><span class="sxs-lookup"><span data-stu-id="d5f76-165">Gets the frequency of the timer as the number of ticks per second.</span></span> <span data-ttu-id="d5f76-166">Este campo es de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="d5f76-166">This field is read-only.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5f76-167">La frecuencia del temporizador indica la precisión del temporizador y la resolución.</span><span class="sxs-lookup"><span data-stu-id="d5f76-167">The timer frequency indicates the timer precision and resolution.</span></span> <span data-ttu-id="d5f76-168">Por ejemplo, una frecuencia del temporizador de 2 millones de tics por segundo es igual a una resolución de temporizador de 500 nanosegundos por paso.</span><span class="sxs-lookup"><span data-stu-id="d5f76-168">For example, a timer frequency of 2 million ticks per second equals a timer resolution of 500 nanoseconds per tick.</span></span> <span data-ttu-id="d5f76-169">En otras palabras, dado un segundo es igual a 1 millones de nanosegundos, una frecuencia del temporizador de 2 millones de ciclos por segundo es equivalente a los pasos de 2 millones por 1 millones de nanosegundos, que se pueden simplificar aún más 1 TIC por 500 nanosegundos.</span><span class="sxs-lookup"><span data-stu-id="d5f76-169">In other words, because one second equals 1 billion nanoseconds, a timer frequency of 2 million ticks per second is equivalent to 2 million ticks per 1 billion nanoseconds, which can be further simplified to 1 tick per 500 nanoseconds.</span></span>  
  
 <span data-ttu-id="d5f76-170">El <xref:System.Diagnostics.Stopwatch.Frequency> valor depende de la resolución del mecanismo de temporización subyacente.</span><span class="sxs-lookup"><span data-stu-id="d5f76-170">The <xref:System.Diagnostics.Stopwatch.Frequency> value depends on the resolution of the underlying timing mechanism.</span></span> <span data-ttu-id="d5f76-171">Si el sistema operativo y hardware instalado admiten un contador de rendimiento de alta resolución, el <xref:System.Diagnostics.Stopwatch.Frequency> valor refleja la frecuencia de ese contador.</span><span class="sxs-lookup"><span data-stu-id="d5f76-171">If the installed hardware and operating system support a high-resolution performance counter, then the <xref:System.Diagnostics.Stopwatch.Frequency> value reflects the frequency of that counter.</span></span> <span data-ttu-id="d5f76-172">En caso contrario, el <xref:System.Diagnostics.Stopwatch.Frequency> valor se basa en la frecuencia del temporizador del sistema.</span><span class="sxs-lookup"><span data-stu-id="d5f76-172">Otherwise, the <xref:System.Diagnostics.Stopwatch.Frequency> value is based on the system timer frequency.</span></span>  
  
 <span data-ttu-id="d5f76-173">Dado que el <xref:System.Diagnostics.Stopwatch> frecuencia depende del hardware instalado y el sistema operativo, la <xref:System.Diagnostics.Stopwatch.Frequency> valor permanece constante mientras se está ejecutando el sistema.</span><span class="sxs-lookup"><span data-stu-id="d5f76-173">Because the <xref:System.Diagnostics.Stopwatch> frequency depends on the installed hardware and operating system, the <xref:System.Diagnostics.Stopwatch.Frequency> value remains constant while the system is running.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d5f76-174">El ejemplo siguiente muestra la frecuencia y la resolución de un <xref:System.Diagnostics.Stopwatch> temporizador.</span><span class="sxs-lookup"><span data-stu-id="d5f76-174">The following example displays the frequency and resolution of a <xref:System.Diagnostics.Stopwatch> timer.</span></span> <span data-ttu-id="d5f76-175">Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Diagnostics.Stopwatch> clase.</span><span class="sxs-lookup"><span data-stu-id="d5f76-175">This code example is part of a larger example provided for the <xref:System.Diagnostics.Stopwatch> class.</span></span>  
  
 [!code-cpp[StopWatchPerfSample#2](~/samples/snippets/cpp/VS_Snippets_CLR/StopWatchPerfSample/CPP/source.cpp#2)]
 [!code-csharp[StopWatchPerfSample#2](~/samples/snippets/csharp/VS_Snippets_CLR/StopWatchPerfSample/CS/source.cs#2)]
 [!code-vb[StopWatchPerfSample#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/StopWatchPerfSample/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Diagnostics.Stopwatch.IsHighResolution" />
      </Docs>
    </Member>
    <Member MemberName="GetTimestamp">
      <MemberSignature Language="C#" Value="public static long GetTimestamp ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 GetTimestamp() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Stopwatch.GetTimestamp" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTimestamp () As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long GetTimestamp();" />
      <MemberSignature Language="F#" Value="static member GetTimestamp : unit -&gt; int64" Usage="System.Diagnostics.Stopwatch.GetTimestamp " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d5f76-176">Obtiene el número actual de tics del mecanismo de temporización.</span><span class="sxs-lookup"><span data-stu-id="d5f76-176">Gets the current number of ticks in the timer mechanism.</span></span></summary>
        <returns><span data-ttu-id="d5f76-177">Entero largo que representa el valor del contador de tics del mecanismo de temporización subyacente.</span><span class="sxs-lookup"><span data-stu-id="d5f76-177">A long integer representing the tick counter value of the underlying timer mechanism.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5f76-178">Si el <xref:System.Diagnostics.Stopwatch> clase utiliza un contador de rendimiento de alta resolución, <xref:System.Diagnostics.Stopwatch.GetTimestamp%2A> devuelve el valor actual de ese contador.</span><span class="sxs-lookup"><span data-stu-id="d5f76-178">If the <xref:System.Diagnostics.Stopwatch> class uses a high-resolution performance counter, <xref:System.Diagnostics.Stopwatch.GetTimestamp%2A> returns the current value of that counter.</span></span> <span data-ttu-id="d5f76-179">Si el <xref:System.Diagnostics.Stopwatch> clase usa el temporizador del sistema, <xref:System.Diagnostics.Stopwatch.GetTimestamp%2A> devuelve el valor actual <xref:System.DateTime.Ticks%2A?displayProperty=nameWithType> propiedad de la <xref:System.DateTime.Now%2A?displayProperty=nameWithType> instancia.</span><span class="sxs-lookup"><span data-stu-id="d5f76-179">If the <xref:System.Diagnostics.Stopwatch> class uses the system timer, <xref:System.Diagnostics.Stopwatch.GetTimestamp%2A> returns the current <xref:System.DateTime.Ticks%2A?displayProperty=nameWithType> property of the <xref:System.DateTime.Now%2A?displayProperty=nameWithType> instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d5f76-180">El ejemplo siguiente muestra el uso de la <xref:System.Diagnostics.Stopwatch.GetTimestamp%2A> método para actualizar un contador de rendimiento.</span><span class="sxs-lookup"><span data-stu-id="d5f76-180">The following example illustrates the use of the <xref:System.Diagnostics.Stopwatch.GetTimestamp%2A> method to update a performance counter.</span></span>  
  
 [!code-cpp[PerformanceCounterType.ElapsedTime#2](~/samples/snippets/cpp/VS_Snippets_CLR/PerformanceCounterType.ElapsedTime/CPP/elapsedtime.cpp#2)]
 [!code-csharp[PerformanceCounterType.ElapsedTime#2](~/samples/snippets/csharp/VS_Snippets_CLR/PerformanceCounterType.ElapsedTime/CS/elapsedtime.cs#2)]
 [!code-vb[PerformanceCounterType.ElapsedTime#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerformanceCounterType.ElapsedTime/VB/elapsedtime.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Diagnostics.Stopwatch.IsHighResolution" />
      </Docs>
    </Member>
    <Member MemberName="IsHighResolution">
      <MemberSignature Language="C#" Value="public static readonly bool IsHighResolution;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly bool IsHighResolution" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.Stopwatch.IsHighResolution" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsHighResolution As Boolean " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly bool IsHighResolution;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsHighResolution : bool" Usage="System.Diagnostics.Stopwatch.IsHighResolution" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d5f76-181">Indica si el temporizador se basa en un contador de rendimiento de alta resolución.</span><span class="sxs-lookup"><span data-stu-id="d5f76-181">Indicates whether the timer is based on a high-resolution performance counter.</span></span> <span data-ttu-id="d5f76-182">Este campo es de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="d5f76-182">This field is read-only.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5f76-183">El temporizador usado por el <xref:System.Diagnostics.Stopwatch> clase depende del hardware del sistema y el sistema operativo.</span><span class="sxs-lookup"><span data-stu-id="d5f76-183">The timer used by the <xref:System.Diagnostics.Stopwatch> class depends on the system hardware and operating system.</span></span> <span data-ttu-id="d5f76-184"><xref:System.Diagnostics.Stopwatch.IsHighResolution> es `true` si el <xref:System.Diagnostics.Stopwatch> temporizador se basa en un contador de rendimiento de alta resolución.</span><span class="sxs-lookup"><span data-stu-id="d5f76-184"><xref:System.Diagnostics.Stopwatch.IsHighResolution> is `true` if the <xref:System.Diagnostics.Stopwatch> timer is based on a high-resolution performance counter.</span></span> <span data-ttu-id="d5f76-185">En caso contrario, <xref:System.Diagnostics.Stopwatch.IsHighResolution> es `false`, lo que indica que el <xref:System.Diagnostics.Stopwatch> temporizador se basa en el temporizador del sistema.</span><span class="sxs-lookup"><span data-stu-id="d5f76-185">Otherwise, <xref:System.Diagnostics.Stopwatch.IsHighResolution> is `false`, which indicates that the <xref:System.Diagnostics.Stopwatch> timer is based on the system timer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d5f76-186">El ejemplo siguiente muestra la frecuencia y la resolución de un <xref:System.Diagnostics.Stopwatch> temporizador.</span><span class="sxs-lookup"><span data-stu-id="d5f76-186">The following example displays the frequency and resolution of a <xref:System.Diagnostics.Stopwatch> timer.</span></span> <span data-ttu-id="d5f76-187">Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Diagnostics.Stopwatch> clase.</span><span class="sxs-lookup"><span data-stu-id="d5f76-187">This code example is part of a larger example provided for the <xref:System.Diagnostics.Stopwatch> class.</span></span>  
  
 [!code-cpp[StopWatchPerfSample#2](~/samples/snippets/cpp/VS_Snippets_CLR/StopWatchPerfSample/CPP/source.cpp#2)]
 [!code-csharp[StopWatchPerfSample#2](~/samples/snippets/csharp/VS_Snippets_CLR/StopWatchPerfSample/CS/source.cs#2)]
 [!code-vb[StopWatchPerfSample#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/StopWatchPerfSample/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Diagnostics.Stopwatch.Frequency" />
      </Docs>
    </Member>
    <Member MemberName="IsRunning">
      <MemberSignature Language="C#" Value="public bool IsRunning { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRunning" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Stopwatch.IsRunning" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsRunning As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsRunning { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsRunning : bool" Usage="System.Diagnostics.Stopwatch.IsRunning" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d5f76-188">Obtiene un valor que indica si el temporizador <see cref="T:System.Diagnostics.Stopwatch" /> está en funcionamiento.</span><span class="sxs-lookup"><span data-stu-id="d5f76-188">Gets a value indicating whether the <see cref="T:System.Diagnostics.Stopwatch" /> timer is running.</span></span></summary>
        <value><span data-ttu-id="d5f76-189"><see langword="true" />, si la instancia de <see cref="T:System.Diagnostics.Stopwatch" /> se está ejecutando actualmente y está midiendo el tiempo transcurrido para un intervalo; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d5f76-189"><see langword="true" /> if the <see cref="T:System.Diagnostics.Stopwatch" /> instance is currently running and measuring elapsed time for an interval; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5f76-190">Un <xref:System.Diagnostics.Stopwatch> instancia empieza a ejecutarse con una llamada a <xref:System.Diagnostics.Stopwatch.Start%2A> o <xref:System.Diagnostics.Stopwatch.StartNew%2A>.</span><span class="sxs-lookup"><span data-stu-id="d5f76-190">A <xref:System.Diagnostics.Stopwatch> instance begins running with a call to <xref:System.Diagnostics.Stopwatch.Start%2A> or <xref:System.Diagnostics.Stopwatch.StartNew%2A>.</span></span> <span data-ttu-id="d5f76-191">Los delimitadores de la instancia se ejecuta con una llamada a <xref:System.Diagnostics.Stopwatch.Stop%2A> o <xref:System.Diagnostics.Stopwatch.Reset%2A>.</span><span class="sxs-lookup"><span data-stu-id="d5f76-191">The instance stops running with a call to <xref:System.Diagnostics.Stopwatch.Stop%2A> or <xref:System.Diagnostics.Stopwatch.Reset%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.Stopwatch.StartNew" />
        <altmember cref="M:System.Diagnostics.Stopwatch.Stop" />
        <altmember cref="M:System.Diagnostics.Stopwatch.Start" />
        <altmember cref="M:System.Diagnostics.Stopwatch.Reset" />
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Stopwatch.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberSignature Language="F#" Value="member this.Reset : unit -&gt; unit" Usage="stopwatch.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d5f76-192">Detiene la medición del intervalo de tiempo y restablece el tiempo transcurrido en cero.</span><span class="sxs-lookup"><span data-stu-id="d5f76-192">Stops time interval measurement and resets the elapsed time to zero.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5f76-193">Un <xref:System.Diagnostics.Stopwatch> instancia calcula y conserva el tiempo transcurrido acumulado entre varios intervalos de tiempo, hasta que se restablezca la instancia.</span><span class="sxs-lookup"><span data-stu-id="d5f76-193">A <xref:System.Diagnostics.Stopwatch> instance calculates and retains the cumulative elapsed time across multiple time intervals, until the instance is reset.</span></span> <span data-ttu-id="d5f76-194">Use <xref:System.Diagnostics.Stopwatch.Stop%2A> para detener la medición del intervalo actual y conservar el valor de tiempo transcurrido acumulado.</span><span class="sxs-lookup"><span data-stu-id="d5f76-194">Use <xref:System.Diagnostics.Stopwatch.Stop%2A> to stop the current interval measurement and retain the cumulative elapsed time value.</span></span> <span data-ttu-id="d5f76-195">Use <xref:System.Diagnostics.Stopwatch.Reset%2A> detener cualquier medición del intervalo en curso y borrar el valor de tiempo transcurrido.</span><span class="sxs-lookup"><span data-stu-id="d5f76-195">Use <xref:System.Diagnostics.Stopwatch.Reset%2A> to stop any interval measurement in progress and clear the elapsed time value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.Stopwatch.StartNew" />
        <altmember cref="M:System.Diagnostics.Stopwatch.Stop" />
        <altmember cref="P:System.Diagnostics.Stopwatch.IsRunning" />
        <altmember cref="M:System.Diagnostics.Stopwatch.Start" />
      </Docs>
    </Member>
    <Member MemberName="Restart">
      <MemberSignature Language="C#" Value="public void Restart ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Restart() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Stopwatch.Restart" />
      <MemberSignature Language="VB.NET" Value="Public Sub Restart ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Restart();" />
      <MemberSignature Language="F#" Value="member this.Restart : unit -&gt; unit" Usage="stopwatch.Restart " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d5f76-196">Detiene la medición del intervalo de tiempo, restablece el tiempo transcurrido para llegar a cero y comienza a medir el tiempo transcurrido.</span><span class="sxs-lookup"><span data-stu-id="d5f76-196">Stops time interval measurement, resets the elapsed time to zero, and starts measuring elapsed time.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5f76-197">Un <xref:System.Diagnostics.Stopwatch> instancia calcula y conserva el tiempo transcurrido acumulado entre varios intervalos de tiempo, hasta que se restablezca o se reinicie la instancia.</span><span class="sxs-lookup"><span data-stu-id="d5f76-197">A <xref:System.Diagnostics.Stopwatch> instance calculates and retains the cumulative elapsed time across multiple time intervals, until the instance is reset or restarted.</span></span> <span data-ttu-id="d5f76-198">Use <xref:System.Diagnostics.Stopwatch.Stop%2A> para detener la medición del intervalo actual y conservar el valor de tiempo transcurrido acumulado.</span><span class="sxs-lookup"><span data-stu-id="d5f76-198">Use <xref:System.Diagnostics.Stopwatch.Stop%2A> to stop the current interval measurement and retain the cumulative elapsed time value.</span></span> <span data-ttu-id="d5f76-199">Use <xref:System.Diagnostics.Stopwatch.Reset%2A> detener cualquier medición del intervalo en curso y borrar el valor de tiempo transcurrido.</span><span class="sxs-lookup"><span data-stu-id="d5f76-199">Use <xref:System.Diagnostics.Stopwatch.Reset%2A> to stop any interval measurement in progress and clear the elapsed time value.</span></span> <span data-ttu-id="d5f76-200">Use <xref:System.Diagnostics.Stopwatch.Restart%2A> para detener la medición del intervalo actual e iniciar una nueva medición del intervalo.</span><span class="sxs-lookup"><span data-stu-id="d5f76-200">Use <xref:System.Diagnostics.Stopwatch.Restart%2A> to stop current interval measurement and start a new interval measurement.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Stopwatch.Start" />
      <MemberSignature Language="VB.NET" Value="Public Sub Start ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Start();" />
      <MemberSignature Language="F#" Value="member this.Start : unit -&gt; unit" Usage="stopwatch.Start " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d5f76-201">Inicia o reanuda la medición del tiempo transcurrido para un intervalo.</span><span class="sxs-lookup"><span data-stu-id="d5f76-201">Starts, or resumes, measuring elapsed time for an interval.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5f76-202">En una típica <xref:System.Diagnostics.Stopwatch> escenario, se llama a la <xref:System.Diagnostics.Stopwatch.Start%2A> método, a continuación, finalmente, llamar el <xref:System.Diagnostics.Stopwatch.Stop%2A> método y, a continuación, compruebe el tiempo transcurrido mediante el <xref:System.Diagnostics.Stopwatch.Elapsed%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="d5f76-202">In a typical <xref:System.Diagnostics.Stopwatch> scenario, you call the <xref:System.Diagnostics.Stopwatch.Start%2A> method, then eventually call the <xref:System.Diagnostics.Stopwatch.Stop%2A> method, and then you check elapsed time using the <xref:System.Diagnostics.Stopwatch.Elapsed%2A> property.</span></span>  
  
 <span data-ttu-id="d5f76-203">Una vez iniciado, un <xref:System.Diagnostics.Stopwatch> temporizador mide el intervalo actual, en tics de temporizador transcurrido, hasta que se detenga o se restablezca la instancia.</span><span class="sxs-lookup"><span data-stu-id="d5f76-203">Once started, a <xref:System.Diagnostics.Stopwatch> timer measures the current interval, in elapsed timer ticks, until the instance is stopped or reset.</span></span> <span data-ttu-id="d5f76-204">A partir un <xref:System.Diagnostics.Stopwatch> que es ya está ejecutando no cambia el estado del temporizador ni restablecer las propiedades de tiempo transcurrido.</span><span class="sxs-lookup"><span data-stu-id="d5f76-204">Starting a <xref:System.Diagnostics.Stopwatch> that is already running does not change the timer state or reset the elapsed time properties.</span></span>  
  
 <span data-ttu-id="d5f76-205">Cuando un <xref:System.Diagnostics.Stopwatch> instancia mide más de un intervalo, el <xref:System.Diagnostics.Stopwatch.Start%2A> método reanuda la medición de tiempo a partir del valor de tiempo transcurrido actual.</span><span class="sxs-lookup"><span data-stu-id="d5f76-205">When a <xref:System.Diagnostics.Stopwatch> instance measures more than one interval, the <xref:System.Diagnostics.Stopwatch.Start%2A> method resumes measuring time from the current elapsed time value.</span></span> <span data-ttu-id="d5f76-206">Un <xref:System.Diagnostics.Stopwatch> instancia calcula y conserva el tiempo transcurrido acumulado entre varios intervalos de tiempo, hasta que se restablezca la instancia.</span><span class="sxs-lookup"><span data-stu-id="d5f76-206">A <xref:System.Diagnostics.Stopwatch> instance calculates and retains the cumulative elapsed time across multiple time intervals, until the instance is reset.</span></span> <span data-ttu-id="d5f76-207">Use la <xref:System.Diagnostics.Stopwatch.Reset%2A> método antes de llamar a <xref:System.Diagnostics.Stopwatch.Start%2A> para borrar el tiempo transcurrido acumulado en un <xref:System.Diagnostics.Stopwatch> instancia.</span><span class="sxs-lookup"><span data-stu-id="d5f76-207">Use the <xref:System.Diagnostics.Stopwatch.Reset%2A> method before calling <xref:System.Diagnostics.Stopwatch.Start%2A> to clear the cumulative elapsed time in a <xref:System.Diagnostics.Stopwatch> instance.</span></span> <span data-ttu-id="d5f76-208">Use la <xref:System.Diagnostics.Stopwatch.Restart%2A> método <xref:System.Diagnostics.Stopwatch.Reset%2A> y <xref:System.Diagnostics.Stopwatch.Start%2A> el <xref:System.Diagnostics.Stopwatch> con un solo comando.</span><span class="sxs-lookup"><span data-stu-id="d5f76-208">Use the <xref:System.Diagnostics.Stopwatch.Restart%2A> method to <xref:System.Diagnostics.Stopwatch.Reset%2A> and <xref:System.Diagnostics.Stopwatch.Start%2A> the <xref:System.Diagnostics.Stopwatch> with a single command.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d5f76-209">En el ejemplo siguiente se muestra cómo usar el <xref:System.Diagnostics.Stopwatch.Start%2A> método para iniciar un temporizador que mide el tiempo de ejecución de una aplicación.</span><span class="sxs-lookup"><span data-stu-id="d5f76-209">The following example demonstrates how to use the <xref:System.Diagnostics.Stopwatch.Start%2A> method to start a timer that measures the execution time of an application.</span></span>  
  
 [!code-csharp[System.Diagnostics.Stopwatch#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.Stopwatch/CS/source.cs#1)]
 [!code-vb[System.Diagnostics.Stopwatch#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.Stopwatch/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.Stopwatch.StartNew" />
        <altmember cref="M:System.Diagnostics.Stopwatch.Stop" />
        <altmember cref="P:System.Diagnostics.Stopwatch.IsRunning" />
        <altmember cref="M:System.Diagnostics.Stopwatch.Reset" />
      </Docs>
    </Member>
    <Member MemberName="StartNew">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.Stopwatch StartNew ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Diagnostics.Stopwatch StartNew() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Stopwatch.StartNew" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StartNew () As Stopwatch" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Diagnostics::Stopwatch ^ StartNew();" />
      <MemberSignature Language="F#" Value="static member StartNew : unit -&gt; System.Diagnostics.Stopwatch" Usage="System.Diagnostics.Stopwatch.StartNew " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.Stopwatch</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d5f76-210">Inicializa una nueva instancia de <see cref="T:System.Diagnostics.Stopwatch" />, establece la propiedad de tiempo transcurrido en cero e inicia la medición de tiempo transcurrido.</span><span class="sxs-lookup"><span data-stu-id="d5f76-210">Initializes a new <see cref="T:System.Diagnostics.Stopwatch" /> instance, sets the elapsed time property to zero, and starts measuring elapsed time.</span></span></summary>
        <returns><span data-ttu-id="d5f76-211">Un <see cref="T:System.Diagnostics.Stopwatch" /> que acaba de iniciar la medida de tiempo transcurrido.</span><span class="sxs-lookup"><span data-stu-id="d5f76-211">A <see cref="T:System.Diagnostics.Stopwatch" /> that has just begun measuring elapsed time.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5f76-212">Este método es equivalente a llamar a la <xref:System.Diagnostics.Stopwatch> constructor y, a continuación, llamar a <xref:System.Diagnostics.Stopwatch.Start%2A> en la nueva instancia.</span><span class="sxs-lookup"><span data-stu-id="d5f76-212">This method is equivalent to calling the <xref:System.Diagnostics.Stopwatch> constructor and then calling <xref:System.Diagnostics.Stopwatch.Start%2A> on the new instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d5f76-213">En el ejemplo siguiente se usa el <xref:System.Diagnostics.Stopwatch> clase para medir el rendimiento de cuatro implementaciones diferentes para analizar un entero de una cadena.</span><span class="sxs-lookup"><span data-stu-id="d5f76-213">The following example uses the <xref:System.Diagnostics.Stopwatch> class to measure the performance of four different implementations for parsing an integer from a string.</span></span> <span data-ttu-id="d5f76-214">Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Diagnostics.Stopwatch> clase.</span><span class="sxs-lookup"><span data-stu-id="d5f76-214">This code example is part of a larger example provided for the <xref:System.Diagnostics.Stopwatch> class.</span></span>  
  
 [!code-cpp[StopWatchPerfSample#4](~/samples/snippets/cpp/VS_Snippets_CLR/StopWatchPerfSample/CPP/source.cpp#4)]
 [!code-csharp[StopWatchPerfSample#4](~/samples/snippets/csharp/VS_Snippets_CLR/StopWatchPerfSample/CS/source.cs#4)]
 [!code-vb[StopWatchPerfSample#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/StopWatchPerfSample/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.Stopwatch.Start" />
        <altmember cref="M:System.Diagnostics.Stopwatch.Stop" />
        <altmember cref="P:System.Diagnostics.Stopwatch.IsRunning" />
        <altmember cref="M:System.Diagnostics.Stopwatch.Reset" />
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Stopwatch.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberSignature Language="F#" Value="member this.Stop : unit -&gt; unit" Usage="stopwatch.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d5f76-215">Detiene la medición del tiempo transcurrido para un intervalo.</span><span class="sxs-lookup"><span data-stu-id="d5f76-215">Stops measuring elapsed time for an interval.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5f76-216">En una típica <xref:System.Diagnostics.Stopwatch> escenario, se llama a la <xref:System.Diagnostics.Stopwatch.Start%2A> método, a continuación, finalmente, llamar el <xref:System.Diagnostics.Stopwatch.Stop%2A> método y, a continuación, compruebe el tiempo transcurrido mediante el <xref:System.Diagnostics.Stopwatch.Elapsed%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="d5f76-216">In a typical <xref:System.Diagnostics.Stopwatch> scenario, you call the <xref:System.Diagnostics.Stopwatch.Start%2A> method, then eventually call the <xref:System.Diagnostics.Stopwatch.Stop%2A> method, and then you check elapsed time using the <xref:System.Diagnostics.Stopwatch.Elapsed%2A> property.</span></span>  
  
 <span data-ttu-id="d5f76-217">El <xref:System.Diagnostics.Stopwatch.Stop%2A> método termina la medición del intervalo de tiempo actual.</span><span class="sxs-lookup"><span data-stu-id="d5f76-217">The <xref:System.Diagnostics.Stopwatch.Stop%2A> method ends the current time interval measurement.</span></span> <span data-ttu-id="d5f76-218">Detener un <xref:System.Diagnostics.Stopwatch> decir no se está ejecutando no cambia el estado del temporizador ni restablecer las propiedades de tiempo transcurrido.</span><span class="sxs-lookup"><span data-stu-id="d5f76-218">Stopping a <xref:System.Diagnostics.Stopwatch> that is not running does not change the timer state or reset the elapsed time properties.</span></span>  
  
 <span data-ttu-id="d5f76-219">Cuando un <xref:System.Diagnostics.Stopwatch> instancia mide más de un intervalo, el <xref:System.Diagnostics.Stopwatch.Stop%2A> método es equivalente a poner en pausa la medición de tiempo transcurrido.</span><span class="sxs-lookup"><span data-stu-id="d5f76-219">When a <xref:System.Diagnostics.Stopwatch> instance measures more than one interval, the <xref:System.Diagnostics.Stopwatch.Stop%2A> method is equivalent to pausing the elapsed time measurement.</span></span> <span data-ttu-id="d5f76-220">Una llamada subsiguiente a <xref:System.Diagnostics.Stopwatch.Start%2A> reanuda la medición de tiempo desde el valor de tiempo transcurrido actual.</span><span class="sxs-lookup"><span data-stu-id="d5f76-220">A subsequent call to <xref:System.Diagnostics.Stopwatch.Start%2A> resumes measuring time from the current elapsed time value.</span></span> <span data-ttu-id="d5f76-221">Use la <xref:System.Diagnostics.Stopwatch.Reset%2A> método para borrar el tiempo transcurrido acumulado en un <xref:System.Diagnostics.Stopwatch> instancia.</span><span class="sxs-lookup"><span data-stu-id="d5f76-221">Use the <xref:System.Diagnostics.Stopwatch.Reset%2A> method to clear the cumulative elapsed time in a <xref:System.Diagnostics.Stopwatch> instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d5f76-222">En el ejemplo siguiente se muestra cómo usar el <xref:System.Diagnostics.Stopwatch.Stop%2A> método para detener un temporizador que mide el tiempo de ejecución de una aplicación.</span><span class="sxs-lookup"><span data-stu-id="d5f76-222">The following example demonstrates how to use the <xref:System.Diagnostics.Stopwatch.Stop%2A> method to stop a timer that measures the execution time of an application.</span></span>  
  
 [!code-csharp[System.Diagnostics.Stopwatch#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.Stopwatch/CS/source.cs#1)]
 [!code-vb[System.Diagnostics.Stopwatch#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.Stopwatch/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.Stopwatch.StartNew" />
        <altmember cref="P:System.Diagnostics.Stopwatch.IsRunning" />
        <altmember cref="M:System.Diagnostics.Stopwatch.Start" />
        <altmember cref="M:System.Diagnostics.Stopwatch.Reset" />
      </Docs>
    </Member>
  </Members>
</Type>
<Type Name="DataReceivedEventHandler" FullName="System.Diagnostics.DataReceivedEventHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9aec193d2b0b192d148a96593d5203aef2cf07f3" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37664387" /></Metadata><TypeSignature Language="C#" Value="public delegate void DataReceivedEventHandler(object sender, DataReceivedEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed DataReceivedEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.DataReceivedEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub DataReceivedEventHandler(sender As Object, e As DataReceivedEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void DataReceivedEventHandler(System::Object ^ sender, DataReceivedEventArgs ^ e);" />
  <TypeSignature Language="F#" Value="type DataReceivedEventHandler = delegate of obj * DataReceivedEventArgs -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.Process</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.Diagnostics.DataReceivedEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender"><span data-ttu-id="67470-101">Origen del evento.</span><span class="sxs-lookup"><span data-stu-id="67470-101">The source of the event.</span></span></param>
    <param name="e"><span data-ttu-id="67470-102">Objeto <see cref="T:System.Diagnostics.DataReceivedEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="67470-102">A <see cref="T:System.Diagnostics.DataReceivedEventArgs" /> that contains the event data.</span></span></param>
    <summary><span data-ttu-id="67470-103">Representa el método que controlará los eventos <see cref="E:System.Diagnostics.Process.OutputDataReceived" /> o <see cref="E:System.Diagnostics.Process.ErrorDataReceived" /> de un <see cref="T:System.Diagnostics.Process" />.</span><span class="sxs-lookup"><span data-stu-id="67470-103">Represents the method that will handle the <see cref="E:System.Diagnostics.Process.OutputDataReceived" /> event or <see cref="E:System.Diagnostics.Process.ErrorDataReceived" /> event of a <see cref="T:System.Diagnostics.Process" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67470-104">Cuando se crea un delegado <xref:System.Diagnostics.DataReceivedEventHandler>, se identifica el método que controlará el evento.</span><span class="sxs-lookup"><span data-stu-id="67470-104">When you create a <xref:System.Diagnostics.DataReceivedEventHandler> delegate, you identify the method that will handle the event.</span></span> <span data-ttu-id="67470-105">Para asociar el evento al controlador, se debe agregar una instancia del delegado al evento.</span><span class="sxs-lookup"><span data-stu-id="67470-105">To associate the event with your event handler, add an instance of the delegate to the event.</span></span> <span data-ttu-id="67470-106">Siempre que se produce el evento, se llama a su controlador, a menos que se quite el delegado.</span><span class="sxs-lookup"><span data-stu-id="67470-106">The event handler is called whenever the event occurs, unless you remove the delegate.</span></span> <span data-ttu-id="67470-107">Para obtener más información sobre los delegados de controlador de eventos, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="67470-107">For more information about event-handler delegates, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="67470-108">Para recopilar de forma asincrónica el redirigida <xref:System.Diagnostics.Process.StandardOutput%2A> o <xref:System.Diagnostics.Process.StandardError%2A> flujo de salida de un proceso, agregue el controlador de eventos para el <xref:System.Diagnostics.Process.OutputDataReceived> o <xref:System.Diagnostics.Process.ErrorDataReceived> eventos.</span><span class="sxs-lookup"><span data-stu-id="67470-108">To asynchronously collect the redirected <xref:System.Diagnostics.Process.StandardOutput%2A> or <xref:System.Diagnostics.Process.StandardError%2A> stream output of a process, add your event handler to the <xref:System.Diagnostics.Process.OutputDataReceived> or <xref:System.Diagnostics.Process.ErrorDataReceived> event.</span></span> <span data-ttu-id="67470-109">Estos eventos se generan cada vez que el proceso escribe una línea en la secuencia redirigida correspondiente.</span><span class="sxs-lookup"><span data-stu-id="67470-109">These events are raised each time the process writes a line to the corresponding redirected stream.</span></span> <span data-ttu-id="67470-110">Cuando se cierra la secuencia redirigida, se envía una línea null al controlador de eventos.</span><span class="sxs-lookup"><span data-stu-id="67470-110">When the redirected stream is closed, a null line is sent to the event handler.</span></span> <span data-ttu-id="67470-111">Asegúrese de que el controlador de eventos comprueba esta condición antes de acceder a la <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="67470-111">Ensure that your event handler checks for this condition before accessing the <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> property.</span></span> <span data-ttu-id="67470-112">Por ejemplo, puede usar el `static` método <xref:System.String.IsNullOrEmpty%2A?displayProperty=nameWithType> para validar el <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> propiedad en el controlador de eventos.</span><span class="sxs-lookup"><span data-stu-id="67470-112">For example, you can use the `static` method <xref:System.String.IsNullOrEmpty%2A?displayProperty=nameWithType> to validate the <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> property in your event handler.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="67470-113">El ejemplo de código siguiente muestra cómo realizar operaciones de lectura asincrónicas en la redirigida <xref:System.Diagnostics.Process.StandardOutput%2A> secuencia de la **ordenación** comando.</span><span class="sxs-lookup"><span data-stu-id="67470-113">The following code example illustrates how to perform asynchronous read operations on the redirected <xref:System.Diagnostics.Process.StandardOutput%2A> stream of the **sort** command.</span></span> <span data-ttu-id="67470-114">El **ordenación** comando es una aplicación de consola que lee y ordena la entrada de texto.</span><span class="sxs-lookup"><span data-stu-id="67470-114">The **sort** command is a console application that reads and sorts text input.</span></span>  
  
 <span data-ttu-id="67470-115">El ejemplo se crea un <xref:System.Diagnostics.DataReceivedEventHandler> delegar para el `SortOutputHandler` controlador de eventos y asocia el delegado con el <xref:System.Diagnostics.Process.OutputDataReceived> eventos.</span><span class="sxs-lookup"><span data-stu-id="67470-115">The example creates a <xref:System.Diagnostics.DataReceivedEventHandler> delegate for the `SortOutputHandler` event handler and associates the delegate with the <xref:System.Diagnostics.Process.OutputDataReceived> event.</span></span> <span data-ttu-id="67470-116">El controlador de eventos recibe líneas de texto de la redirigida <xref:System.Diagnostics.Process.StandardOutput%2A> stream, da formato al texto y escribe el texto en la pantalla.</span><span class="sxs-lookup"><span data-stu-id="67470-116">The event handler receives text lines from the redirected <xref:System.Diagnostics.Process.StandardOutput%2A> stream, formats the text, and writes the text to the screen.</span></span>  
  
 [!code-cpp[Process_AsyncStreams#1](~/samples/snippets/cpp/VS_Snippets_CLR/process_asyncstreams/CPP/sort_async.cpp#1)]
 [!code-csharp[Process_AsyncStreams#1](~/samples/snippets/csharp/VS_Snippets_CLR/process_asyncstreams/CS/sort_async.cs#1)]
 [!code-vb[Process_AsyncStreams#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/process_asyncstreams/VB/sort_async.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Diagnostics.DataReceivedEventArgs" />
    <altmember cref="E:System.Diagnostics.Process.OutputDataReceived" />
    <altmember cref="E:System.Diagnostics.Process.ErrorDataReceived" />
    <altmember cref="T:System.Diagnostics.Process" />
  </Docs>
</Type>
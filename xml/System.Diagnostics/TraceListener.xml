<Type Name="TraceListener" FullName="System.Diagnostics.TraceListener">
  <Metadata><Meta Name="ms.openlocfilehash" Value="58487544ea23ba7bfb12018f450a5a57e2280b80" /><Meta Name="ms.sourcegitcommit" Value="b0551d7828f015124aca601dbb64bd913cc5067d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="12/13/2018" /><Meta Name="ms.locfileid" Value="53334475" /></Metadata><TypeSignature Language="C#" Value="public abstract class TraceListener : MarshalByRefObject, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TraceListener extends System.MarshalByRefObject implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.TraceListener" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TraceListener&#xA;Inherits MarshalByRefObject&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class TraceListener abstract : MarshalByRefObject, IDisposable" />
  <TypeSignature Language="F#" Value="type TraceListener = class&#xA;    inherit MarshalByRefObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="f6190-101">Proporciona la clase base <see langword="abstract" /> a los agentes de escucha que supervisan los resultados de seguimiento y de depuración.</span><span class="sxs-lookup"><span data-stu-id="f6190-101">Provides the <see langword="abstract" /> base class for the listeners who monitor trace and debug output.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6190-102">Para obtener ejemplos de cómo implementar un <xref:System.Diagnostics.TraceListener>, consulte el <xref:System.Diagnostics.DefaultTraceListener>, <xref:System.Diagnostics.TextWriterTraceListener> y <xref:System.Diagnostics.EventLogTraceListener> clases.</span><span class="sxs-lookup"><span data-stu-id="f6190-102">For examples of how to implement a <xref:System.Diagnostics.TraceListener>, see the <xref:System.Diagnostics.DefaultTraceListener>, <xref:System.Diagnostics.TextWriterTraceListener> and the <xref:System.Diagnostics.EventLogTraceListener> classes.</span></span>  
  
 <span data-ttu-id="f6190-103">Debe habilitar la traza o la depuración para utilizar un agente de escucha de seguimiento.</span><span class="sxs-lookup"><span data-stu-id="f6190-103">You must enable tracing or debugging to use a trace listener.</span></span> <span data-ttu-id="f6190-104">La sintaxis siguiente es específica del compilador.</span><span class="sxs-lookup"><span data-stu-id="f6190-104">The following syntax is compiler specific.</span></span> <span data-ttu-id="f6190-105">Si usa los compiladores que no sean de C# o Visual Basic, consulte la documentación del compilador.</span><span class="sxs-lookup"><span data-stu-id="f6190-105">If you use compilers other than C# or Visual Basic, refer to the documentation for your compiler.</span></span>  
  
-   <span data-ttu-id="f6190-106">Para habilitar la depuración en C#, agregue el `/d:DEBUG` marca a la línea de comandos del compilador al compilar el código, o puede agregar `#define DEBUG` a la parte superior del archivo.</span><span class="sxs-lookup"><span data-stu-id="f6190-106">To enable debugging in C#, add the `/d:DEBUG` flag to the compiler command line when you compile your code, or you can add `#define DEBUG` to the top of your file.</span></span> <span data-ttu-id="f6190-107">En Visual Basic, agregue el `/d:DEBUG=True` marca a la línea de comandos del compilador.</span><span class="sxs-lookup"><span data-stu-id="f6190-107">In Visual Basic, add the `/d:DEBUG=True` flag to the compiler command line.</span></span>  
  
-   <span data-ttu-id="f6190-108">Para habilitar el seguimiento en C#, agregue el `/d:TRACE` marca a la línea de comandos del compilador al compilar el código, o agregue `#define TRACE` a la parte superior del archivo.</span><span class="sxs-lookup"><span data-stu-id="f6190-108">To enable tracing in C#, add the `/d:TRACE` flag to the compiler command line when you compile your code, or add `#define TRACE` to the top of your file.</span></span> <span data-ttu-id="f6190-109">En Visual Basic, agregue el `/d:TRACE=True` marca a la línea de comandos del compilador.</span><span class="sxs-lookup"><span data-stu-id="f6190-109">In Visual Basic, add the `/d:TRACE=True` flag to the compiler command line.</span></span>  
  
 <span data-ttu-id="f6190-110">Para agregar un agente de escucha de seguimiento, edite el archivo de configuración que se corresponde con el nombre de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="f6190-110">To add a trace listener, edit the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="f6190-111">En este archivo, puede agregar un agente de escucha, establezca su tipo y su parámetro, quitar un agente de escucha o borrar todos los agentes de escucha previamente establecidos por la aplicación.</span><span class="sxs-lookup"><span data-stu-id="f6190-111">Within this file, you can add a listener, set its type and set its parameter, remove a listener, or clear all the listeners previously set by the application.</span></span> <span data-ttu-id="f6190-112">El archivo de configuración se debe dar formato similar al ejemplo siguiente.</span><span class="sxs-lookup"><span data-stu-id="f6190-112">The configuration file should be formatted similar to the following example.</span></span>  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <trace autoflush="false" indentsize="4">  
      <listeners>  
        <add name="myListener" type="System.Diagnostics.TextWriterTraceListener" initializeData="TextWriterOutput.log" />  
        <remove name="Default" />  
      </listeners>  
    </trace>  
  </system.diagnostics>  
</configuration>  
```  
  
 <span data-ttu-id="f6190-113">Para obtener más información sobre el uso de los archivos de configuración para el seguimiento, vea [ &lt;system.diagnostics&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/system-diagnostics-element.md).</span><span class="sxs-lookup"><span data-stu-id="f6190-113">For more information on using configuration files for tracing, see [&lt;system.diagnostics&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/system-diagnostics-element.md).</span></span>  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="f6190-114">Este tipo es seguro para la ejecución de subprocesos.</span><span class="sxs-lookup"><span data-stu-id="f6190-114">This type is thread safe.</span></span></threadsafe>
    <block subset="none" type="overrides"><para><span data-ttu-id="f6190-115">Heredar de esta clase para implementar un agente de escucha personalizado para el <see cref="T:System.Diagnostics.Debug" /> y <see cref="T:System.Diagnostics.Trace" /> clases.</span><span class="sxs-lookup"><span data-stu-id="f6190-115">Inherit from this class to implement a custom listener for the <see cref="T:System.Diagnostics.Debug" /> and <see cref="T:System.Diagnostics.Trace" /> classes.</span></span> <span data-ttu-id="f6190-116">Como mínimo, debe implementar la <see cref="M:System.Diagnostics.TraceListener.Write(System.String)" /> y <see cref="M:System.Diagnostics.TraceListener.WriteLine(System.String)" /> métodos.</span><span class="sxs-lookup"><span data-stu-id="f6190-116">At a minimum, you must implement the <see cref="M:System.Diagnostics.TraceListener.Write(System.String)" /> and <see cref="M:System.Diagnostics.TraceListener.WriteLine(System.String)" /> methods.</span></span> <span data-ttu-id="f6190-117">Además, se puede implementar el <see cref="M:System.Diagnostics.TraceListener.Fail(System.String)" />, <see cref="M:System.Diagnostics.TraceListener.Close" /> y <see cref="M:System.Diagnostics.TraceListener.Flush" /> métodos.</span><span class="sxs-lookup"><span data-stu-id="f6190-117">Additionally, you can implement the <see cref="M:System.Diagnostics.TraceListener.Fail(System.String)" />, <see cref="M:System.Diagnostics.TraceListener.Close" /> and <see cref="M:System.Diagnostics.TraceListener.Flush" /> methods.</span></span></para></block>
    <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
    <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
    <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
    <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
    <altmember cref="T:System.Diagnostics.Debug" />
    <altmember cref="T:System.Diagnostics.Trace" />
    <related type="Article" href="https://msdn.microsoft.com/library/3f348f42-fa72-4ff2-aa1c-bb9eecad4bb2"><span data-ttu-id="f6190-118">&lt;System.Diagnostics&gt; elemento</span><span class="sxs-lookup"><span data-stu-id="f6190-118">&lt;system.diagnostics&gt; Element</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f6190-119">Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.TraceListener" />.</span><span class="sxs-lookup"><span data-stu-id="f6190-119">Initializes a new instance of the <see cref="T:System.Diagnostics.TraceListener" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TraceListener ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceListener.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TraceListener();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f6190-120">Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.TraceListener" />.</span><span class="sxs-lookup"><span data-stu-id="f6190-120">Initializes a new instance of the <see cref="T:System.Diagnostics.TraceListener" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6190-121">La siguiente tabla muestra los valores de propiedad iniciales de una instancia de <xref:System.Diagnostics.TraceListener>.</span><span class="sxs-lookup"><span data-stu-id="f6190-121">The following table shows initial property values for an instance of <xref:System.Diagnostics.TraceListener>.</span></span>  
  
|<span data-ttu-id="f6190-122">Propiedad.</span><span class="sxs-lookup"><span data-stu-id="f6190-122">Property</span></span>|<span data-ttu-id="f6190-123">Valor predeterminado</span><span class="sxs-lookup"><span data-stu-id="f6190-123">Default Value</span></span>|  
|--------------|-------------------|  
|<span data-ttu-id="f6190-124">nombre</span><span class="sxs-lookup"><span data-stu-id="f6190-124">Name</span></span>|<span data-ttu-id="f6190-125">Una cadena vacía ("").</span><span class="sxs-lookup"><span data-stu-id="f6190-125">The empty string ("").</span></span>|  
|<span data-ttu-id="f6190-126">Sangría</span><span class="sxs-lookup"><span data-stu-id="f6190-126">Indent</span></span>|<span data-ttu-id="f6190-127">Valor de cero.</span><span class="sxs-lookup"><span data-stu-id="f6190-127">Zero.</span></span>|  
|<span data-ttu-id="f6190-128">IndentSize</span><span class="sxs-lookup"><span data-stu-id="f6190-128">IndentSize</span></span>|<span data-ttu-id="f6190-129">Cuatro espacios.</span><span class="sxs-lookup"><span data-stu-id="f6190-129">Four spaces.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TraceListener (string name);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceListener.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TraceListener(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.TraceListener : string -&gt; System.Diagnostics.TraceListener" Usage="new System.Diagnostics.TraceListener name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="f6190-130">Nombre del objeto <see cref="T:System.Diagnostics.TraceListener" />.</span><span class="sxs-lookup"><span data-stu-id="f6190-130">The name of the <see cref="T:System.Diagnostics.TraceListener" />.</span></span></param>
        <summary><span data-ttu-id="f6190-131">Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.TraceListener" /> mediante el nombre especificado como el agente de escucha.</span><span class="sxs-lookup"><span data-stu-id="f6190-131">Initializes a new instance of the <see cref="T:System.Diagnostics.TraceListener" /> class using the specified name as the listener.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.StringDictionary Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.StringDictionary Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceListener.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Attributes As StringDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::StringDictionary ^ Attributes { System::Collections::Specialized::StringDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Attributes : System.Collections.Specialized.StringDictionary" Usage="System.Diagnostics.TraceListener.Attributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f6190-132">Obtiene los atributos de agente de escucha de seguimiento personalizados que están definidos en el archivo de configuración de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="f6190-132">Gets the custom trace listener attributes defined in the application configuration file.</span></span></summary>
        <value><span data-ttu-id="f6190-133"><see cref="T:System.Collections.Specialized.StringDictionary" /> que contiene los atributos personalizados del agente de escucha de seguimiento.</span><span class="sxs-lookup"><span data-stu-id="f6190-133">A <see cref="T:System.Collections.Specialized.StringDictionary" /> containing the custom attributes for the trace listener.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6190-134">Las clases que heredan de la <xref:System.Diagnostics.TraceListener> clase puede agregar atributos personalizados invalidando el <xref:System.Diagnostics.TraceListener.GetSupportedAttributes%2A> método y devolver una matriz de cadenas de nombres de atributo personalizado.</span><span class="sxs-lookup"><span data-stu-id="f6190-134">Classes that inherit from the <xref:System.Diagnostics.TraceListener> class can add custom attributes by overriding the <xref:System.Diagnostics.TraceListener.GetSupportedAttributes%2A> method and returning a string array of custom attribute names.</span></span> <span data-ttu-id="f6190-135">El <xref:System.Diagnostics.TraceListener.Attributes%2A> propiedad identifica los atributos personalizados que se hace referencia en el archivo de configuración de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="f6190-135">The <xref:System.Diagnostics.TraceListener.Attributes%2A> property identifies the custom attributes that are referenced in the application's configuration file.</span></span> <span data-ttu-id="f6190-136">Por ejemplo, en el siguiente extracto del archivo de configuración del <xref:System.Diagnostics.DelimitedListTraceListener> se hace referencia al atributo personalizado 'delimitador'.</span><span class="sxs-lookup"><span data-stu-id="f6190-136">For example, in the following configuration file excerpt the <xref:System.Diagnostics.DelimitedListTraceListener> custom attribute "delimiter" is referenced.</span></span> <span data-ttu-id="f6190-137">En este caso, el <xref:System.Diagnostics.TraceListener.Attributes%2A> propiedad devuelve un <xref:System.Collections.Specialized.StringDictionary> que contiene la cadena "delimiter".</span><span class="sxs-lookup"><span data-stu-id="f6190-137">In this case, the <xref:System.Diagnostics.TraceListener.Attributes%2A> property returns a <xref:System.Collections.Specialized.StringDictionary> containing the string "delimiter".</span></span>  
  
```xml  
<listeners>  
  <add name="delimitedListener"   
    type="System.Diagnostics.DelimitedListTraceListener"   
    delimiter=":"   
    initializeData="delimitedOutput.txt"   
    traceOutputOptions="ProcessId, DateTime" />  
  <remove name="Default" />  
</listeners>  
```  
  
 <span data-ttu-id="f6190-138">No se enumeran los atributos personalizados sin referencia.</span><span class="sxs-lookup"><span data-stu-id="f6190-138">Unreferenced custom attributes are not enumerated.</span></span>  <span data-ttu-id="f6190-139">Para obtener más información, vea el método <xref:System.Diagnostics.TraceListener.GetSupportedAttributes%2A>.</span><span class="sxs-lookup"><span data-stu-id="f6190-139">For more information, see the <xref:System.Diagnostics.TraceListener.GetSupportedAttributes%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public virtual void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceListener.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Close();" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit&#xA;override this.Close : unit -&gt; unit" Usage="traceListener.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f6190-140">Cuando se reemplaza en una clase derivada, se cierra el flujo de salida para que ya no reciba resultados de la traza o de la depuración.</span><span class="sxs-lookup"><span data-stu-id="f6190-140">When overridden in a derived class, closes the output stream so it no longer receives tracing or debugging output.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6190-141">Use este método cuando la salida se vaya a un archivo, como el <xref:System.Diagnostics.TextWriterTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="f6190-141">Use this method when the output is going to a file, such as to the <xref:System.Diagnostics.TextWriterTraceListener>.</span></span> <span data-ttu-id="f6190-142">Después de llamar a este método, debe reinicializar el objeto.</span><span class="sxs-lookup"><span data-stu-id="f6190-142">After a call to this method, you must reinitialize the object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f6190-143">Libera los recursos que usa <see cref="T:System.Diagnostics.TraceListener" />.</span><span class="sxs-lookup"><span data-stu-id="f6190-143">Releases the resources used by the <see cref="T:System.Diagnostics.TraceListener" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceListener.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="traceListener.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f6190-144">Libera todos los recursos que usa <see cref="T:System.Diagnostics.TraceListener" />.</span><span class="sxs-lookup"><span data-stu-id="f6190-144">Releases all resources used by the <see cref="T:System.Diagnostics.TraceListener" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6190-145">Una llamada a <xref:System.Diagnostics.TraceListener.Dispose%2A> permite a los recursos utilizados por el <xref:System.Diagnostics.TraceListener> que reasignarse para otros fines.</span><span class="sxs-lookup"><span data-stu-id="f6190-145">Calling <xref:System.Diagnostics.TraceListener.Dispose%2A> allows the resources used by the <xref:System.Diagnostics.TraceListener> to be reallocated for other purposes.</span></span> <span data-ttu-id="f6190-146">Para obtener más información acerca de <xref:System.Diagnostics.TraceListener.Dispose%2A>, consulte [limpiar recursos no administrados](~/docs/standard/garbage-collection/unmanaged.md).</span><span class="sxs-lookup"><span data-stu-id="f6190-146">For more information about <xref:System.Diagnostics.TraceListener.Dispose%2A>, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/garbage-collection/unmanaged.md"><span data-ttu-id="f6190-147">Limpiar recursos no administrados</span><span class="sxs-lookup"><span data-stu-id="f6190-147">Cleaning Up Unmanaged Resources</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceListener.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="traceListener.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="f6190-148">Es <see langword="true" /> para liberar tanto recursos administrados como no administrados; es <see langword="false" /> para liberar únicamente recursos no administrados.</span><span class="sxs-lookup"><span data-stu-id="f6190-148"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="f6190-149">Libera los recursos no administrados que usa <see cref="T:System.Diagnostics.TraceListener" /> y, de forma opcional, libera los recursos administrados.</span><span class="sxs-lookup"><span data-stu-id="f6190-149">Releases the unmanaged resources used by the <see cref="T:System.Diagnostics.TraceListener" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6190-150">Este método se llama por el público <xref:System.Diagnostics.TraceListener.Dispose%2A> método y el <xref:System.Object.Finalize%2A> método.</span><span class="sxs-lookup"><span data-stu-id="f6190-150">This method is called by the public <xref:System.Diagnostics.TraceListener.Dispose%2A> method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="f6190-151">`Dispose` invoca el protegido <xref:System.Diagnostics.TraceListener.Dispose%2A> método con el `disposing` parámetro establecido en `true`.</span><span class="sxs-lookup"><span data-stu-id="f6190-151">`Dispose` invokes the protected <xref:System.Diagnostics.TraceListener.Dispose%2A> method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="f6190-152"><xref:System.Object.Finalize%2A> invoca `Dispose` con `disposing` establecido en `false`.</span><span class="sxs-lookup"><span data-stu-id="f6190-152"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="f6190-153">Cuando el parámetro `disposing` es `true`, este método libera todos los recursos retenidos por los objetos administrados a los que el control <xref:System.Diagnostics.TraceListener> hace referencia.</span><span class="sxs-lookup"><span data-stu-id="f6190-153">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Diagnostics.TraceListener> references.</span></span> <span data-ttu-id="f6190-154">Este método invoca al método `Dispose` de cada uno de los objetos a los que se hace referencia.</span><span class="sxs-lookup"><span data-stu-id="f6190-154">This method invokes the `Dispose` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="f6190-155">
            <see langword="Dispose" /> puede recibir varias llamadas de otros objetos.</span><span class="sxs-lookup"><span data-stu-id="f6190-155">
            <see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="f6190-156">Al reemplazar este método, tenga cuidado de no hacer referencia a objetos que se hayan eliminado en una llamada anterior a <see langword="Dispose" />.</span><span class="sxs-lookup"><span data-stu-id="f6190-156">When overriding this method, be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="f6190-157">Para obtener más información sobre cómo implementar <see langword="Dispose" />, consulte [implementar un método Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="f6190-157">For more information about how to implement <see langword="Dispose" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
<span data-ttu-id="f6190-158">Para obtener más información acerca de <see langword="Dispose" /> y <see langword="Finalize" />, consulte [limpiar recursos no administrados](~/docs/standard/garbage-collection/unmanaged.md).</span><span class="sxs-lookup"><span data-stu-id="f6190-158">For more information about <see langword="Dispose" /> and <see langword="Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span></para></block>
        <related type="Article" href="~/docs/standard/garbage-collection/implementing-dispose.md"><span data-ttu-id="f6190-159">Implementar un método Dispose</span><span class="sxs-lookup"><span data-stu-id="f6190-159">Implementing a Dispose method</span></span></related>
        <related type="Article" href="~/docs/standard/garbage-collection/unmanaged.md"><span data-ttu-id="f6190-160">Limpiar recursos no administrados</span><span class="sxs-lookup"><span data-stu-id="f6190-160">Cleaning Up Unmanaged Resources</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Fail">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f6190-161">Emite mensajes de error para el agente de escucha que se crea al implementar la clase <see cref="T:System.Diagnostics.TraceListener" />.</span><span class="sxs-lookup"><span data-stu-id="f6190-161">Emits error messages to the listener you create when you implement the <see cref="T:System.Diagnostics.TraceListener" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Fail">
      <MemberSignature Language="C#" Value="public virtual void Fail (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Fail(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceListener.Fail(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Fail (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Fail(System::String ^ message);" />
      <MemberSignature Language="F#" Value="abstract member Fail : string -&gt; unit&#xA;override this.Fail : string -&gt; unit" Usage="traceListener.Fail message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="f6190-162">Mensaje que se va a emitir.</span><span class="sxs-lookup"><span data-stu-id="f6190-162">A message to emit.</span></span></param>
        <summary><span data-ttu-id="f6190-163">Emite un mensaje de error para el agente de escucha que se crea al implementar la clase <see cref="T:System.Diagnostics.TraceListener" />.</span><span class="sxs-lookup"><span data-stu-id="f6190-163">Emits an error message to the listener you create when you implement the <see cref="T:System.Diagnostics.TraceListener" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6190-164">El comportamiento predeterminado consiste en Mostrar el mensaje especificado en un cuadro de mensaje cuando la aplicación se está ejecutando en un modo de interfaz de usuario y el <xref:System.Diagnostics.TraceListener> instancias en un <xref:System.Diagnostics.TraceListenerCollection> colección.</span><span class="sxs-lookup"><span data-stu-id="f6190-164">The default behavior is to display the specified message in a message box when the application is running in a user-interface mode, and to the <xref:System.Diagnostics.TraceListener> instances in a <xref:System.Diagnostics.TraceListenerCollection> collection.</span></span> <span data-ttu-id="f6190-165">De forma predeterminada, el <xref:System.Diagnostics.TraceListenerCollection> colección tiene una instancia de un <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="f6190-165">By default, the <xref:System.Diagnostics.TraceListenerCollection> collection has an instance of a <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="f6190-166">Puede personalizar este comportamiento agregando un <xref:System.Diagnostics.TraceListener> a o quitar una parte de la colección.</span><span class="sxs-lookup"><span data-stu-id="f6190-166">You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to or removing one from the collection.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="Fail">
      <MemberSignature Language="C#" Value="public virtual void Fail (string message, string detailMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Fail(string message, string detailMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceListener.Fail(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Fail (message As String, detailMessage As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Fail(System::String ^ message, System::String ^ detailMessage);" />
      <MemberSignature Language="F#" Value="abstract member Fail : string * string -&gt; unit&#xA;override this.Fail : string * string -&gt; unit" Usage="traceListener.Fail (message, detailMessage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="detailMessage" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="f6190-167">Mensaje que se va a emitir.</span><span class="sxs-lookup"><span data-stu-id="f6190-167">A message to emit.</span></span></param>
        <param name="detailMessage"><span data-ttu-id="f6190-168">Mensaje detallado que se va a emitir.</span><span class="sxs-lookup"><span data-stu-id="f6190-168">A detailed message to emit.</span></span></param>
        <summary><span data-ttu-id="f6190-169">Emite un mensaje de error y un mensaje de error detallado para el agente de escucha que se crea al implementar la clase <see cref="T:System.Diagnostics.TraceListener" />.</span><span class="sxs-lookup"><span data-stu-id="f6190-169">Emits an error message and a detailed error message to the listener you create when you implement the <see cref="T:System.Diagnostics.TraceListener" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6190-170">El comportamiento predeterminado consiste en Mostrar el mensaje y el mensaje detallado en un cuadro de mensaje cuando la aplicación se está ejecutando en un modo de interfaz de usuario y el <xref:System.Diagnostics.TraceListener> instancias en un <xref:System.Diagnostics.TraceListenerCollection> colección.</span><span class="sxs-lookup"><span data-stu-id="f6190-170">The default behavior is to display the message and detailed message in a message box when the application is running in a user-interface mode, and to the <xref:System.Diagnostics.TraceListener> instances in a <xref:System.Diagnostics.TraceListenerCollection> collection.</span></span> <span data-ttu-id="f6190-171">De forma predeterminada, el <xref:System.Diagnostics.TraceListenerCollection> colección tiene una instancia de un <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="f6190-171">By default, the <xref:System.Diagnostics.TraceListenerCollection> collection has an instance of a <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="f6190-172">Puede personalizar este comportamiento agregando un <xref:System.Diagnostics.TraceListener> a o quitar una parte de la colección.</span><span class="sxs-lookup"><span data-stu-id="f6190-172">You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to or removing one from the collection.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public System.Diagnostics.TraceFilter Filter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Diagnostics.TraceFilter Filter" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceListener.Filter" />
      <MemberSignature Language="VB.NET" Value="Public Property Filter As TraceFilter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::TraceFilter ^ Filter { System::Diagnostics::TraceFilter ^ get(); void set(System::Diagnostics::TraceFilter ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Filter : System.Diagnostics.TraceFilter with get, set" Usage="System.Diagnostics.TraceListener.Filter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.TraceFilter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f6190-173">Obtiene o establece el filtro de seguimiento para el agente de escucha de seguimiento.</span><span class="sxs-lookup"><span data-stu-id="f6190-173">Gets or sets the trace filter for the trace listener.</span></span></summary>
        <value><span data-ttu-id="f6190-174">Un objeto derivado de la clase base <see cref="T:System.Diagnostics.TraceFilter" />.</span><span class="sxs-lookup"><span data-stu-id="f6190-174">An object derived from the <see cref="T:System.Diagnostics.TraceFilter" /> base class.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6190-175">Un filtro de seguimiento se puede agregar a un agente de escucha de seguimiento para proporcionar una capa de filtrado más allá de eso proporciona modificadores para el origen de seguimiento.</span><span class="sxs-lookup"><span data-stu-id="f6190-175">A trace filter can be added to a trace listener to provide a layer of screening beyond that provided to the trace source by switches.</span></span> <span data-ttu-id="f6190-176">Por ejemplo, el <xref:System.Diagnostics.EventTypeFilter> pueden agregarse a un agente de escucha de seguimiento para controlar los tipos de eventos que son el resultado por el agente de escucha.</span><span class="sxs-lookup"><span data-stu-id="f6190-176">For example, the <xref:System.Diagnostics.EventTypeFilter> can be added to a trace listener to control the event types that are output by the listener.</span></span>  <span data-ttu-id="f6190-177">Los agentes de escucha que se denominan porque se cumplen los criterios de conmutador pueden consultar su filtro, si está presente, para determinar si un seguimiento se envían a la salida.</span><span class="sxs-lookup"><span data-stu-id="f6190-177">Listeners that are called because the switch criteria are met can query their filter, if present, to determine if a trace is to be sent to output.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f6190-178">En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Diagnostics.TraceListener.Filter%2A> propiedad para agregar un filtro de origen a un agente de escucha de seguimiento de consola.</span><span class="sxs-lookup"><span data-stu-id="f6190-178">The following code example shows how to use the <xref:System.Diagnostics.TraceListener.Filter%2A> property to add a source filter to a console trace listener.</span></span> <span data-ttu-id="f6190-179">Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Diagnostics.TraceSource> clase.</span><span class="sxs-lookup"><span data-stu-id="f6190-179">This code example is part of a larger example provided for the <xref:System.Diagnostics.TraceSource> class.</span></span>  
  
 [!code-csharp[System.Diagnostics.TraceSource2#28](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/CS/program.cs#28)]
 [!code-vb[System.Diagnostics.TraceSource2#28](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/VB/program.vb#28)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public virtual void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceListener.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Flush();" />
      <MemberSignature Language="F#" Value="abstract member Flush : unit -&gt; unit&#xA;override this.Flush : unit -&gt; unit" Usage="traceListener.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f6190-180">Cuando se reemplaza en una clase derivada, vacía el búfer de resultados.</span><span class="sxs-lookup"><span data-stu-id="f6190-180">When overridden in a derived class, flushes the output buffer.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="GetSupportedAttributes">
      <MemberSignature Language="C#" Value="protected internal virtual string[] GetSupportedAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance string[] GetSupportedAttributes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceListener.GetSupportedAttributes" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GetSupportedAttributes () As String()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual cli::array &lt;System::String ^&gt; ^ GetSupportedAttributes();" />
      <MemberSignature Language="F#" Value="abstract member GetSupportedAttributes : unit -&gt; string[]&#xA;override this.GetSupportedAttributes : unit -&gt; string[]" Usage="traceListener.GetSupportedAttributes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f6190-181">Obtiene los atributos personalizados admitidos por el agente de escucha de seguimiento.</span><span class="sxs-lookup"><span data-stu-id="f6190-181">Gets the custom attributes supported by the trace listener.</span></span></summary>
        <returns><span data-ttu-id="f6190-182">Una matriz de cadena que denomina los atributos personalizados admitidos por el agente de escucha de seguimiento, o bien, <see langword="null" /> si no hay ningún atributo personalizado.</span><span class="sxs-lookup"><span data-stu-id="f6190-182">A string array naming the custom attributes supported by the trace listener, or <see langword="null" /> if there are no custom attributes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6190-183">La implementación predeterminada para <xref:System.Diagnostics.TraceListener.GetSupportedAttributes%2A> devuelve `null`.</span><span class="sxs-lookup"><span data-stu-id="f6190-183">The default implementation for <xref:System.Diagnostics.TraceListener.GetSupportedAttributes%2A> returns `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f6190-184">Ejemplo de código siguiente muestra una invalidación de la <xref:System.Diagnostics.TraceListener.GetSupportedAttributes%2A> método para un agente de escucha de seguimiento personalizado.</span><span class="sxs-lookup"><span data-stu-id="f6190-184">The following code sample shows an override of the <xref:System.Diagnostics.TraceListener.GetSupportedAttributes%2A> method for a custom trace listener.</span></span>  
  
 [!code-csharp[System.Diagnostics.TraceListener.CustomAttributes#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceListener.CustomAttributes/cs/program.cs#1)]
 [!code-vb[System.Diagnostics.TraceListener.CustomAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceListener.CustomAttributes/vb/program.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="f6190-185">Al heredar de la <see cref="T:System.Diagnostics.TraceListener" /> clase o una clase derivada, se puede reemplazar el <see cref="M:System.Diagnostics.TraceListener.GetSupportedAttributes" /> método para proporcionar los atributos personalizados a la clase.</span><span class="sxs-lookup"><span data-stu-id="f6190-185">When inheriting from the <see cref="T:System.Diagnostics.TraceListener" /> class or a derived class, you can override the <see cref="M:System.Diagnostics.TraceListener.GetSupportedAttributes" /> method to provide custom attributes for your class.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="IndentLevel">
      <MemberSignature Language="C#" Value="public int IndentLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 IndentLevel" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceListener.IndentLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property IndentLevel As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int IndentLevel { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.IndentLevel : int with get, set" Usage="System.Diagnostics.TraceListener.IndentLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f6190-186">Obtiene o establece el nivel de sangría.</span><span class="sxs-lookup"><span data-stu-id="f6190-186">Gets or sets the indent level.</span></span></summary>
        <value><span data-ttu-id="f6190-187">Nivel de sangría.</span><span class="sxs-lookup"><span data-stu-id="f6190-187">The indent level.</span></span> <span data-ttu-id="f6190-188">El valor predeterminado es cero.</span><span class="sxs-lookup"><span data-stu-id="f6190-188">The default is zero.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6190-189">El <xref:System.Diagnostics.TraceListener.IndentLevel%2A> propiedad representa el número de veces que la sangría especificada por el <xref:System.Diagnostics.TraceListener.IndentSize%2A> se aplica la propiedad.</span><span class="sxs-lookup"><span data-stu-id="f6190-189">The <xref:System.Diagnostics.TraceListener.IndentLevel%2A> property represents the number of times that the indent specified by the <xref:System.Diagnostics.TraceListener.IndentSize%2A> property is applied.</span></span> <span data-ttu-id="f6190-190">Esta propiedad se almacena por subproceso/solicitud.</span><span class="sxs-lookup"><span data-stu-id="f6190-190">This property is stored on per-thread/per-request basis.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="IndentSize">
      <MemberSignature Language="C#" Value="public int IndentSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 IndentSize" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceListener.IndentSize" />
      <MemberSignature Language="VB.NET" Value="Public Property IndentSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int IndentSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.IndentSize : int with get, set" Usage="System.Diagnostics.TraceListener.IndentSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f6190-191">Obtiene o establece el número de espacios de una sangría.</span><span class="sxs-lookup"><span data-stu-id="f6190-191">Gets or sets the number of spaces in an indent.</span></span></summary>
        <value><span data-ttu-id="f6190-192">Número de espacios de una sangría.</span><span class="sxs-lookup"><span data-stu-id="f6190-192">The number of spaces in an indent.</span></span> <span data-ttu-id="f6190-193">El valor predeterminado es de cuatro espacios.</span><span class="sxs-lookup"><span data-stu-id="f6190-193">The default is four spaces.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6190-194">La propiedad se almacena por subproceso/solicitud.</span><span class="sxs-lookup"><span data-stu-id="f6190-194">The property is stored on per-thread/per-request basis.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="f6190-195">Error en la operación de establecimiento porque el valor es menor que cero.</span><span class="sxs-lookup"><span data-stu-id="f6190-195">Set operation failed because the value is less than zero.</span></span></exception>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="IsThreadSafe">
      <MemberSignature Language="C#" Value="public virtual bool IsThreadSafe { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsThreadSafe" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceListener.IsThreadSafe" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsThreadSafe As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsThreadSafe { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsThreadSafe : bool" Usage="System.Diagnostics.TraceListener.IsThreadSafe" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f6190-196">Obtiene un valor que indica si el agente de escucha de seguimiento es seguro para la ejecución de subprocesos.</span><span class="sxs-lookup"><span data-stu-id="f6190-196">Gets a value indicating whether the trace listener is thread safe.</span></span></summary>
        <value><span data-ttu-id="f6190-197">Es <see langword="true" /> si el agente de escucha de seguimiento es seguro para la ejecución de subprocesos; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f6190-197"><see langword="true" /> if the trace listener is thread safe; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="f6190-198">De manera predeterminada, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f6190-198">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6190-199">El valor de <xref:System.Diagnostics.TraceListener.IsThreadSafe%2A> se usa para determinar si se debe usar un bloqueo global cuando se escribe en el agente de escucha.</span><span class="sxs-lookup"><span data-stu-id="f6190-199">The value of <xref:System.Diagnostics.TraceListener.IsThreadSafe%2A> is used to determine whether to use a global lock when writing to the listener.</span></span> <span data-ttu-id="f6190-200">Si el valor de <xref:System.Diagnostics.TraceListener.IsThreadSafe%2A> es `false`, se utiliza el bloqueo global independientemente del valor de <xref:System.Diagnostics.Trace.UseGlobalLock%2A>.</span><span class="sxs-lookup"><span data-stu-id="f6190-200">If the value of <xref:System.Diagnostics.TraceListener.IsThreadSafe%2A> is `false`, the global lock is used regardless of the value of <xref:System.Diagnostics.Trace.UseGlobalLock%2A>.</span></span> <span data-ttu-id="f6190-201">No se utiliza el bloqueo global solo si el valor de <xref:System.Diagnostics.TraceListener.IsThreadSafe%2A> es `true` y el valor de <xref:System.Diagnostics.Trace.UseGlobalLock%2A> es `false`.</span><span class="sxs-lookup"><span data-stu-id="f6190-201">The global lock is not used only if the value of <xref:System.Diagnostics.TraceListener.IsThreadSafe%2A> is `true` and the value of <xref:System.Diagnostics.Trace.UseGlobalLock%2A> is `false`.</span></span> <span data-ttu-id="f6190-202">El comportamiento predeterminado consiste en usar global cuando se escribe en el agente de escucha de bloqueo.</span><span class="sxs-lookup"><span data-stu-id="f6190-202">The default behavior is to use the global lock whenever writing to the listener.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceListener.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Diagnostics.TraceListener.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f6190-203">Obtiene o establece un nombre para este objeto <see cref="T:System.Diagnostics.TraceListener" />.</span><span class="sxs-lookup"><span data-stu-id="f6190-203">Gets or sets a name for this <see cref="T:System.Diagnostics.TraceListener" />.</span></span></summary>
        <value><span data-ttu-id="f6190-204">Nombre para este objeto <see cref="T:System.Diagnostics.TraceListener" />.</span><span class="sxs-lookup"><span data-stu-id="f6190-204">A name for this <see cref="T:System.Diagnostics.TraceListener" />.</span></span> <span data-ttu-id="f6190-205">El valor predeterminado es una cadena vacía ("").</span><span class="sxs-lookup"><span data-stu-id="f6190-205">The default is an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6190-206">El nombre se puede utilizar para organizar y obtener acceso a los agentes de escucha en un <xref:System.Diagnostics.TraceListenerCollection> colección.</span><span class="sxs-lookup"><span data-stu-id="f6190-206">The name can be used to organize and access listeners in a <xref:System.Diagnostics.TraceListenerCollection> collection.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="NeedIndent">
      <MemberSignature Language="C#" Value="protected bool NeedIndent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NeedIndent" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceListener.NeedIndent" />
      <MemberSignature Language="VB.NET" Value="Protected Property NeedIndent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool NeedIndent { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.NeedIndent : bool with get, set" Usage="System.Diagnostics.TraceListener.NeedIndent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f6190-207">Obtiene o establece un valor que indica si se va a aplicar sangría a los resultados.</span><span class="sxs-lookup"><span data-stu-id="f6190-207">Gets or sets a value indicating whether to indent the output.</span></span></summary>
        <value><span data-ttu-id="f6190-208"><see langword="true" /> si debe aplicarse sangría a los resultados; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f6190-208"><see langword="true" /> if the output should be indented; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6190-209">**Tenga en cuenta** el <xref:System.Diagnostics.TraceListener.WriteIndent%2A> método, llamado por el <xref:System.Diagnostics.DefaultTraceListener> y <xref:System.Diagnostics.TextWriterTraceListener> clases, los conjuntos de la <xref:System.Diagnostics.TraceListener.NeedIndent%2A> valor de propiedad `false` para evitar que más adelante, sangrías innecesarias.</span><span class="sxs-lookup"><span data-stu-id="f6190-209">**Note** The <xref:System.Diagnostics.TraceListener.WriteIndent%2A> method, called by the <xref:System.Diagnostics.DefaultTraceListener> and <xref:System.Diagnostics.TextWriterTraceListener> classes, sets the <xref:System.Diagnostics.TraceListener.NeedIndent%2A> property value to `false` to prevent later, unnecessary indents.</span></span> <span data-ttu-id="f6190-210">Debe establecer el <xref:System.Diagnostics.TraceListener.NeedIndent%2A> propiedad `true` cada vez que desea aplicar sangría al resultado del seguimiento.</span><span class="sxs-lookup"><span data-stu-id="f6190-210">You must set the <xref:System.Diagnostics.TraceListener.NeedIndent%2A> property to `true` each time you wish to indent trace output.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceData">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f6190-211">Escribe la información de seguimiento en los resultados específicos del agente de escucha.</span><span class="sxs-lookup"><span data-stu-id="f6190-211">Writes trace data to the listener specific output.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceData">
      <MemberSignature Language="C#" Value="public virtual void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TraceData(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub TraceData (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void TraceData(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::Object ^ data);" />
      <MemberSignature Language="F#" Value="abstract member TraceData : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * obj -&gt; unit&#xA;override this.TraceData : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * obj -&gt; unit" Usage="traceListener.TraceData (eventCache, source, eventType, id, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="eventCache"><span data-ttu-id="f6190-212">Objeto <see cref="T:System.Diagnostics.TraceEventCache" /> que contiene el identificador de proceso actual, el identificador de subproceso e información sobre el seguimiento de la pila.</span><span class="sxs-lookup"><span data-stu-id="f6190-212">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span></span></param>
        <param name="source"><span data-ttu-id="f6190-213">Nombre usado para identificar el resultado; normalmente es el nombre de la aplicación que generó el evento de seguimiento.</span><span class="sxs-lookup"><span data-stu-id="f6190-213">A name used to identify the output, typically the name of the application that generated the trace event.</span></span></param>
        <param name="eventType"><span data-ttu-id="f6190-214">Uno de los valores de <see cref="T:System.Diagnostics.TraceEventType" /> que indican el tipo de evento que provocó el seguimiento.</span><span class="sxs-lookup"><span data-stu-id="f6190-214">One of the <see cref="T:System.Diagnostics.TraceEventType" /> values specifying the type of event that has caused the trace.</span></span></param>
        <param name="id"><span data-ttu-id="f6190-215">Identificador numérico para el evento.</span><span class="sxs-lookup"><span data-stu-id="f6190-215">A numeric identifier for the event.</span></span></param>
        <param name="data"><span data-ttu-id="f6190-216">Información de seguimiento que se va a emitir.</span><span class="sxs-lookup"><span data-stu-id="f6190-216">The trace data to emit.</span></span></param>
        <summary><span data-ttu-id="f6190-217">Escribe la información de seguimiento, un objeto de datos y la información de evento en los resultados específicos del agente de escucha.</span><span class="sxs-lookup"><span data-stu-id="f6190-217">Writes trace information, a data object and event information to the listener specific output.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="f6190-218">Este método no está pensado para llamarse directamente mediante código de aplicación, pero los miembros de la <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, y <xref:System.Diagnostics.TraceSource> clases para escribir datos de seguimiento para la salida.</span><span class="sxs-lookup"><span data-stu-id="f6190-218">This method is not intended to be called directly by application code but by members of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data to output.</span></span>  
  
 <span data-ttu-id="f6190-219">Las operaciones de escritura de la implementación predeterminada del `eventCache`, `source`, `eventType` y `id` parámetros en el encabezado y pie de página del seguimiento.</span><span class="sxs-lookup"><span data-stu-id="f6190-219">The default implementation writes the `eventCache`, `source`, `eventType` and `id` parameters in the header and footer of the trace.</span></span> <span data-ttu-id="f6190-220">El `data` parámetro se escribe como el cuerpo del mensaje de seguimiento.</span><span class="sxs-lookup"><span data-stu-id="f6190-220">The `data` parameter is written as the body of the trace message.</span></span> <span data-ttu-id="f6190-221">El `ToString` método del objeto de datos se utiliza para convertir el objeto en un <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="f6190-221">The `ToString` method of the data object is used to convert the object to a <xref:System.String>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="TraceData">
      <MemberSignature Language="C#" Value="public virtual void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, params object[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TraceData(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, object[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub TraceData (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, ParamArray data As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void TraceData(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, ... cli::array &lt;System::Object ^&gt; ^ data);" />
      <MemberSignature Language="F#" Value="abstract member TraceData : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * obj[] -&gt; unit&#xA;override this.TraceData : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * obj[] -&gt; unit" Usage="traceListener.TraceData (eventCache, source, eventType, id, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="data" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventCache"><span data-ttu-id="f6190-222">Objeto <see cref="T:System.Diagnostics.TraceEventCache" /> que contiene el identificador de proceso actual, el identificador de subproceso e información sobre el seguimiento de la pila.</span><span class="sxs-lookup"><span data-stu-id="f6190-222">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span></span></param>
        <param name="source"><span data-ttu-id="f6190-223">Nombre usado para identificar el resultado; normalmente es el nombre de la aplicación que generó el evento de seguimiento.</span><span class="sxs-lookup"><span data-stu-id="f6190-223">A name used to identify the output, typically the name of the application that generated the trace event.</span></span></param>
        <param name="eventType"><span data-ttu-id="f6190-224">Uno de los valores de <see cref="T:System.Diagnostics.TraceEventType" /> que indican el tipo de evento que provocó el seguimiento.</span><span class="sxs-lookup"><span data-stu-id="f6190-224">One of the <see cref="T:System.Diagnostics.TraceEventType" /> values specifying the type of event that has caused the trace.</span></span></param>
        <param name="id"><span data-ttu-id="f6190-225">Identificador numérico para el evento.</span><span class="sxs-lookup"><span data-stu-id="f6190-225">A numeric identifier for the event.</span></span></param>
        <param name="data"><span data-ttu-id="f6190-226">Matriz de objetos que se van a emitir como datos.</span><span class="sxs-lookup"><span data-stu-id="f6190-226">An array of objects to emit as data.</span></span></param>
        <summary><span data-ttu-id="f6190-227">Escribe la información de seguimiento, una matriz de objetos de datos y la información de evento en los resultados específicos del agente de escucha.</span><span class="sxs-lookup"><span data-stu-id="f6190-227">Writes trace information, an array of data objects and event information to the listener specific output.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="f6190-228">Este método no está pensado para llamarse directamente mediante código de aplicación, pero los miembros de la <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, y <xref:System.Diagnostics.TraceSource> clases para escribir datos de seguimiento para la salida.</span><span class="sxs-lookup"><span data-stu-id="f6190-228">This method is not intended to be called directly by application code but by members of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data to output.</span></span>  
  
 <span data-ttu-id="f6190-229">La implementación predeterminada escribe los valores de la `source`, `eventType` y `id` parámetros como un encabezado.</span><span class="sxs-lookup"><span data-stu-id="f6190-229">The default implementation writes the values of the `source`, `eventType` and `id` parameters as a header.</span></span> <span data-ttu-id="f6190-230">Los objetos de datos se convierten en cadenas mediante el `ToString` método de cada objeto.</span><span class="sxs-lookup"><span data-stu-id="f6190-230">The data objects are converted to strings using the `ToString` method of each object.</span></span> <span data-ttu-id="f6190-231">El `eventCache` datos se escriben como un pie de página, la naturaleza de los datos de salida que se va a depende del valor de la <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="f6190-231">The `eventCache` data is written as a footer, the nature of the output data being dependent on the value of the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceEvent">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f6190-232">Escribe la información de seguimiento y de evento en los resultados específicos del agente de escucha.</span><span class="sxs-lookup"><span data-stu-id="f6190-232">Writes trace and event information to the listener specific output.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public virtual void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TraceEvent(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub TraceEvent (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void TraceEvent(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id);" />
      <MemberSignature Language="F#" Value="abstract member TraceEvent : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int -&gt; unit&#xA;override this.TraceEvent : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int -&gt; unit" Usage="traceListener.TraceEvent (eventCache, source, eventType, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="eventCache"><span data-ttu-id="f6190-233">Objeto <see cref="T:System.Diagnostics.TraceEventCache" /> que contiene el identificador de proceso actual, el identificador de subproceso e información sobre el seguimiento de la pila.</span><span class="sxs-lookup"><span data-stu-id="f6190-233">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span></span></param>
        <param name="source"><span data-ttu-id="f6190-234">Nombre usado para identificar el resultado; normalmente es el nombre de la aplicación que generó el evento de seguimiento.</span><span class="sxs-lookup"><span data-stu-id="f6190-234">A name used to identify the output, typically the name of the application that generated the trace event.</span></span></param>
        <param name="eventType"><span data-ttu-id="f6190-235">Uno de los valores de <see cref="T:System.Diagnostics.TraceEventType" /> que indican el tipo de evento que provocó el seguimiento.</span><span class="sxs-lookup"><span data-stu-id="f6190-235">One of the <see cref="T:System.Diagnostics.TraceEventType" /> values specifying the type of event that has caused the trace.</span></span></param>
        <param name="id"><span data-ttu-id="f6190-236">Identificador numérico para el evento.</span><span class="sxs-lookup"><span data-stu-id="f6190-236">A numeric identifier for the event.</span></span></param>
        <summary><span data-ttu-id="f6190-237">Escribe la información de seguimiento y de evento en los resultados específicos del agente de escucha.</span><span class="sxs-lookup"><span data-stu-id="f6190-237">Writes trace and event information to the listener specific output.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="f6190-238">Este método no está pensado para llamarse directamente mediante código de aplicación, pero los miembros de la <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, y <xref:System.Diagnostics.TraceSource> clases para escribir datos de seguimiento para la salida.</span><span class="sxs-lookup"><span data-stu-id="f6190-238">This method is not intended to be called directly by application code but by members of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data to output.</span></span>  
  
 <span data-ttu-id="f6190-239">La implementación predeterminada escribe los valores de la `source`, `eventType` y `id` parámetros como un encabezado.</span><span class="sxs-lookup"><span data-stu-id="f6190-239">The default implementation writes the values of the `source`, `eventType` and `id` parameters as a header.</span></span> <span data-ttu-id="f6190-240">El `eventCache` datos se escriben como un pie de página, la naturaleza de los datos de salida que se va a depende del valor de la <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="f6190-240">The `eventCache` data is written as a footer, the nature of the output data being dependent on the value of the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public virtual void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TraceEvent(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub TraceEvent (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void TraceEvent(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::String ^ message);" />
      <MemberSignature Language="F#" Value="abstract member TraceEvent : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * string -&gt; unit&#xA;override this.TraceEvent : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * string -&gt; unit" Usage="traceListener.TraceEvent (eventCache, source, eventType, id, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventCache"><span data-ttu-id="f6190-241">Objeto <see cref="T:System.Diagnostics.TraceEventCache" /> que contiene el identificador de proceso actual, el identificador de subproceso e información sobre el seguimiento de la pila.</span><span class="sxs-lookup"><span data-stu-id="f6190-241">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span></span></param>
        <param name="source"><span data-ttu-id="f6190-242">Nombre usado para identificar el resultado; normalmente es el nombre de la aplicación que generó el evento de seguimiento.</span><span class="sxs-lookup"><span data-stu-id="f6190-242">A name used to identify the output, typically the name of the application that generated the trace event.</span></span></param>
        <param name="eventType"><span data-ttu-id="f6190-243">Uno de los valores de <see cref="T:System.Diagnostics.TraceEventType" /> que indican el tipo de evento que provocó el seguimiento.</span><span class="sxs-lookup"><span data-stu-id="f6190-243">One of the <see cref="T:System.Diagnostics.TraceEventType" /> values specifying the type of event that has caused the trace.</span></span></param>
        <param name="id"><span data-ttu-id="f6190-244">Identificador numérico para el evento.</span><span class="sxs-lookup"><span data-stu-id="f6190-244">A numeric identifier for the event.</span></span></param>
        <param name="message"><span data-ttu-id="f6190-245">Mensaje que se va a escribir.</span><span class="sxs-lookup"><span data-stu-id="f6190-245">A message to write.</span></span></param>
        <summary><span data-ttu-id="f6190-246">Escribe la información de seguimiento, un mensaje y la información de evento en los resultados específicos del agente de escucha.</span><span class="sxs-lookup"><span data-stu-id="f6190-246">Writes trace information, a message, and event information to the listener specific output.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="f6190-247">Este método no está pensado para llamarse directamente mediante código de aplicación, pero los miembros de la <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, y <xref:System.Diagnostics.TraceSource> clases para escribir datos de seguimiento para la salida.</span><span class="sxs-lookup"><span data-stu-id="f6190-247">This method is not intended to be called directly by application code but by members of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data to output.</span></span>  
  
 <span data-ttu-id="f6190-248">La implementación predeterminada escribe los valores de la `source`, `eventType` y `id` parámetros como un encabezado, seguidos por el `message` datos.</span><span class="sxs-lookup"><span data-stu-id="f6190-248">The default implementation writes the values of the `source`, `eventType` and `id` parameters as a header, followed by the `message` data.</span></span> <span data-ttu-id="f6190-249">El `eventCache` datos se escriben como un pie de página, la naturaleza de los datos de salida que se va a depende del valor de la <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="f6190-249">The `eventCache` data is written as a footer, the nature of the output data being dependent on the value of the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public virtual void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string format, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TraceEvent(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, string format, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub TraceEvent (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, format As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void TraceEvent(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="abstract member TraceEvent : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * string * obj[] -&gt; unit&#xA;override this.TraceEvent : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * string * obj[] -&gt; unit" Usage="traceListener.TraceEvent (eventCache, source, eventType, id, format, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventCache"><span data-ttu-id="f6190-250">Objeto <see cref="T:System.Diagnostics.TraceEventCache" /> que contiene el identificador de proceso actual, el identificador de subproceso e información sobre el seguimiento de la pila.</span><span class="sxs-lookup"><span data-stu-id="f6190-250">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span></span></param>
        <param name="source"><span data-ttu-id="f6190-251">Nombre usado para identificar el resultado; normalmente es el nombre de la aplicación que generó el evento de seguimiento.</span><span class="sxs-lookup"><span data-stu-id="f6190-251">A name used to identify the output, typically the name of the application that generated the trace event.</span></span></param>
        <param name="eventType"><span data-ttu-id="f6190-252">Uno de los valores de <see cref="T:System.Diagnostics.TraceEventType" /> que indican el tipo de evento que provocó el seguimiento.</span><span class="sxs-lookup"><span data-stu-id="f6190-252">One of the <see cref="T:System.Diagnostics.TraceEventType" /> values specifying the type of event that has caused the trace.</span></span></param>
        <param name="id"><span data-ttu-id="f6190-253">Identificador numérico para el evento.</span><span class="sxs-lookup"><span data-stu-id="f6190-253">A numeric identifier for the event.</span></span></param>
        <param name="format"><span data-ttu-id="f6190-254">Cadena de formato que contiene cero o más elementos de formato, que corresponden a objetos de la matriz <paramref name="args" />.</span><span class="sxs-lookup"><span data-stu-id="f6190-254">A format string that contains zero or more format items, which correspond to objects in the <paramref name="args" /> array.</span></span></param>
        <param name="args"><span data-ttu-id="f6190-255">Matriz de <see langword="object" /> que contiene cero o más objetos a los que se va a aplicar formato.</span><span class="sxs-lookup"><span data-stu-id="f6190-255">An <see langword="object" /> array containing zero or more objects to format.</span></span></param>
        <summary><span data-ttu-id="f6190-256">Escribe la información de seguimiento, una matriz de objetos con formato y la información de evento en los resultados específicos del agente de escucha.</span><span class="sxs-lookup"><span data-stu-id="f6190-256">Writes trace information, a formatted array of objects and event information to the listener specific output.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="f6190-257">Este método no está pensado para llamarse directamente mediante código de aplicación, pero los miembros de la <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, y <xref:System.Diagnostics.TraceSource> clases para escribir datos de seguimiento para la salida.</span><span class="sxs-lookup"><span data-stu-id="f6190-257">This method is not intended to be called directly by application code but by members of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data to output.</span></span>  
  
 <span data-ttu-id="f6190-258">La implementación predeterminada escribe los valores de la `source`, `eventType` y `id` parámetros como un encabezado.</span><span class="sxs-lookup"><span data-stu-id="f6190-258">The default implementation writes the values of the `source`, `eventType` and `id` parameters as a header.</span></span> <span data-ttu-id="f6190-259">El `args` matriz de objetos se convierte en una cadena mediante la <xref:System.String.Format%2A> método, pasando el `format` cadena y `args` matriz a la cadena de formato como parte de mensaje del seguimiento.</span><span class="sxs-lookup"><span data-stu-id="f6190-259">The `args` object array is converted to a string using the <xref:System.String.Format%2A> method, passing the `format` string and `args` array to format the string as the message portion of the trace.</span></span> <span data-ttu-id="f6190-260">El `eventCache` datos se escriben como un pie de página, la naturaleza de los datos de salida que se va a depende del valor de la <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="f6190-260">The `eventCache` data is written as a footer, the nature of the output data being dependent on the value of the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="TraceOutputOptions">
      <MemberSignature Language="C#" Value="public System.Diagnostics.TraceOptions TraceOutputOptions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Diagnostics.TraceOptions TraceOutputOptions" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceListener.TraceOutputOptions" />
      <MemberSignature Language="VB.NET" Value="Public Property TraceOutputOptions As TraceOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::TraceOptions TraceOutputOptions { System::Diagnostics::TraceOptions get(); void set(System::Diagnostics::TraceOptions value); };" />
      <MemberSignature Language="F#" Value="member this.TraceOutputOptions : System.Diagnostics.TraceOptions with get, set" Usage="System.Diagnostics.TraceListener.TraceOutputOptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.TraceOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f6190-261">Obtiene o establece las opciones de los resultados de seguimiento.</span><span class="sxs-lookup"><span data-stu-id="f6190-261">Gets or sets the trace output options.</span></span></summary>
        <value><span data-ttu-id="f6190-262">Combinación bit a bit de los valores de la enumeración.</span><span class="sxs-lookup"><span data-stu-id="f6190-262">A bitwise combination of the enumeration values.</span></span> <span data-ttu-id="f6190-263">De manera predeterminada, es <see cref="F:System.Diagnostics.TraceOptions.None" />.</span><span class="sxs-lookup"><span data-stu-id="f6190-263">The default is <see cref="F:System.Diagnostics.TraceOptions.None" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6190-264">El <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> propiedad determina el contenido opcional del resultado del seguimiento.</span><span class="sxs-lookup"><span data-stu-id="f6190-264">The <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property determines the optional content of trace output.</span></span> <span data-ttu-id="f6190-265">La propiedad puede establecerse en el archivo de configuración o mediante programación durante la ejecución para incluir datos adicionales específicamente para una sección de código.</span><span class="sxs-lookup"><span data-stu-id="f6190-265">The property can be set in the configuration file or programmatically during execution to include additional data specifically for a section of code.</span></span> <span data-ttu-id="f6190-266">Por ejemplo, puede establecer el <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> propiedad para el agente de escucha de seguimiento de consola a <xref:System.Diagnostics.TraceOptions.Callstack?displayProperty=nameWithType> para agregar información de la pila de llamadas a la salida del seguimiento.</span><span class="sxs-lookup"><span data-stu-id="f6190-266">For example, you can set the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property for the console trace listener to <xref:System.Diagnostics.TraceOptions.Callstack?displayProperty=nameWithType> to add call stack information to the trace output.</span></span>  
  
 <span data-ttu-id="f6190-267">El <xref:System.Diagnostics.TraceOptions> enumeración no se utiliza por las siguientes clases y métodos:</span><span class="sxs-lookup"><span data-stu-id="f6190-267">The <xref:System.Diagnostics.TraceOptions> enumeration is not used by the following classes and methods:</span></span>  
  
-   <span data-ttu-id="f6190-268">La <xref:System.Diagnostics.EventLogTraceListener> clase, ya que puede provocar un gran volumen de datos se escriban en el registro.</span><span class="sxs-lookup"><span data-stu-id="f6190-268">The <xref:System.Diagnostics.EventLogTraceListener> class, because it can cause a large volume of data to be written to the log.</span></span>  
  
-   <span data-ttu-id="f6190-269">El `Write` y `WriteLine` métodos de la <xref:System.Diagnostics.ConsoleTraceListener>, <xref:System.Diagnostics.DefaultTraceListener>, y <xref:System.Diagnostics.TextWriterTraceListener> clases.</span><span class="sxs-lookup"><span data-stu-id="f6190-269">The `Write` and `WriteLine` methods of the <xref:System.Diagnostics.ConsoleTraceListener>, <xref:System.Diagnostics.DefaultTraceListener>, and <xref:System.Diagnostics.TextWriterTraceListener> classes.</span></span>  
  
-   <span data-ttu-id="f6190-270">El <xref:System.Diagnostics.TraceListener.Write%2A> y <xref:System.Diagnostics.TraceListener.WriteLine%2A> métodos de la <xref:System.Diagnostics.TraceListener> clase cuando no se reemplazan en una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="f6190-270">The <xref:System.Diagnostics.TraceListener.Write%2A> and <xref:System.Diagnostics.TraceListener.WriteLine%2A> methods of the <xref:System.Diagnostics.TraceListener> class when they are not overridden in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f6190-271">El ejemplo siguiente muestra la configuración de la <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> propiedad para un agente de escucha de seguimiento de consola.</span><span class="sxs-lookup"><span data-stu-id="f6190-271">The following example shows the setting of the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property for a console trace listener.</span></span> <span data-ttu-id="f6190-272">El agente de escucha de seguimiento de consola es uno de los agentes de escucha que se enumeran en la <xref:System.Diagnostics.TraceSource.Listeners%2A> propiedad de un origen de seguimiento.</span><span class="sxs-lookup"><span data-stu-id="f6190-272">The console trace listener is one of the listeners enumerated in the <xref:System.Diagnostics.TraceSource.Listeners%2A> property of a trace source.</span></span> <span data-ttu-id="f6190-273">Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Diagnostics.TraceSource> clase.</span><span class="sxs-lookup"><span data-stu-id="f6190-273">This code example is part of a larger example provided for the <xref:System.Diagnostics.TraceSource> class.</span></span>  
  
 [!code-csharp[System.Diagnostics.TraceSource2#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/CS/program.cs#16)]
 [!code-vb[System.Diagnostics.TraceSource2#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/VB/program.vb#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="f6190-274">Error en la operación de establecimiento porque el valor no es válido.</span><span class="sxs-lookup"><span data-stu-id="f6190-274">Set operation failed because the value is invalid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TraceTransfer">
      <MemberSignature Language="C#" Value="public virtual void TraceTransfer (System.Diagnostics.TraceEventCache eventCache, string source, int id, string message, Guid relatedActivityId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TraceTransfer(class System.Diagnostics.TraceEventCache eventCache, string source, int32 id, string message, valuetype System.Guid relatedActivityId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub TraceTransfer (eventCache As TraceEventCache, source As String, id As Integer, message As String, relatedActivityId As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void TraceTransfer(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, int id, System::String ^ message, Guid relatedActivityId);" />
      <MemberSignature Language="F#" Value="abstract member TraceTransfer : System.Diagnostics.TraceEventCache * string * int * string * Guid -&gt; unit&#xA;override this.TraceTransfer : System.Diagnostics.TraceEventCache * string * int * string * Guid -&gt; unit" Usage="traceListener.TraceTransfer (eventCache, source, id, message, relatedActivityId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="relatedActivityId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="eventCache"><span data-ttu-id="f6190-275">Objeto <see cref="T:System.Diagnostics.TraceEventCache" /> que contiene el identificador de proceso actual, el identificador de subproceso e información sobre el seguimiento de la pila.</span><span class="sxs-lookup"><span data-stu-id="f6190-275">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span></span></param>
        <param name="source"><span data-ttu-id="f6190-276">Nombre usado para identificar el resultado; normalmente es el nombre de la aplicación que generó el evento de seguimiento.</span><span class="sxs-lookup"><span data-stu-id="f6190-276">A name used to identify the output, typically the name of the application that generated the trace event.</span></span></param>
        <param name="id"><span data-ttu-id="f6190-277">Identificador numérico para el evento.</span><span class="sxs-lookup"><span data-stu-id="f6190-277">A numeric identifier for the event.</span></span></param>
        <param name="message"><span data-ttu-id="f6190-278">Mensaje que se va a escribir.</span><span class="sxs-lookup"><span data-stu-id="f6190-278">A message to write.</span></span></param>
        <param name="relatedActivityId"><span data-ttu-id="f6190-279">Objeto <see cref="T:System.Guid" /> que identifica una actividad relacionada.</span><span class="sxs-lookup"><span data-stu-id="f6190-279">A <see cref="T:System.Guid" /> object identifying a related activity.</span></span></param>
        <summary><span data-ttu-id="f6190-280">Escribe la información de seguimiento, un mensaje, una identidad de actividad relacionada y la información de evento en los resultados específicos del agente de escucha.</span><span class="sxs-lookup"><span data-stu-id="f6190-280">Writes trace information, a message, a related activity identity and event information to the listener specific output.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="f6190-281">Este método no está pensado para llamarse directamente mediante código de aplicación, pero los miembros de la <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, y <xref:System.Diagnostics.TraceSource> clases para escribir datos de seguimiento para la salida.</span><span class="sxs-lookup"><span data-stu-id="f6190-281">This method is not intended to be called directly by application code but by members of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data to output.</span></span>  
  
 <span data-ttu-id="f6190-282">El <xref:System.Diagnostics.XmlWriterTraceListener.TraceTransfer%2A> método se utiliza para la correlación de seguimientos relacionados.</span><span class="sxs-lookup"><span data-stu-id="f6190-282">The <xref:System.Diagnostics.XmlWriterTraceListener.TraceTransfer%2A> method is used for the correlation of related traces.</span></span> <span data-ttu-id="f6190-283">El <xref:System.Diagnostics.TraceListener.TraceTransfer%2A> llamadas al método el <xref:System.Diagnostics.TraceListener.TraceEvent%2A> método para procesar la llamada, con el nivel de eventType establecido en <xref:System.Diagnostics.TraceEventType.Transfer> y `relatedActivityId` <xref:System.Guid> como una cadena que se adjunta al mensaje.</span><span class="sxs-lookup"><span data-stu-id="f6190-283">The <xref:System.Diagnostics.TraceListener.TraceTransfer%2A> method calls the <xref:System.Diagnostics.TraceListener.TraceEvent%2A> method to process the call, with the eventType level set to <xref:System.Diagnostics.TraceEventType.Transfer> and the `relatedActivityId`<xref:System.Guid> as a string appended to the message.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Write">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f6190-284">Escribe un mensaje, un nombre de categoría o el valor del método <see cref="M:System.Object.ToString" /> de un objeto en el agente de escucha que se crea al implementar la clase <see cref="T:System.Diagnostics.TraceListener" />.</span><span class="sxs-lookup"><span data-stu-id="f6190-284">Writes a message, category name, or the value of an object's <see cref="M:System.Object.ToString" /> method to the listener you create when you implement the <see cref="T:System.Diagnostics.TraceListener" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceListener.Write(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (o As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="abstract member Write : obj -&gt; unit&#xA;override this.Write : obj -&gt; unit" Usage="traceListener.Write o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o"><span data-ttu-id="f6190-285"><see cref="T:System.Object" /> cuyo nombre de clase completo se desea escribir.</span><span class="sxs-lookup"><span data-stu-id="f6190-285">An <see cref="T:System.Object" /> whose fully qualified class name you want to write.</span></span></param>
        <summary><span data-ttu-id="f6190-286">Escribe el valor del método <see cref="M:System.Object.ToString" /> del objeto en el agente de escucha que se crea al implementar la clase <see cref="T:System.Diagnostics.TraceListener" />.</span><span class="sxs-lookup"><span data-stu-id="f6190-286">Writes the value of the object's <see cref="M:System.Object.ToString" /> method to the listener you create when you implement the <see cref="T:System.Diagnostics.TraceListener" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public abstract void Write (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceListener.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Write (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Write(System::String ^ message);" />
      <MemberSignature Language="F#" Value="abstract member Write : string -&gt; unit" Usage="traceListener.Write message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="f6190-287">Mensaje que se va a escribir.</span><span class="sxs-lookup"><span data-stu-id="f6190-287">A message to write.</span></span></param>
        <summary><span data-ttu-id="f6190-288">Cuando se reemplaza en una clase derivada, escribe el mensaje especificado en el agente de escucha que se crea en la clase derivada.</span><span class="sxs-lookup"><span data-stu-id="f6190-288">When overridden in a derived class, writes the specified message to the listener you create in the derived class.</span></span></summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="f6190-289">Al heredar de esta clase, debe implementar este método.</span><span class="sxs-lookup"><span data-stu-id="f6190-289">When inheriting from this class, you must implement this method.</span></span> <span data-ttu-id="f6190-290">Para admitir una sangría, debe llamar a <see cref="M:System.Diagnostics.TraceListener.WriteIndent" /> si <see cref="P:System.Diagnostics.TraceListener.NeedIndent" /> es <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="f6190-290">To support an indentation, you should call <see cref="M:System.Diagnostics.TraceListener.WriteIndent" /> if <see cref="P:System.Diagnostics.TraceListener.NeedIndent" /> is <see langword="true" />.</span></span> <span data-ttu-id="f6190-291">Si tiene que aplicar sangría a la siguiente línea, debe restablecer <see cref="P:System.Diagnostics.TraceListener.NeedIndent" /> a <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="f6190-291">If you need to indent the following line, you must reset <see cref="P:System.Diagnostics.TraceListener.NeedIndent" /> to <see langword="true" />.</span></span></para></block>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (object o, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(object o, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceListener.Write(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (o As Object, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(System::Object ^ o, System::String ^ category);" />
      <MemberSignature Language="F#" Value="abstract member Write : obj * string -&gt; unit&#xA;override this.Write : obj * string -&gt; unit" Usage="traceListener.Write (o, category)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="o"><span data-ttu-id="f6190-292"><see cref="T:System.Object" /> cuyo nombre de clase completo se desea escribir.</span><span class="sxs-lookup"><span data-stu-id="f6190-292">An <see cref="T:System.Object" /> whose fully qualified class name you want to write.</span></span></param>
        <param name="category"><span data-ttu-id="f6190-293">Nombre de categoría usado para organizar el resultado.</span><span class="sxs-lookup"><span data-stu-id="f6190-293">A category name used to organize the output.</span></span></param>
        <summary><span data-ttu-id="f6190-294">Escribe un nombre de categoría y el valor del método <see cref="M:System.Object.ToString" /> del objeto en el agente de escucha que se crea al implementar la clase <see cref="T:System.Diagnostics.TraceListener" />.</span><span class="sxs-lookup"><span data-stu-id="f6190-294">Writes a category name and the value of the object's <see cref="M:System.Object.ToString" /> method to the listener you create when you implement the <see cref="T:System.Diagnostics.TraceListener" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual void Write (string message, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(string message, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceListener.Write(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Write (message As String, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(System::String ^ message, System::String ^ category);" />
      <MemberSignature Language="F#" Value="abstract member Write : string * string -&gt; unit&#xA;override this.Write : string * string -&gt; unit" Usage="traceListener.Write (message, category)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="f6190-295">Mensaje que se va a escribir.</span><span class="sxs-lookup"><span data-stu-id="f6190-295">A message to write.</span></span></param>
        <param name="category"><span data-ttu-id="f6190-296">Nombre de categoría usado para organizar el resultado.</span><span class="sxs-lookup"><span data-stu-id="f6190-296">A category name used to organize the output.</span></span></param>
        <summary><span data-ttu-id="f6190-297">Escribe un nombre de categoría y un mensaje en el agente de escucha que se crea al implementar la clase <see cref="T:System.Diagnostics.TraceListener" />.</span><span class="sxs-lookup"><span data-stu-id="f6190-297">Writes a category name and a message to the listener you create when you implement the <see cref="T:System.Diagnostics.TraceListener" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="WriteIndent">
      <MemberSignature Language="C#" Value="protected virtual void WriteIndent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void WriteIndent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceListener.WriteIndent" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub WriteIndent ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void WriteIndent();" />
      <MemberSignature Language="F#" Value="abstract member WriteIndent : unit -&gt; unit&#xA;override this.WriteIndent : unit -&gt; unit" Usage="traceListener.WriteIndent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f6190-298">Escribe la sangría en el agente de escucha que se crea al implementar esta clase y restablece la propiedad <see cref="P:System.Diagnostics.TraceListener.NeedIndent" /> en <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f6190-298">Writes the indent to the listener you create when you implement this class, and resets the <see cref="P:System.Diagnostics.TraceListener.NeedIndent" /> property to <see langword="false" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6190-299">Este método escribe la sangría y restablece el <xref:System.Diagnostics.TraceListener.NeedIndent%2A> propiedad `false`.</span><span class="sxs-lookup"><span data-stu-id="f6190-299">This method writes the indent and resets the <xref:System.Diagnostics.TraceListener.NeedIndent%2A> property to `false`.</span></span> <span data-ttu-id="f6190-300">Llame a este método si <xref:System.Diagnostics.TraceListener.NeedIndent%2A> es `true` al reemplazar el <xref:System.Diagnostics.TraceListener.Write%2A> y <xref:System.Diagnostics.TraceListener.WriteLine%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="f6190-300">Call this method if <xref:System.Diagnostics.TraceListener.NeedIndent%2A> is `true` when you are overriding the <xref:System.Diagnostics.TraceListener.Write%2A> and <xref:System.Diagnostics.TraceListener.WriteLine%2A> methods.</span></span> <span data-ttu-id="f6190-301">De forma predeterminada, este método utiliza espacios en blanco para la sangría.</span><span class="sxs-lookup"><span data-stu-id="f6190-301">By default, this method uses blank spaces for indentation.</span></span> <span data-ttu-id="f6190-302">El tamaño de la sangría viene determinada por los valores de la <xref:System.Diagnostics.TraceListener.IndentSize%2A> y <xref:System.Diagnostics.TraceListener.IndentLevel%2A> propiedades.</span><span class="sxs-lookup"><span data-stu-id="f6190-302">The size of the indent is determined by the values of the <xref:System.Diagnostics.TraceListener.IndentSize%2A> and <xref:System.Diagnostics.TraceListener.IndentLevel%2A> properties.</span></span> <span data-ttu-id="f6190-303">El <xref:System.Diagnostics.TraceListener.IndentLevel%2A> propiedad representa el número de veces que la sangría de tamaño especificado por el <xref:System.Diagnostics.TraceListener.IndentSize%2A> se aplica la propiedad.</span><span class="sxs-lookup"><span data-stu-id="f6190-303">The <xref:System.Diagnostics.TraceListener.IndentLevel%2A> property represents the number of times the indent of the size specified by the <xref:System.Diagnostics.TraceListener.IndentSize%2A> property is applied.</span></span> <span data-ttu-id="f6190-304">Este método es invocado por el <xref:System.Diagnostics.DefaultTraceListener> y <xref:System.Diagnostics.TextWriterTraceListener> clases.</span><span class="sxs-lookup"><span data-stu-id="f6190-304">This method is called by the <xref:System.Diagnostics.DefaultTraceListener> and <xref:System.Diagnostics.TextWriterTraceListener> classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteLine">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f6190-305">Escribe un mensaje, un nombre de categoría o el método <see cref="M:System.Object.ToString" /> de un objeto en el agente de escucha que se crea al implementar la clase <see cref="T:System.Diagnostics.TraceListener" />, seguido de un terminador de línea.</span><span class="sxs-lookup"><span data-stu-id="f6190-305">Writes a message, category name, or the value of an object's <see cref="M:System.Object.ToString" /> method to the listener you create when you implement the <see cref="T:System.Diagnostics.TraceListener" /> class, followed by a line terminator.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public virtual void WriteLine (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteLine(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceListener.WriteLine(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteLine (o As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteLine(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : obj -&gt; unit&#xA;override this.WriteLine : obj -&gt; unit" Usage="traceListener.WriteLine o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o"><span data-ttu-id="f6190-306"><see cref="T:System.Object" /> cuyo nombre de clase completo se desea escribir.</span><span class="sxs-lookup"><span data-stu-id="f6190-306">An <see cref="T:System.Object" /> whose fully qualified class name you want to write.</span></span></param>
        <summary><span data-ttu-id="f6190-307">Escribe el valor del método <see cref="M:System.Object.ToString" /> del objeto en el agente de escucha que se crea al implementar la clase <see cref="T:System.Diagnostics.TraceListener" />, seguido de un terminador de línea.</span><span class="sxs-lookup"><span data-stu-id="f6190-307">Writes the value of the object's <see cref="M:System.Object.ToString" /> method to the listener you create when you implement the <see cref="T:System.Diagnostics.TraceListener" /> class, followed by a line terminator.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6190-308">El terminador de línea típica que podría implementar es un retorno de carro seguido de un avance de línea (\r\n).</span><span class="sxs-lookup"><span data-stu-id="f6190-308">The typical line terminator you might implement is a carriage return followed by a line feed (\r\n).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public abstract void WriteLine (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteLine(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceListener.WriteLine(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteLine (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteLine(System::String ^ message);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : string -&gt; unit" Usage="traceListener.WriteLine message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="f6190-309">Mensaje que se va a escribir.</span><span class="sxs-lookup"><span data-stu-id="f6190-309">A message to write.</span></span></param>
        <summary><span data-ttu-id="f6190-310">Cuando se reemplaza en una clase derivada, escribe un mensaje en el agente de escucha que se crea en la clase derivada, seguido de un terminador de línea.</span><span class="sxs-lookup"><span data-stu-id="f6190-310">When overridden in a derived class, writes a message to the listener you create in the derived class, followed by a line terminator.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6190-311">El terminador de línea típica que podría implementar es un retorno de carro seguido de un avance de línea (\r\n).</span><span class="sxs-lookup"><span data-stu-id="f6190-311">The typical line terminator you might implement is a carriage return followed by a line feed (\r\n).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="f6190-312">Al heredar de esta clase, debe implementar este método.</span><span class="sxs-lookup"><span data-stu-id="f6190-312">When inheriting from this class, you must implement this method.</span></span> <span data-ttu-id="f6190-313">Para admitir una sangría, llame a <see cref="M:System.Diagnostics.TraceListener.WriteIndent" /> si <see cref="P:System.Diagnostics.TraceListener.NeedIndent" /> es <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="f6190-313">To support an indentation, call <see cref="M:System.Diagnostics.TraceListener.WriteIndent" /> if <see cref="P:System.Diagnostics.TraceListener.NeedIndent" /> is <see langword="true" />.</span></span> <span data-ttu-id="f6190-314">Para aplicar sangría a la siguiente línea, debe restablecer <see cref="P:System.Diagnostics.TraceListener.NeedIndent" /> a <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="f6190-314">To indent the following line, you must reset <see cref="P:System.Diagnostics.TraceListener.NeedIndent" /> to <see langword="true" />.</span></span></para></block>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public virtual void WriteLine (object o, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteLine(object o, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceListener.WriteLine(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteLine (o As Object, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteLine(System::Object ^ o, System::String ^ category);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : obj * string -&gt; unit&#xA;override this.WriteLine : obj * string -&gt; unit" Usage="traceListener.WriteLine (o, category)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="o"><span data-ttu-id="f6190-315"><see cref="T:System.Object" /> cuyo nombre de clase completo se desea escribir.</span><span class="sxs-lookup"><span data-stu-id="f6190-315">An <see cref="T:System.Object" /> whose fully qualified class name you want to write.</span></span></param>
        <param name="category"><span data-ttu-id="f6190-316">Nombre de categoría usado para organizar el resultado.</span><span class="sxs-lookup"><span data-stu-id="f6190-316">A category name used to organize the output.</span></span></param>
        <summary><span data-ttu-id="f6190-317">Escribe un nombre de categoría y el valor del método <see cref="M:System.Object.ToString" /> del objeto en el agente de escucha que se crea al implementar la clase <see cref="T:System.Diagnostics.TraceListener" />, seguidos de un terminador de línea.</span><span class="sxs-lookup"><span data-stu-id="f6190-317">Writes a category name and the value of the object's <see cref="M:System.Object.ToString" /> method to the listener you create when you implement the <see cref="T:System.Diagnostics.TraceListener" /> class, followed by a line terminator.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6190-318">El terminador de línea típica que podría implementar es un retorno de carro seguido de un avance de línea (\r\n).</span><span class="sxs-lookup"><span data-stu-id="f6190-318">The typical line terminator you might implement is a carriage return followed by a line feed (\r\n).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public virtual void WriteLine (string message, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteLine(string message, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceListener.WriteLine(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteLine (message As String, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteLine(System::String ^ message, System::String ^ category);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : string * string -&gt; unit&#xA;override this.WriteLine : string * string -&gt; unit" Usage="traceListener.WriteLine (message, category)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="f6190-319">Mensaje que se va a escribir.</span><span class="sxs-lookup"><span data-stu-id="f6190-319">A message to write.</span></span></param>
        <param name="category"><span data-ttu-id="f6190-320">Nombre de categoría usado para organizar el resultado.</span><span class="sxs-lookup"><span data-stu-id="f6190-320">A category name used to organize the output.</span></span></param>
        <summary><span data-ttu-id="f6190-321">Escribe un nombre de categoría y un mensaje en el agente de escucha que se crea al implementar la clase <see cref="T:System.Diagnostics.TraceListener" />, seguidos de un terminador de línea.</span><span class="sxs-lookup"><span data-stu-id="f6190-321">Writes a category name and a message to the listener you create when you implement the <see cref="T:System.Diagnostics.TraceListener" /> class, followed by a line terminator.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f6190-322">El terminador de línea típica que podría implementar es un retorno de carro seguido de un avance de línea (\r\n).</span><span class="sxs-lookup"><span data-stu-id="f6190-322">The typical line terminator you might implement is a carriage return followed by a line feed (\r\n).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
  </Members>
</Type>
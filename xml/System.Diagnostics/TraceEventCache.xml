<Type Name="TraceEventCache" FullName="System.Diagnostics.TraceEventCache">
  <Metadata><Meta Name="ms.openlocfilehash" Value="41f425979c942f2a7475f0d45fa5d9212eccd493" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58709332" /></Metadata><TypeSignature Language="C#" Value="public class TraceEventCache" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TraceEventCache extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.TraceEventCache" />
  <TypeSignature Language="VB.NET" Value="Public Class TraceEventCache" />
  <TypeSignature Language="C++ CLI" Value="public ref class TraceEventCache" />
  <TypeSignature Language="F#" Value="type TraceEventCache = class" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="1a66f-101">Proporciona los datos de evento de seguimiento específicos de un subproceso y un proceso.</span><span class="sxs-lookup"><span data-stu-id="1a66f-101">Provides trace event data specific to a thread and a process.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="1a66f-102">El <xref:System.Diagnostics.TraceEventCache> (clase), diseñada como una optimización del rendimiento para las llamadas de agente de escucha de seguimiento, es de interés solo para los desarrolladores que crean los agentes de escucha de seguimiento personalizado.</span><span class="sxs-lookup"><span data-stu-id="1a66f-102">The <xref:System.Diagnostics.TraceEventCache> class, designed as a performance optimization for trace listener calls, is of interest only to developers creating custom trace listeners.</span></span>  
  
 <span data-ttu-id="1a66f-103">La <xref:System.Diagnostics.TraceEventCache> clase se utiliza como un parámetro en métodos de seguimiento para identificar con exactitud el origen de un evento de seguimiento.</span><span class="sxs-lookup"><span data-stu-id="1a66f-103">The <xref:System.Diagnostics.TraceEventCache> class is used as a parameter in tracing methods to accurately identify the source of a trace event.</span></span> <span data-ttu-id="1a66f-104">Ejemplos de métodos que usan <xref:System.Diagnostics.TraceEventCache> son <xref:System.Diagnostics.TraceListener.TraceEvent%2A?displayProperty=nameWithType> y <xref:System.Diagnostics.TraceFilter.ShouldTrace%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1a66f-104">Examples of methods that use <xref:System.Diagnostics.TraceEventCache> are <xref:System.Diagnostics.TraceListener.TraceEvent%2A?displayProperty=nameWithType> and <xref:System.Diagnostics.TraceFilter.ShouldTrace%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="1a66f-105">El <xref:System.Diagnostics.TraceEventCache.LogicalOperationStack%2A> propiedad contiene los datos que pueden usarse para correlacionar el seguimiento con los seguimientos relacionados.</span><span class="sxs-lookup"><span data-stu-id="1a66f-105">The <xref:System.Diagnostics.TraceEventCache.LogicalOperationStack%2A> property contains data that can be used to correlate the trace with related traces.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TraceEventCache ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceEventCache.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TraceEventCache();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1a66f-106">Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.TraceEventCache" />.</span><span class="sxs-lookup"><span data-stu-id="1a66f-106">Initializes a new instance of the <see cref="T:System.Diagnostics.TraceEventCache" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Callstack">
      <MemberSignature Language="C#" Value="public string Callstack { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Callstack" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceEventCache.Callstack" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Callstack As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Callstack { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Callstack : string" Usage="System.Diagnostics.TraceEventCache.Callstack" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a66f-107">Obtiene la pila de llamadas del actual subproceso.</span><span class="sxs-lookup"><span data-stu-id="1a66f-107">Gets the call stack for the current thread.</span></span></summary>
        <value><span data-ttu-id="1a66f-108">Cadena que contiene información acerca del seguimiento de la pila.</span><span class="sxs-lookup"><span data-stu-id="1a66f-108">A string containing stack trace information.</span></span> <span data-ttu-id="1a66f-109">Este valor puede ser una cadena vacía ("").</span><span class="sxs-lookup"><span data-stu-id="1a66f-109">This value can be an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a66f-110">El <xref:System.Diagnostics.TraceEventCache.Callstack%2A> propiedad obtiene la pila de llamadas desde el <xref:System.Environment.StackTrace%2A> propiedad de la <xref:System.Environment> clase.</span><span class="sxs-lookup"><span data-stu-id="1a66f-110">The <xref:System.Diagnostics.TraceEventCache.Callstack%2A> property gets the call stack from the <xref:System.Environment.StackTrace%2A> property of the <xref:System.Environment> class.</span></span> <span data-ttu-id="1a66f-111">El valor de propiedad muestra las llamadas de método en orden cronológico inverso.</span><span class="sxs-lookup"><span data-stu-id="1a66f-111">The property value lists method calls in reverse chronological order.</span></span> <span data-ttu-id="1a66f-112">Es decir, la llamada al método más reciente se describe en primer lugar.</span><span class="sxs-lookup"><span data-stu-id="1a66f-112">That is, the most recent method call is described first.</span></span> <span data-ttu-id="1a66f-113">Aparece una línea de información de seguimiento de pila para cada llamada de método en la pila.</span><span class="sxs-lookup"><span data-stu-id="1a66f-113">One line of stack trace information is listed for each method call on the stack.</span></span> <span data-ttu-id="1a66f-114">Para obtener más información, vea <xref:System.Environment.StackTrace%2A>.</span><span class="sxs-lookup"><span data-stu-id="1a66f-114">For more information, see <xref:System.Environment.StackTrace%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission"><span data-ttu-id="1a66f-115">Para obtener acceso completo al recurso protegido por el permiso.</span><span class="sxs-lookup"><span data-stu-id="1a66f-115">for full access to the resource protected by the permission.</span></span> <span data-ttu-id="1a66f-116">Enumeración asociada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="1a66f-116">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="DateTime">
      <MemberSignature Language="C#" Value="public DateTime DateTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime DateTime" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceEventCache.DateTime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DateTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime DateTime { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.DateTime : DateTime" Usage="System.Diagnostics.TraceEventCache.DateTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a66f-117">Obtiene la fecha y la hora a la que se ha producido el seguimiento del evento.</span><span class="sxs-lookup"><span data-stu-id="1a66f-117">Gets the date and time at which the event trace occurred.</span></span></summary>
        <value><span data-ttu-id="1a66f-118">Una estructura <see cref="T:System.DateTime" /> cuyo valor es una fecha y una hora expresadas en UTC (Hora universal coordinada).</span><span class="sxs-lookup"><span data-stu-id="1a66f-118">A <see cref="T:System.DateTime" /> structure whose value is a date and time expressed in Coordinated Universal Time (UTC).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a66f-119">La primera vez que se accede a la propiedad en una instancia de la <xref:System.Diagnostics.TraceEventCache> clase actual se devuelve la hora.</span><span class="sxs-lookup"><span data-stu-id="1a66f-119">The first time the property is accessed in an instance of the <xref:System.Diagnostics.TraceEventCache> class, the current time is returned.</span></span> <span data-ttu-id="1a66f-120">Las consultas posteriores de esta propiedad en esa instancia devuelvan ese mismas <xref:System.DateTime> valor, lo que permite que se usará como una marca de tiempo.</span><span class="sxs-lookup"><span data-stu-id="1a66f-120">Subsequent queries of this property in that instance return that same <xref:System.DateTime> value, allowing it to be used as a timestamp.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LogicalOperationStack">
      <MemberSignature Language="C#" Value="public System.Collections.Stack LogicalOperationStack { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Stack LogicalOperationStack" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceEventCache.LogicalOperationStack" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LogicalOperationStack As Stack" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Stack ^ LogicalOperationStack { System::Collections::Stack ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LogicalOperationStack : System.Collections.Stack" Usage="System.Diagnostics.TraceEventCache.LogicalOperationStack" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Stack</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a66f-121">Obtiene los datos de correlación que contiene una pila.</span><span class="sxs-lookup"><span data-stu-id="1a66f-121">Gets the correlation data, contained in a stack.</span></span></summary>
        <value><span data-ttu-id="1a66f-122">Una <see cref="T:System.Collections.Stack" /> que contiene los datos de correlación.</span><span class="sxs-lookup"><span data-stu-id="1a66f-122">A <see cref="T:System.Collections.Stack" /> containing correlation data.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a66f-123">Los datos de correlación se almacenan como un objeto en el contexto de llamada con el nombre "System.Diagnostics.Trace.CorrelationManagerSlot".</span><span class="sxs-lookup"><span data-stu-id="1a66f-123">The correlation data is stored as an object in the call context with the name "System.Diagnostics.Trace.CorrelationManagerSlot".</span></span> <span data-ttu-id="1a66f-124">La <xref:System.Diagnostics.CorrelationManager> clase proporciona métodos utilizados para almacenar la identidad de una operación lógica en un contexto enlazado a subprocesos y etiquetar automáticamente cada evento de seguimiento generado por el subproceso con la identidad almacenada.</span><span class="sxs-lookup"><span data-stu-id="1a66f-124">The <xref:System.Diagnostics.CorrelationManager> class provides methods used to store a logical operation identity in a thread-bound context and automatically tag each trace event generated by the thread with the stored identity.</span></span> <span data-ttu-id="1a66f-125">El <xref:System.Diagnostics.CorrelationManager> se accede a través del <xref:System.Diagnostics.Trace.CorrelationManager%2A?displayProperty=nameWithType> propiedad.</span><span class="sxs-lookup"><span data-stu-id="1a66f-125">The <xref:System.Diagnostics.CorrelationManager> is accessed through the <xref:System.Diagnostics.Trace.CorrelationManager%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="1a66f-126">Cada llamada a la <xref:System.Diagnostics.CorrelationManager.StartLogicalOperation%2A> método inserta una nueva identidad de la operación lógica en la pila.</span><span class="sxs-lookup"><span data-stu-id="1a66f-126">Each call to the <xref:System.Diagnostics.CorrelationManager.StartLogicalOperation%2A> method pushes a new logical operation identity onto the stack.</span></span> <span data-ttu-id="1a66f-127">Cada llamada a la <xref:System.Diagnostics.CorrelationManager.StopLogicalOperation%2A> método extrae una identidad de la operación lógica de la pila</span><span class="sxs-lookup"><span data-stu-id="1a66f-127">Each call to the <xref:System.Diagnostics.CorrelationManager.StopLogicalOperation%2A> method pops a logical operation identity from the stack</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessId">
      <MemberSignature Language="C#" Value="public int ProcessId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ProcessId" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceEventCache.ProcessId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProcessId As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ProcessId { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ProcessId : int" Usage="System.Diagnostics.TraceEventCache.ProcessId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a66f-128">Obtiene el identificador único del actual proceso.</span><span class="sxs-lookup"><span data-stu-id="1a66f-128">Gets the unique identifier of the current process.</span></span></summary>
        <value><span data-ttu-id="1a66f-129">El identificador único generado por el sistema del actual proceso.</span><span class="sxs-lookup"><span data-stu-id="1a66f-129">The system-generated unique identifier of the current process.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a66f-130">Hasta que finaliza el proceso, el identificador de proceso identifica el proceso en todo el sistema.</span><span class="sxs-lookup"><span data-stu-id="1a66f-130">Until the process terminates, the process identifier uniquely identifies the process throughout the system.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="1a66f-131">Para poder llamar a código no administrado.</span><span class="sxs-lookup"><span data-stu-id="1a66f-131">for the ability to call unmanaged code.</span></span> <span data-ttu-id="1a66f-132">Enumeración asociada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="1a66f-132">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="ThreadId">
      <MemberSignature Language="C#" Value="public string ThreadId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ThreadId" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceEventCache.ThreadId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ThreadId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ThreadId { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ThreadId : string" Usage="System.Diagnostics.TraceEventCache.ThreadId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a66f-133">Obtiene un identificador único para el actual subproceso administrado.</span><span class="sxs-lookup"><span data-stu-id="1a66f-133">Gets a unique identifier for the current managed thread.</span></span></summary>
        <value><span data-ttu-id="1a66f-134">Una cadena que representa un identificador entero único para este subproceso administrado.</span><span class="sxs-lookup"><span data-stu-id="1a66f-134">A string that represents a unique integer identifier for this managed thread.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a66f-135">El identificador de subproceso es el valor de la <xref:System.Threading.Thread.ManagedThreadId%2A?displayProperty=nameWithType> formato de la propiedad como una cadena.</span><span class="sxs-lookup"><span data-stu-id="1a66f-135">The thread identifier is the value of the <xref:System.Threading.Thread.ManagedThreadId%2A?displayProperty=nameWithType> property formatted as a string.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Timestamp">
      <MemberSignature Language="C#" Value="public long Timestamp { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Timestamp" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceEventCache.Timestamp" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Timestamp As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long Timestamp { long get(); };" />
      <MemberSignature Language="F#" Value="member this.Timestamp : int64" Usage="System.Diagnostics.TraceEventCache.Timestamp" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1a66f-136">Obtiene el número actual de tics del mecanismo de temporización.</span><span class="sxs-lookup"><span data-stu-id="1a66f-136">Gets the current number of ticks in the timer mechanism.</span></span></summary>
        <value><span data-ttu-id="1a66f-137">El valor del contador de pasos del mecanismo de temporización subyacente.</span><span class="sxs-lookup"><span data-stu-id="1a66f-137">The tick counter value of the underlying timer mechanism.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a66f-138">Las llamadas de descriptor de acceso get el <xref:System.Diagnostics.Stopwatch.GetTimestamp%2A?displayProperty=nameWithType> método para obtener la marca de tiempo.</span><span class="sxs-lookup"><span data-stu-id="1a66f-138">The get accessor calls the <xref:System.Diagnostics.Stopwatch.GetTimestamp%2A?displayProperty=nameWithType> method to get the timestamp.</span></span> <span data-ttu-id="1a66f-139">Si el <xref:System.Diagnostics.Stopwatch> clase utiliza un contador de rendimiento de alta resolución, <xref:System.Diagnostics.Stopwatch.GetTimestamp%2A> devuelve el valor actual de ese contador.</span><span class="sxs-lookup"><span data-stu-id="1a66f-139">If the <xref:System.Diagnostics.Stopwatch> class uses a high-resolution performance counter, <xref:System.Diagnostics.Stopwatch.GetTimestamp%2A> returns the current value of that counter.</span></span> <span data-ttu-id="1a66f-140">Si el <xref:System.Diagnostics.Stopwatch> clase usa el temporizador del sistema, <xref:System.Diagnostics.Stopwatch.GetTimestamp%2A> devuelve el <xref:System.DateTime.Ticks%2A> propiedad de <xref:System.DateTime.Now%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1a66f-140">If the <xref:System.Diagnostics.Stopwatch> class uses the system timer, <xref:System.Diagnostics.Stopwatch.GetTimestamp%2A> returns the <xref:System.DateTime.Ticks%2A> property of <xref:System.DateTime.Now%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
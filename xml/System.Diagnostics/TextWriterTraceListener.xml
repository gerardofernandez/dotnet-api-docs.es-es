<Type Name="TextWriterTraceListener" FullName="System.Diagnostics.TextWriterTraceListener">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0b1358c95b54418a3f675e0db3492343f719707f" /><Meta Name="ms.sourcegitcommit" Value="1bb00d2f4343e73ae8d58668f02297a3cf10a4c1" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="06/15/2019" /><Meta Name="ms.locfileid" Value="63887380" /></Metadata><TypeSignature Language="C#" Value="public class TextWriterTraceListener : System.Diagnostics.TraceListener" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TextWriterTraceListener extends System.Diagnostics.TraceListener" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.TextWriterTraceListener" />
  <TypeSignature Language="VB.NET" Value="Public Class TextWriterTraceListener&#xA;Inherits TraceListener" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextWriterTraceListener : System::Diagnostics::TraceListener" />
  <TypeSignature Language="F#" Value="type TextWriterTraceListener = class&#xA;    inherit TraceListener" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Diagnostics.TraceListener</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="19072-101">Dirige los resultados de la traza o la depuración a un objeto <see cref="T:System.IO.TextWriter" /> o a un objeto de la clase <see cref="T:System.IO.Stream" /> como un archivo <see cref="T:System.IO.FileStream" />.</span><span class="sxs-lookup"><span data-stu-id="19072-101">Directs tracing or debugging output to a <see cref="T:System.IO.TextWriter" /> or to a <see cref="T:System.IO.Stream" />, such as <see cref="T:System.IO.FileStream" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19072-102">El <xref:System.Diagnostics.TextWriterTraceListener> clase proporciona el <xref:System.Diagnostics.TextWriterTraceListener.Writer%2A> propiedad va a obtener o establecer el escritor de texto que recibe la traza o la salida de depuración.</span><span class="sxs-lookup"><span data-stu-id="19072-102">The <xref:System.Diagnostics.TextWriterTraceListener> class provides the <xref:System.Diagnostics.TextWriterTraceListener.Writer%2A> property to get or set the text writer that receives the tracing or debugging output.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="19072-103">Este tipo implementa la <xref:System.IDisposable> interfaz.</span><span class="sxs-lookup"><span data-stu-id="19072-103">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="19072-104">Cuando haya terminado de utilizar el tipo, debe deshacerse de él directa o indirectamente.</span><span class="sxs-lookup"><span data-stu-id="19072-104">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="19072-105">Para deshacerse del tipo directamente, llame a su <xref:System.IDisposable.Dispose%2A> método en un `try` / `catch` bloque.</span><span class="sxs-lookup"><span data-stu-id="19072-105">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="19072-106">Para deshacerse de él, indirectamente, usar una construcción de lenguaje, como `using` (en C#) o `Using` (en Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="19072-106">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="19072-107">Para obtener más información, vea la sección "Uso de un objeto que implementa IDisposable" en el <xref:System.IDisposable> tema de la interfaz.</span><span class="sxs-lookup"><span data-stu-id="19072-107">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 <span data-ttu-id="19072-108">Esta clase también proporciona métodos para <xref:System.Diagnostics.TextWriterTraceListener.Close%2A> el <xref:System.Diagnostics.TextWriterTraceListener.Writer%2A> para que ya no reciba la traza o de depuración, a <xref:System.Diagnostics.TextWriterTraceListener.Flush%2A> el búfer de salida para el <xref:System.Diagnostics.TextWriterTraceListener.Writer%2A>y a <xref:System.Diagnostics.TextWriterTraceListener.Write%2A> un mensaje a la <xref:System.Diagnostics.TextWriterTraceListener.Writer%2A>.</span><span class="sxs-lookup"><span data-stu-id="19072-108">This class also provides methods to <xref:System.Diagnostics.TextWriterTraceListener.Close%2A> the <xref:System.Diagnostics.TextWriterTraceListener.Writer%2A> so that it no longer receives tracing or debugging output, to <xref:System.Diagnostics.TextWriterTraceListener.Flush%2A> the output buffer for the <xref:System.Diagnostics.TextWriterTraceListener.Writer%2A>, and to <xref:System.Diagnostics.TextWriterTraceListener.Write%2A> a message to the <xref:System.Diagnostics.TextWriterTraceListener.Writer%2A>.</span></span>  
  
 <span data-ttu-id="19072-109">Debe habilitar la traza o la depuración para utilizar un agente de escucha de seguimiento.</span><span class="sxs-lookup"><span data-stu-id="19072-109">You must enable tracing or debugging to use a trace listener.</span></span> <span data-ttu-id="19072-110">La sintaxis siguiente es específica del compilador.</span><span class="sxs-lookup"><span data-stu-id="19072-110">The following syntax is compiler specific.</span></span> <span data-ttu-id="19072-111">Si usa los compiladores que no sean de C# o Visual Basic, consulte la documentación del compilador.</span><span class="sxs-lookup"><span data-stu-id="19072-111">If you use compilers other than C# or Visual Basic, refer to the documentation for your compiler.</span></span>  
  
-   <span data-ttu-id="19072-112">Para habilitar la depuración en C#, agregue el `/d:DEBUG` marca a la línea de comandos del compilador al compilar el código, o puede agregar `#define DEBUG` a la parte superior del archivo.</span><span class="sxs-lookup"><span data-stu-id="19072-112">To enable debugging in C#, add the `/d:DEBUG` flag to the compiler command line when you compile your code, or you can add `#define DEBUG` to the top of your file.</span></span> <span data-ttu-id="19072-113">En Visual Basic, agregue el `/d:DEBUG=True` marca a la línea de comandos del compilador.</span><span class="sxs-lookup"><span data-stu-id="19072-113">In Visual Basic, add the `/d:DEBUG=True` flag to the compiler command line.</span></span>  
  
-   <span data-ttu-id="19072-114">Para habilitar el seguimiento en C#, agregue el `/d:TRACE` marca a la línea de comandos del compilador al compilar el código, o agregue `#define TRACE` a la parte superior del archivo.</span><span class="sxs-lookup"><span data-stu-id="19072-114">To enable tracing in C#, add the `/d:TRACE` flag to the compiler command line when you compile your code, or add `#define TRACE` to the top of your file.</span></span> <span data-ttu-id="19072-115">En Visual Basic, agregue el `/d:TRACE=True` marca a la línea de comandos del compilador.</span><span class="sxs-lookup"><span data-stu-id="19072-115">In Visual Basic, add the `/d:TRACE=True` flag to the compiler command line.</span></span>  
  
 <span data-ttu-id="19072-116">Para agregar un agente de escucha de seguimiento, edite el archivo de configuración que se corresponde con el nombre de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="19072-116">To add a trace listener, edit the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="19072-117">En este archivo, puede agregar un agente de escucha, establezca su tipo y su parámetro, quitar un agente de escucha o borrar todos los agentes de escucha previamente establecidos por la aplicación.</span><span class="sxs-lookup"><span data-stu-id="19072-117">Within this file, you can add a listener, set its type and set its parameter, remove a listener, or clear all the listeners previously set by the application.</span></span> <span data-ttu-id="19072-118">El archivo de configuración se debe dar formato similar al ejemplo siguiente.</span><span class="sxs-lookup"><span data-stu-id="19072-118">The configuration file should be formatted like the following example.</span></span>  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <trace autoflush="false" indentsize="4">  
      <listeners>  
        <add name="myListener"   
          type="System.Diagnostics.TextWriterTraceListener"   
          initializeData="TextWriterOutput.log" />  
        <remove name="Default" />  
      </listeners>  
    </trace>  
  </system.diagnostics>  
</configuration>  
```  
  
> [!NOTE]
>  <span data-ttu-id="19072-119">Si se intenta escribir en un archivo que está en uso o no está disponible, el nombre de archivo automáticamente viene precedido por un GUID.</span><span class="sxs-lookup"><span data-stu-id="19072-119">If an attempt is made to write to a file that is in use or unavailable, the file name is automatically prefixed by a GUID.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19072-120">En el ejemplo siguiente se implementa una instancia de la <xref:System.Diagnostics.TextWriterTraceListener> clase que usa un <xref:System.IO.StreamWriter> llamado `myOutputWriter` para escribir en un archivo denominado `TestFile.txt`.</span><span class="sxs-lookup"><span data-stu-id="19072-120">The following example implements an instance of the <xref:System.Diagnostics.TextWriterTraceListener> class that uses a <xref:System.IO.StreamWriter> called `myOutputWriter` to write to a file named `TestFile.txt`.</span></span> <span data-ttu-id="19072-121">En primer lugar el ejemplo crea un archivo de salida.</span><span class="sxs-lookup"><span data-stu-id="19072-121">First the example creates a file for output.</span></span> <span data-ttu-id="19072-122">A continuación, crea el <xref:System.IO.StreamWriter> para el primer escritor de texto, lo asigna el archivo de salida y lo agrega a la <xref:System.Diagnostics.Trace.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="19072-122">Then it creates the <xref:System.IO.StreamWriter> for the first text writer, assigns it the output file, and adds it to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="19072-123">A continuación, el código genera una línea de texto en el archivo.</span><span class="sxs-lookup"><span data-stu-id="19072-123">Then, the code outputs one line of text to the file.</span></span> <span data-ttu-id="19072-124">Por último, el ejemplo vacía el búfer de salida.</span><span class="sxs-lookup"><span data-stu-id="19072-124">Finally, the example flushes the output buffer.</span></span>  
  
 <span data-ttu-id="19072-125">Después de ejecutar este ejemplo, puede abrir el `TestFile.txt` archivo para ver el resultado.</span><span class="sxs-lookup"><span data-stu-id="19072-125">After running this sample, you can open the `TestFile.txt` file to see the output.</span></span>  
  
 [!code-cpp[Classic TextWriterTraceListener Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TextWriterTraceListener Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextWriterTraceListener Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TextWriterTraceListener Example/CS/source.cs#1)]
 [!code-vb[Classic TextWriterTraceListener Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TextWriterTraceListener Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Diagnostics.TraceListener" />
    <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
    <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
    <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
    <altmember cref="T:System.IO.Stream" />
    <altmember cref="T:System.IO.TextWriter" />
    <altmember cref="T:System.Diagnostics.Debug" />
    <altmember cref="T:System.Diagnostics.Trace" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="19072-126">Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.TextWriterTraceListener" />.</span><span class="sxs-lookup"><span data-stu-id="19072-126">Initializes a new instance of the <see cref="T:System.Diagnostics.TextWriterTraceListener" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextWriterTraceListener ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TextWriterTraceListener.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextWriterTraceListener();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="19072-127">Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.TextWriterTraceListener" /> con <see cref="T:System.IO.TextWriter" /> como destinatario de resultados.</span><span class="sxs-lookup"><span data-stu-id="19072-127">Initializes a new instance of the <see cref="T:System.Diagnostics.TextWriterTraceListener" /> class with <see cref="T:System.IO.TextWriter" /> as the output recipient.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19072-128">Este constructor utiliza el <xref:System.IO.TextWriter> secuencia como destinatario de la traza o la salida de depuración.</span><span class="sxs-lookup"><span data-stu-id="19072-128">This constructor uses the <xref:System.IO.TextWriter> stream as the recipient of the tracing or debugging output.</span></span> <span data-ttu-id="19072-129">Su <xref:System.Diagnostics.TraceListener.Name%2A> propiedad se inicializa en una cadena vacía ("", o <xref:System.String.Empty?displayProperty=nameWithType>).</span><span class="sxs-lookup"><span data-stu-id="19072-129">Its <xref:System.Diagnostics.TraceListener.Name%2A> property is initialized to an empty string ("", or <xref:System.String.Empty?displayProperty=nameWithType>).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19072-130">En el ejemplo siguiente se crea un <xref:System.Diagnostics.TextWriterTraceListener> utilizando el <xref:System.Diagnostics.TextWriterTraceListener.%23ctor> constructor.</span><span class="sxs-lookup"><span data-stu-id="19072-130">The following example creates a <xref:System.Diagnostics.TextWriterTraceListener> using the <xref:System.Diagnostics.TextWriterTraceListener.%23ctor> constructor.</span></span> <span data-ttu-id="19072-131">Establece el <xref:System.Diagnostics.TextWriterTraceListener.Writer%2A> propiedad a la consola de salida y, a continuación, agrega el <xref:System.Diagnostics.TextWriterTraceListener> a la <xref:System.Diagnostics.TraceListenerCollection>.</span><span class="sxs-lookup"><span data-stu-id="19072-131">It sets the <xref:System.Diagnostics.TextWriterTraceListener.Writer%2A> property to console output, and then adds the <xref:System.Diagnostics.TextWriterTraceListener> to the <xref:System.Diagnostics.TraceListenerCollection>.</span></span> <span data-ttu-id="19072-132">Se escribe un mensaje en dos segmentos y, a continuación, se cierra el <xref:System.Diagnostics.TextWriterTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="19072-132">It writes a message in two segments, and then closes the <xref:System.Diagnostics.TextWriterTraceListener>.</span></span>  
  
 [!code-cpp[Classic TextWriterTraceListener.WriteLine Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.WriteLine Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextWriterTraceListener.WriteLine Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.WriteLine Example/CS/source.cs#1)]
 [!code-vb[Classic TextWriterTraceListener.WriteLine Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.WriteLine Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextWriterTraceListener (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextWriterTraceListener(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.TextWriterTraceListener : System.IO.Stream -&gt; System.Diagnostics.TextWriterTraceListener" Usage="new System.Diagnostics.TextWriterTraceListener stream" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="19072-133">Objeto <see cref="T:System.IO.Stream" /> que representa la secuencia en la que <see cref="T:System.Diagnostics.TextWriterTraceListener" /> escribe.</span><span class="sxs-lookup"><span data-stu-id="19072-133">A <see cref="T:System.IO.Stream" /> that represents the stream the <see cref="T:System.Diagnostics.TextWriterTraceListener" /> writes to.</span></span></param>
        <summary><span data-ttu-id="19072-134">Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.TextWriterTraceListener" /> utilizando la secuencia como destinatario de los resultados de la traza y la depuración.</span><span class="sxs-lookup"><span data-stu-id="19072-134">Initializes a new instance of the <see cref="T:System.Diagnostics.TextWriterTraceListener" /> class, using the stream as the recipient of the debugging and tracing output.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19072-135">Este constructor inicializa la <xref:System.Diagnostics.TraceListener.Name%2A> propiedad en una cadena vacía ("").</span><span class="sxs-lookup"><span data-stu-id="19072-135">This constructor initializes the <xref:System.Diagnostics.TraceListener.Name%2A> property to an empty string ("").</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19072-136">En el ejemplo de código siguiente se crea un <xref:System.Diagnostics.TextWriterTraceListener> utilizando el <xref:System.Diagnostics.TextWriterTraceListener.%23ctor%28System.IO.Stream%29> constructor y lo agrega a la <xref:System.Diagnostics.TraceListenerCollection>.</span><span class="sxs-lookup"><span data-stu-id="19072-136">The following code example creates a <xref:System.Diagnostics.TextWriterTraceListener> using the <xref:System.Diagnostics.TextWriterTraceListener.%23ctor%28System.IO.Stream%29> constructor and adds it to the <xref:System.Diagnostics.TraceListenerCollection>.</span></span> <span data-ttu-id="19072-137">En el ejemplo, a continuación, escribe dos mensajes a este <xref:System.Diagnostics.TextWriterTraceListener>y escribe un mensaje a todos los <xref:System.Diagnostics.TraceListener> objetos en el <xref:System.Diagnostics.TraceListenerCollection>.</span><span class="sxs-lookup"><span data-stu-id="19072-137">The example then writes two messages to this <xref:System.Diagnostics.TextWriterTraceListener>, and writes a message to all <xref:System.Diagnostics.TraceListener> objects in the <xref:System.Diagnostics.TraceListenerCollection>.</span></span> <span data-ttu-id="19072-138">Por último, vacía y cierra el <xref:System.Diagnostics.TextWriterTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="19072-138">Finally, it flushes and closes the <xref:System.Diagnostics.TextWriterTraceListener>.</span></span>  
  
 [!code-csharp[System.Diagnostics.TextWriterTraceListener.Ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TextWriterTraceListener.Ctor/CS/twtlconstream.cs#1)]
 [!code-vb[System.Diagnostics.TextWriterTraceListener.Ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TextWriterTraceListener.Ctor/VB/twtlconstream.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="19072-139">El flujo es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="19072-139">The stream is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextWriterTraceListener (System.IO.TextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (writer As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextWriterTraceListener(System::IO::TextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.TextWriterTraceListener : System.IO.TextWriter -&gt; System.Diagnostics.TextWriterTraceListener" Usage="new System.Diagnostics.TextWriterTraceListener writer" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="19072-140">Objeto <see cref="T:System.IO.TextWriter" /> que recibe los resultados de <see cref="T:System.Diagnostics.TextWriterTraceListener" />.</span><span class="sxs-lookup"><span data-stu-id="19072-140">A <see cref="T:System.IO.TextWriter" /> that receives the output from the <see cref="T:System.Diagnostics.TextWriterTraceListener" />.</span></span></param>
        <summary><span data-ttu-id="19072-141">Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.TextWriterTraceListener" /> utilizando el escritor especificado como destinatario de los resultados de la traza o la depuración.</span><span class="sxs-lookup"><span data-stu-id="19072-141">Initializes a new instance of the <see cref="T:System.Diagnostics.TextWriterTraceListener" /> class using the specified writer as recipient of the tracing or debugging output.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19072-142">Este constructor inicializa la <xref:System.Diagnostics.TraceListener.Name%2A> propiedad en una cadena vacía ("").</span><span class="sxs-lookup"><span data-stu-id="19072-142">This constructor initializes the <xref:System.Diagnostics.TraceListener.Name%2A> property to an empty string ("").</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19072-143">En el ejemplo de código siguiente se crea un <xref:System.Diagnostics.TextWriterTraceListener> utilizando el <xref:System.Diagnostics.TextWriterTraceListener.%23ctor%28System.IO.TextWriter%29> constructor.</span><span class="sxs-lookup"><span data-stu-id="19072-143">The following code example creates a <xref:System.Diagnostics.TextWriterTraceListener> using the <xref:System.Diagnostics.TextWriterTraceListener.%23ctor%28System.IO.TextWriter%29> constructor.</span></span> <span data-ttu-id="19072-144">El ejemplo se crea un <xref:System.IO.StreamWriter>, a continuación, hace referencia a la <xref:System.IO.StreamWriter> cuando crea el <xref:System.Diagnostics.TextWriterTraceListener>, que, a continuación, agrega a la <xref:System.Diagnostics.TraceListenerCollection>.</span><span class="sxs-lookup"><span data-stu-id="19072-144">The example creates a <xref:System.IO.StreamWriter>, then references the <xref:System.IO.StreamWriter> when it creates the <xref:System.Diagnostics.TextWriterTraceListener>, which it then adds to the <xref:System.Diagnostics.TraceListenerCollection>.</span></span> <span data-ttu-id="19072-145">En el ejemplo se escribe un mensaje a todos los <xref:System.Diagnostics.TraceListener> objetos en el <xref:System.Diagnostics.TraceListenerCollection>, a continuación, cierra este <xref:System.Diagnostics.TextWriterTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="19072-145">The example writes a message to all <xref:System.Diagnostics.TraceListener> objects in the <xref:System.Diagnostics.TraceListenerCollection>, then closes this <xref:System.Diagnostics.TextWriterTraceListener>.</span></span>  
  
 [!code-cpp[Classic TextWriterTraceListener.Close Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.Close Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextWriterTraceListener.Close Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.Close Example/CS/source.cs#1)]
 [!code-vb[Classic TextWriterTraceListener.Close Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.Close Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="19072-146">El escritor es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="19072-146">The writer is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextWriterTraceListener (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TextWriterTraceListener.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextWriterTraceListener(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.TextWriterTraceListener : string -&gt; System.Diagnostics.TextWriterTraceListener" Usage="new System.Diagnostics.TextWriterTraceListener fileName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="19072-147">Nombre del archivo en el que <see cref="T:System.Diagnostics.TextWriterTraceListener" /> va a escribir.</span><span class="sxs-lookup"><span data-stu-id="19072-147">The name of the file the <see cref="T:System.Diagnostics.TextWriterTraceListener" /> writes to.</span></span></param>
        <summary><span data-ttu-id="19072-148">Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.TextWriterTraceListener" /> utilizando el archivo como destinatario de los resultados de la traza y la depuración.</span><span class="sxs-lookup"><span data-stu-id="19072-148">Initializes a new instance of the <see cref="T:System.Diagnostics.TextWriterTraceListener" /> class, using the file as the recipient of the debugging and tracing output.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19072-149">Este constructor inicializa la <xref:System.Diagnostics.TraceListener.Name%2A> propiedad en una cadena vacía ("").</span><span class="sxs-lookup"><span data-stu-id="19072-149">This constructor initializes the <xref:System.Diagnostics.TraceListener.Name%2A> property to an empty string ("").</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19072-150">En el ejemplo de código siguiente se crea un <xref:System.Diagnostics.TextWriterTraceListener> utilizando el <xref:System.Diagnostics.TextWriterTraceListener.%23ctor%28System.String%29> constructor, a continuación, lo agrega a la <xref:System.Diagnostics.TraceListenerCollection>.</span><span class="sxs-lookup"><span data-stu-id="19072-150">The following code example creates a <xref:System.Diagnostics.TextWriterTraceListener> using the <xref:System.Diagnostics.TextWriterTraceListener.%23ctor%28System.String%29> constructor, then adds it to the <xref:System.Diagnostics.TraceListenerCollection>.</span></span> <span data-ttu-id="19072-151">El ejemplo escribe dos mensajes a este <xref:System.Diagnostics.TextWriterTraceListener>, a continuación, escribe un mensaje a todos los <xref:System.Diagnostics.TraceListener> objetos en el <xref:System.Diagnostics.TraceListenerCollection>.</span><span class="sxs-lookup"><span data-stu-id="19072-151">The example writes two messages to this <xref:System.Diagnostics.TextWriterTraceListener>, then writes a message to all <xref:System.Diagnostics.TraceListener> objects in the <xref:System.Diagnostics.TraceListenerCollection>.</span></span> <span data-ttu-id="19072-152">Por último, vacía y cierra el <xref:System.Diagnostics.TextWriterTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="19072-152">Finally, it flushes and closes the <xref:System.Diagnostics.TextWriterTraceListener>.</span></span>  
  
 [!code-csharp[System.Diagnostics.TextWriterTraceListener.Ctor#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TextWriterTraceListener.Ctor/CS/twtlconstring.cs#3)]
 [!code-vb[System.Diagnostics.TextWriterTraceListener.Ctor#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TextWriterTraceListener.Ctor/VB/twtlconstring.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="19072-153">El archivo es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="19072-153">The file is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextWriterTraceListener (System.IO.Stream stream, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.Stream,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextWriterTraceListener(System::IO::Stream ^ stream, System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.TextWriterTraceListener : System.IO.Stream * string -&gt; System.Diagnostics.TextWriterTraceListener" Usage="new System.Diagnostics.TextWriterTraceListener (stream, name)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="19072-154">Objeto <see cref="T:System.IO.Stream" /> que representa la secuencia en la que <see cref="T:System.Diagnostics.TextWriterTraceListener" /> escribe.</span><span class="sxs-lookup"><span data-stu-id="19072-154">A <see cref="T:System.IO.Stream" /> that represents the stream the <see cref="T:System.Diagnostics.TextWriterTraceListener" /> writes to.</span></span></param>
        <param name="name"><span data-ttu-id="19072-155">Nombre de la nueva instancia.</span><span class="sxs-lookup"><span data-stu-id="19072-155">The name of the new instance.</span></span></param>
        <summary><span data-ttu-id="19072-156">Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.TextWriterTraceListener" /> con el nombre especificado, utilizando la secuencia como destinatario de los resultados de la traza y la depuración.</span><span class="sxs-lookup"><span data-stu-id="19072-156">Initializes a new instance of the <see cref="T:System.Diagnostics.TextWriterTraceListener" /> class with the specified name, using the stream as the recipient of the debugging and tracing output.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19072-157">Este constructor inicializa la <xref:System.Diagnostics.TraceListener.Name%2A> propiedad a la `name` parámetro o en una cadena vacía (""), si la `name` parámetro es `null`.</span><span class="sxs-lookup"><span data-stu-id="19072-157">This constructor initializes the <xref:System.Diagnostics.TraceListener.Name%2A> property to the `name` parameter or to an empty string (""), if the `name` parameter is `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19072-158">En el ejemplo de código siguiente se crea un <xref:System.Diagnostics.TextWriterTraceListener> utilizando el <xref:System.Diagnostics.TextWriterTraceListener.%23ctor%28System.IO.Stream%2CSystem.String%29> constructor y lo agrega a la <xref:System.Diagnostics.TraceListenerCollection>.</span><span class="sxs-lookup"><span data-stu-id="19072-158">The following code example creates a <xref:System.Diagnostics.TextWriterTraceListener> using the <xref:System.Diagnostics.TextWriterTraceListener.%23ctor%28System.IO.Stream%2CSystem.String%29> constructor and adds it to the <xref:System.Diagnostics.TraceListenerCollection>.</span></span> <span data-ttu-id="19072-159">En el ejemplo, a continuación, escribe dos mensajes a este <xref:System.Diagnostics.TextWriterTraceListener> y escribe un mensaje a todos los <xref:System.Diagnostics.TraceListener> objetos en el <xref:System.Diagnostics.TraceListenerCollection>.</span><span class="sxs-lookup"><span data-stu-id="19072-159">The example then writes two messages to this <xref:System.Diagnostics.TextWriterTraceListener> and writes a message to all <xref:System.Diagnostics.TraceListener> objects in the <xref:System.Diagnostics.TraceListenerCollection>.</span></span> <span data-ttu-id="19072-160">Por último, vacía y cierra el <xref:System.Diagnostics.TextWriterTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="19072-160">Finally, it flushes and closes the <xref:System.Diagnostics.TextWriterTraceListener>.</span></span>  
  
 [!code-csharp[System.Diagnostics.TextWriterTraceListener.Ctor#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TextWriterTraceListener.Ctor/CS/twtlconstreamname.cs#2)]
 [!code-vb[System.Diagnostics.TextWriterTraceListener.Ctor#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TextWriterTraceListener.Ctor/VB/twtlconstreamname.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="19072-161">El flujo es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="19072-161">The stream is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextWriterTraceListener (System.IO.TextWriter writer, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextWriter writer, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.TextWriter,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (writer As TextWriter, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextWriterTraceListener(System::IO::TextWriter ^ writer, System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.TextWriterTraceListener : System.IO.TextWriter * string -&gt; System.Diagnostics.TextWriterTraceListener" Usage="new System.Diagnostics.TextWriterTraceListener (writer, name)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="19072-162">Objeto <see cref="T:System.IO.TextWriter" /> que recibe los resultados de <see cref="T:System.Diagnostics.TextWriterTraceListener" />.</span><span class="sxs-lookup"><span data-stu-id="19072-162">A <see cref="T:System.IO.TextWriter" /> that receives the output from the <see cref="T:System.Diagnostics.TextWriterTraceListener" />.</span></span></param>
        <param name="name"><span data-ttu-id="19072-163">Nombre de la nueva instancia.</span><span class="sxs-lookup"><span data-stu-id="19072-163">The name of the new instance.</span></span></param>
        <summary><span data-ttu-id="19072-164">Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.TextWriterTraceListener" /> con el nombre especificado, utilizando el escritor como destinatario de los resultados de la traza o la depuración.</span><span class="sxs-lookup"><span data-stu-id="19072-164">Initializes a new instance of the <see cref="T:System.Diagnostics.TextWriterTraceListener" /> class with the specified name, using the specified writer as recipient of the tracing or debugging output.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="19072-165">En el ejemplo de código siguiente se crea un <xref:System.Diagnostics.TextWriterTraceListener> utilizando el <xref:System.Diagnostics.TextWriterTraceListener.%23ctor%28System.IO.TextWriter%2CSystem.String%29> constructor.</span><span class="sxs-lookup"><span data-stu-id="19072-165">The following code example creates a <xref:System.Diagnostics.TextWriterTraceListener> using the <xref:System.Diagnostics.TextWriterTraceListener.%23ctor%28System.IO.TextWriter%2CSystem.String%29> constructor.</span></span> <span data-ttu-id="19072-166">El ejemplo se crea un <xref:System.IO.StreamWriter>, a continuación, hace referencia a la <xref:System.IO.StreamWriter> cuando crea el <xref:System.Diagnostics.TextWriterTraceListener>, que, a continuación, agrega a la <xref:System.Diagnostics.TraceListenerCollection>.</span><span class="sxs-lookup"><span data-stu-id="19072-166">The example creates a <xref:System.IO.StreamWriter>, then references the <xref:System.IO.StreamWriter> when it creates the <xref:System.Diagnostics.TextWriterTraceListener>, which it then adds to the <xref:System.Diagnostics.TraceListenerCollection>.</span></span> <span data-ttu-id="19072-167">El ejemplo escribe dos mensajes a este <xref:System.Diagnostics.TextWriterTraceListener>, a continuación, escribe un mensaje a todos los <xref:System.Diagnostics.TraceListener> objetos en el <xref:System.Diagnostics.TraceListenerCollection>.</span><span class="sxs-lookup"><span data-stu-id="19072-167">The example writes two messages to this <xref:System.Diagnostics.TextWriterTraceListener>, then writes a message to all <xref:System.Diagnostics.TraceListener> objects in the <xref:System.Diagnostics.TraceListenerCollection>.</span></span> <span data-ttu-id="19072-168">Por último, vacía y cierra el <xref:System.Diagnostics.TextWriterTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="19072-168">Finally, it flushes and closes the <xref:System.Diagnostics.TextWriterTraceListener>.</span></span>  
  
 [!code-csharp[System.Diagnostics.TextWriterTraceListener.Ctor#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TextWriterTraceListener.Ctor/CS/twtlconwritername.cs#5)]
 [!code-vb[System.Diagnostics.TextWriterTraceListener.Ctor#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TextWriterTraceListener.Ctor/VB/twtlconwritername.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="19072-169">El escritor es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="19072-169">The writer is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextWriterTraceListener (string fileName, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TextWriterTraceListener.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextWriterTraceListener(System::String ^ fileName, System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.TextWriterTraceListener : string * string -&gt; System.Diagnostics.TextWriterTraceListener" Usage="new System.Diagnostics.TextWriterTraceListener (fileName, name)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="19072-170">Nombre del archivo en el que <see cref="T:System.Diagnostics.TextWriterTraceListener" /> va a escribir.</span><span class="sxs-lookup"><span data-stu-id="19072-170">The name of the file the <see cref="T:System.Diagnostics.TextWriterTraceListener" /> writes to.</span></span></param>
        <param name="name"><span data-ttu-id="19072-171">Nombre de la nueva instancia.</span><span class="sxs-lookup"><span data-stu-id="19072-171">The name of the new instance.</span></span></param>
        <summary><span data-ttu-id="19072-172">Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.TextWriterTraceListener" /> con el nombre especificado, utilizando el archivo como destinatario de los resultados de la traza y la depuración.</span><span class="sxs-lookup"><span data-stu-id="19072-172">Initializes a new instance of the <see cref="T:System.Diagnostics.TextWriterTraceListener" /> class with the specified name, using the file as the recipient of the debugging and tracing output.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19072-173">Este constructor inicializa la <xref:System.Diagnostics.TraceListener.Name%2A> propiedad a la `name` parámetro o en una cadena vacía (""), si la `name` parámetro es `null`.</span><span class="sxs-lookup"><span data-stu-id="19072-173">This constructor initializes the <xref:System.Diagnostics.TraceListener.Name%2A> property to the `name` parameter or to an empty string (""), if the `name` parameter is `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19072-174">En el ejemplo de código siguiente se crea un <xref:System.Diagnostics.TextWriterTraceListener> utilizando el <xref:System.Diagnostics.TextWriterTraceListener.%23ctor%28System.String%2CSystem.String%29> constructor, a continuación, lo agrega a la <xref:System.Diagnostics.TraceListenerCollection>.</span><span class="sxs-lookup"><span data-stu-id="19072-174">The following code example creates a <xref:System.Diagnostics.TextWriterTraceListener> using the <xref:System.Diagnostics.TextWriterTraceListener.%23ctor%28System.String%2CSystem.String%29> constructor, then adds it to the <xref:System.Diagnostics.TraceListenerCollection>.</span></span> <span data-ttu-id="19072-175">El ejemplo escribe dos mensajes a este <xref:System.Diagnostics.TextWriterTraceListener>, a continuación, escribe un mensaje a todos los <xref:System.Diagnostics.TraceListener> objetos en el <xref:System.Diagnostics.TraceListenerCollection>.</span><span class="sxs-lookup"><span data-stu-id="19072-175">The example writes two messages to this <xref:System.Diagnostics.TextWriterTraceListener>, then writes a message to all <xref:System.Diagnostics.TraceListener> objects in the <xref:System.Diagnostics.TraceListenerCollection>.</span></span> <span data-ttu-id="19072-176">Por último, vacía y cierra el <xref:System.Diagnostics.TextWriterTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="19072-176">Finally, it flushes and closes the <xref:System.Diagnostics.TextWriterTraceListener>.</span></span>  
  
 [!code-csharp[System.Diagnostics.TextWriterTraceListener.Ctor#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TextWriterTraceListener.Ctor/CS/twtlconstringname.cs#4)]
 [!code-vb[System.Diagnostics.TextWriterTraceListener.Ctor#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TextWriterTraceListener.Ctor/VB/twtlconstringname.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="19072-177">El flujo es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="19072-177">The stream is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TextWriterTraceListener.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="textWriterTraceListener.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="19072-178">Cierra <see cref="P:System.Diagnostics.TextWriterTraceListener.Writer" /> para que ya no se reciba ningún resultado de la traza o la depuración.</span><span class="sxs-lookup"><span data-stu-id="19072-178">Closes the <see cref="P:System.Diagnostics.TextWriterTraceListener.Writer" /> so that it no longer receives tracing or debugging output.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19072-179">Una llamada a un <xref:System.Diagnostics.TextWriterTraceListener.Write%2A> o <xref:System.Diagnostics.TextWriterTraceListener.WriteLine%2A> método después de llamar a <xref:System.Diagnostics.TextWriterTraceListener.Close%2A> automáticamente vuelve a abrir la secuencia.</span><span class="sxs-lookup"><span data-stu-id="19072-179">Calling a <xref:System.Diagnostics.TextWriterTraceListener.Write%2A> or <xref:System.Diagnostics.TextWriterTraceListener.WriteLine%2A> method after calling <xref:System.Diagnostics.TextWriterTraceListener.Close%2A> automatically reopens the stream.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19072-180">El ejemplo siguiente implementa un <xref:System.Diagnostics.TextWriterTraceListener> denominado `myTextListener`, que usa un <xref:System.IO.StreamWriter> llamado `myOutputWriter` para escribir en un archivo denominado `TestFile.txt`.</span><span class="sxs-lookup"><span data-stu-id="19072-180">The following example implements a <xref:System.Diagnostics.TextWriterTraceListener> named `myTextListener`, which uses a <xref:System.IO.StreamWriter> called `myOutputWriter` to write to a file named `TestFile.txt`.</span></span> <span data-ttu-id="19072-181">En el ejemplo se crea el sistema de escritura de archivo, la secuencia y el texto, escribe una línea de texto en el archivo y, a continuación, vacía y cierra la secuencia.</span><span class="sxs-lookup"><span data-stu-id="19072-181">The example creates the file, stream, and text writer, writes one line of text to the file, and then flushes and closes the stream.</span></span>  
  
 [!code-cpp[Classic TextWriterTraceListener.Close Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.Close Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextWriterTraceListener.Close Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.Close Example/CS/source.cs#1)]
 [!code-vb[Classic TextWriterTraceListener.Close Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.Close Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TextWriterTraceListener.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="textWriterTraceListener.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="19072-182">Es <see langword="true" /> para liberar los recursos administrados; si es <see langword="false" />, <see cref="M:System.Diagnostics.TextWriterTraceListener.Dispose(System.Boolean)" /> no tiene efecto.</span><span class="sxs-lookup"><span data-stu-id="19072-182"><see langword="true" /> to release managed resources; if <see langword="false" />, <see cref="M:System.Diagnostics.TextWriterTraceListener.Dispose(System.Boolean)" /> has no effect.</span></span></param>
        <summary><span data-ttu-id="19072-183">Desecha este objeto <see cref="T:System.Diagnostics.TextWriterTraceListener" />.</span><span class="sxs-lookup"><span data-stu-id="19072-183">Disposes this <see cref="T:System.Diagnostics.TextWriterTraceListener" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19072-184">Use la <xref:System.Diagnostics.TextWriterTraceListener.Close%2A> método de la <xref:System.Diagnostics.TextWriterTraceListener> clase para liberar los recursos administrados de un <xref:System.Diagnostics.TextWriterTraceListener> objeto.</span><span class="sxs-lookup"><span data-stu-id="19072-184">Use the <xref:System.Diagnostics.TextWriterTraceListener.Close%2A> method of the <xref:System.Diagnostics.TextWriterTraceListener> class to release the managed resources of a <xref:System.Diagnostics.TextWriterTraceListener> object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TextWriterTraceListener.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberSignature Language="F#" Value="override this.Flush : unit -&gt; unit" Usage="textWriterTraceListener.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="19072-185">Vacía el búfer de resultados de la propiedad <see cref="P:System.Diagnostics.TextWriterTraceListener.Writer" />.</span><span class="sxs-lookup"><span data-stu-id="19072-185">Flushes the output buffer for the <see cref="P:System.Diagnostics.TextWriterTraceListener.Writer" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="19072-186">El ejemplo siguiente implementa un <xref:System.Diagnostics.TextWriterTraceListener> denominado `myTextListener`, que usa un <xref:System.IO.StreamWriter> llamado `myOutputWriter` para escribir en un archivo denominado `TestFile.txt`.</span><span class="sxs-lookup"><span data-stu-id="19072-186">The following example implements a <xref:System.Diagnostics.TextWriterTraceListener> named `myTextListener`, which uses a <xref:System.IO.StreamWriter> called `myOutputWriter` to write to a file named `TestFile.txt`.</span></span> <span data-ttu-id="19072-187">En el ejemplo se crea el sistema de escritura de archivo, la secuencia y el texto, escribe una línea de texto en el archivo y, a continuación, vacía y cierra la secuencia.</span><span class="sxs-lookup"><span data-stu-id="19072-187">The example creates the file, stream, and text writer, writes one line of text to the file, and then flushes and closes the stream.</span></span>  
  
 [!code-cpp[Classic TextWriterTraceListener.Close Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.Close Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextWriterTraceListener.Close Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.Close Example/CS/source.cs#1)]
 [!code-vb[Classic TextWriterTraceListener.Close Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.Close Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TextWriterTraceListener.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::String ^ message);" />
      <MemberSignature Language="F#" Value="override this.Write : string -&gt; unit" Usage="textWriterTraceListener.Write message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="19072-188">Mensaje que se va a escribir.</span><span class="sxs-lookup"><span data-stu-id="19072-188">A message to write.</span></span></param>
        <summary><span data-ttu-id="19072-189">Escribe un mensaje en la propiedad <see cref="P:System.Diagnostics.TextWriterTraceListener.Writer" /> de esta instancia.</span><span class="sxs-lookup"><span data-stu-id="19072-189">Writes a message to this instance's <see cref="P:System.Diagnostics.TextWriterTraceListener.Writer" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="19072-190">El ejemplo siguiente implementa un <xref:System.Diagnostics.TextWriterTraceListener> denominado `myWriter` para escribir en la pantalla de la consola.</span><span class="sxs-lookup"><span data-stu-id="19072-190">The following example implements a <xref:System.Diagnostics.TextWriterTraceListener> named `myWriter` to write to the console screen.</span></span> <span data-ttu-id="19072-191">El ejemplo escribe dos líneas en la pantalla de la consola.</span><span class="sxs-lookup"><span data-stu-id="19072-191">The example writes two lines to the console screen.</span></span> <span data-ttu-id="19072-192">Tenga en cuenta que la segunda escritura aparece en la misma línea que la primera escritura.</span><span class="sxs-lookup"><span data-stu-id="19072-192">Note the second write appears on the same line as the first write.</span></span> <span data-ttu-id="19072-193">En el ejemplo, a continuación, vacía y cierra la secuencia.</span><span class="sxs-lookup"><span data-stu-id="19072-193">The example then flushes and closes the stream.</span></span>  
  
 [!code-cpp[Classic TextWriterTraceListener.Write Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.Write Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextWriterTraceListener.Write Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.Write Example/CS/source.cs#1)]
 [!code-vb[Classic TextWriterTraceListener.Write Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.Write Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TextWriterTraceListener.WriteLine(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::String ^ message);" />
      <MemberSignature Language="F#" Value="override this.WriteLine : string -&gt; unit" Usage="textWriterTraceListener.WriteLine message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="19072-194">Mensaje que se va a escribir.</span><span class="sxs-lookup"><span data-stu-id="19072-194">A message to write.</span></span></param>
        <summary><span data-ttu-id="19072-195">Escribe en la propiedad <see cref="P:System.Diagnostics.TextWriterTraceListener.Writer" /> de esta instancia un mensaje seguido de un terminador de línea.</span><span class="sxs-lookup"><span data-stu-id="19072-195">Writes a message to this instance's <see cref="P:System.Diagnostics.TextWriterTraceListener.Writer" /> followed by a line terminator.</span></span> <span data-ttu-id="19072-196">El terminador de línea predeterminado corresponde a un retorno de carro seguido de un avance de línea (\r\n).</span><span class="sxs-lookup"><span data-stu-id="19072-196">The default line terminator is a carriage return followed by a line feed (\r\n).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="19072-197">El ejemplo siguiente implementa un <xref:System.Diagnostics.TextWriterTraceListener> denominado `myWriter` para escribir en la pantalla de la consola.</span><span class="sxs-lookup"><span data-stu-id="19072-197">The following example implements a <xref:System.Diagnostics.TextWriterTraceListener> named `myWriter` to write to the console screen.</span></span> <span data-ttu-id="19072-198">El ejemplo escribe dos líneas en la pantalla de la consola.</span><span class="sxs-lookup"><span data-stu-id="19072-198">The example writes two lines to the console screen.</span></span> <span data-ttu-id="19072-199">Tenga en cuenta que la segunda escritura aparece en la misma línea que la primera escritura.</span><span class="sxs-lookup"><span data-stu-id="19072-199">Note the second write appears on the same line as the first write.</span></span> <span data-ttu-id="19072-200">En el ejemplo, a continuación, vacía y cierra la secuencia.</span><span class="sxs-lookup"><span data-stu-id="19072-200">The example then flushes and closes the stream.</span></span>  
  
 [!code-cpp[Classic TextWriterTraceListener.WriteLine Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.WriteLine Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextWriterTraceListener.WriteLine Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.WriteLine Example/CS/source.cs#1)]
 [!code-vb[Classic TextWriterTraceListener.WriteLine Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.WriteLine Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="Writer">
      <MemberSignature Language="C#" Value="public System.IO.TextWriter Writer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.TextWriter Writer" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TextWriterTraceListener.Writer" />
      <MemberSignature Language="VB.NET" Value="Public Property Writer As TextWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::TextWriter ^ Writer { System::IO::TextWriter ^ get(); void set(System::IO::TextWriter ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Writer : System.IO.TextWriter with get, set" Usage="System.Diagnostics.TextWriterTraceListener.Writer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.TextWriter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="19072-201">Obtiene o establece el escritor de texto que recibe los resultados de la traza o la depuración.</span><span class="sxs-lookup"><span data-stu-id="19072-201">Gets or sets the text writer that receives the tracing or debugging output.</span></span></summary>
        <value><span data-ttu-id="19072-202">Objeto <see cref="T:System.IO.TextWriter" /> que representa el escritor que recibe los resultados de la traza o la depuración.</span><span class="sxs-lookup"><span data-stu-id="19072-202">A <see cref="T:System.IO.TextWriter" /> that represents the writer that receives the tracing or debugging output.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="19072-203">En el ejemplo siguiente se crea un <xref:System.Diagnostics.TextWriterTraceListener> que escribe en la pantalla de la consola.</span><span class="sxs-lookup"><span data-stu-id="19072-203">The following example creates a <xref:System.Diagnostics.TextWriterTraceListener> that writes to the console screen.</span></span> <span data-ttu-id="19072-204">A continuación, el código agrega el nuevo agente de escucha de seguimiento para el <xref:System.Diagnostics.Trace.Listeners%2A> en la clase trace.</span><span class="sxs-lookup"><span data-stu-id="19072-204">Then the code adds the new trace listener to the <xref:System.Diagnostics.Trace.Listeners%2A> in the trace class.</span></span>  
  
 [!code-cpp[Classic TextWriterTraceListener.Writer Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.Writer Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextWriterTraceListener.Writer Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.Writer Example/CS/source.cs#1)]
 [!code-vb[Classic TextWriterTraceListener.Writer Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TextWriterTraceListener.Writer Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
  </Members>
</Type>
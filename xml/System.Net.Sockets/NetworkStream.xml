<Type Name="NetworkStream" FullName="System.Net.Sockets.NetworkStream">
  <Metadata><Meta Name="ms.openlocfilehash" Value="60e22b829f0aa811f1405bd2e0edd58227c7c383" /><Meta Name="ms.sourcegitcommit" Value="8e213bb5e6801f6e29861ba72664978ad00e34fa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="02/18/2019" /><Meta Name="ms.locfileid" Value="56384808" /></Metadata><TypeSignature Language="C#" Value="public class NetworkStream : System.IO.Stream" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NetworkStream extends System.IO.Stream" />
  <TypeSignature Language="DocId" Value="T:System.Net.Sockets.NetworkStream" />
  <TypeSignature Language="VB.NET" Value="Public Class NetworkStream&#xA;Inherits Stream" />
  <TypeSignature Language="C++ CLI" Value="public ref class NetworkStream : System::IO::Stream" />
  <TypeSignature Language="F#" Value="type NetworkStream = class&#xA;    inherit Stream" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Sockets</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IO.Stream</BaseTypeName>
  </Base>
  <Interfaces></Interfaces>
  <Docs>
    <summary><span data-ttu-id="b751b-101">Proporciona el flujo de datos subyacente para el acceso a través de la red.</span><span class="sxs-lookup"><span data-stu-id="b751b-101">Provides the underlying stream of data for network access.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b751b-102">El <xref:System.Net.Sockets.NetworkStream> clase proporciona métodos para enviar y recibir datos a través de <xref:System.Net.Sockets.SocketType.Stream> sockets en modo de bloqueo.</span><span class="sxs-lookup"><span data-stu-id="b751b-102">The <xref:System.Net.Sockets.NetworkStream> class provides methods for sending and receiving data over <xref:System.Net.Sockets.SocketType.Stream> sockets in blocking mode.</span></span> <span data-ttu-id="b751b-103">Para obtener más información sobre cómo bloquear o sin bloqueo <xref:System.Net.Sockets.Socket>s, consulte [con un Socket de cliente asincrónico](~/docs/framework/network-programming/using-an-asynchronous-client-socket.md).</span><span class="sxs-lookup"><span data-stu-id="b751b-103">For more information about blocking versus nonblocking <xref:System.Net.Sockets.Socket>s, see [Using an Asynchronous Client Socket](~/docs/framework/network-programming/using-an-asynchronous-client-socket.md).</span></span> <span data-ttu-id="b751b-104">Puede usar el <xref:System.Net.Sockets.NetworkStream> clase para la transferencia de datos sincrónica y asincrónica.</span><span class="sxs-lookup"><span data-stu-id="b751b-104">You can use the <xref:System.Net.Sockets.NetworkStream> class for both synchronous and asynchronous data transfer.</span></span> <span data-ttu-id="b751b-105">Para obtener más información acerca de la comunicación sincrónica y asincrónica, vea [Sockets](~/docs/framework/network-programming/sockets.md).</span><span class="sxs-lookup"><span data-stu-id="b751b-105">For more information about synchronous and asynchronous communication, see [Sockets](~/docs/framework/network-programming/sockets.md).</span></span>  
  
 <span data-ttu-id="b751b-106">Para crear un <xref:System.Net.Sockets.NetworkStream>, debe proporcionar un conectado <xref:System.Net.Sockets.Socket>.</span><span class="sxs-lookup"><span data-stu-id="b751b-106">To create a <xref:System.Net.Sockets.NetworkStream>, you must provide a connected <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="b751b-107">También puede especificar qué <xref:System.IO.FileAccess> permiso la <xref:System.Net.Sockets.NetworkStream> tiene sobre proporcionado <xref:System.Net.Sockets.Socket>.</span><span class="sxs-lookup"><span data-stu-id="b751b-107">You can also specify what <xref:System.IO.FileAccess> permission the <xref:System.Net.Sockets.NetworkStream> has over the provided <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="b751b-108">De forma predeterminada, cerrar la <xref:System.Net.Sockets.NetworkStream> no cierra proporcionado <xref:System.Net.Sockets.Socket>.</span><span class="sxs-lookup"><span data-stu-id="b751b-108">By default, closing the <xref:System.Net.Sockets.NetworkStream> does not close the provided <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="b751b-109">Si desea que el <xref:System.Net.Sockets.NetworkStream> tenga permiso para cerrar el proporcionado <xref:System.Net.Sockets.Socket>, debe especificar `true` para el valor de la `ownsSocket` parámetro.</span><span class="sxs-lookup"><span data-stu-id="b751b-109">If you want the <xref:System.Net.Sockets.NetworkStream> to have permission to close the provided <xref:System.Net.Sockets.Socket>, you must specify `true` for the value of the `ownsSocket` parameter.</span></span>  
  
 <span data-ttu-id="b751b-110">Use la <xref:System.Net.Sockets.NetworkStream.Write%2A> y <xref:System.Net.Sockets.NetworkStream.Read%2A> métodos para sencilla con un solo subproceso de E/S de bloqueo sincrónico.</span><span class="sxs-lookup"><span data-stu-id="b751b-110">Use the <xref:System.Net.Sockets.NetworkStream.Write%2A> and <xref:System.Net.Sockets.NetworkStream.Read%2A> methods for simple single thread synchronous blocking I/O.</span></span> <span data-ttu-id="b751b-111">Si desea procesar la E/S mediante subprocesos independientes, considere el uso de la <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> y <xref:System.Net.Sockets.NetworkStream.EndWrite%2A> métodos, o el <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> y <xref:System.Net.Sockets.NetworkStream.EndRead%2A> métodos para la comunicación.</span><span class="sxs-lookup"><span data-stu-id="b751b-111">If you want to process your I/O using separate threads, consider using the <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> and <xref:System.Net.Sockets.NetworkStream.EndWrite%2A> methods, or the <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> and <xref:System.Net.Sockets.NetworkStream.EndRead%2A> methods for communication.</span></span>  
  
 <span data-ttu-id="b751b-112">El <xref:System.Net.Sockets.NetworkStream> no admite el acceso aleatorio en el flujo de datos de la red.</span><span class="sxs-lookup"><span data-stu-id="b751b-112">The <xref:System.Net.Sockets.NetworkStream> does not support random access to the network data stream.</span></span> <span data-ttu-id="b751b-113">El valor de la <xref:System.Net.Sockets.NetworkStream.CanSeek%2A> propiedad, que indica si la secuencia admite búsquedas, es siempre `false`; cuando se lee el <xref:System.Net.Sockets.NetworkStream.Position%2A> propiedad, leer el <xref:System.Net.Sockets.NetworkStream.Length%2A> propiedad o llamar a la <xref:System.Net.Sockets.NetworkStream.Seek%2A> método producirá una <xref:System.NotSupportedException>.</span><span class="sxs-lookup"><span data-stu-id="b751b-113">The value of the <xref:System.Net.Sockets.NetworkStream.CanSeek%2A> property, which indicates whether the stream supports seeking, is always `false`; reading the <xref:System.Net.Sockets.NetworkStream.Position%2A> property, reading the <xref:System.Net.Sockets.NetworkStream.Length%2A> property, or calling the <xref:System.Net.Sockets.NetworkStream.Seek%2A> method will throw a <xref:System.NotSupportedException>.</span></span>  
  
 <span data-ttu-id="b751b-114">Leer y escribir las operaciones se pueden realizar simultáneamente en una instancia de la <xref:System.Net.Sockets.NetworkStream> clase sin la necesidad de sincronización.</span><span class="sxs-lookup"><span data-stu-id="b751b-114">Read and write operations can be performed simultaneously on an instance of the <xref:System.Net.Sockets.NetworkStream> class without the need for synchronization.</span></span> <span data-ttu-id="b751b-115">Siempre y cuando hay un subproceso único para las operaciones de escritura y un subproceso único para las operaciones de lectura, no habrá ninguna interferencia cruzada entre la lectura y se requiere ninguna sincronización y subprocesos de escritura.</span><span class="sxs-lookup"><span data-stu-id="b751b-115">As long as there is one unique thread for the write operations and one unique thread for the read operations, there will be no cross-interference between read and write threads and no synchronization is required.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b751b-116">En el ejemplo de código siguiente se muestra cómo crear un <xref:System.Net.Sockets.NetworkStream> desde un conectado <xref:System.Net.Sockets.SocketType.Stream> <xref:System.Net.Sockets.Socket> y realizar E/S de bloqueo sincrónico básica.</span><span class="sxs-lookup"><span data-stu-id="b751b-116">The following code example demonstrates how to create a <xref:System.Net.Sockets.NetworkStream> from a connected <xref:System.Net.Sockets.SocketType.Stream><xref:System.Net.Sockets.Socket> and perform basic synchronous blocking I/O.</span></span>  
  
 [!code-cpp[NetworkStream_Synch_SendAndReceive#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CPP/source.cpp#2)]
 [!code-csharp[NetworkStream_Synch_SendAndReceive#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CS/source.cs#2)]
 [!code-vb[NetworkStream_Synch_SendAndReceive#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/VB/source.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Net.Sockets.TcpClient" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b751b-117">Crea una nueva instancia de la clase <see cref="T:System.Net.Sockets.NetworkStream" />.</span><span class="sxs-lookup"><span data-stu-id="b751b-117">Creates a new instance of the <see cref="T:System.Net.Sockets.NetworkStream" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NetworkStream (System.Net.Sockets.Socket socket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.Sockets.Socket socket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.#ctor(System.Net.Sockets.Socket)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NetworkStream(System::Net::Sockets::Socket ^ socket);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.NetworkStream : System.Net.Sockets.Socket -&gt; System.Net.Sockets.NetworkStream" Usage="new System.Net.Sockets.NetworkStream socket" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="socket" Type="System.Net.Sockets.Socket" />
      </Parameters>
      <Docs>
        <param name="socket"><span data-ttu-id="b751b-118">El elemento <see cref="T:System.Net.Sockets.Socket" /> que usará <see cref="T:System.Net.Sockets.NetworkStream" /> para enviar y recibir datos.</span><span class="sxs-lookup"><span data-stu-id="b751b-118">The <see cref="T:System.Net.Sockets.Socket" /> that the <see cref="T:System.Net.Sockets.NetworkStream" /> will use to send and receive data.</span></span></param>
        <summary><span data-ttu-id="b751b-119">Crea una nueva instancia de la clase <see cref="T:System.Net.Sockets.NetworkStream" /> para el elemento <see cref="T:System.Net.Sockets.Socket" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="b751b-119">Creates a new instance of the <see cref="T:System.Net.Sockets.NetworkStream" /> class for the specified <see cref="T:System.Net.Sockets.Socket" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b751b-120">El <xref:System.Net.Sockets.NetworkStream> se crea con acceso de lectura/escritura a los especificados <xref:System.Net.Sockets.Socket>.</span><span class="sxs-lookup"><span data-stu-id="b751b-120">The <xref:System.Net.Sockets.NetworkStream> is created with read/write access to the specified <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="b751b-121">El <xref:System.Net.Sockets.NetworkStream> no posee subyacente <xref:System.Net.Sockets.Socket>, por lo que si se llama el <xref:System.Net.Sockets.NetworkStream.Close%2A> método no cierra la <xref:System.Net.Sockets.Socket>.</span><span class="sxs-lookup"><span data-stu-id="b751b-121">The <xref:System.Net.Sockets.NetworkStream> does not own the underlying <xref:System.Net.Sockets.Socket>, so calling the <xref:System.Net.Sockets.NetworkStream.Close%2A> method does not close the <xref:System.Net.Sockets.Socket>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b751b-122">El ejemplo de código siguiente muestra cómo crear un <xref:System.Net.Sockets.NetworkStream> con un <xref:System.Net.Sockets.Socket>.</span><span class="sxs-lookup"><span data-stu-id="b751b-122">The following code example illustrates how to create a <xref:System.Net.Sockets.NetworkStream> with a <xref:System.Net.Sockets.Socket>.</span></span>  
  
 [!code-cpp[NetworkStream_Synch_SendAndReceive#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CPP/source.cpp#2)]
 [!code-csharp[NetworkStream_Synch_SendAndReceive#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CS/source.cs#2)]
 [!code-vb[NetworkStream_Synch_SendAndReceive#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b751b-123">El parámetro <paramref name="socket" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b751b-123">The <paramref name="socket" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="b751b-124">El parámetro <paramref name="socket" /> no está conectado.</span><span class="sxs-lookup"><span data-stu-id="b751b-124">The <paramref name="socket" /> parameter is not connected.</span></span>  
  
<span data-ttu-id="b751b-125">O bien</span><span class="sxs-lookup"><span data-stu-id="b751b-125">-or-</span></span> 
<span data-ttu-id="b751b-126">La propiedad <see cref="P:System.Net.Sockets.Socket.SocketType" /> del parámetro <paramref name="socket" /> no es <see cref="F:System.Net.Sockets.SocketType.Stream" />.</span><span class="sxs-lookup"><span data-stu-id="b751b-126">The <see cref="P:System.Net.Sockets.Socket.SocketType" /> property of the <paramref name="socket" /> parameter is not <see cref="F:System.Net.Sockets.SocketType.Stream" />.</span></span>  
  
<span data-ttu-id="b751b-127">O bien</span><span class="sxs-lookup"><span data-stu-id="b751b-127">-or-</span></span> 
<span data-ttu-id="b751b-128">El parámetro <paramref name="socket" /> está en un estado de no bloqueo.</span><span class="sxs-lookup"><span data-stu-id="b751b-128">The <paramref name="socket" /> parameter is in a nonblocking state.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.NetworkStream.Close(System.Int32)" />
        <related type="Article" href="~/docs/framework/network-programming/using-streams-on-the-network.md"><span data-ttu-id="b751b-129">Usar flujos en la red</span><span class="sxs-lookup"><span data-stu-id="b751b-129">Using Streams on the Network</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NetworkStream (System.Net.Sockets.Socket socket, bool ownsSocket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.Sockets.Socket socket, bool ownsSocket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.#ctor(System.Net.Sockets.Socket,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NetworkStream(System::Net::Sockets::Socket ^ socket, bool ownsSocket);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.NetworkStream : System.Net.Sockets.Socket * bool -&gt; System.Net.Sockets.NetworkStream" Usage="new System.Net.Sockets.NetworkStream (socket, ownsSocket)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="socket" Type="System.Net.Sockets.Socket" />
        <Parameter Name="ownsSocket" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="socket"><span data-ttu-id="b751b-130">El elemento <see cref="T:System.Net.Sockets.Socket" /> que usará <see cref="T:System.Net.Sockets.NetworkStream" /> para enviar y recibir datos.</span><span class="sxs-lookup"><span data-stu-id="b751b-130">The <see cref="T:System.Net.Sockets.Socket" /> that the <see cref="T:System.Net.Sockets.NetworkStream" /> will use to send and receive data.</span></span></param>
        <param name="ownsSocket"><span data-ttu-id="b751b-131">Se establece en <see langword="true" /> para indicar que <see cref="T:System.Net.Sockets.NetworkStream" /> tomará posesión de <see cref="T:System.Net.Sockets.Socket" />; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b751b-131">Set to <see langword="true" /> to indicate that the <see cref="T:System.Net.Sockets.NetworkStream" /> will take ownership of the <see cref="T:System.Net.Sockets.Socket" />; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="b751b-132">Inicializa una nueva instancia de la clase <see cref="T:System.Net.Sockets.NetworkStream" /> para el elemento <see cref="T:System.Net.Sockets.Socket" /> especificado con la propiedad <see cref="T:System.Net.Sockets.Socket" /> especificada.</span><span class="sxs-lookup"><span data-stu-id="b751b-132">Initializes a new instance of the <see cref="T:System.Net.Sockets.NetworkStream" /> class for the specified <see cref="T:System.Net.Sockets.Socket" /> with the specified <see cref="T:System.Net.Sockets.Socket" /> ownership.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b751b-133">El <xref:System.Net.Sockets.NetworkStream> se crea con acceso de lectura/escritura a los especificados <xref:System.Net.Sockets.Socket>.</span><span class="sxs-lookup"><span data-stu-id="b751b-133">The <xref:System.Net.Sockets.NetworkStream> is created with read/write access to the specified <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="b751b-134">Si el valor de `ownsSocket` parámetro es `true`, el <xref:System.Net.Sockets.NetworkStream> toma posesión de subyacente <xref:System.Net.Sockets.Socket>y llamar a la <xref:System.Net.Sockets.NetworkStream.Close%2A> método también cierra subyacente <xref:System.Net.Sockets.Socket>.</span><span class="sxs-lookup"><span data-stu-id="b751b-134">If the value of `ownsSocket` parameter is `true`, the <xref:System.Net.Sockets.NetworkStream> takes ownership of the underlying <xref:System.Net.Sockets.Socket>, and calling the <xref:System.Net.Sockets.NetworkStream.Close%2A> method also closes the underlying <xref:System.Net.Sockets.Socket>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b751b-135">En el ejemplo de código siguiente se crea un <xref:System.Net.Sockets.NetworkStream> con la propiedad de la <xref:System.Net.Sockets.Socket>.</span><span class="sxs-lookup"><span data-stu-id="b751b-135">The following code example creates a <xref:System.Net.Sockets.NetworkStream> with ownership of the <xref:System.Net.Sockets.Socket>.</span></span>  
  
 [!code-cpp[NetworkStream_Synch_SendAndReceive#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CPP/source.cpp#2)]
 [!code-csharp[NetworkStream_Synch_SendAndReceive#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CS/source.cs#2)]
 [!code-vb[NetworkStream_Synch_SendAndReceive#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b751b-136">El parámetro <paramref name="socket" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b751b-136">The <paramref name="socket" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="b751b-137">El parámetro <paramref name="socket" /> no está conectado.</span><span class="sxs-lookup"><span data-stu-id="b751b-137">The <paramref name="socket" /> parameter is not connected.</span></span>  
  
<span data-ttu-id="b751b-138">O bien</span><span class="sxs-lookup"><span data-stu-id="b751b-138">-or-</span></span> 
<span data-ttu-id="b751b-139">El valor de la propiedad <see cref="P:System.Net.Sockets.Socket.SocketType" /> del parámetro <paramref name="socket" /> no es <see cref="F:System.Net.Sockets.SocketType.Stream" />.</span><span class="sxs-lookup"><span data-stu-id="b751b-139">the value of the <see cref="P:System.Net.Sockets.Socket.SocketType" /> property of the <paramref name="socket" /> parameter is not <see cref="F:System.Net.Sockets.SocketType.Stream" />.</span></span>  
  
<span data-ttu-id="b751b-140">O bien</span><span class="sxs-lookup"><span data-stu-id="b751b-140">-or-</span></span> 
<span data-ttu-id="b751b-141">El parámetro <paramref name="socket" /> está en un estado de no bloqueo.</span><span class="sxs-lookup"><span data-stu-id="b751b-141">the <paramref name="socket" /> parameter is in a nonblocking state.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.NetworkStream.Close(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NetworkStream (System.Net.Sockets.Socket socket, System.IO.FileAccess access);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.Sockets.Socket socket, valuetype System.IO.FileAccess access) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.#ctor(System.Net.Sockets.Socket,System.IO.FileAccess)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NetworkStream(System::Net::Sockets::Socket ^ socket, System::IO::FileAccess access);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.NetworkStream : System.Net.Sockets.Socket * System.IO.FileAccess -&gt; System.Net.Sockets.NetworkStream" Usage="new System.Net.Sockets.NetworkStream (socket, access)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="socket" Type="System.Net.Sockets.Socket" />
        <Parameter Name="access" Type="System.IO.FileAccess" />
      </Parameters>
      <Docs>
        <param name="socket"><span data-ttu-id="b751b-142">El elemento <see cref="T:System.Net.Sockets.Socket" /> que usará <see cref="T:System.Net.Sockets.NetworkStream" /> para enviar y recibir datos.</span><span class="sxs-lookup"><span data-stu-id="b751b-142">The <see cref="T:System.Net.Sockets.Socket" /> that the <see cref="T:System.Net.Sockets.NetworkStream" /> will use to send and receive data.</span></span></param>
        <param name="access"><span data-ttu-id="b751b-143">Combinación bit a bit de los valores de <see cref="T:System.IO.FileAccess" /> que especifican el tipo de acceso dado a <see cref="T:System.Net.Sockets.NetworkStream" /> en el elemento <see cref="T:System.Net.Sockets.Socket" /> proporcionado.</span><span class="sxs-lookup"><span data-stu-id="b751b-143">A bitwise combination of the <see cref="T:System.IO.FileAccess" /> values that specify the type of access given to the <see cref="T:System.Net.Sockets.NetworkStream" /> over the provided <see cref="T:System.Net.Sockets.Socket" />.</span></span></param>
        <summary><span data-ttu-id="b751b-144">Crea una nueva instancia de la clase <see cref="T:System.Net.Sockets.NetworkStream" /> para el elemento <see cref="T:System.Net.Sockets.Socket" /> especificado con los derechos de acceso indicados.</span><span class="sxs-lookup"><span data-stu-id="b751b-144">Creates a new instance of the <see cref="T:System.Net.Sockets.NetworkStream" /> class for the specified <see cref="T:System.Net.Sockets.Socket" /> with the specified access rights.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b751b-145">El <xref:System.Net.Sockets.NetworkStream> se crea con el acceso especificado a la especificada <xref:System.Net.Sockets.Socket>.</span><span class="sxs-lookup"><span data-stu-id="b751b-145">The <xref:System.Net.Sockets.NetworkStream> is created with the specified access to the specified <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="b751b-146">Con este constructor, el <xref:System.Net.Sockets.NetworkStream> no posee subyacente <xref:System.Net.Sockets.Socket>, por lo que si se llama el <xref:System.Net.Sockets.NetworkStream.Close%2A> método no cierra subyacente <xref:System.Net.Sockets.Socket>.</span><span class="sxs-lookup"><span data-stu-id="b751b-146">With this constructor, the <xref:System.Net.Sockets.NetworkStream> does not own the underlying <xref:System.Net.Sockets.Socket>, so calling the <xref:System.Net.Sockets.NetworkStream.Close%2A> method does not close the underlying <xref:System.Net.Sockets.Socket>.</span></span>  
  
 <span data-ttu-id="b751b-147">El `access` conjuntos de parámetros la <xref:System.Net.Sockets.NetworkStream.CanRead%2A> y <xref:System.Net.Sockets.NetworkStream.CanWrite%2A> propiedades de la <xref:System.Net.Sockets.NetworkStream>.</span><span class="sxs-lookup"><span data-stu-id="b751b-147">The `access` parameter sets the <xref:System.Net.Sockets.NetworkStream.CanRead%2A> and <xref:System.Net.Sockets.NetworkStream.CanWrite%2A> properties of the <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="b751b-148">Si especifica <xref:System.IO.FileAccess.Write>, el <xref:System.Net.Sockets.NetworkStream> permite las llamadas a la <xref:System.Net.Sockets.NetworkStream.Write%2A> método.</span><span class="sxs-lookup"><span data-stu-id="b751b-148">If you specify <xref:System.IO.FileAccess.Write>, then the <xref:System.Net.Sockets.NetworkStream> allows calls to the <xref:System.Net.Sockets.NetworkStream.Write%2A> method.</span></span> <span data-ttu-id="b751b-149">Si especifica <xref:System.IO.FileAccess.Read>, el <xref:System.Net.Sockets.NetworkStream> permite las llamadas a la <xref:System.Net.Sockets.NetworkStream.Read%2A> método.</span><span class="sxs-lookup"><span data-stu-id="b751b-149">If you specify <xref:System.IO.FileAccess.Read>, then the <xref:System.Net.Sockets.NetworkStream> allows calls to the <xref:System.Net.Sockets.NetworkStream.Read%2A> method.</span></span> <span data-ttu-id="b751b-150">Si especifica <xref:System.IO.FileAccess.ReadWrite>, se permiten llamadas a ambos métodos.</span><span class="sxs-lookup"><span data-stu-id="b751b-150">If you specify <xref:System.IO.FileAccess.ReadWrite>, both method calls are allowed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b751b-151">En el ejemplo de código siguiente se crea un <xref:System.Net.Sockets.NetworkStream> con la capacidad de leer y escribir en el <xref:System.Net.Sockets.Socket>.</span><span class="sxs-lookup"><span data-stu-id="b751b-151">The following code example creates a <xref:System.Net.Sockets.NetworkStream> with the ability to read and write to the <xref:System.Net.Sockets.Socket>.</span></span>  
  
 [!code-cpp[NetworkStream_Async_SendAndReceive#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/CPP/source.cpp#1)]
 [!code-csharp[NetworkStream_Async_SendAndReceive#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/CS/source.cs#1)]
 [!code-vb[NetworkStream_Async_SendAndReceive#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b751b-152">El parámetro <paramref name="socket" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b751b-152">The <paramref name="socket" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="b751b-153">El parámetro <paramref name="socket" /> no está conectado.</span><span class="sxs-lookup"><span data-stu-id="b751b-153">The <paramref name="socket" /> parameter is not connected.</span></span>  
  
<span data-ttu-id="b751b-154">O bien</span><span class="sxs-lookup"><span data-stu-id="b751b-154">-or-</span></span> 
<span data-ttu-id="b751b-155">La propiedad <see cref="P:System.Net.Sockets.Socket.SocketType" /> del parámetro <paramref name="socket" /> no es <see cref="F:System.Net.Sockets.SocketType.Stream" />.</span><span class="sxs-lookup"><span data-stu-id="b751b-155">the <see cref="P:System.Net.Sockets.Socket.SocketType" /> property of the <paramref name="socket" /> parameter is not <see cref="F:System.Net.Sockets.SocketType.Stream" />.</span></span>  
  
<span data-ttu-id="b751b-156">O bien</span><span class="sxs-lookup"><span data-stu-id="b751b-156">-or-</span></span> 
<span data-ttu-id="b751b-157">El parámetro <paramref name="socket" /> está en un estado de no bloqueo.</span><span class="sxs-lookup"><span data-stu-id="b751b-157">the <paramref name="socket" /> parameter is in a nonblocking state.</span></span></exception>
        <altmember cref="T:System.IO.FileAccess" />
        <altmember cref="P:System.Net.Sockets.NetworkStream.CanRead" />
        <altmember cref="P:System.Net.Sockets.NetworkStream.CanWrite" />
        <altmember cref="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Net.Sockets.NetworkStream.Close(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NetworkStream (System.Net.Sockets.Socket socket, System.IO.FileAccess access, bool ownsSocket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.Sockets.Socket socket, valuetype System.IO.FileAccess access, bool ownsSocket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.#ctor(System.Net.Sockets.Socket,System.IO.FileAccess,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NetworkStream(System::Net::Sockets::Socket ^ socket, System::IO::FileAccess access, bool ownsSocket);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.NetworkStream : System.Net.Sockets.Socket * System.IO.FileAccess * bool -&gt; System.Net.Sockets.NetworkStream" Usage="new System.Net.Sockets.NetworkStream (socket, access, ownsSocket)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="socket" Type="System.Net.Sockets.Socket" />
        <Parameter Name="access" Type="System.IO.FileAccess" />
        <Parameter Name="ownsSocket" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="socket"><span data-ttu-id="b751b-158">El elemento <see cref="T:System.Net.Sockets.Socket" /> que usará <see cref="T:System.Net.Sockets.NetworkStream" /> para enviar y recibir datos.</span><span class="sxs-lookup"><span data-stu-id="b751b-158">The <see cref="T:System.Net.Sockets.Socket" /> that the <see cref="T:System.Net.Sockets.NetworkStream" /> will use to send and receive data.</span></span></param>
        <param name="access"><span data-ttu-id="b751b-159">Combinación bit a bit de los valores de <see cref="T:System.IO.FileAccess" /> que especifican el tipo de acceso dado a <see cref="T:System.Net.Sockets.NetworkStream" /> en el elemento <see cref="T:System.Net.Sockets.Socket" /> proporcionado.</span><span class="sxs-lookup"><span data-stu-id="b751b-159">A bitwise combination of the <see cref="T:System.IO.FileAccess" /> values that specifies the type of access given to the <see cref="T:System.Net.Sockets.NetworkStream" /> over the provided <see cref="T:System.Net.Sockets.Socket" />.</span></span></param>
        <param name="ownsSocket"><span data-ttu-id="b751b-160">Se establece en <see langword="true" /> para indicar que <see cref="T:System.Net.Sockets.NetworkStream" /> tomará posesión de <see cref="T:System.Net.Sockets.Socket" />; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b751b-160">Set to <see langword="true" /> to indicate that the <see cref="T:System.Net.Sockets.NetworkStream" /> will take ownership of the <see cref="T:System.Net.Sockets.Socket" />; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="b751b-161">Crea una nueva instancia de la clase <see cref="T:System.Net.Sockets.NetworkStream" /> para el elemento <see cref="T:System.Net.Sockets.Socket" /> especificado con los derechos de acceso y la propiedad del elemento <see cref="T:System.Net.Sockets.Socket" /> indicado.</span><span class="sxs-lookup"><span data-stu-id="b751b-161">Creates a new instance of the <see cref="T:System.Net.Sockets.NetworkStream" /> class for the specified <see cref="T:System.Net.Sockets.Socket" /> with the specified access rights and the specified <see cref="T:System.Net.Sockets.Socket" /> ownership.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b751b-162">El <xref:System.Net.Sockets.NetworkStream> se crea con acceso de lectura/escritura a los especificados <xref:System.Net.Sockets.Socket>.</span><span class="sxs-lookup"><span data-stu-id="b751b-162">The <xref:System.Net.Sockets.NetworkStream> is created with read/write access to the specified <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="b751b-163">Si el valor de la `ownsSocket` parámetro es `true`, el <xref:System.Net.Sockets.NetworkStream> toma posesión de subyacente <xref:System.Net.Sockets.Socket>y llamar a la <xref:System.Net.Sockets.NetworkStream.Close%2A> método también cierra subyacente <xref:System.Net.Sockets.Socket>.</span><span class="sxs-lookup"><span data-stu-id="b751b-163">If the value of the `ownsSocket` parameter is `true`, the <xref:System.Net.Sockets.NetworkStream> takes ownership of the underlying <xref:System.Net.Sockets.Socket>, and calling the <xref:System.Net.Sockets.NetworkStream.Close%2A> method also closes the underlying <xref:System.Net.Sockets.Socket>.</span></span>  
  
 <span data-ttu-id="b751b-164">El `access` conjuntos de parámetros la <xref:System.Net.Sockets.NetworkStream.CanRead%2A> y <xref:System.Net.Sockets.NetworkStream.CanWrite%2A> propiedades de la <xref:System.Net.Sockets.NetworkStream>.</span><span class="sxs-lookup"><span data-stu-id="b751b-164">The `access` parameter sets the <xref:System.Net.Sockets.NetworkStream.CanRead%2A> and <xref:System.Net.Sockets.NetworkStream.CanWrite%2A> properties of the <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="b751b-165">Si especifica <xref:System.IO.FileAccess.Write>, el <xref:System.Net.Sockets.NetworkStream> permite las llamadas a la <xref:System.Net.Sockets.NetworkStream.Write%2A> método.</span><span class="sxs-lookup"><span data-stu-id="b751b-165">If you specify <xref:System.IO.FileAccess.Write>, then the <xref:System.Net.Sockets.NetworkStream> allows calls to the <xref:System.Net.Sockets.NetworkStream.Write%2A> method.</span></span> <span data-ttu-id="b751b-166">Si especifica <xref:System.IO.FileAccess.Read>, el <xref:System.Net.Sockets.NetworkStream> permite las llamadas a la <xref:System.Net.Sockets.NetworkStream.Read%2A> método.</span><span class="sxs-lookup"><span data-stu-id="b751b-166">If you specify <xref:System.IO.FileAccess.Read>, then the <xref:System.Net.Sockets.NetworkStream> allows calls to the <xref:System.Net.Sockets.NetworkStream.Read%2A> method.</span></span> <span data-ttu-id="b751b-167">Si especifica <xref:System.IO.FileAccess.ReadWrite>, se permiten llamadas a ambos métodos.</span><span class="sxs-lookup"><span data-stu-id="b751b-167">If you specify <xref:System.IO.FileAccess.ReadWrite>, both method calls are allowed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b751b-168">En el ejemplo de código siguiente se crea un <xref:System.Net.Sockets.NetworkStream> con la capacidad de leer y escribir en el <xref:System.Net.Sockets.Socket>.</span><span class="sxs-lookup"><span data-stu-id="b751b-168">The following code example creates a <xref:System.Net.Sockets.NetworkStream> with the ability to read and write to the <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="b751b-169">La propiedad de la <xref:System.Net.Sockets.Socket> se asigna a este <xref:System.Net.Sockets.NetworkStream> especificando `true` para el `ownsSocket` parámetro.</span><span class="sxs-lookup"><span data-stu-id="b751b-169">Ownership of the <xref:System.Net.Sockets.Socket> is given to this <xref:System.Net.Sockets.NetworkStream> by specifying `true` for the `ownsSocket` parameter.</span></span>  
  
 [!code-cpp[NetworkStream_Async_SendAndReceive#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/CPP/source.cpp#1)]
 [!code-csharp[NetworkStream_Async_SendAndReceive#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/CS/source.cs#1)]
 [!code-vb[NetworkStream_Async_SendAndReceive#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b751b-170">El parámetro <paramref name="socket" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b751b-170">The <paramref name="socket" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="b751b-171">El parámetro <paramref name="socket" /> no está conectado.</span><span class="sxs-lookup"><span data-stu-id="b751b-171">The <paramref name="socket" /> parameter is not connected.</span></span>  
  
<span data-ttu-id="b751b-172">O bien</span><span class="sxs-lookup"><span data-stu-id="b751b-172">-or-</span></span> 
<span data-ttu-id="b751b-173">La propiedad <see cref="P:System.Net.Sockets.Socket.SocketType" /> del parámetro <paramref name="socket" /> no es <see cref="F:System.Net.Sockets.SocketType.Stream" />.</span><span class="sxs-lookup"><span data-stu-id="b751b-173">The <see cref="P:System.Net.Sockets.Socket.SocketType" /> property of the <paramref name="socket" /> parameter is not <see cref="F:System.Net.Sockets.SocketType.Stream" />.</span></span>  
  
<span data-ttu-id="b751b-174">O bien</span><span class="sxs-lookup"><span data-stu-id="b751b-174">-or-</span></span> 
<span data-ttu-id="b751b-175">El parámetro <paramref name="socket" /> está en un estado de no bloqueo.</span><span class="sxs-lookup"><span data-stu-id="b751b-175">The <paramref name="socket" /> parameter is in a nonblocking state.</span></span></exception>
        <altmember cref="T:System.IO.FileAccess" />
        <altmember cref="P:System.Net.Sockets.NetworkStream.CanRead" />
        <altmember cref="P:System.Net.Sockets.NetworkStream.CanWrite" />
        <altmember cref="M:System.Net.Sockets.NetworkStream.Close(System.Int32)" />
        <altmember cref="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="BeginRead">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginRead (byte[] buffer, int offset, int size, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginRead(unsigned int8[] buffer, int32 offset, int32 size, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BeginRead (buffer As Byte(), offset As Integer, size As Integer, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginRead(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int size, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.BeginRead : byte[] * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="networkStream.BeginRead (buffer, offset, size, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="b751b-176">Matriz de tipo <see cref="T:System.Byte" /> que corresponde a la ubicación de la memoria donde se almacenan los datos leídos de <see cref="T:System.Net.Sockets.NetworkStream" />.</span><span class="sxs-lookup"><span data-stu-id="b751b-176">An array of type <see cref="T:System.Byte" /> that is the location in memory to store data read from the <see cref="T:System.Net.Sockets.NetworkStream" />.</span></span></param>
        <param name="offset"><span data-ttu-id="b751b-177">Ubicación de <paramref name="buffer" /> donde se inicia el almacenamiento de los datos.</span><span class="sxs-lookup"><span data-stu-id="b751b-177">The location in <paramref name="buffer" /> to begin storing the data.</span></span></param>
        <param name="size"><span data-ttu-id="b751b-178">Número de bytes que se va a leer de <see cref="T:System.Net.Sockets.NetworkStream" />.</span><span class="sxs-lookup"><span data-stu-id="b751b-178">The number of bytes to read from the <see cref="T:System.Net.Sockets.NetworkStream" />.</span></span></param>
        <param name="callback"><span data-ttu-id="b751b-179">Delegado de <see cref="T:System.AsyncCallback" /> que se ejecuta al finalizar <see cref="M:System.Net.Sockets.NetworkStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="b751b-179">The <see cref="T:System.AsyncCallback" /> delegate that is executed when <see cref="M:System.Net.Sockets.NetworkStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> completes.</span></span></param>
        <param name="state"><span data-ttu-id="b751b-180">Objeto que contiene los datos adicionales definidos por el usuario.</span><span class="sxs-lookup"><span data-stu-id="b751b-180">An object that contains any additional user-defined data.</span></span></param>
        <summary><span data-ttu-id="b751b-181">Comienza una lectura asincrónica de <see cref="T:System.Net.Sockets.NetworkStream" />.</span><span class="sxs-lookup"><span data-stu-id="b751b-181">Begins an asynchronous read from the <see cref="T:System.Net.Sockets.NetworkStream" />.</span></span></summary>
        <returns><span data-ttu-id="b751b-182">Elemento <see cref="T:System.IAsyncResult" /> que representa la llamada asincrónica.</span><span class="sxs-lookup"><span data-stu-id="b751b-182">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous call.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b751b-183">El <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> método comienza a leer asincrónicamente los datos de los búferes de red entrante.</span><span class="sxs-lookup"><span data-stu-id="b751b-183">The <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method starts asynchronously reading data from the incoming network buffers.</span></span> <span data-ttu-id="b751b-184">Una llamada a la <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> método le permite recibir datos en un subproceso de ejecución independiente.</span><span class="sxs-lookup"><span data-stu-id="b751b-184">Calling the <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method gives you the ability to receive data within a separate execution thread.</span></span>  
  
 <span data-ttu-id="b751b-185">Debe crear un método de devolución de llamada que implementa el <xref:System.AsyncCallback> y pasar su nombre a la <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> método.</span><span class="sxs-lookup"><span data-stu-id="b751b-185">You must create a callback method that implements the <xref:System.AsyncCallback> delegate and pass its name to the <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method.</span></span> <span data-ttu-id="b751b-186">Como mínimo, el `state` parámetro debe contener el <xref:System.Net.Sockets.NetworkStream>.</span><span class="sxs-lookup"><span data-stu-id="b751b-186">At the very minimum, your `state` parameter must contain the <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="b751b-187">Dado que desea obtener los datos recibidos dentro del método de devolución de llamada, debe crear una pequeña clase o estructura que contenga un búfer de lectura y cualquier otra información útil.</span><span class="sxs-lookup"><span data-stu-id="b751b-187">Because you will want to obtain the received data within your callback method, you should create a small class or structure to hold a read buffer and any other useful information.</span></span> <span data-ttu-id="b751b-188">Pase la instancia de clase o estructura a la <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> método a través de la `state` parámetro.</span><span class="sxs-lookup"><span data-stu-id="b751b-188">Pass the structure or class instance to the <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method through the `state` parameter.</span></span>  
  
 <span data-ttu-id="b751b-189">El método de devolución de llamada debe llamar a la <xref:System.Net.Sockets.NetworkStream.EndRead%2A> método.</span><span class="sxs-lookup"><span data-stu-id="b751b-189">Your callback method should call the <xref:System.Net.Sockets.NetworkStream.EndRead%2A> method.</span></span> <span data-ttu-id="b751b-190">Cuando la aplicación llama <xref:System.Net.Sockets.NetworkStream.BeginRead%2A>, el sistema esperará hasta que se reciben datos o se produce un error y, a continuación, el sistema usará un subproceso independiente para ejecutar el método de devolución de llamada especificadas y los bloques en <xref:System.Net.Sockets.NetworkStream.EndRead%2A> hasta que el proporcionado <xref:System.Net.Sockets.NetworkStream> lee datos o inicia una excepción.</span><span class="sxs-lookup"><span data-stu-id="b751b-190">When your application calls <xref:System.Net.Sockets.NetworkStream.BeginRead%2A>, the system will wait until data is received or an error occurs, and then the system will use a separate thread to execute the specified callback method, and blocks on <xref:System.Net.Sockets.NetworkStream.EndRead%2A> until the provided <xref:System.Net.Sockets.NetworkStream> reads data or throws an exception.</span></span> <span data-ttu-id="b751b-191">Si desea que el subproceso original se bloquee después de llamar a la <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> método, use el <xref:System.Threading.WaitHandle.WaitOne%2A> método.</span><span class="sxs-lookup"><span data-stu-id="b751b-191">If you want the original thread to block after you call the <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method, use the <xref:System.Threading.WaitHandle.WaitOne%2A> method.</span></span> <span data-ttu-id="b751b-192">Llamar a <xref:System.Threading.EventWaitHandle.Set%2A> en el método de devolución de llamada cuando desee seguir ejecutando el subproceso original.</span><span class="sxs-lookup"><span data-stu-id="b751b-192">Call <xref:System.Threading.EventWaitHandle.Set%2A> in the callback method when you want the original thread to continue executing.</span></span> <span data-ttu-id="b751b-193">Para obtener más información sobre cómo escribir métodos de devolución de llamada, vea [serialización de un delegado como un método de devolución de llamada](~/docs/framework/interop/marshaling-a-delegate-as-a-callback-method.md).</span><span class="sxs-lookup"><span data-stu-id="b751b-193">For additional information about writing callback methods, see [Marshaling a Delegate as a Callback Method](~/docs/framework/interop/marshaling-a-delegate-as-a-callback-method.md).</span></span>  
  
 <span data-ttu-id="b751b-194">El <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> método lee todos los datos estén disponibles, hasta el número de bytes especificado por el `size` parámetro.</span><span class="sxs-lookup"><span data-stu-id="b751b-194">The <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method reads as much data as is available, up to the number of bytes specified by the `size` parameter.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b751b-195">Si recibe un <xref:System.IO.IOException>, compruebe la <xref:System.Exception.InnerException%2A> propiedad para determinar si ha ocasionado un <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="b751b-195">If you receive an <xref:System.IO.IOException>, check the <xref:System.Exception.InnerException%2A> property to determine if it was caused by a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="b751b-196">Si es así, use el <xref:System.Net.Sockets.SocketException.ErrorCode%2A> propiedad para obtener el código de error concreto y consulte la [código de error de API de la versión 2 de Windows Sockets](/windows/desktop/winsock/windows-sockets-error-codes-2) documentación para obtener una descripción detallada del error.</span><span class="sxs-lookup"><span data-stu-id="b751b-196">If so, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A> property to obtain the specific error code and refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
 <span data-ttu-id="b751b-197">Leer y escribir las operaciones se pueden realizar simultáneamente en una instancia de la <xref:System.Net.Sockets.NetworkStream> clase sin la necesidad de sincronización.</span><span class="sxs-lookup"><span data-stu-id="b751b-197">Read and write operations can be performed simultaneously on an instance of the <xref:System.Net.Sockets.NetworkStream> class without the need for synchronization.</span></span> <span data-ttu-id="b751b-198">Siempre y cuando hay un subproceso único para las operaciones de escritura y un subproceso único para las operaciones de lectura, no habrá ninguna interferencia cruzada entre la lectura y se requiere ninguna sincronización y subprocesos de escritura.</span><span class="sxs-lookup"><span data-stu-id="b751b-198">As long as there is one unique thread for the write operations and one unique thread for the read operations, there will be no cross-interference between read and write threads and no synchronization is required.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b751b-199">El siguiente ejemplo de código usa <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> para leer datos de forma asincrónica de la secuencia de red.</span><span class="sxs-lookup"><span data-stu-id="b751b-199">The following code example uses <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> to read data asynchronously from the network stream.</span></span> <span data-ttu-id="b751b-200">El `myReadCallBack` método implementa el <xref:System.AsyncCallback> delegar y es llamado por el sistema cuando <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> devuelve.</span><span class="sxs-lookup"><span data-stu-id="b751b-200">The `myReadCallBack` method implements the <xref:System.AsyncCallback> delegate and is called by the system when <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> returns.</span></span>  
  
 [!code-cpp[NetworkStream_Async_SendAndReceive#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/CPP/source.cpp#3)]
 [!code-csharp[NetworkStream_Async_SendAndReceive#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/CS/source.cs#3)]
 [!code-vb[NetworkStream_Async_SendAndReceive#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b751b-201">El parámetro <paramref name="buffer" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b751b-201">The <paramref name="buffer" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b751b-202">El parámetro <paramref name="offset" /> es menor que 0.</span><span class="sxs-lookup"><span data-stu-id="b751b-202">The <paramref name="offset" /> parameter is less than 0.</span></span>  
  
<span data-ttu-id="b751b-203">O bien</span><span class="sxs-lookup"><span data-stu-id="b751b-203">-or-</span></span> 
<span data-ttu-id="b751b-204">El parámetro <paramref name="offset" /> es mayor que la longitud del parámetro <paramref name="buffer" />.</span><span class="sxs-lookup"><span data-stu-id="b751b-204">The <paramref name="offset" /> parameter is greater than the length of the <paramref name="buffer" /> paramater.</span></span>  
  
<span data-ttu-id="b751b-205">O bien</span><span class="sxs-lookup"><span data-stu-id="b751b-205">-or-</span></span> 
<span data-ttu-id="b751b-206"><paramref name="size" /> es menor que 0.</span><span class="sxs-lookup"><span data-stu-id="b751b-206">The <paramref name="size" /> is less than 0.</span></span>  
  
<span data-ttu-id="b751b-207">O bien</span><span class="sxs-lookup"><span data-stu-id="b751b-207">-or-</span></span> 
<span data-ttu-id="b751b-208"><paramref name="size" /> es mayor que la longitud de <paramref name="buffer" /> menos el valor del parámetro <paramref name="offset" />.</span><span class="sxs-lookup"><span data-stu-id="b751b-208">The <paramref name="size" /> is greater than the length of <paramref name="buffer" /> minus the value of the <paramref name="offset" /> parameter.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="b751b-209">El elemento <see cref="T:System.Net.Sockets.Socket" /> subyacente está cerrado.</span><span class="sxs-lookup"><span data-stu-id="b751b-209">The underlying <see cref="T:System.Net.Sockets.Socket" /> is closed.</span></span>  
  
<span data-ttu-id="b751b-210">O bien</span><span class="sxs-lookup"><span data-stu-id="b751b-210">-or-</span></span> 
<span data-ttu-id="b751b-211">Se produce un error al leer de la red.</span><span class="sxs-lookup"><span data-stu-id="b751b-211">There was a failure while reading from the network.</span></span>  
  
<span data-ttu-id="b751b-212">O bien</span><span class="sxs-lookup"><span data-stu-id="b751b-212">-or-</span></span> 
<span data-ttu-id="b751b-213">Se produjo un error al acceder al socket.</span><span class="sxs-lookup"><span data-stu-id="b751b-213">An error occurred when accessing the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="b751b-214">La clase <see cref="T:System.Net.Sockets.NetworkStream" /> está cerrada.</span><span class="sxs-lookup"><span data-stu-id="b751b-214">The <see cref="T:System.Net.Sockets.NetworkStream" /> is closed.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.NetworkStream.EndRead(System.IAsyncResult)" />
      </Docs>
    </Member>
    <Member MemberName="BeginWrite">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginWrite (byte[] buffer, int offset, int size, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginWrite(unsigned int8[] buffer, int32 offset, int32 size, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BeginWrite (buffer As Byte(), offset As Integer, size As Integer, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginWrite(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int size, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.BeginWrite : byte[] * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="networkStream.BeginWrite (buffer, offset, size, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="b751b-215">Una matriz de tipo <see cref="T:System.Byte" /> que contiene los datos que se va a escribir en <see cref="T:System.Net.Sockets.NetworkStream" />.</span><span class="sxs-lookup"><span data-stu-id="b751b-215">An array of type <see cref="T:System.Byte" /> that contains the data to write to the <see cref="T:System.Net.Sockets.NetworkStream" />.</span></span></param>
        <param name="offset"><span data-ttu-id="b751b-216">Ubicación de <paramref name="buffer" /> en la que se inicia el envío de datos.</span><span class="sxs-lookup"><span data-stu-id="b751b-216">The location in <paramref name="buffer" /> to begin sending the data.</span></span></param>
        <param name="size"><span data-ttu-id="b751b-217">Número de bytes que se van a escribir en <see cref="T:System.Net.Sockets.NetworkStream" />.</span><span class="sxs-lookup"><span data-stu-id="b751b-217">The number of bytes to write to the <see cref="T:System.Net.Sockets.NetworkStream" />.</span></span></param>
        <param name="callback"><span data-ttu-id="b751b-218">Delegado de <see cref="T:System.AsyncCallback" /> que se ejecuta al finalizar <see cref="M:System.Net.Sockets.NetworkStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="b751b-218">The <see cref="T:System.AsyncCallback" /> delegate that is executed when <see cref="M:System.Net.Sockets.NetworkStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> completes.</span></span></param>
        <param name="state"><span data-ttu-id="b751b-219">Objeto que contiene los datos adicionales definidos por el usuario.</span><span class="sxs-lookup"><span data-stu-id="b751b-219">An object that contains any additional user-defined data.</span></span></param>
        <summary><span data-ttu-id="b751b-220">Inicia una escritura asincrónica en una secuencia.</span><span class="sxs-lookup"><span data-stu-id="b751b-220">Begins an asynchronous write to a stream.</span></span></summary>
        <returns><span data-ttu-id="b751b-221">Elemento <see cref="T:System.IAsyncResult" /> que representa la llamada asincrónica.</span><span class="sxs-lookup"><span data-stu-id="b751b-221">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous call.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b751b-222">El <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> método inicia una operación de envío asincrónico al host remoto.</span><span class="sxs-lookup"><span data-stu-id="b751b-222">The <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> method starts an asynchronous send operation to the remote host.</span></span> <span data-ttu-id="b751b-223">Una llamada a la <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> método le permite enviar datos en un subproceso de ejecución independiente.</span><span class="sxs-lookup"><span data-stu-id="b751b-223">Calling the <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> method gives you the ability to send data within a separate execution thread.</span></span>  
  
 <span data-ttu-id="b751b-224">Debe crear un método de devolución de llamada que implementa el <xref:System.AsyncCallback> y pasar su nombre a la <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> método.</span><span class="sxs-lookup"><span data-stu-id="b751b-224">You must create a callback method that implements the <xref:System.AsyncCallback> delegate and pass its name to the <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> method.</span></span> <span data-ttu-id="b751b-225">Como mínimo, el `state` parámetro debe contener el <xref:System.Net.Sockets.NetworkStream>.</span><span class="sxs-lookup"><span data-stu-id="b751b-225">At the very minimum, your `state` parameter must contain the <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="b751b-226">Si la devolución de llamada, necesita más información, puede crear una pequeña clase o estructura que contenga el <xref:System.Net.Sockets.NetworkStream> y otra información necesaria.</span><span class="sxs-lookup"><span data-stu-id="b751b-226">If your callback needs more information, you can create a small class or structure to hold the <xref:System.Net.Sockets.NetworkStream> and the other required information.</span></span> <span data-ttu-id="b751b-227">Pase la instancia de clase o estructura a la <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> método a través de la `state` parámetro.</span><span class="sxs-lookup"><span data-stu-id="b751b-227">Pass the structure or class instance to the <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> method through the `state` parameter.</span></span>  
  
 <span data-ttu-id="b751b-228">El método de devolución de llamada debe implementar el <xref:System.Net.Sockets.NetworkStream.EndWrite%2A> método.</span><span class="sxs-lookup"><span data-stu-id="b751b-228">Your callback method should implement the <xref:System.Net.Sockets.NetworkStream.EndWrite%2A> method.</span></span> <span data-ttu-id="b751b-229">Cuando la aplicación llama <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A>, el sistema utiliza un subproceso independiente para ejecutar el método de devolución de llamada especificado y se bloquea en <xref:System.Net.Sockets.NetworkStream.EndWrite%2A> hasta que el <xref:System.Net.Sockets.NetworkStream> envía el número de bytes solicitado o una excepción.</span><span class="sxs-lookup"><span data-stu-id="b751b-229">When your application calls <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A>, the system uses a separate thread to execute the specified callback method, and blocks on <xref:System.Net.Sockets.NetworkStream.EndWrite%2A> until the <xref:System.Net.Sockets.NetworkStream> sends the number of bytes requested or throws an exception.</span></span> <span data-ttu-id="b751b-230">Si desea que el subproceso original se bloquee después de llamar a la <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> método, use el <xref:System.Threading.WaitHandle.WaitOne%2A> método.</span><span class="sxs-lookup"><span data-stu-id="b751b-230">If you want the original thread to block after you call the <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> method, use the <xref:System.Threading.WaitHandle.WaitOne%2A> method.</span></span> <span data-ttu-id="b751b-231">Llamar a <xref:System.Threading.EventWaitHandle.Set%2A> en el método de devolución de llamada cuando desee seguir ejecutando el subproceso original.</span><span class="sxs-lookup"><span data-stu-id="b751b-231">Call <xref:System.Threading.EventWaitHandle.Set%2A> in the callback method when you want the original thread to continue executing.</span></span> <span data-ttu-id="b751b-232">Para obtener más información sobre cómo escribir métodos de devolución de llamada, vea [serialización de un delegado como un método de devolución de llamada](~/docs/framework/interop/marshaling-a-delegate-as-a-callback-method.md).</span><span class="sxs-lookup"><span data-stu-id="b751b-232">For additional information about writing callback methods, see [Marshaling a Delegate as a Callback Method](~/docs/framework/interop/marshaling-a-delegate-as-a-callback-method.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b751b-233">Si recibe un <xref:System.IO.IOException>, compruebe la <xref:System.Exception.InnerException%2A> propiedad para determinar si ha ocasionado un <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="b751b-233">If you receive an <xref:System.IO.IOException>, check the <xref:System.Exception.InnerException%2A> property to determine if it was caused by a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="b751b-234">Si es así, use el <xref:System.Net.Sockets.SocketException.ErrorCode%2A> propiedad para obtener el código de error concreto y consulte la [código de error de API de la versión 2 de Windows Sockets](/windows/desktop/winsock/windows-sockets-error-codes-2) documentación para obtener una descripción detallada del error.</span><span class="sxs-lookup"><span data-stu-id="b751b-234">If so, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A> property to obtain the specific error code and refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
 <span data-ttu-id="b751b-235">Leer y escribir las operaciones se pueden realizar simultáneamente en una instancia de la <xref:System.Net.Sockets.NetworkStream> clase sin la necesidad de sincronización.</span><span class="sxs-lookup"><span data-stu-id="b751b-235">Read and write operations can be performed simultaneously on an instance of the <xref:System.Net.Sockets.NetworkStream> class without the need for synchronization.</span></span> <span data-ttu-id="b751b-236">Siempre y cuando hay un subproceso único para las operaciones de escritura y un subproceso único para las operaciones de lectura, no habrá ninguna interferencia cruzada entre la lectura y se requiere ninguna sincronización y subprocesos de escritura.</span><span class="sxs-lookup"><span data-stu-id="b751b-236">As long as there is one unique thread for the write operations and one unique thread for the read operations, there will be no cross-interference between read and write threads and no synchronization is required.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b751b-237">El siguiente ejemplo de código usa <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> para escribir datos de forma asincrónica en una secuencia de red.</span><span class="sxs-lookup"><span data-stu-id="b751b-237">The following code example uses <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> to write data asynchronously to a network stream.</span></span> <span data-ttu-id="b751b-238">El `myWriteCallBack` método implementa el <xref:System.AsyncCallback> delegar y es llamado por el sistema cuando <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> devuelve.</span><span class="sxs-lookup"><span data-stu-id="b751b-238">The `myWriteCallBack` method implements the <xref:System.AsyncCallback> delegate and is called by the system when <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> returns.</span></span>  
  
 [!code-cpp[NetworkStream_Async_SendAndReceive#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/CPP/source.cpp#2)]
 [!code-csharp[NetworkStream_Async_SendAndReceive#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/CS/source.cs#2)]
 [!code-vb[NetworkStream_Async_SendAndReceive#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b751b-239">El parámetro <paramref name="buffer" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b751b-239">The <paramref name="buffer" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b751b-240">El parámetro <paramref name="offset" /> es menor que 0.</span><span class="sxs-lookup"><span data-stu-id="b751b-240">The <paramref name="offset" /> parameter is less than 0.</span></span>  
  
<span data-ttu-id="b751b-241">O bien</span><span class="sxs-lookup"><span data-stu-id="b751b-241">-or-</span></span> 
<span data-ttu-id="b751b-242">El parámetro <paramref name="offset" /> es mayor que la longitud de <paramref name="buffer" />.</span><span class="sxs-lookup"><span data-stu-id="b751b-242">The <paramref name="offset" /> parameter is greater than the length of <paramref name="buffer" />.</span></span>  
  
<span data-ttu-id="b751b-243">O bien</span><span class="sxs-lookup"><span data-stu-id="b751b-243">-or-</span></span> 
<span data-ttu-id="b751b-244">El parámetro <paramref name="size" /> es menor que 0.</span><span class="sxs-lookup"><span data-stu-id="b751b-244">The <paramref name="size" /> parameter is less than 0.</span></span>  
  
<span data-ttu-id="b751b-245">O bien</span><span class="sxs-lookup"><span data-stu-id="b751b-245">-or-</span></span> 
<span data-ttu-id="b751b-246">El parámetro <paramref name="size" /> es mayor que la longitud de <paramref name="buffer" /> menos el valor del parámetro <paramref name="offset" />.</span><span class="sxs-lookup"><span data-stu-id="b751b-246">The <paramref name="size" /> parameter is greater than the length of <paramref name="buffer" /> minus the value of the <paramref name="offset" /> parameter.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="b751b-247">El elemento <see cref="T:System.Net.Sockets.Socket" /> subyacente está cerrado.</span><span class="sxs-lookup"><span data-stu-id="b751b-247">The underlying <see cref="T:System.Net.Sockets.Socket" /> is closed.</span></span>  
  
<span data-ttu-id="b751b-248">O bien</span><span class="sxs-lookup"><span data-stu-id="b751b-248">-or-</span></span> 
<span data-ttu-id="b751b-249">Se produjo un error al escribir en la red.</span><span class="sxs-lookup"><span data-stu-id="b751b-249">There was a failure while writing to the network.</span></span>  
  
<span data-ttu-id="b751b-250">O bien</span><span class="sxs-lookup"><span data-stu-id="b751b-250">-or-</span></span> 
<span data-ttu-id="b751b-251">Se produjo un error al acceder al socket.</span><span class="sxs-lookup"><span data-stu-id="b751b-251">An error occurred when accessing the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="b751b-252">La clase <see cref="T:System.Net.Sockets.NetworkStream" /> está cerrada.</span><span class="sxs-lookup"><span data-stu-id="b751b-252">The <see cref="T:System.Net.Sockets.NetworkStream" /> is closed.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.NetworkStream.EndWrite(System.IAsyncResult)" />
      </Docs>
    </Member>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public override bool CanRead { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRead" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.NetworkStream.CanRead" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanRead As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRead { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRead : bool" Usage="System.Net.Sockets.NetworkStream.CanRead" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b751b-253">Obtiene un valor que indica si <see cref="T:System.Net.Sockets.NetworkStream" /> admite la lectura.</span><span class="sxs-lookup"><span data-stu-id="b751b-253">Gets a value that indicates whether the <see cref="T:System.Net.Sockets.NetworkStream" /> supports reading.</span></span></summary>
        <value><span data-ttu-id="b751b-254"><see langword="true" /> si se pueden leer los datos de la secuencia; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b751b-254"><see langword="true" /> if data can be read from the stream; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="b751b-255">El valor predeterminado es <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="b751b-255">The default value is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b751b-256">Si <xref:System.Net.Sockets.NetworkStream.CanRead%2A> es `true`, <xref:System.Net.Sockets.NetworkStream> permite las llamadas a la <xref:System.Net.Sockets.NetworkStream.Read%2A> método.</span><span class="sxs-lookup"><span data-stu-id="b751b-256">If <xref:System.Net.Sockets.NetworkStream.CanRead%2A> is `true`, <xref:System.Net.Sockets.NetworkStream> allows calls to the <xref:System.Net.Sockets.NetworkStream.Read%2A> method.</span></span> <span data-ttu-id="b751b-257">Proporcionar adecuado <xref:System.IO.FileAccess> valor en el constructor para establecer la legibilidad y la escritura de enumerado los <xref:System.Net.Sockets.NetworkStream>.</span><span class="sxs-lookup"><span data-stu-id="b751b-257">Provide the appropriate <xref:System.IO.FileAccess> enumerated value in the constructor to set the readability and writability of the <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="b751b-258">El <xref:System.Net.Sockets.NetworkStream.CanRead%2A> propiedad se establece cuando el <xref:System.Net.Sockets.NetworkStream> se ha inicializado.</span><span class="sxs-lookup"><span data-stu-id="b751b-258">The <xref:System.Net.Sockets.NetworkStream.CanRead%2A> property is set when the <xref:System.Net.Sockets.NetworkStream> is initialized.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b751b-259">El siguiente código de ejemplo comprueba <xref:System.Net.Sockets.NetworkStream.CanRead%2A> para comprobar que la <xref:System.Net.Sockets.NetworkStream> es legible.</span><span class="sxs-lookup"><span data-stu-id="b751b-259">The following code example checks <xref:System.Net.Sockets.NetworkStream.CanRead%2A> to verify that the <xref:System.Net.Sockets.NetworkStream> is readable.</span></span> <span data-ttu-id="b751b-260">A continuación, realiza una operación de lectura en el <xref:System.Net.Sockets.NetworkStream>.</span><span class="sxs-lookup"><span data-stu-id="b751b-260">It then performs a read operation on the <xref:System.Net.Sockets.NetworkStream>.</span></span>  
  
 [!code-cpp[NetworkStream_Synch_SendAndReceive#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CPP/source.cpp#4)]
 [!code-csharp[NetworkStream_Synch_SendAndReceive#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CS/source.cs#4)]
 [!code-vb[NetworkStream_Synch_SendAndReceive#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.Sockets.NetworkStream.Readable" />
        <altmember cref="T:System.IO.FileAccess" />
      </Docs>
    </Member>
    <Member MemberName="CanSeek">
      <MemberSignature Language="C#" Value="public override bool CanSeek { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSeek" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.NetworkStream.CanSeek" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanSeek As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanSeek { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanSeek : bool" Usage="System.Net.Sockets.NetworkStream.CanSeek" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b751b-261">Obtiene un valor que indica si la secuencia admite búsquedas.</span><span class="sxs-lookup"><span data-stu-id="b751b-261">Gets a value that indicates whether the stream supports seeking.</span></span> <span data-ttu-id="b751b-262">Esta propiedad no se admite actualmente. Esta propiedad devuelve siempre <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b751b-262">This property is not currently supported.This property always returns <see langword="false" />.</span></span></summary>
        <value><span data-ttu-id="b751b-263"><see langword="false" /> en todos los casos para indicar que <see cref="T:System.Net.Sockets.NetworkStream" /> no puede buscar una ubicación específica en la secuencia.</span><span class="sxs-lookup"><span data-stu-id="b751b-263"><see langword="false" /> in all cases to indicate that <see cref="T:System.Net.Sockets.NetworkStream" /> cannot seek a specific location in the stream.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanTimeout">
      <MemberSignature Language="C#" Value="public override bool CanTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.NetworkStream.CanTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanTimeout As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanTimeout { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanTimeout : bool" Usage="System.Net.Sockets.NetworkStream.CanTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b751b-264">Indica si las propiedades de tiempo de espera pueden utilizarse para <see cref="T:System.Net.Sockets.NetworkStream" />.</span><span class="sxs-lookup"><span data-stu-id="b751b-264">Indicates whether timeout properties are usable for <see cref="T:System.Net.Sockets.NetworkStream" />.</span></span></summary>
        <value><span data-ttu-id="b751b-265"><see langword="true" /> en todos los casos.</span><span class="sxs-lookup"><span data-stu-id="b751b-265"><see langword="true" /> in all cases.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b751b-266">Esta propiedad está presente porque se heredó de <xref:System.IO.Stream>.</span><span class="sxs-lookup"><span data-stu-id="b751b-266">This property is present because it is inherited from <xref:System.IO.Stream>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanWrite">
      <MemberSignature Language="C#" Value="public override bool CanWrite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanWrite" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.NetworkStream.CanWrite" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanWrite As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanWrite { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanWrite : bool" Usage="System.Net.Sockets.NetworkStream.CanWrite" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b751b-267">Obtiene un valor que indica si <see cref="T:System.Net.Sockets.NetworkStream" /> admite la escritura.</span><span class="sxs-lookup"><span data-stu-id="b751b-267">Gets a value that indicates whether the <see cref="T:System.Net.Sockets.NetworkStream" /> supports writing.</span></span></summary>
        <value><span data-ttu-id="b751b-268">Es <see langword="true" /> si se pueden escribir datos en <see cref="T:System.Net.Sockets.NetworkStream" />; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b751b-268"><see langword="true" /> if data can be written to the <see cref="T:System.Net.Sockets.NetworkStream" />; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="b751b-269">El valor predeterminado es <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="b751b-269">The default value is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b751b-270">Si <xref:System.Net.Sockets.NetworkStream.CanWrite%2A> es `true`, <xref:System.Net.Sockets.NetworkStream> permite las llamadas a la <xref:System.Net.Sockets.NetworkStream.Write%2A> método.</span><span class="sxs-lookup"><span data-stu-id="b751b-270">If <xref:System.Net.Sockets.NetworkStream.CanWrite%2A> is `true`, <xref:System.Net.Sockets.NetworkStream> allows calls to the <xref:System.Net.Sockets.NetworkStream.Write%2A> method.</span></span> <span data-ttu-id="b751b-271">Proporcionar adecuado <xref:System.IO.FileAccess> valor en el constructor para establecer la legibilidad y la escritura de enumerado los <xref:System.Net.Sockets.NetworkStream>.</span><span class="sxs-lookup"><span data-stu-id="b751b-271">Provide the appropriate <xref:System.IO.FileAccess> enumerated value in the constructor to set the readability and writability of the <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="b751b-272">El <xref:System.Net.Sockets.NetworkStream.CanWrite%2A> propiedad se establece cuando el <xref:System.Net.Sockets.NetworkStream> se ha inicializado.</span><span class="sxs-lookup"><span data-stu-id="b751b-272">The <xref:System.Net.Sockets.NetworkStream.CanWrite%2A> property is set when the <xref:System.Net.Sockets.NetworkStream> is initialized.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b751b-273">El siguiente código de ejemplo comprueba <xref:System.Net.Sockets.NetworkStream.CanWrite%2A> para comprobar que la <xref:System.Net.Sockets.NetworkStream> es grabable.</span><span class="sxs-lookup"><span data-stu-id="b751b-273">The following code example checks <xref:System.Net.Sockets.NetworkStream.CanWrite%2A> to verify that the <xref:System.Net.Sockets.NetworkStream> is writable.</span></span> <span data-ttu-id="b751b-274">A continuación, realiza una operación de escritura en el <xref:System.Net.Sockets.NetworkStream>.</span><span class="sxs-lookup"><span data-stu-id="b751b-274">It then performs a write operation on the <xref:System.Net.Sockets.NetworkStream>.</span></span>  
  
 [!code-cpp[NetworkStream_Synch_SendAndReceive#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CPP/source.cpp#3)]
 [!code-csharp[NetworkStream_Synch_SendAndReceive#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CS/source.cs#3)]
 [!code-vb[NetworkStream_Synch_SendAndReceive#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.Sockets.NetworkStream.Writeable" />
        <altmember cref="T:System.IO.FileAccess" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="networkStream.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b751b-275">Cierra el objeto <see cref="T:System.Net.Sockets.NetworkStream" />.</span><span class="sxs-lookup"><span data-stu-id="b751b-275">Closes the <see cref="T:System.Net.Sockets.NetworkStream" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="b751b-276">El `Close` método libera los recursos administrados y no asociados con la <xref:System.Net.Sockets.NetworkStream>.</span><span class="sxs-lookup"><span data-stu-id="b751b-276">The `Close` method frees both unmanaged and managed resources associated with the <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="b751b-277">Si el <xref:System.Net.Sockets.NetworkStream> posee subyacente <xref:System.Net.Sockets.Socket>, también se cierra.</span><span class="sxs-lookup"><span data-stu-id="b751b-277">If the <xref:System.Net.Sockets.NetworkStream> owns the underlying <xref:System.Net.Sockets.Socket>, it is closed as well.</span></span>

<span data-ttu-id="b751b-278">Si un <xref:System.Net.Sockets.NetworkStream> asoció un <xref:System.Net.Sockets.TcpClient>, el `Close` método cerrar la conexión TCP, pero no eliminar asociado <xref:System.Net.Sockets.TcpClient>.</span><span class="sxs-lookup"><span data-stu-id="b751b-278">If a <xref:System.Net.Sockets.NetworkStream> was associated with a <xref:System.Net.Sockets.TcpClient>, the `Close` method will close the TCP connection, but not dispose of the associated <xref:System.Net.Sockets.TcpClient>.</span></span>

## Examples  
<span data-ttu-id="b751b-279">El siguiente código en el ejemplo se cierra el <xref:System.Net.Sockets.NetworkStream>.</span><span class="sxs-lookup"><span data-stu-id="b751b-279">The following code example closes the <xref:System.Net.Sockets.NetworkStream>.</span></span>

```vb
' Example for closing the NetworkStream.
' Close the NetworkStream
myNetworkStream.Close()
```

```csharp
// Example for closing the NetworkStream.

// Close the NetworkStream
myNetworkStream.Close();
```

```cpp
// Example for closing the NetworkStream.
// Close the NetworkStream
myNetworkStream->Close();
```

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close (int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close(int32 timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.Close(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close (timeout As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close(int timeout);" />
      <MemberSignature Language="F#" Value="override this.Close : int -&gt; unit" Usage="networkStream.Close timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="b751b-280">Un entero con signo de 32 bits que especifica el número de milisegundos que se debe esperar para enviar los datos restantes antes de salir.</span><span class="sxs-lookup"><span data-stu-id="b751b-280">A 32-bit signed integer that specifies the number of milliseconds to wait to send any remaining data before closing.</span></span></param>
        <summary><span data-ttu-id="b751b-281">Cierra <see cref="T:System.Net.Sockets.NetworkStream" /> después de esperar el tiempo especificado para permitir que se envíen los datos.</span><span class="sxs-lookup"><span data-stu-id="b751b-281">Closes the <see cref="T:System.Net.Sockets.NetworkStream" /> after waiting the specified time to allow data to be sent.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b751b-282">El <xref:System.Net.Sockets.NetworkStream.Close%2A> método libera los recursos administrados y no asociados con la <xref:System.Net.Sockets.NetworkStream>.</span><span class="sxs-lookup"><span data-stu-id="b751b-282">The <xref:System.Net.Sockets.NetworkStream.Close%2A> method frees both unmanaged and managed resources associated with the <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="b751b-283">Si el <xref:System.Net.Sockets.NetworkStream> posee subyacente <xref:System.Net.Sockets.Socket>, también se cierra.</span><span class="sxs-lookup"><span data-stu-id="b751b-283">If the <xref:System.Net.Sockets.NetworkStream> owns the underlying <xref:System.Net.Sockets.Socket>, it is closed as well.</span></span>  
  
 <span data-ttu-id="b751b-284">Si un <xref:System.Net.Sockets.NetworkStream> asoció un <xref:System.Net.Sockets.TcpClient>, el <xref:System.Net.Sockets.NetworkStream.Close%2A> método cerrar la conexión TCP, pero no eliminar asociado <xref:System.Net.Sockets.TcpClient>.</span><span class="sxs-lookup"><span data-stu-id="b751b-284">If a <xref:System.Net.Sockets.NetworkStream> was associated with a <xref:System.Net.Sockets.TcpClient>, the <xref:System.Net.Sockets.NetworkStream.Close%2A> method will close the TCP connection, but not dispose of the associated <xref:System.Net.Sockets.TcpClient>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b751b-285">El parámetro <paramref name="timeout" /> es menor que -1.</span><span class="sxs-lookup"><span data-stu-id="b751b-285">The <paramref name="timeout" /> parameter is less than -1.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DataAvailable">
      <MemberSignature Language="C#" Value="public virtual bool DataAvailable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DataAvailable" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.NetworkStream.DataAvailable" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DataAvailable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool DataAvailable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.DataAvailable : bool" Usage="System.Net.Sockets.NetworkStream.DataAvailable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b751b-286">Obtiene un valor que indica si hay datos disponibles en <see cref="T:System.Net.Sockets.NetworkStream" /> para su lectura.</span><span class="sxs-lookup"><span data-stu-id="b751b-286">Gets a value that indicates whether data is available on the <see cref="T:System.Net.Sockets.NetworkStream" /> to be read.</span></span></summary>
        <value><span data-ttu-id="b751b-287"><see langword="true" /> si hay datos que leer en la secuencia; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b751b-287"><see langword="true" /> if data is available on the stream to be read; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b751b-288">Use el <xref:System.Net.Sockets.NetworkStream.DataAvailable%2A> propiedad para determinar si los datos están listos para leerse.</span><span class="sxs-lookup"><span data-stu-id="b751b-288">Use the <xref:System.Net.Sockets.NetworkStream.DataAvailable%2A> property to determine if data is ready to be read.</span></span> <span data-ttu-id="b751b-289">Si <xref:System.Net.Sockets.NetworkStream.DataAvailable%2A> es `true`, una llamada a <xref:System.Net.Sockets.NetworkStream.Read%2A> devuelve inmediatamente.</span><span class="sxs-lookup"><span data-stu-id="b751b-289">If <xref:System.Net.Sockets.NetworkStream.DataAvailable%2A> is `true`, a call to <xref:System.Net.Sockets.NetworkStream.Read%2A> returns immediately.</span></span> <span data-ttu-id="b751b-290">Si el host remoto se apaga o cierra la conexión, <xref:System.Net.Sockets.NetworkStream.DataAvailable%2A> puede producir un <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="b751b-290">If the remote host shuts down or closes the connection, <xref:System.Net.Sockets.NetworkStream.DataAvailable%2A> may throw a <xref:System.Net.Sockets.SocketException>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b751b-291">El ejemplo de código siguiente lee el <xref:System.Net.Sockets.NetworkStream> siempre y cuando los datos están disponibles.</span><span class="sxs-lookup"><span data-stu-id="b751b-291">The following code example reads from the <xref:System.Net.Sockets.NetworkStream> as long as data is available.</span></span>  
  
 [!code-cpp[NetworkStream_Synch_SendAndReceive#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CPP/source.cpp#4)]
 [!code-csharp[NetworkStream_Synch_SendAndReceive#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CS/source.cs#4)]
 [!code-vb[NetworkStream_Synch_SendAndReceive#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="b751b-292">La clase <see cref="T:System.Net.Sockets.NetworkStream" /> está cerrada.</span><span class="sxs-lookup"><span data-stu-id="b751b-292">The <see cref="T:System.Net.Sockets.NetworkStream" /> is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="b751b-293">El elemento <see cref="T:System.Net.Sockets.Socket" /> subyacente está cerrado.</span><span class="sxs-lookup"><span data-stu-id="b751b-293">The underlying <see cref="T:System.Net.Sockets.Socket" /> is closed.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="b751b-294">Use la propiedad <see cref="P:System.Net.Sockets.SocketException.ErrorCode" /> para obtener el código de error concreto y consulte la documentación de <see href="/windows/desktop/winsock/windows-sockets-error-codes-2">códigos de error de la API de Windows Sockets, versión 2</see>, para ver una descripción detallada del error.</span><span class="sxs-lookup"><span data-stu-id="b751b-294">Use the <see cref="P:System.Net.Sockets.SocketException.ErrorCode" /> property to obtain the specific error code and refer to the <see href="/windows/desktop/winsock/windows-sockets-error-codes-2">Windows Sockets version 2 API error code</see> documentation for a detailed description of the error.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="networkStream.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="b751b-295">Es <see langword="true" /> para liberar tanto recursos administrados como no administrados; es <see langword="false" /> para liberar únicamente recursos no administrados.</span><span class="sxs-lookup"><span data-stu-id="b751b-295"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="b751b-296">Libera los recursos no administrados que usa <see cref="T:System.Net.Sockets.NetworkStream" /> y, de forma opcional, libera los recursos administrados.</span><span class="sxs-lookup"><span data-stu-id="b751b-296">Releases the unmanaged resources used by the <see cref="T:System.Net.Sockets.NetworkStream" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b751b-297">Este método se llama por el público `Dispose` método y el <xref:System.Object.Finalize%2A> método.</span><span class="sxs-lookup"><span data-stu-id="b751b-297">This method is called by the public `Dispose` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="b751b-298">`Dispose` invoca el protegido `Dispose(Boolean)` método con el `disposing` parámetro establecido en `true`.</span><span class="sxs-lookup"><span data-stu-id="b751b-298">`Dispose` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="b751b-299"><xref:System.Object.Finalize%2A> invoca `Dispose` con `disposing` establecido en `false`.</span><span class="sxs-lookup"><span data-stu-id="b751b-299"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="b751b-300">Cuando el parámetro `disposing` es `true`, este método libera todos los recursos retenidos por los objetos administrados a los que el control <xref:System.Net.Sockets.NetworkStream> hace referencia.</span><span class="sxs-lookup"><span data-stu-id="b751b-300">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Net.Sockets.NetworkStream> references.</span></span> <span data-ttu-id="b751b-301">Este método invoca al método `Dispose` de cada uno de los objetos a los que se hace referencia.</span><span class="sxs-lookup"><span data-stu-id="b751b-301">This method invokes the `Dispose` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="b751b-302">
            <see langword="Dispose" /> puede recibir varias llamadas de otros objetos.</span><span class="sxs-lookup"><span data-stu-id="b751b-302">
            <see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="b751b-303">Al invalidar <see langword="Dispose(Boolean)" />, tenga cuidado de no hacer referencia a objetos que se hayan eliminado en una llamada anterior a <see langword="Dispose" />.</span><span class="sxs-lookup"><span data-stu-id="b751b-303">When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="b751b-304">Para obtener más información sobre cómo implementar <see langword="Dispose(Boolean)" />, consulte [implementar un método Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="b751b-304">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
<span data-ttu-id="b751b-305">Para obtener más información acerca de <see langword="Dispose" /> y <see cref="M:System.Object.Finalize" />, consulte [limpiar recursos no administrados](~/docs/standard/garbage-collection/unmanaged.md) y [reemplazar el método Finalize](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span><span class="sxs-lookup"><span data-stu-id="b751b-305">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="EndRead">
      <MemberSignature Language="C#" Value="public override int EndRead (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 EndRead(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.EndRead(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function EndRead (asyncResult As IAsyncResult) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int EndRead(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="override this.EndRead : IAsyncResult -&gt; int" Usage="networkStream.EndRead asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="b751b-306">Elemento <see cref="T:System.IAsyncResult" /> que representa la llamada asincrónica.</span><span class="sxs-lookup"><span data-stu-id="b751b-306">An <see cref="T:System.IAsyncResult" /> that represents an asynchronous call.</span></span></param>
        <summary><span data-ttu-id="b751b-307">Controla el final de una lectura asincrónica.</span><span class="sxs-lookup"><span data-stu-id="b751b-307">Handles the end of an asynchronous read.</span></span></summary>
        <returns><span data-ttu-id="b751b-308">Número de bytes leídos de <see cref="T:System.Net.Sockets.NetworkStream" />.</span><span class="sxs-lookup"><span data-stu-id="b751b-308">The number of bytes read from the <see cref="T:System.Net.Sockets.NetworkStream" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b751b-309">El <xref:System.Net.Sockets.NetworkStream.EndRead%2A> método completa la operación de lectura asincrónica iniciada el <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> método.</span><span class="sxs-lookup"><span data-stu-id="b751b-309">The <xref:System.Net.Sockets.NetworkStream.EndRead%2A> method completes the asynchronous read operation started in the <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method.</span></span>  
  
 <span data-ttu-id="b751b-310">Antes de llamar a <xref:System.Net.Sockets.NetworkStream.BeginRead%2A>, deberá crear un método de devolución de llamada que implementa el <xref:System.AsyncCallback> delegar.</span><span class="sxs-lookup"><span data-stu-id="b751b-310">Before calling <xref:System.Net.Sockets.NetworkStream.BeginRead%2A>, you need to create a callback method that implements the <xref:System.AsyncCallback> delegate.</span></span> <span data-ttu-id="b751b-311">Este método de devolución de llamada se ejecuta en un subproceso independiente y es llamado por el sistema después de <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> devuelve.</span><span class="sxs-lookup"><span data-stu-id="b751b-311">This callback method executes in a separate thread and is called by the system after <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> returns.</span></span> <span data-ttu-id="b751b-312">El método de devolución de llamada debe aceptar el <xref:System.IAsyncResult> devuelto desde el <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> método como parámetro.</span><span class="sxs-lookup"><span data-stu-id="b751b-312">The callback method must accept the <xref:System.IAsyncResult> returned from the <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method as a parameter.</span></span>  
  
 <span data-ttu-id="b751b-313">Dentro del método de devolución de llamada, llame a la <xref:System.IAsyncResult.AsyncState%2A> propiedad de la <xref:System.IAsyncResult> para obtener el objeto de estado pasado a la <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> método.</span><span class="sxs-lookup"><span data-stu-id="b751b-313">Within the callback method, call the <xref:System.IAsyncResult.AsyncState%2A> property of the <xref:System.IAsyncResult> to obtain the state object passed to the <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method.</span></span> <span data-ttu-id="b751b-314">Extraer la recepción <xref:System.Net.Sockets.NetworkStream> de este objeto de estado.</span><span class="sxs-lookup"><span data-stu-id="b751b-314">Extract the receiving <xref:System.Net.Sockets.NetworkStream> from this state object.</span></span> <span data-ttu-id="b751b-315">Después de obtener el <xref:System.Net.Sockets.NetworkStream>, llame a la <xref:System.Net.Sockets.NetworkStream.EndRead%2A> método para completar la operación de lectura y devolver el número de bytes leídos correctamente.</span><span class="sxs-lookup"><span data-stu-id="b751b-315">After obtaining the <xref:System.Net.Sockets.NetworkStream>, call the <xref:System.Net.Sockets.NetworkStream.EndRead%2A> method to successfully complete the read operation and return the number of bytes read.</span></span>  
  
 <span data-ttu-id="b751b-316">El <xref:System.Net.Sockets.NetworkStream.EndRead%2A> método se bloquea hasta que haya datos disponibles.</span><span class="sxs-lookup"><span data-stu-id="b751b-316">The <xref:System.Net.Sockets.NetworkStream.EndRead%2A> method blocks until data is available.</span></span> <span data-ttu-id="b751b-317">El <xref:System.Net.Sockets.NetworkStream.EndRead%2A> método lee todos los datos que está disponible hasta el número de bytes especificado en el `size` parámetro de la <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> método.</span><span class="sxs-lookup"><span data-stu-id="b751b-317">The <xref:System.Net.Sockets.NetworkStream.EndRead%2A> method reads as much data as is available up to the number of bytes specified in the `size` parameter of the <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method.</span></span> <span data-ttu-id="b751b-318">Si el host remoto se apaga el <xref:System.Net.Sockets.Socket> se ha recibido la conexión y todos los datos disponibles, el <xref:System.Net.Sockets.NetworkStream.EndRead%2A> método se completa inmediatamente y devuelve cero bytes.</span><span class="sxs-lookup"><span data-stu-id="b751b-318">If the remote host shuts down the <xref:System.Net.Sockets.Socket> connection and all available data has been received, the <xref:System.Net.Sockets.NetworkStream.EndRead%2A> method completes immediately and returns zero bytes.</span></span>  
  
 <span data-ttu-id="b751b-319">Para obtener los datos recibidos, llame a la <xref:System.IAsyncResult.AsyncState%2A> propiedad de la <xref:System.IAsyncResult>y extraiga el búfer que contiene el objeto de estado resultante.</span><span class="sxs-lookup"><span data-stu-id="b751b-319">To obtain the received data, call the <xref:System.IAsyncResult.AsyncState%2A> property of the <xref:System.IAsyncResult>, and extract the buffer contained in the resulting state object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b751b-320">Si recibe un <xref:System.IO.IOException>, compruebe la <xref:System.Exception.InnerException%2A> propiedad para determinar si ha ocasionado un <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="b751b-320">If you receive an <xref:System.IO.IOException>, check the <xref:System.Exception.InnerException%2A> property to determine if it was caused by a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="b751b-321">Si es así, use el <xref:System.Net.Sockets.SocketException.ErrorCode%2A> propiedad para obtener el código de error concreto y consulte la [código de error de API de la versión 2 de Windows Sockets](/windows/desktop/winsock/windows-sockets-error-codes-2) documentación para obtener una descripción detallada del error.</span><span class="sxs-lookup"><span data-stu-id="b751b-321">If so, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A> property to obtain the specific error code and refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b751b-322">En el ejemplo de código siguiente, `myReadCallback` se proporciona para <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> como método de devolución de llamada.</span><span class="sxs-lookup"><span data-stu-id="b751b-322">In the following code example, `myReadCallback` is provided to <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> as the callback method.</span></span> <span data-ttu-id="b751b-323"><xref:System.Net.Sockets.NetworkStream.EndRead%2A> se implementa en `myReadCallback` completar la asincrónica lee llamada iniciada por <xref:System.Net.Sockets.NetworkStream.BeginRead%2A>.</span><span class="sxs-lookup"><span data-stu-id="b751b-323"><xref:System.Net.Sockets.NetworkStream.EndRead%2A> is implemented in `myReadCallback` to complete the asynchronous read call started by <xref:System.Net.Sockets.NetworkStream.BeginRead%2A>.</span></span>  
  
 [!code-cpp[NetworkStream_Async_SendAndReceive#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/CPP/source.cpp#5)]
 [!code-csharp[NetworkStream_Async_SendAndReceive#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/CS/source.cs#5)]
 [!code-vb[NetworkStream_Async_SendAndReceive#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/VB/source.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b751b-324">El parámetro <paramref name="asyncResult" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b751b-324">The <paramref name="asyncResult" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="b751b-325">El elemento <see cref="T:System.Net.Sockets.Socket" /> subyacente está cerrado.</span><span class="sxs-lookup"><span data-stu-id="b751b-325">The underlying <see cref="T:System.Net.Sockets.Socket" /> is closed.</span></span>  
  
<span data-ttu-id="b751b-326">O bien</span><span class="sxs-lookup"><span data-stu-id="b751b-326">-or-</span></span> 
<span data-ttu-id="b751b-327">Se produjo un error al acceder al socket.</span><span class="sxs-lookup"><span data-stu-id="b751b-327">An error occurred when accessing the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="b751b-328">La clase <see cref="T:System.Net.Sockets.NetworkStream" /> está cerrada.</span><span class="sxs-lookup"><span data-stu-id="b751b-328">The <see cref="T:System.Net.Sockets.NetworkStream" /> is closed.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.NetworkStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="EndWrite">
      <MemberSignature Language="C#" Value="public override void EndWrite (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void EndWrite(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.EndWrite(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub EndWrite (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void EndWrite(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="override this.EndWrite : IAsyncResult -&gt; unit" Usage="networkStream.EndWrite asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="b751b-329">Ellemento <see cref="T:System.IAsyncResult" /> que representa la llamada asincrónica.</span><span class="sxs-lookup"><span data-stu-id="b751b-329">The <see cref="T:System.IAsyncResult" /> that represents the asynchronous call.</span></span></param>
        <summary><span data-ttu-id="b751b-330">Controla el final de una escritura asincrónica.</span><span class="sxs-lookup"><span data-stu-id="b751b-330">Handles the end of an asynchronous write.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b751b-331"><xref:System.Net.Sockets.NetworkStream.EndWrite%2A> finaliza la operación de envío asincrónica iniciada <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A>.</span><span class="sxs-lookup"><span data-stu-id="b751b-331"><xref:System.Net.Sockets.NetworkStream.EndWrite%2A> completes the asynchronous send operation started in <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A>.</span></span>  
  
 <span data-ttu-id="b751b-332">Antes de llamar a <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A>, deberá crear un método de devolución de llamada que implementa el <xref:System.AsyncCallback> delegar.</span><span class="sxs-lookup"><span data-stu-id="b751b-332">Before calling <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A>, you need to create a callback method that implements the <xref:System.AsyncCallback> delegate.</span></span> <span data-ttu-id="b751b-333">Este método de devolución de llamada se ejecuta en un subproceso independiente y es llamado por el sistema después de <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> devuelve.</span><span class="sxs-lookup"><span data-stu-id="b751b-333">This callback method executes in a separate thread and is called by the system after <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> returns.</span></span> <span data-ttu-id="b751b-334">El método de devolución de llamada debe aceptar el <xref:System.IAsyncResult> devuelto desde el <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> método como parámetro.</span><span class="sxs-lookup"><span data-stu-id="b751b-334">The callback method must accept the <xref:System.IAsyncResult> returned from the <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> method as a parameter.</span></span>  
  
 <span data-ttu-id="b751b-335">Dentro del método de devolución de llamada, llame a la <xref:System.IAsyncResult.AsyncState%2A> propiedad de la `IAsyncResult` parámetro para obtener el <xref:System.Net.Sockets.NetworkStream>.</span><span class="sxs-lookup"><span data-stu-id="b751b-335">Within the callback method, call the <xref:System.IAsyncResult.AsyncState%2A> property of the `IAsyncResult` parameter to obtain the <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="b751b-336">Después de obtener el <xref:System.Net.Sockets.NetworkStream>, puede llamar a la <xref:System.Net.Sockets.NetworkStream.EndWrite%2A> método para completar la operación de envío y devolver el número de bytes enviados correctamente.</span><span class="sxs-lookup"><span data-stu-id="b751b-336">After obtaining the <xref:System.Net.Sockets.NetworkStream>, you can call the <xref:System.Net.Sockets.NetworkStream.EndWrite%2A> method to successfully complete the send operation and return the number of bytes sent.</span></span>  
  
 <span data-ttu-id="b751b-337">El <xref:System.Net.Sockets.NetworkStream.EndWrite%2A> método se bloquea hasta que se envía el número de bytes solicitado.</span><span class="sxs-lookup"><span data-stu-id="b751b-337">The <xref:System.Net.Sockets.NetworkStream.EndWrite%2A> method blocks until the requested number of bytes are sent.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b751b-338">Si recibe un <xref:System.IO.IOException>, compruebe la <xref:System.Exception.InnerException%2A> propiedad para determinar si ha ocasionado un <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="b751b-338">If you receive an <xref:System.IO.IOException>, check the <xref:System.Exception.InnerException%2A> property to determine if it was caused by a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="b751b-339">Si es así, use el <xref:System.Net.Sockets.SocketException.ErrorCode%2A> propiedad para obtener el código de error concreto y consulte la [código de error de API de la versión 2 de Windows Sockets](/windows/desktop/winsock/windows-sockets-error-codes-2) documentación para obtener una descripción detallada del error.</span><span class="sxs-lookup"><span data-stu-id="b751b-339">If so, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A> property to obtain the specific error code and refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b751b-340">En el ejemplo de código siguiente, `myWriteCallback` se proporciona para <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> como método de devolución de llamada.</span><span class="sxs-lookup"><span data-stu-id="b751b-340">In the following code example, `myWriteCallback` is provided to <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> as the callback method.</span></span> <span data-ttu-id="b751b-341"><xref:System.Net.Sockets.NetworkStream.EndWrite%2A> se implementa en `myWriteCallback` para completar la llamada de escritura asincrónica iniciada por <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A>.</span><span class="sxs-lookup"><span data-stu-id="b751b-341"><xref:System.Net.Sockets.NetworkStream.EndWrite%2A> is implemented in `myWriteCallback` to complete the asynchronous write call started by <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A>.</span></span>  
  
 [!code-cpp[NetworkStream_Async_SendAndReceive#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/CPP/source.cpp#4)]
 [!code-csharp[NetworkStream_Async_SendAndReceive#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/CS/source.cs#4)]
 [!code-vb[NetworkStream_Async_SendAndReceive#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b751b-342">El parámetro <paramref name="asyncResult" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b751b-342">The <paramref name="asyncResult" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="b751b-343">El elemento <see cref="T:System.Net.Sockets.Socket" /> subyacente está cerrado.</span><span class="sxs-lookup"><span data-stu-id="b751b-343">The underlying <see cref="T:System.Net.Sockets.Socket" /> is closed.</span></span>  
  
<span data-ttu-id="b751b-344">O bien</span><span class="sxs-lookup"><span data-stu-id="b751b-344">-or-</span></span> 
<span data-ttu-id="b751b-345">Se produjo un error al escribir en la red.</span><span class="sxs-lookup"><span data-stu-id="b751b-345">An error occurred while writing to the network.</span></span>  
  
<span data-ttu-id="b751b-346">O bien</span><span class="sxs-lookup"><span data-stu-id="b751b-346">-or-</span></span> 
<span data-ttu-id="b751b-347">Se produjo un error al acceder al socket.</span><span class="sxs-lookup"><span data-stu-id="b751b-347">An error occurred when accessing the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="b751b-348">La clase <see cref="T:System.Net.Sockets.NetworkStream" /> está cerrada.</span><span class="sxs-lookup"><span data-stu-id="b751b-348">The <see cref="T:System.Net.Sockets.NetworkStream" /> is closed.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.NetworkStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~NetworkStream ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!NetworkStream ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="networkStream.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b751b-349">Libera todos los recursos que usa <see cref="T:System.Net.Sockets.NetworkStream" />.</span><span class="sxs-lookup"><span data-stu-id="b751b-349">Releases all resources used by the <see cref="T:System.Net.Sockets.NetworkStream" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b751b-350">Este método invalida <xref:System.Object.Finalize%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="b751b-350">This method overrides <xref:System.Object.Finalize%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="b751b-351">Código de la aplicación no debe llamar a este método; un objeto <xref:System.Object.Finalize%2A> método se invoca automáticamente durante la recolección de elementos no utilizados, a menos que se ha deshabilitado la finalización por el recolector de elementos no utilizados mediante una llamada a la <xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="b751b-351">Application code should not call this method; an object's <xref:System.Object.Finalize%2A> method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="b751b-352">Para obtener más información acerca de cómo utilizar el método Finalize, vea [métodos de finalización y destructores](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/0s71x931(v%3dvs.100)), [limpiar recursos no administrados](~/docs/standard/garbage-collection/unmanaged.md), y [reemplazar el método Finalize](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)) .</span><span class="sxs-lookup"><span data-stu-id="b751b-352">For more information about using the Finalize method, see [Finalize Methods and Destructors](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/0s71x931(v%3dvs.100)), [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md), and [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberSignature Language="F#" Value="override this.Flush : unit -&gt; unit" Usage="networkStream.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b751b-353">Vacía los datos de la secuencia.</span><span class="sxs-lookup"><span data-stu-id="b751b-353">Flushes data from the stream.</span></span> <span data-ttu-id="b751b-354">Este método está reservado para un uso futuro.</span><span class="sxs-lookup"><span data-stu-id="b751b-354">This method is reserved for future use.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b751b-355">El <xref:System.Net.Sockets.NetworkStream.Flush%2A> método implementa el <xref:System.IO.Stream.Flush%2A?displayProperty=nameWithType> método; sin embargo, dado que <xref:System.Net.Sockets.NetworkStream> no es almacenar en búfer, no tiene ningún efecto en las secuencias de red.</span><span class="sxs-lookup"><span data-stu-id="b751b-355">The <xref:System.Net.Sockets.NetworkStream.Flush%2A> method implements the <xref:System.IO.Stream.Flush%2A?displayProperty=nameWithType> method; however, because <xref:System.Net.Sockets.NetworkStream> is not buffered, it has no effect on network streams.</span></span> <span data-ttu-id="b751b-356">Una llamada a la <xref:System.Net.Sockets.NetworkStream.Flush%2A> método no produce una excepción.</span><span class="sxs-lookup"><span data-stu-id="b751b-356">Calling the <xref:System.Net.Sockets.NetworkStream.Flush%2A> method does not throw an exception.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FlushAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task FlushAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task FlushAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.FlushAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ FlushAsync(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.FlushAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="networkStream.FlushAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"><span data-ttu-id="b751b-357">Token de cancelación que se usa para propagar la notificación de que se debería cancelar esta operación.</span><span class="sxs-lookup"><span data-stu-id="b751b-357">A cancellation token used to propagate notification that this  operation should be canceled.</span></span></param>
        <summary><span data-ttu-id="b751b-358">Vacía los datos de la secuencia como una operación asincrónica.</span><span class="sxs-lookup"><span data-stu-id="b751b-358">Flushes data from the stream as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="b751b-359">Objeto de tarea que representa la operación asincrónica.</span><span class="sxs-lookup"><span data-stu-id="b751b-359">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b751b-360">Esta operación no se bloqueará.</span><span class="sxs-lookup"><span data-stu-id="b751b-360">This operation will not block.</span></span> <span data-ttu-id="b751b-361">El valor devuelto <xref:System.Threading.Tasks.Task> objeto se completará después de que se ha vaciado los datos de la secuencia de la <xref:System.Net.Sockets.NetworkStream> instancia.</span><span class="sxs-lookup"><span data-stu-id="b751b-361">The returned <xref:System.Threading.Tasks.Task> object will complete after data has been flushed from the stream for the <xref:System.Net.Sockets.NetworkStream> instance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public override long Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Length" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.NetworkStream.Length" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Length As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Length { long get(); };" />
      <MemberSignature Language="F#" Value="member this.Length : int64" Usage="System.Net.Sockets.NetworkStream.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b751b-362">Obtiene la longitud de los datos disponibles en la secuencia.</span><span class="sxs-lookup"><span data-stu-id="b751b-362">Gets the length of the data available on the stream.</span></span> <span data-ttu-id="b751b-363">Esta propiedad no se admite actualmente y siempre produce una excepción <see cref="T:System.NotSupportedException" />.</span><span class="sxs-lookup"><span data-stu-id="b751b-363">This property is not currently supported and always throws a <see cref="T:System.NotSupportedException" />.</span></span></summary>
        <value><span data-ttu-id="b751b-364">Longitud de los datos disponibles en la secuencia.</span><span class="sxs-lookup"><span data-stu-id="b751b-364">The length of the data available on the stream.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="b751b-365">Cualquier uso de esta propiedad.</span><span class="sxs-lookup"><span data-stu-id="b751b-365">Any use of this property.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public override long Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Position" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.NetworkStream.Position" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Position As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Position { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.Position : int64 with get, set" Usage="System.Net.Sockets.NetworkStream.Position" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b751b-366">Obtiene o establece la posición actual en la secuencia.</span><span class="sxs-lookup"><span data-stu-id="b751b-366">Gets or sets the current position in the stream.</span></span> <span data-ttu-id="b751b-367">Esta propiedad no se admite actualmente y siempre produce una excepción <see cref="T:System.NotSupportedException" />.</span><span class="sxs-lookup"><span data-stu-id="b751b-367">This property is not currently supported and always throws a <see cref="T:System.NotSupportedException" />.</span></span></summary>
        <value><span data-ttu-id="b751b-368">La posición actual en la secuencia.</span><span class="sxs-lookup"><span data-stu-id="b751b-368">The current position in the stream.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="b751b-369">Cualquier uso de esta propiedad.</span><span class="sxs-lookup"><span data-stu-id="b751b-369">Any use of this property.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override int Read (Span&lt;byte&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read(valuetype System.Span`1&lt;unsigned int8&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.Read(System.Span{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read (buffer As Span(Of Byte)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Read(Span&lt;System::Byte&gt; buffer);" />
      <MemberSignature Language="F#" Value="override this.Read : Span&lt;byte&gt; -&gt; int" Usage="networkStream.Read buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Span&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override int Read (byte[] buffer, int offset, int size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read([out] unsigned int8[] buffer, int32 offset, int32 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read (buffer As Byte(), offset As Integer, size As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Read(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int size);" />
      <MemberSignature Language="F#" Value="override this.Read : byte[] * int * int -&gt; int" Usage="networkStream.Read (buffer, offset, size)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="size" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="b751b-370">Matriz de tipo <see cref="T:System.Byte" /> que corresponde a la ubicación de la memoria donde se almacenan los datos leídos de <see cref="T:System.Net.Sockets.NetworkStream" />.</span><span class="sxs-lookup"><span data-stu-id="b751b-370">An array of type <see cref="T:System.Byte" /> that is the location in memory to store data read from the <see cref="T:System.Net.Sockets.NetworkStream" />.</span></span></param>
        <param name="offset"><span data-ttu-id="b751b-371">Ubicación de <paramref name="buffer" /> donde se inicia el almacenamiento de los datos.</span><span class="sxs-lookup"><span data-stu-id="b751b-371">The location in <paramref name="buffer" /> to begin storing the data to.</span></span></param>
        <param name="size"><span data-ttu-id="b751b-372">Número de bytes que se va a leer de <see cref="T:System.Net.Sockets.NetworkStream" />.</span><span class="sxs-lookup"><span data-stu-id="b751b-372">The number of bytes to read from the <see cref="T:System.Net.Sockets.NetworkStream" />.</span></span></param>
        <summary><span data-ttu-id="b751b-373">Lee datos de <see cref="T:System.Net.Sockets.NetworkStream" />.</span><span class="sxs-lookup"><span data-stu-id="b751b-373">Reads data from the <see cref="T:System.Net.Sockets.NetworkStream" />.</span></span></summary>
        <returns><span data-ttu-id="b751b-374">Número de bytes leídos de <see cref="T:System.Net.Sockets.NetworkStream" />, o 0 si el socket está cerrado.</span><span class="sxs-lookup"><span data-stu-id="b751b-374">The number of bytes read from the <see cref="T:System.Net.Sockets.NetworkStream" />, or 0 if the socket is closed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b751b-375">Este método lee los datos en el `buffer` parámetro y devuelve el número de bytes leídos correctamente.</span><span class="sxs-lookup"><span data-stu-id="b751b-375">This method reads data into the `buffer` parameter and returns the number of bytes successfully read.</span></span> <span data-ttu-id="b751b-376">Si se cierra el socket, el <xref:System.Net.Sockets.NetworkStream.Read%2A> método devuelve 0.</span><span class="sxs-lookup"><span data-stu-id="b751b-376">If the socket is closed, the <xref:System.Net.Sockets.NetworkStream.Read%2A> method returns 0.</span></span> <span data-ttu-id="b751b-377">El <xref:System.Net.Sockets.NetworkStream.Read%2A> operación lee todos los datos estén disponibles, hasta el número de bytes especificado por el `size` parámetro.</span><span class="sxs-lookup"><span data-stu-id="b751b-377">The <xref:System.Net.Sockets.NetworkStream.Read%2A> operation reads as much data as is available, up to the number of bytes specified by the `size` parameter.</span></span> <span data-ttu-id="b751b-378">Si el host remoto se cierra la conexión y se ha recibido todos los datos disponibles, el <xref:System.Net.Sockets.NetworkStream.Read%2A> método se completa inmediatamente y devolverá cero bytes.</span><span class="sxs-lookup"><span data-stu-id="b751b-378">If the remote host shuts down the connection, and all available data has been received, the <xref:System.Net.Sockets.NetworkStream.Read%2A> method completes immediately and return zero bytes.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b751b-379">Compruebe si el <xref:System.Net.Sockets.NetworkStream> es legible mediante una llamada a la <xref:System.Net.Sockets.NetworkStream.CanRead%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="b751b-379">Check to see if the <xref:System.Net.Sockets.NetworkStream> is readable by calling the <xref:System.Net.Sockets.NetworkStream.CanRead%2A> property.</span></span> <span data-ttu-id="b751b-380">Si se intenta leer desde un <xref:System.Net.Sockets.NetworkStream> que no es legible, obtendrá un <xref:System.IO.IOException>.</span><span class="sxs-lookup"><span data-stu-id="b751b-380">If you attempt to read from a <xref:System.Net.Sockets.NetworkStream> that is not readable, you will get an <xref:System.IO.IOException>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b751b-381">Si recibe un <xref:System.IO.IOException>, compruebe la <xref:System.Exception.InnerException%2A> propiedad para determinar si ha ocasionado un <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="b751b-381">If you receive an <xref:System.IO.IOException>, check the <xref:System.Exception.InnerException%2A> property to determine if it was caused by a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="b751b-382">Si es así, use el <xref:System.Net.Sockets.SocketException.ErrorCode%2A> propiedad para obtener el código de error concreto y consulte la [código de error de API de la versión 2 de Windows Sockets](/windows/desktop/winsock/windows-sockets-error-codes-2) documentación para obtener una descripción detallada del error.</span><span class="sxs-lookup"><span data-stu-id="b751b-382">If so, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A> property to obtain the specific error code and refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b751b-383">El siguiente ejemplo de código utiliza <xref:System.Net.Sockets.NetworkStream.DataAvailable%2A> para determinar si los datos están disponibles para su lectura.</span><span class="sxs-lookup"><span data-stu-id="b751b-383">The following code example uses <xref:System.Net.Sockets.NetworkStream.DataAvailable%2A> to determine if data is available to be read.</span></span> <span data-ttu-id="b751b-384">Si hay datos disponibles, lee el <xref:System.Net.Sockets.NetworkStream>.</span><span class="sxs-lookup"><span data-stu-id="b751b-384">If data is available, it reads from the <xref:System.Net.Sockets.NetworkStream>.</span></span>  
  
 [!code-cpp[NetworkStream_Synch_SendAndReceive#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CPP/source.cpp#4)]
 [!code-csharp[NetworkStream_Synch_SendAndReceive#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CS/source.cs#4)]
 [!code-vb[NetworkStream_Synch_SendAndReceive#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b751b-385">El parámetro <paramref name="buffer" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b751b-385">The <paramref name="buffer" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b751b-386">El parámetro <paramref name="offset" /> es menor que 0.</span><span class="sxs-lookup"><span data-stu-id="b751b-386">The <paramref name="offset" /> parameter is less than 0.</span></span>  
  
<span data-ttu-id="b751b-387">O bien</span><span class="sxs-lookup"><span data-stu-id="b751b-387">-or-</span></span> 
<span data-ttu-id="b751b-388">El parámetro <paramref name="offset" /> es mayor que la longitud de <paramref name="buffer" />.</span><span class="sxs-lookup"><span data-stu-id="b751b-388">The <paramref name="offset" /> parameter is greater than the length of <paramref name="buffer" />.</span></span>  
  
<span data-ttu-id="b751b-389">O bien</span><span class="sxs-lookup"><span data-stu-id="b751b-389">-or-</span></span> 
<span data-ttu-id="b751b-390">El parámetro <paramref name="size" /> es menor que 0.</span><span class="sxs-lookup"><span data-stu-id="b751b-390">The <paramref name="size" /> parameter is less than 0.</span></span>  
  
<span data-ttu-id="b751b-391">O bien</span><span class="sxs-lookup"><span data-stu-id="b751b-391">-or-</span></span> 
<span data-ttu-id="b751b-392">El parámetro <paramref name="size" /> es mayor que la longitud de <paramref name="buffer" /> menos el valor del parámetro <paramref name="offset" />.</span><span class="sxs-lookup"><span data-stu-id="b751b-392">The <paramref name="size" /> parameter is greater than the length of <paramref name="buffer" /> minus the value of the <paramref name="offset" /> parameter.</span></span>  
  
<span data-ttu-id="b751b-393">O bien</span><span class="sxs-lookup"><span data-stu-id="b751b-393">-or-</span></span> 
<span data-ttu-id="b751b-394">Se produjo un error al acceder al socket.</span><span class="sxs-lookup"><span data-stu-id="b751b-394">An error occurred when accessing the socket.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="b751b-395">El elemento <see cref="T:System.Net.Sockets.Socket" /> subyacente está cerrado.</span><span class="sxs-lookup"><span data-stu-id="b751b-395">The underlying <see cref="T:System.Net.Sockets.Socket" /> is closed.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="b751b-396">La clase <see cref="T:System.Net.Sockets.NetworkStream" /> está cerrada.</span><span class="sxs-lookup"><span data-stu-id="b751b-396">The <see cref="T:System.Net.Sockets.NetworkStream" /> is closed.</span></span>  
  
<span data-ttu-id="b751b-397">O bien</span><span class="sxs-lookup"><span data-stu-id="b751b-397">-or-</span></span> 
<span data-ttu-id="b751b-398">Se ha producido un error al leer de la red.</span><span class="sxs-lookup"><span data-stu-id="b751b-398">There is a failure reading from the network.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.Socket.Receive(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags)" />
        <altmember cref="P:System.Net.Sockets.NetworkStream.DataAvailable" />
        <altmember cref="P:System.Net.Sockets.NetworkStream.CanRead" />
        <related type="Article" href="~/docs/framework/network-programming/using-streams-on-the-network.md"><span data-ttu-id="b751b-399">Usar flujos en la red</span><span class="sxs-lookup"><span data-stu-id="b751b-399">Using Streams on the Network</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Readable">
      <MemberSignature Language="C#" Value="protected bool Readable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Readable" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.NetworkStream.Readable" />
      <MemberSignature Language="VB.NET" Value="Protected Property Readable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool Readable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Readable : bool with get, set" Usage="System.Net.Sockets.NetworkStream.Readable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b751b-400">Obtiene o establece un valor que indica si <see cref="T:System.Net.Sockets.NetworkStream" /> admite la lectura.</span><span class="sxs-lookup"><span data-stu-id="b751b-400">Gets or sets a value that indicates whether the <see cref="T:System.Net.Sockets.NetworkStream" /> can be read.</span></span></summary>
        <value><span data-ttu-id="b751b-401">Es <see langword="true" /> para indicar que se puede leer <see cref="T:System.Net.Sockets.NetworkStream" />; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b751b-401"><see langword="true" /> to indicate that the <see cref="T:System.Net.Sockets.NetworkStream" /> can be read; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="b751b-402">El valor predeterminado es <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="b751b-402">The default value is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b751b-403">Debe derivar de la <xref:System.Net.Sockets.NetworkStream> clase se debe utilizar el <xref:System.Net.Sockets.NetworkStream.Readable%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="b751b-403">You must derive from the <xref:System.Net.Sockets.NetworkStream> class to use the <xref:System.Net.Sockets.NetworkStream.Readable%2A> property.</span></span> <span data-ttu-id="b751b-404">Si <xref:System.Net.Sockets.NetworkStream.Readable%2A> es `true`, <xref:System.Net.Sockets.NetworkStream> permite las llamadas a la <xref:System.Net.Sockets.NetworkStream.Read%2A> método.</span><span class="sxs-lookup"><span data-stu-id="b751b-404">If <xref:System.Net.Sockets.NetworkStream.Readable%2A> is `true`, <xref:System.Net.Sockets.NetworkStream> allows calls to the <xref:System.Net.Sockets.NetworkStream.Read%2A> method.</span></span> <span data-ttu-id="b751b-405">También puede determinar si un <xref:System.Net.Sockets.NetworkStream> es legible mediante la comprobación de acceso público <xref:System.Net.Sockets.NetworkStream.CanRead%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="b751b-405">You can also determine whether a <xref:System.Net.Sockets.NetworkStream> is readable by checking the publicly accessible <xref:System.Net.Sockets.NetworkStream.CanRead%2A> property.</span></span>  
  
 <span data-ttu-id="b751b-406">El <xref:System.Net.Sockets.NetworkStream.Readable%2A> propiedad se establece cuando el <xref:System.Net.Sockets.NetworkStream> se ha inicializado.</span><span class="sxs-lookup"><span data-stu-id="b751b-406">The <xref:System.Net.Sockets.NetworkStream.Readable%2A> property is set when the <xref:System.Net.Sockets.NetworkStream> is initialized.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b751b-407">En el ejemplo de código siguiente, la `CanCommunicate` propiedad comprobaciones el <xref:System.Net.Sockets.NetworkStream.Readable%2A> propiedad para determinar si la <xref:System.Net.Sockets.NetworkStream> es legible.</span><span class="sxs-lookup"><span data-stu-id="b751b-407">In the following code example, the `CanCommunicate` property checks the <xref:System.Net.Sockets.NetworkStream.Readable%2A> property to determine if the <xref:System.Net.Sockets.NetworkStream> is readable.</span></span>  
  
 [!code-cpp[NetworkStream_Protected_Members#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Protected_Members/CPP/source.cpp#1)]
 [!code-csharp[NetworkStream_Protected_Members#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Protected_Members/CS/source.cs#1)]
 [!code-vb[NetworkStream_Protected_Members#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Protected_Members/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.Sockets.NetworkStream.CanRead" />
        <altmember cref="P:System.Net.Sockets.NetworkStream.CanWrite" />
        <altmember cref="P:System.Net.Sockets.NetworkStream.Writeable" />
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.ValueTask&lt;int&gt; ReadAsync (Memory&lt;byte&gt; buffer, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;int32&gt; ReadAsync(valuetype System.Memory`1&lt;unsigned int8&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.ReadAsync(System.Memory{System.Byte},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="override this.ReadAsync : Memory&lt;byte&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;int&gt;" Usage="networkStream.ReadAsync (buffer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Memory&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;int&gt; ReadAsync (byte[] buffer, int offset, int size, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;int32&gt; ReadAsync(unsigned int8[] buffer, int32 offset, int32 size, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;int&gt; ^ ReadAsync(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int size, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.ReadAsync : byte[] * int * int * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="networkStream.ReadAsync (buffer, offset, size, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <param name="offset">To be added.</param>
        <param name="size">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadByte">
      <MemberSignature Language="C#" Value="public override int ReadByte ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ReadByte() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.ReadByte" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadByte () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ReadByte();" />
      <MemberSignature Language="F#" Value="override this.ReadByte : unit -&gt; int" Usage="networkStream.ReadByte " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadTimeout">
      <MemberSignature Language="C#" Value="public override int ReadTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReadTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.NetworkStream.ReadTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ReadTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ReadTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ReadTimeout : int with get, set" Usage="System.Net.Sockets.NetworkStream.ReadTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b751b-408">Obtiene o establece la cantidad de tiempo que una operación de lectura se bloquea en espera de los datos.</span><span class="sxs-lookup"><span data-stu-id="b751b-408">Gets or sets the amount of time that a read operation blocks waiting for data.</span></span></summary>
        <value><span data-ttu-id="b751b-409">Objeto <see cref="T:System.Int32" /> que especifica la cantidad de tiempo, en milisegundos, que pasará antes de que se produzca un error en la operación de lectura.</span><span class="sxs-lookup"><span data-stu-id="b751b-409">A <see cref="T:System.Int32" /> that specifies the amount of time, in milliseconds, that will elapse before a read operation fails.</span></span> <span data-ttu-id="b751b-410">El valor predeterminado, <see cref="F:System.Threading.Timeout.Infinite" />, especifica que no se agota el tiempo de espera de la operación de lectura.</span><span class="sxs-lookup"><span data-stu-id="b751b-410">The default value, <see cref="F:System.Threading.Timeout.Infinite" />, specifies that the read operation does not time out.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b751b-411">Si no lleva a cabo la operación de lectura en el tiempo especificado por esta propiedad, se inicia la operación de lectura un <xref:System.IO.IOException>.</span><span class="sxs-lookup"><span data-stu-id="b751b-411">If the read operation does not complete within the time specified by this property, the read operation throws an <xref:System.IO.IOException>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b751b-412">Esta propiedad afecta a sincrónicas solo lecturas realizadas mediante una llamada a la <xref:System.Net.Sockets.NetworkStream.Read%2A> método.</span><span class="sxs-lookup"><span data-stu-id="b751b-412">This property affects only synchronous reads performed by calling the <xref:System.Net.Sockets.NetworkStream.Read%2A> method.</span></span> <span data-ttu-id="b751b-413">Esta propiedad no afecta a las lecturas asincrónicas realizadas mediante una llamada a la <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> método.</span><span class="sxs-lookup"><span data-stu-id="b751b-413">This property does not affect asynchronous reads performed by calling the <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b751b-414">El ejemplo de código siguiente establece el tiempo de espera de lectura para una secuencia de red en 10 milisegundos.</span><span class="sxs-lookup"><span data-stu-id="b751b-414">The following code example sets the read time-out for a network stream to 10 milliseconds.</span></span>  
  
 [!code-csharp[NCLTcpClientSync#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLTcpClientSync/CS/tcpclient.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b751b-415">El valor especificado es menor o igual que cero y distinto de <see cref="F:System.Threading.Timeout.Infinite" />.</span><span class="sxs-lookup"><span data-stu-id="b751b-415">The value specified is less than or equal to zero and is not <see cref="F:System.Threading.Timeout.Infinite" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public override long Seek (long offset, System.IO.SeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 Seek(int64 offset, valuetype System.IO.SeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.Seek(System.Int64,System.IO.SeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Seek (offset As Long, origin As SeekOrigin) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long Seek(long offset, System::IO::SeekOrigin origin);" />
      <MemberSignature Language="F#" Value="override this.Seek : int64 * System.IO.SeekOrigin -&gt; int64" Usage="networkStream.Seek (offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="origin" Type="System.IO.SeekOrigin" />
      </Parameters>
      <Docs>
        <param name="offset"><span data-ttu-id="b751b-416">Este parámetro no se utiliza.</span><span class="sxs-lookup"><span data-stu-id="b751b-416">This parameter is not used.</span></span></param>
        <param name="origin"><span data-ttu-id="b751b-417">Este parámetro no se utiliza.</span><span class="sxs-lookup"><span data-stu-id="b751b-417">This parameter is not used.</span></span></param>
        <summary><span data-ttu-id="b751b-418">Establece la posición actual de la secuencia en el valor especificado.</span><span class="sxs-lookup"><span data-stu-id="b751b-418">Sets the current position of the stream to the given value.</span></span> <span data-ttu-id="b751b-419">Este método no se admite actualmente y siempre produce <see cref="T:System.NotSupportedException" />.</span><span class="sxs-lookup"><span data-stu-id="b751b-419">This method is not currently supported and always throws a <see cref="T:System.NotSupportedException" />.</span></span></summary>
        <returns><span data-ttu-id="b751b-420">Posición en el flujo.</span><span class="sxs-lookup"><span data-stu-id="b751b-420">The position in the stream.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="b751b-421">Cualquier uso de esta propiedad.</span><span class="sxs-lookup"><span data-stu-id="b751b-421">Any use of this property.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetLength">
      <MemberSignature Language="C#" Value="public override void SetLength (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetLength(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.SetLength(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub SetLength (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void SetLength(long value);" />
      <MemberSignature Language="F#" Value="override this.SetLength : int64 -&gt; unit" Usage="networkStream.SetLength value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="b751b-422">Este parámetro no se utiliza.</span><span class="sxs-lookup"><span data-stu-id="b751b-422">This parameter is not used.</span></span></param>
        <summary><span data-ttu-id="b751b-423">Establece la longitud de la secuencia.</span><span class="sxs-lookup"><span data-stu-id="b751b-423">Sets the length of the stream.</span></span> <span data-ttu-id="b751b-424">Este método produce siempre una excepción <see cref="T:System.NotSupportedException" />.</span><span class="sxs-lookup"><span data-stu-id="b751b-424">This method always throws a <see cref="T:System.NotSupportedException" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="b751b-425">Cualquier uso de esta propiedad.</span><span class="sxs-lookup"><span data-stu-id="b751b-425">Any use of this property.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Socket">
      <MemberSignature Language="C#" Value="protected System.Net.Sockets.Socket Socket { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Sockets.Socket Socket" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.NetworkStream.Socket" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Socket As Socket" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Net::Sockets::Socket ^ Socket { System::Net::Sockets::Socket ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Socket : System.Net.Sockets.Socket" Usage="System.Net.Sockets.NetworkStream.Socket" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.Socket</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b751b-426">Obtiene el <see cref="T:System.Net.Sockets.Socket" /> subyacente.</span><span class="sxs-lookup"><span data-stu-id="b751b-426">Gets the underlying <see cref="T:System.Net.Sockets.Socket" />.</span></span></summary>
        <value><span data-ttu-id="b751b-427"><see cref="T:System.Net.Sockets.Socket" /> que representa la conexión de red subyacente.</span><span class="sxs-lookup"><span data-stu-id="b751b-427">A <see cref="T:System.Net.Sockets.Socket" /> that represents the underlying network connection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b751b-428">Las clases derivadas de <xref:System.Net.Sockets.NetworkStream> puede utilizar esta propiedad para obtener subyacente <xref:System.Net.Sockets.Socket>.</span><span class="sxs-lookup"><span data-stu-id="b751b-428">Classes deriving from <xref:System.Net.Sockets.NetworkStream> can use this property to get the underlying <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="b751b-429">Usar subyacente <xref:System.Net.Sockets.Socket> devuelto desde el <xref:System.Net.Sockets.NetworkStream.Socket%2A> propiedad si necesita tener acceso a más allá de eso que <xref:System.Net.Sockets.NetworkStream> proporciona.</span><span class="sxs-lookup"><span data-stu-id="b751b-429">Use the underlying <xref:System.Net.Sockets.Socket> returned from the <xref:System.Net.Sockets.NetworkStream.Socket%2A> property if you require access beyond that which <xref:System.Net.Sockets.NetworkStream> provides.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b751b-430">Esta propiedad es accesible a través de esta clase o una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="b751b-430">This property is accessible only through this class or a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b751b-431">El ejemplo de código siguiente recupera subyacente <xref:System.Net.Sockets.Socket> para comprobar una conexión activa.</span><span class="sxs-lookup"><span data-stu-id="b751b-431">The following code example retrieves the underlying <xref:System.Net.Sockets.Socket> to verify an active connection.</span></span>  
  
 [!code-cpp[NetworkStream_Protected_Members#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Protected_Members/CPP/source.cpp#1)]
 [!code-csharp[NetworkStream_Protected_Members#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Protected_Members/CS/source.cs#1)]
 [!code-vb[NetworkStream_Protected_Members#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Protected_Members/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b751b-432">Libera todos los recursos que usa <see cref="T:System.Net.Sockets.NetworkStream" />.</span><span class="sxs-lookup"><span data-stu-id="b751b-432">Releases all resources used by the <see cref="T:System.Net.Sockets.NetworkStream" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="b751b-433">Llame a `Dispose` cuando haya terminado de usar <xref:System.Net.Sockets.NetworkStream>.</span><span class="sxs-lookup"><span data-stu-id="b751b-433">Call `Dispose` when you are finished using the <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="b751b-434">El método `Dispose` deja el <xref:System.Net.Sockets.NetworkStream> en un estado no utilizable.</span><span class="sxs-lookup"><span data-stu-id="b751b-434">The `Dispose` method leaves the <xref:System.Net.Sockets.NetworkStream> in an unusable state.</span></span> <span data-ttu-id="b751b-435">Después de llamar a `Dispose`, debe liberar todas las referencias a la <xref:System.Net.Sockets.NetworkStream> por lo que el recolector de elementos no utilizados pueda reclamar la memoria que el <xref:System.Net.Sockets.NetworkStream> estaba ocupando.</span><span class="sxs-lookup"><span data-stu-id="b751b-435">After calling `Dispose`, you must release all references to the <xref:System.Net.Sockets.NetworkStream> so the garbage collector can reclaim the memory that the <xref:System.Net.Sockets.NetworkStream> was occupying.</span></span> <span data-ttu-id="b751b-436">Para obtener más información acerca de cómo utilizar el método Dispose, vea [limpiar recursos no administrados](~/docs/standard/garbage-collection/unmanaged.md) y [implementar un método Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="b751b-436">For more information about using the Dispose method, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>

> [!NOTE]
> <span data-ttu-id="b751b-437">Realice siempre una llamada a `Dispose` antes de liberar la última referencia al objeto <xref:System.Net.Sockets.NetworkStream>.</span><span class="sxs-lookup"><span data-stu-id="b751b-437">Always call `Dispose` before you release your last reference to the <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="b751b-438">En caso contrario, los recursos que utiliza no se liberarán hasta que el recolector de elementos no utilizados llame al <xref:System.Net.Sockets.NetworkStream> método Finalize del objeto.</span><span class="sxs-lookup"><span data-stu-id="b751b-438">Otherwise, the resources it is using are not freed until the garbage collector calls the <xref:System.Net.Sockets.NetworkStream> object's Finalize method.</span></span>

]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (ReadOnlySpan&lt;byte&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.Write(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As ReadOnlySpan(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(ReadOnlySpan&lt;System::Byte&gt; buffer);" />
      <MemberSignature Language="F#" Value="override this.Write : ReadOnlySpan&lt;byte&gt; -&gt; unit" Usage="networkStream.Write buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ReadOnlySpan&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (byte[] buffer, int offset, int size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(unsigned int8[] buffer, int32 offset, int32 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As Byte(), offset As Integer, size As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int size);" />
      <MemberSignature Language="F#" Value="override this.Write : byte[] * int * int -&gt; unit" Usage="networkStream.Write (buffer, offset, size)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="size" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="b751b-439">Una matriz de tipo <see cref="T:System.Byte" /> que contiene los datos que se va a escribir en <see cref="T:System.Net.Sockets.NetworkStream" />.</span><span class="sxs-lookup"><span data-stu-id="b751b-439">An array of type <see cref="T:System.Byte" /> that contains the data to write to the <see cref="T:System.Net.Sockets.NetworkStream" />.</span></span></param>
        <param name="offset"><span data-ttu-id="b751b-440">Ubicación de <paramref name="buffer" /> donde se comienza a escribir los datos.</span><span class="sxs-lookup"><span data-stu-id="b751b-440">The location in <paramref name="buffer" /> from which to start writing data.</span></span></param>
        <param name="size"><span data-ttu-id="b751b-441">Número de bytes que se van a escribir en <see cref="T:System.Net.Sockets.NetworkStream" />.</span><span class="sxs-lookup"><span data-stu-id="b751b-441">The number of bytes to write to the <see cref="T:System.Net.Sockets.NetworkStream" />.</span></span></param>
        <summary><span data-ttu-id="b751b-442">Escribe datos en <see cref="T:System.Net.Sockets.NetworkStream" />.</span><span class="sxs-lookup"><span data-stu-id="b751b-442">Writes data to the <see cref="T:System.Net.Sockets.NetworkStream" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b751b-443">El <xref:System.Net.Sockets.NetworkStream.Write%2A> método comienza en el índice especificado `offset` y envía `size` bytes a partir del contenido de `buffer` a la red.</span><span class="sxs-lookup"><span data-stu-id="b751b-443">The <xref:System.Net.Sockets.NetworkStream.Write%2A> method starts at the specified `offset` and sends `size` bytes from the contents of `buffer` to the network.</span></span> <span data-ttu-id="b751b-444">El <xref:System.Net.Sockets.NetworkStream.Write%2A> método se bloquea hasta que se envía el número de bytes solicitado o una <xref:System.Net.Sockets.SocketException> se produce.</span><span class="sxs-lookup"><span data-stu-id="b751b-444">The <xref:System.Net.Sockets.NetworkStream.Write%2A> method blocks until the requested number of bytes is sent or a <xref:System.Net.Sockets.SocketException> is thrown.</span></span> <span data-ttu-id="b751b-445">Si recibe un <xref:System.Net.Sockets.SocketException>, utilice el <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> propiedad para obtener el código de error concreto y consulte la [código de error de API de la versión 2 de Windows Sockets](/windows/desktop/winsock/windows-sockets-error-codes-2) documentación para obtener una descripción detallada del error.</span><span class="sxs-lookup"><span data-stu-id="b751b-445">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code and refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b751b-446">Compruebe si el <xref:System.Net.Sockets.NetworkStream> es modificable mediante el acceso a la <xref:System.Net.Sockets.NetworkStream.CanWrite%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="b751b-446">Check to see if the <xref:System.Net.Sockets.NetworkStream> is writable by accessing the <xref:System.Net.Sockets.NetworkStream.CanWrite%2A> property.</span></span> <span data-ttu-id="b751b-447">Si se intenta escribir en un <xref:System.Net.Sockets.NetworkStream> que no es modificable, obtendrá un <xref:System.IO.IOException>.</span><span class="sxs-lookup"><span data-stu-id="b751b-447">If you attempt to write to a <xref:System.Net.Sockets.NetworkStream> that is not writable, you will get an <xref:System.IO.IOException>.</span></span> <span data-ttu-id="b751b-448">Si recibe un <xref:System.IO.IOException>, compruebe la <xref:System.Exception.InnerException%2A> propiedad para determinar si ha ocasionado un <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="b751b-448">If you receive an <xref:System.IO.IOException>, check the <xref:System.Exception.InnerException%2A> property to determine if it was caused by a <xref:System.Net.Sockets.SocketException>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b751b-449">El siguiente código de ejemplo se comprueba para ver si la <xref:System.Net.Sockets.NetworkStream> es grabable.</span><span class="sxs-lookup"><span data-stu-id="b751b-449">The following code example checks to see whether the <xref:System.Net.Sockets.NetworkStream> is writable.</span></span> <span data-ttu-id="b751b-450">Si es así, a continuación, <xref:System.Net.Sockets.NetworkStream.Write%2A> se utiliza para escribir un mensaje pequeño.</span><span class="sxs-lookup"><span data-stu-id="b751b-450">If it is, then <xref:System.Net.Sockets.NetworkStream.Write%2A> is used to write a small message.</span></span>  
  
 [!code-cpp[NetworkStream_Synch_SendAndReceive#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CPP/source.cpp#3)]
 [!code-csharp[NetworkStream_Synch_SendAndReceive#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CS/source.cs#3)]
 [!code-vb[NetworkStream_Synch_SendAndReceive#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b751b-451">El parámetro <paramref name="buffer" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b751b-451">The <paramref name="buffer" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b751b-452">El parámetro <paramref name="offset" /> es menor que 0.</span><span class="sxs-lookup"><span data-stu-id="b751b-452">The <paramref name="offset" /> parameter is less than 0.</span></span>  
  
<span data-ttu-id="b751b-453">O bien</span><span class="sxs-lookup"><span data-stu-id="b751b-453">-or-</span></span> 
<span data-ttu-id="b751b-454">El parámetro <paramref name="offset" /> es mayor que la longitud de <paramref name="buffer" />.</span><span class="sxs-lookup"><span data-stu-id="b751b-454">The <paramref name="offset" /> parameter is greater than the length of <paramref name="buffer" />.</span></span>  
  
<span data-ttu-id="b751b-455">O bien</span><span class="sxs-lookup"><span data-stu-id="b751b-455">-or-</span></span> 
<span data-ttu-id="b751b-456">El parámetro <paramref name="size" /> es menor que 0.</span><span class="sxs-lookup"><span data-stu-id="b751b-456">The <paramref name="size" /> parameter is less than 0.</span></span>  
  
<span data-ttu-id="b751b-457">O bien</span><span class="sxs-lookup"><span data-stu-id="b751b-457">-or-</span></span> 
<span data-ttu-id="b751b-458">El parámetro <paramref name="size" /> es mayor que la longitud de <paramref name="buffer" /> menos el valor del parámetro <paramref name="offset" />.</span><span class="sxs-lookup"><span data-stu-id="b751b-458">The <paramref name="size" /> parameter is greater than the length of <paramref name="buffer" /> minus the value of the <paramref name="offset" /> parameter.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="b751b-459">Se produjo un error al escribir en la red.</span><span class="sxs-lookup"><span data-stu-id="b751b-459">There was a failure while writing to the network.</span></span>  
  
<span data-ttu-id="b751b-460">O bien</span><span class="sxs-lookup"><span data-stu-id="b751b-460">-or-</span></span> 
<span data-ttu-id="b751b-461">Se produjo un error al acceder al socket.</span><span class="sxs-lookup"><span data-stu-id="b751b-461">An error occurred when accessing the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="b751b-462">La clase <see cref="T:System.Net.Sockets.NetworkStream" /> está cerrada.</span><span class="sxs-lookup"><span data-stu-id="b751b-462">The <see cref="T:System.Net.Sockets.NetworkStream" /> is closed.</span></span>  
  
<span data-ttu-id="b751b-463">O bien</span><span class="sxs-lookup"><span data-stu-id="b751b-463">-or-</span></span> 
<span data-ttu-id="b751b-464">Se ha producido un error al leer de la red.</span><span class="sxs-lookup"><span data-stu-id="b751b-464">There was a failure reading from the network.</span></span></exception>
        <altmember cref="P:System.Net.Sockets.NetworkStream.CanWrite" />
        <altmember cref="P:System.Net.Sockets.NetworkStream.Writeable" />
      </Docs>
    </Member>
    <Member MemberName="Writeable">
      <MemberSignature Language="C#" Value="protected bool Writeable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Writeable" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.NetworkStream.Writeable" />
      <MemberSignature Language="VB.NET" Value="Protected Property Writeable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool Writeable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Writeable : bool with get, set" Usage="System.Net.Sockets.NetworkStream.Writeable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b751b-465">Obtiene un valor que indica si <see cref="T:System.Net.Sockets.NetworkStream" /> admite la escritura.</span><span class="sxs-lookup"><span data-stu-id="b751b-465">Gets a value that indicates whether the <see cref="T:System.Net.Sockets.NetworkStream" /> is writable.</span></span></summary>
        <value><span data-ttu-id="b751b-466"><see langword="true" /> si se pueden escribir datos en la secuencia; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b751b-466"><see langword="true" /> if data can be written to the stream; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="b751b-467">El valor predeterminado es <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="b751b-467">The default value is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b751b-468">Debe derivar de la <xref:System.Net.Sockets.NetworkStream> clase se debe utilizar el <xref:System.Net.Sockets.NetworkStream.Writeable%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="b751b-468">You must derive from the <xref:System.Net.Sockets.NetworkStream> class to use the <xref:System.Net.Sockets.NetworkStream.Writeable%2A> property.</span></span> <span data-ttu-id="b751b-469">Si <xref:System.Net.Sockets.NetworkStream.Writeable%2A> es `true`, <xref:System.Net.Sockets.NetworkStream> permite las llamadas a la <xref:System.Net.Sockets.NetworkStream.Write%2A> método.</span><span class="sxs-lookup"><span data-stu-id="b751b-469">If <xref:System.Net.Sockets.NetworkStream.Writeable%2A> is `true`, <xref:System.Net.Sockets.NetworkStream> allows calls to the <xref:System.Net.Sockets.NetworkStream.Write%2A> method.</span></span> <span data-ttu-id="b751b-470">También puede determinar si un <xref:System.Net.Sockets.NetworkStream> es grabable mediante la comprobación de acceso público <xref:System.Net.Sockets.NetworkStream.CanWrite%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="b751b-470">You can also determine whether a <xref:System.Net.Sockets.NetworkStream> is writable by checking the publicly accessible <xref:System.Net.Sockets.NetworkStream.CanWrite%2A> property.</span></span>  
  
 <span data-ttu-id="b751b-471">El <xref:System.Net.Sockets.NetworkStream.Writeable%2A> propiedad se establece cuando el <xref:System.Net.Sockets.NetworkStream> se ha inicializado.</span><span class="sxs-lookup"><span data-stu-id="b751b-471">The <xref:System.Net.Sockets.NetworkStream.Writeable%2A> property is set when the <xref:System.Net.Sockets.NetworkStream> is initialized.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b751b-472">En el ejemplo de código siguiente, el `CanCommunicate` propiedad comprobaciones el <xref:System.Net.Sockets.NetworkStream.Writeable%2A> propiedad para determinar si la <xref:System.Net.Sockets.NetworkStream> es grabable.</span><span class="sxs-lookup"><span data-stu-id="b751b-472">In the following code example, the `CanCommunicate` property checks the <xref:System.Net.Sockets.NetworkStream.Writeable%2A> property to determine if the <xref:System.Net.Sockets.NetworkStream> is writable.</span></span>  
  
 [!code-cpp[NetworkStream_Protected_Members#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Protected_Members/CPP/source.cpp#1)]
 [!code-csharp[NetworkStream_Protected_Members#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Protected_Members/CS/source.cs#1)]
 [!code-vb[NetworkStream_Protected_Members#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Protected_Members/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.Sockets.NetworkStream.CanWrite" />
        <altmember cref="P:System.Net.Sockets.NetworkStream.Readable" />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.ValueTask WriteAsync (ReadOnlyMemory&lt;byte&gt; buffer, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Threading.Tasks.ValueTask WriteAsync(valuetype System.ReadOnlyMemory`1&lt;unsigned int8&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.WriteAsync(System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="override this.WriteAsync : ReadOnlyMemory&lt;byte&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask" Usage="networkStream.WriteAsync (buffer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ReadOnlyMemory&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteAsync (byte[] buffer, int offset, int size, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteAsync(unsigned int8[] buffer, int32 offset, int32 size, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteAsync(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int size, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.WriteAsync : byte[] * int * int * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="networkStream.WriteAsync (buffer, offset, size, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <param name="offset">To be added.</param>
        <param name="size">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteByte">
      <MemberSignature Language="C#" Value="public override void WriteByte (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteByte(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.WriteByte(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteByte (value As Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteByte(System::Byte value);" />
      <MemberSignature Language="F#" Value="override this.WriteByte : byte -&gt; unit" Usage="networkStream.WriteByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" Index="0" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteTimeout">
      <MemberSignature Language="C#" Value="public override int WriteTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 WriteTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.NetworkStream.WriteTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property WriteTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int WriteTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.WriteTimeout : int with get, set" Usage="System.Net.Sockets.NetworkStream.WriteTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b751b-473">Obtiene o establece la cantidad de tiempo que una operación de escritura se bloquea en espera de los datos.</span><span class="sxs-lookup"><span data-stu-id="b751b-473">Gets or sets the amount of time that a write operation blocks waiting for data.</span></span></summary>
        <value><span data-ttu-id="b751b-474">Objeto <see cref="T:System.Int32" /> que especifica la cantidad de tiempo, en milisegundos, que pasará antes de que se produzca un error en la operación de escritura.</span><span class="sxs-lookup"><span data-stu-id="b751b-474">A <see cref="T:System.Int32" /> that specifies the amount of time, in milliseconds, that will elapse before a write operation fails.</span></span> <span data-ttu-id="b751b-475">El valor predeterminado, <see cref="F:System.Threading.Timeout.Infinite" />, especifica que no se agota el tiempo de espera de la operación de escritura.</span><span class="sxs-lookup"><span data-stu-id="b751b-475">The default value, <see cref="F:System.Threading.Timeout.Infinite" />, specifies that the write operation does not time out.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b751b-476">Si no lleva a cabo la operación de escritura en el tiempo especificado por esta propiedad, la operación de escritura inicia una <xref:System.IO.IOException>.</span><span class="sxs-lookup"><span data-stu-id="b751b-476">If the write operation does not complete within the time specified by this property, the write operation throws a <xref:System.IO.IOException>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b751b-477">Esta propiedad afecta a las operaciones de escritura sincrónica solo realizadas mediante una llamada a la <xref:System.Net.Sockets.NetworkStream.Write%2A> método.</span><span class="sxs-lookup"><span data-stu-id="b751b-477">This property affects only synchronous write operations performed by calling the <xref:System.Net.Sockets.NetworkStream.Write%2A> method.</span></span> <span data-ttu-id="b751b-478">Esta propiedad no afecta a las escrituras asincrónicas realizadas mediante una llamada a la <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> método.</span><span class="sxs-lookup"><span data-stu-id="b751b-478">This property does not affect asynchronous writes performed by calling the <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b751b-479">El ejemplo de código siguiente establece el tiempo de espera de escritura para una secuencia de red en 10 milisegundos.</span><span class="sxs-lookup"><span data-stu-id="b751b-479">The following code example sets the write time-out for a network stream to 10 milliseconds.</span></span>  
  
 [!code-cpp[NCLTcpServerSync#0](~/samples/snippets/cpp/VS_Snippets_Remoting/NclTcpServerSync/cpp/tcplistener.cpp#0)]
 [!code-csharp[NCLTcpServerSync#0](~/samples/snippets/csharp/VS_Snippets_Remoting/NclTcpServerSync/CS/tcplistener.cs#0)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b751b-480">El valor especificado es menor o igual que cero y distinto de <see cref="F:System.Threading.Timeout.Infinite" />.</span><span class="sxs-lookup"><span data-stu-id="b751b-480">The value specified is less than or equal to zero and is not <see cref="F:System.Threading.Timeout.Infinite" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
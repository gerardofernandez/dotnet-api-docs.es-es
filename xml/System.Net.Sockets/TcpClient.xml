<Type Name="TcpClient" FullName="System.Net.Sockets.TcpClient">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="930ba76e4d78fee4d510d734104c92c9b6824aa2" />
    <Meta Name="ms.sourcegitcommit" Value="1654a92bac785a221098172d9cacd405ceaac9b7" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="12/01/2018" />
    <Meta Name="ms.locfileid" Value="52738158" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TcpClient : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TcpClient extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Net.Sockets.TcpClient" />
  <TypeSignature Language="VB.NET" Value="Public Class TcpClient&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class TcpClient : IDisposable" />
  <TypeSignature Language="F#" Value="type TcpClient = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Sockets</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="2b324-101">Proporciona conexiones de cliente para servicios de red TCP.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2b324-101">Provides client connections for TCP network services.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b324-102">La clase `TcpClient` proporciona métodos sencillos para conectarse, enviar, y recibir transmitir datos a través de una red en modo de bloqueo sincrónico. </span><span class="sxs-lookup"><span data-stu-id="2b324-102">The `TcpClient` class provides simple methods for connecting, sending, and receiving stream data over a network in synchronous blocking mode.</span></span>  
  
 <span data-ttu-id="2b324-103">Para que `TcpClient` pueda conectarse e intercambiar datos, un <xref:System.Net.Sockets.TcpListener> o <xref:System.Net.Sockets.Socket> creado con el <xref:System.Net.Sockets.ProtocolType> TCP debe estar escuchando solicitudes de conexión entrantes. Puede conectarse a este agente de escucha en una de las dos maneras siguientes:</span><span class="sxs-lookup"><span data-stu-id="2b324-103">In order for `TcpClient` to connect and exchange data, a <xref:System.Net.Sockets.TcpListener> or <xref:System.Net.Sockets.Socket> created with the TCP <xref:System.Net.Sockets.ProtocolType> must be listening for incoming connection requests.</span></span> <span data-ttu-id="2b324-104">Puede conectarse a este agente de escucha en una de las dos maneras siguientes:</span><span class="sxs-lookup"><span data-stu-id="2b324-104">You can connect to this listener in one of the following two ways:</span></span>  
  
-   <span data-ttu-id="2b324-105">Crear un `TcpClient` y llamar a uno de los tres métodos <xref:System.Net.Sockets.TcpClient.Connect%2A> disponibles.</span><span class="sxs-lookup"><span data-stu-id="2b324-105">Create a `TcpClient` and call one of the three available <xref:System.Net.Sockets.TcpClient.Connect%2A> methods.</span></span>  
  
-   <span data-ttu-id="2b324-106">Crear un `TcpClient` con el nombre de host y número de puerto del host remoto.</span><span class="sxs-lookup"><span data-stu-id="2b324-106">Create a `TcpClient` using the host name and port number of the remote host.</span></span> <span data-ttu-id="2b324-107">Este constructor intentará automáticamente una conexión.</span><span class="sxs-lookup"><span data-stu-id="2b324-107">This constructor will automatically attempt a connection.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2b324-108">Si desea enviar datagramas sin conexión en modo de bloqueo sincrónico, utilice la clase <xref:System.Net.Sockets.UdpClient>.</span><span class="sxs-lookup"><span data-stu-id="2b324-108">If you want to send connectionless datagrams in synchronous blocking mode, use the <xref:System.Net.Sockets.UdpClient> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b324-109">El siguiente ejemplo de código establece una conexión `TcpClient`.</span><span class="sxs-lookup"><span data-stu-id="2b324-109">The following code example establishes a `TcpClient` connection.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient/CPP/tcpclient.cpp#1)]
 [!code-csharp[System.Net.Sockets.TcpClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient/CS/tcpclient.cs#1)]
 [!code-vb[System.Net.Sockets.TcpClient#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.TcpClient/VB/tcpclient.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Net.SocketPermission">
      <span data-ttu-id="2b324-110">Permiso para establecer una conexión saliente o Aceptar una solicitud entrante.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2b324-110">Permission to establish an outgoing connection or accept an incoming request.</span>
      </span>
    </permission>
    <block subset="none" type="overrides">
      <para>
        <span data-ttu-id="2b324-111">Para enviar y recibir datos, use el método <see cref="M:System.Net.Sockets.TcpClient.GetStream" /> para obtener un <see cref="T:System.Net.Sockets.NetworkStream" />.</span>
        <span class="sxs-lookup">
          <span data-stu-id="2b324-111">To send and receive data, use the <see cref="M:System.Net.Sockets.TcpClient.GetStream" /> method to obtain a <see cref="T:System.Net.Sockets.NetworkStream" />.</span>
        </span>
        <span data-ttu-id="2b324-112">Llame a la <see cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" /> y <see cref="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" /> métodos de la <see cref="T:System.Net.Sockets.NetworkStream" /> para enviar y recibir datos con el host remoto.</span>
        <span class="sxs-lookup">
          <span data-stu-id="2b324-112">Call the <see cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" /> and <see cref="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" /> methods of the <see cref="T:System.Net.Sockets.NetworkStream" /> to send and receive data with the remote host.</span>
        </span>
        <span data-ttu-id="2b324-113">Use el método <see cref="M:System.Net.Sockets.NetworkStream.Close(System.Int32)" /> para liberar todos los recursos asociados con el <see cref="T:System.Net.Sockets.TcpClient" />.</span>
        <span class="sxs-lookup">
          <span data-stu-id="2b324-113">Use the <see cref="M:System.Net.Sockets.NetworkStream.Close(System.Int32)" /> method to release all resources associated with the <see cref="T:System.Net.Sockets.TcpClient" />.</span>
        </span>
      </para>
    </block>
    <altmember cref="T:System.Net.Sockets.TcpListener" />
    <altmember cref="T:System.Net.Sockets.NetworkStream" />
    <altmember cref="T:System.Net.Sockets.Socket" />
    <altmember cref="T:System.Net.Sockets.ProtocolType" />
    <altmember cref="T:System.Net.IPEndPoint" />
    <altmember cref="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)" />
    <altmember cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" />
    <altmember cref="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" />
    <related type="Article" href="~/docs/framework/network-programming/tcp-udp.md">
      <span data-ttu-id="2b324-114">TCP-UDP</span>
      <span class="sxs-lookup">
        <span data-stu-id="2b324-114">TCP-UDP</span>
      </span>
    </related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2b324-115">Inicializa una nueva instancia de la clase <see cref="T:System.Net.Sockets.TcpClient" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-115">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpClient" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpClient ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TcpClient();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2b324-116">Inicializa una nueva instancia de la clase <see cref="T:System.Net.Sockets.TcpClient" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-116">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpClient" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b324-117">Este constructor crea un nuevo <xref:System.Net.Sockets.TcpClient> y permite que el proveedor de servicios subyacente asignar el más adecuado local IP dirección y número de puerto.</span><span class="sxs-lookup"><span data-stu-id="2b324-117">This constructor creates a new <xref:System.Net.Sockets.TcpClient> and allows the underlying service provider to assign the most appropriate local IP address and port number.</span></span> <span data-ttu-id="2b324-118">Debe llamar primero a la <xref:System.Net.Sockets.TcpClient.Connect%2A> método antes de enviar y recibir datos.</span><span class="sxs-lookup"><span data-stu-id="2b324-118">You must first call the <xref:System.Net.Sockets.TcpClient.Connect%2A> method before sending and receiving data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2b324-119">Este constructor sólo funciona con tipos de dirección IPv4.</span><span class="sxs-lookup"><span data-stu-id="2b324-119">This constructor works only with IPv4 address types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2b324-120">Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación.</span><span class="sxs-lookup"><span data-stu-id="2b324-120">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="2b324-121">Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="2b324-121">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b324-122">En el ejemplo de código siguiente se muestra cómo usar el constructor predeterminado para crear un nuevo <xref:System.Net.Sockets.TcpClient>.</span><span class="sxs-lookup"><span data-stu-id="2b324-122">The following code example demonstrates how to use the default constructor to create a new <xref:System.Net.Sockets.TcpClient>.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#4](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#4)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#4](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#4)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpClient (System.Net.IPEndPoint localEP);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.IPEndPoint localEP) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.#ctor(System.Net.IPEndPoint)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (localEP As IPEndPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TcpClient(System::Net::IPEndPoint ^ localEP);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.TcpClient : System.Net.IPEndPoint -&gt; System.Net.Sockets.TcpClient" Usage="new System.Net.Sockets.TcpClient localEP" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="localEP" Type="System.Net.IPEndPoint" />
      </Parameters>
      <Docs>
        <param name="localEP">
          <span data-ttu-id="2b324-123">
            <see cref="T:System.Net.IPEndPoint" /> a la que asociará el TCP <see cref="T:System.Net.Sockets.Socket" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-123">The <see cref="T:System.Net.IPEndPoint" /> to which you bind the TCP <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b324-124">Inicializa una nueva instancia de la clase <see cref="T:System.Net.Sockets.TcpClient" /> y la enlaza con el punto de conexión local especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-124">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpClient" /> class and binds it to the specified local endpoint.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b324-125">Este constructor crea un nuevo <xref:System.Net.Sockets.TcpClient> y lo enlaza con el <xref:System.Net.IPEndPoint> especificado por el `localEP` parámetro.</span><span class="sxs-lookup"><span data-stu-id="2b324-125">This constructor creates a new <xref:System.Net.Sockets.TcpClient> and binds it to the <xref:System.Net.IPEndPoint> specified by the `localEP` parameter.</span></span> <span data-ttu-id="2b324-126">Antes de llamar a este constructor, debe crear un `IPEndPoint` con el número de puerto y la dirección IP desde el que se va a enviar y recibir datos.</span><span class="sxs-lookup"><span data-stu-id="2b324-126">Before you call this constructor, you must create an `IPEndPoint` using the IP address and port number from which you intend to send and receive data.</span></span> <span data-ttu-id="2b324-127">No es necesario especificar un número de puerto y la dirección IP local antes de conectar y comunicar.</span><span class="sxs-lookup"><span data-stu-id="2b324-127">You do not need to specify a local IP address and port number before connecting and communicating.</span></span> <span data-ttu-id="2b324-128">Si creas un `TcpClient` utilizando cualquier otro constructor, el proveedor de servicios subyacente asignará la más adecuada local IP dirección y número de puerto.</span><span class="sxs-lookup"><span data-stu-id="2b324-128">If you create a `TcpClient` using any other constructor, the underlying service provider will assign the most appropriate local IP address and port number.</span></span>  
  
 <span data-ttu-id="2b324-129">Debe llamar a la <xref:System.Net.Sockets.TcpClient.Connect%2A> método antes de enviar y recibir datos.</span><span class="sxs-lookup"><span data-stu-id="2b324-129">You must call the <xref:System.Net.Sockets.TcpClient.Connect%2A> method before sending and receiving data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2b324-130">Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación.</span><span class="sxs-lookup"><span data-stu-id="2b324-130">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="2b324-131">Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="2b324-131">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b324-132">En el ejemplo de código siguiente se muestra cómo crear una instancia de la <xref:System.Net.Sockets.TcpClient> clase con un extremo local.</span><span class="sxs-lookup"><span data-stu-id="2b324-132">The following code example demonstrates how to create an instance of the <xref:System.Net.Sockets.TcpClient> class using a local endpoint.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#2](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#2)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#2](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#2)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b324-133">El parámetro <paramref name="localEP" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-133">The  <paramref name="localEP" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.IPEndPoint" />
        <altmember cref="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpClient (System.Net.Sockets.AddressFamily family);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Net.Sockets.AddressFamily family) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.#ctor(System.Net.Sockets.AddressFamily)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (family As AddressFamily)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TcpClient(System::Net::Sockets::AddressFamily family);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.TcpClient : System.Net.Sockets.AddressFamily -&gt; System.Net.Sockets.TcpClient" Usage="new System.Net.Sockets.TcpClient family" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="family" Type="System.Net.Sockets.AddressFamily" />
      </Parameters>
      <Docs>
        <param name="family">
          <span data-ttu-id="2b324-134">Propiedad <see cref="P:System.Net.IPAddress.AddressFamily" /> del protocolo IP.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-134">The <see cref="P:System.Net.IPAddress.AddressFamily" /> of the IP protocol.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b324-135">Inicializa una nueva instancia de la clase <see cref="T:System.Net.Sockets.TcpClient" /> con la familia especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-135">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpClient" /> class with the specified family.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="2b324-136">Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación.</span><span class="sxs-lookup"><span data-stu-id="2b324-136">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="2b324-137">Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="2b324-137">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b324-138">En el ejemplo de código siguiente se muestra cómo crear una instancia de la <xref:System.Net.Sockets.TcpClient> clase.</span><span class="sxs-lookup"><span data-stu-id="2b324-138">The following code example demonstrates how to create an instance of the <xref:System.Net.Sockets.TcpClient> class.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#15](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#15)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#15](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#15)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#15](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2b324-139">El valor del parámetro <paramref name="family" /> no es igual a AddressFamily.InterNetwork.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-139">The <paramref name="family" /> parameter is not equal to AddressFamily.InterNetwork</span>
          </span>
          <span data-ttu-id="2b324-140">O bien</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-140">-or-</span>
          </span>
          <span data-ttu-id="2b324-141">El valor del parámetro <paramref name="family" /> no es igual a AddressFamily.InterNetworkV6.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-141">The <paramref name="family" /> parameter is not equal to AddressFamily.InterNetworkV6</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpClient (string hostname, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string hostname, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.#ctor(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (hostname As String, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TcpClient(System::String ^ hostname, int port);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.TcpClient : string * int -&gt; System.Net.Sockets.TcpClient" Usage="new System.Net.Sockets.TcpClient (hostname, port)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="hostname" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="hostname">
          <span data-ttu-id="2b324-142">Nombre DNS del host remoto con el que se desea establecer conexión.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-142">The DNS name of the remote host to which you intend to connect.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="2b324-143">Número de puerto del host remoto con el que se desea establecer conexión.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-143">The port number of the remote host to which you intend to connect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b324-144">Inicializa una nueva instancia de la clase <see cref="T:System.Net.Sockets.TcpClient" /> y se conecta al puerto especificado en el host especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-144">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpClient" /> class and connects to the specified port on the specified host.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b324-145">Este constructor crea un nuevo <xref:System.Net.Sockets.TcpClient> y realiza una conexión sincrónica intento en el nombre de host proporcionado y número de puerto.</span><span class="sxs-lookup"><span data-stu-id="2b324-145">This constructor creates a new <xref:System.Net.Sockets.TcpClient> and makes a synchronous connection attempt to the provided host name and port number.</span></span> <span data-ttu-id="2b324-146">El proveedor de servicios subyacente asignará a la más adecuada local IP dirección y número de puerto.</span><span class="sxs-lookup"><span data-stu-id="2b324-146">The underlying service provider will assign the most appropriate local IP address and port number.</span></span> <span data-ttu-id="2b324-147">`TcpClient` se bloqueará hasta que se conecta o se produce un error.</span><span class="sxs-lookup"><span data-stu-id="2b324-147">`TcpClient` will block until it either connects or fails.</span></span> <span data-ttu-id="2b324-148">Este constructor permite inicializar, resolver el nombre de host DNS y conectarse en un solo paso.</span><span class="sxs-lookup"><span data-stu-id="2b324-148">This constructor allows you to initialize, resolve the DNS host name, and connect in one convenient step.</span></span>  
  
 <span data-ttu-id="2b324-149">Si IPv6 está habilitado y el <xref:System.Net.Sockets.TcpClient.%23ctor%28System.String%2CSystem.Int32%29> método se llama para conectarse a un host que se resuelve en ambos IPv6 y direcciones IPv4, la conexión a la dirección será de IPv6 intenta primero antes de la dirección IPv4.</span><span class="sxs-lookup"><span data-stu-id="2b324-149">If IPv6 is enabled and the <xref:System.Net.Sockets.TcpClient.%23ctor%28System.String%2CSystem.Int32%29> method is called to connect to a host that resolves to both IPv6 and IPv4 addresses, the connection to the IPv6 address will be attempted first before the IPv4 address.</span></span> <span data-ttu-id="2b324-150">Esto puede tener el efecto de retrasar el tiempo para establecer la conexión si el host no está escuchando en la dirección IPv6.</span><span class="sxs-lookup"><span data-stu-id="2b324-150">This may have the effect of delaying the time to establish the connection if the host is not listening on the IPv6 address.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2b324-151">Si recibe un <xref:System.Net.Sockets.SocketException>, utilice <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> para obtener el código de error específico.</span><span class="sxs-lookup"><span data-stu-id="2b324-151">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="2b324-152">Después de haber obtenido este código, puede hacer referencia a la [código de error de API de la versión 2 de Windows Sockets](/windows/desktop/winsock/windows-sockets-error-codes-2) documentación para obtener una descripción detallada del error.</span><span class="sxs-lookup"><span data-stu-id="2b324-152">After you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2b324-153">Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación.</span><span class="sxs-lookup"><span data-stu-id="2b324-153">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="2b324-154">Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="2b324-154">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b324-155">En el ejemplo de código siguiente se muestra cómo crear una instancia de la <xref:System.Net.Sockets.TcpClient> clase con un nombre de host y número de puerto.</span><span class="sxs-lookup"><span data-stu-id="2b324-155">The following code example demonstrates how to create an instance of the <xref:System.Net.Sockets.TcpClient> class using a host name and port number.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#3](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#3)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#3](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#3)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b324-156">El parámetro <paramref name="hostname" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-156">The <paramref name="hostname" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2b324-157">El parámetro <paramref name="port" /> no está entre <see cref="F:System.Net.IPEndPoint.MinPort" /> y <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-157">The <paramref name="port" /> parameter is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="2b324-158">Se produjo un error al acceder al socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-158">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Net.Sockets.TcpClient.#ctor" />
        <altmember cref="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Active">
      <MemberSignature Language="C#" Value="protected bool Active { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Active" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.Active" />
      <MemberSignature Language="VB.NET" Value="Protected Property Active As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool Active { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Active : bool with get, set" Usage="System.Net.Sockets.TcpClient.Active" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2b324-159">Obtiene o establece un valor que indica si se realizó una conexión.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-159">Gets or set a value that indicates whether a connection has been made.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2b324-160">Es <see langword="true" /> si se realizó la conexión; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-160">
              <see langword="true" /> if the connection has been made; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b324-161">Las clases derivadas de <xref:System.Net.Sockets.TcpClient> puede utilizar esta propiedad para determinar si un intento de conexión se ha realizado correctamente.</span><span class="sxs-lookup"><span data-stu-id="2b324-161">Classes deriving from <xref:System.Net.Sockets.TcpClient> can use this property to determine if a connection attempt has succeeded.</span></span> <span data-ttu-id="2b324-162">No supervisa el estado de conexión en curso `TcpClient`.</span><span class="sxs-lookup"><span data-stu-id="2b324-162">It does not monitor the ongoing connection state of `TcpClient`.</span></span> <span data-ttu-id="2b324-163">Si el host remoto cierra la conexión, `Active` no se actualizará.</span><span class="sxs-lookup"><span data-stu-id="2b324-163">If the remote host closes the connection, `Active` will not be updated.</span></span> <span data-ttu-id="2b324-164">Si va a derivar de `TcpClient` y requieren más atención en el estado de conexión, use el <xref:System.Net.Sockets.Socket.Connected%2A> propiedad de la <xref:System.Net.Sockets.Socket> devuelto por la <xref:System.Net.Sockets.TcpClient.Client%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="2b324-164">If you are deriving from `TcpClient` and require closer attention to the connection state, use the <xref:System.Net.Sockets.Socket.Connected%2A> property of the <xref:System.Net.Sockets.Socket> returned by the <xref:System.Net.Sockets.TcpClient.Client%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.Sockets.Socket.Connected" />
        <altmember cref="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Available">
      <MemberSignature Language="C#" Value="public int Available { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Available" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.Available" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Available As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Available { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Available : int" Usage="System.Net.Sockets.TcpClient.Available" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2b324-165">Obtiene la cantidad de datos que se recibieron de la red y están disponibles para leer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-165">Gets the amount of data that has been received from the network and is available to be read.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2b324-166">Número de bytes de datos recibidos de la red y disponibles para su lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-166">The number of bytes of data received from the network and available to be read.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
<span data-ttu-id="2b324-167">El `Available` propiedad es una manera de determinar si se pone en cola datos para su lectura.</span><span class="sxs-lookup"><span data-stu-id="2b324-167">The `Available` property is a way to determine whether data is queued for reading.</span></span> <span data-ttu-id="2b324-168">Si hay datos disponibles, llame a <xref:System.Net.Sockets.NetworkStream.Read%2A> para obtener los datos.</span><span class="sxs-lookup"><span data-stu-id="2b324-168">If data is available, call <xref:System.Net.Sockets.NetworkStream.Read%2A> to get the data.</span></span> <span data-ttu-id="2b324-169">Los datos disponibles están que la cantidad total de datos en cola en el búfer de red para su lectura.</span><span class="sxs-lookup"><span data-stu-id="2b324-169">The available data is the total amount of data queued in the network buffer for reading.</span></span> <span data-ttu-id="2b324-170">Si no hay datos se pone en cola en el búfer de red, `Available` devuelve 0.</span><span class="sxs-lookup"><span data-stu-id="2b324-170">If no data is queued in the network buffer, `Available` returns 0.</span></span>  
  
 <span data-ttu-id="2b324-171">Si el host remoto se apaga o cierra la conexión, `Available` puede producir un <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="2b324-171">If the remote host shuts down or closes the connection, `Available` may throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="2b324-172">Si recibe un `SocketException`, utilice <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> para obtener el código de error específico.</span><span class="sxs-lookup"><span data-stu-id="2b324-172">If you receive a `SocketException`, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="2b324-173">Después de haber obtenido este código, puede consultar la documentación de códigos de error de Windows Sockets versión 2 API en MSDN library en [ http://msdn.microsoft.com/library ](https://msdn.microsoft.com/library) para obtener una descripción detallada del error.</span><span class="sxs-lookup"><span data-stu-id="2b324-173">After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in the MSDN library at [http://msdn.microsoft.com/library](https://msdn.microsoft.com/library) for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b324-174">En el ejemplo de código siguiente se muestra el uso de la `Available` propiedad.</span><span class="sxs-lookup"><span data-stu-id="2b324-174">The following code example shows the use of the `Available` property.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient1#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CPP/newtcpclient.cpp#1)]
 [!code-csharp[System.Net.Sockets.TcpClient1#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CS/newtcpclient.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="2b324-175">Error al intentar acceder al socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-175">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="2b324-176">El <see cref="T:System.Net.Sockets.Socket" /> se ha cerrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-176">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginConnect">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2b324-177">Inicia una solicitud asincrónica para una conexión a host remoto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-177">Begins an asynchronous request for a remote host connection.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginConnect">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginConnect (System.Net.IPAddress address, int port, AsyncCallback requestCallback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginConnect(class System.Net.IPAddress address, int32 port, class System.AsyncCallback requestCallback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginConnect (address As IPAddress, port As Integer, requestCallback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginConnect(System::Net::IPAddress ^ address, int port, AsyncCallback ^ requestCallback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginConnect : System.Net.IPAddress * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="tcpClient.BeginConnect (address, port, requestCallback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" />
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="address">
          <span data-ttu-id="2b324-178">
            <see cref="T:System.Net.IPAddress" /> del host remoto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-178">The <see cref="T:System.Net.IPAddress" /> of the remote host.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="2b324-179">Número de puerto del host remoto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-179">The port number of the remote host.</span>
          </span>
        </param>
        <param name="requestCallback">
          <span data-ttu-id="2b324-180">Delegado de <see cref="T:System.AsyncCallback" /> que hace referencia al método que se invocará cuando la operación se complete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-180">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="2b324-181">Objeto definido por el usuario que contiene información sobre la operación de conexión.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-181">A user-defined object that contains information about the connect operation.</span>
          </span>
          <span data-ttu-id="2b324-182">Este objeto se pasa al delegado de <paramref name="requestCallback" /> cuando la operación se completa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-182">This object is passed to the <paramref name="requestCallback" /> delegate when the operation is complete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b324-183">Inicia una solicitud asincrónica para una conexión a host remoto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-183">Begins an asynchronous request for a remote host connection.</span>
          </span>
          <span data-ttu-id="2b324-184">El host remoto se especifica mediante un <see cref="T:System.Net.IPAddress" /> y un número de puerto (<see cref="T:System.Int32" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-184">The remote host is specified by an <see cref="T:System.Net.IPAddress" /> and a port number (<see cref="T:System.Int32" />).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b324-185">Objeto <see cref="T:System.IAsyncResult" /> que hace referencia a la conexión asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-185">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous connection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b324-186">Asincrónico `BeginConnect` debe completarse la operación mediante una llamada a la <xref:System.Net.Sockets.TcpClient.EndConnect%2A> método.</span><span class="sxs-lookup"><span data-stu-id="2b324-186">The asynchronous `BeginConnect` operation must be completed by calling the <xref:System.Net.Sockets.TcpClient.EndConnect%2A> method.</span></span> <span data-ttu-id="2b324-187">Normalmente, se invoca el método por el `asyncCallback` delegar.</span><span class="sxs-lookup"><span data-stu-id="2b324-187">Typically, the method is invoked by the `asyncCallback` delegate.</span></span>  
  
 <span data-ttu-id="2b324-188">Este método no se bloquea hasta que se complete la operación.</span><span class="sxs-lookup"><span data-stu-id="2b324-188">This method does not block until the operation completes.</span></span> <span data-ttu-id="2b324-189">Para bloquear hasta que se complete la operación, use uno de los <xref:System.Net.Sockets.TcpClient.Connect%2A> sobrecargas del método.</span><span class="sxs-lookup"><span data-stu-id="2b324-189">To block until the operation completes, use one of the <xref:System.Net.Sockets.TcpClient.Connect%2A> method overloads.</span></span>  
  
 <span data-ttu-id="2b324-190">Para obtener información detallada acerca de cómo utilizar el modelo de programación asincrónico, vea [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="2b324-190">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b324-191">En el ejemplo de código siguiente se crea un <xref:System.Net.Sockets.TcpClient> y se conecta a un host remoto.</span><span class="sxs-lookup"><span data-stu-id="2b324-191">The following code example creates a <xref:System.Net.Sockets.TcpClient> and connects to a remote host.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient1#4](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CPP/newtcpclient.cpp#4)]
 [!code-csharp[System.Net.Sockets.TcpClient1#4](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CS/newtcpclient.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b324-192">El parámetro <paramref name="address" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-192">The <paramref name="address" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="2b324-193">Error al intentar acceder al socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-193">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="2b324-194">El <see cref="T:System.Net.Sockets.Socket" /> se ha cerrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-194">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="2b324-195">Un llamador de la pila de llamadas no tiene permiso para la operación solicitada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-195">A caller higher in the call stack does not have permission for the requested operation.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2b324-196">El número de puerto no es válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-196">The port number is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginConnect">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginConnect (System.Net.IPAddress[] addresses, int port, AsyncCallback requestCallback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginConnect(class System.Net.IPAddress[] addresses, int32 port, class System.AsyncCallback requestCallback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginConnect (addresses As IPAddress(), port As Integer, requestCallback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginConnect(cli::array &lt;System::Net::IPAddress ^&gt; ^ addresses, int port, AsyncCallback ^ requestCallback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginConnect : System.Net.IPAddress[] * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="tcpClient.BeginConnect (addresses, port, requestCallback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addresses" Type="System.Net.IPAddress[]" />
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="addresses">
          <span data-ttu-id="2b324-197">Como mínimo un <see cref="T:System.Net.IPAddress" /> que designa los host remotos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-197">At least one <see cref="T:System.Net.IPAddress" /> that designates the remote hosts.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="2b324-198">Número de puerto de los host remotos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-198">The port number of the remote hosts.</span>
          </span>
        </param>
        <param name="requestCallback">
          <span data-ttu-id="2b324-199">Delegado de <see cref="T:System.AsyncCallback" /> que hace referencia al método que se invocará cuando la operación se complete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-199">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="2b324-200">Objeto definido por el usuario que contiene información sobre la operación de conexión.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-200">A user-defined object that contains information about the connect operation.</span>
          </span>
          <span data-ttu-id="2b324-201">Este objeto se pasa al delegado de <paramref name="requestCallback" /> cuando la operación se completa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-201">This object is passed to the <paramref name="requestCallback" /> delegate when the operation is complete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b324-202">Inicia una solicitud asincrónica para una conexión a host remoto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-202">Begins an asynchronous request for a remote host connection.</span>
          </span>
          <span data-ttu-id="2b324-203">El host remoto se especifica mediante una matriz <see cref="T:System.Net.IPAddress" /> y un número de puerto (<see cref="T:System.Int32" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-203">The remote host is specified by an <see cref="T:System.Net.IPAddress" /> array and a port number (<see cref="T:System.Int32" />).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b324-204">Objeto <see cref="T:System.IAsyncResult" /> que hace referencia a la conexión asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-204">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous connection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b324-205">Asincrónico `BeginConnect` debe completarse la operación mediante una llamada a la <xref:System.Net.Sockets.TcpClient.EndConnect%2A> método.</span><span class="sxs-lookup"><span data-stu-id="2b324-205">The asynchronous `BeginConnect` operation must be completed by calling the <xref:System.Net.Sockets.TcpClient.EndConnect%2A> method.</span></span> <span data-ttu-id="2b324-206">Normalmente, se invoca el método por el `asyncCallback` delegar.</span><span class="sxs-lookup"><span data-stu-id="2b324-206">Typically, the method is invoked by the `asyncCallback` delegate.</span></span>  
  
 <span data-ttu-id="2b324-207">Este método no se bloquea hasta que se complete la operación.</span><span class="sxs-lookup"><span data-stu-id="2b324-207">This method does not block until the operation completes.</span></span> <span data-ttu-id="2b324-208">Para bloquear hasta que se complete la operación, use uno de los <xref:System.Net.Sockets.TcpClient.Connect%2A> sobrecargas del método.</span><span class="sxs-lookup"><span data-stu-id="2b324-208">To block until the operation completes, use one of the <xref:System.Net.Sockets.TcpClient.Connect%2A> method overloads.</span></span>  
  
 <span data-ttu-id="2b324-209">Para obtener información detallada acerca de cómo utilizar el modelo de programación asincrónico, vea [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="2b324-209">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
 <span data-ttu-id="2b324-210">Este método se utiliza normalmente inmediatamente después de llamar a la <xref:System.Net.Dns.BeginGetHostAddresses%2A> método, que puede devolver varias direcciones IP para un solo host.</span><span class="sxs-lookup"><span data-stu-id="2b324-210">This method is typically used immediately after a call to the <xref:System.Net.Dns.BeginGetHostAddresses%2A> method, which can return multiple IP addresses for a single host.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b324-211">En el ejemplo de código siguiente se crea un <xref:System.Net.Sockets.TcpClient> y se conecta a un host remoto.</span><span class="sxs-lookup"><span data-stu-id="2b324-211">The following code example creates a <xref:System.Net.Sockets.TcpClient> and connects to a remote host.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient1#5](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CPP/newtcpclient.cpp#5)]
 [!code-csharp[System.Net.Sockets.TcpClient1#5](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CS/newtcpclient.cs#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b324-212">El parámetro <paramref name="addresses" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-212">The <paramref name="addresses" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="2b324-213">Error al intentar acceder al socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-213">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="2b324-214">El <see cref="T:System.Net.Sockets.Socket" /> se ha cerrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-214">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="2b324-215">Un llamador de la pila de llamadas no tiene permiso para la operación solicitada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-215">A caller higher in the call stack does not have permission for the requested operation.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2b324-216">El número de puerto no es válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-216">The port number is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginConnect">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginConnect (string host, int port, AsyncCallback requestCallback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginConnect(string host, int32 port, class System.AsyncCallback requestCallback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginConnect (host As String, port As Integer, requestCallback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginConnect(System::String ^ host, int port, AsyncCallback ^ requestCallback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginConnect : string * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="tcpClient.BeginConnect (host, port, requestCallback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="host">
          <span data-ttu-id="2b324-217">Nombre del host remoto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-217">The name of the remote host.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="2b324-218">Número de puerto del host remoto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-218">The port number of the remote host.</span>
          </span>
        </param>
        <param name="requestCallback">
          <span data-ttu-id="2b324-219">Delegado de <see cref="T:System.AsyncCallback" /> que hace referencia al método que se invocará cuando la operación se complete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-219">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="2b324-220">Objeto definido por el usuario que contiene información sobre la operación de conexión.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-220">A user-defined object that contains information about the connect operation.</span>
          </span>
          <span data-ttu-id="2b324-221">Este objeto se pasa al delegado de <paramref name="requestCallback" /> cuando la operación se completa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-221">This object is passed to the <paramref name="requestCallback" /> delegate when the operation is complete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b324-222">Inicia una solicitud asincrónica para una conexión a host remoto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-222">Begins an asynchronous request for a remote host connection.</span>
          </span>
          <span data-ttu-id="2b324-223">El host remoto se especifica mediante un nombre de host (<see cref="T:System.String" />) y un número de puerto (<see cref="T:System.Int32" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-223">The remote host is specified by a host name (<see cref="T:System.String" />) and a port number (<see cref="T:System.Int32" />).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b324-224">Objeto <see cref="T:System.IAsyncResult" /> que hace referencia a la conexión asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-224">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous connection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b324-225">Asincrónico `BeginConnect` debe completarse la operación mediante una llamada a la <xref:System.Net.Sockets.TcpClient.EndConnect%2A> método.</span><span class="sxs-lookup"><span data-stu-id="2b324-225">The asynchronous `BeginConnect` operation must be completed by calling the <xref:System.Net.Sockets.TcpClient.EndConnect%2A> method.</span></span> <span data-ttu-id="2b324-226">Normalmente, se invoca el método por el `asyncCallback` delegar.</span><span class="sxs-lookup"><span data-stu-id="2b324-226">Typically, the method is invoked by the `asyncCallback` delegate.</span></span>  
  
 <span data-ttu-id="2b324-227">Este método no se bloquea hasta que se complete la operación.</span><span class="sxs-lookup"><span data-stu-id="2b324-227">This method does not block until the operation completes.</span></span> <span data-ttu-id="2b324-228">Para bloquear hasta que se complete la operación, use uno de los <xref:System.Net.Sockets.TcpClient.Connect%2A> sobrecargas del método.</span><span class="sxs-lookup"><span data-stu-id="2b324-228">To block until the operation completes, use one of the <xref:System.Net.Sockets.TcpClient.Connect%2A> method overloads.</span></span>  
  
 <span data-ttu-id="2b324-229">Para obtener información detallada acerca de cómo utilizar el modelo de programación asincrónico, vea [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="2b324-229">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b324-230">En el ejemplo de código siguiente se crea un <xref:System.Net.Sockets.TcpClient> y se conecta a un host remoto.</span><span class="sxs-lookup"><span data-stu-id="2b324-230">The following code example creates a <xref:System.Net.Sockets.TcpClient> and connects to a remote host.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient1#6](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CPP/newtcpclient.cpp#6)]
 [!code-csharp[System.Net.Sockets.TcpClient1#6](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CS/newtcpclient.cs#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b324-231">El parámetro <paramref name="host" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-231">The <paramref name="host" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="2b324-232">Error al intentar acceder al socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-232">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="2b324-233">El <see cref="T:System.Net.Sockets.Socket" /> se ha cerrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-233">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="2b324-234">Un llamador de la pila de llamadas no tiene permiso para la operación solicitada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-234">A caller higher in the call stack does not have permission for the requested operation.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2b324-235">El número de puerto no es válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-235">The port number is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Client">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.Socket Client { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Sockets.Socket Client" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.Client" />
      <MemberSignature Language="VB.NET" Value="Public Property Client As Socket" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Sockets::Socket ^ Client { System::Net::Sockets::Socket ^ get(); void set(System::Net::Sockets::Socket ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Client : System.Net.Sockets.Socket with get, set" Usage="System.Net.Sockets.TcpClient.Client" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.Socket</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2b324-236">Obtiene o establece el objeto <see cref="T:System.Net.Sockets.Socket" /> subyacente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-236">Gets or sets the underlying <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2b324-237">
            <see cref="T:System.Net.Sockets.Socket" /> de red subyacente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-237">The underlying network <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b324-238"><xref:System.Net.Sockets.TcpClient> crea un <xref:System.Net.Sockets.Socket> para enviar y recibir datos a través de una red.</span><span class="sxs-lookup"><span data-stu-id="2b324-238"><xref:System.Net.Sockets.TcpClient> creates a <xref:System.Net.Sockets.Socket> to send and receive data over a network.</span></span> <span data-ttu-id="2b324-239">Las clases derivadas de `TcpClient` puede utilizar esta propiedad para obtener o establecer esto `Socket`.</span><span class="sxs-lookup"><span data-stu-id="2b324-239">Classes deriving from `TcpClient` can use this property to get or set this `Socket`.</span></span> <span data-ttu-id="2b324-240">Usar subyacente `Socket` devuelto desde `Client` si necesita tener acceso a más allá de eso que `TcpClient` proporciona.</span><span class="sxs-lookup"><span data-stu-id="2b324-240">Use the underlying `Socket` returned from `Client` if you require access beyond that which `TcpClient` provides.</span></span> <span data-ttu-id="2b324-241">También puede usar `Client` establecer subyacente `Socket` a un `Socket`.</span><span class="sxs-lookup"><span data-stu-id="2b324-241">You can also use `Client` to set the underlying `Socket` to an existing `Socket`.</span></span> <span data-ttu-id="2b324-242">Esto puede resultar útil si desea aprovechar la simplicidad de `TcpClient` mediante preexistente `Socket`.</span><span class="sxs-lookup"><span data-stu-id="2b324-242">This might be useful if you want to take advantage of the simplicity of `TcpClient` using a pre-existing `Socket`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b324-243">En el ejemplo de código siguiente se muestra el uso de la `Client` propiedad.</span><span class="sxs-lookup"><span data-stu-id="2b324-243">The following code example demonstrates the use of the `Client` property.</span></span> <span data-ttu-id="2b324-244">En este ejemplo, el tamaño del búfer de recepción de subyacente <xref:System.Net.Sockets.Socket> se cambia.</span><span class="sxs-lookup"><span data-stu-id="2b324-244">In this example, the receive buffer size of the underlying <xref:System.Net.Sockets.Socket> is changed.</span></span>  
  
 [!code-csharp[TcpClientProtectedMethodsAndPropertiesExample#1](~/samples/snippets/csharp/VS_Snippets_Remoting/TcpClientProtectedMethodsAndPropertiesExample/CS/source.cs#1)]
 [!code-vb[TcpClientProtectedMethodsAndPropertiesExample#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/TcpClientProtectedMethodsAndPropertiesExample/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Sockets.Socket" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="tcpClient.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2b324-245">Elimina esta instancia <see cref="T:System.Net.Sockets.TcpClient" /> y solicita que se cierre la conexión TCP subyacente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-245">Disposes this <see cref="T:System.Net.Sockets.TcpClient" /> instance and requests that the underlying TCP connection be closed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b324-246">El `Close` método marca la instancia como eliminada y solicita que el asociado <xref:System.Net.Sockets.Socket> cerrar la conexión TCP.</span><span class="sxs-lookup"><span data-stu-id="2b324-246">The `Close` method marks the instance as disposed and requests that the associated <xref:System.Net.Sockets.Socket> close the TCP connection.</span></span> <span data-ttu-id="2b324-247">Según el <xref:System.Net.Sockets.TcpClient.LingerState%2A> propiedad, la conexión TCP puede permanecer abierta durante algún tiempo después de la `Close` método se llama cuando se envíen los datos permanecen.</span><span class="sxs-lookup"><span data-stu-id="2b324-247">Based on the <xref:System.Net.Sockets.TcpClient.LingerState%2A> property, the TCP connection may stay open for some time after the `Close` method is called when data remains to be sent.</span></span> <span data-ttu-id="2b324-248">No hay ninguna notificación proporcionada cuando se haya completado cierre la conexión subyacente.</span><span class="sxs-lookup"><span data-stu-id="2b324-248">There is no notification provided when the underlying connection has completed closing.</span></span>  
  
 <span data-ttu-id="2b324-249">Llamar a este método producirá finalmente el cierre del asociado `Socket` y también se cerrará asociado <xref:System.Net.Sockets.NetworkStream> que se utiliza para enviar y recibir datos si se ha creado uno.</span><span class="sxs-lookup"><span data-stu-id="2b324-249">Calling this method will eventually result in the close of the associated `Socket` and will also close the associated <xref:System.Net.Sockets.NetworkStream> that is used to send and receive data if one was created.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2b324-250">Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación.</span><span class="sxs-lookup"><span data-stu-id="2b324-250">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="2b324-251">Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="2b324-251">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b324-252">En el ejemplo de código siguiente se muestra cómo cerrar una <xref:System.Net.Sockets.TcpClient> mediante una llamada a la `Close` método.</span><span class="sxs-lookup"><span data-stu-id="2b324-252">The following code example demonstrates closing a <xref:System.Net.Sockets.TcpClient> by calling the `Close` method.</span></span>  
  
 [!code-cpp[NCLTCPClientSync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLTcpClientSync/CPP/tcpclient.cpp#1)]
 [!code-csharp[NCLTCPClientSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLTcpClientSync/CS/tcpclient.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Connect">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2b324-253">Conecta el cliente a un host TCP remoto con el nombre de host y el número de puerto especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-253">Connects the client to a remote TCP host using the specified host name and port number.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public void Connect (System.Net.IPEndPoint remoteEP);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Connect(class System.Net.IPEndPoint remoteEP) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPEndPoint)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Connect (remoteEP As IPEndPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Connect(System::Net::IPEndPoint ^ remoteEP);" />
      <MemberSignature Language="F#" Value="member this.Connect : System.Net.IPEndPoint -&gt; unit" Usage="tcpClient.Connect remoteEP" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="remoteEP" Type="System.Net.IPEndPoint" />
      </Parameters>
      <Docs>
        <param name="remoteEP">
          <span data-ttu-id="2b324-254">
            <see cref="T:System.Net.IPEndPoint" /> con el que se desea conectar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-254">The <see cref="T:System.Net.IPEndPoint" /> to which you intend to connect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b324-255">Conecta el cliente a un host TCP remoto con el punto de conexión de red remoto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-255">Connects the client to a remote TCP host using the specified remote network endpoint.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b324-256">Llame a este método para establecer una conexión sincrónica de host remoto especificado <xref:System.Net.IPEndPoint>.</span><span class="sxs-lookup"><span data-stu-id="2b324-256">Call this method to establish a synchronous remote host connection to the specified <xref:System.Net.IPEndPoint>.</span></span> <span data-ttu-id="2b324-257">Antes de llamar a `Connect`, debe crear una instancia de la `IPEndPoint` clase mediante una dirección IP y un número de puerto.</span><span class="sxs-lookup"><span data-stu-id="2b324-257">Before you call `Connect`, you must create an instance of the `IPEndPoint` class using an IP address and a port number.</span></span> <span data-ttu-id="2b324-258">Use esta `IPEndPoint` como el `remoteEP` parámetro.</span><span class="sxs-lookup"><span data-stu-id="2b324-258">Use this `IPEndPoint` as the `remoteEP` parameter.</span></span> <span data-ttu-id="2b324-259">El `Connect` método se bloqueará hasta que se conecta o se produce un error.</span><span class="sxs-lookup"><span data-stu-id="2b324-259">The `Connect` method will block until it either connects or fails.</span></span> <span data-ttu-id="2b324-260">Después de conectarse con el host remoto, use el <xref:System.Net.Sockets.TcpClient.GetStream%2A> método obtener subyacente <xref:System.Net.Sockets.NetworkStream>.</span><span class="sxs-lookup"><span data-stu-id="2b324-260">After connecting with the remote host, use the <xref:System.Net.Sockets.TcpClient.GetStream%2A> method to obtain the underlying <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="2b324-261">Use esta `NetworkStream` para enviar y recibir datos.</span><span class="sxs-lookup"><span data-stu-id="2b324-261">Use this `NetworkStream` to send and receive data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2b324-262">Si recibe un <xref:System.Net.Sockets.SocketException>, utilice <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> para obtener el código de error específico.</span><span class="sxs-lookup"><span data-stu-id="2b324-262">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="2b324-263">Después de haber obtenido este código, puede hacer referencia a la [código de error de API de la versión 2 de Windows Sockets](/windows/desktop/winsock/windows-sockets-error-codes-2) documentación para obtener una descripción detallada del error.</span><span class="sxs-lookup"><span data-stu-id="2b324-263">After you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2b324-264">Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación.</span><span class="sxs-lookup"><span data-stu-id="2b324-264">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="2b324-265">Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md)</span><span class="sxs-lookup"><span data-stu-id="2b324-265">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b324-266">El siguiente ejemplo de código utiliza un <xref:System.Net.IPEndPoint> para conectar con un host remoto.</span><span class="sxs-lookup"><span data-stu-id="2b324-266">The following code example uses an <xref:System.Net.IPEndPoint> to connect with a remote host.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#7](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#7)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#7](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#7)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#7](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b324-267">El parámetro <paramref name="remoteEp" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-267">The <paramref name="remoteEp" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="2b324-268">Se produjo un error al acceder al socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-268">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="2b324-269">La clase <see cref="T:System.Net.Sockets.TcpClient" /> está cerrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-269">The <see cref="T:System.Net.Sockets.TcpClient" /> is closed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.IPEndPoint" />
        <altmember cref="M:System.Net.Sockets.TcpClient.GetStream" />
      </Docs>
    </Member>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public void Connect (System.Net.IPAddress address, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Connect(class System.Net.IPAddress address, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Connect (address As IPAddress, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Connect(System::Net::IPAddress ^ address, int port);" />
      <MemberSignature Language="F#" Value="member this.Connect : System.Net.IPAddress * int -&gt; unit" Usage="tcpClient.Connect (address, port)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="address">
          <span data-ttu-id="2b324-270">
            <see cref="T:System.Net.IPAddress" /> del host con el que se desea conectar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-270">The <see cref="T:System.Net.IPAddress" /> of the host to which you intend to connect.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="2b324-271">Número de puerto con el que se desea conectar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-271">The port number to which you intend to connect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b324-272">Conecta el cliente a un host TCP remoto con la dirección IP y el número de puerto especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-272">Connects the client to a remote TCP host using the specified IP address and port number.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b324-273">Llame a este método para establecer una conexión sincrónica de host remoto especificado <xref:System.Net.IPAddress> y número de puerto.</span><span class="sxs-lookup"><span data-stu-id="2b324-273">Call this method to establish a synchronous remote host connection to the specified <xref:System.Net.IPAddress> and port number.</span></span> <span data-ttu-id="2b324-274">El <xref:System.Net.Sockets.TcpClient.Connect%2A> método se bloqueará hasta que se conecta o se produce un error.</span><span class="sxs-lookup"><span data-stu-id="2b324-274">The <xref:System.Net.Sockets.TcpClient.Connect%2A> method will block until it either connects or fails.</span></span> <span data-ttu-id="2b324-275">Después de conectarse con el host remoto, use el <xref:System.Net.Sockets.TcpClient.GetStream%2A> método obtener subyacente <xref:System.Net.Sockets.NetworkStream>.</span><span class="sxs-lookup"><span data-stu-id="2b324-275">After connecting with the remote host, use the <xref:System.Net.Sockets.TcpClient.GetStream%2A> method to obtain the underlying <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="2b324-276">Use esta `NetworkStream` para enviar y recibir datos.</span><span class="sxs-lookup"><span data-stu-id="2b324-276">Use this `NetworkStream` to send and receive data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2b324-277">Si recibe un <xref:System.Net.Sockets.SocketException>, utilice <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> para obtener el código de error específico.</span><span class="sxs-lookup"><span data-stu-id="2b324-277">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="2b324-278">Después de haber obtenido este código, puede hacer referencia a la [código de error de API de la versión 2 de Windows Sockets](/windows/desktop/winsock/windows-sockets-error-codes-2) documentación para obtener una descripción detallada del error.</span><span class="sxs-lookup"><span data-stu-id="2b324-278">After you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2b324-279">Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación.</span><span class="sxs-lookup"><span data-stu-id="2b324-279">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="2b324-280">Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="2b324-280">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b324-281">En el ejemplo de código siguiente se usa una dirección IP y el número de puerto para conectarse con un host remoto.</span><span class="sxs-lookup"><span data-stu-id="2b324-281">The following code example uses an IP Address and port number to connect with a remote host.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#6](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#6)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#6](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#6)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#6](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b324-282">El parámetro <paramref name="address" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-282">The <paramref name="address" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2b324-283">
            <paramref name="port" /> no se encuentra en el intervalo definido por <see cref="F:System.Net.IPEndPoint.MinPort" /> y <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-283">The <paramref name="port" /> is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="2b324-284">Se produjo un error al acceder al socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-284">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="2b324-285">
            <see cref="T:System.Net.Sockets.TcpClient" /> está cerrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-285">
              <see cref="T:System.Net.Sockets.TcpClient" /> is closed.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.TcpClient.GetStream" />
      </Docs>
    </Member>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public void Connect (System.Net.IPAddress[] ipAddresses, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Connect(class System.Net.IPAddress[] ipAddresses, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Connect (ipAddresses As IPAddress(), port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Connect(cli::array &lt;System::Net::IPAddress ^&gt; ^ ipAddresses, int port);" />
      <MemberSignature Language="F#" Value="member this.Connect : System.Net.IPAddress[] * int -&gt; unit" Usage="tcpClient.Connect (ipAddresses, port)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ipAddresses" Type="System.Net.IPAddress[]" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ipAddresses">
          <span data-ttu-id="2b324-286">Matriz <see cref="T:System.Net.IPAddress" /> del host con el que desea conectar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-286">The <see cref="T:System.Net.IPAddress" /> array of the host to which you intend to connect.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="2b324-287">Número de puerto con el que se desea conectar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-287">The port number to which you intend to connect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b324-288">Conecta el cliente a un host TCP remoto con las direcciones IP y el número de puerto que se especificaron.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-288">Connects the client to a remote TCP host using the specified IP addresses and port number.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b324-289">Este método se utiliza normalmente inmediatamente después de llamar a la <xref:System.Net.Dns.BeginGetHostAddresses%2A> método, que puede devolver varias direcciones IP para un solo host.</span><span class="sxs-lookup"><span data-stu-id="2b324-289">This method is typically used immediately after a call to the <xref:System.Net.Dns.BeginGetHostAddresses%2A> method, which can return multiple IP addresses for a single host.</span></span> <span data-ttu-id="2b324-290">Llame a la `Connect` método para establecer una conexión sincrónica de host remoto al host especificado por la matriz de <xref:System.Net.IPAddress> elementos y el número de puerto.</span><span class="sxs-lookup"><span data-stu-id="2b324-290">Call the `Connect` method to establish a synchronous remote host connection to the host specified by the array of <xref:System.Net.IPAddress> elements and the port number.</span></span> <span data-ttu-id="2b324-291">El `Connect` método se bloqueará hasta que se conecta o se produce un error.</span><span class="sxs-lookup"><span data-stu-id="2b324-291">The `Connect` method will block until it either connects or fails.</span></span> <span data-ttu-id="2b324-292">Después de conectarse con el host remoto, use el <xref:System.Net.Sockets.TcpClient.GetStream%2A> método obtener subyacente <xref:System.Net.Sockets.NetworkStream>.</span><span class="sxs-lookup"><span data-stu-id="2b324-292">After connecting with the remote host, use the <xref:System.Net.Sockets.TcpClient.GetStream%2A> method to obtain the underlying <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="2b324-293">Use esta `NetworkStream` para enviar y recibir datos.</span><span class="sxs-lookup"><span data-stu-id="2b324-293">Use this `NetworkStream` to send and receive data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2b324-294">Si recibe un <xref:System.Net.Sockets.SocketException>, utilice <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> para obtener el código de error específico.</span><span class="sxs-lookup"><span data-stu-id="2b324-294">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="2b324-295">Después de haber obtenido este código, puede consultar la documentación de códigos de error de Windows Sockets versión 2 API en MSDN library en [ http://msdn.microsoft.com/library ](https://msdn.microsoft.com/library) para obtener una descripción detallada del error.</span><span class="sxs-lookup"><span data-stu-id="2b324-295">After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in the MSDN library at [http://msdn.microsoft.com/library](https://msdn.microsoft.com/library) for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2b324-296">Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación.</span><span class="sxs-lookup"><span data-stu-id="2b324-296">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="2b324-297">Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="2b324-297">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b324-298">En el ejemplo de código siguiente se usa una dirección IP y el número de puerto para conectarse con un host remoto.</span><span class="sxs-lookup"><span data-stu-id="2b324-298">The following code example uses an IP Address and port number to connect with a remote host.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient1#8](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CPP/newtcpclient.cpp#8)]
 [!code-csharp[System.Net.Sockets.TcpClient1#8](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CS/newtcpclient.cs#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b324-299">El parámetro <paramref name="ipAddresses" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-299">The <paramref name="ipAddresses" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2b324-300">El número de puerto no es válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-300">The port number is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="2b324-301">Error al intentar acceder al socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-301">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="2b324-302">El <see cref="T:System.Net.Sockets.Socket" /> se ha cerrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-302">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="2b324-303">Un llamador de la pila de llamadas no tiene permiso para la operación solicitada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-303">A caller higher in the call stack does not have permission for the requested operation.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="2b324-304">Este método es válido para sockets que utilizan el marcador <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> o el marcador <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-304">This method is valid for sockets that use the <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> flag or the <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> flag.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.Sockets.TcpListener" />
      </Docs>
    </Member>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public void Connect (string hostname, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Connect(string hostname, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Connect (hostname As String, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Connect(System::String ^ hostname, int port);" />
      <MemberSignature Language="F#" Value="member this.Connect : string * int -&gt; unit" Usage="tcpClient.Connect (hostname, port)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostname" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="hostname">
          <span data-ttu-id="2b324-305">Nombre DNS del host remoto con el que se desea establecer conexión.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-305">The DNS name of the remote host to which you intend to connect.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="2b324-306">Número de puerto del host remoto con el que se desea establecer conexión.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-306">The port number of the remote host to which you intend to connect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b324-307">Conecta el cliente al puerto especificado en el host especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-307">Connects the client to the specified port on the specified host.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b324-308">Llame a este método para establecer una conexión sincrónica de host remoto con el nombre de host especificado y el número de puerto.</span><span class="sxs-lookup"><span data-stu-id="2b324-308">Call this method to establish a synchronous remote host connection to the specified host name and port number.</span></span> <span data-ttu-id="2b324-309">El `Connect` método se bloqueará hasta que se conecta o se produce un error.</span><span class="sxs-lookup"><span data-stu-id="2b324-309">The `Connect` method will block until it either connects or fails.</span></span> <span data-ttu-id="2b324-310">Después de conectarse con el host remoto, use el <xref:System.Net.Sockets.TcpClient.GetStream%2A> método obtener subyacente <xref:System.Net.Sockets.NetworkStream>.</span><span class="sxs-lookup"><span data-stu-id="2b324-310">After connecting with the remote host, use the <xref:System.Net.Sockets.TcpClient.GetStream%2A> method to obtain the underlying <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="2b324-311">Use esta `NetworkStream` para enviar y recibir datos.</span><span class="sxs-lookup"><span data-stu-id="2b324-311">Use this  `NetworkStream` to send and receive data.</span></span>  
  
 <span data-ttu-id="2b324-312">Si IPv6 está habilitado y el `Connect(String, Int32)` método se llama para conectarse a un host que se resuelve en ambos IPv6 y direcciones IPv4, la conexión a la dirección será de IPv6 intenta primero antes de la dirección IPv4.</span><span class="sxs-lookup"><span data-stu-id="2b324-312">If IPv6 is enabled and the `Connect(String, Int32)` method is called to connect to a host that resolves to both IPv6 and IPv4 addresses, the connection to the IPv6 address will be attempted first before the IPv4 address.</span></span> <span data-ttu-id="2b324-313">Esto puede tener el efecto de retrasar el tiempo para establecer la conexión si el host no está escuchando en la dirección IPv6.</span><span class="sxs-lookup"><span data-stu-id="2b324-313">This may have the effect of delaying the time to establish the connection if the host is not listening on the IPv6 address.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2b324-314">Si recibe un <xref:System.Net.Sockets.SocketException>, utilice <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> para obtener el código de error específico.</span><span class="sxs-lookup"><span data-stu-id="2b324-314">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="2b324-315">Después de haber obtenido este código, puede hacer referencia a la [código de error de API de la versión 2 de Windows Sockets](/windows/desktop/winsock/windows-sockets-error-codes-2) documentación para obtener una descripción detallada del error.</span><span class="sxs-lookup"><span data-stu-id="2b324-315">After you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2b324-316">Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación.</span><span class="sxs-lookup"><span data-stu-id="2b324-316">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="2b324-317">Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="2b324-317">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b324-318">El ejemplo de código siguiente utiliza el nombre de host y el puerto número para establecer conexión con un host remoto.</span><span class="sxs-lookup"><span data-stu-id="2b324-318">The following code example uses the host name and port number to connect with a remote host.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#5](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#5)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#5](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#5)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b324-319">El parámetro <paramref name="hostname" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-319">The <paramref name="hostname" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2b324-320">El parámetro <paramref name="port" /> no está entre <see cref="F:System.Net.IPEndPoint.MinPort" /> y <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-320">The <paramref name="port" /> parameter is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="2b324-321">Se produjo un error al acceder al socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-321">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="2b324-322">
            <see cref="T:System.Net.Sockets.TcpClient" /> está cerrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-322">
              <see cref="T:System.Net.Sockets.TcpClient" /> is closed.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" />
        <altmember cref="M:System.Net.Sockets.TcpClient.GetStream" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ConnectAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2b324-323">Conecta el cliente a un host TCP remoto con el nombre de host y el número de puerto especificados como una operación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-323">Connects the client to a remote TCP host using the specified host name and port number as an asynchronous operation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConnectAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ConnectAsync (System.Net.IPAddress address, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ConnectAsync(class System.Net.IPAddress address, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConnectAsync (address As IPAddress, port As Integer) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ ConnectAsync(System::Net::IPAddress ^ address, int port);" />
      <MemberSignature Language="F#" Value="member this.ConnectAsync : System.Net.IPAddress * int -&gt; System.Threading.Tasks.Task" Usage="tcpClient.ConnectAsync (address, port)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="address">
          <span data-ttu-id="2b324-324">
            <see cref="T:System.Net.IPAddress" /> del host con el que se desea conectar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-324">The <see cref="T:System.Net.IPAddress" /> of the host to which you intend to connect.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="2b324-325">Número de puerto con el que se desea conectar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-325">The port number to which you intend to connect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b324-326">Conecta el cliente a un host TCP remoto con la dirección IP y el número de puerto especificados como una operación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-326">Connects the client to a remote TCP host using the specified IP address and port number as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b324-327">Devuelve <see cref="T:System.Threading.Tasks.Task" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-327">Returns <see cref="T:System.Threading.Tasks.Task" /></span>
          </span>
          <span data-ttu-id="2b324-328">Objeto de tarea que representa la operación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-328">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b324-329">Esta operación no se bloqueará.</span><span class="sxs-lookup"><span data-stu-id="2b324-329">This operation will not block.</span></span> <span data-ttu-id="2b324-330">La expresión devuelta devuelve <xref:System.Threading.Tasks.Task> objeto se completará una vez establecida la conexión TCP.</span><span class="sxs-lookup"><span data-stu-id="2b324-330">The returned Returns <xref:System.Threading.Tasks.Task> object will complete after the TCP connection has been established.</span></span> <span data-ttu-id="2b324-331">Este método no bloquea el subproceso de llamada mientras la solicitud de conexión está en curso.</span><span class="sxs-lookup"><span data-stu-id="2b324-331">This method does not block the calling thread while the connection request is underway.</span></span>  
  
 <span data-ttu-id="2b324-332">Llame a este método para establecer una conexión sincrónica de host remoto especificado <xref:System.Net.IPAddress> y número de puerto como una operación asincrónica.</span><span class="sxs-lookup"><span data-stu-id="2b324-332">Call this method to establish a synchronous remote host connection to the specified <xref:System.Net.IPAddress> and port number as an asynchronous operation.</span></span> <span data-ttu-id="2b324-333">Después de conectarse con el host remoto, use el <xref:System.Net.Sockets.TcpClient.GetStream%2A> método obtener subyacente <xref:System.Net.Sockets.NetworkStream>.</span><span class="sxs-lookup"><span data-stu-id="2b324-333">After connecting with the remote host, use the <xref:System.Net.Sockets.TcpClient.GetStream%2A> method to obtain the underlying <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="2b324-334">Use esta `NetworkStream` para enviar y recibir datos.</span><span class="sxs-lookup"><span data-stu-id="2b324-334">Use this `NetworkStream` to send and receive data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2b324-335">Si recibe un <xref:System.Net.Sockets.SocketException>, utilice <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> para obtener el código de error específico.</span><span class="sxs-lookup"><span data-stu-id="2b324-335">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="2b324-336">Después de haber obtenido este código, puede hacer referencia a la [código de error de API de la versión 2 de Windows Sockets](/windows/desktop/winsock/windows-sockets-error-codes-2) documentación para obtener una descripción detallada del error.</span><span class="sxs-lookup"><span data-stu-id="2b324-336">After you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2b324-337">Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación.</span><span class="sxs-lookup"><span data-stu-id="2b324-337">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="2b324-338">Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="2b324-338">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b324-339">El parámetro <paramref name="address" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-339">The <paramref name="address" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2b324-340">
            <paramref name="port" /> no se encuentra en el intervalo definido por <see cref="F:System.Net.IPEndPoint.MinPort" /> y <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-340">The <paramref name="port" /> is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="2b324-341">Se produjo un error al acceder al socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-341">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="2b324-342">
            <see cref="T:System.Net.Sockets.TcpClient" /> está cerrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-342">
              <see cref="T:System.Net.Sockets.TcpClient" /> is closed.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.TcpClient.GetStream" />
      </Docs>
    </Member>
    <Member MemberName="ConnectAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ConnectAsync (System.Net.IPAddress[] addresses, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ConnectAsync(class System.Net.IPAddress[] addresses, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConnectAsync (addresses As IPAddress(), port As Integer) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ ConnectAsync(cli::array &lt;System::Net::IPAddress ^&gt; ^ addresses, int port);" />
      <MemberSignature Language="F#" Value="member this.ConnectAsync : System.Net.IPAddress[] * int -&gt; System.Threading.Tasks.Task" Usage="tcpClient.ConnectAsync (addresses, port)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addresses" Type="System.Net.IPAddress[]" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="addresses">
          <span data-ttu-id="2b324-343">Matriz <see cref="T:System.Net.IPAddress" /> del host con el que desea conectar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-343">The <see cref="T:System.Net.IPAddress" /> array of the host to which you intend to connect.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="2b324-344">Número de puerto con el que se desea conectar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-344">The port number to which you intend to connect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b324-345">Conecta el cliente a un host TCP remoto con las direcciones IP y el número de puerto especificados como una operación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-345">Connects the client to a remote TCP host using the specified IP addresses and port number as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b324-346">Devuelve <see cref="T:System.Threading.Tasks.Task" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-346">Returns <see cref="T:System.Threading.Tasks.Task" /></span>
          </span>
          <span data-ttu-id="2b324-347">Objeto de tarea que representa la operación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-347">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b324-348">Esta operación no se bloqueará.</span><span class="sxs-lookup"><span data-stu-id="2b324-348">This operation will not block.</span></span> <span data-ttu-id="2b324-349">La expresión devuelta devuelve <xref:System.Threading.Tasks.Task> objeto se completará una vez establecida la conexión TCP.</span><span class="sxs-lookup"><span data-stu-id="2b324-349">The returned Returns <xref:System.Threading.Tasks.Task> object will complete after the TCP connection has been established.</span></span> <span data-ttu-id="2b324-350">Este método no bloquea el subproceso de llamada mientras la solicitud de conexión está en curso.</span><span class="sxs-lookup"><span data-stu-id="2b324-350">This method does not block the calling thread while the connection request is underway.</span></span>  
  
 <span data-ttu-id="2b324-351">Este método se utiliza normalmente inmediatamente después de llamar a la <xref:System.Net.Dns.BeginGetHostAddresses%2A> método, que puede devolver varias direcciones IP para un solo host.</span><span class="sxs-lookup"><span data-stu-id="2b324-351">This method is typically used immediately after a call to the <xref:System.Net.Dns.BeginGetHostAddresses%2A> method, which can return multiple IP addresses for a single host.</span></span> <span data-ttu-id="2b324-352">Llame a este método para establecer una conexión sincrónica de host remoto al host especificado por la matriz de <xref:System.Net.IPAddress> elementos y el número de puerto como una operación asincrónica.</span><span class="sxs-lookup"><span data-stu-id="2b324-352">Call this method to establish a synchronous remote host connection to the host specified by the array of <xref:System.Net.IPAddress> elements and the port number as an asynchronous operation.</span></span> <span data-ttu-id="2b324-353">Después de conectarse con el host remoto, use el <xref:System.Net.Sockets.TcpClient.GetStream%2A> método obtener subyacente <xref:System.Net.Sockets.NetworkStream>.</span><span class="sxs-lookup"><span data-stu-id="2b324-353">After connecting with the remote host, use the <xref:System.Net.Sockets.TcpClient.GetStream%2A> method to obtain the underlying <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="2b324-354">Use esta `NetworkStream` para enviar y recibir datos.</span><span class="sxs-lookup"><span data-stu-id="2b324-354">Use this `NetworkStream` to send and receive data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2b324-355">Si recibe un <xref:System.Net.Sockets.SocketException>, utilice <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> para obtener el código de error específico.</span><span class="sxs-lookup"><span data-stu-id="2b324-355">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="2b324-356">Después de haber obtenido este código, puede consultar la documentación de códigos de error de Windows Sockets versión 2 API en MSDN library en [ http://msdn.microsoft.com/library ](https://msdn.microsoft.com/library) para obtener una descripción detallada del error.</span><span class="sxs-lookup"><span data-stu-id="2b324-356">After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in the MSDN library at [http://msdn.microsoft.com/library](https://msdn.microsoft.com/library) for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2b324-357">Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación.</span><span class="sxs-lookup"><span data-stu-id="2b324-357">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="2b324-358">Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="2b324-358">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b324-359">El parámetro <paramref name="ipAddresses" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-359">The <paramref name="ipAddresses" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2b324-360">El número de puerto no es válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-360">The port number is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="2b324-361">Error al intentar acceder al socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-361">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="2b324-362">El <see cref="T:System.Net.Sockets.Socket" /> se ha cerrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-362">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="2b324-363">Un llamador de la pila de llamadas no tiene permiso para la operación solicitada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-363">A caller higher in the call stack does not have permission for the requested operation.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="2b324-364">Este método es válido para sockets que utilizan el marcador <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> o el marcador <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-364">This method is valid for sockets that use the <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> flag or the <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> flag.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.Sockets.TcpListener" />
      </Docs>
    </Member>
    <Member MemberName="ConnectAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ConnectAsync (string host, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ConnectAsync(string host, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConnectAsync (host As String, port As Integer) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ ConnectAsync(System::String ^ host, int port);" />
      <MemberSignature Language="F#" Value="member this.ConnectAsync : string * int -&gt; System.Threading.Tasks.Task" Usage="tcpClient.ConnectAsync (host, port)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="host">
          <span data-ttu-id="2b324-365">Nombre DNS del host remoto con el que se desea establecer conexión.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-365">The DNS name of the remote host to which you intend to connect.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="2b324-366">Número de puerto del host remoto con el que se desea establecer conexión.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-366">The port number of the remote host to which you intend to connect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b324-367">Conecta al cliente con el puerto TCP especificado en el host especificado como una operación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-367">Connects the client to the specified TCP port on the specified host as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b324-368">Devuelve <see cref="T:System.Threading.Tasks.Task" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-368">Returns <see cref="T:System.Threading.Tasks.Task" /></span>
          </span>
          <span data-ttu-id="2b324-369">Objeto de tarea que representa la operación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-369">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b324-370">Esta operación no se bloqueará.</span><span class="sxs-lookup"><span data-stu-id="2b324-370">This operation will not block.</span></span> <span data-ttu-id="2b324-371">La expresión devuelta devuelve <xref:System.Threading.Tasks.Task> objeto se completará una vez establecida la conexión TCP.</span><span class="sxs-lookup"><span data-stu-id="2b324-371">The returned Returns <xref:System.Threading.Tasks.Task> object will complete after the TCP connection has been established.</span></span> <span data-ttu-id="2b324-372">Este método no bloquea el subproceso de llamada mientras la solicitud de conexión está en curso.</span><span class="sxs-lookup"><span data-stu-id="2b324-372">This method does not block the calling thread while the connection request is underway.</span></span>  
  
 <span data-ttu-id="2b324-373">Llame a este método para establecer una conexión sincrónica de host remoto con el nombre de host especificado y el puerto número como una operación asincrónica.</span><span class="sxs-lookup"><span data-stu-id="2b324-373">Call this method to establish a synchronous remote host connection to the specified host name and port number as an asynchronous operation.</span></span> <span data-ttu-id="2b324-374">Después de conectarse con el host remoto, use el <xref:System.Net.Sockets.TcpClient.GetStream%2A> método obtener subyacente <xref:System.Net.Sockets.NetworkStream>.</span><span class="sxs-lookup"><span data-stu-id="2b324-374">After connecting with the remote host, use the <xref:System.Net.Sockets.TcpClient.GetStream%2A> method to obtain the underlying <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="2b324-375">Use esta `NetworkStream` para enviar y recibir datos.</span><span class="sxs-lookup"><span data-stu-id="2b324-375">Use this `NetworkStream` to send and receive data.</span></span>  
  
 <span data-ttu-id="2b324-376">Si IPv6 está habilitado y el <xref:System.Net.Sockets.TcpClient.ConnectAsync%28System.String%2CSystem.Int32%29> método se llama para conectarse a un host que se resuelve en ambos IPv6 y direcciones IPv4, la conexión a la dirección será de IPv6 intenta primero antes de la dirección IPv4.</span><span class="sxs-lookup"><span data-stu-id="2b324-376">If IPv6 is enabled and the <xref:System.Net.Sockets.TcpClient.ConnectAsync%28System.String%2CSystem.Int32%29> method is called to connect to a host that resolves to both IPv6 and IPv4 addresses, the connection to the IPv6 address will be attempted first before the IPv4 address.</span></span> <span data-ttu-id="2b324-377">Esto puede tener el efecto de retrasar el tiempo para establecer la conexión si el host no está escuchando en la dirección IPv6.</span><span class="sxs-lookup"><span data-stu-id="2b324-377">This may have the effect of delaying the time to establish the connection if the host is not listening on the IPv6 address.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2b324-378">Si recibe un <xref:System.Net.Sockets.SocketException>, utilice <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> para obtener el código de error específico.</span><span class="sxs-lookup"><span data-stu-id="2b324-378">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="2b324-379">Después de haber obtenido este código, puede hacer referencia a la [código de error de API de la versión 2 de Windows Sockets](/windows/desktop/winsock/windows-sockets-error-codes-2) documentación para obtener una descripción detallada del error.</span><span class="sxs-lookup"><span data-stu-id="2b324-379">After you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2b324-380">Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación.</span><span class="sxs-lookup"><span data-stu-id="2b324-380">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="2b324-381">Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="2b324-381">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b324-382">El parámetro <paramref name="hostname" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-382">The <paramref name="hostname" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2b324-383">El parámetro <paramref name="port" /> no está entre <see cref="F:System.Net.IPEndPoint.MinPort" /> y <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-383">The <paramref name="port" /> parameter is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="2b324-384">Se produjo un error al acceder al socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-384">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="2b324-385">
            <see cref="T:System.Net.Sockets.TcpClient" /> está cerrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-385">
              <see cref="T:System.Net.Sockets.TcpClient" /> is closed.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" />
        <altmember cref="M:System.Net.Sockets.TcpClient.GetStream" />
      </Docs>
    </Member>
    <Member MemberName="Connected">
      <MemberSignature Language="C#" Value="public bool Connected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Connected" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.Connected" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Connected As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Connected { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Connected : bool" Usage="System.Net.Sockets.TcpClient.Connected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2b324-386">Obtiene un valor que indica si el <see cref="T:System.Net.Sockets.Socket" /> subyacente de un <see cref="T:System.Net.Sockets.TcpClient" /> está conectado a un host remoto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-386">Gets a value indicating whether the underlying <see cref="T:System.Net.Sockets.Socket" /> for a <see cref="T:System.Net.Sockets.TcpClient" /> is connected to a remote host.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2b324-387">
            <see langword="true" /> si el socket de <see cref="P:System.Net.Sockets.TcpClient.Client" /> estaba conectado a un recurso remoto desde la operación más reciente; de lo contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-387">
              <see langword="true" /> if the <see cref="P:System.Net.Sockets.TcpClient.Client" /> socket was connected to a remote resource as of the most recent operation; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b324-388">El `Connected` propiedad obtiene el estado de conexión de la <xref:System.Net.Sockets.TcpClient.Client%2A> socket a partir de la última operación de E/S.</span><span class="sxs-lookup"><span data-stu-id="2b324-388">The `Connected` property gets the connection state of the <xref:System.Net.Sockets.TcpClient.Client%2A> socket as of the last I/O operation.</span></span> <span data-ttu-id="2b324-389">Cuando devuelve `false`, el `Client` socket nunca se conectó o ya no está conectado.</span><span class="sxs-lookup"><span data-stu-id="2b324-389">When it returns `false`, the `Client` socket was either never connected, or is no longer connected.</span></span>  
  
 <span data-ttu-id="2b324-390">Dado que el `Connected` propiedad sólo refleja el estado de la conexión a partir de la operación más reciente, debe intentar enviar o recibir un mensaje para determinar el estado actual.</span><span class="sxs-lookup"><span data-stu-id="2b324-390">Because the `Connected` property only reflects the state of the connection as of the most recent operation, you should attempt to send or receive a message to determine the current state.</span></span> <span data-ttu-id="2b324-391">Una vez que se produce un error de envío de mensaje, esta propiedad ya no devuelve `true`.</span><span class="sxs-lookup"><span data-stu-id="2b324-391">After the message send fails, this property no longer returns `true`.</span></span> <span data-ttu-id="2b324-392">Tenga en cuenta que este comportamiento es así por diseño.</span><span class="sxs-lookup"><span data-stu-id="2b324-392">Note that this behavior is by design.</span></span> <span data-ttu-id="2b324-393">Confiable no puede comprobar el estado de la conexión porque, en el tiempo entre la prueba y el envío y recepción, la conexión podría haberse perdida.</span><span class="sxs-lookup"><span data-stu-id="2b324-393">You cannot reliably test the state of the connection because, in the time between the test and a send/receive, the connection could have been lost.</span></span> <span data-ttu-id="2b324-394">El código debe suponer el socket está conectado y correctamente las transmisiones de error de identificador.</span><span class="sxs-lookup"><span data-stu-id="2b324-394">Your code should assume the socket is connected, and gracefully handle failed transmissions.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b324-395">El siguiente ejemplo de código se conecta a un punto de conexión remota y, a continuación, comprueba la conexión.</span><span class="sxs-lookup"><span data-stu-id="2b324-395">The following code example connects to a remote endpoint and then verifies the connection.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient1#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CPP/newtcpclient.cpp#2)]
 [!code-csharp[System.Net.Sockets.TcpClient1#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CS/newtcpclient.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="tcpClient.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2b324-396">Libera los recursos administrados y no administrados que utiliza el objeto <see cref="T:System.Net.Sockets.TcpClient" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-396">Releases the managed and unmanaged resources used by the <see cref="T:System.Net.Sockets.TcpClient" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="tcpClient.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="2b324-397">Se establece en <see langword="true" /> para liberar tanto los recursos administrados como los no administrados; se establece en <see langword="false" /> para liberar únicamente los recursos no administrados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-397">Set to <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b324-398">Libera los recursos no administrados que usa <see cref="T:System.Net.Sockets.TcpClient" /> y, de forma opcional, libera los recursos administrados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-398">Releases the unmanaged resources used by the <see cref="T:System.Net.Sockets.TcpClient" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b324-399">Este método se llama por el público `Dispose()` método y el <xref:System.Object.Finalize%2A> método.</span><span class="sxs-lookup"><span data-stu-id="2b324-399">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="2b324-400">`Dispose()` invoca este método con el `disposing` parámetro establecido en `true`.</span><span class="sxs-lookup"><span data-stu-id="2b324-400">`Dispose()` invokes this method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="2b324-401">`Finalize` invoca este método con `disposing` establecido en `false`.</span><span class="sxs-lookup"><span data-stu-id="2b324-401">`Finalize` invokes this method with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="2b324-402">Cuando el parámetro `disposing` es `true`, este método libera todos los recursos retenidos por los objetos administrados a los que el control <xref:System.Net.Sockets.TcpClient> hace referencia.</span><span class="sxs-lookup"><span data-stu-id="2b324-402">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Net.Sockets.TcpClient> references.</span></span> <span data-ttu-id="2b324-403">Para ello, invocando el `Dispose()` método de cada objeto que se hace referencia.</span><span class="sxs-lookup"><span data-stu-id="2b324-403">It does this by invoking the `Dispose()` method of each referenced object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2b324-404">Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación.</span><span class="sxs-lookup"><span data-stu-id="2b324-404">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="2b324-405">Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="2b324-405">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="2b324-406">
              <see langword="Dispose" /> puede recibir varias llamadas de otros objetos.</span>
            <span class="sxs-lookup">
              <span data-stu-id="2b324-406">
                <see langword="Dispose" /> can be called multiple times by other objects.</span>
            </span>
            <span data-ttu-id="2b324-407">Al invalidar <see langword="Dispose(Boolean)" />, tenga cuidado de no hacer referencia a objetos que se hayan eliminado en una llamada anterior a <see langword="Dispose" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="2b324-407">When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span>
            </span>
            <span data-ttu-id="2b324-408">Para obtener más información sobre cómo implementar <see langword="Dispose(Boolean)" />, consulte [implementar un método Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            <span class="sxs-lookup">
              <span data-stu-id="2b324-408">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            </span>
            <span data-ttu-id="2b324-409">Para obtener más información acerca de <see langword="Dispose" /> y <see cref="M:System.Object.Finalize" />, consulte [limpiar recursos no administrados](~/docs/standard/garbage-collection/unmanaged.md) y [reemplazar el método Finalize](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span>
            <span class="sxs-lookup">
              <span data-stu-id="2b324-409">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="EndConnect">
      <MemberSignature Language="C#" Value="public void EndConnect (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndConnect(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndConnect (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndConnect(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndConnect : IAsyncResult -&gt; unit" Usage="tcpClient.EndConnect asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="2b324-410">Objeto <see cref="T:System.IAsyncResult" /> devuelto por una llamada a <see cref="Overload:System.Net.Sockets.TcpClient.BeginConnect" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-410">An <see cref="T:System.IAsyncResult" /> object returned by a call to <see cref="Overload:System.Net.Sockets.TcpClient.BeginConnect" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b324-411">Finaliza un intento de conexión asincrónica pendiente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-411">Ends a pending asynchronous connection attempt.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b324-412">Este método se bloquea hasta que la operación se complete.</span><span class="sxs-lookup"><span data-stu-id="2b324-412">This method blocks until the operation is complete.</span></span> <span data-ttu-id="2b324-413">Para realizar esta operación sincrónicamente, utilice un <xref:System.Net.Sockets.TcpClient.Connect%2A> método.</span><span class="sxs-lookup"><span data-stu-id="2b324-413">To perform this operation synchronously, use a <xref:System.Net.Sockets.TcpClient.Connect%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2b324-414">Si recibe un <xref:System.Net.Sockets.SocketException>, utilice <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> para obtener el código de error específico.</span><span class="sxs-lookup"><span data-stu-id="2b324-414">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="2b324-415">Después de haber obtenido este código, puede consultar la documentación de códigos de error de Windows Sockets versión 2 API en MSDN library en [ http://msdn.microsoft.com/library ](https://msdn.microsoft.com/library) para obtener una descripción detallada del error.</span><span class="sxs-lookup"><span data-stu-id="2b324-415">After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in the MSDN library at [http://msdn.microsoft.com/library](https://msdn.microsoft.com/library) for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b324-416">El siguiente ejemplo de código finaliza el intento de conexión asincrónica.</span><span class="sxs-lookup"><span data-stu-id="2b324-416">The following code example ends the asynchronous connection attempt.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient1#7](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CPP/newtcpclient.cpp#7)]
 [!code-csharp[System.Net.Sockets.TcpClient1#7](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CS/newtcpclient.cs#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2b324-417">El parámetro <paramref name="asyncResult" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-417">The <paramref name="asyncResult" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2b324-418">El parámetro <paramref name="asyncResult" /> no se devolvió mediante una llamada a un método <see cref="Overload:System.Net.Sockets.TcpClient.BeginConnect" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-418">The <paramref name="asyncResult" /> parameter was not returned by a call to a <see cref="Overload:System.Net.Sockets.TcpClient.BeginConnect" /> method.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2b324-419">Se ha llamado previamente al método <see cref="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)" /> para la conexión asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-419">The <see cref="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)" /> method was previously called for the asynchronous connection.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="2b324-420">Error al intentar obtener acceso a <see cref="T:System.Net.Sockets.Socket" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-420">An error occurred when attempting to access the <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="2b324-421">El objeto <see cref="T:System.Net.Sockets.Socket" /> subyacente se ha cerrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-421">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ExclusiveAddressUse">
      <MemberSignature Language="C#" Value="public bool ExclusiveAddressUse { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExclusiveAddressUse" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.ExclusiveAddressUse" />
      <MemberSignature Language="VB.NET" Value="Public Property ExclusiveAddressUse As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExclusiveAddressUse { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ExclusiveAddressUse : bool with get, set" Usage="System.Net.Sockets.TcpClient.ExclusiveAddressUse" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2b324-422">Obtiene o establece un valor <see cref="T:System.Boolean" /> que especifica si el <see cref="T:System.Net.Sockets.TcpClient" /> permite a un único cliente usar un puerto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-422">Gets or sets a <see cref="T:System.Boolean" /> value that specifies whether the <see cref="T:System.Net.Sockets.TcpClient" /> allows only one client to use a port.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2b324-423">
            <see langword="true" /> si el objeto <see cref="T:System.Net.Sockets.TcpClient" /> permite a un único cliente usar un puerto específico; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-423">
              <see langword="true" /> if the <see cref="T:System.Net.Sockets.TcpClient" /> allows only one client to use a specific port; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="2b324-424">El valor predeterminado es <see langword="true" /> para Windows Server 2003 y Windows XP Service Pack 2 y versiones posteriores, y <see langword="false" /> para el resto de versiones.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-424">The default is <see langword="true" /> for Windows Server 2003 and Windows XP Service Pack 2 and later, and <see langword="false" /> for all other versions.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b324-425">De forma predeterminada, varios clientes pueden utilizar un puerto concreto; Sin embargo, solo uno de los clientes puede realizar operaciones en el tráfico de red enviado al puerto.</span><span class="sxs-lookup"><span data-stu-id="2b324-425">By default, multiple clients can use a specific port; however, only one of the clients can perform operations on the network traffic sent to the port.</span></span> <span data-ttu-id="2b324-426">Puede usar el `ExclusiveAddressUse` propiedad para evitar que varios clientes usen un puerto específico.</span><span class="sxs-lookup"><span data-stu-id="2b324-426">You can use the `ExclusiveAddressUse` property to prevent multiple clients from using a specific port.</span></span>  
  
 <span data-ttu-id="2b324-427">Esta propiedad debe establecerse antes de que el socket subyacente está enlazado a un puerto de cliente.</span><span class="sxs-lookup"><span data-stu-id="2b324-427">This property must be set before the underlying socket is bound to a client port.</span></span> <span data-ttu-id="2b324-428">Si se llama a <xref:System.Net.Sockets.TcpClient.Connect%2A>, <xref:System.Net.Sockets.TcpClient.BeginConnect%2A>, <xref:System.Net.Sockets.TcpClient.%23ctor%28System.Net.IPEndPoint%29>, o <xref:System.Net.Sockets.TcpClient.%23ctor%28System.String%2CSystem.Int32%29>, se enlaza el puerto de cliente como un efecto secundario del método y no puede establecer posteriormente las `ExclusiveAddressUse` propiedad.</span><span class="sxs-lookup"><span data-stu-id="2b324-428">If you call <xref:System.Net.Sockets.TcpClient.Connect%2A>, <xref:System.Net.Sockets.TcpClient.BeginConnect%2A>, <xref:System.Net.Sockets.TcpClient.%23ctor%28System.Net.IPEndPoint%29>, or <xref:System.Net.Sockets.TcpClient.%23ctor%28System.String%2CSystem.Int32%29>, the client port is bound as a side effect of the method, and you cannot subsequently set the `ExclusiveAddressUse` property.</span></span>
  
   
  
## Examples  
 <span data-ttu-id="2b324-429">En el ejemplo de código siguiente se crea un <xref:System.Net.Sockets.TcpClient> y obtiene y establece el valor de la `ExclusiveAddressUse` propiedad.</span><span class="sxs-lookup"><span data-stu-id="2b324-429">The following code example creates a <xref:System.Net.Sockets.TcpClient> and gets and sets the value of the `ExclusiveAddressUse` property.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient1#3](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CPP/newtcpclient.cpp#3)]
 [!code-csharp[System.Net.Sockets.TcpClient1#3](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CS/newtcpclient.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="2b324-430">Se ha producido un error al intentar obtener acceso al socket subyacente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-430">An error occurred when attempting to access the underlying socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="2b324-431">El objeto <see cref="T:System.Net.Sockets.Socket" /> subyacente se ha cerrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-431">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~TcpClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!TcpClient ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="tcpClient.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2b324-432">Libera los recursos que usa la clase <see cref="T:System.Net.Sockets.TcpClient" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-432">Frees resources used by the <see cref="T:System.Net.Sockets.TcpClient" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b324-433">Este método invalida <xref:System.Object.Finalize%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="2b324-433">This method overrides <xref:System.Object.Finalize%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="2b324-434">Código de la aplicación no debe llamar a este método; un objeto `Finalize` método se invoca automáticamente durante la recolección de elementos no utilizados, a menos que se ha deshabilitado la finalización por el recolector de elementos no utilizados mediante una llamada a la <xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="2b324-434">Application code should not call this method; an object's `Finalize` method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="2b324-435">El <xref:System.Net.Sockets.TcpClient> finalizador de la clase cierra la conexión TCP y libera todos los recursos administrados asociados con la `TcpClient`.</span><span class="sxs-lookup"><span data-stu-id="2b324-435">The <xref:System.Net.Sockets.TcpClient> class finalizer closes the TCP connection and releases all managed resources associated with the `TcpClient`.</span></span> <span data-ttu-id="2b324-436">Estos recursos incluyen subyacente <xref:System.Net.Sockets.Socket> usado para conectar con el host remoto y el <xref:System.Net.Sockets.NetworkStream> utilizado para enviar y recibir datos.</span><span class="sxs-lookup"><span data-stu-id="2b324-436">These resources include the underlying <xref:System.Net.Sockets.Socket> used for connecting with the remote host, and the <xref:System.Net.Sockets.NetworkStream> used to send and receive data.</span></span> <span data-ttu-id="2b324-437">El finalizador no libera los recursos no administrados.</span><span class="sxs-lookup"><span data-stu-id="2b324-437">The finalizer does not release any unmanaged resources.</span></span>  
  
 <span data-ttu-id="2b324-438">Para obtener más información, consulte [métodos de finalización y destructores](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/0s71x931(v%3dvs.100)), [limpiar recursos no administrados](~/docs/standard/garbage-collection/unmanaged.md), y [reemplazar el método Finalize](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span><span class="sxs-lookup"><span data-stu-id="2b324-438">For more information, see [Finalize Methods and Destructors](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/0s71x931(v%3dvs.100)), [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md), and [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.Sockets.TcpClient.Close" />
        <related type="Article" href="~/docs/standard/garbage-collection/index.md">
          <span data-ttu-id="2b324-439">recolección de elementos no utilizados</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-439">Garbage Collection</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="GetStream">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.NetworkStream GetStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.Sockets.NetworkStream GetStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.GetStream" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStream () As NetworkStream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::Sockets::NetworkStream ^ GetStream();" />
      <MemberSignature Language="F#" Value="member this.GetStream : unit -&gt; System.Net.Sockets.NetworkStream" Usage="tcpClient.GetStream " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.NetworkStream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2b324-440">Devuelve la <see cref="T:System.Net.Sockets.NetworkStream" /> usada para enviar y recibir datos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-440">Returns the <see cref="T:System.Net.Sockets.NetworkStream" /> used to send and receive data.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b324-441">Objeto <see cref="T:System.Net.Sockets.NetworkStream" /> subyacente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-441">The underlying <see cref="T:System.Net.Sockets.NetworkStream" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
<span data-ttu-id="2b324-442">El `GetStream` método devuelve un <xref:System.Net.Sockets.NetworkStream> que puede usar para enviar y recibir datos.</span><span class="sxs-lookup"><span data-stu-id="2b324-442">The `GetStream` method returns a <xref:System.Net.Sockets.NetworkStream> that you can use to send and receive data.</span></span> <span data-ttu-id="2b324-443">El `NetworkStream` clase hereda de la <xref:System.IO.Stream> (clase), que proporciona una amplia colección de métodos y propiedades utilizados para facilitar las comunicaciones de red.</span><span class="sxs-lookup"><span data-stu-id="2b324-443">The `NetworkStream` class inherits from the <xref:System.IO.Stream> class, which provides a rich collection of methods and properties used to facilitate network communications.</span></span>  
  
 <span data-ttu-id="2b324-444">Debe llamar a la <xref:System.Net.Sockets.TcpClient.Connect%2A> método primero, o la <xref:System.Net.Sockets.TcpClient.GetStream%2A> método producirá una <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="2b324-444">You must call the <xref:System.Net.Sockets.TcpClient.Connect%2A> method first, or the <xref:System.Net.Sockets.TcpClient.GetStream%2A> method will throw an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="2b324-445">Después de haber obtenido el `NetworkStream`, llame a la <xref:System.Net.Sockets.NetworkStream.Write%2A> método envíe datos al host remoto.</span><span class="sxs-lookup"><span data-stu-id="2b324-445">After you have obtained the `NetworkStream`, call the <xref:System.Net.Sockets.NetworkStream.Write%2A> method to send data to the remote host.</span></span> <span data-ttu-id="2b324-446">Llame a la <xref:System.Net.Sockets.NetworkStream.Read%2A> método para recibir los datos que llegan desde el host remoto.</span><span class="sxs-lookup"><span data-stu-id="2b324-446">Call the <xref:System.Net.Sockets.NetworkStream.Read%2A> method to receive data arriving from the remote host.</span></span> <span data-ttu-id="2b324-447">Ambos métodos se bloquean hasta que se realiza la operación especificada.</span><span class="sxs-lookup"><span data-stu-id="2b324-447">Both of these methods block until the specified operation is performed.</span></span> <span data-ttu-id="2b324-448">Se puede evitar el bloqueo en una operación de lectura comprobando el <xref:System.Net.Sockets.NetworkStream.DataAvailable%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="2b324-448">You can avoid blocking on a read operation by checking the <xref:System.Net.Sockets.NetworkStream.DataAvailable%2A> property.</span></span> <span data-ttu-id="2b324-449">Un `true` valor significa que los datos ha llegado desde el host remoto y está disponibles para su lectura.</span><span class="sxs-lookup"><span data-stu-id="2b324-449">A `true` value means that data has arrived from the remote host and is available for reading.</span></span> <span data-ttu-id="2b324-450">En este caso, <xref:System.Net.Sockets.NetworkStream.Read%2A> garantiza que finalizará inmediatamente.</span><span class="sxs-lookup"><span data-stu-id="2b324-450">In this case, <xref:System.Net.Sockets.NetworkStream.Read%2A> is guaranteed to complete immediately.</span></span> <span data-ttu-id="2b324-451">Si el host remoto ha cerrado la conexión, <xref:System.Net.Sockets.NetworkStream.Read%2A> devolverá inmediatamente con cero bytes.</span><span class="sxs-lookup"><span data-stu-id="2b324-451">If the remote host has shutdown its connection, <xref:System.Net.Sockets.NetworkStream.Read%2A> will immediately return with zero bytes.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2b324-452">Debe cerrar la `NetworkStream` cuando esté a través de enviar y recibir datos.</span><span class="sxs-lookup"><span data-stu-id="2b324-452">You must close the `NetworkStream` when you are through sending and receiving data.</span></span> <span data-ttu-id="2b324-453">Cerrar <xref:System.Net.Sockets.TcpClient> no libera la `NetworkStream`.</span><span class="sxs-lookup"><span data-stu-id="2b324-453">Closing <xref:System.Net.Sockets.TcpClient> does not release the `NetworkStream`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2b324-454">Si recibe un <xref:System.Net.Sockets.SocketException>, utilice <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> para obtener el código de error específico.</span><span class="sxs-lookup"><span data-stu-id="2b324-454">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="2b324-455">Después de haber obtenido este código, puede hacer referencia a la [código de error de API de la versión 2 de Windows Sockets](/windows/desktop/winsock/windows-sockets-error-codes-2) documentación para obtener una descripción detallada del error.</span><span class="sxs-lookup"><span data-stu-id="2b324-455">After you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2b324-456">Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación.</span><span class="sxs-lookup"><span data-stu-id="2b324-456">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="2b324-457">Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="2b324-457">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b324-458">El siguiente ejemplo de código usa `GetStream` obtener subyacente <xref:System.Net.Sockets.NetworkStream>.</span><span class="sxs-lookup"><span data-stu-id="2b324-458">The following code example uses `GetStream` to obtain the underlying <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="2b324-459">Después de obtener el <xref:System.Net.Sockets.NetworkStream>, envía y recibe mediante su <xref:System.Net.Sockets.NetworkStream.Write%2A> y <xref:System.Net.Sockets.NetworkStream.Read%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="2b324-459">After obtaining the <xref:System.Net.Sockets.NetworkStream>, it sends and receives using its <xref:System.Net.Sockets.NetworkStream.Write%2A> and <xref:System.Net.Sockets.NetworkStream.Read%2A> methods.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#14](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#14)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#14](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#14)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#14](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2b324-460">
            <see cref="T:System.Net.Sockets.TcpClient" /> no está conectada a un host remoto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-460">The <see cref="T:System.Net.Sockets.TcpClient" /> is not connected to a remote host.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="2b324-461">El <see cref="T:System.Net.Sockets.TcpClient" /> se ha cerrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-461">The <see cref="T:System.Net.Sockets.TcpClient" /> has been closed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.Sockets.NetworkStream" />
        <altmember cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="P:System.Net.Sockets.NetworkStream.DataAvailable" />
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="LingerState">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.LingerOption LingerState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Sockets.LingerOption LingerState" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.LingerState" />
      <MemberSignature Language="VB.NET" Value="Public Property LingerState As LingerOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Sockets::LingerOption ^ LingerState { System::Net::Sockets::LingerOption ^ get(); void set(System::Net::Sockets::LingerOption ^ value); };" />
      <MemberSignature Language="F#" Value="member this.LingerState : System.Net.Sockets.LingerOption with get, set" Usage="System.Net.Sockets.TcpClient.LingerState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.LingerOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2b324-462">Obtiene o establece información sobre el estado de permanencia del socket asociado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-462">Gets or sets information about the linger state of the associated socket.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2b324-463">Objeto <see cref="T:System.Net.Sockets.LingerOption" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-463">A <see cref="T:System.Net.Sockets.LingerOption" />.</span>
          </span>
          <span data-ttu-id="2b324-464">La permanencia está deshabilitada de manera predeterminada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-464">By default, lingering is disabled.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b324-465">El `LingerState` propiedad cambia la manera <xref:System.Net.Sockets.Socket.Close%2A> método se comporta.</span><span class="sxs-lookup"><span data-stu-id="2b324-465">The `LingerState` property changes the way <xref:System.Net.Sockets.Socket.Close%2A> method behaves.</span></span> <span data-ttu-id="2b324-466">Esta propiedad cuando set modifica las condiciones en las que se puede restablecer la conexión mediante Winsock.</span><span class="sxs-lookup"><span data-stu-id="2b324-466">This property when set modifies the conditions under which the connection can be reset by Winsock.</span></span> <span data-ttu-id="2b324-467">Restablecimientos de conexión pueden seguir apareciendo según el comportamiento del protocolo IP.</span><span class="sxs-lookup"><span data-stu-id="2b324-467">Connection resets can still occur based on the IP protocol behavior.</span></span>  
  
 <span data-ttu-id="2b324-468">Esta propiedad controla el período de tiempo que la conexión TCP permanecerá abierta después de llamar a <xref:System.Net.Sockets.TcpClient.Close%2A> cuando quedan enviarán datos.</span><span class="sxs-lookup"><span data-stu-id="2b324-468">This property controls the length of time that the TCP connection will remain open after a call to <xref:System.Net.Sockets.TcpClient.Close%2A> when data remains to be sent.</span></span> <span data-ttu-id="2b324-469">Cuando se llama a la <xref:System.Net.Sockets.NetworkStream.Write%2A> método, los datos se coloca en el búfer de red saliente.</span><span class="sxs-lookup"><span data-stu-id="2b324-469">When you call the <xref:System.Net.Sockets.NetworkStream.Write%2A> method, data is placed in the outgoing network buffer.</span></span> <span data-ttu-id="2b324-470">Esta propiedad se puede utilizar para asegurarse de que estos datos se envían al host remoto antes de la <xref:System.Net.Sockets.TcpClient.Close%2A> método interrumpe la conexión.</span><span class="sxs-lookup"><span data-stu-id="2b324-470">This property can be used to ensure that this data is sent to the remote host before the <xref:System.Net.Sockets.TcpClient.Close%2A> method drops the connection.</span></span>  
  
 <span data-ttu-id="2b324-471">Para habilitar la permanencia de la conexión, cree un <xref:System.Net.Sockets.LingerOption> de instancia que contiene los valores deseados y establezca el `LingerState` propiedad a esta instancia.</span><span class="sxs-lookup"><span data-stu-id="2b324-471">To enable lingering, create a <xref:System.Net.Sockets.LingerOption> instance containing the desired values, and set the `LingerState` property to this instance.</span></span>  
  
 <span data-ttu-id="2b324-472">En la tabla siguiente se describe el comportamiento de la <xref:System.Net.Sockets.TcpClient.Close%2A> método para los valores posibles de la <xref:System.Net.Sockets.LingerOption.Enabled%2A> propiedad y el <xref:System.Net.Sockets.LingerOption.LingerTime%2A> propiedad almacenados en el `LingerState` propiedad.</span><span class="sxs-lookup"><span data-stu-id="2b324-472">The following table describes the behavior of the <xref:System.Net.Sockets.TcpClient.Close%2A> method for the possible values of the <xref:System.Net.Sockets.LingerOption.Enabled%2A> property and the <xref:System.Net.Sockets.LingerOption.LingerTime%2A> property stored in the `LingerState` property.</span></span>  
  
|<span data-ttu-id="2b324-473">LingerState.Enabled</span><span class="sxs-lookup"><span data-stu-id="2b324-473">LingerState.Enabled</span></span>|<span data-ttu-id="2b324-474">LingerState.LingerTime</span><span class="sxs-lookup"><span data-stu-id="2b324-474">LingerState.LingerTime</span></span>|<span data-ttu-id="2b324-475">Comportamiento</span><span class="sxs-lookup"><span data-stu-id="2b324-475">Behavior</span></span>|  
|-------------------------|----------------------------|--------------|  
|<span data-ttu-id="2b324-476">`false` (deshabilitado), el valor predeterminado</span><span class="sxs-lookup"><span data-stu-id="2b324-476">`false` (disabled), the default value</span></span>|<span data-ttu-id="2b324-477">No es aplicable, el tiempo de espera (valor predeterminado).</span><span class="sxs-lookup"><span data-stu-id="2b324-477">The time-out is not applicable, (default).</span></span>|<span data-ttu-id="2b324-478">Intenta enviar los datos pendientes hasta que expire el tiempo de espera de protocolo IP de forma predeterminada.</span><span class="sxs-lookup"><span data-stu-id="2b324-478">Attempts to send pending data until the default IP protocol time-out expires.</span></span>|  
|<span data-ttu-id="2b324-479">`true` (habilitado)</span><span class="sxs-lookup"><span data-stu-id="2b324-479">`true` (enabled)</span></span>|<span data-ttu-id="2b324-480">Un tiempo de espera distinto de cero</span><span class="sxs-lookup"><span data-stu-id="2b324-480">A nonzero time-out</span></span>|<span data-ttu-id="2b324-481">Intenta enviar los datos pendientes hasta que expira el tiempo de espera especificado y, si se produce un error en el intento, Winsock restablece la conexión.</span><span class="sxs-lookup"><span data-stu-id="2b324-481">Attempts to send pending data until the specified time-out expires, and if the attempt fails, then Winsock resets the connection.</span></span>|  
|<span data-ttu-id="2b324-482">`true` (habilitado)</span><span class="sxs-lookup"><span data-stu-id="2b324-482">`true` (enabled)</span></span>|<span data-ttu-id="2b324-483">Un cero tiempo de espera.</span><span class="sxs-lookup"><span data-stu-id="2b324-483">A zero timeout.</span></span>|<span data-ttu-id="2b324-484">Descarta cualquier dato pendiente y Winsock restablece la conexión.</span><span class="sxs-lookup"><span data-stu-id="2b324-484">Discards any pending data and Winsock resets the connection.</span></span>|  
  
 <span data-ttu-id="2b324-485">La pila IP calcula el tiempo de espera de protocolo IP predeterminado a utilizar basándose en el tiempo de ida y vuelta de la conexión.</span><span class="sxs-lookup"><span data-stu-id="2b324-485">The IP stack computes the default IP protocol time-out period to use based on the round trip time of the connection.</span></span> <span data-ttu-id="2b324-486">En la mayoría de los casos, el tiempo de espera calculado por la pila es más relevante que definidos por una aplicación.</span><span class="sxs-lookup"><span data-stu-id="2b324-486">In most cases, the time-out computed by the stack is more relevant than one defined by an application.</span></span> <span data-ttu-id="2b324-487">Este es el comportamiento predeterminado para un socket cuando la `LingerState` no se establece la propiedad.</span><span class="sxs-lookup"><span data-stu-id="2b324-487">This is the default behavior for a socket when the `LingerState` property is not set.</span></span>  
  
 <span data-ttu-id="2b324-488">Cuando el <xref:System.Net.Sockets.LingerOption.LingerTime%2A> propiedad almacenados en el `LingerState` propiedad está establecida en mayor que el tiempo de espera de protocolo IP de forma predeterminada, el tiempo de espera de protocolo IP de forma predeterminada se todavía se aplican y reemplazan.</span><span class="sxs-lookup"><span data-stu-id="2b324-488">When the <xref:System.Net.Sockets.LingerOption.LingerTime%2A> property stored in the `LingerState` property is set greater than the default IP protocol time-out, the default IP protocol time-out will still apply and override.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b324-489">El siguiente código de ejemplo se establece y obtiene la permanencia de los sockets de tiempo.</span><span class="sxs-lookup"><span data-stu-id="2b324-489">The following code example sets and gets the sockets linger time.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#12](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#12)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#12](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#12)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#12](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#12)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Sockets.LingerOption" />
        <altmember cref="M:System.Net.Sockets.TcpClient.Close" />
        <altmember cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="NoDelay">
      <MemberSignature Language="C#" Value="public bool NoDelay { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NoDelay" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.NoDelay" />
      <MemberSignature Language="VB.NET" Value="Public Property NoDelay As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NoDelay { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.NoDelay : bool with get, set" Usage="System.Net.Sockets.TcpClient.NoDelay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2b324-490">Obtiene o establece un valor que deshabilita cualquier retraso cuando los búferes de envío o recepción no están llenos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-490">Gets or sets a value that disables a delay when send or receive buffers are not full.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2b324-491">Es <see langword="true" /> si está deshabilitado el retraso; en caso contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-491">
              <see langword="true" /> if the delay is disabled, otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="2b324-492">El valor predeterminado es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-492">The default value is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b324-493">Cuando `NoDelay` es `false`, un <xref:System.Net.Sockets.TcpClient> no envía un paquete a través de la red hasta que haya obtenido una cantidad significativa de datos salientes.</span><span class="sxs-lookup"><span data-stu-id="2b324-493">When `NoDelay` is `false`, a <xref:System.Net.Sockets.TcpClient> does not send a packet over the network until it has collected a significant amount of outgoing data.</span></span> <span data-ttu-id="2b324-494">Debido a la cantidad de sobrecarga en un segmento TCP, el envío de pequeñas cantidades de datos es ineficaz.</span><span class="sxs-lookup"><span data-stu-id="2b324-494">Because of the amount of overhead in a TCP segment, sending small amounts of data is inefficient.</span></span> <span data-ttu-id="2b324-495">Sin embargo, existen situaciones donde deba enviar muy pequeñas cantidades de datos o esperar respuestas inmediatas de cada paquete que se envíe.</span><span class="sxs-lookup"><span data-stu-id="2b324-495">However, situations do exist where you need to send very small amounts of data or expect immediate responses from each packet you send.</span></span> <span data-ttu-id="2b324-496">Su decisión debería sopesar la importancia relativa de la eficacia de la red frente a los requisitos de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="2b324-496">Your decision should weigh the relative importance of network efficiency versus application requirements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b324-497">En el ejemplo de código siguiente se deshabilita el retraso.</span><span class="sxs-lookup"><span data-stu-id="2b324-497">The following code example disables the delay.</span></span> <span data-ttu-id="2b324-498">A continuación, comprueba el valor de `NoDelay` para comprobar que la propiedad se estableció correctamente.</span><span class="sxs-lookup"><span data-stu-id="2b324-498">It then checks the value of `NoDelay` to verify that the property was successfully set.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#13](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#13)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#13](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#13)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#13](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceiveBufferSize">
      <MemberSignature Language="C#" Value="public int ReceiveBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReceiveBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.ReceiveBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property ReceiveBufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ReceiveBufferSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ReceiveBufferSize : int with get, set" Usage="System.Net.Sockets.TcpClient.ReceiveBufferSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2b324-499">Obtiene o establece el tamaño del búfer de recepción.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-499">Gets or sets the size of the receive buffer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2b324-500">Tamaño del búfer de recepción, en bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-500">The size of the receive buffer, in bytes.</span>
          </span>
          <span data-ttu-id="2b324-501">El valor predeterminado es 8192 bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-501">The default value is 8192 bytes.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b324-502">El `ReceiveBufferSize` propiedad obtiene o establece el número de bytes que se espera almacenar en el búfer de recepción para cada operación de lectura.</span><span class="sxs-lookup"><span data-stu-id="2b324-502">The `ReceiveBufferSize` property gets or sets the number of bytes that you are expecting to store in the receive buffer for each read operation.</span></span> <span data-ttu-id="2b324-503">Esta propiedad manipula realmente el espacio de búfer de red asignado para recibir los datos entrantes.</span><span class="sxs-lookup"><span data-stu-id="2b324-503">This property actually manipulates the network buffer space allocated for receiving incoming data.</span></span>  
  
 <span data-ttu-id="2b324-504">El búfer de red debe ser al menos tan grande como el búfer de aplicación para asegurarse de que los datos deseados estará disponibles cuando se llama a la <xref:System.Net.Sockets.NetworkStream.Read%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="2b324-504">Your network buffer should be at least as large as your application buffer to ensure that the desired data will be available when you call the <xref:System.Net.Sockets.NetworkStream.Read%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="2b324-505">Use el <xref:System.Net.Sockets.TcpClient.ReceiveBufferSize%2A> propiedad para establecer este tamaño.</span><span class="sxs-lookup"><span data-stu-id="2b324-505">Use the <xref:System.Net.Sockets.TcpClient.ReceiveBufferSize%2A> property to set this size.</span></span> <span data-ttu-id="2b324-506">Si la aplicación va a recibir datos de forma masiva, se debe pasar el `Read` método un búfer de aplicación muy grande.</span><span class="sxs-lookup"><span data-stu-id="2b324-506">If your application will be receiving bulk data, you should pass the `Read` method a very large application buffer.</span></span>  
  
 <span data-ttu-id="2b324-507">Si el búfer de red es menor que la cantidad de datos solicitada en el `Read` método, no podrá recuperar la cantidad deseada de datos en una sola operación de lectura.</span><span class="sxs-lookup"><span data-stu-id="2b324-507">If the network buffer is smaller than the amount of data you request in the `Read` method, you will not be able to retrieve the desired amount of data in one read operation.</span></span> <span data-ttu-id="2b324-508">Esto conlleva la sobrecarga de llamadas adicionales a la `Read` método.</span><span class="sxs-lookup"><span data-stu-id="2b324-508">This incurs the overhead of additional calls to the `Read` method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b324-509">En el ejemplo de código siguiente se establece y obtiene el tamaño del búfer de recepción.</span><span class="sxs-lookup"><span data-stu-id="2b324-509">The following code example sets and gets the receive buffer size.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#8](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#8)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#8](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#8)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#8](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="2b324-510">Se ha producido un error al establecer el tamaño del búfer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-510">An error occurred when setting the buffer size.</span>
          </span>
          <span data-ttu-id="2b324-511">O bien</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-511">-or-</span>
          </span>
          <span data-ttu-id="2b324-512">En las aplicaciones .NET Compact Framework, no se puede establecer esta propiedad.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-512">In .NET Compact Framework applications, you cannot set this property.</span>
          </span>
          <span data-ttu-id="2b324-513">Para obtener una solución alternativa, vea la Nota de la plataforma que se describe en Comentarios.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-513">For a workaround, see the Platform Note in Remarks.</span>
          </span>
        </exception>
        <altmember cref="P:System.Net.Sockets.TcpClient.SendBufferSize" />
        <altmember cref="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReceiveTimeout">
      <MemberSignature Language="C#" Value="public int ReceiveTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReceiveTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.ReceiveTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property ReceiveTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ReceiveTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ReceiveTimeout : int with get, set" Usage="System.Net.Sockets.TcpClient.ReceiveTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2b324-514">Obtiene o establece el período de tiempo durante el cual un <see cref="T:System.Net.Sockets.TcpClient" /> esperará para recibir datos tras iniciarse una operación de lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-514">Gets or sets the amount of time a <see cref="T:System.Net.Sockets.TcpClient" /> will wait to receive data once a read operation is initiated.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2b324-515">Valor de tiempo de espera de la conexión, en milisegundos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-515">The time-out value of the connection in milliseconds.</span>
          </span>
          <span data-ttu-id="2b324-516">El valor predeterminado es 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-516">The default value is 0.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b324-517">El `ReceiveTimeout` propiedad determina la cantidad de tiempo que el <xref:System.Net.Sockets.NetworkStream.Read%2A> método se bloqueará hasta que se puede recibir datos.</span><span class="sxs-lookup"><span data-stu-id="2b324-517">The `ReceiveTimeout` property determines the amount of time that the <xref:System.Net.Sockets.NetworkStream.Read%2A> method will block until it is able to receive data.</span></span> <span data-ttu-id="2b324-518">Este tiempo se mide en milisegundos.</span><span class="sxs-lookup"><span data-stu-id="2b324-518">This time is measured in milliseconds.</span></span> <span data-ttu-id="2b324-519">Si el tiempo de espera expira antes de `Read` se complete correctamente, <xref:System.Net.Sockets.TcpClient> produce una <xref:System.IO.IOException>.</span><span class="sxs-lookup"><span data-stu-id="2b324-519">If the time-out expires before `Read` successfully completes, <xref:System.Net.Sockets.TcpClient> throws a <xref:System.IO.IOException>.</span></span> <span data-ttu-id="2b324-520">No hay ningún tiempo de espera de forma predeterminada.</span><span class="sxs-lookup"><span data-stu-id="2b324-520">There is no time-out by default.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b324-521">En el ejemplo de código siguiente se establece y obtiene el tiempo de espera de recepción.</span><span class="sxs-lookup"><span data-stu-id="2b324-521">The following code example sets and gets the receive time out.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#10](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#10)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#10](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#10)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#10](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="P:System.Net.Sockets.TcpClient.SendTimeout" />
      </Docs>
    </Member>
    <Member MemberName="SendBufferSize">
      <MemberSignature Language="C#" Value="public int SendBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SendBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.SendBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property SendBufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SendBufferSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SendBufferSize : int with get, set" Usage="System.Net.Sockets.TcpClient.SendBufferSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2b324-522">Obtiene o establece el tamaño del búfer de envío.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-522">Gets or sets the size of the send buffer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2b324-523">Tamaño del búfer de envío, en bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-523">The size of the send buffer, in bytes.</span>
          </span>
          <span data-ttu-id="2b324-524">El valor predeterminado es 8192 bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-524">The default value is 8192 bytes.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b324-525">El `SendBufferSize` propiedad obtiene o establece el número de bytes que se espera para enviar en cada llamada a la <xref:System.Net.Sockets.NetworkStream.Write%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="2b324-525">The `SendBufferSize` property gets or sets the number of bytes that you are expecting to send in each call to the <xref:System.Net.Sockets.NetworkStream.Write%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="2b324-526">Esta propiedad manipula realmente el espacio de búfer de red asignado para la operación de envío.</span><span class="sxs-lookup"><span data-stu-id="2b324-526">This property actually manipulates the network buffer space allocated for send operation.</span></span>  
  
 <span data-ttu-id="2b324-527">El búfer de red debe ser al menos tan grande como el búfer de aplicación para asegurarse de que los datos deseados se almacenan y se enviarán en una sola operación.</span><span class="sxs-lookup"><span data-stu-id="2b324-527">Your network buffer should be at least as large as your application buffer to ensure that the desired data will be stored and sent in one operation.</span></span> <span data-ttu-id="2b324-528">Use el <xref:System.Net.Sockets.TcpClient.SendBufferSize%2A> propiedad para establecer este tamaño.</span><span class="sxs-lookup"><span data-stu-id="2b324-528">Use the <xref:System.Net.Sockets.TcpClient.SendBufferSize%2A> property to set this size.</span></span> <span data-ttu-id="2b324-529">Si la aplicación va a enviar datos de forma masiva, se debe pasar el `Write` método un búfer de aplicación muy grande.</span><span class="sxs-lookup"><span data-stu-id="2b324-529">If your application will be sending bulk data, you should pass the `Write` method a very large application buffer.</span></span>  
  
 <span data-ttu-id="2b324-530">Si el búfer de red es menor que la cantidad de datos proporciona la `Write` método, varias operaciones se realizarán para todas las llamadas que realice en el envío de red la `Write` método.</span><span class="sxs-lookup"><span data-stu-id="2b324-530">If the network buffer is smaller than the amount of data you provide the `Write` method, several network send operations will be performed for every call you make to the `Write` method.</span></span> <span data-ttu-id="2b324-531">Puede lograr mayor rendimiento al garantizar que el búfer de red es al menos tan grande como el búfer de aplicación.</span><span class="sxs-lookup"><span data-stu-id="2b324-531">You can achieve greater data throughput by ensuring that your network buffer is at least as large as your application buffer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b324-532">En el ejemplo de código siguiente se establece y obtiene el tamaño del búfer de envío.</span><span class="sxs-lookup"><span data-stu-id="2b324-532">The following code example sets and gets the send buffer size.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#9](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#9)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#9](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#9)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#9](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.Sockets.TcpClient.ReceiveBufferSize" />
        <altmember cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="SendTimeout">
      <MemberSignature Language="C#" Value="public int SendTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SendTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.SendTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property SendTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SendTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SendTimeout : int with get, set" Usage="System.Net.Sockets.TcpClient.SendTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2b324-533">Obtiene o establece el período de tiempo durante el cual un <see cref="T:System.Net.Sockets.TcpClient" /> esperará para que finalice correctamente una operación de envío.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-533">Gets or sets the amount of time a <see cref="T:System.Net.Sockets.TcpClient" /> will wait for a send operation to complete successfully.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2b324-534">Valor de tiempo de espera de envío, en milisegundos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-534">The send time-out value, in milliseconds.</span>
          </span>
          <span data-ttu-id="2b324-535">El valor predeterminado es 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-535">The default is 0.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b324-536">El `SendTimeout` propiedad determina la cantidad de tiempo que el <xref:System.Net.Sockets.Socket.Send%2A> método se bloqueará hasta que pueda devolver correctamente.</span><span class="sxs-lookup"><span data-stu-id="2b324-536">The `SendTimeout` property determines the amount of time that the <xref:System.Net.Sockets.Socket.Send%2A> method will block until it is able to return successfully.</span></span> <span data-ttu-id="2b324-537">Este tiempo se mide en milisegundos.</span><span class="sxs-lookup"><span data-stu-id="2b324-537">This time is measured in milliseconds.</span></span>  
  
 <span data-ttu-id="2b324-538">Después de llamar a la <xref:System.Net.Sockets.NetworkStream.Write%2A> método subyacente <xref:System.Net.Sockets.Socket> devuelve el número real de bytes enviados al host.</span><span class="sxs-lookup"><span data-stu-id="2b324-538">After you call the <xref:System.Net.Sockets.NetworkStream.Write%2A> method, the underlying <xref:System.Net.Sockets.Socket> returns the number of bytes actually sent to the host.</span></span> <span data-ttu-id="2b324-539">El `SendTimeout` propiedad determina la cantidad de tiempo un <xref:System.Net.Sockets.TcpClient> esperará antes de recibir el número de bytes devueltos.</span><span class="sxs-lookup"><span data-stu-id="2b324-539">The `SendTimeout` property determines the amount of time a <xref:System.Net.Sockets.TcpClient> will wait before receiving the number of bytes returned.</span></span> <span data-ttu-id="2b324-540">Si el tiempo de espera expira antes de la `Send` método finaliza correctamente, `TcpClient` producirá un <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="2b324-540">If the time-out expires before the `Send` method successfully completes, `TcpClient` will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="2b324-541">No hay ningún tiempo de espera de forma predeterminada.</span><span class="sxs-lookup"><span data-stu-id="2b324-541">There is no time-out by default.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b324-542">En el ejemplo de código siguiente se establece y obtiene la `SendTimeout` valor.</span><span class="sxs-lookup"><span data-stu-id="2b324-542">The following code example sets and gets the `SendTimeout` value.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#11](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#11)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#11](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#11)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#11](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="P:System.Net.Sockets.TcpClient.ReceiveTimeout" />
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2b324-543">Libera todos los recursos utilizados por <see cref="T:System.Net.Sockets.TcpClient" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b324-543">Releases all resources used by the <see cref="T:System.Net.Sockets.TcpClient" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="2b324-544">Llamar a IDisposable.Dispose cuando haya terminado con el <xref:System.Net.Sockets.TcpClient>.</span><span class="sxs-lookup"><span data-stu-id="2b324-544">Call IDisposable.Dispose when you are finished using the <xref:System.Net.Sockets.TcpClient>.</span></span> <span data-ttu-id="2b324-545">El método IDisposable.Dispose deja el <xref:System.Net.Sockets.TcpClient> en un estado inutilizable.</span><span class="sxs-lookup"><span data-stu-id="2b324-545">The IDisposable.Dispose method leaves the <xref:System.Net.Sockets.TcpClient> in an unusable state.</span></span> <span data-ttu-id="2b324-546">Después de llamar a IDisposable.Dispose, debe liberar todas las referencias a la <xref:System.Net.Sockets.TcpClient> por lo que el recolector de elementos no utilizados pueda reclamar la memoria que el <xref:System.Net.Sockets.TcpClient> estaba ocupando.</span><span class="sxs-lookup"><span data-stu-id="2b324-546">After calling IDisposable.Dispose, you must release all references to the <xref:System.Net.Sockets.TcpClient> so the garbage collector can reclaim the memory that the <xref:System.Net.Sockets.TcpClient> was occupying.</span></span> <span data-ttu-id="2b324-547">Para obtener más información, consulte [limpiar recursos no administrados](~/docs/standard/garbage-collection/unmanaged.md) y [implementar un método Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="2b324-547">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>

> [!NOTE] 
> <span data-ttu-id="2b324-548">Llame siempre a IDisposable.Dispose antes de liberar la última referencia a la <xref:System.Net.Sockets.TcpClient>.</span><span class="sxs-lookup"><span data-stu-id="2b324-548">Always call IDisposable.Dispose before you release your last reference to the <xref:System.Net.Sockets.TcpClient>.</span></span> <span data-ttu-id="2b324-549">En caso contrario, los recursos que utiliza no se liberarán hasta que el recolector de elementos no utilizados llame al <xref:System.Net.Sockets.TcpClient> del objeto **Finalize** método.</span><span class="sxs-lookup"><span data-stu-id="2b324-549">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Net.Sockets.TcpClient> object's **Finalize** method.</span></span>

]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>
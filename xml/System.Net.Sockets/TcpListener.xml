<Type Name="TcpListener" FullName="System.Net.Sockets.TcpListener">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="33b505c306f1ff21ce7a37a4320193f1edde1fb9" />
    <Meta Name="ms.sourcegitcommit" Value="1654a92bac785a221098172d9cacd405ceaac9b7" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="12/01/2018" />
    <Meta Name="ms.locfileid" Value="52740264" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TcpListener" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TcpListener extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.Sockets.TcpListener" />
  <TypeSignature Language="VB.NET" Value="Public Class TcpListener" />
  <TypeSignature Language="C++ CLI" Value="public ref class TcpListener" />
  <TypeSignature Language="F#" Value="type TcpListener = class" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Sockets</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="eb93f-101">Realiza escuchas para conexiones de clientes de red TCP.</span>
      <span class="sxs-lookup">
        <span data-stu-id="eb93f-101">Listens for connections from TCP network clients.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb93f-102">La <xref:System.Net.Sockets.TcpListener> clase proporciona métodos sencillos que escuchan y aceptan las solicitudes de conexión entrantes en modo de bloqueo sincrónico.</span><span class="sxs-lookup"><span data-stu-id="eb93f-102">The <xref:System.Net.Sockets.TcpListener> class provides simple methods that listen for and accept incoming connection requests in blocking synchronous mode.</span></span> <span data-ttu-id="eb93f-103">Puede usar un <xref:System.Net.Sockets.TcpClient> o un <xref:System.Net.Sockets.Socket> para conectarse con un <xref:System.Net.Sockets.TcpListener>.</span><span class="sxs-lookup"><span data-stu-id="eb93f-103">You can use either a <xref:System.Net.Sockets.TcpClient> or a <xref:System.Net.Sockets.Socket> to connect with a <xref:System.Net.Sockets.TcpListener>.</span></span> <span data-ttu-id="eb93f-104">Crear un <xref:System.Net.Sockets.TcpListener> mediante un <xref:System.Net.IPEndPoint>, una dirección IP Local y el número de puerto o simplemente un número de puerto.</span><span class="sxs-lookup"><span data-stu-id="eb93f-104">Create a <xref:System.Net.Sockets.TcpListener> using an <xref:System.Net.IPEndPoint>, a Local IP address and port number, or just a port number.</span></span> <span data-ttu-id="eb93f-105">Especificar <xref:System.Net.IPAddress.Any> para la dirección IP local y 0 para el número de puerto local si desea que el proveedor de servicios subyacente para asignar esos valores para usted.</span><span class="sxs-lookup"><span data-stu-id="eb93f-105">Specify <xref:System.Net.IPAddress.Any> for the local IP address and 0 for the local port number if you want the underlying service provider to assign those values for you.</span></span> <span data-ttu-id="eb93f-106">Si decide hacerlo, puede usar el <xref:System.Net.Sockets.TcpListener.LocalEndpoint%2A> propiedad para identificar la información asignada, una vez que se ha conectado el socket.</span><span class="sxs-lookup"><span data-stu-id="eb93f-106">If you choose to do this, you can use the <xref:System.Net.Sockets.TcpListener.LocalEndpoint%2A> property to identify the assigned information, after the socket has connected.</span></span>  
  
 <span data-ttu-id="eb93f-107">Use el <xref:System.Net.Sockets.TcpListener.Start%2A> método para empezar a escuchar las solicitudes de conexión entrantes.</span><span class="sxs-lookup"><span data-stu-id="eb93f-107">Use the <xref:System.Net.Sockets.TcpListener.Start%2A> method to begin listening for incoming connection requests.</span></span> <span data-ttu-id="eb93f-108"><xref:System.Net.Sockets.TcpListener.Start%2A> se pondrán en cola las conexiones entrantes hasta que llame a la <xref:System.Net.Sockets.TcpListener.Stop%2A> método o se ha puesto en cola <xref:System.Net.Sockets.SocketOptionName.MaxConnections>.</span><span class="sxs-lookup"><span data-stu-id="eb93f-108"><xref:System.Net.Sockets.TcpListener.Start%2A> will queue incoming connections until you either call the <xref:System.Net.Sockets.TcpListener.Stop%2A> method or it has queued <xref:System.Net.Sockets.SocketOptionName.MaxConnections>.</span></span> <span data-ttu-id="eb93f-109">Usar <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> o <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> para extraer una conexión desde la cola de solicitudes de conexión entrante.</span><span class="sxs-lookup"><span data-stu-id="eb93f-109">Use either <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> or <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> to pull a connection from the incoming connection request queue.</span></span> <span data-ttu-id="eb93f-110">Estos dos métodos se bloquearán.</span><span class="sxs-lookup"><span data-stu-id="eb93f-110">These two methods will block.</span></span> <span data-ttu-id="eb93f-111">Si desea evitar el bloqueo, puede usar el <xref:System.Net.Sockets.TcpListener.Pending%2A> método primero para determinar si las solicitudes de conexión están disponibles en la cola.</span><span class="sxs-lookup"><span data-stu-id="eb93f-111">If you want to avoid blocking, you can use the <xref:System.Net.Sockets.TcpListener.Pending%2A> method first to determine if connection requests are available in the queue.</span></span>  
  
 <span data-ttu-id="eb93f-112">Llame a la <xref:System.Net.Sockets.TcpListener.Stop%2A> método para cerrar el <xref:System.Net.Sockets.TcpListener>.</span><span class="sxs-lookup"><span data-stu-id="eb93f-112">Call the <xref:System.Net.Sockets.TcpListener.Stop%2A> method to close the <xref:System.Net.Sockets.TcpListener>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="eb93f-113">El <xref:System.Net.Sockets.TcpListener.Stop%2A> método no cierra cualquier conexión aceptada.</span><span class="sxs-lookup"><span data-stu-id="eb93f-113">The <xref:System.Net.Sockets.TcpListener.Stop%2A> method does not close any accepted connections.</span></span> <span data-ttu-id="eb93f-114">Usted es responsable de cerrarlas por separado.</span><span class="sxs-lookup"><span data-stu-id="eb93f-114">You are responsible for closing these separately.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb93f-115">En el ejemplo de código siguiente se crea un <xref:System.Net.Sockets.TcpListener>.</span><span class="sxs-lookup"><span data-stu-id="eb93f-115">The following code example creates a <xref:System.Net.Sockets.TcpListener>.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpListener#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener/CPP/tcpserver.cpp#1)]
 [!code-csharp[System.Net.Sockets.TcpListener#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener/CS/tcpserver.cs#1)]
 [!code-vb[System.Net.Sockets.TcpListener#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.TcpListener/VB/tcpserver.vb#1)]  
  
 <span data-ttu-id="eb93f-116">Consulte <xref:System.Net.Sockets.TcpClient> para obtener un ejemplo de cliente.</span><span class="sxs-lookup"><span data-stu-id="eb93f-116">See <xref:System.Net.Sockets.TcpClient> for a client example.</span></span>  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Net.SocketPermission">
      <span data-ttu-id="eb93f-117">Para establecer una conexión saliente o Aceptar una solicitud entrante.</span>
      <span class="sxs-lookup">
        <span data-stu-id="eb93f-117">to establish an outgoing connection or accept an incoming request.</span>
      </span>
    </permission>
    <altmember cref="T:System.Net.Sockets.TcpClient" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="eb93f-118">Inicializa una nueva instancia de la clase <see cref="T:System.Net.Sockets.TcpListener" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93f-118">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpListener" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpListener (int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TcpListener(int port);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.TcpListener : int -&gt; System.Net.Sockets.TcpListener" Usage="new System.Net.Sockets.TcpListener port" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use TcpListener (IPAddress address, int port) instead")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("This method has been deprecated. Please use TcpListener(IPAddress localaddr, int port) instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("Use TcpListener(IPAddress localaddr, int port).")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="port">
          <span data-ttu-id="eb93f-119">Puerto en el cual se escucharán los intentos de conexión entrantes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93f-119">The port on which to listen for incoming connection attempts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb93f-120">Inicializa una nueva instancia de la clase <see cref="T:System.Net.Sockets.TcpListener" /> que escucha en el puerto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93f-120">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpListener" /> class that listens on the specified port.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb93f-121">Este constructor está obsoleto.</span><span class="sxs-lookup"><span data-stu-id="eb93f-121">This constructor is obsolete.</span></span> <span data-ttu-id="eb93f-122">Use la <xref:System.Net.Sockets.TcpListener.%23ctor%28System.Net.IPAddress%2CSystem.Int32%29?displayProperty=nameWithType> o <xref:System.Net.Sockets.TcpListener.%23ctor%28System.Net.IPEndPoint%29?displayProperty=nameWithType> constructores.</span><span class="sxs-lookup"><span data-stu-id="eb93f-122">Use the <xref:System.Net.Sockets.TcpListener.%23ctor%28System.Net.IPAddress%2CSystem.Int32%29?displayProperty=nameWithType> or <xref:System.Net.Sockets.TcpListener.%23ctor%28System.Net.IPEndPoint%29?displayProperty=nameWithType> constructors.</span></span>  
  
 <span data-ttu-id="eb93f-123">Este constructor permite especificar el número de puerto en donde se escucharán los intentos de conexión entrantes.</span><span class="sxs-lookup"><span data-stu-id="eb93f-123">This constructor allows you to specify the port number on which to listen for incoming connection attempts.</span></span> <span data-ttu-id="eb93f-124">Con este constructor, el proveedor de servicios subyacente le asigna la dirección de red más adecuada.</span><span class="sxs-lookup"><span data-stu-id="eb93f-124">With this constructor, the underlying service provider assigns the most appropriate network address.</span></span> <span data-ttu-id="eb93f-125">Si no te importa qué puerto local se utiliza, puede especificar 0 para el número de puerto.</span><span class="sxs-lookup"><span data-stu-id="eb93f-125">If you do not care which local port is used, you can specify 0 for the port number.</span></span> <span data-ttu-id="eb93f-126">En este caso, el proveedor de servicios asignará a un número de puertos efímeros disponibles.</span><span class="sxs-lookup"><span data-stu-id="eb93f-126">In this case, the service provider will assign an available ephemeral port number.</span></span> <span data-ttu-id="eb93f-127">Si usa este enfoque, puede detectar qué número de puerto y la dirección de red local se asignó usando el <xref:System.Net.Sockets.TcpListener.LocalEndpoint%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="eb93f-127">If you use this approach, you can discover what local network address and port number has been assigned by using the <xref:System.Net.Sockets.TcpListener.LocalEndpoint%2A> property.</span></span>  
  
 <span data-ttu-id="eb93f-128">Llame a la <xref:System.Net.Sockets.TcpListener.Start%2A> método para iniciar la escucha de intentos de conexión entrantes.</span><span class="sxs-lookup"><span data-stu-id="eb93f-128">Call the <xref:System.Net.Sockets.TcpListener.Start%2A> method to begin listening for incoming connection attempts.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb93f-129">En el ejemplo de código siguiente se crea un <xref:System.Net.Sockets.TcpListener> con un número de puerto local.</span><span class="sxs-lookup"><span data-stu-id="eb93f-129">The following code example creates a <xref:System.Net.Sockets.TcpListener> using a local port number.</span></span>  
  
 [!code-cpp[Classic TcpListener.PublicMethodsAndPropertiesExample#3](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic TcpListener.PublicMethodsAndPropertiesExample/CPP/source.cpp#3)]
 [!code-csharp[Classic TcpListener.PublicMethodsAndPropertiesExample#3](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic TcpListener.PublicMethodsAndPropertiesExample/CS/source.cs#3)]
 [!code-vb[Classic TcpListener.PublicMethodsAndPropertiesExample#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic TcpListener.PublicMethodsAndPropertiesExample/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="eb93f-130">
            <paramref name="port" /> no se encuentra en el intervalo definido por <see cref="F:System.Net.IPEndPoint.MinPort" /> y <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93f-130">
              <paramref name="port" /> is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.TcpListener.Start" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpListener (System.Net.IPEndPoint localEP);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.IPEndPoint localEP) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.#ctor(System.Net.IPEndPoint)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (localEP As IPEndPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TcpListener(System::Net::IPEndPoint ^ localEP);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.TcpListener : System.Net.IPEndPoint -&gt; System.Net.Sockets.TcpListener" Usage="new System.Net.Sockets.TcpListener localEP" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="localEP" Type="System.Net.IPEndPoint" />
      </Parameters>
      <Docs>
        <param name="localEP">
          <span data-ttu-id="eb93f-131">
            <see cref="T:System.Net.IPEndPoint" /> que representa el extremo local con el que desea enlazar el <see cref="T:System.Net.Sockets.Socket" /> del agente de escucha.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93f-131">An <see cref="T:System.Net.IPEndPoint" /> that represents the local endpoint to which to bind the listener <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb93f-132">Inicializa una nueva instancia de la clase <see cref="T:System.Net.Sockets.TcpListener" /> con el extremo local especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93f-132">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpListener" /> class with the specified local endpoint.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb93f-133">Este constructor permite especificar la dirección IP local y se trata del número de puerto en el que se va a escuchar las conexiones entrantes.</span><span class="sxs-lookup"><span data-stu-id="eb93f-133">This constructor allows you to specify the local IP address and port number on which to listen for incoming connection attempts.</span></span> <span data-ttu-id="eb93f-134">Antes de usar este constructor, debe crear un <xref:System.Net.IPEndPoint> utilizando el local IP dirección y el puerto número deseado.</span><span class="sxs-lookup"><span data-stu-id="eb93f-134">Before using this constructor, you must create an <xref:System.Net.IPEndPoint> using the desired local IP address and port number.</span></span> <span data-ttu-id="eb93f-135">Pase este <xref:System.Net.IPEndPoint> al constructor como el `localEP` parámetro.</span><span class="sxs-lookup"><span data-stu-id="eb93f-135">Pass this <xref:System.Net.IPEndPoint> to the constructor as the `localEP` parameter.</span></span>  
  
 <span data-ttu-id="eb93f-136">Si no te importa qué dirección local se asigna, puede crear un <xref:System.Net.IPEndPoint> utilizando <xref:System.Net.IPAddress.Any?displayProperty=nameWithType> como el parámetro de dirección y el servicio subyacente proveedor asignará la dirección de red más adecuada.</span><span class="sxs-lookup"><span data-stu-id="eb93f-136">If you do not care which local address is assigned, you can create an <xref:System.Net.IPEndPoint> using <xref:System.Net.IPAddress.Any?displayProperty=nameWithType> as the address parameter, and the underlying service provider will assign the most appropriate network address.</span></span> <span data-ttu-id="eb93f-137">Esto puede ayudar a simplificar la aplicación si tiene varias interfaces de red.</span><span class="sxs-lookup"><span data-stu-id="eb93f-137">This might help simplify your application if you have multiple network interfaces.</span></span> <span data-ttu-id="eb93f-138">Si no te importa qué puerto local se utiliza, puede crear un <xref:System.Net.IPEndPoint> con 0 para el número de puerto.</span><span class="sxs-lookup"><span data-stu-id="eb93f-138">If you do not care which local port is used, you can create an <xref:System.Net.IPEndPoint> using 0 for the port number.</span></span> <span data-ttu-id="eb93f-139">En este caso, el proveedor de servicios asignará a un número de puertos efímeros disponibles.</span><span class="sxs-lookup"><span data-stu-id="eb93f-139">In this case, the service provider will assign an available ephemeral port number.</span></span> <span data-ttu-id="eb93f-140">Si usa este enfoque, puede detectar qué número de puerto y la dirección de red local se asignó usando el <xref:System.Net.Sockets.TcpListener.LocalEndpoint%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="eb93f-140">If you use this approach, you can discover what local network address and port number has been assigned by using the <xref:System.Net.Sockets.TcpListener.LocalEndpoint%2A> property.</span></span>  
  
 <span data-ttu-id="eb93f-141">Llame a la <xref:System.Net.Sockets.TcpListener.Start%2A> método para iniciar la escucha de intentos de conexión entrantes.</span><span class="sxs-lookup"><span data-stu-id="eb93f-141">Call the <xref:System.Net.Sockets.TcpListener.Start%2A> method to begin listening for incoming connection attempts.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="eb93f-142">Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación.</span><span class="sxs-lookup"><span data-stu-id="eb93f-142">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="eb93f-143">Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="eb93f-143">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb93f-144">En el ejemplo de código siguiente se crea una instancia de la <xref:System.Net.Sockets.TcpListener> clase utilizando el extremo local.</span><span class="sxs-lookup"><span data-stu-id="eb93f-144">The following code example creates an instance of the <xref:System.Net.Sockets.TcpListener> class using the local endpoint.</span></span>  
  
 [!code-cpp[Classic TcpListener.PublicMethodsAndPropertiesExample#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic TcpListener.PublicMethodsAndPropertiesExample/CPP/source.cpp#1)]
 [!code-csharp[Classic TcpListener.PublicMethodsAndPropertiesExample#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic TcpListener.PublicMethodsAndPropertiesExample/CS/source.cs#1)]
 [!code-vb[Classic TcpListener.PublicMethodsAndPropertiesExample#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic TcpListener.PublicMethodsAndPropertiesExample/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="eb93f-145">El valor de <paramref name="localEP" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93f-145">
              <paramref name="localEP" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.IPEndPoint" />
        <altmember cref="M:System.Net.Sockets.TcpListener.Start" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpListener (System.Net.IPAddress localaddr, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.IPAddress localaddr, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.#ctor(System.Net.IPAddress,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (localaddr As IPAddress, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TcpListener(System::Net::IPAddress ^ localaddr, int port);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.TcpListener : System.Net.IPAddress * int -&gt; System.Net.Sockets.TcpListener" Usage="new System.Net.Sockets.TcpListener (localaddr, port)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="localaddr" Type="System.Net.IPAddress" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="localaddr">
          <span data-ttu-id="eb93f-146">
            <see cref="T:System.Net.IPAddress" /> que representa la dirección IP local.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93f-146">An <see cref="T:System.Net.IPAddress" /> that represents the local IP address.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="eb93f-147">Puerto en el cual se escucharán los intentos de conexión entrantes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93f-147">The port on which to listen for incoming connection attempts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb93f-148">Inicializa una nueva instancia de la clase <see cref="T:System.Net.Sockets.TcpListener" /> que escucha los intentos de conexión entrantes en la dirección IP local y el número de puerto especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93f-148">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpListener" /> class that listens for incoming connection attempts on the specified local IP address and port number.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb93f-149">Este constructor permite especificar la dirección IP local y se trata del número de puerto en el que se va a escuchar las conexiones entrantes.</span><span class="sxs-lookup"><span data-stu-id="eb93f-149">This constructor allows you to specify the local IP address and port number on which to listen for incoming connection attempts.</span></span> <span data-ttu-id="eb93f-150">Antes de llamar a este constructor debe crear primero un <xref:System.Net.IPAddress> utilizando la dirección local deseada.</span><span class="sxs-lookup"><span data-stu-id="eb93f-150">Before calling this constructor you must first create an <xref:System.Net.IPAddress> using the desired local address.</span></span> <span data-ttu-id="eb93f-151">Pase este <xref:System.Net.IPAddress> al constructor como el `localaddr` parámetro.</span><span class="sxs-lookup"><span data-stu-id="eb93f-151">Pass this <xref:System.Net.IPAddress> to the constructor as the `localaddr` parameter.</span></span> <span data-ttu-id="eb93f-152">Si no te importa qué dirección local se asigne, especifique <xref:System.Net.IPAddress.Any?displayProperty=nameWithType> para el `localaddr` parámetro y el proveedor de servicios subyacente asignará la dirección de red más adecuada.</span><span class="sxs-lookup"><span data-stu-id="eb93f-152">If you do not care which local address is assigned, specify <xref:System.Net.IPAddress.Any?displayProperty=nameWithType> for the `localaddr` parameter, and the underlying service provider will assign the most appropriate network address.</span></span> <span data-ttu-id="eb93f-153">Esto puede ayudar a simplificar la aplicación si tiene varias interfaces de red.</span><span class="sxs-lookup"><span data-stu-id="eb93f-153">This might help simplify your application if you have multiple network interfaces.</span></span> <span data-ttu-id="eb93f-154">Si no te importa qué puerto local se utiliza, puede especificar 0 para el número de puerto.</span><span class="sxs-lookup"><span data-stu-id="eb93f-154">If you do not care which local port is used, you can specify 0 for the port number.</span></span> <span data-ttu-id="eb93f-155">En este caso, el proveedor de servicios asignará a un número de puerto disponible entre 1024 y 5000.</span><span class="sxs-lookup"><span data-stu-id="eb93f-155">In this case, the service provider will assign an available port number between 1024 and 5000.</span></span> <span data-ttu-id="eb93f-156">Si usa este enfoque, puede detectar qué número de puerto y la dirección de red local se asignó usando el <xref:System.Net.Sockets.TcpListener.LocalEndpoint%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="eb93f-156">If you use this approach, you can discover what local network address and port number has been assigned by using the <xref:System.Net.Sockets.TcpListener.LocalEndpoint%2A> property.</span></span>  
  
 <span data-ttu-id="eb93f-157">Llame a la <xref:System.Net.Sockets.TcpListener.Start%2A> método para iniciar la escucha de intentos de conexión entrantes.</span><span class="sxs-lookup"><span data-stu-id="eb93f-157">Call the <xref:System.Net.Sockets.TcpListener.Start%2A> method to begin listening for incoming connection attempts.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="eb93f-158">Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación.</span><span class="sxs-lookup"><span data-stu-id="eb93f-158">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="eb93f-159">Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="eb93f-159">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb93f-160">En el ejemplo de código siguiente se crea una instancia de la <xref:System.Net.Sockets.TcpListener> clase mediante un número de puerto y la dirección IP local.</span><span class="sxs-lookup"><span data-stu-id="eb93f-160">The following code example creates an instance of the <xref:System.Net.Sockets.TcpListener> class using a local IP address and port number.</span></span>  
  
 [!code-cpp[Classic TcpListener.PublicMethodsAndPropertiesExample#2](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic TcpListener.PublicMethodsAndPropertiesExample/CPP/source.cpp#2)]
 [!code-csharp[Classic TcpListener.PublicMethodsAndPropertiesExample#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic TcpListener.PublicMethodsAndPropertiesExample/CS/source.cs#2)]
 [!code-vb[Classic TcpListener.PublicMethodsAndPropertiesExample#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic TcpListener.PublicMethodsAndPropertiesExample/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="eb93f-161">El valor de <paramref name="localaddr" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93f-161">
              <paramref name="localaddr" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="eb93f-162">
            <paramref name="port" /> no se encuentra en el intervalo definido por <see cref="F:System.Net.IPEndPoint.MinPort" /> y <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93f-162">
              <paramref name="port" /> is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.IPAddress" />
        <altmember cref="M:System.Net.Sockets.TcpListener.Start" />
      </Docs>
    </Member>
    <Member MemberName="AcceptSocket">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.Socket AcceptSocket ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.Sockets.Socket AcceptSocket() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.AcceptSocket" />
      <MemberSignature Language="VB.NET" Value="Public Function AcceptSocket () As Socket" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::Sockets::Socket ^ AcceptSocket();" />
      <MemberSignature Language="F#" Value="member this.AcceptSocket : unit -&gt; System.Net.Sockets.Socket" Usage="tcpListener.AcceptSocket " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.Socket</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="eb93f-163">Acepta una solicitud de conexión pendiente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93f-163">Accepts a pending connection request.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eb93f-164">
            <see cref="T:System.Net.Sockets.Socket" /> que se utiliza para enviar y recibir datos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93f-164">A <see cref="T:System.Net.Sockets.Socket" /> used to send and receive data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb93f-165"><xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> es un método de bloqueo que devuelve un <xref:System.Net.Sockets.Socket> que puede usar para enviar y recibir datos.</span><span class="sxs-lookup"><span data-stu-id="eb93f-165"><xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> is a blocking method that returns a <xref:System.Net.Sockets.Socket> that you can use to send and receive data.</span></span> <span data-ttu-id="eb93f-166">Si desea evitar el bloqueo, use el <xref:System.Net.Sockets.TcpListener.Pending%2A> método para determinar si las solicitudes de conexión están disponibles en la cola de conexiones entrantes.</span><span class="sxs-lookup"><span data-stu-id="eb93f-166">If you want to avoid blocking, use the <xref:System.Net.Sockets.TcpListener.Pending%2A> method to determine if connection requests are available in the incoming connection queue.</span></span>  
  
 <span data-ttu-id="eb93f-167">El <xref:System.Net.Sockets.Socket> devuelto se inicializa con el número de puerto y la dirección IP del host remoto.</span><span class="sxs-lookup"><span data-stu-id="eb93f-167">The <xref:System.Net.Sockets.Socket> returned is initialized with the IP address and port number of the remote host.</span></span> <span data-ttu-id="eb93f-168">Puede usar cualquiera de los <xref:System.Net.Sockets.Socket.Send%2A> y <xref:System.Net.Sockets.Socket.Receive%2A> métodos disponibles en la <xref:System.Net.Sockets.Socket> clase para comunicarse con el host remoto.</span><span class="sxs-lookup"><span data-stu-id="eb93f-168">You can use any of the <xref:System.Net.Sockets.Socket.Send%2A> and <xref:System.Net.Sockets.Socket.Receive%2A> methods available in the <xref:System.Net.Sockets.Socket> class to communicate with the remote host.</span></span> <span data-ttu-id="eb93f-169">Cuando haya terminado con el <xref:System.Net.Sockets.Socket>, no olvide llamar a su <xref:System.Net.Sockets.Socket.Close%2A> método.</span><span class="sxs-lookup"><span data-stu-id="eb93f-169">When you are finished using the <xref:System.Net.Sockets.Socket>, be sure to call its <xref:System.Net.Sockets.Socket.Close%2A> method.</span></span> <span data-ttu-id="eb93f-170">Si la aplicación es relativamente sencilla, considere el uso de la <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> método en lugar de <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> método.</span><span class="sxs-lookup"><span data-stu-id="eb93f-170">If your application is relatively simple, consider using the <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> method rather than the <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> method.</span></span> <span data-ttu-id="eb93f-171"><xref:System.Net.Sockets.TcpClient> Proporciona métodos sencillos para enviar y recibir datos a través de una red en modo de bloqueo sincrónico.</span><span class="sxs-lookup"><span data-stu-id="eb93f-171"><xref:System.Net.Sockets.TcpClient> provides you with simple methods for sending and receiving data over a network in blocking synchronous mode.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="eb93f-172">Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación.</span><span class="sxs-lookup"><span data-stu-id="eb93f-172">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="eb93f-173">Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="eb93f-173">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb93f-174">En el ejemplo de código siguiente, la <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> método se usa para devolver un <xref:System.Net.Sockets.Socket>.</span><span class="sxs-lookup"><span data-stu-id="eb93f-174">In the following code example, the <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> method is used to return a <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="eb93f-175">Esto <xref:System.Net.Sockets.Socket> se usa para comunicarse con el cliente recién conectado.</span><span class="sxs-lookup"><span data-stu-id="eb93f-175">This <xref:System.Net.Sockets.Socket> is used to communicate with the newly connected client.</span></span>  
  
 [!code-cpp[Classic TcpListener.PublicMethodsAndPropertiesExample#4](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic TcpListener.PublicMethodsAndPropertiesExample/CPP/source.cpp#4)]
 [!code-csharp[Classic TcpListener.PublicMethodsAndPropertiesExample#4](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic TcpListener.PublicMethodsAndPropertiesExample/CS/source.cs#4)]
 [!code-vb[Classic TcpListener.PublicMethodsAndPropertiesExample#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic TcpListener.PublicMethodsAndPropertiesExample/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="eb93f-176">El agente de escucha no se ha iniciado con una llamada a <see cref="M:System.Net.Sockets.TcpListener.Start" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93f-176">The listener has not been started with a call to <see cref="M:System.Net.Sockets.TcpListener.Start" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.TcpListener.AcceptTcpClient" />
        <altmember cref="T:System.Net.Sockets.Socket" />
        <altmember cref="M:System.Net.Sockets.TcpListener.Pending" />
      </Docs>
    </Member>
    <Member MemberName="AcceptSocketAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Sockets.Socket&gt; AcceptSocketAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Sockets.Socket&gt; AcceptSocketAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.AcceptSocketAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function AcceptSocketAsync () As Task(Of Socket)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Sockets::Socket ^&gt; ^ AcceptSocketAsync();" />
      <MemberSignature Language="F#" Value="member this.AcceptSocketAsync : unit -&gt; System.Threading.Tasks.Task&lt;System.Net.Sockets.Socket&gt;" Usage="tcpListener.AcceptSocketAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Sockets.Socket&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="eb93f-177">Acepta una solicitud de conexión pendiente como una operación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93f-177">Accepts a pending connection request as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eb93f-178">Devuelve <see cref="T:System.Threading.Tasks.Task`1" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93f-178">Returns <see cref="T:System.Threading.Tasks.Task`1" /></span>
          </span>
          <span data-ttu-id="eb93f-179">Objeto de tarea que representa la operación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93f-179">The task object representing the asynchronous operation.</span>
          </span>
          <span data-ttu-id="eb93f-180">La propiedad <see cref="P:System.Threading.Tasks.Task`1.Result" /> en el objeto de tarea devuelve <see cref="T:System.Net.Sockets.Socket" /> utilizado para enviar y recibir datos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93f-180">The <see cref="P:System.Threading.Tasks.Task`1.Result" /> property on the task object returns a <see cref="T:System.Net.Sockets.Socket" /> used to send and receive data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb93f-181">Esta operación no se bloqueará.</span><span class="sxs-lookup"><span data-stu-id="eb93f-181">This operation will not block.</span></span> <span data-ttu-id="eb93f-182">El valor devuelto <xref:System.Threading.Tasks.Task%601> objeto se completará cuando se haya aceptado la conexión de socket.</span><span class="sxs-lookup"><span data-stu-id="eb93f-182">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the socket connection has been accepted.</span></span>  
  
 <span data-ttu-id="eb93f-183">El <xref:System.Net.Sockets.Socket> devuelto en <xref:System.Threading.Tasks.Task%601> se inicializa con el número de puerto y la dirección IP del host remoto.</span><span class="sxs-lookup"><span data-stu-id="eb93f-183">The <xref:System.Net.Sockets.Socket> returned in <xref:System.Threading.Tasks.Task%601> is initialized with the IP address and port number of the remote host.</span></span> <span data-ttu-id="eb93f-184">Puede usar cualquiera de los <xref:System.Net.Sockets.Socket.Send%2A> y <xref:System.Net.Sockets.Socket.Receive%2A> métodos disponibles en la <xref:System.Net.Sockets.Socket> clase para comunicarse con el host remoto.</span><span class="sxs-lookup"><span data-stu-id="eb93f-184">You can use any of the <xref:System.Net.Sockets.Socket.Send%2A> and <xref:System.Net.Sockets.Socket.Receive%2A> methods available in the <xref:System.Net.Sockets.Socket> class to communicate with the remote host.</span></span> <span data-ttu-id="eb93f-185">Cuando haya terminado con el <xref:System.Net.Sockets.Socket>, no olvide llamar a su <xref:System.Net.Sockets.Socket.Close%2A> método.</span><span class="sxs-lookup"><span data-stu-id="eb93f-185">When you are finished using the <xref:System.Net.Sockets.Socket>, be sure to call its <xref:System.Net.Sockets.Socket.Close%2A> method.</span></span> <span data-ttu-id="eb93f-186">Si la aplicación es relativamente sencilla, considere el uso de la <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> método en lugar de <xref:System.Net.Sockets.TcpListener.AcceptSocketAsync%2A> método.</span><span class="sxs-lookup"><span data-stu-id="eb93f-186">If your application is relatively simple, consider using the <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> method rather than the <xref:System.Net.Sockets.TcpListener.AcceptSocketAsync%2A> method.</span></span> <span data-ttu-id="eb93f-187"><xref:System.Net.Sockets.TcpClient> Proporciona métodos sencillos para enviar y recibir datos a través de una red en modo de bloqueo sincrónico.</span><span class="sxs-lookup"><span data-stu-id="eb93f-187"><xref:System.Net.Sockets.TcpClient> provides you with simple methods for sending and receiving data over a network in blocking synchronous mode.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="eb93f-188">Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación.</span><span class="sxs-lookup"><span data-stu-id="eb93f-188">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="eb93f-189">Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="eb93f-189">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="eb93f-190">El agente de escucha no se ha iniciado con una llamada a <see cref="M:System.Net.Sockets.TcpListener.Start" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93f-190">The listener has not been started with a call to <see cref="M:System.Net.Sockets.TcpListener.Start" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.TcpListener.AcceptTcpClient" />
        <altmember cref="T:System.Net.Sockets.Socket" />
        <altmember cref="M:System.Net.Sockets.TcpListener.Pending" />
      </Docs>
    </Member>
    <Member MemberName="AcceptTcpClient">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.TcpClient AcceptTcpClient ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.Sockets.TcpClient AcceptTcpClient() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.AcceptTcpClient" />
      <MemberSignature Language="VB.NET" Value="Public Function AcceptTcpClient () As TcpClient" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::Sockets::TcpClient ^ AcceptTcpClient();" />
      <MemberSignature Language="F#" Value="member this.AcceptTcpClient : unit -&gt; System.Net.Sockets.TcpClient" Usage="tcpListener.AcceptTcpClient " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.TcpClient</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="eb93f-191">Acepta una solicitud de conexión pendiente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93f-191">Accepts a pending connection request.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eb93f-192">
            <see cref="T:System.Net.Sockets.TcpClient" /> que se utiliza para enviar y recibir datos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93f-192">A <see cref="T:System.Net.Sockets.TcpClient" /> used to send and receive data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb93f-193"><xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> es un método de bloqueo que devuelve un <xref:System.Net.Sockets.TcpClient> que puede usar para enviar y recibir datos.</span><span class="sxs-lookup"><span data-stu-id="eb93f-193"><xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> is a blocking method that returns a <xref:System.Net.Sockets.TcpClient> that you can use to send and receive data.</span></span> <span data-ttu-id="eb93f-194">Use el <xref:System.Net.Sockets.TcpListener.Pending%2A> método para determinar si las solicitudes de conexión están disponibles en la cola de conexión entrantes si desea evitar el bloqueo.</span><span class="sxs-lookup"><span data-stu-id="eb93f-194">Use the <xref:System.Net.Sockets.TcpListener.Pending%2A> method to determine if connection requests are available in the incoming connection queue if you want to avoid blocking.</span></span>  
  
 <span data-ttu-id="eb93f-195">Use la <xref:System.Net.Sockets.TcpClient.GetStream%2A?displayProperty=nameWithType> método obtener subyacente <xref:System.Net.Sockets.NetworkStream> devuelto del <xref:System.Net.Sockets.TcpClient>.</span><span class="sxs-lookup"><span data-stu-id="eb93f-195">Use the <xref:System.Net.Sockets.TcpClient.GetStream%2A?displayProperty=nameWithType> method to obtain the underlying <xref:System.Net.Sockets.NetworkStream> of the returned <xref:System.Net.Sockets.TcpClient>.</span></span> <span data-ttu-id="eb93f-196">El <xref:System.Net.Sockets.NetworkStream> le proporcionará métodos para enviar y recibir con el host remoto.</span><span class="sxs-lookup"><span data-stu-id="eb93f-196">The <xref:System.Net.Sockets.NetworkStream> will provide you with methods for sending and receiving with the remote host.</span></span> <span data-ttu-id="eb93f-197">Cuando haya terminado con el <xref:System.Net.Sockets.TcpClient>, no olvide llamar a su <xref:System.Net.Sockets.TcpClient.Close%2A> método.</span><span class="sxs-lookup"><span data-stu-id="eb93f-197">When you are through with the <xref:System.Net.Sockets.TcpClient>, be sure to call its <xref:System.Net.Sockets.TcpClient.Close%2A> method.</span></span> <span data-ttu-id="eb93f-198">Si desea que la mayor flexibilidad que una <xref:System.Net.Sockets.TcpClient> ofertas, considere el uso de <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A>.</span><span class="sxs-lookup"><span data-stu-id="eb93f-198">If you want greater flexibility than a <xref:System.Net.Sockets.TcpClient> offers, consider using <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="eb93f-199">Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación.</span><span class="sxs-lookup"><span data-stu-id="eb93f-199">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="eb93f-200">Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="eb93f-200">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb93f-201">En el ejemplo de código siguiente, la <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> método se usa para devolver un <xref:System.Net.Sockets.TcpClient>.</span><span class="sxs-lookup"><span data-stu-id="eb93f-201">In the following code example, the <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> method is used to return a <xref:System.Net.Sockets.TcpClient>.</span></span> <span data-ttu-id="eb93f-202">Esto <xref:System.Net.Sockets.TcpClient> se usa para comunicarse con el cliente recién conectado.</span><span class="sxs-lookup"><span data-stu-id="eb93f-202">This <xref:System.Net.Sockets.TcpClient> is used to communicate with the newly connected client.</span></span>  
  
 [!code-cpp[Classic TcpListenerExample#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic TcpListenerExample/CPP/source.cpp#1)]
 [!code-csharp[Classic TcpListenerExample#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic TcpListenerExample/CS/source.cs#1)]
 [!code-vb[Classic TcpListenerExample#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic TcpListenerExample/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="eb93f-203">El agente de escucha no se ha iniciado con una llamada a <see cref="M:System.Net.Sockets.TcpListener.Start" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93f-203">The listener has not been started with a call to <see cref="M:System.Net.Sockets.TcpListener.Start" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="eb93f-204">Utilice la propiedad <see cref="P:System.Net.Sockets.SocketException.ErrorCode" /> para obtener el código de error específico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93f-204">Use the <see cref="P:System.Net.Sockets.SocketException.ErrorCode" /> property to obtain the specific error code.</span>
          </span>
          <span data-ttu-id="eb93f-205">Cuando obtenga este código, puede ver la documentación de <see href="/windows/desktop/winsock/windows-sockets-error-codes-2">códigos de error de la API de Windows Sockets, versión 2</see>, para ver una descripción detallada del error.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93f-205">When you have obtained this code, you can refer to the <see href="/windows/desktop/winsock/windows-sockets-error-codes-2">Windows Sockets version 2 API error code</see> documentation for a detailed description of the error.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.Sockets.TcpClient" />
        <altmember cref="M:System.Net.Sockets.TcpListener.AcceptSocket" />
        <altmember cref="T:System.Net.Sockets.Socket" />
        <altmember cref="T:System.Net.Sockets.NetworkStream" />
      </Docs>
    </Member>
    <Member MemberName="AcceptTcpClientAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Sockets.TcpClient&gt; AcceptTcpClientAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Sockets.TcpClient&gt; AcceptTcpClientAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.AcceptTcpClientAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function AcceptTcpClientAsync () As Task(Of TcpClient)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Sockets::TcpClient ^&gt; ^ AcceptTcpClientAsync();" />
      <MemberSignature Language="F#" Value="member this.AcceptTcpClientAsync : unit -&gt; System.Threading.Tasks.Task&lt;System.Net.Sockets.TcpClient&gt;" Usage="tcpListener.AcceptTcpClientAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Sockets.TcpClient&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="eb93f-206">Acepta una solicitud de conexión pendiente como una operación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93f-206">Accepts a pending connection request as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eb93f-207">Devuelve <see cref="T:System.Threading.Tasks.Task`1" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93f-207">Returns <see cref="T:System.Threading.Tasks.Task`1" /></span>
          </span>
          <span data-ttu-id="eb93f-208">Objeto de tarea que representa la operación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93f-208">The task object representing the asynchronous operation.</span>
          </span>
          <span data-ttu-id="eb93f-209">La propiedad <see cref="P:System.Threading.Tasks.Task`1.Result" /> en el objeto de tarea devuelve <see cref="T:System.Net.Sockets.TcpClient" /> utilizado para enviar y recibir datos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93f-209">The <see cref="P:System.Threading.Tasks.Task`1.Result" /> property on the task object returns a <see cref="T:System.Net.Sockets.TcpClient" /> used to send and receive data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb93f-210">Esta operación no se bloqueará.</span><span class="sxs-lookup"><span data-stu-id="eb93f-210">This operation will not block.</span></span> <span data-ttu-id="eb93f-211">El valor devuelto <xref:System.Threading.Tasks.Task%601> objeto se completará cuando se haya aceptado la conexión TCP.</span><span class="sxs-lookup"><span data-stu-id="eb93f-211">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the TCP connection has been accepted.</span></span>  
  
 <span data-ttu-id="eb93f-212">Use la <xref:System.Net.Sockets.TcpClient.GetStream%2A?displayProperty=nameWithType> método obtener subyacente <xref:System.Net.Sockets.NetworkStream> devuelto del <xref:System.Net.Sockets.TcpClient> en el <xref:System.Threading.Tasks.Task%601>.</span><span class="sxs-lookup"><span data-stu-id="eb93f-212">Use the <xref:System.Net.Sockets.TcpClient.GetStream%2A?displayProperty=nameWithType> method to obtain the underlying <xref:System.Net.Sockets.NetworkStream> of the returned <xref:System.Net.Sockets.TcpClient> in the <xref:System.Threading.Tasks.Task%601>.</span></span> <span data-ttu-id="eb93f-213">El <xref:System.Net.Sockets.NetworkStream> le proporcionará métodos para enviar y recibir con el host remoto.</span><span class="sxs-lookup"><span data-stu-id="eb93f-213">The <xref:System.Net.Sockets.NetworkStream> will provide you with methods for sending and receiving with the remote host.</span></span> <span data-ttu-id="eb93f-214">Cuando haya terminado con el <xref:System.Net.Sockets.TcpClient>, no olvide llamar a su <xref:System.Net.Sockets.TcpClient.Close%2A> método.</span><span class="sxs-lookup"><span data-stu-id="eb93f-214">When you are through with the <xref:System.Net.Sockets.TcpClient>, be sure to call its <xref:System.Net.Sockets.TcpClient.Close%2A> method.</span></span> <span data-ttu-id="eb93f-215">Si desea que la mayor flexibilidad que una <xref:System.Net.Sockets.TcpClient> ofertas, considere el uso de <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> o <xref:System.Net.Sockets.TcpListener.AcceptSocketAsync%2A>.</span><span class="sxs-lookup"><span data-stu-id="eb93f-215">If you want greater flexibility than a <xref:System.Net.Sockets.TcpClient> offers, consider using <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> or <xref:System.Net.Sockets.TcpListener.AcceptSocketAsync%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="eb93f-216">Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación.</span><span class="sxs-lookup"><span data-stu-id="eb93f-216">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="eb93f-217">Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="eb93f-217">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="eb93f-218">El agente de escucha no se ha iniciado con una llamada a <see cref="M:System.Net.Sockets.TcpListener.Start" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93f-218">The listener has not been started with a call to <see cref="M:System.Net.Sockets.TcpListener.Start" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="eb93f-219">Utilice la propiedad <see cref="P:System.Net.Sockets.SocketException.ErrorCode" /> para obtener el código de error específico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93f-219">Use the <see cref="P:System.Net.Sockets.SocketException.ErrorCode" /> property to obtain the specific error code.</span>
          </span>
          <span data-ttu-id="eb93f-220">Cuando obtenga este código, puede ver la documentación de <see href="/windows/desktop/winsock/windows-sockets-error-codes-2">códigos de error de la API de Windows Sockets, versión 2</see>, para ver una descripción detallada del error.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93f-220">When you have obtained this code, you can refer to the <see href="/windows/desktop/winsock/windows-sockets-error-codes-2">Windows Sockets version 2 API error code</see> documentation for a detailed description of the error.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.Sockets.TcpClient" />
        <altmember cref="M:System.Net.Sockets.TcpListener.AcceptSocket" />
        <altmember cref="T:System.Net.Sockets.Socket" />
        <altmember cref="T:System.Net.Sockets.NetworkStream" />
      </Docs>
    </Member>
    <Member MemberName="Active">
      <MemberSignature Language="C#" Value="protected bool Active { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Active" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpListener.Active" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Active As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool Active { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Active : bool" Usage="System.Net.Sockets.TcpListener.Active" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb93f-221">Obtiene un valor que indica si <see cref="T:System.Net.Sockets.TcpListener" /> escucha activamente las conexiones de clientes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93f-221">Gets a value that indicates whether <see cref="T:System.Net.Sockets.TcpListener" /> is actively listening for client connections.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eb93f-222">Es <see langword="true" /> si <see cref="T:System.Net.Sockets.TcpListener" /> escucha activamente; en caso contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93f-222">
              <see langword="true" /> if <see cref="T:System.Net.Sockets.TcpListener" /> is actively listening; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb93f-223">Las clases derivadas de <xref:System.Net.Sockets.TcpListener> puede utilizar esta propiedad para determinar si el <xref:System.Net.Sockets.Socket> está escuchando los intentos de conexión entrante.</span><span class="sxs-lookup"><span data-stu-id="eb93f-223">Classes deriving from <xref:System.Net.Sockets.TcpListener> can use this property to determine if the <xref:System.Net.Sockets.Socket> is currently listening for incoming connection attempts.</span></span> <span data-ttu-id="eb93f-224">El <xref:System.Net.Sockets.TcpClient.Active%2A> propiedad puede usarse para evitar redundantes <xref:System.Net.Sockets.TcpListener.Start%2A> intentos.</span><span class="sxs-lookup"><span data-stu-id="eb93f-224">The <xref:System.Net.Sockets.TcpClient.Active%2A> property can be used to avoid redundant <xref:System.Net.Sockets.TcpListener.Start%2A> attempts.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.Sockets.TcpListener.Start" />
      </Docs>
    </Member>
    <Member MemberName="AllowNatTraversal">
      <MemberSignature Language="C#" Value="public void AllowNatTraversal (bool allowed);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AllowNatTraversal(bool allowed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.AllowNatTraversal(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AllowNatTraversal (allowed As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AllowNatTraversal(bool allowed);" />
      <MemberSignature Language="F#" Value="member this.AllowNatTraversal : bool -&gt; unit" Usage="tcpListener.AllowNatTraversal allowed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="allowed" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="allowed">
          <span data-ttu-id="eb93f-225">Valor booleano que especifica si se va a habilitar o deshabilitar NAT transversal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93f-225">A Boolean value that specifies whether to enable or disable NAT traversal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb93f-226">Habilita o deshabilita NAT (Traducción de direcciones de red) transversal en una instancia de <see cref="T:System.Net.Sockets.TcpListener" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93f-226">Enables or disables Network Address Translation (NAT) traversal on a <see cref="T:System.Net.Sockets.TcpListener" /> instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb93f-227">El <xref:System.Net.Sockets.TcpListener.AllowNatTraversal%2A> método se utiliza para habilitar o deshabilitar NAT transversal para un <xref:System.Net.Sockets.TcpListener> instancia.</span><span class="sxs-lookup"><span data-stu-id="eb93f-227">The <xref:System.Net.Sockets.TcpListener.AllowNatTraversal%2A> method is used to enable or disable NAT traversal for a <xref:System.Net.Sockets.TcpListener> instance.</span></span> <span data-ttu-id="eb93f-228">Cruce seguro de NAT puede proporcionarse mediante un túnel ISATAP, 6to4 o Teredo.</span><span class="sxs-lookup"><span data-stu-id="eb93f-228">NAT traversal may be provided using Teredo, 6to4, or an ISATAP tunnel.</span></span>  
  
 <span data-ttu-id="eb93f-229">Cuando el `allowed` parámetro es false, el <xref:System.Net.Sockets.SocketOptionName.IPProtectionLevel> opción en el socket asociado se establece en <xref:System.Net.Sockets.IPProtectionLevel.EdgeRestricted>.</span><span class="sxs-lookup"><span data-stu-id="eb93f-229">When the `allowed` parameter is false, the <xref:System.Net.Sockets.SocketOptionName.IPProtectionLevel> option on the associated socket is set to <xref:System.Net.Sockets.IPProtectionLevel.EdgeRestricted>.</span></span> <span data-ttu-id="eb93f-230">Esto deshabilita explícitamente la exploración transversal de NAT para una <xref:System.Net.Sockets.TcpListener> instancia.</span><span class="sxs-lookup"><span data-stu-id="eb93f-230">This explicitly disables NAT traversal for a <xref:System.Net.Sockets.TcpListener> instance.</span></span>  
  
 <span data-ttu-id="eb93f-231">Cuando el `allowed` parámetro es true, el <xref:System.Net.Sockets.SocketOptionName.IPProtectionLevel> opción en el socket asociado se establece en <xref:System.Net.Sockets.IPProtectionLevel.Unrestricted>.</span><span class="sxs-lookup"><span data-stu-id="eb93f-231">When the `allowed` parameter is true, the <xref:System.Net.Sockets.SocketOptionName.IPProtectionLevel> option on the associated socket is set to <xref:System.Net.Sockets.IPProtectionLevel.Unrestricted>.</span></span> <span data-ttu-id="eb93f-232">Esto puede permitir NAT transversal para un <xref:System.Net.Sockets.TcpListener> según las reglas de firewall en su lugar en el sistema.</span><span class="sxs-lookup"><span data-stu-id="eb93f-232">This may allow NAT traversal for a <xref:System.Net.Sockets.TcpListener> depending on firewall rules in place on the system.</span></span>  
  
 <span data-ttu-id="eb93f-233">El <xref:System.Net.Sockets.TcpListener.AllowNatTraversal%2A> se debe invocar el método antes de llamar a la <xref:System.Net.Sockets.TcpListener.Start%2A> método para empezar a escuchar las solicitudes de conexión entrante (antes de que se enlaza el socket).</span><span class="sxs-lookup"><span data-stu-id="eb93f-233">The <xref:System.Net.Sockets.TcpListener.AllowNatTraversal%2A> method must be invoked prior to calling the <xref:System.Net.Sockets.TcpListener.Start%2A> method to begin listening for incoming connection requests (before the socket is bound).</span></span> <span data-ttu-id="eb93f-234">Si <xref:System.Net.Sockets.TcpListener.AllowNatTraversal%2A> se llama al método después de la <xref:System.Net.Sockets.TcpListener.Start%2A> método, una <xref:System.InvalidOperationException> se iniciará.</span><span class="sxs-lookup"><span data-stu-id="eb93f-234">If <xref:System.Net.Sockets.TcpListener.AllowNatTraversal%2A> method is called after the <xref:System.Net.Sockets.TcpListener.Start%2A> method, then an <xref:System.InvalidOperationException> will be thrown.</span></span>  
  
 <span data-ttu-id="eb93f-235">Una dirección Teredo es una dirección IPv6 con el prefijo de 2001:: / 32.</span><span class="sxs-lookup"><span data-stu-id="eb93f-235">A Teredo address is an IPv6 address with the prefix of 2001::/32.</span></span> <span data-ttu-id="eb93f-236">Las direcciones Teredo se pueden devolver a través de la resolución de nombres DNS normal o enumerar como una dirección IPv6 asignada a una interfaz local.</span><span class="sxs-lookup"><span data-stu-id="eb93f-236">Teredo addresses can be returned through normal DNS name resolution or enumerated as an IPv6 address assigned to a local interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="eb93f-237">Se llama al método <see cref="M:System.Net.Sockets.TcpListener.AllowNatTraversal(System.Boolean)" /> después de llamar al método <see cref="M:System.Net.Sockets.TcpListener.Start" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93f-237">The <see cref="M:System.Net.Sockets.TcpListener.AllowNatTraversal(System.Boolean)" /> method was called after calling the <see cref="M:System.Net.Sockets.TcpListener.Start" /> method</span>
          </span>
        </exception>
        <altmember cref="P:System.Net.IPAddress.IsIPv6Teredo" />
        <altmember cref="T:System.Net.Sockets.IPProtectionLevel" />
        <altmember cref="F:System.Net.Sockets.SocketOptionName.IPProtectionLevel" />
        <altmember cref="M:System.Net.Sockets.Socket.SetIPProtectionLevel(System.Net.Sockets.IPProtectionLevel)" />
        <altmember cref="M:System.Net.Sockets.UdpClient.AllowNatTraversal(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="BeginAcceptSocket">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginAcceptSocket (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginAcceptSocket(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.BeginAcceptSocket(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginAcceptSocket (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginAcceptSocket(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginAcceptSocket : AsyncCallback * obj -&gt; IAsyncResult" Usage="tcpListener.BeginAcceptSocket (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="eb93f-238">Delegado de <see cref="T:System.AsyncCallback" /> que hace referencia al método que se invocará cuando la operación se complete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93f-238">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="eb93f-239">Objeto definido por el usuario que contiene información sobre la operación de aceptación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93f-239">A user-defined object containing information about the accept operation.</span>
          </span>
          <span data-ttu-id="eb93f-240">Este objeto se pasa al delegado de <paramref name="callback" /> cuando la operación se completa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93f-240">This object is passed to the <paramref name="callback" /> delegate when the operation is complete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb93f-241">Comienza una operación asincrónica para aceptar un intento de conexión entrante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93f-241">Begins an asynchronous operation to accept an incoming connection attempt.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eb93f-242">Interfaz <see cref="T:System.IAsyncResult" /> que hace referencia a la creación asincrónica del objeto <see cref="T:System.Net.Sockets.Socket" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93f-242">An <see cref="T:System.IAsyncResult" /> that references the asynchronous creation of the <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb93f-243">Asincrónico <xref:System.Net.Sockets.TcpListener.BeginAcceptSocket%2A> debe completarse la operación mediante una llamada a la <xref:System.Net.Sockets.TcpListener.EndAcceptSocket%2A> método.</span><span class="sxs-lookup"><span data-stu-id="eb93f-243">The asynchronous <xref:System.Net.Sockets.TcpListener.BeginAcceptSocket%2A> operation must be completed by calling the <xref:System.Net.Sockets.TcpListener.EndAcceptSocket%2A> method.</span></span> <span data-ttu-id="eb93f-244">Normalmente, se invoca el método por el `callback` delegar.</span><span class="sxs-lookup"><span data-stu-id="eb93f-244">Typically, the method is invoked by the `callback` delegate.</span></span>  
  
 <span data-ttu-id="eb93f-245">Este método no se bloquea hasta que se complete la operación.</span><span class="sxs-lookup"><span data-stu-id="eb93f-245">This method does not block until the operation completes.</span></span> <span data-ttu-id="eb93f-246">Para bloquear hasta que se complete la operación, utilice el <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> método.</span><span class="sxs-lookup"><span data-stu-id="eb93f-246">To block until the operation completes, use the <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> method.</span></span>  
  
 <span data-ttu-id="eb93f-247">Para obtener información detallada acerca de cómo utilizar el modelo de programación asincrónico, vea [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="eb93f-247">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="eb93f-248">Puede llamar a la <xref:System.Net.Sockets.Socket.RemoteEndPoint%2A> propiedad devuelto del <xref:System.Net.Sockets.Socket> para identificar el número de puerto y la dirección de red del host remoto.</span><span class="sxs-lookup"><span data-stu-id="eb93f-248">You can call the <xref:System.Net.Sockets.Socket.RemoteEndPoint%2A> property of the returned <xref:System.Net.Sockets.Socket> to identify the remote host's network address and port number.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="eb93f-249">Si recibe un <xref:System.Net.Sockets.SocketException>, utilice el <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> propiedad para obtener el código de error específico y consulte la documentación de códigos de error de Windows Sockets versión 2 API en MSDN library en la [ http://msdn.microsoft.com/library/ ](https://msdn.microsoft.com/library/) para una detallada Descripción del error.</span><span class="sxs-lookup"><span data-stu-id="eb93f-249">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code and refer to the Windows Sockets version 2 API error code documentation in the MSDN library at [http://msdn.microsoft.com/library/](https://msdn.microsoft.com/library/) for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="eb93f-250">Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación.</span><span class="sxs-lookup"><span data-stu-id="eb93f-250">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="eb93f-251">Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="eb93f-251">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb93f-252">En el ejemplo de código siguiente se muestra el uso de la <xref:System.Net.Sockets.TcpListener.BeginAcceptSocket%2A> método para crear y conectar un socket.</span><span class="sxs-lookup"><span data-stu-id="eb93f-252">The following code example demonstrates the use of the <xref:System.Net.Sockets.TcpListener.BeginAcceptSocket%2A> method to create and connect a socket.</span></span> <span data-ttu-id="eb93f-253">Las llamadas de delegado de la devolución de llamada la <xref:System.Net.Sockets.TcpListener.EndAcceptSocket%2A> método para finalizar la solicitud asincrónica.</span><span class="sxs-lookup"><span data-stu-id="eb93f-253">The callback delegate calls the <xref:System.Net.Sockets.TcpListener.EndAcceptSocket%2A> method to end the asynchronous request.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpListener1#4](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/cpp/tcpserver.cpp#4)]
 [!code-csharp[System.Net.Sockets.TcpListener1#4](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/CS/tcpserver.cs#4)]
 [!code-vb[System.Net.Sockets.TcpListener1#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/VB/tcpserver.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="eb93f-254">Se ha producido un error al intentar obtener acceso al socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93f-254">An error occurred while attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="eb93f-255">El <see cref="T:System.Net.Sockets.Socket" /> se ha cerrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93f-255">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginAcceptTcpClient">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginAcceptTcpClient (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginAcceptTcpClient(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.BeginAcceptTcpClient(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginAcceptTcpClient (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginAcceptTcpClient(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginAcceptTcpClient : AsyncCallback * obj -&gt; IAsyncResult" Usage="tcpListener.BeginAcceptTcpClient (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="eb93f-256">Delegado de <see cref="T:System.AsyncCallback" /> que hace referencia al método que se invocará cuando la operación se complete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93f-256">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="eb93f-257">Objeto definido por el usuario que contiene información sobre la operación de aceptación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93f-257">A user-defined object containing information about the accept operation.</span>
          </span>
          <span data-ttu-id="eb93f-258">Este objeto se pasa al delegado de <paramref name="callback" /> cuando la operación se completa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93f-258">This object is passed to the <paramref name="callback" /> delegate when the operation is complete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb93f-259">Comienza una operación asincrónica para aceptar un intento de conexión entrante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93f-259">Begins an asynchronous operation to accept an incoming connection attempt.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eb93f-260">Interfaz <see cref="T:System.IAsyncResult" /> que hace referencia a la creación asincrónica del objeto <see cref="T:System.Net.Sockets.TcpClient" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93f-260">An <see cref="T:System.IAsyncResult" /> that references the asynchronous creation of the <see cref="T:System.Net.Sockets.TcpClient" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb93f-261">Asincrónico <xref:System.Net.Sockets.TcpListener.BeginAcceptTcpClient%2A> debe completarse la operación mediante una llamada a la <xref:System.Net.Sockets.TcpListener.EndAcceptTcpClient%2A> método.</span><span class="sxs-lookup"><span data-stu-id="eb93f-261">The asynchronous <xref:System.Net.Sockets.TcpListener.BeginAcceptTcpClient%2A> operation must be completed by calling the <xref:System.Net.Sockets.TcpListener.EndAcceptTcpClient%2A> method.</span></span> <span data-ttu-id="eb93f-262">Normalmente, se invoca el método por el `callback` delegar.</span><span class="sxs-lookup"><span data-stu-id="eb93f-262">Typically, the method is invoked by the `callback` delegate.</span></span>  
  
 <span data-ttu-id="eb93f-263">Este método no se bloquea hasta que se complete la operación.</span><span class="sxs-lookup"><span data-stu-id="eb93f-263">This method does not block until the operation completes.</span></span> <span data-ttu-id="eb93f-264">Para bloquear hasta que se complete la operación, utilice el <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> método.</span><span class="sxs-lookup"><span data-stu-id="eb93f-264">To block until the operation completes, use the <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> method.</span></span>  
  
 <span data-ttu-id="eb93f-265">Para obtener información detallada acerca de cómo utilizar el modelo de programación asincrónico, vea [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="eb93f-265">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="eb93f-266">Si recibe un <xref:System.Net.Sockets.SocketException>, utilice el <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> propiedad para obtener el código de error específico y consulte la documentación de códigos de error de Windows Sockets versión 2 API en MSDN library en la [ http://msdn.microsoft.com/library/ ](https://msdn.microsoft.com/library/) para una detallada Descripción del error.</span><span class="sxs-lookup"><span data-stu-id="eb93f-266">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code and refer to the Windows Sockets version 2 API error code documentation in the MSDN library at [http://msdn.microsoft.com/library/](https://msdn.microsoft.com/library/) for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="eb93f-267">Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación.</span><span class="sxs-lookup"><span data-stu-id="eb93f-267">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="eb93f-268">Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="eb93f-268">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb93f-269">En el ejemplo de código siguiente se muestra el uso de la <xref:System.Net.Sockets.TcpListener.BeginAcceptTcpClient%2A> método para crear y conectar un socket.</span><span class="sxs-lookup"><span data-stu-id="eb93f-269">The following code example demonstrates the use of the <xref:System.Net.Sockets.TcpListener.BeginAcceptTcpClient%2A> method to create and connect a socket.</span></span> <span data-ttu-id="eb93f-270">Las llamadas de delegado de la devolución de llamada la <xref:System.Net.Sockets.TcpListener.EndAcceptTcpClient%2A> método para finalizar la solicitud asincrónica.</span><span class="sxs-lookup"><span data-stu-id="eb93f-270">The callback delegate calls the <xref:System.Net.Sockets.TcpListener.EndAcceptTcpClient%2A> method to end the asynchronous request.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpListener1#5](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/cpp/tcpserver.cpp#5)]
 [!code-csharp[System.Net.Sockets.TcpListener1#5](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/CS/tcpserver.cs#5)]
 [!code-vb[System.Net.Sockets.TcpListener1#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/VB/tcpserver.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="eb93f-271">Se ha producido un error al intentar obtener acceso al socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93f-271">An error occurred while attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="eb93f-272">El <see cref="T:System.Net.Sockets.Socket" /> se ha cerrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93f-272">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Net.Sockets.TcpListener Create (int port);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.Sockets.TcpListener Create(int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.Create(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (port As Integer) As TcpListener" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::Sockets::TcpListener ^ Create(int port);" />
      <MemberSignature Language="F#" Value="static member Create : int -&gt; System.Net.Sockets.TcpListener" Usage="System.Net.Sockets.TcpListener.Create port" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.TcpListener</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="port">
          <span data-ttu-id="eb93f-273">Puerto en el cual se escucharán los intentos de conexión entrantes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93f-273">The port on which to listen for incoming connection attempts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb93f-274">Crea una nueva instancia de <see cref="T:System.Net.Sockets.TcpListener" /> para realizar escuchas en el puerto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93f-274">Creates a new <see cref="T:System.Net.Sockets.TcpListener" /> instance to listen on the specified port.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eb93f-275">Devuelva <see cref="T:System.Net.Sockets.TcpListener" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93f-275">Returns <see cref="T:System.Net.Sockets.TcpListener" />.</span>
          </span>
          <span data-ttu-id="eb93f-276">Una nueva instancia de <see cref="T:System.Net.Sockets.TcpListener" /> para realizar escuchas en el puerto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93f-276">A new <see cref="T:System.Net.Sockets.TcpListener" /> instance to listen on the specified port.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndAcceptSocket">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.Socket EndAcceptSocket (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.Sockets.Socket EndAcceptSocket(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.EndAcceptSocket(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndAcceptSocket (asyncResult As IAsyncResult) As Socket" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::Sockets::Socket ^ EndAcceptSocket(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndAcceptSocket : IAsyncResult -&gt; System.Net.Sockets.Socket" Usage="tcpListener.EndAcceptSocket asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.Socket</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="eb93f-277">Interfaz <see cref="T:System.IAsyncResult" /> que se devuelve al llamar al método <see cref="M:System.Net.Sockets.TcpListener.BeginAcceptSocket(System.AsyncCallback,System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93f-277">An <see cref="T:System.IAsyncResult" /> returned by a call to the <see cref="M:System.Net.Sockets.TcpListener.BeginAcceptSocket(System.AsyncCallback,System.Object)" /> method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb93f-278">Acepta asincrónicamente un intento de conexión entrante y crea un nuevo objeto <see cref="T:System.Net.Sockets.Socket" /> para controlar la comunicación con el host remoto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93f-278">Asynchronously accepts an incoming connection attempt and creates a new <see cref="T:System.Net.Sockets.Socket" /> to handle remote host communication.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eb93f-279">Objeto <see cref="T:System.Net.Sockets.Socket" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93f-279">A <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
          <span data-ttu-id="eb93f-280">Objeto <see cref="T:System.Net.Sockets.Socket" /> que se utiliza para enviar y recibir datos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93f-280">The <see cref="T:System.Net.Sockets.Socket" /> used to send and receive data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb93f-281">Este método se bloquea hasta que la operación se complete.</span><span class="sxs-lookup"><span data-stu-id="eb93f-281">This method blocks until the operation is complete.</span></span> <span data-ttu-id="eb93f-282">Para realizar esta operación sincrónicamente, utilice el <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> método.</span><span class="sxs-lookup"><span data-stu-id="eb93f-282">To perform this operation synchronously, use the <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="eb93f-283">Puede llamar a la <xref:System.Net.Sockets.Socket.RemoteEndPoint%2A> propiedad devuelto del <xref:System.Net.Sockets.Socket> para identificar el número de puerto y la dirección de red del host remoto.</span><span class="sxs-lookup"><span data-stu-id="eb93f-283">You can call the <xref:System.Net.Sockets.Socket.RemoteEndPoint%2A> property of the returned <xref:System.Net.Sockets.Socket> to identify the remote host's network address and port number.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="eb93f-284">Si recibe un <xref:System.Net.Sockets.SocketException>, utilice el <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> propiedad para obtener el código de error específico y consulte la documentación de códigos de error de Windows Sockets versión 2 API en MSDN library en la [ http://msdn.microsoft.com/library/ ](https://msdn.microsoft.com/library/) para una detallada Descripción del error.</span><span class="sxs-lookup"><span data-stu-id="eb93f-284">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code and refer to the Windows Sockets version 2 API error code documentation in the MSDN library at [http://msdn.microsoft.com/library/](https://msdn.microsoft.com/library/) for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="eb93f-285">Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación.</span><span class="sxs-lookup"><span data-stu-id="eb93f-285">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="eb93f-286">Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="eb93f-286">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb93f-287">En el ejemplo de código siguiente se muestra el uso de la <xref:System.Net.Sockets.TcpListener.BeginAcceptSocket%2A> método para crear y conectar un socket.</span><span class="sxs-lookup"><span data-stu-id="eb93f-287">The following code example demonstrates the use of the <xref:System.Net.Sockets.TcpListener.BeginAcceptSocket%2A> method to create and connect a socket.</span></span> <span data-ttu-id="eb93f-288">Las llamadas de delegado de la devolución de llamada la <xref:System.Net.Sockets.TcpListener.EndAcceptSocket%2A> método para finalizar la solicitud asincrónica.</span><span class="sxs-lookup"><span data-stu-id="eb93f-288">The callback delegate calls the <xref:System.Net.Sockets.TcpListener.EndAcceptSocket%2A> method to end the asynchronous request.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpListener1#4](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/cpp/tcpserver.cpp#4)]
 [!code-csharp[System.Net.Sockets.TcpListener1#4](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/CS/tcpserver.cs#4)]
 [!code-vb[System.Net.Sockets.TcpListener1#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/VB/tcpserver.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="eb93f-289">El objeto <see cref="T:System.Net.Sockets.Socket" /> subyacente se ha cerrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93f-289">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="eb93f-290">El parámetro <paramref name="asyncResult" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93f-290">The <paramref name="asyncResult" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="eb93f-291">El parámetro <paramref name="asyncResult" /> no se creó mediante una llamada al método <see cref="M:System.Net.Sockets.TcpListener.BeginAcceptSocket(System.AsyncCallback,System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93f-291">The <paramref name="asyncResult" /> parameter was not created by a call to the <see cref="M:System.Net.Sockets.TcpListener.BeginAcceptSocket(System.AsyncCallback,System.Object)" /> method.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="eb93f-292">El método <see cref="M:System.Net.Sockets.TcpListener.EndAcceptSocket(System.IAsyncResult)" /> se definió previamente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93f-292">The <see cref="M:System.Net.Sockets.TcpListener.EndAcceptSocket(System.IAsyncResult)" /> method was previously called.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="eb93f-293">Se ha producido un error al intentar obtener acceso al <see cref="T:System.Net.Sockets.Socket" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93f-293">An error occurred while attempting to access the <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EndAcceptTcpClient">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.TcpClient EndAcceptTcpClient (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.Sockets.TcpClient EndAcceptTcpClient(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.EndAcceptTcpClient(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndAcceptTcpClient (asyncResult As IAsyncResult) As TcpClient" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::Sockets::TcpClient ^ EndAcceptTcpClient(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndAcceptTcpClient : IAsyncResult -&gt; System.Net.Sockets.TcpClient" Usage="tcpListener.EndAcceptTcpClient asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.TcpClient</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="eb93f-294">Interfaz <see cref="T:System.IAsyncResult" /> que se devuelve al llamar al método <see cref="M:System.Net.Sockets.TcpListener.BeginAcceptTcpClient(System.AsyncCallback,System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93f-294">An <see cref="T:System.IAsyncResult" /> returned by a call to the <see cref="M:System.Net.Sockets.TcpListener.BeginAcceptTcpClient(System.AsyncCallback,System.Object)" /> method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb93f-295">Acepta asincrónicamente un intento de conexión entrante y crea un nuevo objeto <see cref="T:System.Net.Sockets.TcpClient" /> para controlar la comunicación con el host remoto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93f-295">Asynchronously accepts an incoming connection attempt and creates a new <see cref="T:System.Net.Sockets.TcpClient" /> to handle remote host communication.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eb93f-296">Objeto <see cref="T:System.Net.Sockets.TcpClient" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93f-296">A <see cref="T:System.Net.Sockets.TcpClient" />.</span>
          </span>
          <span data-ttu-id="eb93f-297">Objeto <see cref="T:System.Net.Sockets.TcpClient" /> que se utiliza para enviar y recibir datos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93f-297">The <see cref="T:System.Net.Sockets.TcpClient" /> used to send and receive data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb93f-298">Este método se bloquea hasta que la operación se complete.</span><span class="sxs-lookup"><span data-stu-id="eb93f-298">This method blocks until the operation is complete.</span></span> <span data-ttu-id="eb93f-299">Para realizar esta operación sincrónicamente, utilice el <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> método.</span><span class="sxs-lookup"><span data-stu-id="eb93f-299">To perform this operation synchronously, use the <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="eb93f-300">Puede llamar a la <xref:System.Net.Sockets.Socket.RemoteEndPoint%2A> propiedad del socket subyacente (<xref:System.Net.Sockets.TcpClient.Client%2A>) para identificar el número de puerto y la dirección de red del host remoto.</span><span class="sxs-lookup"><span data-stu-id="eb93f-300">You can call the <xref:System.Net.Sockets.Socket.RemoteEndPoint%2A> property of the underlying socket (<xref:System.Net.Sockets.TcpClient.Client%2A>) to identify the remote host's network address and port number.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="eb93f-301">Si recibe un <xref:System.Net.Sockets.SocketException>, utilice el <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> propiedad para obtener el código de error específico y consulte la documentación de códigos de error de Windows Sockets versión 2 API en MSDN library en la [ http://msdn.microsoft.com/library/ ](https://msdn.microsoft.com/library/) para una detallada Descripción del error.</span><span class="sxs-lookup"><span data-stu-id="eb93f-301">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code and refer to the Windows Sockets version 2 API error code documentation in the MSDN library at [http://msdn.microsoft.com/library/](https://msdn.microsoft.com/library/) for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="eb93f-302">Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación.</span><span class="sxs-lookup"><span data-stu-id="eb93f-302">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="eb93f-303">Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="eb93f-303">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb93f-304">En el ejemplo de código siguiente se muestra el uso de la <xref:System.Net.Sockets.TcpListener.BeginAcceptTcpClient%2A> método para crear y conectar un socket.</span><span class="sxs-lookup"><span data-stu-id="eb93f-304">The following code example demonstrates the use of the <xref:System.Net.Sockets.TcpListener.BeginAcceptTcpClient%2A> method to create and connect a socket.</span></span> <span data-ttu-id="eb93f-305">Las llamadas de delegado de la devolución de llamada la <xref:System.Net.Sockets.TcpListener.EndAcceptTcpClient%2A> método para finalizar la solicitud asincrónica.</span><span class="sxs-lookup"><span data-stu-id="eb93f-305">The callback delegate calls the <xref:System.Net.Sockets.TcpListener.EndAcceptTcpClient%2A> method to end the asynchronous request.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpListener1#5](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/cpp/tcpserver.cpp#5)]
 [!code-csharp[System.Net.Sockets.TcpListener1#5](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/CS/tcpserver.cs#5)]
 [!code-vb[System.Net.Sockets.TcpListener1#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/VB/tcpserver.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExclusiveAddressUse">
      <MemberSignature Language="C#" Value="public bool ExclusiveAddressUse { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExclusiveAddressUse" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpListener.ExclusiveAddressUse" />
      <MemberSignature Language="VB.NET" Value="Public Property ExclusiveAddressUse As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExclusiveAddressUse { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ExclusiveAddressUse : bool with get, set" Usage="System.Net.Sockets.TcpListener.ExclusiveAddressUse" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb93f-306">Obtiene o establece un valor <see cref="T:System.Boolean" /> que especifica si <see cref="T:System.Net.Sockets.TcpListener" /> permite a sólo un socket subyacente escuchar en un puerto concreto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93f-306">Gets or sets a <see cref="T:System.Boolean" /> value that specifies whether the <see cref="T:System.Net.Sockets.TcpListener" /> allows only one underlying socket to listen to a specific port.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eb93f-307">Es <see langword="true" /> si <see cref="T:System.Net.Sockets.TcpListener" /> sólo permite a un objeto <see cref="T:System.Net.Sockets.TcpListener" /> escuchar en un puerto concreto; de lo contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93f-307">
              <see langword="true" /> if the <see cref="T:System.Net.Sockets.TcpListener" /> allows only one <see cref="T:System.Net.Sockets.TcpListener" /> to listen to a specific port; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="eb93f-308">Archivos .natvis</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93f-308">.</span>
          </span>
          <span data-ttu-id="eb93f-309">El valor predeterminado es <see langword="true" /> para Windows Server 2003 y Windows XP Service Pack 2 y versiones posteriores, y <see langword="false" /> para el resto de versiones.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93f-309">The default is <see langword="true" /> for Windows Server 2003 and Windows XP Service Pack 2 and later, and <see langword="false" /> for all other versions.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb93f-310">De forma predeterminada, varios agentes de escucha pueden escuchar un puerto específico.</span><span class="sxs-lookup"><span data-stu-id="eb93f-310">By default, multiple listeners can listen to a specific port.</span></span> <span data-ttu-id="eb93f-311">Sin embargo, solo uno de los agentes de escucha puede realizar operaciones en el tráfico de red enviado al puerto.</span><span class="sxs-lookup"><span data-stu-id="eb93f-311">However, only one of the listeners can perform operations on the network traffic sent to the port.</span></span> <span data-ttu-id="eb93f-312">Si más de un agente de escucha intenta enlazarse a un puerto determinado, el otro con la dirección IP específica más controla el tráfico de red enviado a ese puerto.</span><span class="sxs-lookup"><span data-stu-id="eb93f-312">If more than one listener attempts to bind to a particular port, then the one with the more specific IP address handles the network traffic sent to that port.</span></span> <span data-ttu-id="eb93f-313">Puede usar el <xref:System.Net.Sockets.Socket.ExclusiveAddressUse%2A> propiedad para evitar varios agentes de escucha escuche en un puerto concreto.</span><span class="sxs-lookup"><span data-stu-id="eb93f-313">You can use the <xref:System.Net.Sockets.Socket.ExclusiveAddressUse%2A> property to prevent multiple listeners from listening to a specific port.</span></span>  
  
 <span data-ttu-id="eb93f-314">Establezca esta propiedad antes de llamar a <xref:System.Net.Sockets.TcpListener.Start%2A>, o llamar a la <xref:System.Net.Sockets.TcpListener.Stop%2A> método y, a continuación, establecer esta propiedad.</span><span class="sxs-lookup"><span data-stu-id="eb93f-314">Set this property before calling <xref:System.Net.Sockets.TcpListener.Start%2A>, or call the <xref:System.Net.Sockets.TcpListener.Stop%2A> method and then set this property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb93f-315">En el ejemplo de código siguiente se obtiene y establece el <xref:System.Net.Sockets.TcpListener.ExclusiveAddressUse%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="eb93f-315">The following code example gets and sets the <xref:System.Net.Sockets.TcpListener.ExclusiveAddressUse%2A> property.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpListener1#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/cpp/tcpserver.cpp#2)]
 [!code-csharp[System.Net.Sockets.TcpListener1#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/CS/tcpserver.cs#2)]
 [!code-vb[System.Net.Sockets.TcpListener1#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/VB/tcpserver.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="eb93f-316">
            <see cref="T:System.Net.Sockets.TcpListener" /> se ha iniciado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93f-316">The <see cref="T:System.Net.Sockets.TcpListener" /> has been started.</span>
          </span>
          <span data-ttu-id="eb93f-317">Llame al método <see cref="M:System.Net.Sockets.TcpListener.Stop" /> y, a continuación, establezca la propiedad <see cref="P:System.Net.Sockets.Socket.ExclusiveAddressUse" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93f-317">Call the <see cref="M:System.Net.Sockets.TcpListener.Stop" /> method and then set the <see cref="P:System.Net.Sockets.Socket.ExclusiveAddressUse" /> property.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="eb93f-318">Se ha producido un error al intentar obtener acceso al socket subyacente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93f-318">An error occurred when attempting to access the underlying socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="eb93f-319">El objeto <see cref="T:System.Net.Sockets.Socket" /> subyacente se ha cerrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93f-319">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~TcpListener ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!TcpListener ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="tcpListener.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="eb93f-320">Libera los recursos que usa la clase <see cref="T:System.Net.Sockets.TcpListener" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93f-320">Frees resources used by the <see cref="T:System.Net.Sockets.TcpListener" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="eb93f-321">El <xref:System.Net.Sockets.TcpListener> clase finalizador libera los recursos asociados con el <xref:System.Net.Sockets.TcpListener> instancia.</span><span class="sxs-lookup"><span data-stu-id="eb93f-321">The <xref:System.Net.Sockets.TcpListener> class finalizer free resources associated with the <xref:System.Net.Sockets.TcpListener> instance.</span></span>

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalEndpoint">
      <MemberSignature Language="C#" Value="public System.Net.EndPoint LocalEndpoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.EndPoint LocalEndpoint" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpListener.LocalEndpoint" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LocalEndpoint As EndPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::EndPoint ^ LocalEndpoint { System::Net::EndPoint ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LocalEndpoint : System.Net.EndPoint" Usage="System.Net.Sockets.TcpListener.LocalEndpoint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.EndPoint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb93f-322">Obtiene el objeto <see cref="T:System.Net.EndPoint" /> subyacente del objeto <see cref="T:System.Net.Sockets.TcpListener" /> actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93f-322">Gets the underlying <see cref="T:System.Net.EndPoint" /> of the current <see cref="T:System.Net.Sockets.TcpListener" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eb93f-323">Objeto <see cref="T:System.Net.EndPoint" /> al que está enlazado el <see cref="T:System.Net.Sockets.Socket" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93f-323">The <see cref="T:System.Net.EndPoint" /> to which the <see cref="T:System.Net.Sockets.Socket" /> is bound.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb93f-324">Puede usar el <xref:System.Net.Sockets.TcpListener.LocalEndpoint%2A> propiedad para identificar el número de puerto y la interfaz de red local que se usa para escuchar las solicitudes de conexión de cliente entrantes, una vez que se ha realizado una conexión de socket.</span><span class="sxs-lookup"><span data-stu-id="eb93f-324">You can use the <xref:System.Net.Sockets.TcpListener.LocalEndpoint%2A> property to identify the local network interface and port number being used to listen for incoming client connection requests, after a socket connection has been made.</span></span> <span data-ttu-id="eb93f-325">Primero debe convertir esto <xref:System.Net.EndPoint> a un <xref:System.Net.IPEndPoint>.</span><span class="sxs-lookup"><span data-stu-id="eb93f-325">You must first cast this <xref:System.Net.EndPoint> to an <xref:System.Net.IPEndPoint>.</span></span> <span data-ttu-id="eb93f-326">A continuación, puede llamar a la <xref:System.Net.IPEndPoint.Address%2A?displayProperty=nameWithType> propiedad para recuperar la dirección IP local y el <xref:System.Net.IPEndPoint.Port%2A?displayProperty=nameWithType> propiedad para recuperar el número de puerto local.</span><span class="sxs-lookup"><span data-stu-id="eb93f-326">You can then call the <xref:System.Net.IPEndPoint.Address%2A?displayProperty=nameWithType> property to retrieve the local IP address, and the <xref:System.Net.IPEndPoint.Port%2A?displayProperty=nameWithType> property to retrieve the local port number.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb93f-327">En el ejemplo de código siguiente se muestra el número de puerto y la dirección IP local en el que el <xref:System.Net.Sockets.TcpListener> está atendiendo las solicitudes de conexión entrante.</span><span class="sxs-lookup"><span data-stu-id="eb93f-327">The following code example displays the local IP address and port number on which the <xref:System.Net.Sockets.TcpListener> is listening for incoming connection requests.</span></span>  
  
 [!code-cpp[TcpListener_Pending_LocalEndPoint#1](~/samples/snippets/cpp/VS_Snippets_Remoting/TcpListener_Pending_LocalEndPoint/CPP/source.cpp#1)]
 [!code-csharp[TcpListener_Pending_LocalEndPoint#1](~/samples/snippets/csharp/VS_Snippets_Remoting/TcpListener_Pending_LocalEndPoint/CS/source.cs#1)]
 [!code-vb[TcpListener_Pending_LocalEndPoint#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/TcpListener_Pending_LocalEndPoint/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" />
        <altmember cref="T:System.Net.EndPoint" />
      </Docs>
    </Member>
    <Member MemberName="Pending">
      <MemberSignature Language="C#" Value="public bool Pending ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Pending() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.Pending" />
      <MemberSignature Language="VB.NET" Value="Public Function Pending () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Pending();" />
      <MemberSignature Language="F#" Value="member this.Pending : unit -&gt; bool" Usage="tcpListener.Pending " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="eb93f-328">Determina si existen solicitudes de conexión pendientes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93f-328">Determines if there are pending connection requests.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eb93f-329">Es <see langword="true" /> si hay conexiones pendientes; en caso contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93f-329">
              <see langword="true" /> if connections are pending; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb93f-330">Este método no sea de bloqueo determina si hay solicitudes de conexión pendientes.</span><span class="sxs-lookup"><span data-stu-id="eb93f-330">This non-blocking method determines if there are any pending connection requests.</span></span> <span data-ttu-id="eb93f-331">Dado que el <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> y <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> métodos bloquean la ejecución hasta que el <xref:System.Net.Sockets.TcpListener.Start%2A> método ha puesto en cola una solicitud de conexión entrante, el <xref:System.Net.Sockets.TcpListener.Pending%2A> método puede utilizarse para determinar si las conexiones están disponibles antes de aceptarlos.</span><span class="sxs-lookup"><span data-stu-id="eb93f-331">Because the <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> and <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> methods block execution until the <xref:System.Net.Sockets.TcpListener.Start%2A> method has queued an incoming connection request, the <xref:System.Net.Sockets.TcpListener.Pending%2A> method can be used to determine if connections are available before attempting to accept them.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb93f-332">El siguiente código de ejemplo se comprueba el <xref:System.Net.Sockets.TcpListener.Pending%2A> método.</span><span class="sxs-lookup"><span data-stu-id="eb93f-332">The following code example checks the <xref:System.Net.Sockets.TcpListener.Pending%2A> method.</span></span> <span data-ttu-id="eb93f-333">Si una solicitud de conexión está esperando a ser aceptados, a continuación, una llamada a la <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> se realiza el método.</span><span class="sxs-lookup"><span data-stu-id="eb93f-333">If a connection request is waiting to be accepted, then a call to the <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> method is made.</span></span>  
  
 [!code-cpp[TcpListener_Pending_LocalEndPoint#1](~/samples/snippets/cpp/VS_Snippets_Remoting/TcpListener_Pending_LocalEndPoint/CPP/source.cpp#1)]
 [!code-csharp[TcpListener_Pending_LocalEndPoint#1](~/samples/snippets/csharp/VS_Snippets_Remoting/TcpListener_Pending_LocalEndPoint/CS/source.cs#1)]
 [!code-vb[TcpListener_Pending_LocalEndPoint#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/TcpListener_Pending_LocalEndPoint/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="eb93f-334">El agente de escucha no se ha iniciado con una llamada a <see cref="M:System.Net.Sockets.TcpListener.Start" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93f-334">The listener has not been started with a call to <see cref="M:System.Net.Sockets.TcpListener.Start" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.TcpListener.Start" />
        <altmember cref="M:System.Net.Sockets.TcpListener.AcceptSocket" />
        <altmember cref="M:System.Net.Sockets.TcpListener.AcceptTcpClient" />
      </Docs>
    </Member>
    <Member MemberName="Server">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.Socket Server { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Sockets.Socket Server" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpListener.Server" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Server As Socket" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Sockets::Socket ^ Server { System::Net::Sockets::Socket ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Server : System.Net.Sockets.Socket" Usage="System.Net.Sockets.TcpListener.Server" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.Socket</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eb93f-335">Obtiene el objeto de red <see cref="T:System.Net.Sockets.Socket" /> subyacente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93f-335">Gets the underlying network <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eb93f-336">Objeto <see cref="T:System.Net.Sockets.Socket" /> subyacente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93f-336">The underlying <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb93f-337"><xref:System.Net.Sockets.TcpListener> crea un <xref:System.Net.Sockets.Socket> para escuchar las solicitudes de conexión de cliente entrantes.</span><span class="sxs-lookup"><span data-stu-id="eb93f-337"><xref:System.Net.Sockets.TcpListener> creates a <xref:System.Net.Sockets.Socket> to listen for incoming client connection requests.</span></span> <span data-ttu-id="eb93f-338">Las clases derivadas de <xref:System.Net.Sockets.TcpListener> puede utilizar esta propiedad para obtener este <xref:System.Net.Sockets.Socket>.</span><span class="sxs-lookup"><span data-stu-id="eb93f-338">Classes deriving from <xref:System.Net.Sockets.TcpListener> can use this property to get this <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="eb93f-339">Usar subyacente <xref:System.Net.Sockets.Socket> devuelto por la <xref:System.Net.Sockets.TcpListener.Server%2A> propiedad si necesita tener acceso a más allá de eso que <xref:System.Net.Sockets.TcpListener> proporciona.</span><span class="sxs-lookup"><span data-stu-id="eb93f-339">Use the underlying <xref:System.Net.Sockets.Socket> returned by the <xref:System.Net.Sockets.TcpListener.Server%2A> property if you require access beyond that which <xref:System.Net.Sockets.TcpListener> provides.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="eb93f-340">El <xref:System.Net.Sockets.TcpListener.Server%2A> propiedad sólo devuelve el <xref:System.Net.Sockets.Socket> usa para escuchar las solicitudes de conexión de cliente entrantes.</span><span class="sxs-lookup"><span data-stu-id="eb93f-340">The <xref:System.Net.Sockets.TcpListener.Server%2A> property only returns the <xref:System.Net.Sockets.Socket> used to listen for incoming client connection requests.</span></span> <span data-ttu-id="eb93f-341">Use la <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> método para aceptar una solicitud de conexión pendiente y obtener un <xref:System.Net.Sockets.Socket> para enviar y recibir datos.</span><span class="sxs-lookup"><span data-stu-id="eb93f-341">Use the <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> method to accept a pending connection request and obtain a <xref:System.Net.Sockets.Socket> for sending and receiving data.</span></span> <span data-ttu-id="eb93f-342">También puede usar el <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> método para aceptar una solicitud de conexión pendiente y obtener un <xref:System.Net.Sockets.TcpClient> para enviar y recibir datos.</span><span class="sxs-lookup"><span data-stu-id="eb93f-342">You can also use the <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> method to accept a pending connection request and obtain a <xref:System.Net.Sockets.TcpClient> for sending and receiving data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb93f-343">En el ejemplo de código siguiente se muestra el uso de la <xref:System.Net.Sockets.TcpListener.Server%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="eb93f-343">The following code example demonstrates the use of the <xref:System.Net.Sockets.TcpListener.Server%2A> property.</span></span> <span data-ttu-id="eb93f-344">Subyacente <xref:System.Net.Sockets.Socket> se recupera y <xref:System.Net.Sockets.SocketOptionName.Linger> <xref:System.Net.Sockets.Socket> opción está configurada para el tiempo de espera tras 10 segundos si los datos permanecen en el búfer de red después de cerrar la conexión.</span><span class="sxs-lookup"><span data-stu-id="eb93f-344">The underlying <xref:System.Net.Sockets.Socket> is retrieved and the <xref:System.Net.Sockets.SocketOptionName.Linger><xref:System.Net.Sockets.Socket> option is configured to time out after 10 seconds if data still remains in the network buffer after the connection is closed.</span></span>  
  
 [!code-csharp[TcpListenerProtectedMembers1#1](~/samples/snippets/csharp/VS_Snippets_Remoting/TcpListenerProtectedMembers1/CS/source.cs#1)]
 [!code-vb[TcpListenerProtectedMembers1#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/TcpListenerProtectedMembers1/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Sockets.Socket" />
        <altmember cref="M:System.Net.Sockets.TcpListener.AcceptSocket" />
        <altmember cref="M:System.Net.Sockets.TcpListener.AcceptTcpClient" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Start">
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="eb93f-345">Comienza la escucha de solicitudes de conexión entrantes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93f-345">Starts listening for incoming connection requests.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.Start" />
      <MemberSignature Language="VB.NET" Value="Public Sub Start ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Start();" />
      <MemberSignature Language="F#" Value="member this.Start : unit -&gt; unit" Usage="tcpListener.Start " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="eb93f-346">Comienza la escucha de solicitudes de conexión entrantes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93f-346">Starts listening for incoming connection requests.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb93f-347">El <xref:System.Net.Sockets.TcpListener.Start%2A> método inicializa subyacente <xref:System.Net.Sockets.Socket>, lo enlaza a un extremo local y escucha los intentos de conexión entrante.</span><span class="sxs-lookup"><span data-stu-id="eb93f-347">The <xref:System.Net.Sockets.TcpListener.Start%2A> method initializes the underlying <xref:System.Net.Sockets.Socket>, binds it to a local endpoint, and listens for incoming connection attempts.</span></span> <span data-ttu-id="eb93f-348">Si se recibe una solicitud de conexión, el <xref:System.Net.Sockets.TcpListener.Start%2A> método poner en cola la solicitud y continuará escuchando las solicitudes adicionales hasta que llame a la <xref:System.Net.Sockets.TcpListener.Stop%2A> método.</span><span class="sxs-lookup"><span data-stu-id="eb93f-348">If a connection request is received, the <xref:System.Net.Sockets.TcpListener.Start%2A> method will queue the request and continue listening for additional requests until you call the <xref:System.Net.Sockets.TcpListener.Stop%2A> method.</span></span> <span data-ttu-id="eb93f-349">Si <xref:System.Net.Sockets.TcpListener> recibe una solicitud de conexión después de que ha puesto en cola el número máximo de conexiones, producirá un <xref:System.Net.Sockets.SocketException> en el cliente.</span><span class="sxs-lookup"><span data-stu-id="eb93f-349">If <xref:System.Net.Sockets.TcpListener> receives a connection request after it has already queued the maximum number of connections, it will throw a <xref:System.Net.Sockets.SocketException> on the client.</span></span>  
  
 <span data-ttu-id="eb93f-350">Para quitar una conexión de la cola de conexiones entrantes, utilice el <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> método o la <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> método.</span><span class="sxs-lookup"><span data-stu-id="eb93f-350">To remove a connection from the incoming connection queue, use either the <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> method or the <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> method.</span></span> <span data-ttu-id="eb93f-351">El <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> método quitar una conexión de la cola y devolverá un <xref:System.Net.Sockets.TcpClient> que puede usar para enviar y recibir datos.</span><span class="sxs-lookup"><span data-stu-id="eb93f-351">The <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> method will remove a connection from the queue and return a <xref:System.Net.Sockets.TcpClient> that you can use to send and receive data.</span></span> <span data-ttu-id="eb93f-352">El <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> método devolverá un <xref:System.Net.Sockets.Socket> que puede usar para hacer lo mismo.</span><span class="sxs-lookup"><span data-stu-id="eb93f-352">The <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> method will return a <xref:System.Net.Sockets.Socket> that you can use to do the same.</span></span> <span data-ttu-id="eb93f-353">Si la aplicación sólo requiere E/S sincrónica, utilice <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A>.</span><span class="sxs-lookup"><span data-stu-id="eb93f-353">If your application only requires synchronous I/O, use <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A>.</span></span> <span data-ttu-id="eb93f-354">Para obtener más control de comportamiento, utilice <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A>.</span><span class="sxs-lookup"><span data-stu-id="eb93f-354">For more detailed behavioral control, use <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A>.</span></span> <span data-ttu-id="eb93f-355">Ambos métodos se bloquean hasta que esté disponible en la cola una solicitud de conexión.</span><span class="sxs-lookup"><span data-stu-id="eb93f-355">Both of these methods block until a connection request is available in the queue.</span></span>  
  
 <span data-ttu-id="eb93f-356">Use la <xref:System.Net.Sockets.TcpListener.Stop%2A> método para cerrar el <xref:System.Net.Sockets.TcpListener> y detener la escucha.</span><span class="sxs-lookup"><span data-stu-id="eb93f-356">Use the <xref:System.Net.Sockets.TcpListener.Stop%2A> method to close the <xref:System.Net.Sockets.TcpListener> and stop listening.</span></span> <span data-ttu-id="eb93f-357">Usted es responsable de cerrar las conexiones aceptadas por separado.</span><span class="sxs-lookup"><span data-stu-id="eb93f-357">You are responsible for closing your accepted connections separately.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="eb93f-358">Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación.</span><span class="sxs-lookup"><span data-stu-id="eb93f-358">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="eb93f-359">Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="eb93f-359">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb93f-360">En el ejemplo de código siguiente se muestra cómo <xref:System.Net.Sockets.TcpListener.Start%2A> se usa para realizar escuchas para los intentos de conexión de cliente entrantes.</span><span class="sxs-lookup"><span data-stu-id="eb93f-360">The following code example demonstrates how <xref:System.Net.Sockets.TcpListener.Start%2A> is used to listen for incoming client connection attempts.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpListener1#3](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/cpp/tcpserver.cpp#3)]
 [!code-csharp[System.Net.Sockets.TcpListener1#3](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/CS/tcpserver.cs#3)]
 [!code-vb[System.Net.Sockets.TcpListener1#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/VB/tcpserver.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="eb93f-361">Utilice la propiedad <see cref="P:System.Net.Sockets.SocketException.ErrorCode" /> para obtener el código de error específico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93f-361">Use the <see cref="P:System.Net.Sockets.SocketException.ErrorCode" /> property to obtain the specific error code.</span>
          </span>
          <span data-ttu-id="eb93f-362">Cuando obtenga este código, puede ver la documentación de <see href="/windows/desktop/winsock/windows-sockets-error-codes-2">códigos de error de la API de Windows Sockets, versión 2</see>, para ver una descripción detallada del error.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93f-362">When you have obtained this code, you can refer to the <see href="/windows/desktop/winsock/windows-sockets-error-codes-2">Windows Sockets version 2 API error code</see> documentation for a detailed description of the error.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" />
        <altmember cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" />
        <altmember cref="M:System.Net.Sockets.TcpListener.AcceptTcpClient" />
        <altmember cref="M:System.Net.Sockets.TcpListener.Stop" />
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public void Start (int backlog);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Start(int32 backlog) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.Start(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Start (backlog As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Start(int backlog);" />
      <MemberSignature Language="F#" Value="member this.Start : int -&gt; unit" Usage="tcpListener.Start backlog" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="backlog" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="backlog">
          <span data-ttu-id="eb93f-363">Longitud máxima de la cola de conexiones pendientes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93f-363">The maximum length of the pending connections queue.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb93f-364">Comienza la escucha de solicitudes de conexión entrantes en un número máximo de conexión pendiente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93f-364">Starts listening for incoming connection requests with a maximum number of pending connection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb93f-365">El <xref:System.Net.Sockets.TcpListener.Start%2A> método inicializa subyacente <xref:System.Net.Sockets.Socket>, lo enlaza a un extremo local y escucha los intentos de conexión entrante.</span><span class="sxs-lookup"><span data-stu-id="eb93f-365">The <xref:System.Net.Sockets.TcpListener.Start%2A> method initializes the underlying <xref:System.Net.Sockets.Socket>, binds it to a local endpoint, and listens for incoming connection attempts.</span></span> <span data-ttu-id="eb93f-366">Si se recibe una solicitud de conexión, <xref:System.Net.Sockets.TcpListener.Start%2A> proporcionará poner en cola la solicitud y continuará escuchando las solicitudes adicionales hasta que llame a la <xref:System.Net.Sockets.TcpListener.Stop%2A> método.</span><span class="sxs-lookup"><span data-stu-id="eb93f-366">If a connection request is received, <xref:System.Net.Sockets.TcpListener.Start%2A> will queue the request and continue listening for additional requests until you call the <xref:System.Net.Sockets.TcpListener.Stop%2A> method.</span></span> <span data-ttu-id="eb93f-367">Si <xref:System.Net.Sockets.TcpListener> recibe una solicitud de conexión después de que ya ha puesto en cola el número máximo de conexiones se producirá un <xref:System.Net.Sockets.SocketException> en el cliente.</span><span class="sxs-lookup"><span data-stu-id="eb93f-367">If <xref:System.Net.Sockets.TcpListener> receives a connection request after it has already queued the maximum number of connections it will throw a <xref:System.Net.Sockets.SocketException> on the client.</span></span>  
  
 <span data-ttu-id="eb93f-368">Para quitar una conexión de la cola de conexiones entrantes, utilice el <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> método o la <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> método.</span><span class="sxs-lookup"><span data-stu-id="eb93f-368">To remove a connection from the incoming connection queue, use either the <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> method or the <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> method.</span></span> <span data-ttu-id="eb93f-369">El <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> método quitar una conexión de la cola y devolverá un <xref:System.Net.Sockets.TcpClient> que puede usar para enviar y recibir datos.</span><span class="sxs-lookup"><span data-stu-id="eb93f-369">The <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> method will remove a connection from the queue and return a <xref:System.Net.Sockets.TcpClient> that you can use to send and receive data.</span></span> <span data-ttu-id="eb93f-370">El <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> método devolverá un <xref:System.Net.Sockets.Socket> que puede usar para hacer lo mismo.</span><span class="sxs-lookup"><span data-stu-id="eb93f-370">The <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> method will return a <xref:System.Net.Sockets.Socket> that you can use to do the same.</span></span> <span data-ttu-id="eb93f-371">Si la aplicación sólo requiere E/S sincrónica, utilice el <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A>.</span><span class="sxs-lookup"><span data-stu-id="eb93f-371">If your application only requires synchronous I/O, use the <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A>.</span></span> <span data-ttu-id="eb93f-372">Para obtener más control de comportamiento, use <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> método.</span><span class="sxs-lookup"><span data-stu-id="eb93f-372">For more detailed behavioral control, use <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> method.</span></span> <span data-ttu-id="eb93f-373">Ambos métodos se bloquean hasta que esté disponible en la cola una solicitud de conexión.</span><span class="sxs-lookup"><span data-stu-id="eb93f-373">Both of these methods block until a connection request is available in the queue.</span></span>  
  
 <span data-ttu-id="eb93f-374">Use la <xref:System.Net.Sockets.TcpListener.Stop%2A> método para cerrar el <xref:System.Net.Sockets.TcpListener> y detener la escucha.</span><span class="sxs-lookup"><span data-stu-id="eb93f-374">Use the <xref:System.Net.Sockets.TcpListener.Stop%2A> method to close the <xref:System.Net.Sockets.TcpListener> and stop listening.</span></span> <span data-ttu-id="eb93f-375">Usted es responsable de cerrar las conexiones aceptadas por separado.</span><span class="sxs-lookup"><span data-stu-id="eb93f-375">You are responsible for closing your accepted connections separately.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="eb93f-376">Use la <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> propiedad para obtener el código de error específico y consulte la documentación de códigos de error de Windows Sockets versión 2 API en MSDN library en la [ http://msdn.microsoft.com/library/ ](https://msdn.microsoft.com/library/) para obtener una descripción detallada del error.</span><span class="sxs-lookup"><span data-stu-id="eb93f-376">Use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code and refer to the Windows Sockets version 2 API error code documentation in the MSDN library at [http://msdn.microsoft.com/library/](https://msdn.microsoft.com/library/) for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="eb93f-377">Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación.</span><span class="sxs-lookup"><span data-stu-id="eb93f-377">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="eb93f-378">Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="eb93f-378">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb93f-379">En el ejemplo de código siguiente se muestra cómo <xref:System.Net.Sockets.TcpListener.Start%2A> se usa para realizar escuchas para los intentos de conexión de cliente entrantes.</span><span class="sxs-lookup"><span data-stu-id="eb93f-379">The following code example demonstrates how <xref:System.Net.Sockets.TcpListener.Start%2A> is used to listen for incoming client connection attempts.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpListener1#3](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/cpp/tcpserver.cpp#3)]
 [!code-csharp[System.Net.Sockets.TcpListener1#3](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/CS/tcpserver.cs#3)]
 [!code-vb[System.Net.Sockets.TcpListener1#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/VB/tcpserver.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="eb93f-380">Se ha producido un error al obtener acceso al socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93f-380">An error occurred while accessing the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="eb93f-381">El parámetro <paramref name="backlog" /> es menor que cero o supera el número máximo de conexiones permitidas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93f-381">The <paramref name="backlog" /> parameter is less than zero or exceeds the maximum number of permitted connections.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="eb93f-382">El <see cref="T:System.Net.Sockets.Socket" /> es nulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93f-382">The underlying <see cref="T:System.Net.Sockets.Socket" /> is null.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" />
        <altmember cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" />
        <altmember cref="M:System.Net.Sockets.TcpListener.AcceptTcpClient" />
        <altmember cref="M:System.Net.Sockets.TcpListener.AcceptSocket" />
        <altmember cref="M:System.Net.Sockets.TcpListener.Stop" />
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberSignature Language="F#" Value="member this.Stop : unit -&gt; unit" Usage="tcpListener.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="eb93f-383">Cierra el agente de escucha.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93f-383">Closes the listener.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb93f-384"><xref:System.Net.Sockets.TcpListener.Stop%2A> Cierra el agente de escucha.</span><span class="sxs-lookup"><span data-stu-id="eb93f-384"><xref:System.Net.Sockets.TcpListener.Stop%2A> closes the listener.</span></span> <span data-ttu-id="eb93f-385">Se perderán las solicitudes de conexión no aceptado en la cola.</span><span class="sxs-lookup"><span data-stu-id="eb93f-385">Any unaccepted connection requests in the queue will be lost.</span></span> <span data-ttu-id="eb93f-386">Hosts remotos, esperando una conexión que se acepte producirá un <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="eb93f-386">Remote hosts waiting for a connection to be accepted will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="eb93f-387">Usted es responsable de cerrar las conexiones aceptadas por separado.</span><span class="sxs-lookup"><span data-stu-id="eb93f-387">You are responsible for closing your accepted connections separately.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="eb93f-388">Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación.</span><span class="sxs-lookup"><span data-stu-id="eb93f-388">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="eb93f-389">Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="eb93f-389">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb93f-390">En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Net.Sockets.TcpListener.Stop%2A> método para cerrar subyacente <xref:System.Net.Sockets.Socket>.</span><span class="sxs-lookup"><span data-stu-id="eb93f-390">The following code example demonstrates using the <xref:System.Net.Sockets.TcpListener.Stop%2A> method to close the underlying <xref:System.Net.Sockets.Socket>.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpListener#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener/CPP/tcpserver.cpp#1)]
 [!code-csharp[System.Net.Sockets.TcpListener#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener/CS/tcpserver.cs#1)]
 [!code-vb[System.Net.Sockets.TcpListener#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.TcpListener/VB/tcpserver.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="eb93f-391">Utilice la propiedad <see cref="P:System.Net.Sockets.SocketException.ErrorCode" /> para obtener el código de error específico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93f-391">Use the <see cref="P:System.Net.Sockets.SocketException.ErrorCode" /> property to obtain the specific error code.</span>
          </span>
          <span data-ttu-id="eb93f-392">Cuando obtenga este código, puede ver la documentación de <see href="/windows/desktop/winsock/windows-sockets-error-codes-2">códigos de error de la API de Windows Sockets, versión 2</see>, para ver una descripción detallada del error.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93f-392">When you have obtained this code, you can refer to the <see href="/windows/desktop/winsock/windows-sockets-error-codes-2">Windows Sockets version 2 API error code</see> documentation for a detailed description of the error.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <para>
            <span data-ttu-id="eb93f-393">El <see cref="M:System.Net.Sockets.TcpListener.Stop" /> método también cierra subyacente <see cref="T:System.Net.Sockets.Socket" />y crea un nuevo <see cref="T:System.Net.Sockets.Socket" /> para el <see cref="T:System.Net.Sockets.TcpListener" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="eb93f-393">The <see cref="M:System.Net.Sockets.TcpListener.Stop" /> method also closes the underlying <see cref="T:System.Net.Sockets.Socket" />, and creates a new <see cref="T:System.Net.Sockets.Socket" /> for the <see cref="T:System.Net.Sockets.TcpListener" />.</span>
            </span>
            <span data-ttu-id="eb93f-394">Si establece las propiedades en subyacente <see cref="T:System.Net.Sockets.Socket" /> antes de llamar a la <see cref="M:System.Net.Sockets.TcpListener.Stop" /> método, esas propiedades no se llevarán a la nueva <see cref="T:System.Net.Sockets.Socket" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="eb93f-394">If you set any properties on the underlying <see cref="T:System.Net.Sockets.Socket" /> prior to calling the <see cref="M:System.Net.Sockets.TcpListener.Stop" /> method, those properties will not carry over to the new <see cref="T:System.Net.Sockets.Socket" />.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.Net.Sockets.Socket.Close" />
      </Docs>
    </Member>
  </Members>
</Type>
<Type Name="SymbolResolver" FullName="System.Activities.Hosting.SymbolResolver">
  <Metadata><Meta Name="ms.openlocfilehash" Value="007ad3ba01a856970035bea8cc726936e7325bdf" /><Meta Name="ms.sourcegitcommit" Value="723b8a6d92667ba86fcda96190bad3b4a03283b3" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="11/09/2018" /><Meta Name="ms.locfileid" Value="51312242" /></Metadata><TypeSignature Language="C#" Value="public sealed class SymbolResolver : System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;string,object&gt;&gt;, System.Collections.Generic.IDictionary&lt;string,object&gt;, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,object&gt;&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SymbolResolver extends System.Object implements class System.Collections.Generic.ICollection`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt;&gt;, class System.Collections.Generic.IDictionary`2&lt;string, object&gt;, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt;&gt;, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Hosting.SymbolResolver" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SymbolResolver&#xA;Implements ICollection(Of KeyValuePair(Of String, Object)), IDictionary(Of String, Object), IEnumerable(Of KeyValuePair(Of String, Object))" />
  <TypeSignature Language="C++ CLI" Value="public ref class SymbolResolver sealed : System::Collections::Generic::ICollection&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt;&gt;, System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt;, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt;&gt;" />
  <TypeSignature Language="F#" Value="type SymbolResolver = class&#xA;    interface IDictionary&lt;string, obj&gt;&#xA;    interface ICollection&lt;KeyValuePair&lt;string, obj&gt;&gt;&#xA;    interface seq&lt;KeyValuePair&lt;string, obj&gt;&gt;&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="b4f08-101"><see cref="T:System.Activities.Hosting.SymbolResolver" /> es una extensión para proporcionar un entorno <see cref="T:System.Activities.LocationReferenceEnvironment" /> de host que contiene objetos que se pueden desreferenciar mediante un nombre de cadena.</span><span class="sxs-lookup"><span data-stu-id="b4f08-101"><see cref="T:System.Activities.Hosting.SymbolResolver" /> is an extension for providing a host <see cref="T:System.Activities.LocationReferenceEnvironment" /> containing objects that can be dereferenced by a string name.</span></span>  <span data-ttu-id="b4f08-102">Los valores proporcionados mediante <see cref="T:System.Activities.Hosting.SymbolResolver" /> no se conservan.</span><span class="sxs-lookup"><span data-stu-id="b4f08-102">Values provided through a <see cref="T:System.Activities.Hosting.SymbolResolver" /> are not persisted.</span></span>  <span data-ttu-id="b4f08-103">La persistencia de los valores de <see cref="T:System.Activities.Hosting.SymbolResolver" /> es responsabilidad del host.</span><span class="sxs-lookup"><span data-stu-id="b4f08-103">Persistence of <see cref="T:System.Activities.Hosting.SymbolResolver" /> values is a host responsibility.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SymbolResolver ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.SymbolResolver.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SymbolResolver();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b4f08-104">Inicializa una nueva instancia de la clase <see cref="T:System.Activities.Hosting.SymbolResolver" />.</span><span class="sxs-lookup"><span data-stu-id="b4f08-104">Initializes a new instance of the <see cref="T:System.Activities.Hosting.SymbolResolver" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b4f08-105">Agrega una referencia de objeto al diccionario de símbolos organizados por nombre de cadena.</span><span class="sxs-lookup"><span data-stu-id="b4f08-105">Adds an object reference to the dictionary of symbols keyed by string name.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Collections.Generic.KeyValuePair&lt;string,object&gt; item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.SymbolResolver.Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (item As KeyValuePair(Of String, Object))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt; item);" />
      <MemberSignature Language="F#" Value="abstract member Add : System.Collections.Generic.KeyValuePair&lt;string, obj&gt; -&gt; unit&#xA;override this.Add : System.Collections.Generic.KeyValuePair&lt;string, obj&gt; -&gt; unit" Usage="symbolResolver.Add item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="b4f08-106">Símbolo que agregar.</span><span class="sxs-lookup"><span data-stu-id="b4f08-106">The symbol to add.</span></span></param>
        <summary><span data-ttu-id="b4f08-107">Agrega un símbolo utilizando el par clave-valor especificado.</span><span class="sxs-lookup"><span data-stu-id="b4f08-107">Adds a symbol using the specified key/value pair.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (string key, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(string key, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.SymbolResolver.Add(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (key As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(System::String ^ key, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Add : string * obj -&gt; unit&#xA;override this.Add : string * obj -&gt; unit" Usage="symbolResolver.Add (key, value)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IDictionary`2.Add(`0,`1)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="b4f08-108">Nombre del símbolo.</span><span class="sxs-lookup"><span data-stu-id="b4f08-108">The name of the symbol.</span></span></param>
        <param name="value"><span data-ttu-id="b4f08-109">Valor del símbolo al que hacer referencia.</span><span class="sxs-lookup"><span data-stu-id="b4f08-109">The value of the symbol to reference.</span></span></param>
        <summary><span data-ttu-id="b4f08-110">Agrega un símbolo utilizando el nombre y el valor del símbolo especificado.</span><span class="sxs-lookup"><span data-stu-id="b4f08-110">Adds a symbol using the specified symbol name and value.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (string key, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(string key, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.SymbolResolver.Add(System.String,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::String ^ key, Type ^ type);" />
      <MemberSignature Language="F#" Value="member this.Add : string * Type -&gt; unit" Usage="symbolResolver.Add (key, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="b4f08-111">Nombre del símbolo.</span><span class="sxs-lookup"><span data-stu-id="b4f08-111">The name of the symbol.</span></span></param>
        <param name="type"><span data-ttu-id="b4f08-112">Tipo del valor de símbolo.</span><span class="sxs-lookup"><span data-stu-id="b4f08-112">The type of the symbol value.</span></span></param>
        <summary><span data-ttu-id="b4f08-113">Agrega un símbolo utilizando el nombre y el tipo de símbolo especificado.</span><span class="sxs-lookup"><span data-stu-id="b4f08-113">Adds a symbol using the specified symbol name and type.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4f08-114">El símbolo se agrega con el valor predeterminado para el tipo especificado.</span><span class="sxs-lookup"><span data-stu-id="b4f08-114">The symbol is added with the default value for the specified type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (string key, object value, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(string key, object value, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.SymbolResolver.Add(System.String,System.Object,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::String ^ key, System::Object ^ value, Type ^ type);" />
      <MemberSignature Language="F#" Value="member this.Add : string * obj * Type -&gt; unit" Usage="symbolResolver.Add (key, value, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="b4f08-115">Nombre del símbolo.</span><span class="sxs-lookup"><span data-stu-id="b4f08-115">The name of the symbol.</span></span></param>
        <param name="value"><span data-ttu-id="b4f08-116">Valor del símbolo al que hacer referencia.</span><span class="sxs-lookup"><span data-stu-id="b4f08-116">The value of the symbol to reference.</span></span></param>
        <param name="type"><span data-ttu-id="b4f08-117">Tipo del valor de símbolo.</span><span class="sxs-lookup"><span data-stu-id="b4f08-117">The type of the symbol value.</span></span></param>
        <summary><span data-ttu-id="b4f08-118">Agrega un símbolo utilizando el nombre, el valor y el tipo de símbolo especificados.</span><span class="sxs-lookup"><span data-stu-id="b4f08-118">Adds a symbol using the specified symbol name, value, and type.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AsLocationReferenceEnvironment">
      <MemberSignature Language="C#" Value="public System.Activities.LocationReferenceEnvironment AsLocationReferenceEnvironment ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.LocationReferenceEnvironment AsLocationReferenceEnvironment() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.SymbolResolver.AsLocationReferenceEnvironment" />
      <MemberSignature Language="VB.NET" Value="Public Function AsLocationReferenceEnvironment () As LocationReferenceEnvironment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Activities::LocationReferenceEnvironment ^ AsLocationReferenceEnvironment();" />
      <MemberSignature Language="F#" Value="member this.AsLocationReferenceEnvironment : unit -&gt; System.Activities.LocationReferenceEnvironment" Usage="symbolResolver.AsLocationReferenceEnvironment " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.LocationReferenceEnvironment</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b4f08-119">Devuelve una instancia <see cref="T:System.Activities.LocationReferenceEnvironment" /> que permite el acceso a las referencias de los valores de símbolos en <see cref="T:System.Activities.Hosting.SymbolResolver" />representados como objetos <see cref="T:System.Activities.LocationReference" />.</span><span class="sxs-lookup"><span data-stu-id="b4f08-119">Returns a <see cref="T:System.Activities.LocationReferenceEnvironment" /> instance that enables access to references of symbol values in <see cref="T:System.Activities.Hosting.SymbolResolver" /> represented as <see cref="T:System.Activities.LocationReference" /> objects.</span></span></summary>
        <returns><span data-ttu-id="b4f08-120">Referencia de ubicación que permite el acceso a referencias de los valores de símbolos en <see cref="T:System.Activities.Hosting.SymbolResolver" /> representados como objetos <see cref="T:System.Activities.LocationReference" />.</span><span class="sxs-lookup"><span data-stu-id="b4f08-120">A location reference that enables access to references to symbol values in <see cref="T:System.Activities.Hosting.SymbolResolver" /> represented as <see cref="T:System.Activities.LocationReference" /> objects.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.SymbolResolver.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="symbolResolver.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b4f08-121">Quita todos los símbolos de la colección <see cref="T:System.Activities.Hosting.SymbolResolver" />.</span><span class="sxs-lookup"><span data-stu-id="b4f08-121">Removes all symbols from the <see cref="T:System.Activities.Hosting.SymbolResolver" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Collections.Generic.KeyValuePair&lt;string,object&gt; item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.SymbolResolver.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (item As KeyValuePair(Of String, Object)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt; item);" />
      <MemberSignature Language="F#" Value="abstract member Contains : System.Collections.Generic.KeyValuePair&lt;string, obj&gt; -&gt; bool&#xA;override this.Contains : System.Collections.Generic.KeyValuePair&lt;string, obj&gt; -&gt; bool" Usage="symbolResolver.Contains item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="b4f08-122">El símbolo en forma de par clave-valor que se va a buscar en la clase <see cref="T:System.Activities.Hosting.SymbolResolver" />.</span><span class="sxs-lookup"><span data-stu-id="b4f08-122">The symbol as a key/value pair to locate in the <see cref="T:System.Activities.Hosting.SymbolResolver" />.</span></span></param>
        <summary><span data-ttu-id="b4f08-123">Devuelve un valor que indica si <see cref="T:System.Activities.Hosting.SymbolResolver" /> contiene el símbolo especificado.</span><span class="sxs-lookup"><span data-stu-id="b4f08-123">Returns a value that indicates whether the <see cref="T:System.Activities.Hosting.SymbolResolver" /> contains the specified symbol.</span></span></summary>
        <returns><span data-ttu-id="b4f08-124"><see langword="true" /> si el objeto <see cref="T:System.Activities.Hosting.SymbolResolver" /> contiene el símbolo especificado; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b4f08-124"><see langword="true" /> if the <see cref="T:System.Activities.Hosting.SymbolResolver" /> contains the specified symbol; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainsKey">
      <MemberSignature Language="C#" Value="public bool ContainsKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.SymbolResolver.ContainsKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContainsKey (key As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsKey(System::String ^ key);" />
      <MemberSignature Language="F#" Value="abstract member ContainsKey : string -&gt; bool&#xA;override this.ContainsKey : string -&gt; bool" Usage="symbolResolver.ContainsKey key" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IDictionary`2.ContainsKey(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="b4f08-125">Clave del símbolo que se va a buscar.</span><span class="sxs-lookup"><span data-stu-id="b4f08-125">The key of the symbol to locate.</span></span></param>
        <summary><span data-ttu-id="b4f08-126">Devuelve un valor que indica si la clase <see cref="T:System.Activities.Hosting.SymbolResolver" /> contiene un símbolo con la clave especificada.</span><span class="sxs-lookup"><span data-stu-id="b4f08-126">Returns a value that indicates whether the <see cref="T:System.Activities.Hosting.SymbolResolver" /> contains a symbol with the specified key.</span></span></summary>
        <returns><span data-ttu-id="b4f08-127"><see langword="true" /> si <see cref="T:System.Activities.Hosting.SymbolResolver" /> contiene un símbolo con la clave especificada; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b4f08-127"><see langword="true" /> if the <see cref="T:System.Activities.Hosting.SymbolResolver" /> contains a symbol with the specified key; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Collections.Generic.KeyValuePair&lt;string,object&gt;[] array, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt;[] array, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.SymbolResolver.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As KeyValuePair(Of String, Object)(), arrayIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(cli::array &lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt;&gt; ^ array, int arrayIndex);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : System.Collections.Generic.KeyValuePair&lt;string, obj&gt;[] * int -&gt; unit&#xA;override this.CopyTo : System.Collections.Generic.KeyValuePair&lt;string, obj&gt;[] * int -&gt; unit" Usage="symbolResolver.CopyTo (array, arrayIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;[]" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="b4f08-128">Matriz unidimensional de pares clave-valor a la que copiar los símbolos.</span><span class="sxs-lookup"><span data-stu-id="b4f08-128">The one-dimensional array of key/value pairs to copy the symbols to.</span></span> <span data-ttu-id="b4f08-129">La matriz debe tener una indización de base cero.</span><span class="sxs-lookup"><span data-stu-id="b4f08-129">The array must have zero-based indexing.</span></span></param>
        <param name="arrayIndex"><span data-ttu-id="b4f08-130">Índice de base cero de la matriz de destino donde comienza la copia.</span><span class="sxs-lookup"><span data-stu-id="b4f08-130">The zero-based index in the destination array at which copying begins.</span></span></param>
        <summary><span data-ttu-id="b4f08-131">Copia los símbolos de la clase <see cref="T:System.Activities.Hosting.SymbolResolver" /> en una matriz unidimensional existente de pares clave-valor, empezando en el índice de matriz especificado.</span><span class="sxs-lookup"><span data-stu-id="b4f08-131">Copies the symbols in the <see cref="T:System.Activities.Hosting.SymbolResolver" /> to an existing one-dimensional array of key/value pairs, starting at the specified array index.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Hosting.SymbolResolver.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Activities.Hosting.SymbolResolver.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4f08-132">Obtiene el número de símbolos incluidos en la clase <see cref="T:System.Activities.Hosting.SymbolResolver" />.</span><span class="sxs-lookup"><span data-stu-id="b4f08-132">Gets the number of symbols contained in the <see cref="T:System.Activities.Hosting.SymbolResolver" />.</span></span></summary>
        <value><span data-ttu-id="b4f08-133">Número de símbolos incluidos en la clase <see cref="T:System.Activities.Hosting.SymbolResolver" />.</span><span class="sxs-lookup"><span data-stu-id="b4f08-133">The number of symbols contained in the <see cref="T:System.Activities.Hosting.SymbolResolver" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;string,object&gt;&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt;&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.SymbolResolver.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Iterator Overridable NotOverridable Function GetEnumerator () As IEnumerator(Of KeyValuePair(Of String, Object))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerator&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt;&gt; ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;string, obj&gt;&gt;&#xA;override this.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;string, obj&gt;&gt;" Usage="symbolResolver.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Activities.Hosting.SymbolResolver/&lt;GetEnumerator&gt;d__22))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.6">
          <AttributeName>System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Activities.Hosting.SymbolResolver/&lt;GetEnumerator&gt;d__1))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b4f08-134">Devuelve un enumerador que recorre en iteración una colección de pares clave-valor donde las claves son los nombres de símbolo y los valores, los valores de símbolo.</span><span class="sxs-lookup"><span data-stu-id="b4f08-134">Returns an enumerator that iterates through a collection of key/value pairs where the keys are the symbol names and values the symbol values.</span></span></summary>
        <returns><span data-ttu-id="b4f08-135">Enumerador que recorre en iteración una colección de pares clave-valor.</span><span class="sxs-lookup"><span data-stu-id="b4f08-135">An enumerator that iterates through a collection of key/value pairs.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Hosting.SymbolResolver.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Activities.Hosting.SymbolResolver.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4f08-136">Obtiene un valor que indica si el diccionario de símbolos de la clase <see cref="T:System.Activities.Hosting.SymbolResolver" /> es de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="b4f08-136">Gets a value that indicates whether the dictionary of symbols in the <see cref="T:System.Activities.Hosting.SymbolResolver" /> is read-only.</span></span></summary>
        <value><span data-ttu-id="b4f08-137"><see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b4f08-137"><see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4f08-138">Esta propiedad devuelve siempre `false`.</span><span class="sxs-lookup"><span data-stu-id="b4f08-138">This property always returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[string key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Hosting.SymbolResolver.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(key As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ key); void set(System::String ^ key, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : obj with get, set" Usage="System.Activities.Hosting.SymbolResolver.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IDictionary`2.Item(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="b4f08-139">Clave del elemento.</span><span class="sxs-lookup"><span data-stu-id="b4f08-139">The key of the item.</span></span></param>
        <summary><span data-ttu-id="b4f08-140">Obtiene o establece el valor del elemento asociado a la clave especificada.</span><span class="sxs-lookup"><span data-stu-id="b4f08-140">Gets or sets the value of the item associated with the specified key.</span></span></summary>
        <value><span data-ttu-id="b4f08-141">Valor del elemento asociado a la clave especificada.</span><span class="sxs-lookup"><span data-stu-id="b4f08-141">The value of the item associated with the specified key.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;string&gt; Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;string&gt; Keys" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Hosting.SymbolResolver.Keys" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Keys As ICollection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;System::String ^&gt; ^ Keys { System::Collections::Generic::ICollection&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Keys : System.Collections.Generic.ICollection&lt;string&gt;" Usage="System.Activities.Hosting.SymbolResolver.Keys" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IDictionary`2.Keys</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4f08-142">Obtiene una colección de todas las claves de la clase <see cref="T:System.Activities.Hosting.SymbolResolver" />.</span><span class="sxs-lookup"><span data-stu-id="b4f08-142">Gets a collection of all keys in the <see cref="T:System.Activities.Hosting.SymbolResolver" />.</span></span></summary>
        <value><span data-ttu-id="b4f08-143">Colección de todas las claves de la colección <see cref="T:System.Activities.Hosting.SymbolResolver" />.</span><span class="sxs-lookup"><span data-stu-id="b4f08-143">A collection of all keys in the <see cref="T:System.Activities.Hosting.SymbolResolver" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Remove">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b4f08-144">Quita el símbolo especificado de la clase <see cref="T:System.Activities.Hosting.SymbolResolver" />.</span><span class="sxs-lookup"><span data-stu-id="b4f08-144">Removes the specified symbol from the <see cref="T:System.Activities.Hosting.SymbolResolver" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (System.Collections.Generic.KeyValuePair&lt;string,object&gt; item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.SymbolResolver.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (item As KeyValuePair(Of String, Object)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Remove(System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt; item);" />
      <MemberSignature Language="F#" Value="abstract member Remove : System.Collections.Generic.KeyValuePair&lt;string, obj&gt; -&gt; bool&#xA;override this.Remove : System.Collections.Generic.KeyValuePair&lt;string, obj&gt; -&gt; bool" Usage="symbolResolver.Remove item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="b4f08-145">Símbolo que se va a quitar.</span><span class="sxs-lookup"><span data-stu-id="b4f08-145">The symbol to remove.</span></span></param>
        <summary><span data-ttu-id="b4f08-146">Quita el símbolo especificado de la clase <see cref="T:System.Activities.Hosting.SymbolResolver" />.</span><span class="sxs-lookup"><span data-stu-id="b4f08-146">Removes the specified symbol from the <see cref="T:System.Activities.Hosting.SymbolResolver" />.</span></span></summary>
        <returns><span data-ttu-id="b4f08-147"><see langword="true" /> si el símbolo se encuentra y quita correctamente; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b4f08-147"><see langword="true" /> if the symbol is successfully found and removed; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="b4f08-148">Este método devuelve <see langword="false" /> si el símbolo no está presente.</span><span class="sxs-lookup"><span data-stu-id="b4f08-148">This method returns <see langword="false" /> if the symbol is not present.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.SymbolResolver.Remove(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (key As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Remove(System::String ^ key);" />
      <MemberSignature Language="F#" Value="abstract member Remove : string -&gt; bool&#xA;override this.Remove : string -&gt; bool" Usage="symbolResolver.Remove key" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IDictionary`2.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="b4f08-149">Clave del símbolo que se va a quitar.</span><span class="sxs-lookup"><span data-stu-id="b4f08-149">The key of the symbol to remove.</span></span></param>
        <summary><span data-ttu-id="b4f08-150">Quita un símbolo de la clase <see cref="T:System.Activities.Hosting.SymbolResolver" /> utilizando una clave especificada.</span><span class="sxs-lookup"><span data-stu-id="b4f08-150">Removes a symbol from the <see cref="T:System.Activities.Hosting.SymbolResolver" /> using a specified key.</span></span></summary>
        <returns><span data-ttu-id="b4f08-151"><see langword="true" /> si el símbolo se encuentra y quita correctamente; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b4f08-151"><see langword="true" /> if the symbol is successfully found and removed; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="b4f08-152">Este método devuelve <see langword="false" /> si el símbolo no está presente.</span><span class="sxs-lookup"><span data-stu-id="b4f08-152">This method returns <see langword="false" /> if the symbol is not present.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.SymbolResolver.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b4f08-153">Devuelve un enumerador que recorre en iteración una colección de pares clave-valor donde las claves son los nombres de símbolo y los valores, los valores de símbolo.</span><span class="sxs-lookup"><span data-stu-id="b4f08-153">Returns an enumerator that iterates through a collection of key/value pairs where the keys are the symbol names and values the symbol values.</span></span></summary>
        <returns><span data-ttu-id="b4f08-154">Enumerador que recorre en iteración una colección de pares clave-valor.</span><span class="sxs-lookup"><span data-stu-id="b4f08-154">An enumerator that iterates through a collection of key/value pairs.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4f08-155">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="b4f08-155">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="b4f08-156">Solo se puede utilizar cuando la instancia de <xref:System.Activities.Hosting.SymbolResolver> se convierte en una interfaz <xref:System.Collections.IEnumerator>.</span><span class="sxs-lookup"><span data-stu-id="b4f08-156">It can be used only when the <xref:System.Activities.Hosting.SymbolResolver> instance is cast to an <xref:System.Collections.IEnumerator> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetValue">
      <MemberSignature Language="C#" Value="public bool TryGetValue (string key, out object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryGetValue(string key, [out] object&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.SymbolResolver.TryGetValue(System.String,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetValue (key As String, ByRef value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool TryGetValue(System::String ^ key, [Runtime::InteropServices::Out] System::Object ^ % value);" />
      <MemberSignature Language="F#" Value="abstract member TryGetValue : string *  -&gt; bool&#xA;override this.TryGetValue : string *  -&gt; bool" Usage="symbolResolver.TryGetValue (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" RefType="out" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="b4f08-157">Clave del valor que se va a obtener.</span><span class="sxs-lookup"><span data-stu-id="b4f08-157">The key of the value to get.</span></span></param>
        <param name="value"><span data-ttu-id="b4f08-158">Valor asociado a la clave especificada cuando el método devuelve, si se encuentra la clave; de lo contrario, valor predeterminado para el tipo del parámetro del valor.</span><span class="sxs-lookup"><span data-stu-id="b4f08-158">When this method returns, contains the value associated with the specified key, if the key is found; otherwise, the default value for the type of the value parameter.</span></span> <span data-ttu-id="b4f08-159">Este parámetro se pasa sin inicializar.</span><span class="sxs-lookup"><span data-stu-id="b4f08-159">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="b4f08-160">Obtiene el valor asociado a la clave especificada.</span><span class="sxs-lookup"><span data-stu-id="b4f08-160">Gets the value associated with the specified key.</span></span></summary>
        <returns><span data-ttu-id="b4f08-161"><see langword="true" /> si la colección <see cref="T:System.Activities.Hosting.SymbolResolver" /> contiene un elemento con la clave especificada; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b4f08-161"><see langword="true" /> if the <see cref="T:System.Activities.Hosting.SymbolResolver" /> contains an element with the specified key; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Values">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;object&gt; Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;object&gt; Values" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Hosting.SymbolResolver.Values" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Values As ICollection(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;System::Object ^&gt; ^ Values { System::Collections::Generic::ICollection&lt;System::Object ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Values : System.Collections.Generic.ICollection&lt;obj&gt;" Usage="System.Activities.Hosting.SymbolResolver.Values" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IDictionary`2.Values</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4f08-162">Obtiene una colección de todos los valores de la clase <see cref="T:System.Activities.Hosting.SymbolResolver" />.</span><span class="sxs-lookup"><span data-stu-id="b4f08-162">Gets a collection of all values in the <see cref="T:System.Activities.Hosting.SymbolResolver" />.</span></span></summary>
        <value><span data-ttu-id="b4f08-163">Colección de todos los valores de <see cref="T:System.Activities.Hosting.SymbolResolver" />.</span><span class="sxs-lookup"><span data-stu-id="b4f08-163">A collection of all values in the <see cref="T:System.Activities.Hosting.SymbolResolver" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
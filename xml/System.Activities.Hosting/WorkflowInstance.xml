<Type Name="WorkflowInstance" FullName="System.Activities.Hosting.WorkflowInstance">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d3f9599fb8a859242cf5b1b2a1ae36d9717ba339" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57936828" /></Metadata><TypeSignature Language="C#" Value="public abstract class WorkflowInstance" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract WorkflowInstance extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Hosting.WorkflowInstance" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class WorkflowInstance" />
  <TypeSignature Language="C++ CLI" Value="public ref class WorkflowInstance abstract" />
  <TypeSignature Language="F#" Value="type WorkflowInstance = class" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="464b9-101">El objeto <see cref="T:System.Activities.Hosting.WorkflowInstance" /> es un motor ligero de tiempo de ejecución que funciona por instancias para ejecutar un programa de flujo de trabajo.</span><span class="sxs-lookup"><span data-stu-id="464b9-101"><see cref="T:System.Activities.Hosting.WorkflowInstance" /> is a lightweight, per-instance runtime for executing a workflow program.</span></span> <span data-ttu-id="464b9-102">Se puede construir para crear una nueva instancia de flujo de trabajo o a partir de un estado de instancia existente.</span><span class="sxs-lookup"><span data-stu-id="464b9-102">It can be constructed to create a new workflow instance or from existing instance state.</span></span> <span data-ttu-id="464b9-103">Las API que expone el objeto <see cref="T:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl" /> son el conjunto mínimo de controles de tiempo de ejecución a partir de las que se pueden implementar operaciones de nivel más alto.</span><span class="sxs-lookup"><span data-stu-id="464b9-103">The APIs that <see cref="T:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl" /> exposes are the minimal set of runtime controls from which higher level operations can be implemented.</span></span> <span data-ttu-id="464b9-104">Este conjunto de API representa toda la riqueza de funcionalidad del tiempo de ejecución.</span><span class="sxs-lookup"><span data-stu-id="464b9-104">This API set represents the entire breadth of functionality of the runtime.</span></span> <span data-ttu-id="464b9-105"><see cref="T:System.Activities.Hosting.WorkflowInstance" /> es una clase abstracta y se basa en la implementación de un host de sus métodos abstractos para proporcionar funcionalidad de host, como sincronización, persistencia, seguimiento y extensiones.</span><span class="sxs-lookup"><span data-stu-id="464b9-105"><see cref="T:System.Activities.Hosting.WorkflowInstance" /> is an abstract class and relies on a host's implementation of its abstract methods in order to provide host functionality such as synchronization, persistence, tracking, and extensions.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="464b9-106">El objeto <xref:System.Activities.Hosting.WorkflowInstance> tiene un único subproceso y presupone que el host sincroniza todo el acceso al mismo.</span><span class="sxs-lookup"><span data-stu-id="464b9-106"><xref:System.Activities.Hosting.WorkflowInstance> is single threaded and assumes that the host synchronizes all access to it.</span></span> <span data-ttu-id="464b9-107">Si se intenta llamar simultáneamente a varias API, se producirá una excepción <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="464b9-107">An attempt to call multiple APIs simultaneously will result in an <xref:System.InvalidOperationException> being thrown.</span></span>  
  
 <span data-ttu-id="464b9-108">Internamente, un <xref:System.Activities.Hosting.WorkflowInstance> tiene dos estados: Ejecución y en pausa.</span><span class="sxs-lookup"><span data-stu-id="464b9-108">Internally, a <xref:System.Activities.Hosting.WorkflowInstance> has two states: Running and Paused.</span></span> <span data-ttu-id="464b9-109">La única manera de hacer que el tiempo de ejecución pase del estado de pausa al de ejecución es llamando al método <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Run%2A>.</span><span class="sxs-lookup"><span data-stu-id="464b9-109">The only way to cause the runtime to transition from paused to running is to call <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Run%2A>.</span></span> <span data-ttu-id="464b9-110">Todas las acciones (excepto la de Pausa) se pueden realizar mientras el tiempo de ejecución se encuentra en el estado En pausa.</span><span class="sxs-lookup"><span data-stu-id="464b9-110">All actions (except Pause) can only be taken while the runtime is Paused.</span></span> <span data-ttu-id="464b9-111">El tiempo de ejecución volverá espontáneamente al estado En pausa en las siguientes situaciones:</span><span class="sxs-lookup"><span data-stu-id="464b9-111">The runtime will become spontaneously Paused in the following situations:</span></span>  
  
-   <span data-ttu-id="464b9-112">Se ha producido un error grave en el tiempo de ejecución.</span><span class="sxs-lookup"><span data-stu-id="464b9-112">An error fatal to the runtime has occurred.</span></span> <span data-ttu-id="464b9-113">El host se señalará mediante el método <xref:System.Activities.Hosting.WorkflowInstance.OnRequestAbort%2A> (que no señala una transición a En pausa) y, a continuación, lo notificará mediante el método <xref:System.Activities.Hosting.WorkflowInstance.OnNotifyPaused%2A>.</span><span class="sxs-lookup"><span data-stu-id="464b9-113">The host will be signaled through <xref:System.Activities.Hosting.WorkflowInstance.OnRequestAbort%2A> (which does not signal a transition to Paused) and then notified through <xref:System.Activities.Hosting.WorkflowInstance.OnNotifyPaused%2A>.</span></span>  
  
-   <span data-ttu-id="464b9-114">No se detectó una excepción en el flujo de trabajo y se escapó de la raíz.</span><span class="sxs-lookup"><span data-stu-id="464b9-114">An exception in the workflow was uncaught and escaped the root.</span></span> <span data-ttu-id="464b9-115">El host recibirá notificación mediante el método <xref:System.Activities.Hosting.WorkflowInstance.OnNotifyUnhandledException%2A>.</span><span class="sxs-lookup"><span data-stu-id="464b9-115">The host will be notified through the <xref:System.Activities.Hosting.WorkflowInstance.OnNotifyUnhandledException%2A> method.</span></span>  
  
-   <span data-ttu-id="464b9-116">El programador se ha quedado sin elementos de trabajo y ahora está en estado <xref:System.Activities.Hosting.WorkflowInstanceState.Idle>.</span><span class="sxs-lookup"><span data-stu-id="464b9-116">The scheduler has run out of work items and is now <xref:System.Activities.Hosting.WorkflowInstanceState.Idle>.</span></span> <span data-ttu-id="464b9-117">El host recibirá notificación mediante el método <xref:System.Activities.Hosting.WorkflowInstance.OnNotifyPaused%2A>.</span><span class="sxs-lookup"><span data-stu-id="464b9-117">The host will be notified through the <xref:System.Activities.Hosting.WorkflowInstance.OnNotifyPaused%2A> method.</span></span> <span data-ttu-id="464b9-118">Tenga en cuenta que el programador podría haberse quedado sin elementos de trabajo porque la instancia está en estado inactivo o porque la instancia ha finalizado.</span><span class="sxs-lookup"><span data-stu-id="464b9-118">Note that the scheduler could have run out of work items because the instance is idle or because the instance is complete.</span></span> <span data-ttu-id="464b9-119">El valor <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.State%2A> de la propiedad <xref:System.Activities.Hosting.WorkflowInstance.Controller%2A> se puede utilizar para diferenciar entre los dos.</span><span class="sxs-lookup"><span data-stu-id="464b9-119">The <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.State%2A> value of the <xref:System.Activities.Hosting.WorkflowInstance.Controller%2A> property can be used to differentiate between the two.</span></span>  
  
 <span data-ttu-id="464b9-120">El host puede solicitar un cambio del estado En ejecución a En pausa llamando a los métodos <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.RequestPause%2A> o <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.PauseWhenPersistable%2A> de la instancia <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl> devueltos por la propiedad <xref:System.Activities.Hosting.WorkflowInstance.Controller%2A>.</span><span class="sxs-lookup"><span data-stu-id="464b9-120">The host can request a change from Running to Paused by calling the <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.RequestPause%2A> or <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.PauseWhenPersistable%2A> methods of the <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl> instance returned by the <xref:System.Activities.Hosting.WorkflowInstance.Controller%2A> property.</span></span> <span data-ttu-id="464b9-121">No se debe considerar que esta solicitud tenga una respuesta concreta que significa que el host no debería intentar poner en correlación un método OnNotify\* o el método <xref:System.Activities.Hosting.WorkflowInstance.OnRequestAbort%2A> con una llamada específica para poner en estado de pausa.</span><span class="sxs-lookup"><span data-stu-id="464b9-121">This request should not be considered to have a specific response meaning that the host should not attempt to correlate an OnNotify\* or <xref:System.Activities.Hosting.WorkflowInstance.OnRequestAbort%2A> with a specific call to pause.</span></span> <span data-ttu-id="464b9-122">En respuesta a una solicitud de pausa, el runtime puede realizar la transición al estado En pausa y llamar al método <xref:System.Activities.Hosting.WorkflowInstance.OnNotifyPaused%2A> mientras el programador todavía tiene elementos de trabajo pendientes.</span><span class="sxs-lookup"><span data-stu-id="464b9-122">In response to a pause request, the runtime may transition to Paused and call <xref:System.Activities.Hosting.WorkflowInstance.OnNotifyPaused%2A> while the scheduler still has pending work items.</span></span> <span data-ttu-id="464b9-123">El valor <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.State%2A> de la propiedad <xref:System.Activities.Hosting.WorkflowInstance.Controller%2A> se puede utilizar para determinar si el programador ya no tiene trabajo pendiente o si lo interrumpió una solicitud de pausa.</span><span class="sxs-lookup"><span data-stu-id="464b9-123">The <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.State%2A> value of the <xref:System.Activities.Hosting.WorkflowInstance.Controller%2A> property can be used to determine whether the scheduler has no more work or was interrupted by a request to pause.</span></span>  
  
 <span data-ttu-id="464b9-124">El método <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.RequestPause%2A> de la instancia <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl> devuelto por la propiedad <xref:System.Activities.Hosting.WorkflowInstance.Controller%2A> es el único método al que se puede llamar mientras la instancia <xref:System.Activities.Hosting.WorkflowInstance>se encuentra en estado de En ejecución.</span><span class="sxs-lookup"><span data-stu-id="464b9-124">The <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.RequestPause%2A> method of the <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl> instance returned by the <xref:System.Activities.Hosting.WorkflowInstance.Controller%2A> property is the only method which can be called while the <xref:System.Activities.Hosting.WorkflowInstance> is in the Running state.</span></span> <span data-ttu-id="464b9-125">Todos los demás métodos producirán una excepción <xref:System.InvalidOperationException> si se los llama. Teniendo en cuenta las reglas de cómo realiza la instancia <xref:System.Activities.Hosting.WorkflowInstance> la transición desde un estado a otro, la noción pública de En ejecución y En pausa se puede definir de esta manera:</span><span class="sxs-lookup"><span data-stu-id="464b9-125">All other methods will throw an <xref:System.InvalidOperationException> if called.Given the rules for how <xref:System.Activities.Hosting.WorkflowInstance> transitions from one state to another, the public notion of Running and Paused can be defined as follows:</span></span>  
  
-   <span data-ttu-id="464b9-126">Ejecución: el estado entre una llamada a <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Run%2A> y el siguiente método WorkflowInstance.OnNotify\*.</span><span class="sxs-lookup"><span data-stu-id="464b9-126">Running - The state between a call to <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Run%2A> and the next WorkflowInstance.OnNotify\*.</span></span>  
  
-   <span data-ttu-id="464b9-127">En pausa: el estado entre el último método WorkflowInstance.OnNotify\* y la siguiente llamada a <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Run%2A>.</span><span class="sxs-lookup"><span data-stu-id="464b9-127">Paused - The state between the last WorkflowInstance.OnNotify\* and the next call to <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Run%2A>.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="464b9-128">Inicializa una nueva instancia de la clase <see cref="T:System.Activities.Hosting.WorkflowInstance" />.</span><span class="sxs-lookup"><span data-stu-id="464b9-128">Initializes a new instance of the <see cref="T:System.Activities.Hosting.WorkflowInstance" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WorkflowInstance (System.Activities.Activity workflowDefinition);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Activities.Activity workflowDefinition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.#ctor(System.Activities.Activity)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (workflowDefinition As Activity)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WorkflowInstance(System::Activities::Activity ^ workflowDefinition);" />
      <MemberSignature Language="F#" Value="new System.Activities.Hosting.WorkflowInstance : System.Activities.Activity -&gt; System.Activities.Hosting.WorkflowInstance" Usage="new System.Activities.Hosting.WorkflowInstance workflowDefinition" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="workflowDefinition" Type="System.Activities.Activity" />
      </Parameters>
      <Docs>
        <param name="workflowDefinition"><span data-ttu-id="464b9-129">Actividad que define el flujo de trabajo.</span><span class="sxs-lookup"><span data-stu-id="464b9-129">The activity that defines the workflow.</span></span></param>
        <summary><span data-ttu-id="464b9-130">Inicializa una nueva instancia de la clase <see cref="T:System.Activities.Hosting.WorkflowInstance" /> con la definición de flujo de trabajo especificada.</span><span class="sxs-lookup"><span data-stu-id="464b9-130">Initializes a new instance of the <see cref="T:System.Activities.Hosting.WorkflowInstance" /> class with the specified workflow definition.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WorkflowInstance (System.Activities.Activity workflowDefinition, System.Activities.WorkflowIdentity definitionIdentity);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Activities.Activity workflowDefinition, class System.Activities.WorkflowIdentity definitionIdentity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.#ctor(System.Activities.Activity,System.Activities.WorkflowIdentity)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (workflowDefinition As Activity, definitionIdentity As WorkflowIdentity)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WorkflowInstance(System::Activities::Activity ^ workflowDefinition, System::Activities::WorkflowIdentity ^ definitionIdentity);" />
      <MemberSignature Language="F#" Value="new System.Activities.Hosting.WorkflowInstance : System.Activities.Activity * System.Activities.WorkflowIdentity -&gt; System.Activities.Hosting.WorkflowInstance" Usage="new System.Activities.Hosting.WorkflowInstance (workflowDefinition, definitionIdentity)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="workflowDefinition" Type="System.Activities.Activity" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="definitionIdentity" Type="System.Activities.WorkflowIdentity" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="workflowDefinition"><span data-ttu-id="464b9-131">Actividad que define el flujo de trabajo.</span><span class="sxs-lookup"><span data-stu-id="464b9-131">The activity that defines the workflow.</span></span></param>
        <param name="definitionIdentity"><span data-ttu-id="464b9-132">Identidad de la definición.</span><span class="sxs-lookup"><span data-stu-id="464b9-132">The definition identity.</span></span></param>
        <summary><span data-ttu-id="464b9-133">Inicializa una nueva instancia de la clase <see cref="T:System.Activities.Hosting.WorkflowInstance" /> con la definición de flujo de trabajo e identidad de la definición especificados.</span><span class="sxs-lookup"><span data-stu-id="464b9-133">Initializes a new instance of the <see cref="T:System.Activities.Hosting.WorkflowInstance" /> class with the specified workflow definition and definition identity.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginFlushTrackingRecords">
      <MemberSignature Language="C#" Value="protected IAsyncResult BeginFlushTrackingRecords (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.IAsyncResult BeginFlushTrackingRecords(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.BeginFlushTrackingRecords(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function BeginFlushTrackingRecords (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; IAsyncResult ^ BeginFlushTrackingRecords(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginFlushTrackingRecords : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowInstance.BeginFlushTrackingRecords (timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="callback" Type="System.AsyncCallback" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="state" Type="System.Object" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="464b9-134">Período de tiempo tras el cual se debe anular el intento.</span><span class="sxs-lookup"><span data-stu-id="464b9-134">The time period after which to abort the attempt.</span></span></param>
        <param name="callback"><span data-ttu-id="464b9-135">Método al que hay que llamar cuando termina la operación de seguimiento.</span><span class="sxs-lookup"><span data-stu-id="464b9-135">The method to be called when the track operation has completed.</span></span></param>
        <param name="state"><span data-ttu-id="464b9-136">Información sobre la operación asincrónica.</span><span class="sxs-lookup"><span data-stu-id="464b9-136">The information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="464b9-137">El tiempo de ejecución del flujo de trabajo lo llama para comenzar a enviar de manera asincrónica los registros de seguimiento pendientes a los participantes en el seguimiento.</span><span class="sxs-lookup"><span data-stu-id="464b9-137">Called by the workflow runtime to begin sending pending tracking records to tracking participants asynchronously.</span></span></summary>
        <returns><span data-ttu-id="464b9-138">Estado de la operación actual de seguimiento.</span><span class="sxs-lookup"><span data-stu-id="464b9-138">The status of the current track operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Controller">
      <MemberSignature Language="C#" Value="protected System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl Controller { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Activities.Hosting.WorkflowInstance/WorkflowInstanceControl Controller" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Hosting.WorkflowInstance.Controller" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Controller As WorkflowInstance.WorkflowInstanceControl" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Activities::Hosting::WorkflowInstance::WorkflowInstanceControl Controller { System::Activities::Hosting::WorkflowInstance::WorkflowInstanceControl get(); };" />
      <MemberSignature Language="F#" Value="member this.Controller : System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl" Usage="System.Activities.Hosting.WorkflowInstance.Controller" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Hosting.WorkflowInstance+WorkflowInstanceControl</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="464b9-139">Obtiene la instancia <see cref="T:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl" /> para este objeto <see cref="T:System.Activities.Hosting.WorkflowInstance" />.</span><span class="sxs-lookup"><span data-stu-id="464b9-139">Gets the <see cref="T:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl" /> instance for this <see cref="T:System.Activities.Hosting.WorkflowInstance" />.</span></span></summary>
        <value><span data-ttu-id="464b9-140">Instancia del controlador para esta instancia de flujo de trabajo.</span><span class="sxs-lookup"><span data-stu-id="464b9-140">The controller instance for this workflow instance.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefinitionIdentity">
      <MemberSignature Language="C#" Value="public System.Activities.WorkflowIdentity DefinitionIdentity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.WorkflowIdentity DefinitionIdentity" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Hosting.WorkflowInstance.DefinitionIdentity" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DefinitionIdentity As WorkflowIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::WorkflowIdentity ^ DefinitionIdentity { System::Activities::WorkflowIdentity ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefinitionIdentity : System.Activities.WorkflowIdentity" Usage="System.Activities.Hosting.WorkflowInstance.DefinitionIdentity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.WorkflowIdentity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="464b9-141">Obtiene o establece la identidad de definición de <see cref="T:System.Activities.Hosting.WorkflowInstance" />.</span><span class="sxs-lookup"><span data-stu-id="464b9-141">Gets or sets the definition identity of <see cref="T:System.Activities.Hosting.WorkflowInstance" />.</span></span></summary>
        <value><span data-ttu-id="464b9-142">Identidad de la definición de <see cref="T:System.Activities.Hosting.WorkflowInstance" />.</span><span class="sxs-lookup"><span data-stu-id="464b9-142">The definition identity of <see cref="T:System.Activities.Hosting.WorkflowInstance" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisposeExtensions">
      <MemberSignature Language="C#" Value="protected void DisposeExtensions ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void DisposeExtensions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.DisposeExtensions" />
      <MemberSignature Language="VB.NET" Value="Protected Sub DisposeExtensions ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void DisposeExtensions();" />
      <MemberSignature Language="F#" Value="member this.DisposeExtensions : unit -&gt; unit" Usage="workflowInstance.DisposeExtensions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="464b9-143">Llama al método <see cref="M:System.IDisposable.Dispose" /> en todas las extensiones que implementan la interfaz <see cref="T:System.IDisposable" />.</span><span class="sxs-lookup"><span data-stu-id="464b9-143">Calls <see cref="M:System.IDisposable.Dispose" /> on all extensions that implement <see cref="T:System.IDisposable" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndFlushTrackingRecords">
      <MemberSignature Language="C#" Value="protected void EndFlushTrackingRecords (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void EndFlushTrackingRecords(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.EndFlushTrackingRecords(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub EndFlushTrackingRecords (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void EndFlushTrackingRecords(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="member this.EndFlushTrackingRecords : IAsyncResult -&gt; unit" Usage="workflowInstance.EndFlushTrackingRecords result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="464b9-144">Estado de la operación asincrónica de seguimiento.</span><span class="sxs-lookup"><span data-stu-id="464b9-144">The status of the asynchronous track operation.</span></span></param>
        <summary><span data-ttu-id="464b9-145">El tiempo de ejecución llama a este método para finalizar la operación de seguimiento.</span><span class="sxs-lookup"><span data-stu-id="464b9-145">Called by the workflow runtime to end the track operation.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FlushTrackingRecords">
      <MemberSignature Language="C#" Value="protected void FlushTrackingRecords (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void FlushTrackingRecords(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.FlushTrackingRecords(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub FlushTrackingRecords (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void FlushTrackingRecords(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.FlushTrackingRecords : TimeSpan -&gt; unit" Usage="workflowInstance.FlushTrackingRecords timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="464b9-146">Período de tiempo tras el cual se debe anular el intento.</span><span class="sxs-lookup"><span data-stu-id="464b9-146">The time period after which to abort the attempt.</span></span></param>
        <summary><span data-ttu-id="464b9-147">El tiempo de ejecución del flujo de trabajo llama a este método para enviar los registros de seguimiento pendientes a los participantes en el seguimiento.</span><span class="sxs-lookup"><span data-stu-id="464b9-147">Called by the workflow runtime to send pending tracking records to tracking participants.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetActivitiesBlockingUpdate">
      <MemberSignature Language="C#" Value="protected static System.Collections.Generic.IList&lt;System.Activities.DynamicUpdate.ActivityBlockingUpdate&gt; GetActivitiesBlockingUpdate (object deserializedRuntimeState, System.Activities.DynamicUpdate.DynamicUpdateMap updateMap);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.Collections.Generic.IList`1&lt;class System.Activities.DynamicUpdate.ActivityBlockingUpdate&gt; GetActivitiesBlockingUpdate(object deserializedRuntimeState, class System.Activities.DynamicUpdate.DynamicUpdateMap updateMap) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.GetActivitiesBlockingUpdate(System.Object,System.Activities.DynamicUpdate.DynamicUpdateMap)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function GetActivitiesBlockingUpdate (deserializedRuntimeState As Object, updateMap As DynamicUpdateMap) As IList(Of ActivityBlockingUpdate)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static System::Collections::Generic::IList&lt;System::Activities::DynamicUpdate::ActivityBlockingUpdate ^&gt; ^ GetActivitiesBlockingUpdate(System::Object ^ deserializedRuntimeState, System::Activities::DynamicUpdate::DynamicUpdateMap ^ updateMap);" />
      <MemberSignature Language="F#" Value="static member GetActivitiesBlockingUpdate : obj * System.Activities.DynamicUpdate.DynamicUpdateMap -&gt; System.Collections.Generic.IList&lt;System.Activities.DynamicUpdate.ActivityBlockingUpdate&gt;" Usage="System.Activities.Hosting.WorkflowInstance.GetActivitiesBlockingUpdate (deserializedRuntimeState, updateMap)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Activities.DynamicUpdate.ActivityBlockingUpdate&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deserializedRuntimeState" Type="System.Object" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="updateMap" Type="System.Activities.DynamicUpdate.DynamicUpdateMap" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="deserializedRuntimeState"><span data-ttu-id="464b9-148">Estado en tiempo de ejecución deserializado.</span><span class="sxs-lookup"><span data-stu-id="464b9-148">The deserialized runtime state.</span></span></param>
        <param name="updateMap"><span data-ttu-id="464b9-149">Asignación de actualización.</span><span class="sxs-lookup"><span data-stu-id="464b9-149">The update map.</span></span></param>
        <summary><span data-ttu-id="464b9-150">Recupera la lista de actividad que está bloqueando la actualización del flujo de trabajo.</span><span class="sxs-lookup"><span data-stu-id="464b9-150">Retrieves the list of activity that is blocking the update of the workflow.</span></span></summary>
        <returns><span data-ttu-id="464b9-151">Lista de actividad que está bloqueando la actualización.</span><span class="sxs-lookup"><span data-stu-id="464b9-151">The list of activity that is blocking the update.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExtension&lt;T&gt;">
      <MemberSignature Language="C#" Value="protected internal T GetExtension&lt;T&gt; () where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance !!T GetExtension&lt;class T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.GetExtension``1" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Function GetExtension(Of T As Class) () As T" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA;generic &lt;typename T&gt;&#xA; where T : class T GetExtension();" />
      <MemberSignature Language="F#" Value="member this.GetExtension : unit -&gt; 'T (requires 'T : null)" Usage="workflowInstance.GetExtension " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T"><span data-ttu-id="464b9-152">Tipo de la extensión que buscar.</span><span class="sxs-lookup"><span data-stu-id="464b9-152">The type of the extension to find.</span></span></typeparam>
        <summary><span data-ttu-id="464b9-153">Devuelve una extensión del tipo especificado.</span><span class="sxs-lookup"><span data-stu-id="464b9-153">Returns an extension of the specified type.</span></span></summary>
        <returns><span data-ttu-id="464b9-154">Extensión del tipo especificado.</span><span class="sxs-lookup"><span data-stu-id="464b9-154">An extension of the specified type.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExtensions&lt;T&gt;">
      <MemberSignature Language="C#" Value="protected internal System.Collections.Generic.IEnumerable&lt;T&gt; GetExtensions&lt;T&gt; () where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; GetExtensions&lt;class T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.GetExtensions``1" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Function GetExtensions(Of T As Class) () As IEnumerable(Of T)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA;generic &lt;typename T&gt;&#xA; where T : class System::Collections::Generic::IEnumerable&lt;T&gt; ^ GetExtensions();" />
      <MemberSignature Language="F#" Value="member this.GetExtensions : unit -&gt; seq&lt;'T (requires 'T : null)&gt; (requires 'T : null)" Usage="workflowInstance.GetExtensions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T"><span data-ttu-id="464b9-155">Tipo de la extensión que buscar.</span><span class="sxs-lookup"><span data-stu-id="464b9-155">The type of the extension to find.</span></span></typeparam>
        <summary><span data-ttu-id="464b9-156">Devuelve todas las extensiones encontradas del tipo especificado.</span><span class="sxs-lookup"><span data-stu-id="464b9-156">Returns all extensions found for the specified type.</span></span></summary>
        <returns><span data-ttu-id="464b9-157">Todas las extensiones encontradas del tipo especificado.</span><span class="sxs-lookup"><span data-stu-id="464b9-157">All extensions found for the specified type.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HostEnvironment">
      <MemberSignature Language="C#" Value="public System.Activities.LocationReferenceEnvironment HostEnvironment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.LocationReferenceEnvironment HostEnvironment" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Hosting.WorkflowInstance.HostEnvironment" />
      <MemberSignature Language="VB.NET" Value="Public Property HostEnvironment As LocationReferenceEnvironment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::LocationReferenceEnvironment ^ HostEnvironment { System::Activities::LocationReferenceEnvironment ^ get(); void set(System::Activities::LocationReferenceEnvironment ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HostEnvironment : System.Activities.LocationReferenceEnvironment with get, set" Usage="System.Activities.Hosting.WorkflowInstance.HostEnvironment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Activities.LocationReferenceEnvironment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="464b9-158">Obtiene o establece el entorno raíz de los argumentos y las variables de la instancia de flujo de trabajo.</span><span class="sxs-lookup"><span data-stu-id="464b9-158">Gets or sets the root environment for the workflow instance's arguments and variables.</span></span></summary>
        <value><span data-ttu-id="464b9-159">El entorno de raíz para los argumentos y variables de la instancia de flujo de trabajo.</span><span class="sxs-lookup"><span data-stu-id="464b9-159">The root environment for the workflow instance's arguments and variables.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="464b9-160">Si esta propiedad se establece después de inicializa la instancia de flujo de trabajo y <xref:System.Activities.Hosting.WorkflowInstance.IsReadOnly%2A> devuelve `true`, un <xref:System.InvalidOperationException> se produce.</span><span class="sxs-lookup"><span data-stu-id="464b9-160">If this property is set after the workflow instance is initialized and <xref:System.Activities.Hosting.WorkflowInstance.IsReadOnly%2A> returns `true`, an <xref:System.InvalidOperationException> is thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public abstract Guid Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid Id" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Hosting.WorkflowInstance.Id" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Id As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Guid Id { Guid get(); };" />
      <MemberSignature Language="F#" Value="member this.Id : Guid" Usage="System.Activities.Hosting.WorkflowInstance.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="464b9-161">Obtiene el identificador único de la instancia de flujo de trabajo.</span><span class="sxs-lookup"><span data-stu-id="464b9-161">Gets the unique identifier for the workflow instance.</span></span></summary>
        <value><span data-ttu-id="464b9-162">Identificador único de la instancia de flujo de trabajo.</span><span class="sxs-lookup"><span data-stu-id="464b9-162">The unique identifier for the workflow instance.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Initialize">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="464b9-163">El host lo llama para inicializar la instancia de flujo de trabajo.</span><span class="sxs-lookup"><span data-stu-id="464b9-163">Called by the host to initialize the workflow instance.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="protected void Initialize (object deserializedRuntimeState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void Initialize(object deserializedRuntimeState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.Initialize(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub Initialize (deserializedRuntimeState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void Initialize(System::Object ^ deserializedRuntimeState);" />
      <MemberSignature Language="F#" Value="member this.Initialize : obj -&gt; unit" Usage="workflowInstance.Initialize deserializedRuntimeState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deserializedRuntimeState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="deserializedRuntimeState"><span data-ttu-id="464b9-164">Estado de tiempo de ejecución utilizado para ejecutar el flujo de trabajo.</span><span class="sxs-lookup"><span data-stu-id="464b9-164">The run-time state used to execute the workflow.</span></span></param>
        <summary><span data-ttu-id="464b9-165">El host lo llama para inicializar la instancia de flujo de trabajo con el estado de ejecución del flujo de trabajo.</span><span class="sxs-lookup"><span data-stu-id="464b9-165">Called by the host to initialize the workflow instance with the workflow run-time state.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="protected void Initialize (System.Collections.Generic.IDictionary&lt;string,object&gt; workflowArgumentValues, System.Collections.Generic.IList&lt;System.Activities.Handle&gt; workflowExecutionProperties);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void Initialize(class System.Collections.Generic.IDictionary`2&lt;string, object&gt; workflowArgumentValues, class System.Collections.Generic.IList`1&lt;class System.Activities.Handle&gt; workflowExecutionProperties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.Initialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IList{System.Activities.Handle})" />
      <MemberSignature Language="VB.NET" Value="Protected Sub Initialize (workflowArgumentValues As IDictionary(Of String, Object), workflowExecutionProperties As IList(Of Handle))" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void Initialize(System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ workflowArgumentValues, System::Collections::Generic::IList&lt;System::Activities::Handle ^&gt; ^ workflowExecutionProperties);" />
      <MemberSignature Language="F#" Value="member this.Initialize : System.Collections.Generic.IDictionary&lt;string, obj&gt; * System.Collections.Generic.IList&lt;System.Activities.Handle&gt; -&gt; unit" Usage="workflowInstance.Initialize (workflowArgumentValues, workflowExecutionProperties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workflowArgumentValues" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        <Parameter Name="workflowExecutionProperties" Type="System.Collections.Generic.IList&lt;System.Activities.Handle&gt;" />
      </Parameters>
      <Docs>
        <param name="workflowArgumentValues"><span data-ttu-id="464b9-166">Parámetros de entrada del flujo de trabajo, organizados por nombre de argumento.</span><span class="sxs-lookup"><span data-stu-id="464b9-166">The input parameters to the workflow, keyed by argument name.</span></span></param>
        <param name="workflowExecutionProperties"><span data-ttu-id="464b9-167">Lista de propiedades de ejecución de flujo de trabajo.</span><span class="sxs-lookup"><span data-stu-id="464b9-167">The list of workflow execution properties.</span></span></param>
        <summary><span data-ttu-id="464b9-168">El host lo llama para inicializar la instancia de flujo de trabajo con los valores de argumentos y las propiedades de ejecución.</span><span class="sxs-lookup"><span data-stu-id="464b9-168">Called by the host to initialize the workflow instance with the argument values and execution properties.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="protected void Initialize (object deserializedRuntimeState, System.Activities.DynamicUpdate.DynamicUpdateMap updateMap);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void Initialize(object deserializedRuntimeState, class System.Activities.DynamicUpdate.DynamicUpdateMap updateMap) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.Initialize(System.Object,System.Activities.DynamicUpdate.DynamicUpdateMap)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub Initialize (deserializedRuntimeState As Object, updateMap As DynamicUpdateMap)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void Initialize(System::Object ^ deserializedRuntimeState, System::Activities::DynamicUpdate::DynamicUpdateMap ^ updateMap);" />
      <MemberSignature Language="F#" Value="member this.Initialize : obj * System.Activities.DynamicUpdate.DynamicUpdateMap -&gt; unit" Usage="workflowInstance.Initialize (deserializedRuntimeState, updateMap)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deserializedRuntimeState" Type="System.Object" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="updateMap" Type="System.Activities.DynamicUpdate.DynamicUpdateMap" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="deserializedRuntimeState"><span data-ttu-id="464b9-169">Estado de tiempo de ejecución utilizado para ejecutar el flujo de trabajo.</span><span class="sxs-lookup"><span data-stu-id="464b9-169">The run-time state used to execute the workflow.</span></span></param>
        <param name="updateMap"><span data-ttu-id="464b9-170">Asignación de actualización.</span><span class="sxs-lookup"><span data-stu-id="464b9-170">The update map.</span></span></param>
        <summary><span data-ttu-id="464b9-171">El host lo llama para inicializar la instancia de flujo de trabajo con el estado de ejecución del flujo de trabajo y el mapa de actualización.</span><span class="sxs-lookup"><span data-stu-id="464b9-171">Called by the host to initialize the workflow instance with the workflow run-time state and update map.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="protected bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Hosting.WorkflowInstance.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Activities.Hosting.WorkflowInstance.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="464b9-172">Obtiene un valor que indica si se ha inicializado la instancia de flujo de trabajo.</span><span class="sxs-lookup"><span data-stu-id="464b9-172">Gets a value that indicates whether the workflow instance has been initialized.</span></span></summary>
        <value><span data-ttu-id="464b9-173"><see langword="true" /> si ya se ha inicializado la instancia de flujo de trabajo; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="464b9-173"><see langword="true" /> if the workflow instance has been initialized; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeginAssociateKeys">
      <MemberSignature Language="C#" Value="protected internal abstract IAsyncResult OnBeginAssociateKeys (System.Collections.Generic.ICollection&lt;System.Runtime.DurableInstancing.InstanceKey&gt; keys, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.IAsyncResult OnBeginAssociateKeys(class System.Collections.Generic.ICollection`1&lt;class System.Runtime.DurableInstancing.InstanceKey&gt; keys, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.OnBeginAssociateKeys(System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey},System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Function OnBeginAssociateKeys (keys As ICollection(Of InstanceKey), callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract IAsyncResult ^ OnBeginAssociateKeys(System::Collections::Generic::ICollection&lt;System::Runtime::DurableInstancing::InstanceKey ^&gt; ^ keys, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member OnBeginAssociateKeys : System.Collections.Generic.ICollection&lt;System.Runtime.DurableInstancing.InstanceKey&gt; * AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowInstance.OnBeginAssociateKeys (keys, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.Generic.ICollection&lt;System.Runtime.DurableInstancing.InstanceKey&gt;" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="keys"><span data-ttu-id="464b9-174">Claves de instancia que asociar con esta instancia de flujo de trabajo.</span><span class="sxs-lookup"><span data-stu-id="464b9-174">The instance keys to associate with this workflow instance.</span></span></param>
        <param name="callback"><span data-ttu-id="464b9-175">Método al que llamar una vez completada la operación.</span><span class="sxs-lookup"><span data-stu-id="464b9-175">The method to be called when the operation completes.</span></span></param>
        <param name="state"><span data-ttu-id="464b9-176">Objeto opcional específico de la aplicación que contiene información sobre la operación asincrónica.</span><span class="sxs-lookup"><span data-stu-id="464b9-176">An optional application-specific object that contains information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="464b9-177">Llamado por el tiempo de ejecución de flujo de trabajo para notificar al host que se deberían asociar con esta instancia nuevas claves de instancia.</span><span class="sxs-lookup"><span data-stu-id="464b9-177">Called by the workflow runtime to notify the host that new instance keys should be associated with this instance.</span></span></summary>
        <returns><span data-ttu-id="464b9-178">Referencia a la operación asincrónica de claves asociadas.</span><span class="sxs-lookup"><span data-stu-id="464b9-178">A reference to the asynchronous associate keys operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeginFlushTrackingRecords">
      <MemberSignature Language="C#" Value="protected virtual IAsyncResult OnBeginFlushTrackingRecords (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IAsyncResult OnBeginFlushTrackingRecords(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.OnBeginFlushTrackingRecords(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnBeginFlushTrackingRecords (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual IAsyncResult ^ OnBeginFlushTrackingRecords(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member OnBeginFlushTrackingRecords : AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.OnBeginFlushTrackingRecords : AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowInstance.OnBeginFlushTrackingRecords (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="464b9-179">Método al que hay que llamar cuando termina la operación de seguimiento.</span><span class="sxs-lookup"><span data-stu-id="464b9-179">The method to be called when the track operation has completed.</span></span></param>
        <param name="state"><span data-ttu-id="464b9-180">Información sobre la operación asincrónica.</span><span class="sxs-lookup"><span data-stu-id="464b9-180">The information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="464b9-181">Llamada asincrónica para pedir al host que vacíe los registros de seguimiento pendientes de realizar en los participantes en el seguimiento.</span><span class="sxs-lookup"><span data-stu-id="464b9-181">Asynchronous call to ask host to flush pending tracking records to tracking participants.</span></span></summary>
        <returns><span data-ttu-id="464b9-182">Estado de la operación actual de seguimiento.</span><span class="sxs-lookup"><span data-stu-id="464b9-182">The status of the current track operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeginPersist">
      <MemberSignature Language="C#" Value="protected internal abstract IAsyncResult OnBeginPersist (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.IAsyncResult OnBeginPersist(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.OnBeginPersist(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Function OnBeginPersist (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract IAsyncResult ^ OnBeginPersist(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member OnBeginPersist : AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowInstance.OnBeginPersist (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="464b9-183">Método al que hay que llamar cuando termina la operación de conservación.</span><span class="sxs-lookup"><span data-stu-id="464b9-183">The method to be called when the persist operation has completed.</span></span></param>
        <param name="state"><span data-ttu-id="464b9-184">Objeto opcional específico de la aplicación que contiene información sobre la operación asincrónica.</span><span class="sxs-lookup"><span data-stu-id="464b9-184">An optional application-specific object that contains information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="464b9-185">Llamada asincrónica para pedir al host que haga persistir el flujo de trabajo.</span><span class="sxs-lookup"><span data-stu-id="464b9-185">Asynchronous call to ask the host to persist the workflow.</span></span></summary>
        <returns><span data-ttu-id="464b9-186">Referencia a la operación actual de persistencia.</span><span class="sxs-lookup"><span data-stu-id="464b9-186">A reference to the current persist operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeginResumeBookmark">
      <MemberSignature Language="C#" Value="protected internal abstract IAsyncResult OnBeginResumeBookmark (System.Activities.Bookmark bookmark, object value, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.IAsyncResult OnBeginResumeBookmark(class System.Activities.Bookmark bookmark, object value, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.OnBeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract IAsyncResult ^ OnBeginResumeBookmark(System::Activities::Bookmark ^ bookmark, System::Object ^ value, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member OnBeginResumeBookmark : System.Activities.Bookmark * obj * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowInstance.OnBeginResumeBookmark (bookmark, value, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bookmark" Type="System.Activities.Bookmark" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="bookmark"><span data-ttu-id="464b9-187">Marcador que se debe reanudar.</span><span class="sxs-lookup"><span data-stu-id="464b9-187">The bookmark to resume.</span></span></param>
        <param name="value"><span data-ttu-id="464b9-188">Datos que pasar a la actividad que creó el marcador <see cref="T:System.Activities.Bookmark" />.</span><span class="sxs-lookup"><span data-stu-id="464b9-188">The data to be passed to the activity that created the <see cref="T:System.Activities.Bookmark" />.</span></span></param>
        <param name="timeout"><span data-ttu-id="464b9-189">Intervalo de tiempo en el que debe completarse la operación de reanudación antes de que se cancele la operación y se produzca una excepción <see cref="T:System.TimeoutException" />.</span><span class="sxs-lookup"><span data-stu-id="464b9-189">The interval in which the resume operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span></span></param>
        <param name="callback"><span data-ttu-id="464b9-190">Método al que hay que llamar cuando termina la operación de reanudación.</span><span class="sxs-lookup"><span data-stu-id="464b9-190">The method to be called when the resume operation has completed.</span></span></param>
        <param name="state"><span data-ttu-id="464b9-191">Objeto opcional específico de la aplicación que contiene información sobre la operación asincrónica.</span><span class="sxs-lookup"><span data-stu-id="464b9-191">An optional application-specific object that contains information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="464b9-192">El tiempo de ejecución de flujo de trabajo llama al método para notificar al host que va a comenzar una operación de marcador de reanudación.</span><span class="sxs-lookup"><span data-stu-id="464b9-192">Called by the workflow runtime to notify the host that a resume bookmark operation is beginning.</span></span></summary>
        <returns><span data-ttu-id="464b9-193">Referencia a la operación de reanudación asincrónica.</span><span class="sxs-lookup"><span data-stu-id="464b9-193">A reference to the asynchronous resume operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDisassociateKeys">
      <MemberSignature Language="C#" Value="protected internal abstract void OnDisassociateKeys (System.Collections.Generic.ICollection&lt;System.Runtime.DurableInstancing.InstanceKey&gt; keys);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnDisassociateKeys(class System.Collections.Generic.ICollection`1&lt;class System.Runtime.DurableInstancing.InstanceKey&gt; keys) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.OnDisassociateKeys(System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey})" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Sub OnDisassociateKeys (keys As ICollection(Of InstanceKey))" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract void OnDisassociateKeys(System::Collections::Generic::ICollection&lt;System::Runtime::DurableInstancing::InstanceKey ^&gt; ^ keys);" />
      <MemberSignature Language="F#" Value="abstract member OnDisassociateKeys : System.Collections.Generic.ICollection&lt;System.Runtime.DurableInstancing.InstanceKey&gt; -&gt; unit" Usage="workflowInstance.OnDisassociateKeys keys" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.Generic.ICollection&lt;System.Runtime.DurableInstancing.InstanceKey&gt;" />
      </Parameters>
      <Docs>
        <param name="keys"><span data-ttu-id="464b9-194">La lista de claves que disociar.</span><span class="sxs-lookup"><span data-stu-id="464b9-194">The list of keys to disassociate.</span></span></param>
        <summary><span data-ttu-id="464b9-195">El tiempo de ejecución de flujo de trabajo lo llama para notificar al host que un determinado conjunto de claves de instancia deben dejar de estar asociadas a esta instancia.</span><span class="sxs-lookup"><span data-stu-id="464b9-195">Called by the workflow runtime to notify the host that a certain set of instance keys should no longer be associated with this instance.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEndAssociateKeys">
      <MemberSignature Language="C#" Value="protected internal abstract void OnEndAssociateKeys (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnEndAssociateKeys(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.OnEndAssociateKeys(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Sub OnEndAssociateKeys (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract void OnEndAssociateKeys(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member OnEndAssociateKeys : IAsyncResult -&gt; unit" Usage="workflowInstance.OnEndAssociateKeys result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="464b9-196">Referencia a la operación asincrónica de claves asociadas.</span><span class="sxs-lookup"><span data-stu-id="464b9-196">The reference to the asynchronous associate keys operation.</span></span></param>
        <summary><span data-ttu-id="464b9-197">Llamado por el tiempo de ejecución de flujo de trabajo para notificar al host que ha finalizado una operación de claves asociadas.</span><span class="sxs-lookup"><span data-stu-id="464b9-197">Called by the workflow runtime to notify the host that an associate keys operation is complete.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEndFlushTrackingRecords">
      <MemberSignature Language="C#" Value="protected virtual void OnEndFlushTrackingRecords (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnEndFlushTrackingRecords(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.OnEndFlushTrackingRecords(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnEndFlushTrackingRecords (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnEndFlushTrackingRecords(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member OnEndFlushTrackingRecords : IAsyncResult -&gt; unit&#xA;override this.OnEndFlushTrackingRecords : IAsyncResult -&gt; unit" Usage="workflowInstance.OnEndFlushTrackingRecords result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="464b9-198">Estado de la operación asincrónica de vaciado de registros de seguimiento.</span><span class="sxs-lookup"><span data-stu-id="464b9-198">The status of the asynchronous flush tracking records operation.</span></span></param>
        <summary><span data-ttu-id="464b9-199">Llamado por el tiempo de ejecución de flujo de trabajo para notificar al host cuándo ha finalizado la operación de vaciado de los registros de seguimiento.</span><span class="sxs-lookup"><span data-stu-id="464b9-199">Called by the workflow runtime to notify the host when the flush tracking records operation is complete.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEndPersist">
      <MemberSignature Language="C#" Value="protected internal abstract void OnEndPersist (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnEndPersist(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.OnEndPersist(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Sub OnEndPersist (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract void OnEndPersist(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member OnEndPersist : IAsyncResult -&gt; unit" Usage="workflowInstance.OnEndPersist result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="464b9-200">Referencia a la operación asincrónica de conservación.</span><span class="sxs-lookup"><span data-stu-id="464b9-200">The reference to the asynchronous persist operation.</span></span></param>
        <summary><span data-ttu-id="464b9-201">Llamado por el tiempo de ejecución de flujo de trabajo para notificar al host que ha finalizado una operación de persistencia.</span><span class="sxs-lookup"><span data-stu-id="464b9-201">Called by the workflow runtime to notify the host that a persist operation is complete.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEndResumeBookmark">
      <MemberSignature Language="C#" Value="protected internal abstract System.Activities.BookmarkResumptionResult OnEndResumeBookmark (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance valuetype System.Activities.BookmarkResumptionResult OnEndResumeBookmark(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.OnEndResumeBookmark(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Function OnEndResumeBookmark (result As IAsyncResult) As BookmarkResumptionResult" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract System::Activities::BookmarkResumptionResult OnEndResumeBookmark(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member OnEndResumeBookmark : IAsyncResult -&gt; System.Activities.BookmarkResumptionResult" Usage="workflowInstance.OnEndResumeBookmark result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.BookmarkResumptionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="464b9-202">Referencia a la operación de reanudación asincrónica de marcador.</span><span class="sxs-lookup"><span data-stu-id="464b9-202">The reference to the asynchronous resume bookmark operation.</span></span></param>
        <summary><span data-ttu-id="464b9-203">El tiempo de ejecución de flujo de trabajo llama al método para notificar al host que ha finalizado una operación de marcador de reanudación.</span><span class="sxs-lookup"><span data-stu-id="464b9-203">Called by the workflow runtime to notify the host that a resume bookmark operation is complete.</span></span></summary>
        <returns><span data-ttu-id="464b9-204">Uno de los valores de enumeración que indica el resultado de una operación de reanudación de <see cref="T:System.Activities.Bookmark" />.</span><span class="sxs-lookup"><span data-stu-id="464b9-204">One of the enumeration values that indicates the result of a <see cref="T:System.Activities.Bookmark" /> resume operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnNotifyPaused">
      <MemberSignature Language="C#" Value="protected abstract void OnNotifyPaused ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnNotifyPaused() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.OnNotifyPaused" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub OnNotifyPaused ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void OnNotifyPaused();" />
      <MemberSignature Language="F#" Value="abstract member OnNotifyPaused : unit -&gt; unit" Usage="workflowInstance.OnNotifyPaused " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="464b9-205">El tiempo de ejecución de flujo de trabajo lo llama para notificar al host que la instancia de flujo de trabajo ha pasado por la transición desde el estado de ejecución al estado de pausa.</span><span class="sxs-lookup"><span data-stu-id="464b9-205">Called by the workflow runtime to notify the host that the workflow instance has transitioned from the running state to the paused state.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnNotifyUnhandledException">
      <MemberSignature Language="C#" Value="protected abstract void OnNotifyUnhandledException (Exception exception, System.Activities.Activity source, string sourceInstanceId);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnNotifyUnhandledException(class System.Exception exception, class System.Activities.Activity source, string sourceInstanceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.OnNotifyUnhandledException(System.Exception,System.Activities.Activity,System.String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void OnNotifyUnhandledException(Exception ^ exception, System::Activities::Activity ^ source, System::String ^ sourceInstanceId);" />
      <MemberSignature Language="F#" Value="abstract member OnNotifyUnhandledException : Exception * System.Activities.Activity * string -&gt; unit" Usage="workflowInstance.OnNotifyUnhandledException (exception, source, sourceInstanceId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" />
        <Parameter Name="source" Type="System.Activities.Activity" />
        <Parameter Name="sourceInstanceId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="exception"><span data-ttu-id="464b9-206">La excepción no controlada.</span><span class="sxs-lookup"><span data-stu-id="464b9-206">The unhandled exception.</span></span></param>
        <param name="source"><span data-ttu-id="464b9-207">Actividad que produjo la excepción.</span><span class="sxs-lookup"><span data-stu-id="464b9-207">The activity that threw the exception.</span></span></param>
        <param name="sourceInstanceId"><span data-ttu-id="464b9-208">Identificador único de la instancia <see cref="T:System.Activities.ActivityInstance" /> que representa la actividad que produjo la excepción.</span><span class="sxs-lookup"><span data-stu-id="464b9-208">The unique identifier of the <see cref="T:System.Activities.ActivityInstance" /> representing the activity that threw the exception.</span></span></param>
        <summary><span data-ttu-id="464b9-209">El tiempo de ejecución de flujo de trabajo lo llama para notificar al host que se ha producido una excepción no controlada en la instancia de flujo de trabajo.</span><span class="sxs-lookup"><span data-stu-id="464b9-209">Called by the workflow runtime to notify the host an unhandled exception has occurred in the workflow instance.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRequestAbort">
      <MemberSignature Language="C#" Value="protected internal abstract void OnRequestAbort (Exception reason);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnRequestAbort(class System.Exception reason) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.OnRequestAbort(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Sub OnRequestAbort (reason As Exception)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract void OnRequestAbort(Exception ^ reason);" />
      <MemberSignature Language="F#" Value="abstract member OnRequestAbort : Exception -&gt; unit" Usage="workflowInstance.OnRequestAbort reason" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reason" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="reason"><span data-ttu-id="464b9-210">Razón por la que se anula la instancia de flujo de trabajo.</span><span class="sxs-lookup"><span data-stu-id="464b9-210">The reason for aborting the workflow instance.</span></span></param>
        <summary><span data-ttu-id="464b9-211">El tiempo de ejecución del flujo de trabajo lo llama para notificar al host que se ha solicitado una operación de anulación para la instancia de flujo de trabajo.</span><span class="sxs-lookup"><span data-stu-id="464b9-211">Called by the workflow runtime to notify the host that an abort operation has been requested for the workflow instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="464b9-212">Una vez que se llama a <xref:System.Activities.Hosting.WorkflowInstance.OnRequestAbort%2A>, la mayoría de las API de <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl> excepto <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Abort%2A> producirán una <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="464b9-212">Once <xref:System.Activities.Hosting.WorkflowInstance.OnRequestAbort%2A> is called, most <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl> APIs except <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Abort%2A> will throw an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="464b9-213">Es previsible que, una vez se haya llamado al método <xref:System.Activities.Hosting.WorkflowInstance.OnRequestAbort%2A> un host tenderá hacia un estado en el pueda satisfacer la interrupción.</span><span class="sxs-lookup"><span data-stu-id="464b9-213">It is expected that after <xref:System.Activities.Hosting.WorkflowInstance.OnRequestAbort%2A> is called a host will trend toward a state in which it can satisfy the abort.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterExtensionManager">
      <MemberSignature Language="C#" Value="protected void RegisterExtensionManager (System.Activities.Hosting.WorkflowInstanceExtensionManager extensionManager);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RegisterExtensionManager(class System.Activities.Hosting.WorkflowInstanceExtensionManager extensionManager) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.RegisterExtensionManager(System.Activities.Hosting.WorkflowInstanceExtensionManager)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RegisterExtensionManager (extensionManager As WorkflowInstanceExtensionManager)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RegisterExtensionManager(System::Activities::Hosting::WorkflowInstanceExtensionManager ^ extensionManager);" />
      <MemberSignature Language="F#" Value="member this.RegisterExtensionManager : System.Activities.Hosting.WorkflowInstanceExtensionManager -&gt; unit" Usage="workflowInstance.RegisterExtensionManager extensionManager" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="extensionManager" Type="System.Activities.Hosting.WorkflowInstanceExtensionManager" />
      </Parameters>
      <Docs>
        <param name="extensionManager"><span data-ttu-id="464b9-214">Administrador de extensiones que registrar.</span><span class="sxs-lookup"><span data-stu-id="464b9-214">The extension manager to register.</span></span></param>
        <summary><span data-ttu-id="464b9-215">El host lo llama para registrar el administrador de extensiones especificado, validar que están presentes todas las extensiones requeridas e inicializar la colección de extensiones que se deben usar.</span><span class="sxs-lookup"><span data-stu-id="464b9-215">Called by the host to register the specified extension manager, validate that all required extensions are present, and to initialize the collection of extensions to be used.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="464b9-216">Las extensiones están organizadas por tipo y, si se proporciona, siempre se utilizará una extensión proporcionada por el host.</span><span class="sxs-lookup"><span data-stu-id="464b9-216">Extensions are keyed by type, and a host provided extension will always be used if provided.</span></span> <span data-ttu-id="464b9-217">Las extensiones agregadas mediante el método <xref:System.Activities.Hosting.WorkflowInstanceExtensionManager.Add%2A> utilizan como clave de tipo el tipo en tiempo de ejecución del objeto.</span><span class="sxs-lookup"><span data-stu-id="464b9-217">Extensions added through <xref:System.Activities.Hosting.WorkflowInstanceExtensionManager.Add%2A> use the runtime type of the object as the type key.</span></span> <span data-ttu-id="464b9-218">Proveedores de extensiones agregados a través de <xref:System.Activities.Hosting.WorkflowInstanceExtensionManager.Add%2A> utilizar el método tipo T de Func\<T > como la clave del tipo.</span><span class="sxs-lookup"><span data-stu-id="464b9-218">Extensions providers added through <xref:System.Activities.Hosting.WorkflowInstanceExtensionManager.Add%2A> use the decared type T of the Func\<T> as the type key.</span></span> <span data-ttu-id="464b9-219">Los proveedores de extensión aportados por actividades a través de los diversos métodos \*ActivityMetadata.AddDefaultExtensionProvider se quitan si existe una extensión de host para el tipo declarado o si hay un tipo más amplio proporcionado a través del método AddDefaultExtensionProvider (p. ej.</span><span class="sxs-lookup"><span data-stu-id="464b9-219">Extension providers contributed by activities through the various \*ActivityMetadata.AddDefaultExtensionProvider methods are dropped if a host extension exists for the declared type or if there is a broader type provided through AddDefaultExtensionProvider (ex.</span></span> <span data-ttu-id="464b9-220">Si Func\<StreamWriter > se proporciona y Func\<TextWriter > se proporciona, solo Func\<StreamWriter > se mantendrán).</span><span class="sxs-lookup"><span data-stu-id="464b9-220">if Func\<StreamWriter> is provided and Func\<TextWriter> is provided, only Func\<StreamWriter> will be kept).</span></span> <span data-ttu-id="464b9-221">Si en la colección no existe una extensión que requiere una actividad (lo que se expresa llamando a \*ActivityMetadata.RequireExtension) se produce una excepción <xref:System.Activities.ValidationException>.</span><span class="sxs-lookup"><span data-stu-id="464b9-221">If an extension does not exist in the collection that is required by an activity (expressed by calling \*ActivityMetadata.RequireExtension) a <xref:System.Activities.ValidationException> is thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsInstanceKeys">
      <MemberSignature Language="C#" Value="protected internal abstract bool SupportsInstanceKeys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsInstanceKeys" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Hosting.WorkflowInstance.SupportsInstanceKeys" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride ReadOnly Property SupportsInstanceKeys As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract property bool SupportsInstanceKeys { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsInstanceKeys : bool" Usage="System.Activities.Hosting.WorkflowInstance.SupportsInstanceKeys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="464b9-222">Obtiene un valor que indica si el host admite la asociación de la propiedad <see cref="P:System.Runtime.DurableInstancing.InstanceView.InstanceKeys" /> con una instancia en tiempo de ejecución.</span><span class="sxs-lookup"><span data-stu-id="464b9-222">Gets a value that indicates whether the host supports the association of <see cref="P:System.Runtime.DurableInstancing.InstanceView.InstanceKeys" /> with a run-time instance.</span></span></summary>
        <value><span data-ttu-id="464b9-223"><see langword="true" /> si el host admite la asociación de la propiedad <see cref="P:System.Runtime.DurableInstancing.InstanceView.InstanceKeys" /> con una instancia de flujo de trabajo; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="464b9-223"><see langword="true" /> if the host supports the association of <see cref="P:System.Runtime.DurableInstancing.InstanceView.InstanceKeys" /> with a workflow instance; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SynchronizationContext">
      <MemberSignature Language="C#" Value="public System.Threading.SynchronizationContext SynchronizationContext { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.SynchronizationContext SynchronizationContext" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Hosting.WorkflowInstance.SynchronizationContext" />
      <MemberSignature Language="VB.NET" Value="Public Property SynchronizationContext As SynchronizationContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::SynchronizationContext ^ SynchronizationContext { System::Threading::SynchronizationContext ^ get(); void set(System::Threading::SynchronizationContext ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SynchronizationContext : System.Threading.SynchronizationContext with get, set" Usage="System.Activities.Hosting.WorkflowInstance.SynchronizationContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.SynchronizationContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="464b9-224">Obtiene o establece el objeto <see cref="T:System.Threading.SynchronizationContext" /> utilizado para programar la instancia de flujo de trabajo.</span><span class="sxs-lookup"><span data-stu-id="464b9-224">Gets or sets the <see cref="T:System.Threading.SynchronizationContext" /> used for scheduling the workflow instance.</span></span></summary>
        <value><span data-ttu-id="464b9-225">Contexto de sincronización utilizado para programar la instancia de flujo de trabajo.</span><span class="sxs-lookup"><span data-stu-id="464b9-225">The synchronization context used for scheduling the workflow instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="464b9-226">Si esta propiedad se establece después de inicializa la instancia de flujo de trabajo y <xref:System.Activities.Hosting.WorkflowInstance.IsReadOnly%2A> devuelve `true`, un <xref:System.InvalidOperationException> se produce.</span><span class="sxs-lookup"><span data-stu-id="464b9-226">If this property is set after the workflow instance is initialized and <xref:System.Activities.Hosting.WorkflowInstance.IsReadOnly%2A> returns `true`, an <xref:System.InvalidOperationException> is thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThrowIfReadOnly">
      <MemberSignature Language="C#" Value="protected void ThrowIfReadOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ThrowIfReadOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.ThrowIfReadOnly" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ThrowIfReadOnly ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ThrowIfReadOnly();" />
      <MemberSignature Language="F#" Value="member this.ThrowIfReadOnly : unit -&gt; unit" Usage="workflowInstance.ThrowIfReadOnly " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="464b9-227">Produce una excepción <see cref="T:System.InvalidOperationException" /> si se ha inicializado la instancia de flujo de trabajo, tal y como lo determina la propiedad <see cref="P:System.Activities.Hosting.WorkflowInstance.IsReadOnly" />.</span><span class="sxs-lookup"><span data-stu-id="464b9-227">Throws an <see cref="T:System.InvalidOperationException" /> if the workflow instance has been initialized, as determined by <see cref="P:System.Activities.Hosting.WorkflowInstance.IsReadOnly" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="464b9-228">Si <xref:System.Activities.Hosting.WorkflowInstance.IsReadOnly%2A> devuelve `true`, una <xref:System.InvalidOperationException> se produce.</span><span class="sxs-lookup"><span data-stu-id="464b9-228">If <xref:System.Activities.Hosting.WorkflowInstance.IsReadOnly%2A> returns `true`, then an <xref:System.InvalidOperationException> is thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WorkflowDefinition">
      <MemberSignature Language="C#" Value="public System.Activities.Activity WorkflowDefinition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Activity WorkflowDefinition" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Hosting.WorkflowInstance.WorkflowDefinition" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WorkflowDefinition As Activity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::Activity ^ WorkflowDefinition { System::Activities::Activity ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.WorkflowDefinition : System.Activities.Activity" Usage="System.Activities.Hosting.WorkflowInstance.WorkflowDefinition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Activities.Activity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="464b9-229">Obtiene la definición de flujo de trabajo de la instancia de flujo de trabajo.</span><span class="sxs-lookup"><span data-stu-id="464b9-229">Gets the workflow definition of the workflow instance.</span></span></summary>
        <value><span data-ttu-id="464b9-230">Definición de flujo de trabajo de la instancia de flujo de trabajo.</span><span class="sxs-lookup"><span data-stu-id="464b9-230">The workflow definition of the workflow instance.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
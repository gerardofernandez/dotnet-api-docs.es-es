<Type Name="Extensions" FullName="System.Xml.XPath.Extensions">
  <Metadata><Meta Name="ms.openlocfilehash" Value="76b5c29266c0ff6b3da3581b1516c39a36e5729a" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39916557" /></Metadata><TypeSignature Language="C#" Value="public static class Extensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Extensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XPath.Extensions" />
  <TypeSignature Language="VB.NET" Value="Public Module Extensions" />
  <TypeSignature Language="C++ CLI" Value="public ref class Extensions abstract sealed" />
  <TypeSignature Language="F#" Value="type Extensions = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XPath.XDocument</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.Linq</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="e359e-101">Esta clase contiene los métodos de extensión de LINQ to XML que le permiten evaluar las expresiones XPath.</span><span class="sxs-lookup"><span data-stu-id="e359e-101">This class contains the LINQ to XML extension methods that enable you to evaluate XPath expressions.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e359e-102">Hay una disminución del rendimiento para el uso de estos métodos.</span><span class="sxs-lookup"><span data-stu-id="e359e-102">There is some performance penalty for using these methods.</span></span> <span data-ttu-id="e359e-103">Uso de [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] produce un mejor rendimiento de consultas.</span><span class="sxs-lookup"><span data-stu-id="e359e-103">Using [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] queries yields better performance.</span></span>  
  
 <span data-ttu-id="e359e-104">Aunque no se especifica el orden de las colecciones devueltas en la recomendación de XML XPath Language 1.0, este método de extensión devuelve nodos en orden del documento.</span><span class="sxs-lookup"><span data-stu-id="e359e-104">Although the ordering of returned collections is not specified in the XML XPath Language 1.0 Recommendation, this extension method returns nodes in document order.</span></span>  
  
 <span data-ttu-id="e359e-105">Tenga en cuenta que se devuelven nodos en orden del documento, incluso cuando se usa como un eje inverso, `preceding-sibling` o `ancestor-or-self`.</span><span class="sxs-lookup"><span data-stu-id="e359e-105">Note that nodes are returned in document order even when you use a reverse axis, such as `preceding-sibling` or `ancestor-or-self`.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="CreateNavigator">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath.XDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e359e-106">Crea un objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> para <see cref="T:System.Xml.Linq.XNode" />.</span><span class="sxs-lookup"><span data-stu-id="e359e-106">Creates an <see cref="T:System.Xml.XPath.XPathNavigator" /> for an <see cref="T:System.Xml.Linq.XNode" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e359e-107">No puede modificar el árbol XML mediante el <xref:System.Xml.XPath.XPathNavigator> devuelto por este método.</span><span class="sxs-lookup"><span data-stu-id="e359e-107">You cannot edit the XML tree by using the <xref:System.Xml.XPath.XPathNavigator> that is returned by this method.</span></span> <span data-ttu-id="e359e-108">La propiedad <xref:System.Xml.XPath.XPathNavigator.CanEdit%2A> devuelve `false`.</span><span class="sxs-lookup"><span data-stu-id="e359e-108">The <xref:System.Xml.XPath.XPathNavigator.CanEdit%2A> property returns `false`.</span></span>  
  
 <span data-ttu-id="e359e-109">No puede crear un <xref:System.Xml.XPath.XPathNavigator> para un <xref:System.Xml.Linq.XDocumentType> nodo.</span><span class="sxs-lookup"><span data-stu-id="e359e-109">You cannot create an <xref:System.Xml.XPath.XPathNavigator> for a <xref:System.Xml.Linq.XDocumentType> node.</span></span> <span data-ttu-id="e359e-110">Tipos de documento no participan en el modelo de datos XPath.</span><span class="sxs-lookup"><span data-stu-id="e359e-110">Document types do not participate in the XPath data model.</span></span>  
  
 <span data-ttu-id="e359e-111">Las declaraciones de Namespace se informa de izquierda a derecha.</span><span class="sxs-lookup"><span data-stu-id="e359e-111">Namespace declarations are reported from left to right.</span></span> <span data-ttu-id="e359e-112">En cambio, para <xref:System.Xml.XmlDocument> se notifican los espacios de nombres de derecha a izquierda.</span><span class="sxs-lookup"><span data-stu-id="e359e-112">In contrast, for <xref:System.Xml.XmlDocument> namespaces are reported from right to left.</span></span> <span data-ttu-id="e359e-113">Se trata de un comportamiento compatible porque no se ordenan las declaraciones de espacio de nombres en el modelo de datos XPath.</span><span class="sxs-lookup"><span data-stu-id="e359e-113">This is conformant behavior because namespace declarations are not ordered in the XPath data model.</span></span>  
  
 <span data-ttu-id="e359e-114">El método <xref:System.Xml.XPath.XPathNavigator.MoveToId%2A> no se admite para los navegadores que devuelven este método.</span><span class="sxs-lookup"><span data-stu-id="e359e-114">The method <xref:System.Xml.XPath.XPathNavigator.MoveToId%2A> is not supported for navigators that are returned by this method.</span></span>  
  
 <span data-ttu-id="e359e-115">Puede usar este método para realizar una transformación XSLT.</span><span class="sxs-lookup"><span data-stu-id="e359e-115">You can use this method to perform an XSLT transformation.</span></span> <span data-ttu-id="e359e-116">Puede crear un árbol XML, crear un <xref:System.Xml.XPath.XPathNavigator> desde el árbol XML, crear un nuevo documento y crear un <xref:System.Xml.XmlWriter> que escribirá en el nuevo documento.</span><span class="sxs-lookup"><span data-stu-id="e359e-116">You can create an XML tree, create an <xref:System.Xml.XPath.XPathNavigator> from the XML tree, create a new document, and create a <xref:System.Xml.XmlWriter> that will write into the new document.</span></span> <span data-ttu-id="e359e-117">A continuación, puede invocar la transformación XSLT y pasar <xref:System.Xml.XPath.XPathNavigator> y <xref:System.Xml.XmlWriter> a la transformación.</span><span class="sxs-lookup"><span data-stu-id="e359e-117">Then, you can invoke the XSLT transformation, passing the <xref:System.Xml.XPath.XPathNavigator> and <xref:System.Xml.XmlWriter> to the transformation.</span></span> <span data-ttu-id="e359e-118">Después de que se complete correctamente la transformación, se rellenará el nuevo árbol XML con los resultados de la transformación.</span><span class="sxs-lookup"><span data-stu-id="e359e-118">After the transformation successfully completes, the new XML tree is populated with the results of the transformation.</span></span>  
  
 <span data-ttu-id="e359e-119">Para llevar a cabo una transformación XSLT, puede usar un <xref:System.Xml.XmlReader> o <xref:System.Xml.XPath.XPathNavigator>.</span><span class="sxs-lookup"><span data-stu-id="e359e-119">To perform an XSLT transformation, you can use either an <xref:System.Xml.XmlReader> or an <xref:System.Xml.XPath.XPathNavigator>.</span></span> <span data-ttu-id="e359e-120">Los dos enfoques tienen distintas características de rendimiento.</span><span class="sxs-lookup"><span data-stu-id="e359e-120">The two approaches have different performance characteristics.</span></span> <span data-ttu-id="e359e-121">Algunas transformaciones se ejecutarán más rápido cuando se usa un <xref:System.Xml.XmlReader>, y otros se ejecutarán más rápido cuando se usa un <xref:System.Xml.XPath.XPathNavigator>.</span><span class="sxs-lookup"><span data-stu-id="e359e-121">Some transformations will execute faster when using an <xref:System.Xml.XmlReader>, and others will execute faster when using a <xref:System.Xml.XPath.XPathNavigator>.</span></span> <span data-ttu-id="e359e-122">Si el rendimiento es un problema, se recomienda que experimente con cada enfoque para determinar lo que funcionará mejor en sus circunstancias.</span><span class="sxs-lookup"><span data-stu-id="e359e-122">If performance is a concern, we recommend that you experiment with each approach to determine which will perform better in your circumstances.</span></span>  
  
```csharp  
  
            string xslMarkup = @"<?xml version='1.0'?>  
<xsl:stylesheet xmlns:xsl='http://www.w3.org/1999/XSL/Transform' version='1.0'>  
    <xsl:template match='/Parent'>  
        <Root>  
            <C1><xsl:value-of select='Child1'/></C1>  
            <C2><xsl:value-of select='Child2'/></C2>  
        </Root>  
    </xsl:template>  
</xsl:stylesheet>";  
  
XDocument xmlTree = new XDocument(  
    new XElement("Parent",  
        new XElement("Child1", "Child1 data"),  
        new XElement("Child2", "Child2 data")  
    )  
);  
  
XDocument newTree = new XDocument();  
using (XmlWriter writer = newTree.CreateWriter()) {  
    // Load the style sheet.  
    XslCompiledTransform xslt = new XslCompiledTransform();  
    xslt.Load(XmlReader.Create(new StringReader(xslMarkup)));  
  
    // Execute the transform and output the results to a writer.  
    xslt.Transform(xmlTree.CreateNavigator(), writer);  
}  
  
Console.WriteLine(newTree);  
```  
  
```vb  
  
            Dim xslMarkup As XDocument = <?xml version='1.0'?>  
                             <xsl:stylesheet xmlns:xsl='http://www.w3.org/1999/XSL/Transform' version='1.0'>  
                                 <xsl:template match='/Parent'>  
                                     <Root>  
                                         <C1><xsl:value-of select='Child1'/></C1>  
                                         <C2><xsl:value-of select='Child2'/></C2>  
                                     </Root>  
                                 </xsl:template>  
                             </xsl:stylesheet>  
  
Dim xmlTree As XDocument = <?xml version='1.0'?>  
                           <Parent>  
                               <Child1>Child1 data</Child1>  
                               <Child2>Child2 data</Child2>  
                           </Parent>  
  
Dim newTree As XDocument = New XDocument()  
  
Using writer As XmlWriter = newTree.CreateWriter()  
    ' Load the style sheet.  
    Dim xslt As XslCompiledTransform = _  
        New XslCompiledTransform()  
    xslt.Load(xslMarkup.CreateReader())  
  
    ' Execute the transform and output the results to a writer.  
    xslt.Transform(xmlTree.CreateNavigator(), writer)  
End Using  
  
Console.WriteLine(newTree)  
```  
  
 <span data-ttu-id="e359e-123">Este ejemplo produce el siguiente resultado:</span><span class="sxs-lookup"><span data-stu-id="e359e-123">This example produces the following output:</span></span>  
  
```xml  
  
            <Root>  
  <C1>Child1 data</C1>  
  <C2>Child2 data</C2>  
</Root>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateNavigator">
      <MemberSignature Language="C#" Value="public static System.Xml.XPath.XPathNavigator CreateNavigator (this System.Xml.Linq.XNode node);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XPath.XPathNavigator CreateNavigator(class System.Xml.Linq.XNode node) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CreateNavigator (node As XNode) As XPathNavigator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Xml::XPath::XPathNavigator ^ CreateNavigator(System::Xml::Linq::XNode ^ node);" />
      <MemberSignature Language="F#" Value="static member CreateNavigator : System.Xml.Linq.XNode -&gt; System.Xml.XPath.XPathNavigator" Usage="System.Xml.XPath.Extensions.CreateNavigator node" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath.XDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathNavigator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Xml.Linq.XNode" RefType="this" />
      </Parameters>
      <Docs>
        <param name="node"><span data-ttu-id="e359e-124"><see cref="T:System.Xml.Linq.XNode" /> que puede procesar consultas XPath.</span><span class="sxs-lookup"><span data-stu-id="e359e-124">An <see cref="T:System.Xml.Linq.XNode" /> that can process XPath queries.</span></span></param>
        <summary><span data-ttu-id="e359e-125">Crea un objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> para <see cref="T:System.Xml.Linq.XNode" />.</span><span class="sxs-lookup"><span data-stu-id="e359e-125">Creates an <see cref="T:System.Xml.XPath.XPathNavigator" /> for an <see cref="T:System.Xml.Linq.XNode" />.</span></span></summary>
        <returns><span data-ttu-id="e359e-126"><see cref="T:System.Xml.XPath.XPathNavigator" /> que puede procesar consultas XPath.</span><span class="sxs-lookup"><span data-stu-id="e359e-126">An <see cref="T:System.Xml.XPath.XPathNavigator" /> that can process XPath queries.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e359e-127">No puede modificar el árbol XML mediante el <xref:System.Xml.XPath.XPathNavigator> devuelto por este método.</span><span class="sxs-lookup"><span data-stu-id="e359e-127">You cannot edit the XML tree by using the <xref:System.Xml.XPath.XPathNavigator> that is returned by this method.</span></span> <span data-ttu-id="e359e-128">La propiedad <xref:System.Xml.XPath.XPathNavigator.CanEdit%2A> devuelve `false`.</span><span class="sxs-lookup"><span data-stu-id="e359e-128">The <xref:System.Xml.XPath.XPathNavigator.CanEdit%2A> property returns `false`.</span></span>  
  
 <span data-ttu-id="e359e-129">No puede crear un <xref:System.Xml.XPath.XPathNavigator> para un <xref:System.Xml.Linq.XDocumentType> nodo.</span><span class="sxs-lookup"><span data-stu-id="e359e-129">You cannot create an <xref:System.Xml.XPath.XPathNavigator> for a <xref:System.Xml.Linq.XDocumentType> node.</span></span> <span data-ttu-id="e359e-130">Tipos de documento no participan en el modelo de datos XPath.</span><span class="sxs-lookup"><span data-stu-id="e359e-130">Document types do not participate in the XPath data model.</span></span>  
  
 <span data-ttu-id="e359e-131">Las declaraciones de Namespace se informa de izquierda a derecha.</span><span class="sxs-lookup"><span data-stu-id="e359e-131">Namespace declarations are reported from left to right.</span></span> <span data-ttu-id="e359e-132">En cambio, para <xref:System.Xml.XmlDocument> se notifican los espacios de nombres de derecha a izquierda.</span><span class="sxs-lookup"><span data-stu-id="e359e-132">In contrast, for <xref:System.Xml.XmlDocument> namespaces are reported from right to left.</span></span> <span data-ttu-id="e359e-133">Se trata de un comportamiento compatible porque no se ordenan las declaraciones de espacio de nombres en el modelo de datos XPath.</span><span class="sxs-lookup"><span data-stu-id="e359e-133">This is conformant behavior because namespace declarations are not ordered in the XPath data model.</span></span>  
  
 <span data-ttu-id="e359e-134">El método <xref:System.Xml.XPath.XPathNavigator.MoveToId%2A> no se admite para los navegadores que devuelven este método.</span><span class="sxs-lookup"><span data-stu-id="e359e-134">The method <xref:System.Xml.XPath.XPathNavigator.MoveToId%2A> is not supported for navigators that are returned by this method.</span></span>  
  
 <span data-ttu-id="e359e-135">Puede usar este método para realizar una transformación XSLT.</span><span class="sxs-lookup"><span data-stu-id="e359e-135">You can use this method to perform an XSLT transformation.</span></span> <span data-ttu-id="e359e-136">Puede crear un árbol XML, crear un <xref:System.Xml.XPath.XPathNavigator> desde el árbol XML, crear un nuevo documento y crear un <xref:System.Xml.XmlWriter> que escribirá en el nuevo documento.</span><span class="sxs-lookup"><span data-stu-id="e359e-136">You can create an XML tree, create an <xref:System.Xml.XPath.XPathNavigator> from the XML tree, create a new document, and create a <xref:System.Xml.XmlWriter> that will write into the new document.</span></span> <span data-ttu-id="e359e-137">A continuación, puede invocar la transformación XSLT, pasando el <xref:System.Xml.XPath.XPathNavigator> y <xref:System.Xml.XmlWriter> a la transformación.</span><span class="sxs-lookup"><span data-stu-id="e359e-137">Then, you can invoke the XSLT transformation, passing the <xref:System.Xml.XPath.XPathNavigator> and <xref:System.Xml.XmlWriter> to the transform.</span></span> <span data-ttu-id="e359e-138">Después de que se complete correctamente la transformación, se rellenará el nuevo árbol XML con los resultados de la transformación.</span><span class="sxs-lookup"><span data-stu-id="e359e-138">After the transformation successfully completes, the new XML tree is populated with the results of the transformation.</span></span>  
  
 <span data-ttu-id="e359e-139">Para llevar a cabo una transformación XSLT, puede usar un <xref:System.Xml.XmlReader> o <xref:System.Xml.XPath.XPathNavigator>.</span><span class="sxs-lookup"><span data-stu-id="e359e-139">To perform an XSLT transformation, you can use either an <xref:System.Xml.XmlReader> or an <xref:System.Xml.XPath.XPathNavigator>.</span></span> <span data-ttu-id="e359e-140">Los dos enfoques tienen distintas características de rendimiento.</span><span class="sxs-lookup"><span data-stu-id="e359e-140">The two approaches have different performance characteristics.</span></span> <span data-ttu-id="e359e-141">Algunas transformaciones se ejecutarán más rápido cuando se usa un <xref:System.Xml.XmlReader>, y otros se ejecutarán más rápido cuando se usa un <xref:System.Xml.XPath.XPathNavigator>.</span><span class="sxs-lookup"><span data-stu-id="e359e-141">Some transformations will execute faster when using an <xref:System.Xml.XmlReader>, and others will execute faster when using a <xref:System.Xml.XPath.XPathNavigator>.</span></span> <span data-ttu-id="e359e-142">Si el rendimiento es un problema, se recomienda que experimente con cada enfoque para determinar lo que funcionará mejor en sus circunstancias.</span><span class="sxs-lookup"><span data-stu-id="e359e-142">If performance is a concern, we recommend that you experiment with each approach to determine which will perform better in your circumstances.</span></span>  
  
   
  
## Examples  
  
```csharp  
  
                string xslMarkup = @"<?xml version='1.0'?>  
<xsl:stylesheet xmlns:xsl='http://www.w3.org/1999/XSL/Transform' version='1.0'>  
    <xsl:template match='/Parent'>  
        <Root>  
            <C1><xsl:value-of select='Child1'/></C1>  
            <C2><xsl:value-of select='Child2'/></C2>  
        </Root>  
    </xsl:template>  
</xsl:stylesheet>";  
  
XDocument xmlTree = new XDocument(  
    new XElement("Parent",  
        new XElement("Child1", "Child1 data"),  
        new XElement("Child2", "Child2 data")  
    )  
);  
  
XDocument newTree = new XDocument();  
using (XmlWriter writer = newTree.CreateWriter()) {  
    // Load the style sheet.  
    XslCompiledTransform xslt = new XslCompiledTransform();  
    xslt.Load(XmlReader.Create(new StringReader(xslMarkup)));  
  
    // Execute the transform and output the results to a writer.  
    xslt.Transform(xmlTree.CreateNavigator(), writer);  
}  
  
Console.WriteLine(newTree);  
```  
  
```vb  
  
                Dim xslMarkup As XDocument = _  
    <?xml version='1.0'?>  
    <xsl:stylesheet xmlns:xsl='http://www.w3.org/1999/XSL/Transform' version='1.0'>  
        <xsl:template match='/Parent'>  
            <Root>  
                <C1><xsl:value-of select='Child1'/></C1>  
                <C2><xsl:value-of select='Child2'/></C2>  
            </Root>  
        </xsl:template>  
    </xsl:stylesheet>  
  
Dim xmlTree As XDocument = _  
    <?xml version='1.0'?>  
    <Parent>  
        <Child1>Child1 data</Child1>  
        <Child2>Child2 data</Child2>  
    </Parent>  
  
Dim newTree As XDocument = New XDocument()  
  
Using writer As XmlWriter = newTree.CreateWriter()  
    ' Load the style sheet.  
    Dim xslt As XslCompiledTransform = _  
        New XslCompiledTransform()  
    xslt.Load(xslMarkup.CreateReader())  
  
    ' Execute the transform and output the results to a writer.  
    xslt.Transform(xmlTree.CreateNavigator(), writer)  
End Using  
  
Console.WriteLine(newTree)  
```  
  
 <span data-ttu-id="e359e-143">Este ejemplo produce el siguiente resultado:</span><span class="sxs-lookup"><span data-stu-id="e359e-143">This example produces the following output:</span></span>  
  
```xml  
  
                <Root>  
  <C1>Child1 data</C1>  
  <C2>Child2 data</C2>  
</Root>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateNavigator">
      <MemberSignature Language="C#" Value="public static System.Xml.XPath.XPathNavigator CreateNavigator (this System.Xml.Linq.XNode node, System.Xml.XmlNameTable nameTable);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XPath.XPathNavigator CreateNavigator(class System.Xml.Linq.XNode node, class System.Xml.XmlNameTable nameTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode,System.Xml.XmlNameTable)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CreateNavigator (node As XNode, nameTable As XmlNameTable) As XPathNavigator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Xml::XPath::XPathNavigator ^ CreateNavigator(System::Xml::Linq::XNode ^ node, System::Xml::XmlNameTable ^ nameTable);" />
      <MemberSignature Language="F#" Value="static member CreateNavigator : System.Xml.Linq.XNode * System.Xml.XmlNameTable -&gt; System.Xml.XPath.XPathNavigator" Usage="System.Xml.XPath.Extensions.CreateNavigator (node, nameTable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath.XDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathNavigator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Xml.Linq.XNode" RefType="this" />
        <Parameter Name="nameTable" Type="System.Xml.XmlNameTable" />
      </Parameters>
      <Docs>
        <param name="node"><span data-ttu-id="e359e-144"><see cref="T:System.Xml.Linq.XNode" /> que procesa consultas XPath.</span><span class="sxs-lookup"><span data-stu-id="e359e-144">An <see cref="T:System.Xml.Linq.XNode" /> that can process an XPath query.</span></span></param>
        <param name="nameTable"><span data-ttu-id="e359e-145">Objeto <see cref="T:System.Xml.XmlNameTable" /> que se va a utilizar en <see cref="T:System.Xml.XPath.XPathNavigator" />.</span><span class="sxs-lookup"><span data-stu-id="e359e-145">A <see cref="T:System.Xml.XmlNameTable" /> to be used by <see cref="T:System.Xml.XPath.XPathNavigator" />.</span></span></param>
        <summary><span data-ttu-id="e359e-146">Crea un objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> para <see cref="T:System.Xml.Linq.XNode" />.</span><span class="sxs-lookup"><span data-stu-id="e359e-146">Creates an <see cref="T:System.Xml.XPath.XPathNavigator" /> for an <see cref="T:System.Xml.Linq.XNode" />.</span></span> <span data-ttu-id="e359e-147"><see cref="T:System.Xml.XmlNameTable" /> permite un procesamiento más eficaz de la expresión XPath.</span><span class="sxs-lookup"><span data-stu-id="e359e-147">The <see cref="T:System.Xml.XmlNameTable" /> enables more efficient XPath expression processing.</span></span></summary>
        <returns><span data-ttu-id="e359e-148"><see cref="T:System.Xml.XPath.XPathNavigator" /> que puede procesar consultas XPath.</span><span class="sxs-lookup"><span data-stu-id="e359e-148">An <see cref="T:System.Xml.XPath.XPathNavigator" /> that can process XPath queries.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e359e-149">No se puede editar el árbol XML mediante el <xref:System.Xml.XPath.XPathNavigator> devuelto por este método.</span><span class="sxs-lookup"><span data-stu-id="e359e-149">You cannot edit the XML tree using the <xref:System.Xml.XPath.XPathNavigator> that is returned by this method.</span></span> <span data-ttu-id="e359e-150">La propiedad <xref:System.Xml.XPath.XPathNavigator.CanEdit%2A> devuelve `false`.</span><span class="sxs-lookup"><span data-stu-id="e359e-150">The <xref:System.Xml.XPath.XPathNavigator.CanEdit%2A> property returns `false`.</span></span>  
  
 <span data-ttu-id="e359e-151">No puede crear un <xref:System.Xml.XPath.XPathNavigator> para un <xref:System.Xml.Linq.XDocumentType> nodo.</span><span class="sxs-lookup"><span data-stu-id="e359e-151">You cannot create an <xref:System.Xml.XPath.XPathNavigator> for a <xref:System.Xml.Linq.XDocumentType> node.</span></span> <span data-ttu-id="e359e-152">Tipos de documento no participan en el modelo de datos XPath.</span><span class="sxs-lookup"><span data-stu-id="e359e-152">Document types do not participate in the XPath data model.</span></span>  
  
 <span data-ttu-id="e359e-153">Las declaraciones de Namespace se informa de izquierda a derecha.</span><span class="sxs-lookup"><span data-stu-id="e359e-153">Namespace declarations are reported from left to right.</span></span> <span data-ttu-id="e359e-154">En cambio, para <xref:System.Xml.XmlDocument> se notifican los espacios de nombres de derecha a izquierda.</span><span class="sxs-lookup"><span data-stu-id="e359e-154">In contrast, for <xref:System.Xml.XmlDocument> namespaces are reported from right to left.</span></span> <span data-ttu-id="e359e-155">Se trata de un comportamiento compatible porque no se ordenan las declaraciones de espacio de nombres en el modelo de datos XPath.</span><span class="sxs-lookup"><span data-stu-id="e359e-155">This is conformant behavior because namespace declarations are not ordered in the XPath data model.</span></span>  
  
 <span data-ttu-id="e359e-156">El método <xref:System.Xml.XPath.XPathNavigator.MoveToId%2A> no se admite para los navegadores que devuelven este método.</span><span class="sxs-lookup"><span data-stu-id="e359e-156">The method <xref:System.Xml.XPath.XPathNavigator.MoveToId%2A> is not supported for navigators that are returned by this method.</span></span>  
  
 <span data-ttu-id="e359e-157">Si usa un <xref:System.Xml.XmlNameTable> con este método para crear el <xref:System.Xml.XPath.XPathNavigator>, obtendrá un mejor rendimiento al evaluar expresiones XPath.</span><span class="sxs-lookup"><span data-stu-id="e359e-157">If you use an <xref:System.Xml.XmlNameTable> with this method to create the <xref:System.Xml.XPath.XPathNavigator>, you will get better performance when evaluating XPath expressions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="XPathEvaluate">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath.XDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e359e-158">Evalúa una expresión XPath.</span><span class="sxs-lookup"><span data-stu-id="e359e-158">Evaluates an XPath expression.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e359e-159">Aunque no se especifica el orden de las colecciones devueltas en la recomendación de XML XPath Language 1.0, este método de extensión devuelve nodos en orden del documento.</span><span class="sxs-lookup"><span data-stu-id="e359e-159">Although the ordering of returned collections is not specified in the XML XPath Language 1.0 Recommendation, this extension method returns nodes in document order.</span></span>  
  
 <span data-ttu-id="e359e-160">Tenga en cuenta que se devuelven nodos en orden del documento, incluso cuando se usa como un eje inverso, `preceding-sibling` o `ancestor-or-self`.</span><span class="sxs-lookup"><span data-stu-id="e359e-160">Note that nodes are returned in document order even when you use a reverse axis, such as `preceding-sibling` or `ancestor-or-self`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="XPathEvaluate">
      <MemberSignature Language="C#" Value="public static object XPathEvaluate (this System.Xml.Linq.XNode node, string expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object XPathEvaluate(class System.Xml.Linq.XNode node, string expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.Extensions.XPathEvaluate(System.Xml.Linq.XNode,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function XPathEvaluate (node As XNode, expression As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Object ^ XPathEvaluate(System::Xml::Linq::XNode ^ node, System::String ^ expression);" />
      <MemberSignature Language="F#" Value="static member XPathEvaluate : System.Xml.Linq.XNode * string -&gt; obj" Usage="System.Xml.XPath.Extensions.XPathEvaluate (node, expression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath.XDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Xml.Linq.XNode" RefType="this" />
        <Parameter Name="expression" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="node"><span data-ttu-id="e359e-161"><see cref="T:System.Xml.Linq.XNode" /> en el que se va a evaluar la expresión XPath.</span><span class="sxs-lookup"><span data-stu-id="e359e-161">The <see cref="T:System.Xml.Linq.XNode" /> on which to evaluate the XPath expression.</span></span></param>
        <param name="expression"><span data-ttu-id="e359e-162"><see cref="T:System.String" /> que contiene una expresión XPath.</span><span class="sxs-lookup"><span data-stu-id="e359e-162">A <see cref="T:System.String" /> that contains an XPath expression.</span></span></param>
        <summary><span data-ttu-id="e359e-163">Evalúa una expresión XPath.</span><span class="sxs-lookup"><span data-stu-id="e359e-163">Evaluates an XPath expression.</span></span></summary>
        <returns><span data-ttu-id="e359e-164">Objeto que puede contener un valor <see langword="bool" />,  <see langword="double" />,  <see langword="string" /> o <see cref="T:System.Collections.Generic.IEnumerable`1" />.</span><span class="sxs-lookup"><span data-stu-id="e359e-164">An object that can contain a <see langword="bool" />, a <see langword="double" />, a <see langword="string" />, or an <see cref="T:System.Collections.Generic.IEnumerable`1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e359e-165">Si la colección es una enumeración de elementos o atributos, puede usar el `Cast` operador para obtener una colección de <xref:System.Xml.Linq.XElement> o <xref:System.Xml.Linq.XAttribute>.</span><span class="sxs-lookup"><span data-stu-id="e359e-165">If the collection is an enumeration of elements or attributes, you can use the `Cast` operator to get a collection of <xref:System.Xml.Linq.XElement> or <xref:System.Xml.Linq.XAttribute>.</span></span>  
  
 <span data-ttu-id="e359e-166">Aunque no se especifica el orden de las colecciones devueltas en la recomendación de XML XPath Language 1.0, este método de extensión devuelve nodos en orden del documento.</span><span class="sxs-lookup"><span data-stu-id="e359e-166">Although the ordering of returned collections is not specified in the XML XPath Language 1.0 Recommendation, this extension method returns nodes in document order.</span></span>  
  
 <span data-ttu-id="e359e-167">Tenga en cuenta que se devuelven nodos en orden del documento, incluso cuando se usa como un eje inverso, `preceding-sibling` o `ancestor-or-self`.</span><span class="sxs-lookup"><span data-stu-id="e359e-167">Note that nodes are returned in document order even when you use a reverse axis, such as `preceding-sibling` or `ancestor-or-self`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e359e-168">El ejemplo siguiente se crea un árbol XML pequeño con un atributo, a continuación, usa el <xref:System.Xml.XPath.Extensions.XPathEvaluate%2A> método para recuperar el atributo.</span><span class="sxs-lookup"><span data-stu-id="e359e-168">The following example creates a small XML tree with an attribute, then uses the <xref:System.Xml.XPath.Extensions.XPathEvaluate%2A> method to retrieve the attribute.</span></span>  
  
```csharp  
  
                String xml = "<root a='value'/>";  
XDocument d = XDocument.Parse(xml);  
IEnumerable att = (IEnumerable)d.XPathEvaluate("/root/@a");  
Console.WriteLine(att.Cast<XAttribute>().FirstOrDefault());  
```  
  
```vb  
  
                Dim d As XDocument = _  
    <?xml version='1.0'?>  
    <root a='value'/>  
Dim att As IEnumerable = CType(d.XPathEvaluate("/root/@a"), IEnumerable)  
Console.WriteLine(att.Cast(Of XAttribute)().FirstOrDefault())  
```  
  
 <span data-ttu-id="e359e-169">Este ejemplo produce el siguiente resultado:</span><span class="sxs-lookup"><span data-stu-id="e359e-169">This example produces the following output:</span></span>  
  
```  
a="value"  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XPathEvaluate">
      <MemberSignature Language="C#" Value="public static object XPathEvaluate (this System.Xml.Linq.XNode node, string expression, System.Xml.IXmlNamespaceResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object XPathEvaluate(class System.Xml.Linq.XNode node, string expression, class System.Xml.IXmlNamespaceResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.Extensions.XPathEvaluate(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function XPathEvaluate (node As XNode, expression As String, resolver As IXmlNamespaceResolver) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Object ^ XPathEvaluate(System::Xml::Linq::XNode ^ node, System::String ^ expression, System::Xml::IXmlNamespaceResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="static member XPathEvaluate : System.Xml.Linq.XNode * string * System.Xml.IXmlNamespaceResolver -&gt; obj" Usage="System.Xml.XPath.Extensions.XPathEvaluate (node, expression, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath.XDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Xml.Linq.XNode" RefType="this" />
        <Parameter Name="expression" Type="System.String" />
        <Parameter Name="resolver" Type="System.Xml.IXmlNamespaceResolver" />
      </Parameters>
      <Docs>
        <param name="node"><span data-ttu-id="e359e-170"><see cref="T:System.Xml.Linq.XNode" /> en el que se va a evaluar la expresión XPath.</span><span class="sxs-lookup"><span data-stu-id="e359e-170">The <see cref="T:System.Xml.Linq.XNode" /> on which to evaluate the XPath expression.</span></span></param>
        <param name="expression"><span data-ttu-id="e359e-171"><see cref="T:System.String" /> que contiene una expresión XPath.</span><span class="sxs-lookup"><span data-stu-id="e359e-171">A <see cref="T:System.String" /> that contains an XPath expression.</span></span></param>
        <param name="resolver"><span data-ttu-id="e359e-172"><see cref="T:System.Xml.IXmlNamespaceResolver" /> para los prefijos de espacio de nombres de la expresión XPath.</span><span class="sxs-lookup"><span data-stu-id="e359e-172">A <see cref="T:System.Xml.IXmlNamespaceResolver" /> for the namespace prefixes in the XPath expression.</span></span></param>
        <summary><span data-ttu-id="e359e-173">Evalúa una expresión XPath, resolviendo los prefijos de espacio de nombres mediante el <see cref="T:System.Xml.IXmlNamespaceResolver" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="e359e-173">Evaluates an XPath expression, resolving namespace prefixes using the specified <see cref="T:System.Xml.IXmlNamespaceResolver" />.</span></span></summary>
        <returns><span data-ttu-id="e359e-174">Objeto que contiene el resultado de evaluar la expresión.</span><span class="sxs-lookup"><span data-stu-id="e359e-174">An object that contains the result of evaluating the expression.</span></span> <span data-ttu-id="e359e-175">El objeto puede ser <see langword="bool" />, <see langword="double" />, <see langword="string" /> o <see cref="T:System.Collections.Generic.IEnumerable`1" />.</span><span class="sxs-lookup"><span data-stu-id="e359e-175">The object can be a <see langword="bool" />, a <see langword="double" />, a <see langword="string" />, or an <see cref="T:System.Collections.Generic.IEnumerable`1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e359e-176">Puede usar este método para evaluar expresiones XPath que contienen los prefijos de espacio de nombres.</span><span class="sxs-lookup"><span data-stu-id="e359e-176">You can use this method to evaluate XPath expressions that contain namespace prefixes.</span></span>  
  
 <span data-ttu-id="e359e-177">Aunque no se especifica el orden de las colecciones devueltas en la recomendación de XML XPath Language 1.0, este método de extensión devuelve nodos en orden del documento.</span><span class="sxs-lookup"><span data-stu-id="e359e-177">Although the ordering of returned collections is not specified in the XML XPath Language 1.0 Recommendation, this extension method returns nodes in document order.</span></span>  
  
 <span data-ttu-id="e359e-178">Tenga en cuenta que se devuelven nodos en orden del documento, incluso cuando se usa como un eje inverso, `preceding-sibling` o `ancestor-or-self`.</span><span class="sxs-lookup"><span data-stu-id="e359e-178">Note that nodes are returned in document order even when you use a reverse axis, such as `preceding-sibling` or `ancestor-or-self`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e359e-179">El ejemplo siguiente crea un árbol XML que contiene un espacio de nombres.</span><span class="sxs-lookup"><span data-stu-id="e359e-179">The following example creates an XML tree that contains a namespace.</span></span> <span data-ttu-id="e359e-180">Usa un objeto <xref:System.Xml.XmlReader> para leer el documento XML.</span><span class="sxs-lookup"><span data-stu-id="e359e-180">It uses an <xref:System.Xml.XmlReader> to read the XML document.</span></span> <span data-ttu-id="e359e-181">Después obtiene un objeto <xref:System.Xml.XmlNameTable> de <xref:System.Xml.XmlReader> y un objeto <xref:System.Xml.XmlNamespaceManager> de <xref:System.Xml.XmlNameTable>.</span><span class="sxs-lookup"><span data-stu-id="e359e-181">It then gets an <xref:System.Xml.XmlNameTable> from the <xref:System.Xml.XmlReader>, and an <xref:System.Xml.XmlNamespaceManager> from the <xref:System.Xml.XmlNameTable>.</span></span> <span data-ttu-id="e359e-182">Usa el <xref:System.Xml.XmlNamespaceManager> al seleccionar un elemento.</span><span class="sxs-lookup"><span data-stu-id="e359e-182">It uses the <xref:System.Xml.XmlNamespaceManager> when selecting an element.</span></span>  
  
```csharp  
  
                string markup =  
@"<aw:Root xmlns:aw='http://www.adventure-works.com'>  
    <aw:Child1 aw:Att='attdata'>child one data 1</aw:Child1>  
</aw:Root>";  
XmlReader reader = XmlReader.Create(new StringReader(markup));  
XElement root = XElement.Load(reader);  
XmlNameTable nameTable = reader.NameTable;  
XmlNamespaceManager namespaceManager = new XmlNamespaceManager(nameTable);  
namespaceManager.AddNamespace("aw", "http://www.adventure-works.com");  
IEnumerable atts = (IEnumerable)root.XPathEvaluate("./aw:Child1/@aw:Att", namespaceManager);  
IEnumerable<XAttribute> attList = atts.Cast<XAttribute>();  
XAttribute att = attList.First();  
Console.WriteLine(att);  
```  
  
```vb  
  
                Dim markup As XElement = _  
    <aw:Root xmlns:aw='http://www.adventure-works.com'>  
        <aw:Child1 aw:Att='attdata'>child one data 1</aw:Child1>  
    </aw:Root>  
Dim reader As XmlReader = markup.CreateReader  
Dim nameTable As XmlNameTable = reader.NameTable  
Dim namespaceManager As XmlNamespaceManager = New XmlNamespaceManager(nameTable)  
namespaceManager.AddNamespace("aw", "http://www.adventure-works.com")  
Dim atts As IEnumerable = CType(markup.XPathEvaluate("./aw:Child1/@aw:Att", namespaceManager), IEnumerable)  
Dim attList As IEnumerable(Of XAttribute) = atts.Cast(Of XAttribute)()  
Dim att As XAttribute = attList.First()  
Console.WriteLine(att)  
```  
  
 <span data-ttu-id="e359e-183">Este ejemplo produce el siguiente resultado:</span><span class="sxs-lookup"><span data-stu-id="e359e-183">This example produces the following output:</span></span>  
  
```  
aw:Att="attdata"  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="XPathSelectElement">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath.XDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e359e-184">Selecciona un objeto <see cref="T:System.Xml.Linq.XElement" /> mediante una expresión XPath.</span><span class="sxs-lookup"><span data-stu-id="e359e-184">Selects an <see cref="T:System.Xml.Linq.XElement" /> using a XPath expression.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="XPathSelectElement">
      <MemberSignature Language="C#" Value="public static System.Xml.Linq.XElement XPathSelectElement (this System.Xml.Linq.XNode node, string expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.Linq.XElement XPathSelectElement(class System.Xml.Linq.XNode node, string expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.Extensions.XPathSelectElement(System.Xml.Linq.XNode,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function XPathSelectElement (node As XNode, expression As String) As XElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Xml::Linq::XElement ^ XPathSelectElement(System::Xml::Linq::XNode ^ node, System::String ^ expression);" />
      <MemberSignature Language="F#" Value="static member XPathSelectElement : System.Xml.Linq.XNode * string -&gt; System.Xml.Linq.XElement" Usage="System.Xml.XPath.Extensions.XPathSelectElement (node, expression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath.XDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Linq.XElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Xml.Linq.XNode" RefType="this" />
        <Parameter Name="expression" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="node"><span data-ttu-id="e359e-185"><see cref="T:System.Xml.Linq.XNode" /> en el que se va a evaluar la expresión XPath.</span><span class="sxs-lookup"><span data-stu-id="e359e-185">The <see cref="T:System.Xml.Linq.XNode" /> on which to evaluate the XPath expression.</span></span></param>
        <param name="expression"><span data-ttu-id="e359e-186"><see cref="T:System.String" /> que contiene una expresión XPath.</span><span class="sxs-lookup"><span data-stu-id="e359e-186">A <see cref="T:System.String" /> that contains an XPath expression.</span></span></param>
        <summary><span data-ttu-id="e359e-187">Selecciona un objeto <see cref="T:System.Xml.Linq.XElement" /> mediante una expresión XPath.</span><span class="sxs-lookup"><span data-stu-id="e359e-187">Selects an <see cref="T:System.Xml.Linq.XElement" /> using a XPath expression.</span></span></summary>
        <returns><span data-ttu-id="e359e-188"><see cref="T:System.Xml.Linq.XElement" /> o null.</span><span class="sxs-lookup"><span data-stu-id="e359e-188">An <see cref="T:System.Xml.Linq.XElement" />, or null.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e359e-189">El ejemplo siguiente se crea un árbol XML pequeño y usa <xref:System.Xml.XPath.Extensions.XPathSelectElement%2A> para seleccionar un único elemento.</span><span class="sxs-lookup"><span data-stu-id="e359e-189">The following example creates a small XML tree and uses <xref:System.Xml.XPath.Extensions.XPathSelectElement%2A> to select a single element.</span></span>  
  
```csharp  
  
                XElement root = new XElement("Root",  
    new XElement("Child1", 1),  
    new XElement("Child2", 2),  
    new XElement("Child3", 3),  
    new XElement("Child4", 4),  
    new XElement("Child5", 5),  
    new XElement("Child6", 6)  
);  
XElement el = root.XPathSelectElement("./Child4");  
Console.WriteLine(el);  
```  
  
```vb  
  
                Dim root As XElement = _  
    <Root>  
        <Child1>1</Child1>  
        <Child2>2</Child2>  
        <Child3>3</Child3>  
        <Child4>4</Child4>  
        <Child5>5</Child5>  
        <Child6>6</Child6>  
    </Root>  
Dim el As XElement = root.XPathSelectElement("./Child4")  
Console.WriteLine(el)  
```  
  
 <span data-ttu-id="e359e-190">Este ejemplo produce el siguiente resultado:</span><span class="sxs-lookup"><span data-stu-id="e359e-190">This example produces the following output:</span></span>  
  
```xml  
<Child4>4</Child4>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XPathSelectElement">
      <MemberSignature Language="C#" Value="public static System.Xml.Linq.XElement XPathSelectElement (this System.Xml.Linq.XNode node, string expression, System.Xml.IXmlNamespaceResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.Linq.XElement XPathSelectElement(class System.Xml.Linq.XNode node, string expression, class System.Xml.IXmlNamespaceResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.Extensions.XPathSelectElement(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function XPathSelectElement (node As XNode, expression As String, resolver As IXmlNamespaceResolver) As XElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Xml::Linq::XElement ^ XPathSelectElement(System::Xml::Linq::XNode ^ node, System::String ^ expression, System::Xml::IXmlNamespaceResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="static member XPathSelectElement : System.Xml.Linq.XNode * string * System.Xml.IXmlNamespaceResolver -&gt; System.Xml.Linq.XElement" Usage="System.Xml.XPath.Extensions.XPathSelectElement (node, expression, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath.XDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Linq.XElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Xml.Linq.XNode" RefType="this" />
        <Parameter Name="expression" Type="System.String" />
        <Parameter Name="resolver" Type="System.Xml.IXmlNamespaceResolver" />
      </Parameters>
      <Docs>
        <param name="node"><span data-ttu-id="e359e-191"><see cref="T:System.Xml.Linq.XNode" /> en el que se va a evaluar la expresión XPath.</span><span class="sxs-lookup"><span data-stu-id="e359e-191">The <see cref="T:System.Xml.Linq.XNode" /> on which to evaluate the XPath expression.</span></span></param>
        <param name="expression"><span data-ttu-id="e359e-192"><see cref="T:System.String" /> que contiene una expresión XPath.</span><span class="sxs-lookup"><span data-stu-id="e359e-192">A <see cref="T:System.String" /> that contains an XPath expression.</span></span></param>
        <param name="resolver"><span data-ttu-id="e359e-193"><see cref="T:System.Xml.IXmlNamespaceResolver" /> para los prefijos de espacio de nombres de la expresión XPath.</span><span class="sxs-lookup"><span data-stu-id="e359e-193">An <see cref="T:System.Xml.IXmlNamespaceResolver" /> for the namespace prefixes in the XPath expression.</span></span></param>
        <summary><span data-ttu-id="e359e-194">Selecciona un <see cref="T:System.Xml.Linq.XElement" /> utilizando una expresión XPath, que resuelve los prefijos de espacio de nombres mediante el <see cref="T:System.Xml.IXmlNamespaceResolver" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="e359e-194">Selects an <see cref="T:System.Xml.Linq.XElement" /> using a XPath expression, resolving namespace prefixes using the specified <see cref="T:System.Xml.IXmlNamespaceResolver" />.</span></span></summary>
        <returns><span data-ttu-id="e359e-195"><see cref="T:System.Xml.Linq.XElement" /> o null.</span><span class="sxs-lookup"><span data-stu-id="e359e-195">An <see cref="T:System.Xml.Linq.XElement" />, or null.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e359e-196">Puede usar este método para evaluar expresiones XPath que contienen los prefijos de espacio de nombres.</span><span class="sxs-lookup"><span data-stu-id="e359e-196">You can use this method to evaluate XPath expressions that contain namespace prefixes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e359e-197">El ejemplo siguiente crea un árbol XML que contiene un espacio de nombres.</span><span class="sxs-lookup"><span data-stu-id="e359e-197">The following example creates an XML tree that contains a namespace.</span></span> <span data-ttu-id="e359e-198">Usa un objeto <xref:System.Xml.XmlReader> para leer el documento XML.</span><span class="sxs-lookup"><span data-stu-id="e359e-198">It uses an <xref:System.Xml.XmlReader> to read the XML document.</span></span> <span data-ttu-id="e359e-199">Después obtiene un objeto <xref:System.Xml.XmlNameTable> de <xref:System.Xml.XmlReader> y un objeto <xref:System.Xml.XmlNamespaceManager> de <xref:System.Xml.XmlNameTable>.</span><span class="sxs-lookup"><span data-stu-id="e359e-199">It then gets an <xref:System.Xml.XmlNameTable> from the <xref:System.Xml.XmlReader>, and an <xref:System.Xml.XmlNamespaceManager> from the <xref:System.Xml.XmlNameTable>.</span></span> <span data-ttu-id="e359e-200">Usa el <xref:System.Xml.XmlNamespaceManager> al seleccionar un elemento.</span><span class="sxs-lookup"><span data-stu-id="e359e-200">It uses the <xref:System.Xml.XmlNamespaceManager> when selecting an element.</span></span>  
  
```csharp  
  
                string markup = @"  
<aw:Root xmlns:aw='http://www.adventure-works.com'>  
    <aw:Child1>child one data</aw:Child1>  
    <aw:Child2>child two data</aw:Child2>  
</aw:Root>";  
XmlReader reader = XmlReader.Create(new StringReader(markup));  
XElement root = XElement.Load(reader);  
XmlNameTable nameTable = reader.NameTable;  
XmlNamespaceManager namespaceManager = new XmlNamespaceManager(nameTable);  
namespaceManager.AddNamespace("aw", "http://www.adventure-works.com");  
XElement child1 = root.XPathSelectElement("./aw:Child1", namespaceManager);  
Console.WriteLine(child1);  
```  
  
```vb  
  
                Dim markup As XElement = _  
    <aw:Root xmlns:aw='http://www.adventure-works.com'>  
        <aw:Child1>child one data</aw:Child1>  
        <aw:Child2>child two data</aw:Child2>  
    </aw:Root>  
Dim reader As XmlReader = markup.CreateReader  
Dim nameTable As XmlNameTable = reader.NameTable  
Dim namespaceManager As XmlNamespaceManager = New XmlNamespaceManager(nameTable)  
namespaceManager.AddNamespace("aw", "http://www.adventure-works.com")  
Dim child1 As XElement = markup.XPathSelectElement("./aw:Child1", namespaceManager)  
Console.WriteLine(child1)  
```  
  
 <span data-ttu-id="e359e-201">Este ejemplo produce el siguiente resultado:</span><span class="sxs-lookup"><span data-stu-id="e359e-201">This example produces the following output:</span></span>  
  
```  
<aw:Child1 xmlns:aw="http://www.adventure-works.com">child one data</aw:Child1>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="XPathSelectElements">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath.XDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e359e-202">Selecciona una colección de elementos mediante una expresión XPath.</span><span class="sxs-lookup"><span data-stu-id="e359e-202">Selects a collection of elements using an XPath expression.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e359e-203">Aunque no se especifica el orden de las colecciones devueltas en la recomendación de XML XPath Language 1.0, este método de extensión devuelve nodos en orden del documento.</span><span class="sxs-lookup"><span data-stu-id="e359e-203">Although the ordering of returned collections is not specified in the XML XPath Language 1.0 Recommendation, this extension method returns nodes in document order.</span></span>  
  
 <span data-ttu-id="e359e-204">Tenga en cuenta que se devuelven nodos en orden del documento, incluso cuando se usa como un eje inverso, `preceding-sibling` o `ancestor-or-self`.</span><span class="sxs-lookup"><span data-stu-id="e359e-204">Note that nodes are returned in document order even when you use a reverse axis, such as `preceding-sibling` or `ancestor-or-self`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="XPathSelectElements">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;System.Xml.Linq.XElement&gt; XPathSelectElements (this System.Xml.Linq.XNode node, string expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class System.Xml.Linq.XElement&gt; XPathSelectElements(class System.Xml.Linq.XNode node, string expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.Extensions.XPathSelectElements(System.Xml.Linq.XNode,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function XPathSelectElements (node As XNode, expression As String) As IEnumerable(Of XElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::IEnumerable&lt;System::Xml::Linq::XElement ^&gt; ^ XPathSelectElements(System::Xml::Linq::XNode ^ node, System::String ^ expression);" />
      <MemberSignature Language="F#" Value="static member XPathSelectElements : System.Xml.Linq.XNode * string -&gt; seq&lt;System.Xml.Linq.XElement&gt;" Usage="System.Xml.XPath.Extensions.XPathSelectElements (node, expression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath.XDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Xml.Linq.XElement&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Xml.Linq.XNode" RefType="this" />
        <Parameter Name="expression" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="node"><span data-ttu-id="e359e-205"><see cref="T:System.Xml.Linq.XNode" /> en el que se va a evaluar la expresión XPath.</span><span class="sxs-lookup"><span data-stu-id="e359e-205">The <see cref="T:System.Xml.Linq.XNode" /> on which to evaluate the XPath expression.</span></span></param>
        <param name="expression"><span data-ttu-id="e359e-206"><see cref="T:System.String" /> que contiene una expresión XPath.</span><span class="sxs-lookup"><span data-stu-id="e359e-206">A <see cref="T:System.String" /> that contains an XPath expression.</span></span></param>
        <summary><span data-ttu-id="e359e-207">Selecciona una colección de elementos mediante una expresión XPath.</span><span class="sxs-lookup"><span data-stu-id="e359e-207">Selects a collection of elements using an XPath expression.</span></span></summary>
        <returns><span data-ttu-id="e359e-208"><see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XElement" /> que contiene los elementos seleccionados.</span><span class="sxs-lookup"><span data-stu-id="e359e-208">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Xml.Linq.XElement" /> that contains the selected elements.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e359e-209">Aunque no se especifica el orden de las colecciones devueltas en la recomendación de XML XPath Language 1.0, este método de extensión devuelve nodos en orden del documento.</span><span class="sxs-lookup"><span data-stu-id="e359e-209">Although the ordering of returned collections is not specified in the XML XPath Language 1.0 Recommendation, this extension method returns nodes in document order.</span></span>  
  
 <span data-ttu-id="e359e-210">Tenga en cuenta que se devuelven nodos en orden del documento, incluso cuando se usa como un eje inverso, `preceding-sibling` o `ancestor-or-self`.</span><span class="sxs-lookup"><span data-stu-id="e359e-210">Note that nodes are returned in document order even when you use a reverse axis, such as `preceding-sibling` or `ancestor-or-self`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e359e-211">En el ejemplo siguiente se crea un árbol XML pequeño y se utiliza <xref:System.Xml.XPath.Extensions.XPathSelectElements%2A> para seleccionar un conjunto de elementos.</span><span class="sxs-lookup"><span data-stu-id="e359e-211">The following example creates a small XML tree and uses <xref:System.Xml.XPath.Extensions.XPathSelectElements%2A> to select a set of elements.</span></span>  
  
```csharp  
  
                XElement root = new XElement("Root",  
    new XElement("Child1", 1),  
    new XElement("Child1", 2),  
    new XElement("Child1", 3),  
    new XElement("Child2", 4),  
    new XElement("Child2", 5),  
    new XElement("Child2", 6)  
);  
IEnumerable<XElement> list = root.XPathSelectElements("./Child2");  
foreach (XElement el in list)  
    Console.WriteLine(el);  
```  
  
```vb  
  
                Dim root As XElement = _  
    <Root>  
        <Child1>1</Child1>  
        <Child1>2</Child1>  
        <Child1>3</Child1>  
        <Child2>4</Child2>  
        <Child2>5</Child2>  
        <Child2>6</Child2>  
    </Root>  
Dim list As IEnumerable(Of XElement) = root.XPathSelectElements("./Child2")  
For Each el As XElement In list  
    Console.WriteLine(el)  
Next  
```  
  
 <span data-ttu-id="e359e-212">Este ejemplo produce el siguiente resultado:</span><span class="sxs-lookup"><span data-stu-id="e359e-212">This example produces the following output:</span></span>  
  
```xml  
<Child2>4</Child2>  
<Child2>5</Child2>  
<Child2>6</Child2>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XPathSelectElements">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;System.Xml.Linq.XElement&gt; XPathSelectElements (this System.Xml.Linq.XNode node, string expression, System.Xml.IXmlNamespaceResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class System.Xml.Linq.XElement&gt; XPathSelectElements(class System.Xml.Linq.XNode node, string expression, class System.Xml.IXmlNamespaceResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XPath.Extensions.XPathSelectElements(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function XPathSelectElements (node As XNode, expression As String, resolver As IXmlNamespaceResolver) As IEnumerable(Of XElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::IEnumerable&lt;System::Xml::Linq::XElement ^&gt; ^ XPathSelectElements(System::Xml::Linq::XNode ^ node, System::String ^ expression, System::Xml::IXmlNamespaceResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="static member XPathSelectElements : System.Xml.Linq.XNode * string * System.Xml.IXmlNamespaceResolver -&gt; seq&lt;System.Xml.Linq.XElement&gt;" Usage="System.Xml.XPath.Extensions.XPathSelectElements (node, expression, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XPath.XDocument</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Xml.Linq.XElement&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Xml.Linq.XNode" RefType="this" />
        <Parameter Name="expression" Type="System.String" />
        <Parameter Name="resolver" Type="System.Xml.IXmlNamespaceResolver" />
      </Parameters>
      <Docs>
        <param name="node"><span data-ttu-id="e359e-213"><see cref="T:System.Xml.Linq.XNode" /> en el que se va a evaluar la expresión XPath.</span><span class="sxs-lookup"><span data-stu-id="e359e-213">The <see cref="T:System.Xml.Linq.XNode" /> on which to evaluate the XPath expression.</span></span></param>
        <param name="expression"><span data-ttu-id="e359e-214"><see cref="T:System.String" /> que contiene una expresión XPath.</span><span class="sxs-lookup"><span data-stu-id="e359e-214">A <see cref="T:System.String" /> that contains an XPath expression.</span></span></param>
        <param name="resolver"><span data-ttu-id="e359e-215"><see cref="T:System.Xml.IXmlNamespaceResolver" /> para los prefijos de espacio de nombres de la expresión XPath.</span><span class="sxs-lookup"><span data-stu-id="e359e-215">A <see cref="T:System.Xml.IXmlNamespaceResolver" /> for the namespace prefixes in the XPath expression.</span></span></param>
        <summary><span data-ttu-id="e359e-216">Selecciona una colección de elementos utilizando una expresión XPath, que resuelve los prefijos de espacio de nombres mediante el <see cref="T:System.Xml.IXmlNamespaceResolver" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="e359e-216">Selects a collection of elements using an XPath expression, resolving namespace prefixes using the specified <see cref="T:System.Xml.IXmlNamespaceResolver" />.</span></span></summary>
        <returns><span data-ttu-id="e359e-217"><see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Xml.Linq.XElement" /> que contiene los elementos seleccionados.</span><span class="sxs-lookup"><span data-stu-id="e359e-217">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Xml.Linq.XElement" /> that contains the selected elements.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e359e-218">Puede usar este método para evaluar expresiones XPath que contienen los prefijos de espacio de nombres.</span><span class="sxs-lookup"><span data-stu-id="e359e-218">You can use this method to evaluate XPath expressions that contain namespace prefixes.</span></span>  
  
 <span data-ttu-id="e359e-219">Aunque no se especifica el orden de las colecciones devueltas en la recomendación de XML XPath Language 1.0, este método de extensión devuelve nodos en orden del documento.</span><span class="sxs-lookup"><span data-stu-id="e359e-219">Although the ordering of returned collections is not specified in the XML XPath Language 1.0 Recommendation, this extension method returns nodes in document order.</span></span>  
  
 <span data-ttu-id="e359e-220">Tenga en cuenta que se devuelven nodos en orden del documento, incluso cuando se usa como un eje inverso, `preceding-sibling` o `ancestor-or-self`.</span><span class="sxs-lookup"><span data-stu-id="e359e-220">Note that nodes are returned in document order even when you use a reverse axis, such as `preceding-sibling` or `ancestor-or-self`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e359e-221">Este ejemplo crea un árbol XML que contiene un espacio de nombres.</span><span class="sxs-lookup"><span data-stu-id="e359e-221">This example creates an XML tree that contains a namespace.</span></span> <span data-ttu-id="e359e-222">Usa un objeto <xref:System.Xml.XmlReader> para leer el documento XML.</span><span class="sxs-lookup"><span data-stu-id="e359e-222">It uses an <xref:System.Xml.XmlReader> to read the XML document.</span></span> <span data-ttu-id="e359e-223">Después obtiene un objeto <xref:System.Xml.XmlNameTable> de <xref:System.Xml.XmlReader> y un objeto <xref:System.Xml.XmlNamespaceManager> de <xref:System.Xml.XmlNameTable>.</span><span class="sxs-lookup"><span data-stu-id="e359e-223">It then gets an <xref:System.Xml.XmlNameTable> from the <xref:System.Xml.XmlReader>, and an <xref:System.Xml.XmlNamespaceManager> from the <xref:System.Xml.XmlNameTable>.</span></span> <span data-ttu-id="e359e-224">Usa el <xref:System.Xml.XmlNamespaceManager> al seleccionar la lista de elementos.</span><span class="sxs-lookup"><span data-stu-id="e359e-224">It uses the <xref:System.Xml.XmlNamespaceManager> when selecting the list of elements.</span></span>  
  
```csharp  
  
                string markup = @"  
<aw:Root xmlns:aw='http://www.adventure-works.com'>  
    <aw:Child1>child one data 1</aw:Child1>  
    <aw:Child1>child one data 2</aw:Child1>  
    <aw:Child1>child one data 3</aw:Child1>  
    <aw:Child2>child two data 4</aw:Child2>  
    <aw:Child2>child two data 5</aw:Child2>  
    <aw:Child2>child two data 6</aw:Child2>  
</aw:Root>";  
XmlReader reader = XmlReader.Create(new StringReader(markup));  
XElement root = XElement.Load(reader);  
XmlNameTable nameTable = reader.NameTable;  
XmlNamespaceManager namespaceManager = new XmlNamespaceManager(nameTable);  
namespaceManager.AddNamespace("aw", "http://www.adventure-works.com");  
IEnumerable<XElement> elements = root.XPathSelectElements("./aw:Child1", namespaceManager);  
foreach (XElement el in elements)  
    Console.WriteLine(el);  
```  
  
```vb  
  
                Dim markup As XElement = _  
<aw:Root xmlns:aw="http://www.adventure-works.com">  
    <aw:Child1>child one data 1</aw:Child1>  
    <aw:Child1>child one data 2</aw:Child1>  
    <aw:Child1>child one data 3</aw:Child1>  
    <aw:Child2>child two data 4</aw:Child2>  
    <aw:Child2>child two data 5</aw:Child2>  
    <aw:Child2>child two data 6</aw:Child2>  
</aw:Root>  
Dim reader As XmlReader = markup.CreateReader  
Dim nameTable As XmlNameTable = reader.NameTable  
Dim namespaceManager As XmlNamespaceManager = New XmlNamespaceManager(nameTable)  
namespaceManager.AddNamespace("aw", "http://www.adventure-works.com")  
Dim elements As IEnumerable(Of XElement) = markup.XPathSelectElements("./aw:Child1", namespaceManager)  
For Each el As XElement In elements  
    Console.WriteLine(el)  
Next  
```  
  
 <span data-ttu-id="e359e-225">Este ejemplo produce el siguiente resultado:</span><span class="sxs-lookup"><span data-stu-id="e359e-225">This example produces the following output:</span></span>  
  
```xml  
<aw:Child1 xmlns:aw="http://www.adventure-works.com">child one data 1</aw:Child1>  
<aw:Child1 xmlns:aw="http://www.adventure-works.com">child one data 2</aw:Child1>  
<aw:Child1 xmlns:aw="http://www.adventure-works.com">child one data 3</aw:Child1>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
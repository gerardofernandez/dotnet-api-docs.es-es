<Type Name="CodeCatchClause" FullName="System.CodeDom.CodeCatchClause">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9cb23a134b273adb8f706d006f8e28dd50577854" /><Meta Name="ms.sourcegitcommit" Value="220917117f9d774aaa482439aa7324e39dc1f5b6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="02/25/2019" /><Meta Name="ms.locfileid" Value="56762929" /></Metadata><TypeSignature Language="C#" Value="public class CodeCatchClause" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit CodeCatchClause extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.CodeDom.CodeCatchClause" />
  <TypeSignature Language="VB.NET" Value="Public Class CodeCatchClause" />
  <TypeSignature Language="C++ CLI" Value="public ref class CodeCatchClause" />
  <TypeSignature Language="F#" Value="type CodeCatchClause = class" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.CodeDom</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="ed3ed-101">Representa un bloque de excepción <see langword="catch" /> de una instrucción <see langword="try/catch" />.</span><span class="sxs-lookup"><span data-stu-id="ed3ed-101">Represents a <see langword="catch" /> exception block of a <see langword="try/catch" /> statement.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed3ed-102"><xref:System.CodeDom.CodeCatchClause> se puede usar para representar un `catch` bloque de excepción de un `try/catch` instrucción.</span><span class="sxs-lookup"><span data-stu-id="ed3ed-102"><xref:System.CodeDom.CodeCatchClause> can be used to represent a `catch` exception block of a `try/catch` statement.</span></span>  
  
 <span data-ttu-id="ed3ed-103">El <xref:System.CodeDom.CodeCatchClause.CatchExceptionType%2A> propiedad especifica el tipo de excepción catch.</span><span class="sxs-lookup"><span data-stu-id="ed3ed-103">The <xref:System.CodeDom.CodeCatchClause.CatchExceptionType%2A> property specifies the type of exception to catch.</span></span> <span data-ttu-id="ed3ed-104">El <xref:System.CodeDom.CodeCatchClause.LocalName%2A> propiedad especifica un nombre para la variable que representa la excepción que se ha detectado.</span><span class="sxs-lookup"><span data-stu-id="ed3ed-104">The <xref:System.CodeDom.CodeCatchClause.LocalName%2A> property specifies a name for the variable representing the exception that has been caught.</span></span> <span data-ttu-id="ed3ed-105">El <xref:System.CodeDom.CodeCatchClause.Statements%2A> propiedad de colección contiene las instrucciones para la `catch` bloque.</span><span class="sxs-lookup"><span data-stu-id="ed3ed-105">The <xref:System.CodeDom.CodeCatchClause.Statements%2A> collection property contains the statements for the `catch` block.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ed3ed-106">Ejemplo de código siguiente muestra cómo utilizar <xref:System.CodeDom.CodeCatchClause> para definir excepciones cláusulas de try... el bloque catch.</span><span class="sxs-lookup"><span data-stu-id="ed3ed-106">The following example code demonstrates using <xref:System.CodeDom.CodeCatchClause> objects to define exception handling clauses of a try...catch block.</span></span>  
  
 [!code-cpp[CodeTryCatchFinallyExample#2](~/samples/snippets/cpp/VS_Snippets_CLR/CodeTryCatchFinallyExample/CPP/codetrycatchfinallyexample.cpp#2)]
 [!code-csharp[CodeTryCatchFinallyExample#2](~/samples/snippets/csharp/VS_Snippets_CLR/CodeTryCatchFinallyExample/CS/codetrycatchfinallyexample.cs#2)]
 [!code-vb[CodeTryCatchFinallyExample#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeTryCatchFinallyExample/VB/codetrycatchfinallyexample.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.CodeDom.CodeCatchClauseCollection" />
    <altmember cref="T:System.CodeDom.CodeTryCatchFinallyStatement" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ed3ed-107">Inicializa una nueva instancia de la clase <see cref="T:System.CodeDom.CodeCatchClause" />.</span><span class="sxs-lookup"><span data-stu-id="ed3ed-107">Initializes a new instance of the <see cref="T:System.CodeDom.CodeCatchClause" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeCatchClause ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeCatchClause.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeCatchClause();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ed3ed-108">Inicializa una nueva instancia de la clase <see cref="T:System.CodeDom.CodeCatchClause" />.</span><span class="sxs-lookup"><span data-stu-id="ed3ed-108">Initializes a new instance of the <see cref="T:System.CodeDom.CodeCatchClause" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeCatchClause (string localName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string localName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeCatchClause.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (localName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeCatchClause(System::String ^ localName);" />
      <MemberSignature Language="F#" Value="new System.CodeDom.CodeCatchClause : string -&gt; System.CodeDom.CodeCatchClause" Usage="new System.CodeDom.CodeCatchClause localName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName"><span data-ttu-id="ed3ed-109">Nombre de la variable local declarada en la conversión de la cláusula catch para la excepción.</span><span class="sxs-lookup"><span data-stu-id="ed3ed-109">The name of the local variable declared in the catch clause for the exception.</span></span> <span data-ttu-id="ed3ed-110">De uso opcional.</span><span class="sxs-lookup"><span data-stu-id="ed3ed-110">This is optional.</span></span></param>
        <summary><span data-ttu-id="ed3ed-111">Inicializa una nueva instancia de la clase <see cref="T:System.CodeDom.CodeCatchClause" /> utilizando el nombre de la variable local especificada para la excepción.</span><span class="sxs-lookup"><span data-stu-id="ed3ed-111">Initializes a new instance of the <see cref="T:System.CodeDom.CodeCatchClause" /> class using the specified local variable name for the exception.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeParameterDeclarationExpression" />
        <altmember cref="T:System.CodeDom.CodeStatement" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeCatchClause (string localName, System.CodeDom.CodeTypeReference catchExceptionType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string localName, class System.CodeDom.CodeTypeReference catchExceptionType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeCatchClause.#ctor(System.String,System.CodeDom.CodeTypeReference)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (localName As String, catchExceptionType As CodeTypeReference)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeCatchClause(System::String ^ localName, System::CodeDom::CodeTypeReference ^ catchExceptionType);" />
      <MemberSignature Language="F#" Value="new System.CodeDom.CodeCatchClause : string * System.CodeDom.CodeTypeReference -&gt; System.CodeDom.CodeCatchClause" Usage="new System.CodeDom.CodeCatchClause (localName, catchExceptionType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="catchExceptionType" Type="System.CodeDom.CodeTypeReference" />
      </Parameters>
      <Docs>
        <param name="localName"><span data-ttu-id="ed3ed-112">Nombre de la variable local declarada en la conversión de la cláusula catch para la excepción.</span><span class="sxs-lookup"><span data-stu-id="ed3ed-112">The name of the local variable declared in the catch clause for the exception.</span></span> <span data-ttu-id="ed3ed-113">De uso opcional.</span><span class="sxs-lookup"><span data-stu-id="ed3ed-113">This is optional.</span></span></param>
        <param name="catchExceptionType"><span data-ttu-id="ed3ed-114"><see cref="T:System.CodeDom.CodeTypeReference" /> que indica el tipo de excepción que se desea detectar.</span><span class="sxs-lookup"><span data-stu-id="ed3ed-114">A <see cref="T:System.CodeDom.CodeTypeReference" /> that indicates the type of exception to catch.</span></span></param>
        <summary><span data-ttu-id="ed3ed-115">Inicializa una nueva instancia de la clase <see cref="T:System.CodeDom.CodeCatchClause" /> utilizando la variable local especificada para la excepción.</span><span class="sxs-lookup"><span data-stu-id="ed3ed-115">Initializes a new instance of the <see cref="T:System.CodeDom.CodeCatchClause" /> class using the specified local variable name for the exception and exception type.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeCatchClause (string localName, System.CodeDom.CodeTypeReference catchExceptionType, params System.CodeDom.CodeStatement[] statements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string localName, class System.CodeDom.CodeTypeReference catchExceptionType, class System.CodeDom.CodeStatement[] statements) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeCatchClause.#ctor(System.String,System.CodeDom.CodeTypeReference,System.CodeDom.CodeStatement[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (localName As String, catchExceptionType As CodeTypeReference, ParamArray statements As CodeStatement())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeCatchClause(System::String ^ localName, System::CodeDom::CodeTypeReference ^ catchExceptionType, ... cli::array &lt;System::CodeDom::CodeStatement ^&gt; ^ statements);" />
      <MemberSignature Language="F#" Value="new System.CodeDom.CodeCatchClause : string * System.CodeDom.CodeTypeReference * System.CodeDom.CodeStatement[] -&gt; System.CodeDom.CodeCatchClause" Usage="new System.CodeDom.CodeCatchClause (localName, catchExceptionType, statements)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="catchExceptionType" Type="System.CodeDom.CodeTypeReference" />
        <Parameter Name="statements" Type="System.CodeDom.CodeStatement[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-2.1">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="localName"><span data-ttu-id="ed3ed-116">Nombre de la variable local declarada en la conversión de la cláusula catch para la excepción.</span><span class="sxs-lookup"><span data-stu-id="ed3ed-116">The name of the local variable declared in the catch clause for the exception.</span></span> <span data-ttu-id="ed3ed-117">De uso opcional.</span><span class="sxs-lookup"><span data-stu-id="ed3ed-117">This is optional.</span></span></param>
        <param name="catchExceptionType"><span data-ttu-id="ed3ed-118"><see cref="T:System.CodeDom.CodeTypeReference" /> que indica el tipo de excepción que se desea detectar.</span><span class="sxs-lookup"><span data-stu-id="ed3ed-118">A <see cref="T:System.CodeDom.CodeTypeReference" /> that indicates the type of exception to catch.</span></span></param>
        <param name="statements"><span data-ttu-id="ed3ed-119">Matriz de objetos <see cref="T:System.CodeDom.CodeStatement" /> que representa el contenido del bloque catch.</span><span class="sxs-lookup"><span data-stu-id="ed3ed-119">An array of <see cref="T:System.CodeDom.CodeStatement" /> objects that represent the contents of the catch block.</span></span></param>
        <summary><span data-ttu-id="ed3ed-120">Inicializa una nueva instancia de la clase <see cref="T:System.CodeDom.CodeCatchClause" /> utilizando el nombre de la variable local para la excepción, el tipo de excepción y la colección de instrucciones especificados.</span><span class="sxs-lookup"><span data-stu-id="ed3ed-120">Initializes a new instance of the <see cref="T:System.CodeDom.CodeCatchClause" /> class using the specified local variable name for the exception, exception type and statement collection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CatchExceptionType">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeTypeReference CatchExceptionType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeTypeReference CatchExceptionType" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeCatchClause.CatchExceptionType" />
      <MemberSignature Language="VB.NET" Value="Public Property CatchExceptionType As CodeTypeReference" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::CodeTypeReference ^ CatchExceptionType { System::CodeDom::CodeTypeReference ^ get(); void set(System::CodeDom::CodeTypeReference ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CatchExceptionType : System.CodeDom.CodeTypeReference with get, set" Usage="System.CodeDom.CodeCatchClause.CatchExceptionType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeTypeReference</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ed3ed-121">Obtiene o establece el tipo de excepción que se debe controlar con el bloque catch.</span><span class="sxs-lookup"><span data-stu-id="ed3ed-121">Gets or sets the type of the exception to handle with the catch block.</span></span></summary>
        <value><span data-ttu-id="ed3ed-122"><see cref="T:System.CodeDom.CodeTypeReference" /> que indica el tipo de excepción que se va a controlar.</span><span class="sxs-lookup"><span data-stu-id="ed3ed-122">A <see cref="T:System.CodeDom.CodeTypeReference" /> that indicates the type of the exception to handle.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed3ed-123">Si no se especifica un valor para esta propiedad, el valor de esta propiedad tiene como valor predeterminado para <xref:System.Exception>.</span><span class="sxs-lookup"><span data-stu-id="ed3ed-123">If a value for this property is not specified, the value of this property defaults to <xref:System.Exception>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.CodeDom.CodeParameterDeclarationExpression" />
      </Docs>
    </Member>
    <Member MemberName="LocalName">
      <MemberSignature Language="C#" Value="public string LocalName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalName" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeCatchClause.LocalName" />
      <MemberSignature Language="VB.NET" Value="Public Property LocalName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ LocalName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.LocalName : string with get, set" Usage="System.CodeDom.CodeCatchClause.LocalName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ed3ed-124">Obtiene o establece el nombre de variable de la excepción que controla la cláusula <see langword="catch" />.</span><span class="sxs-lookup"><span data-stu-id="ed3ed-124">Gets or sets the variable name of the exception that the <see langword="catch" /> clause handles.</span></span></summary>
        <value><span data-ttu-id="ed3ed-125">Nombre de la variable de la excepción que controla la cláusula <see langword="catch" />.</span><span class="sxs-lookup"><span data-stu-id="ed3ed-125">The name for the exception variable that the <see langword="catch" /> clause handles.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed3ed-126">Esta propiedad especifica el nombre de la variable local para la excepción.</span><span class="sxs-lookup"><span data-stu-id="ed3ed-126">This property specifies the name of the local variable for the exception.</span></span> <span data-ttu-id="ed3ed-127">Esta variable local es opcional.</span><span class="sxs-lookup"><span data-stu-id="ed3ed-127">This local variable is optional.</span></span> <span data-ttu-id="ed3ed-128">De forma predeterminada, la cláusula no tiene esta variable.</span><span class="sxs-lookup"><span data-stu-id="ed3ed-128">By default, the clause does not have this variable.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Statements">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeStatementCollection Statements { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeStatementCollection Statements" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeCatchClause.Statements" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Statements As CodeStatementCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::CodeStatementCollection ^ Statements { System::CodeDom::CodeStatementCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Statements : System.CodeDom.CodeStatementCollection" Usage="System.CodeDom.CodeCatchClause.Statements" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeStatementCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ed3ed-129">Obtiene las instrucciones dentro del bloque catch.</span><span class="sxs-lookup"><span data-stu-id="ed3ed-129">Gets the statements within the catch block.</span></span></summary>
        <value><span data-ttu-id="ed3ed-130"><see cref="T:System.CodeDom.CodeStatementCollection" /> que contiene las instrucciones dentro del bloque catch.</span><span class="sxs-lookup"><span data-stu-id="ed3ed-130">A <see cref="T:System.CodeDom.CodeStatementCollection" /> containing the statements within the catch block.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeStatementCollection" />
        <altmember cref="T:System.CodeDom.CodeStatement" />
      </Docs>
    </Member>
  </Members>
</Type>
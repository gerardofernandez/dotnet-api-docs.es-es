<Type Name="IncrementalHash" FullName="System.Security.Cryptography.IncrementalHash">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1a98258c7d2fdb6387ce9cbf4717c0e7b248bc43" /><Meta Name="ms.sourcegitcommit" Value="8e213bb5e6801f6e29861ba72664978ad00e34fa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="02/18/2019" /><Meta Name="ms.locfileid" Value="56369124" /></Metadata><TypeSignature Language="C#" Value="public sealed class IncrementalHash : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit IncrementalHash extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.IncrementalHash" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class IncrementalHash&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class IncrementalHash sealed : IDisposable" />
  <TypeSignature Language="F#" Value="type IncrementalHash = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.3.0.0</AssemblyVersion>
    <AssemblyVersion>4.3.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netstandard-2.0">
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="6236c-101">Proporciona compatibilidad para calcular un hash o un valor de código de autentificación de mensajes basado en hash (HMAC) incrementalmente a través de varios segmentos.</span><span class="sxs-lookup"><span data-stu-id="6236c-101">Provides support for computing a hash or Hash-based Message Authentication Code (HMAC) value incrementally across several segments.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AlgorithmName">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.HashAlgorithmName AlgorithmName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Cryptography.HashAlgorithmName AlgorithmName" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.IncrementalHash.AlgorithmName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AlgorithmName As HashAlgorithmName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::HashAlgorithmName AlgorithmName { System::Security::Cryptography::HashAlgorithmName get(); };" />
      <MemberSignature Language="F#" Value="member this.AlgorithmName : System.Security.Cryptography.HashAlgorithmName" Usage="System.Security.Cryptography.IncrementalHash.AlgorithmName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.HashAlgorithmName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6236c-102">Obtiene el nombre del algoritmo que se está realizando.</span><span class="sxs-lookup"><span data-stu-id="6236c-102">Gets the name of the algorithm being performed.</span></span> <span data-ttu-id="6236c-103">Los algoritmos HMAC van precedidos de "HMAC" para distinguirlos de un resumen sin clave.</span><span class="sxs-lookup"><span data-stu-id="6236c-103">HMAC algorithms are prepended with "HMAC" to distinguish them from an unkeyed digest.</span></span></summary>
        <value><span data-ttu-id="6236c-104">Nombre del algoritmo que se está realizando.</span><span class="sxs-lookup"><span data-stu-id="6236c-104">The name of the algorithm being performed.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendData">
      <MemberSignature Language="C#" Value="public void AppendData (byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendData(unsigned int8[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.IncrementalHash.AppendData(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendData (data As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendData(cli::array &lt;System::Byte&gt; ^ data);" />
      <MemberSignature Language="F#" Value="member this.AppendData : byte[] -&gt; unit" Usage="incrementalHash.AppendData data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="6236c-105">Datos que se van a procesar.</span><span class="sxs-lookup"><span data-stu-id="6236c-105">The data to process.</span></span></param>
        <summary><span data-ttu-id="6236c-106">Anexa los datos especificados a los datos ya procesados en el hash o HMAC.</span><span class="sxs-lookup"><span data-stu-id="6236c-106">Appends the specified data to the data already processed in the hash or HMAC.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6236c-107"><paramref name="data" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6236c-107"><paramref name="data" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="6236c-108">Ya se ha eliminado el objeto <see cref="T:System.Security.Cryptography.IncrementalHash" />.</span><span class="sxs-lookup"><span data-stu-id="6236c-108">The <see cref="T:System.Security.Cryptography.IncrementalHash" /> object has already been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AppendData">
      <MemberSignature Language="C#" Value="public void AppendData (ReadOnlySpan&lt;byte&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendData(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.IncrementalHash.AppendData(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendData (data As ReadOnlySpan(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendData(ReadOnlySpan&lt;System::Byte&gt; data);" />
      <MemberSignature Language="F#" Value="member this.AppendData : ReadOnlySpan&lt;byte&gt; -&gt; unit" Usage="incrementalHash.AppendData data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendData">
      <MemberSignature Language="C#" Value="public void AppendData (byte[] data, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendData(unsigned int8[] data, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.IncrementalHash.AppendData(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendData (data As Byte(), offset As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendData(cli::array &lt;System::Byte&gt; ^ data, int offset, int count);" />
      <MemberSignature Language="F#" Value="member this.AppendData : byte[] * int * int -&gt; unit" Usage="incrementalHash.AppendData (data, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="6236c-109">Datos que se van a procesar.</span><span class="sxs-lookup"><span data-stu-id="6236c-109">The data to process.</span></span></param>
        <param name="offset"><span data-ttu-id="6236c-110">Desplazamiento en la matriz de bytes a partir del cual se empezarán a usar los datos.</span><span class="sxs-lookup"><span data-stu-id="6236c-110">The offset into the byte array from which to begin using data.</span></span></param>
        <param name="count"><span data-ttu-id="6236c-111">Número de bytes que se va a usar desde <paramref name="data" />.</span><span class="sxs-lookup"><span data-stu-id="6236c-111">The number of bytes to use from <paramref name="data" />.</span></span></param>
        <summary><span data-ttu-id="6236c-112">Anexa el número especificado de bytes a partir de los datos especificados, comenzando en el desplazamiento especificado, a los datos ya procesados en el hash o en el código de autentificación de mensajes basado en hash (HMAC).</span><span class="sxs-lookup"><span data-stu-id="6236c-112">Appends the specified number of bytes from the specified data, starting at the specified offset, to the data already processed in the hash or Hash-based Message Authentication Code (HMAC).</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6236c-113"><paramref name="data" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6236c-113"><paramref name="data" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="6236c-114"><paramref name="count" /> o <paramref name="offset" /> es negativo.</span><span class="sxs-lookup"><span data-stu-id="6236c-114"><paramref name="count" /> or <paramref name="offset" /> is negative.</span></span>  
  
<span data-ttu-id="6236c-115">O bien</span><span class="sxs-lookup"><span data-stu-id="6236c-115">-or-</span></span> 
 <span data-ttu-id="6236c-116"><paramref name="count" /> es mayor que la longitud de <paramref name="data" />.</span><span class="sxs-lookup"><span data-stu-id="6236c-116"><paramref name="count" /> is larger than the length of <paramref name="data" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6236c-117">La suma de <paramref name="offset" /> y <paramref name="count" /> es mayor que la longitud de los datos.</span><span class="sxs-lookup"><span data-stu-id="6236c-117">The sum of <paramref name="offset" /> and <paramref name="count" /> is larger than the data length.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="6236c-118">Ya se ha eliminado el objeto <see cref="T:System.Security.Cryptography.IncrementalHash" />.</span><span class="sxs-lookup"><span data-stu-id="6236c-118">The <see cref="T:System.Security.Cryptography.IncrementalHash" /> object has already been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateHash">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.IncrementalHash CreateHash (System.Security.Cryptography.HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.IncrementalHash CreateHash(valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.IncrementalHash.CreateHash(System.Security.Cryptography.HashAlgorithmName)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateHash (hashAlgorithm As HashAlgorithmName) As IncrementalHash" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::IncrementalHash ^ CreateHash(System::Security::Cryptography::HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="F#" Value="static member CreateHash : System.Security.Cryptography.HashAlgorithmName -&gt; System.Security.Cryptography.IncrementalHash" Usage="System.Security.Cryptography.IncrementalHash.CreateHash hashAlgorithm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.IncrementalHash</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" />
      </Parameters>
      <Docs>
        <param name="hashAlgorithm"><span data-ttu-id="6236c-119">Nombre del algoritmo hash que se realizará.</span><span class="sxs-lookup"><span data-stu-id="6236c-119">The name of the hash algorithm to perform.</span></span></param>
        <summary><span data-ttu-id="6236c-120">Crea <see cref="T:System.Security.Cryptography.IncrementalHash" /> para el algoritmo especificado.</span><span class="sxs-lookup"><span data-stu-id="6236c-120">Creates an <see cref="T:System.Security.Cryptography.IncrementalHash" /> for the specified algorithm.</span></span></summary>
        <returns><span data-ttu-id="6236c-121">Una instancia de <see cref="T:System.Security.Cryptography.IncrementalHash" /> preparada para calcular el algoritmo hash especificado por <paramref name="hashAlgorithm" />.</span><span class="sxs-lookup"><span data-stu-id="6236c-121">An <see cref="T:System.Security.Cryptography.IncrementalHash" /> instance ready to compute the hash algorithm specified by <paramref name="hashAlgorithm" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6236c-122"><paramref name="hashAlgorithm" />.<see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /></span><span class="sxs-lookup"><span data-stu-id="6236c-122"><paramref name="hashAlgorithm" />.<see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /></span></span> <span data-ttu-id="6236c-123">es <see langword="null" /> o una cadena vacía.</span><span class="sxs-lookup"><span data-stu-id="6236c-123">is <see langword="null" /> or an empty string.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="6236c-124"><paramref name="hashAlgorithm" /> no es un algoritmo hash conocido.</span><span class="sxs-lookup"><span data-stu-id="6236c-124"><paramref name="hashAlgorithm" /> is not a known hash algorithm.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateHMAC">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.IncrementalHash CreateHMAC (System.Security.Cryptography.HashAlgorithmName hashAlgorithm, byte[] key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.IncrementalHash CreateHMAC(valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm, unsigned int8[] key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.IncrementalHash.CreateHMAC(System.Security.Cryptography.HashAlgorithmName,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateHMAC (hashAlgorithm As HashAlgorithmName, key As Byte()) As IncrementalHash" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::IncrementalHash ^ CreateHMAC(System::Security::Cryptography::HashAlgorithmName hashAlgorithm, cli::array &lt;System::Byte&gt; ^ key);" />
      <MemberSignature Language="F#" Value="static member CreateHMAC : System.Security.Cryptography.HashAlgorithmName * byte[] -&gt; System.Security.Cryptography.IncrementalHash" Usage="System.Security.Cryptography.IncrementalHash.CreateHMAC (hashAlgorithm, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.IncrementalHash</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" />
        <Parameter Name="key" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="hashAlgorithm"><span data-ttu-id="6236c-125">Nombre del algoritmo hash que se realizará en el HMAC.</span><span class="sxs-lookup"><span data-stu-id="6236c-125">The name of the hash algorithm to perform within the HMAC.</span></span></param>
        <param name="key"><span data-ttu-id="6236c-126">Clave secreta del HMAC.</span><span class="sxs-lookup"><span data-stu-id="6236c-126">The secret key for the HMAC.</span></span> <span data-ttu-id="6236c-127">La clave puede tener cualquier longitud, pero se aplicará un hash a una clave mayor que el tamaño de salida del algoritmo hash especificado para derivar una clave de tamaño adecuado.</span><span class="sxs-lookup"><span data-stu-id="6236c-127">The key can be of any length, but a key longer than the output size of the specified hash algorithm will be hashed to derive a correctly-sized key.</span></span> <span data-ttu-id="6236c-128">Por lo tanto, el tamaño de la clave secreta recomendado es el tamaño de salida del algoritmo hash especificado.</span><span class="sxs-lookup"><span data-stu-id="6236c-128">Therefore, the recommended size of the secret key is the output size of the specified hash algorithm.</span></span></param>
        <summary><span data-ttu-id="6236c-129">Crea un elemento <see cref="T:System.Security.Cryptography.IncrementalHash" /> para el algoritmo de código de autenticación de mensajes basado en Hash (HMAC) utilizando el algoritmo hash y la clave especificados.</span><span class="sxs-lookup"><span data-stu-id="6236c-129">Creates an <see cref="T:System.Security.Cryptography.IncrementalHash" /> for the Hash-based Message Authentication Code (HMAC) algorithm using the specified hash algorithm and key.</span></span></summary>
        <returns><span data-ttu-id="6236c-130">Instancia de la clase <see cref="T:System.Security.Cryptography.IncrementalHash" /> lista para calcular el algoritmo hash especificado.</span><span class="sxs-lookup"><span data-stu-id="6236c-130">An instance of the <see cref="T:System.Security.Cryptography.IncrementalHash" /> class ready to compute the specified hash algorithm.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6236c-131"><paramref name="key" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6236c-131"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6236c-132"><paramref name="hashAlgorithm" />.<see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /></span><span class="sxs-lookup"><span data-stu-id="6236c-132"><paramref name="hashAlgorithm" />.<see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /></span></span> <span data-ttu-id="6236c-133">es <see langword="null" /> o una cadena vacía.</span><span class="sxs-lookup"><span data-stu-id="6236c-133">is <see langword="null" /> or an empty string.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="6236c-134"><paramref name="hashAlgorithm" /> no es un algoritmo hash conocido.</span><span class="sxs-lookup"><span data-stu-id="6236c-134"><paramref name="hashAlgorithm" /> is not a known hash algorithm.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.IncrementalHash.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="incrementalHash.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6236c-135">Libera los recursos utilizados por la instancia actual de la clase <see cref="T:System.Security.Cryptography.IncrementalHash" />.</span><span class="sxs-lookup"><span data-stu-id="6236c-135">Releases the resources used by the current instance of the <see cref="T:System.Security.Cryptography.IncrementalHash" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashAndReset">
      <MemberSignature Language="C#" Value="public byte[] GetHashAndReset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] GetHashAndReset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.IncrementalHash.GetHashAndReset" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHashAndReset () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ GetHashAndReset();" />
      <MemberSignature Language="F#" Value="member this.GetHashAndReset : unit -&gt; byte[]" Usage="incrementalHash.GetHashAndReset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6236c-136">Recupera el hash o el código de autentificación de mensajes basado en hash (HMAC) para los datos acumulados de llamadas anteriores al método <see cref="M:System.Security.Cryptography.IncrementalHash.AppendData(System.Byte[])" /> y restablece el objeto a su estado inicial.</span><span class="sxs-lookup"><span data-stu-id="6236c-136">Retrieves the hash or Hash-based Message Authentication Code (HMAC) for the data accumulated from prior calls to the <see cref="M:System.Security.Cryptography.IncrementalHash.AppendData(System.Byte[])" /> method,  and resets the object to its initial state.</span></span></summary>
        <returns><span data-ttu-id="6236c-137">Hash o HMAC calculado.</span><span class="sxs-lookup"><span data-stu-id="6236c-137">The computed hash or HMAC.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="6236c-138">Ya se ha eliminado el objeto <see cref="T:System.Security.Cryptography.IncrementalHash" />.</span><span class="sxs-lookup"><span data-stu-id="6236c-138">The <see cref="T:System.Security.Cryptography.IncrementalHash" /> object has already been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryGetHashAndReset">
      <MemberSignature Language="C#" Value="public bool TryGetHashAndReset (Span&lt;byte&gt; destination, out int bytesWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetHashAndReset(valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.IncrementalHash.TryGetHashAndReset(System.Span{System.Byte},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetHashAndReset (destination As Span(Of Byte), ByRef bytesWritten As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetHashAndReset(Span&lt;System::Byte&gt; destination, [Runtime::InteropServices::Out] int % bytesWritten);" />
      <MemberSignature Language="F#" Value="member this.TryGetHashAndReset : Span&lt;byte&gt; *  -&gt; bool" Usage="incrementalHash.TryGetHashAndReset (destination, bytesWritten)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <param name="bytesWritten">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
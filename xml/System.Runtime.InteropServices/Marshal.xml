<Type Name="Marshal" FullName="System.Runtime.InteropServices.Marshal">
  <Metadata><Meta Name="ms.openlocfilehash" Value="88d2508370c87f2d7ab5337f2d41475c2eafacc5" /><Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="11/20/2018" /><Meta Name="ms.locfileid" Value="52255528" /></Metadata><TypeSignature Language="C#" Value="public static class Marshal" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Marshal extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.Marshal" />
  <TypeSignature Language="VB.NET" Value="Public Class Marshal" />
  <TypeSignature Language="C++ CLI" Value="public ref class Marshal abstract sealed" />
  <TypeSignature Language="F#" Value="type Marshal = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.InteropServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.Security.SuppressUnmanagedCodeSecurity</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="ce515-101">Proporciona una colección de métodos para asignar memoria no administrada, copiar bloques de memoria no administrados y convertir los tipos administrados en no administrados, así como otros métodos diversos que se utilizan al interactuar con código no administrado.</span><span class="sxs-lookup"><span data-stu-id="ce515-101">Provides a collection of methods for allocating unmanaged memory, copying unmanaged memory blocks, and converting managed to unmanaged types, as well as other miscellaneous methods used when interacting with unmanaged code.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-102">El `static` métodos definidos en el <xref:System.Runtime.InteropServices.Marshal> clase son esenciales para trabajar con código no administrado.</span><span class="sxs-lookup"><span data-stu-id="ce515-102">The `static` methods defined on the <xref:System.Runtime.InteropServices.Marshal> class are essential to working with unmanaged code.</span></span> <span data-ttu-id="ce515-103">Mayoría de los métodos definida en esta clase se utilizan normalmente los desarrolladores que desean ofrecer un puente entre los administrados y los modelos de programación.</span><span class="sxs-lookup"><span data-stu-id="ce515-103">Most methods defined in this class are typically used by developers who want to provide a bridge between the managed and unmanaged programming models.</span></span> <span data-ttu-id="ce515-104">Por ejemplo, el <xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi%2A> método copia los caracteres ANSI de una cadena determinada (en el montón administrado) en un búfer en el montón no administrado.</span><span class="sxs-lookup"><span data-stu-id="ce515-104">For example, the <xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi%2A> method copies ANSI characters from a specified string (in the managed heap) to a buffer in the unmanaged heap.</span></span> <span data-ttu-id="ce515-105">También asigna el montón de destino del tamaño correcto.</span><span class="sxs-lookup"><span data-stu-id="ce515-105">It also allocates the target heap of the right size.</span></span>  
  
 <span data-ttu-id="ce515-106">Common language runtime proporciona capacidades de cálculo de referencias específicas.</span><span class="sxs-lookup"><span data-stu-id="ce515-106">The common language runtime provides specific marshaling capabilities.</span></span> <span data-ttu-id="ce515-107">Para obtener más información sobre la serialización de comportamiento, consulte [interoperativo](~/docs/framework/interop/interop-marshaling.md).</span><span class="sxs-lookup"><span data-stu-id="ce515-107">For details on marshaling behavior, see [Interop Marshaling](~/docs/framework/interop/interop-marshaling.md).</span></span>  
  
 <span data-ttu-id="ce515-108">El `Read` y `Write` métodos en el <xref:System.Runtime.InteropServices.Marshal> clase admite acceso alineado y desalineado.</span><span class="sxs-lookup"><span data-stu-id="ce515-108">The `Read` and `Write` methods in the <xref:System.Runtime.InteropServices.Marshal> class support both aligned and unaligned access.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ce515-109">El ejemplo siguiente muestra cómo utilizar distintos métodos definidos por el <xref:System.Runtime.InteropServices.Marshal> clase.</span><span class="sxs-lookup"><span data-stu-id="ce515-109">The following example shows how to use various methods defined by the <xref:System.Runtime.InteropServices.Marshal> class.</span></span>  
  
 [!code-cpp[Marshal#1](~/samples/snippets/cpp/VS_Snippets_CLR/Marshal/cpp/marshal.cpp#1)]
 [!code-csharp[Marshal#1](~/samples/snippets/csharp/VS_Snippets_CLR/Marshal/CS/Marshal.cs#1)]
 [!code-vb[Marshal#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Marshal/VB/Marshal.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddRef">
      <MemberSignature Language="C#" Value="public static int AddRef (IntPtr pUnk);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 AddRef(native int pUnk) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.AddRef(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AddRef (pUnk As IntPtr) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int AddRef(IntPtr pUnk);" />
      <MemberSignature Language="F#" Value="static member AddRef : nativeint -&gt; int" Usage="System.Runtime.InteropServices.Marshal.AddRef pUnk" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pUnk" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="pUnk"><span data-ttu-id="ce515-110">Contador de referencia de la interfaz a incrementar.</span><span class="sxs-lookup"><span data-stu-id="ce515-110">The interface reference count to increment.</span></span></param>
        <summary><span data-ttu-id="ce515-111">Incrementa el contador de referencia en la interfaz especificada.</span><span class="sxs-lookup"><span data-stu-id="ce515-111">Increments the reference count on the specified interface.</span></span></summary>
        <returns><span data-ttu-id="ce515-112">Nuevo valor del contador de referencias en el parámetro <paramref name="pUnk" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-112">The new value of the reference count on the <paramref name="pUnk" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-113">Common language runtime administra el recuento de referencias de un objeto COM, por lo necesario usar este método directamente.</span><span class="sxs-lookup"><span data-stu-id="ce515-113">The common language runtime manages the reference count of a COM object for you, making it unnecessary to use this method directly.</span></span> <span data-ttu-id="ce515-114">En raras ocasiones, como pruebas de un contador de referencias personalizado, le resultará necesario manipular la duración del objeto manualmente.</span><span class="sxs-lookup"><span data-stu-id="ce515-114">In rare cases, such as testing a custom marshaler, you might find it necessary to manipulate an object's lifetime manually.</span></span> <span data-ttu-id="ce515-115">Después de llamar a <xref:System.Runtime.InteropServices.Marshal.AddRef%2A>, debe reducir el recuento de referencias mediante un método como <xref:System.Runtime.InteropServices.Marshal.Release%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ce515-115">After calling <xref:System.Runtime.InteropServices.Marshal.AddRef%2A>, you must decrement the reference count by using a method such as <xref:System.Runtime.InteropServices.Marshal.Release%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="ce515-116">No confíe en el valor devuelto de <xref:System.Runtime.InteropServices.Marshal.AddRef%2A>, ya que en ocasiones puede ser inestable.</span><span class="sxs-lookup"><span data-stu-id="ce515-116">Do not rely on the return value of <xref:System.Runtime.InteropServices.Marshal.AddRef%2A>, as it can sometimes be unstable.</span></span>  
  
 <span data-ttu-id="ce515-117">Puede llamar a <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%2A?displayProperty=nameWithType>, <xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObject%2A?displayProperty=nameWithType>, o <xref:System.Runtime.InteropServices.Marshal.GetIDispatchForObject%2A?displayProperty=nameWithType> para obtener un <xref:System.IntPtr> valor que representa un [IUnknown](https://go.microsoft.com/fwlink/?LinkId=148003) puntero de interfaz.</span><span class="sxs-lookup"><span data-stu-id="ce515-117">You can call <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%2A?displayProperty=nameWithType>, <xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObject%2A?displayProperty=nameWithType>, or <xref:System.Runtime.InteropServices.Marshal.GetIDispatchForObject%2A?displayProperty=nameWithType> to obtain an <xref:System.IntPtr> value that represents an [IUnknown](https://go.microsoft.com/fwlink/?LinkId=148003) interface pointer.</span></span> <span data-ttu-id="ce515-118">También puede usar estos métodos y el <xref:System.Runtime.InteropServices.Marshal.AddRef%2A> método en objetos administrados para obtener las interfaces COM representadas por el contenedor CCW del objeto administrado.</span><span class="sxs-lookup"><span data-stu-id="ce515-118">You can also use these methods and the <xref:System.Runtime.InteropServices.Marshal.AddRef%2A> method on managed objects to obtain the COM interfaces represented by the managed object's COM callable wrapper.</span></span> <span data-ttu-id="ce515-119">Si no está familiarizado con los detalles de este tipo de contenedor, consulte [contenedor CCW](~/docs/framework/interop/com-callable-wrapper.md).</span><span class="sxs-lookup"><span data-stu-id="ce515-119">If you are not familiar with the details of this wrapper type, see [COM Callable Wrapper](~/docs/framework/interop/com-callable-wrapper.md).</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-120">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-120">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-121">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-121">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Release(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.QueryInterface(System.IntPtr,System.Guid@,System.IntPtr@)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetIUnknownForObject(System.Object)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetIDispatchForObject(System.Object)" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=148625"><span data-ttu-id="ce515-122">IUnknown:: AddRef</span><span class="sxs-lookup"><span data-stu-id="ce515-122">IUnknown::AddRef</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AllocCoTaskMem">
      <MemberSignature Language="C#" Value="public static IntPtr AllocCoTaskMem (int cb);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int AllocCoTaskMem(int32 cb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.AllocCoTaskMem(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AllocCoTaskMem (cb As Integer) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr AllocCoTaskMem(int cb);" />
      <MemberSignature Language="F#" Value="static member AllocCoTaskMem : int -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.AllocCoTaskMem cb" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cb" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="cb"><span data-ttu-id="ce515-123">Tamaño del bloque de memoria a asignar.</span><span class="sxs-lookup"><span data-stu-id="ce515-123">The size of the block of memory to be allocated.</span></span></param>
        <summary><span data-ttu-id="ce515-124">Asigna un bloque de memoria de un tamaño especificado del asignador de memoria de tareas COM.</span><span class="sxs-lookup"><span data-stu-id="ce515-124">Allocates a block of memory of specified size from the COM task memory allocator.</span></span></summary>
        <returns><span data-ttu-id="ce515-125">Entero que representa la dirección del bloque de memoria asignado.</span><span class="sxs-lookup"><span data-stu-id="ce515-125">An integer representing the address of the block of memory allocated.</span></span> <span data-ttu-id="ce515-126">Debe liberarse esta memoria con <see cref="M:System.Runtime.InteropServices.Marshal.FreeCoTaskMem(System.IntPtr)" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-126">This memory must be released with <see cref="M:System.Runtime.InteropServices.Marshal.FreeCoTaskMem(System.IntPtr)" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-127"><xref:System.Runtime.InteropServices.Marshal.AllocCoTaskMem%2A> es uno de asignación de memoria de dos métodos de API en el <xref:System.Runtime.InteropServices.Marshal> clase.</span><span class="sxs-lookup"><span data-stu-id="ce515-127"><xref:System.Runtime.InteropServices.Marshal.AllocCoTaskMem%2A> is one of two memory allocation API methods in the <xref:System.Runtime.InteropServices.Marshal> class.</span></span> <span data-ttu-id="ce515-128">(<xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A?displayProperty=nameWithType> es el otro.) El contenido de memoria inicial devuelto es indefinido y la memoria asignada puede ser mayor que el número de bytes solicitado.</span><span class="sxs-lookup"><span data-stu-id="ce515-128">(<xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A?displayProperty=nameWithType> is the other.) The initial memory content returned is undefined, and the allocated memory can be larger than the requested number of bytes.</span></span> <span data-ttu-id="ce515-129">Este método expone el COM [CoTaskMemAlloc](https://go.microsoft.com/fwlink/?LinkId=148626) función, que se conoce como el asignador de memoria de tareas COM.</span><span class="sxs-lookup"><span data-stu-id="ce515-129">This method exposes the COM [CoTaskMemAlloc](https://go.microsoft.com/fwlink/?LinkId=148626) function, which is referred to as the COM task memory allocator.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="ce515-130">No hay memoria suficiente para satisfacer la solicitud.</span><span class="sxs-lookup"><span data-stu-id="ce515-130">There is insufficient memory to satisfy the request.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-131">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-131">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-132">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-132">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.FreeCoTaskMem(System.IntPtr)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AllocHGlobal">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ce515-133">Asigna memoria de la memoria no administrada del proceso.</span><span class="sxs-lookup"><span data-stu-id="ce515-133">Allocates memory from the unmanaged memory of the process.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AllocHGlobal">
      <MemberSignature Language="C#" Value="public static IntPtr AllocHGlobal (int cb);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int AllocHGlobal(int32 cb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AllocHGlobal (cb As Integer) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr AllocHGlobal(int cb);" />
      <MemberSignature Language="F#" Value="static member AllocHGlobal : int -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.AllocHGlobal cb" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cb" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="cb"><span data-ttu-id="ce515-134">Número necesario de bytes en memoria.</span><span class="sxs-lookup"><span data-stu-id="ce515-134">The required number of bytes in memory.</span></span></param>
        <summary><span data-ttu-id="ce515-135">Asigna memoria de la memoria no administrada del proceso utilizando el número especificado de bytes.</span><span class="sxs-lookup"><span data-stu-id="ce515-135">Allocates memory from the unmanaged memory of the process by using the specified number of bytes.</span></span></summary>
        <returns><span data-ttu-id="ce515-136">Puntero a la memoria recién asignada.</span><span class="sxs-lookup"><span data-stu-id="ce515-136">A pointer to the newly allocated memory.</span></span> <span data-ttu-id="ce515-137">Debe liberarse esta memoria con el método <see cref="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-137">This memory must be released using the <see cref="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)" /> method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-138"><xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A> es uno de los dos métodos de asignación de memoria en el <xref:System.Runtime.InteropServices.Marshal> clase.</span><span class="sxs-lookup"><span data-stu-id="ce515-138"><xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A> is one of two memory allocation methods in the <xref:System.Runtime.InteropServices.Marshal> class.</span></span> <span data-ttu-id="ce515-139">(<xref:System.Runtime.InteropServices.Marshal.AllocCoTaskMem%2A?displayProperty=nameWithType> es el otro.) Este método expone Win32 [LocalAlloc](https://go.microsoft.com/fwlink/?LinkId=148628) función desde Kernel32.dll.</span><span class="sxs-lookup"><span data-stu-id="ce515-139">(<xref:System.Runtime.InteropServices.Marshal.AllocCoTaskMem%2A?displayProperty=nameWithType> is the other.) This method exposes the Win32 [LocalAlloc](https://go.microsoft.com/fwlink/?LinkId=148628) function from Kernel32.dll.</span></span>  
  
 <span data-ttu-id="ce515-140">Cuando <xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A> llamadas `LocalAlloc`, pasa un `LMEM_FIXED` marca, que hace que la memoria asignada se bloquee en su lugar.</span><span class="sxs-lookup"><span data-stu-id="ce515-140">When <xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A> calls `LocalAlloc`, it passes a `LMEM_FIXED` flag, which causes the allocated memory to be locked in place.</span></span> <span data-ttu-id="ce515-141">Además, la memoria asignada no es rellenan con ceros.</span><span class="sxs-lookup"><span data-stu-id="ce515-141">Also, the allocated memory is not zero-filled.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ce515-142">En el ejemplo siguiente se muestra la forma de llamar al método <xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A>.</span><span class="sxs-lookup"><span data-stu-id="ce515-142">The following example demonstrates calling the <xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A> method.</span></span> <span data-ttu-id="ce515-143">Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Runtime.InteropServices.Marshal> clase.</span><span class="sxs-lookup"><span data-stu-id="ce515-143">This code example is part of a larger example provided for the <xref:System.Runtime.InteropServices.Marshal> class.</span></span>  
  
 [!code-cpp[Marshal#4](~/samples/snippets/cpp/VS_Snippets_CLR/Marshal/cpp/marshal.cpp#4)]
 [!code-csharp[Marshal#4](~/samples/snippets/csharp/VS_Snippets_CLR/Marshal/CS/Marshal.cs#4)]
 [!code-vb[Marshal#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/Marshal/VB/Marshal.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="ce515-144">No hay memoria suficiente para satisfacer la solicitud.</span><span class="sxs-lookup"><span data-stu-id="ce515-144">There is insufficient memory to satisfy the request.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-145">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-145">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-146">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-146">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.AllocCoTaskMem(System.Int32)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="AllocHGlobal">
      <MemberSignature Language="C#" Value="public static IntPtr AllocHGlobal (IntPtr cb);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int AllocHGlobal(native int cb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AllocHGlobal (cb As IntPtr) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr AllocHGlobal(IntPtr cb);" />
      <MemberSignature Language="F#" Value="static member AllocHGlobal : nativeint -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.AllocHGlobal cb" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cb" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="cb"><span data-ttu-id="ce515-147">Número necesario de bytes en memoria.</span><span class="sxs-lookup"><span data-stu-id="ce515-147">The required number of bytes in memory.</span></span></param>
        <summary><span data-ttu-id="ce515-148">Asigna memoria de la memoria no administrada del proceso utilizando el puntero al número especificado de bytes.</span><span class="sxs-lookup"><span data-stu-id="ce515-148">Allocates memory from the unmanaged memory of the process by using the pointer to the specified number of bytes.</span></span></summary>
        <returns><span data-ttu-id="ce515-149">Puntero a la memoria recién asignada.</span><span class="sxs-lookup"><span data-stu-id="ce515-149">A pointer to the newly allocated memory.</span></span> <span data-ttu-id="ce515-150">Debe liberarse esta memoria con el método <see cref="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-150">This memory must be released using the <see cref="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)" /> method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-151"><xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A> es uno de los dos métodos de asignación de memoria en el <xref:System.Runtime.InteropServices.Marshal> clase.</span><span class="sxs-lookup"><span data-stu-id="ce515-151"><xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A> is one of two memory allocation methods in the <xref:System.Runtime.InteropServices.Marshal> class.</span></span> <span data-ttu-id="ce515-152">(<xref:System.Runtime.InteropServices.Marshal.AllocCoTaskMem%2A?displayProperty=nameWithType> es el otro.) Este método expone Win32 [LocalAlloc](https://go.microsoft.com/fwlink/?LinkID=148628) función desde Kernel32.dll.</span><span class="sxs-lookup"><span data-stu-id="ce515-152">(<xref:System.Runtime.InteropServices.Marshal.AllocCoTaskMem%2A?displayProperty=nameWithType> is the other.) This method exposes the Win32 [LocalAlloc](https://go.microsoft.com/fwlink/?LinkID=148628) function from Kernel32.dll.</span></span>  
  
 <span data-ttu-id="ce515-153">Cuando <xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A> llamadas `LocalAlloc`, pasa un `LMEM_FIXED` marca, que hace que la memoria asignada se bloquee en su lugar.</span><span class="sxs-lookup"><span data-stu-id="ce515-153">When <xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A> calls `LocalAlloc`, it passes a `LMEM_FIXED` flag, which causes the allocated memory to be locked in place.</span></span> <span data-ttu-id="ce515-154">Además, la memoria asignada no es rellenan con ceros.</span><span class="sxs-lookup"><span data-stu-id="ce515-154">Also, the allocated memory is not zero-filled.</span></span>  
  
 <span data-ttu-id="ce515-155">Por ejemplo de código, consulte <xref:System.Runtime.InteropServices.Marshal> y <xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A>.</span><span class="sxs-lookup"><span data-stu-id="ce515-155">For example code, see <xref:System.Runtime.InteropServices.Marshal> and <xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="ce515-156">No hay memoria suficiente para satisfacer la solicitud.</span><span class="sxs-lookup"><span data-stu-id="ce515-156">There is insufficient memory to satisfy the request.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-157">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-157">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-158">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-158">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.AllocCoTaskMem(System.Int32)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="AreComObjectsAvailableForCleanup">
      <MemberSignature Language="C#" Value="public static bool AreComObjectsAvailableForCleanup ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool AreComObjectsAvailableForCleanup() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.AreComObjectsAvailableForCleanup" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AreComObjectsAvailableForCleanup () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool AreComObjectsAvailableForCleanup();" />
      <MemberSignature Language="F#" Value="static member AreComObjectsAvailableForCleanup : unit -&gt; bool" Usage="System.Runtime.InteropServices.Marshal.AreComObjectsAvailableForCleanup " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ce515-159">Indica si hay contenedores RCW de cualquier contexto disponibles para la limpieza.</span><span class="sxs-lookup"><span data-stu-id="ce515-159">Indicates whether runtime callable wrappers (RCWs) from any context are available for cleanup.</span></span></summary>
        <returns><span data-ttu-id="ce515-160">Es <see langword="true" /> si hay contenedores RCW disponibles para la limpieza; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-160"><see langword="true" /> if there are any RCWs available for cleanup; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-161">Si hay una gran cantidad de referencias entre código administrado y nativo con gráficos de dependencia profunda puede tardar mucho tiempo para todos los objetos que se va a limpiar.</span><span class="sxs-lookup"><span data-stu-id="ce515-161">If there are a lot of references between managed and native code with deep dependency graphs it can take a long time for all the objects to clean up.</span></span> <span data-ttu-id="ce515-162">Cada vez que se ejecuta un GC lo liberará cierto número de contenedores RCW, que a su vez liberará los objetos COM subyacentes.</span><span class="sxs-lookup"><span data-stu-id="ce515-162">Each time a GC runs it will free up some number of RCWs, which will in turn release the underlying COM objects.</span></span> <span data-ttu-id="ce515-163">A continuación, esos objetos COM liberar sus referencias administradas y disponer de más objetos para la limpieza de la próxima vez que un GC se ejecuta, que inicia el proceso de nuevo.</span><span class="sxs-lookup"><span data-stu-id="ce515-163">Those COM objects will then release their managed references and make more objects available for cleanup the next time a GC runs, which starts the process over again.</span></span>  
  
 <span data-ttu-id="ce515-164">El <xref:System.Runtime.InteropServices.Marshal.AreComObjectsAvailableForCleanup%2A> método proporciona una forma de la aplicación para determinar cuántos ciclos de GC. Recopilar y GC. WaitForPendingFinalizers deben ocurrir para limpiar todo.</span><span class="sxs-lookup"><span data-stu-id="ce515-164">The <xref:System.Runtime.InteropServices.Marshal.AreComObjectsAvailableForCleanup%2A> method provides a way for the application to determine how many cycles of GC.Collect and GC.WaitForPendingFinalizers need to happen in order to clean everything up.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-165">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-165">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-166">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-166">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="BindToMoniker">
      <MemberSignature Language="C#" Value="public static object BindToMoniker (string monikerName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object BindToMoniker(string monikerName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.BindToMoniker(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BindToMoniker (monikerName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ BindToMoniker(System::String ^ monikerName);" />
      <MemberSignature Language="F#" Value="static member BindToMoniker : string -&gt; obj" Usage="System.Runtime.InteropServices.Marshal.BindToMoniker monikerName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="monikerName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="monikerName"><span data-ttu-id="ce515-167">Moniker correspondiente al puntero de interfaz deseado.</span><span class="sxs-lookup"><span data-stu-id="ce515-167">The moniker corresponding to the desired interface pointer.</span></span></param>
        <summary><span data-ttu-id="ce515-168">Obtiene un puntero de interfaz identificado por el moniker especificado.</span><span class="sxs-lookup"><span data-stu-id="ce515-168">Gets an interface pointer identified by the specified moniker.</span></span></summary>
        <returns><span data-ttu-id="ce515-169">Objeto que contiene una referencia al puntero de interfaz identificado por el parámetro <paramref name="monikerName" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-169">An object containing a reference to the interface pointer identified by the <paramref name="monikerName" /> parameter.</span></span> <span data-ttu-id="ce515-170">Un moniker es un nombre y, en este caso, se define mediante una interfaz.</span><span class="sxs-lookup"><span data-stu-id="ce515-170">A moniker is a name, and in this case, the moniker is defined by an interface.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-171"><xref:System.Runtime.InteropServices.Marshal.BindToMoniker%2A> expone el COM `BindToMoniker` método, que genera un objeto que puede convertir en cualquier interfaz COM que se necesite.</span><span class="sxs-lookup"><span data-stu-id="ce515-171"><xref:System.Runtime.InteropServices.Marshal.BindToMoniker%2A> exposes the COM `BindToMoniker` method, which produces an object that you can cast to any COM interface you require.</span></span> <span data-ttu-id="ce515-172">Este método proporciona la misma funcionalidad que el `GetObject` método en Visual Basic 6.0 y [!INCLUDE[vbprvblong](~/includes/vbprvblong-md.md)].</span><span class="sxs-lookup"><span data-stu-id="ce515-172">This method provides the same functionality as the `GetObject` method in Visual Basic 6.0 and [!INCLUDE[vbprvblong](~/includes/vbprvblong-md.md)].</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="ce515-173">El método <see langword="BindToMoniker" /> no administrado devolvió un HRESULT no reconocido.</span><span class="sxs-lookup"><span data-stu-id="ce515-173">An unrecognized HRESULT was returned by the unmanaged <see langword="BindToMoniker" /> method.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-174">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-174">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-175">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-175">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="BufferToBSTR">
      <MemberSignature Language="C#" Value="public static IntPtr BufferToBSTR (Array ptr, int slen);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int BufferToBSTR(class System.Array ptr, int32 slen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.BufferToBSTR(System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BufferToBSTR (ptr As Array, slen As Integer) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr BufferToBSTR(Array ^ ptr, int slen);" />
      <MemberSignature Language="F#" Value="static member BufferToBSTR : Array * int -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.BufferToBSTR (ptr, slen)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.Array" />
        <Parameter Name="slen" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ptr">To be added.</param>
        <param name="slen">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangeWrapperHandleStrength">
      <MemberSignature Language="C#" Value="public static void ChangeWrapperHandleStrength (object otp, bool fIsWeak);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ChangeWrapperHandleStrength(object otp, bool fIsWeak) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ChangeWrapperHandleStrength(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ChangeWrapperHandleStrength (otp As Object, fIsWeak As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ChangeWrapperHandleStrength(System::Object ^ otp, bool fIsWeak);" />
      <MemberSignature Language="F#" Value="static member ChangeWrapperHandleStrength : obj * bool -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.ChangeWrapperHandleStrength (otp, fIsWeak)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="otp" Type="System.Object" />
        <Parameter Name="fIsWeak" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="otp"><span data-ttu-id="ce515-176">Objeto cuyo CCW contiene un controlador de recuento de referencias.</span><span class="sxs-lookup"><span data-stu-id="ce515-176">The object whose CCW holds a reference counted handle.</span></span> <span data-ttu-id="ce515-177">El controlador es seguro si el recuento de referencias del CCW es mayor que cero; de lo contrario, es débil.</span><span class="sxs-lookup"><span data-stu-id="ce515-177">The handle is strong if the reference count on the CCW is greater than zero; otherwise, it is weak.</span></span></param>
        <param name="fIsWeak"><span data-ttu-id="ce515-178">Es <see langword="true" /> para cambiar a débil la intensidad del controlador en el parámetro <paramref name="otp" />, independientemente de su contador de referencia; es <see langword="false" /> para restablecer la intensidad del controlador en <paramref name="otp" /> para que se cuenten las referencias.</span><span class="sxs-lookup"><span data-stu-id="ce515-178"><see langword="true" /> to change the strength of the handle on the <paramref name="otp" /> parameter to weak, regardless of its reference count; <see langword="false" /> to reset the handle strength on <paramref name="otp" /> to be reference counted.</span></span></param>
        <summary><span data-ttu-id="ce515-179">Cambia la intensidad del controlador del [contenedor CCW](~/docs/framework/interop/com-callable-wrapper.md) de un objeto.</span><span class="sxs-lookup"><span data-stu-id="ce515-179">Changes the strength of an object's [COM Callable Wrapper](~/docs/framework/interop/com-callable-wrapper.md) (CCW) handle.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-180"><xref:System.Runtime.InteropServices.Marshal.ChangeWrapperHandleStrength%2A> se usa para la funcionalidad de agrupación de objetos y nunca se debería llamar mediante código de usuario directamente.</span><span class="sxs-lookup"><span data-stu-id="ce515-180"><xref:System.Runtime.InteropServices.Marshal.ChangeWrapperHandleStrength%2A> is used for object pooling functionality and should never be called by user code directly.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-181">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-181">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-182">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-182">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CleanupUnusedObjectsInCurrentContext">
      <MemberSignature Language="C#" Value="public static void CleanupUnusedObjectsInCurrentContext ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CleanupUnusedObjectsInCurrentContext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.CleanupUnusedObjectsInCurrentContext" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub CleanupUnusedObjectsInCurrentContext ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CleanupUnusedObjectsInCurrentContext();" />
      <MemberSignature Language="F#" Value="static member CleanupUnusedObjectsInCurrentContext : unit -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.CleanupUnusedObjectsInCurrentContext " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ce515-183">Notifica al tiempo de ejecución que debe limpiar todos los <see href="https://docs.microsoft.com/dotnet/framework/interop/runtime-callable-wrapper">contenedores RCW</see> asignados en el contexto actual.</span><span class="sxs-lookup"><span data-stu-id="ce515-183">Notifies the runtime to clean up all <see href="https://docs.microsoft.com/dotnet/framework/interop/runtime-callable-wrapper">Runtime Callable Wrappers</see> (RCWs) allocated in the current context.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-184">El sistema de interoperabilidad envía mensajes mientras intenta limpiar los contenedores RCW.</span><span class="sxs-lookup"><span data-stu-id="ce515-184">The interop system pumps messages while it attempts to clean up RCWs.</span></span> <span data-ttu-id="ce515-185">Esto garantiza que la limpieza para contenedores RCW de contenedor uniproceso (STA) se realiza en todas las aplicaciones, incluidas las aplicaciones que no se suministran con la suficiente frecuencia.</span><span class="sxs-lookup"><span data-stu-id="ce515-185">This ensures that cleanup for single-threaded apartment (STA) RCWs happens in all applications, including applications that do not pump often enough.</span></span> <span data-ttu-id="ce515-186">Sin embargo, algunas aplicaciones que insertan adecuadamente son muy sensibles a donde se produce la distribución.</span><span class="sxs-lookup"><span data-stu-id="ce515-186">However, some applications that do pump appropriately are very sensitive to where pumping occurs.</span></span> <span data-ttu-id="ce515-187">Cuando el sistema de interoperabilidad envía mensajes a estas aplicaciones en ubicaciones inesperadas, la aplicación puede encontrar problemas de reentrada que son difíciles de diagnosticar.</span><span class="sxs-lookup"><span data-stu-id="ce515-187">When the interop system pumps messages in these applications, in places that are unexpected, , the application can encounter reentrancy issues that are difficult to diagnose.</span></span> <span data-ttu-id="ce515-188">Por lo tanto, las aplicaciones deben ser capaz de controlar su propio suministro para un STA determinado y controlar la limpieza del RCW.</span><span class="sxs-lookup"><span data-stu-id="ce515-188">Therefore, applications need to be able to control their own pumping for a particular STA and to control the clean-up of RCWs.</span></span>  
  
 <span data-ttu-id="ce515-189">Sin embargo, los desarrolladores a menudo solo controlan un subconjunto de los subprocesos en su aplicación y, por tanto, no se pueden garantizar que todos los subprocesos están bombeando apropiadamente.</span><span class="sxs-lookup"><span data-stu-id="ce515-189">However, developers often only control a subset of the threads in their application and thus cannot ensure that all threads are pumping appropriately.</span></span>  
  
 <span data-ttu-id="ce515-190">Para solucionar este problema:</span><span class="sxs-lookup"><span data-stu-id="ce515-190">To solve this problem:</span></span>  
  
1.  <span data-ttu-id="ce515-191">Use el <xref:System.Threading.Thread.DisableComObjectEagerCleanup%2A?displayProperty=nameWithType> método para desactivar la limpieza automática de contenedores RCW y el suministro de mensajes que se produce, por subproceso.</span><span class="sxs-lookup"><span data-stu-id="ce515-191">Use the <xref:System.Threading.Thread.DisableComObjectEagerCleanup%2A?displayProperty=nameWithType> method to turn off automatic cleanup of RCWs, and the message pumping that occurs, on a per-thread basis.</span></span> <span data-ttu-id="ce515-192">Esto permite a los desarrolladores dejar de participar en la limpieza automática y el suministro de mensajes correspondiente.</span><span class="sxs-lookup"><span data-stu-id="ce515-192">This allows developers to opt out of automatic clean-up, and the corresponding message pumping.</span></span>  
  
2.  <span data-ttu-id="ce515-193">Use el <xref:System.Runtime.InteropServices.Marshal.CleanupUnusedObjectsInCurrentContext%2A> método para notificar el tiempo de ejecución para limpiar todos los contenedores RCW que se asignan en el contexto actual.</span><span class="sxs-lookup"><span data-stu-id="ce515-193">Use the <xref:System.Runtime.InteropServices.Marshal.CleanupUnusedObjectsInCurrentContext%2A> method to notify the runtime to clean up all RCWs that are allocated in the current context.</span></span> <span data-ttu-id="ce515-194">Este método complementario permite a los desarrolladores controlar con precisión cuando el tiempo de ejecución realiza la limpieza en el contexto actual.</span><span class="sxs-lookup"><span data-stu-id="ce515-194">This companion method allows developers to precisely control when the runtime performs cleanup in the current context.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-195">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-195">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-196">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-196">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="Copy">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ce515-197">Copia los datos de una matriz administrada a un puntero de memoria no administrada o de un puntero de memoria no administrada a una matriz administrada.</span><span class="sxs-lookup"><span data-stu-id="ce515-197">Copies data from a managed array to an unmanaged memory pointer, or from an unmanaged memory pointer to a managed array.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (byte[] source, int startIndex, IntPtr destination, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(unsigned int8[] source, int32 startIndex, native int destination, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Copy(System.Byte[],System.Int32,System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (source As Byte(), startIndex As Integer, destination As IntPtr, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(cli::array &lt;System::Byte&gt; ^ source, int startIndex, IntPtr destination, int length);" />
      <MemberSignature Language="F#" Value="static member Copy : byte[] * int * nativeint * int -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.Copy (source, startIndex, destination, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Byte[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="destination" Type="System.IntPtr" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="ce515-198">Matriz unidimensional de la que se va a copiar.</span><span class="sxs-lookup"><span data-stu-id="ce515-198">The one-dimensional array to copy from.</span></span></param>
        <param name="startIndex"><span data-ttu-id="ce515-199">Índice de base cero de la matriz de origen donde debe comenzar la copia.</span><span class="sxs-lookup"><span data-stu-id="ce515-199">The zero-based index in the source array where copying should start.</span></span></param>
        <param name="destination"><span data-ttu-id="ce515-200">Puntero de memoria en el que se va a copiar.</span><span class="sxs-lookup"><span data-stu-id="ce515-200">The memory pointer to copy to.</span></span></param>
        <param name="length"><span data-ttu-id="ce515-201">Número de elementos de la matriz que se van a copiar.</span><span class="sxs-lookup"><span data-stu-id="ce515-201">The number of array elements to copy.</span></span></param>
        <summary><span data-ttu-id="ce515-202">Copia datos de una matriz unidimensional y administrada de enteros de 8 bits sin signo a un puntero de memoria no administrada.</span><span class="sxs-lookup"><span data-stu-id="ce515-202">Copies data from a one-dimensional, managed 8-bit unsigned integer array to an unmanaged memory pointer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-203">Puede usar este método para copiar un subconjunto de una matriz unidimensional y administrada en una matriz de estilo C no administrada.</span><span class="sxs-lookup"><span data-stu-id="ce515-203">You can use this method to copy a subset of a one-dimensional managed array to an unmanaged C-style array.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ce515-204">En el ejemplo siguiente se copia una matriz en memoria no administrada mediante el uso de la <xref:System.Runtime.InteropServices.Marshal.Copy%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.IntPtr%2CSystem.Int32%29> sobrecarga y, a continuación, copia la matriz no administrada a la memoria administrada mediante el <xref:System.Runtime.InteropServices.Marshal.Copy%28System.IntPtr%2CSystem.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%29> de sobrecarga.</span><span class="sxs-lookup"><span data-stu-id="ce515-204">The following example copies an array to unmanaged memory by using the <xref:System.Runtime.InteropServices.Marshal.Copy%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.IntPtr%2CSystem.Int32%29> overload, and then copies the unmanaged array back to managed memory by using the <xref:System.Runtime.InteropServices.Marshal.Copy%28System.IntPtr%2CSystem.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%29> overload.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.Copy-byte#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-byte/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.Copy-byte#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-byte/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="ce515-205"><paramref name="startIndex" /> y <paramref name="length" /> no son válidos.</span><span class="sxs-lookup"><span data-stu-id="ce515-205"><paramref name="startIndex" /> and <paramref name="length" /> are not valid.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ce515-206"><paramref name="source" />, <paramref name="startIndex" />, <paramref name="destination" /> o <paramref name="length" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-206"><paramref name="source" />, <paramref name="startIndex" />, <paramref name="destination" />, or <paramref name="length" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-207">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-207">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-208">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-208">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (char[] source, int startIndex, IntPtr destination, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(char[] source, int32 startIndex, native int destination, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Copy(System.Char[],System.Int32,System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (source As Char(), startIndex As Integer, destination As IntPtr, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(cli::array &lt;char&gt; ^ source, int startIndex, IntPtr destination, int length);" />
      <MemberSignature Language="F#" Value="static member Copy : char[] * int * nativeint * int -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.Copy (source, startIndex, destination, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Char[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="destination" Type="System.IntPtr" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="ce515-209">Matriz unidimensional de la que se va a copiar.</span><span class="sxs-lookup"><span data-stu-id="ce515-209">The one-dimensional array to copy from.</span></span></param>
        <param name="startIndex"><span data-ttu-id="ce515-210">Índice de base cero de la matriz de origen donde debe comenzar la copia.</span><span class="sxs-lookup"><span data-stu-id="ce515-210">The zero-based index in the source array where copying should start.</span></span></param>
        <param name="destination"><span data-ttu-id="ce515-211">Puntero de memoria en el que se va a copiar.</span><span class="sxs-lookup"><span data-stu-id="ce515-211">The memory pointer to copy to.</span></span></param>
        <param name="length"><span data-ttu-id="ce515-212">Número de elementos de la matriz que se van a copiar.</span><span class="sxs-lookup"><span data-stu-id="ce515-212">The number of array elements to copy.</span></span></param>
        <summary><span data-ttu-id="ce515-213">Copia datos de una matriz de caracteres unidimensional y administrada a un puntero de memoria no administrada.</span><span class="sxs-lookup"><span data-stu-id="ce515-213">Copies data from a one-dimensional, managed character array to an unmanaged memory pointer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-214">Puede usar este método para copiar un subconjunto de una matriz unidimensional y administrada en una matriz de estilo C no administrada.</span><span class="sxs-lookup"><span data-stu-id="ce515-214">You can use this method to copy a subset of a one-dimensional managed array to an unmanaged C-style array.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ce515-215">El ejemplo siguiente copia una matriz en memoria no administrada y, a continuación, copia la matriz no administrada a la memoria administrada.</span><span class="sxs-lookup"><span data-stu-id="ce515-215">The following example copies an array to unmanaged memory and then copies the unmanaged array back to managed memory.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.Copy-char#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-char/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.Copy-char#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-char/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="ce515-216"><paramref name="startIndex" /> y <paramref name="length" /> no son válidos.</span><span class="sxs-lookup"><span data-stu-id="ce515-216"><paramref name="startIndex" /> and <paramref name="length" /> are not valid.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ce515-217"><paramref name="startIndex" />, <paramref name="destination" /> o <paramref name="length" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-217"><paramref name="startIndex" />, <paramref name="destination" />, or <paramref name="length" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-218">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-218">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-219">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-219">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (double[] source, int startIndex, IntPtr destination, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(float64[] source, int32 startIndex, native int destination, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Copy(System.Double[],System.Int32,System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (source As Double(), startIndex As Integer, destination As IntPtr, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(cli::array &lt;double&gt; ^ source, int startIndex, IntPtr destination, int length);" />
      <MemberSignature Language="F#" Value="static member Copy : double[] * int * nativeint * int -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.Copy (source, startIndex, destination, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Double[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="destination" Type="System.IntPtr" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="ce515-220">Matriz unidimensional de la que se va a copiar.</span><span class="sxs-lookup"><span data-stu-id="ce515-220">The one-dimensional array to copy from.</span></span></param>
        <param name="startIndex"><span data-ttu-id="ce515-221">Índice de base cero de la matriz de origen donde debe comenzar la copia.</span><span class="sxs-lookup"><span data-stu-id="ce515-221">The zero-based index in the source array where copying should start.</span></span></param>
        <param name="destination"><span data-ttu-id="ce515-222">Puntero de memoria en el que se va a copiar.</span><span class="sxs-lookup"><span data-stu-id="ce515-222">The memory pointer to copy to.</span></span></param>
        <param name="length"><span data-ttu-id="ce515-223">Número de elementos de la matriz que se van a copiar.</span><span class="sxs-lookup"><span data-stu-id="ce515-223">The number of array elements to copy.</span></span></param>
        <summary><span data-ttu-id="ce515-224">Copia datos de una matriz unidimensional y administrada de números de punto flotante de precisión doble a un puntero de memoria no administrada.</span><span class="sxs-lookup"><span data-stu-id="ce515-224">Copies data from a one-dimensional, managed double-precision floating-point number array to an unmanaged memory pointer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-225">Puede usar este método para copiar un subconjunto de una matriz unidimensional y administrada en una matriz de estilo C no administrada.</span><span class="sxs-lookup"><span data-stu-id="ce515-225">You can use this method to copy a subset of a one-dimensional managed array to an unmanaged C-style array.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ce515-226">El ejemplo siguiente copia una matriz en memoria no administrada y, a continuación, copia la matriz no administrada a la memoria administrada.</span><span class="sxs-lookup"><span data-stu-id="ce515-226">The following example copies an array to unmanaged memory and then copies the unmanaged array back to managed memory.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.Copy-double#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-double/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.Copy-double#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-double/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="ce515-227"><paramref name="startIndex" /> y <paramref name="length" /> no son válidos.</span><span class="sxs-lookup"><span data-stu-id="ce515-227"><paramref name="startIndex" /> and <paramref name="length" /> are not valid.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ce515-228"><paramref name="source" />, <paramref name="startIndex" />, <paramref name="destination" /> o <paramref name="length" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-228"><paramref name="source" />, <paramref name="startIndex" />, <paramref name="destination" />, or <paramref name="length" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-229">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-229">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-230">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-230">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (short[] source, int startIndex, IntPtr destination, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(int16[] source, int32 startIndex, native int destination, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Copy(System.Int16[],System.Int32,System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (source As Short(), startIndex As Integer, destination As IntPtr, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(cli::array &lt;short&gt; ^ source, int startIndex, IntPtr destination, int length);" />
      <MemberSignature Language="F#" Value="static member Copy : int16[] * int * nativeint * int -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.Copy (source, startIndex, destination, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Int16[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="destination" Type="System.IntPtr" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="ce515-231">Matriz unidimensional de la que se va a copiar.</span><span class="sxs-lookup"><span data-stu-id="ce515-231">The one-dimensional array to copy from.</span></span></param>
        <param name="startIndex"><span data-ttu-id="ce515-232">Índice de base cero de la matriz de origen donde debe comenzar la copia.</span><span class="sxs-lookup"><span data-stu-id="ce515-232">The zero-based index in the source array where copying should start.</span></span></param>
        <param name="destination"><span data-ttu-id="ce515-233">Puntero de memoria en el que se va a copiar.</span><span class="sxs-lookup"><span data-stu-id="ce515-233">The memory pointer to copy to.</span></span></param>
        <param name="length"><span data-ttu-id="ce515-234">Número de elementos de la matriz que se van a copiar.</span><span class="sxs-lookup"><span data-stu-id="ce515-234">The number of array elements to copy.</span></span></param>
        <summary><span data-ttu-id="ce515-235">Copia datos de una matriz unidimensional administrada de enteros de 16 bits con signo a un puntero de memoria no administrada.</span><span class="sxs-lookup"><span data-stu-id="ce515-235">Copies data from a one-dimensional, managed 16-bit signed integer array to an unmanaged memory pointer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-236">Puede usar este método para copiar un subconjunto de una matriz unidimensional y administrada en una matriz de estilo C no administrada.</span><span class="sxs-lookup"><span data-stu-id="ce515-236">You can use this method to copy a subset of a one-dimensional managed array to an unmanaged C-style array.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ce515-237">El ejemplo siguiente copia una matriz en memoria no administrada y, a continuación, copia la matriz no administrada a la memoria administrada.</span><span class="sxs-lookup"><span data-stu-id="ce515-237">The following example copies an array to unmanaged memory and then copies the unmanaged array back to managed memory.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.Copy-int16#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-int16/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.Copy-int16#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-int16/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="ce515-238"><paramref name="startIndex" /> y <paramref name="length" /> no son válidos.</span><span class="sxs-lookup"><span data-stu-id="ce515-238"><paramref name="startIndex" /> and <paramref name="length" /> are not valid.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ce515-239"><paramref name="source" />, <paramref name="startIndex" />, <paramref name="destination" /> o <paramref name="length" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-239"><paramref name="source" />, <paramref name="startIndex" />, <paramref name="destination" />, or <paramref name="length" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-240">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-240">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-241">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-241">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (int[] source, int startIndex, IntPtr destination, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(int32[] source, int32 startIndex, native int destination, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (source As Integer(), startIndex As Integer, destination As IntPtr, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(cli::array &lt;int&gt; ^ source, int startIndex, IntPtr destination, int length);" />
      <MemberSignature Language="F#" Value="static member Copy : int[] * int * nativeint * int -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.Copy (source, startIndex, destination, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Int32[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="destination" Type="System.IntPtr" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="ce515-242">Matriz unidimensional de la que se va a copiar.</span><span class="sxs-lookup"><span data-stu-id="ce515-242">The one-dimensional array to copy from.</span></span></param>
        <param name="startIndex"><span data-ttu-id="ce515-243">Índice de base cero de la matriz de origen donde debe comenzar la copia.</span><span class="sxs-lookup"><span data-stu-id="ce515-243">The zero-based index in the source array where copying should start.</span></span></param>
        <param name="destination"><span data-ttu-id="ce515-244">Puntero de memoria en el que se va a copiar.</span><span class="sxs-lookup"><span data-stu-id="ce515-244">The memory pointer to copy to.</span></span></param>
        <param name="length"><span data-ttu-id="ce515-245">Número de elementos de la matriz que se van a copiar.</span><span class="sxs-lookup"><span data-stu-id="ce515-245">The number of array elements to copy.</span></span></param>
        <summary><span data-ttu-id="ce515-246">Copia datos de una matriz unidimensional administrada de enteros de 32 bits con signo a un puntero de memoria no administrada.</span><span class="sxs-lookup"><span data-stu-id="ce515-246">Copies data from a one-dimensional, managed 32-bit signed integer array to an unmanaged memory pointer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-247">Puede usar este método para copiar un subconjunto de una matriz unidimensional y administrada en una matriz de estilo C no administrada.</span><span class="sxs-lookup"><span data-stu-id="ce515-247">You can use this method to copy a subset of a one-dimensional managed array to an unmanaged C-style array.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ce515-248">El ejemplo siguiente copia una matriz en memoria no administrada y, a continuación, copia la matriz no administrada a la memoria administrada.</span><span class="sxs-lookup"><span data-stu-id="ce515-248">The following example copies an array to unmanaged memory and then copies the unmanaged array back to managed memory.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.Copy-int#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-int/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.Copy-int#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-int/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="ce515-249"><paramref name="startIndex" /> y <paramref name="length" /> no son válidos.</span><span class="sxs-lookup"><span data-stu-id="ce515-249"><paramref name="startIndex" /> and <paramref name="length" /> are not valid.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ce515-250">El valor de <paramref name="startIndex" /> o <paramref name="length" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-250"><paramref name="startIndex" /> or <paramref name="length" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-251">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-251">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-252">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-252">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (long[] source, int startIndex, IntPtr destination, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(int64[] source, int32 startIndex, native int destination, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Copy(System.Int64[],System.Int32,System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (source As Long(), startIndex As Integer, destination As IntPtr, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(cli::array &lt;long&gt; ^ source, int startIndex, IntPtr destination, int length);" />
      <MemberSignature Language="F#" Value="static member Copy : int64[] * int * nativeint * int -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.Copy (source, startIndex, destination, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Int64[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="destination" Type="System.IntPtr" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="ce515-253">Matriz unidimensional de la que se va a copiar.</span><span class="sxs-lookup"><span data-stu-id="ce515-253">The one-dimensional array to copy from.</span></span></param>
        <param name="startIndex"><span data-ttu-id="ce515-254">Índice de base cero de la matriz de origen donde debe comenzar la copia.</span><span class="sxs-lookup"><span data-stu-id="ce515-254">The zero-based index in the source array where copying should start.</span></span></param>
        <param name="destination"><span data-ttu-id="ce515-255">Puntero de memoria en el que se va a copiar.</span><span class="sxs-lookup"><span data-stu-id="ce515-255">The memory pointer to copy to.</span></span></param>
        <param name="length"><span data-ttu-id="ce515-256">Número de elementos de la matriz que se van a copiar.</span><span class="sxs-lookup"><span data-stu-id="ce515-256">The number of array elements to copy.</span></span></param>
        <summary><span data-ttu-id="ce515-257">Copia datos de una matriz unidimensional administrada de enteros de 64 bits con signo a un puntero de memoria no administrada.</span><span class="sxs-lookup"><span data-stu-id="ce515-257">Copies data from a one-dimensional, managed 64-bit signed integer array to an unmanaged memory pointer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-258">Puede usar este método para copiar un subconjunto de una matriz unidimensional y administrada en una matriz de estilo C no administrada.</span><span class="sxs-lookup"><span data-stu-id="ce515-258">You can use this method to copy a subset of a one-dimensional managed array to an unmanaged C-style array.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ce515-259">El ejemplo siguiente copia una matriz en memoria no administrada y, a continuación, copia la matriz no administrada a la memoria administrada.</span><span class="sxs-lookup"><span data-stu-id="ce515-259">The following example copies an array to unmanaged memory and then copies the unmanaged array back to managed memory.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.Copy-int64#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-int64/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.Copy-int64#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-int64/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="ce515-260"><paramref name="startIndex" /> y <paramref name="length" /> no son válidos.</span><span class="sxs-lookup"><span data-stu-id="ce515-260"><paramref name="startIndex" /> and <paramref name="length" /> are not valid.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ce515-261"><paramref name="source" />, <paramref name="startIndex" />, <paramref name="destination" /> o <paramref name="length" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-261"><paramref name="source" />, <paramref name="startIndex" />, <paramref name="destination" />, or <paramref name="length" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-262">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-262">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-263">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-263">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (IntPtr source, byte[] destination, int startIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(native int source, unsigned int8[] destination, int32 startIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (source As IntPtr, destination As Byte(), startIndex As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(IntPtr source, cli::array &lt;System::Byte&gt; ^ destination, int startIndex, int length);" />
      <MemberSignature Language="F#" Value="static member Copy : nativeint * byte[] * int * int -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.Copy (source, destination, startIndex, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IntPtr" />
        <Parameter Name="destination" Type="System.Byte[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="ce515-264">Puntero de memoria del que se va a copiar.</span><span class="sxs-lookup"><span data-stu-id="ce515-264">The memory pointer to copy from.</span></span></param>
        <param name="destination"><span data-ttu-id="ce515-265">Matriz en la que se va a copiar.</span><span class="sxs-lookup"><span data-stu-id="ce515-265">The array to copy to.</span></span></param>
        <param name="startIndex"><span data-ttu-id="ce515-266">Índice de base cero de la matriz de destino donde debe comenzar la copia.</span><span class="sxs-lookup"><span data-stu-id="ce515-266">The zero-based index in the destination array where copying should start.</span></span></param>
        <param name="length"><span data-ttu-id="ce515-267">Número de elementos de la matriz que se van a copiar.</span><span class="sxs-lookup"><span data-stu-id="ce515-267">The number of array elements to copy.</span></span></param>
        <summary><span data-ttu-id="ce515-268">Copia datos de un puntero de memoria no administrada a una matriz administrada de enteros de 8 bits sin signo.</span><span class="sxs-lookup"><span data-stu-id="ce515-268">Copies data from an unmanaged memory pointer to a managed 8-bit unsigned integer array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-269">No administrados, matrices de estilo C no contienen información de límites, lo que evita la `startIndex` y `length` parámetros desde el que se está validando.</span><span class="sxs-lookup"><span data-stu-id="ce515-269">Unmanaged, C-style arrays do not contain bounds information, which prevents the `startIndex` and `length` parameters from being validated.</span></span> <span data-ttu-id="ce515-270">Por lo tanto, los datos no administrados correspondientes a la `source` parámetro rellena la matriz administrada independientemente de su utilidad.</span><span class="sxs-lookup"><span data-stu-id="ce515-270">Thus, the unmanaged data corresponding to the `source` parameter populates the managed array regardless of its usefulness.</span></span> <span data-ttu-id="ce515-271">Debe inicializar la matriz administrada con el tamaño adecuado antes de llamar a este método.</span><span class="sxs-lookup"><span data-stu-id="ce515-271">You must initialize the managed array with the appropriate size before calling this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ce515-272">El ejemplo siguiente copia una matriz en memoria no administrada y, a continuación, copia la matriz no administrada a la memoria administrada.</span><span class="sxs-lookup"><span data-stu-id="ce515-272">The following example copies an array to unmanaged memory and then copies the unmanaged array back to managed memory.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.Copy-byte#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-byte/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.Copy-byte#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-byte/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ce515-273"><paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" /> o <paramref name="length" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-273"><paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" />, or <paramref name="length" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-274">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-274">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-275">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-275">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (IntPtr source, char[] destination, int startIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(native int source, char[] destination, int32 startIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (source As IntPtr, destination As Char(), startIndex As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(IntPtr source, cli::array &lt;char&gt; ^ destination, int startIndex, int length);" />
      <MemberSignature Language="F#" Value="static member Copy : nativeint * char[] * int * int -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.Copy (source, destination, startIndex, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IntPtr" />
        <Parameter Name="destination" Type="System.Char[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="ce515-276">Puntero de memoria del que se va a copiar.</span><span class="sxs-lookup"><span data-stu-id="ce515-276">The memory pointer to copy from.</span></span></param>
        <param name="destination"><span data-ttu-id="ce515-277">Matriz en la que se va a copiar.</span><span class="sxs-lookup"><span data-stu-id="ce515-277">The array to copy to.</span></span></param>
        <param name="startIndex"><span data-ttu-id="ce515-278">Índice de base cero de la matriz de destino donde debe comenzar la copia.</span><span class="sxs-lookup"><span data-stu-id="ce515-278">The zero-based index in the destination array where copying should start.</span></span></param>
        <param name="length"><span data-ttu-id="ce515-279">Número de elementos de la matriz que se van a copiar.</span><span class="sxs-lookup"><span data-stu-id="ce515-279">The number of array elements to copy.</span></span></param>
        <summary><span data-ttu-id="ce515-280">Copia datos de un puntero de memoria no administrada a una matriz de caracteres administrada.</span><span class="sxs-lookup"><span data-stu-id="ce515-280">Copies data from an unmanaged memory pointer to a managed character array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-281">No administrados, matrices de estilo C no contienen información de límites, lo que evita la `startIndex` y `length` parámetros desde el que se está validando.</span><span class="sxs-lookup"><span data-stu-id="ce515-281">Unmanaged, C-style arrays do not contain bounds information, which prevents the `startIndex` and `length` parameters from being validated.</span></span> <span data-ttu-id="ce515-282">Por lo tanto, los datos no administrados correspondientes a la `source` parámetro rellena la matriz administrada independientemente de su utilidad.</span><span class="sxs-lookup"><span data-stu-id="ce515-282">Thus, the unmanaged data corresponding to the `source` parameter populates the managed array regardless of its usefulness.</span></span> <span data-ttu-id="ce515-283">Debe inicializar la matriz administrada con el tamaño adecuado antes de llamar a este método.</span><span class="sxs-lookup"><span data-stu-id="ce515-283">You must initialize the managed array with the appropriate size before calling this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ce515-284">El ejemplo siguiente copia una matriz en memoria no administrada y, a continuación, copia la matriz no administrada a la memoria administrada.</span><span class="sxs-lookup"><span data-stu-id="ce515-284">The following example copies an array to unmanaged memory and then copies the unmanaged array back to managed memory.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.Copy-char#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-char/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.Copy-char#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-char/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ce515-285"><paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" /> o <paramref name="length" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-285"><paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" />, or <paramref name="length" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-286">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-286">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-287">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-287">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (IntPtr source, double[] destination, int startIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(native int source, float64[] destination, int32 startIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Double[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (source As IntPtr, destination As Double(), startIndex As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(IntPtr source, cli::array &lt;double&gt; ^ destination, int startIndex, int length);" />
      <MemberSignature Language="F#" Value="static member Copy : nativeint * double[] * int * int -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.Copy (source, destination, startIndex, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IntPtr" />
        <Parameter Name="destination" Type="System.Double[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="ce515-288">Puntero de memoria del que se va a copiar.</span><span class="sxs-lookup"><span data-stu-id="ce515-288">The memory pointer to copy from.</span></span></param>
        <param name="destination"><span data-ttu-id="ce515-289">Matriz en la que se va a copiar.</span><span class="sxs-lookup"><span data-stu-id="ce515-289">The array to copy to.</span></span></param>
        <param name="startIndex"><span data-ttu-id="ce515-290">Índice de base cero de la matriz de destino donde debe comenzar la copia.</span><span class="sxs-lookup"><span data-stu-id="ce515-290">The zero-based index in the destination array where copying should start.</span></span></param>
        <param name="length"><span data-ttu-id="ce515-291">Número de elementos de la matriz que se van a copiar.</span><span class="sxs-lookup"><span data-stu-id="ce515-291">The number of array elements to copy.</span></span></param>
        <summary><span data-ttu-id="ce515-292">Copia datos de un puntero de memoria no administrada a una matriz administrada de números de punto flotante de precisión doble.</span><span class="sxs-lookup"><span data-stu-id="ce515-292">Copies data from an unmanaged memory pointer to a managed double-precision floating-point number array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-293">No administrados, matrices de estilo C no contienen información de límites, lo que evita la `startIndex` y `length` parámetros desde el que se está validando.</span><span class="sxs-lookup"><span data-stu-id="ce515-293">Unmanaged, C-style arrays do not contain bounds information, which prevents the `startIndex` and `length` parameters from being validated.</span></span> <span data-ttu-id="ce515-294">Por lo tanto, los datos no administrados correspondientes a la `source` parámetro rellena la matriz administrada independientemente de su utilidad.</span><span class="sxs-lookup"><span data-stu-id="ce515-294">Thus, the unmanaged data corresponding to the `source` parameter populates the managed array regardless of its usefulness.</span></span> <span data-ttu-id="ce515-295">Debe inicializar la matriz administrada con el tamaño adecuado antes de llamar a este método.</span><span class="sxs-lookup"><span data-stu-id="ce515-295">You must initialize the managed array with the appropriate size before calling this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ce515-296">El ejemplo siguiente copia una matriz en memoria no administrada y, a continuación, copia la matriz no administrada a la memoria administrada.</span><span class="sxs-lookup"><span data-stu-id="ce515-296">The following example copies an array to unmanaged memory and then copies the unmanaged array back to managed memory.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.Copy-double#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-double/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.Copy-double#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-double/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ce515-297"><paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" /> o <paramref name="length" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-297"><paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" />, or <paramref name="length" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-298">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-298">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-299">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-299">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (IntPtr source, short[] destination, int startIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(native int source, int16[] destination, int32 startIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Int16[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (source As IntPtr, destination As Short(), startIndex As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(IntPtr source, cli::array &lt;short&gt; ^ destination, int startIndex, int length);" />
      <MemberSignature Language="F#" Value="static member Copy : nativeint * int16[] * int * int -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.Copy (source, destination, startIndex, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IntPtr" />
        <Parameter Name="destination" Type="System.Int16[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="ce515-300">Puntero de memoria del que se va a copiar.</span><span class="sxs-lookup"><span data-stu-id="ce515-300">The memory pointer to copy from.</span></span></param>
        <param name="destination"><span data-ttu-id="ce515-301">Matriz en la que se va a copiar.</span><span class="sxs-lookup"><span data-stu-id="ce515-301">The array to copy to.</span></span></param>
        <param name="startIndex"><span data-ttu-id="ce515-302">Índice de base cero de la matriz de destino donde debe comenzar la copia.</span><span class="sxs-lookup"><span data-stu-id="ce515-302">The zero-based index in the destination array where copying should start.</span></span></param>
        <param name="length"><span data-ttu-id="ce515-303">Número de elementos de la matriz que se van a copiar.</span><span class="sxs-lookup"><span data-stu-id="ce515-303">The number of array elements to copy.</span></span></param>
        <summary><span data-ttu-id="ce515-304">Copia datos de un puntero de memoria no administrada a una matriz administrada de enteros de 16 bits con signo.</span><span class="sxs-lookup"><span data-stu-id="ce515-304">Copies data from an unmanaged memory pointer to a managed 16-bit signed integer array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-305">No administrados, matrices de estilo C no contienen información de límites, lo que evita la `startIndex` y `length` parámetros desde el que se está validando.</span><span class="sxs-lookup"><span data-stu-id="ce515-305">Unmanaged, C-style arrays do not contain bounds information, which prevents the `startIndex` and `length` parameters from being validated.</span></span> <span data-ttu-id="ce515-306">Por lo tanto, los datos no administrados correspondientes a la `source` parámetro rellena la matriz administrada independientemente de su utilidad.</span><span class="sxs-lookup"><span data-stu-id="ce515-306">Thus, the unmanaged data corresponding to the `source` parameter populates the managed array regardless of its usefulness.</span></span> <span data-ttu-id="ce515-307">Debe inicializar la matriz administrada con el tamaño adecuado antes de llamar a este método.</span><span class="sxs-lookup"><span data-stu-id="ce515-307">You must initialize the managed array with the appropriate size before calling this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ce515-308">El ejemplo siguiente copia una matriz en memoria no administrada y, a continuación, copia la matriz no administrada a la memoria administrada.</span><span class="sxs-lookup"><span data-stu-id="ce515-308">The following example copies an array to unmanaged memory and then copies the unmanaged array back to managed memory.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.Copy-int16#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-int16/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.Copy-int16#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-int16/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ce515-309"><paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" /> o <paramref name="length" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-309"><paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" />, or <paramref name="length" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-310">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-310">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-311">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-311">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (IntPtr source, int[] destination, int startIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(native int source, int32[] destination, int32 startIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Int32[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (source As IntPtr, destination As Integer(), startIndex As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(IntPtr source, cli::array &lt;int&gt; ^ destination, int startIndex, int length);" />
      <MemberSignature Language="F#" Value="static member Copy : nativeint * int[] * int * int -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.Copy (source, destination, startIndex, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IntPtr" />
        <Parameter Name="destination" Type="System.Int32[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="ce515-312">Puntero de memoria del que se va a copiar.</span><span class="sxs-lookup"><span data-stu-id="ce515-312">The memory pointer to copy from.</span></span></param>
        <param name="destination"><span data-ttu-id="ce515-313">Matriz en la que se va a copiar.</span><span class="sxs-lookup"><span data-stu-id="ce515-313">The array to copy to.</span></span></param>
        <param name="startIndex"><span data-ttu-id="ce515-314">Índice de base cero de la matriz de destino donde debe comenzar la copia.</span><span class="sxs-lookup"><span data-stu-id="ce515-314">The zero-based index in the destination array where copying should start.</span></span></param>
        <param name="length"><span data-ttu-id="ce515-315">Número de elementos de la matriz que se van a copiar.</span><span class="sxs-lookup"><span data-stu-id="ce515-315">The number of array elements to copy.</span></span></param>
        <summary><span data-ttu-id="ce515-316">Copia datos de un puntero de memoria no administrada a una matriz administrada de enteros de 32 bits con signo.</span><span class="sxs-lookup"><span data-stu-id="ce515-316">Copies data from an unmanaged memory pointer to a managed 32-bit signed integer array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-317">No administrados, matrices de estilo C no contienen información de límites, lo que evita la `startIndex` y `length` parámetros desde el que se está validando.</span><span class="sxs-lookup"><span data-stu-id="ce515-317">Unmanaged, C-style arrays do not contain bounds information, which prevents the `startIndex` and `length` parameters from being validated.</span></span> <span data-ttu-id="ce515-318">Por lo tanto, los datos no administrados correspondientes a la `source` parámetro rellena la matriz administrada independientemente de su utilidad.</span><span class="sxs-lookup"><span data-stu-id="ce515-318">Thus, the unmanaged data corresponding to the `source` parameter populates the managed array regardless of its usefulness.</span></span> <span data-ttu-id="ce515-319">Debe inicializar la matriz administrada con el tamaño adecuado antes de llamar a este método.</span><span class="sxs-lookup"><span data-stu-id="ce515-319">You must initialize the managed array with the appropriate size before calling this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ce515-320">El ejemplo siguiente copia una matriz en memoria no administrada y, a continuación, copia la matriz no administrada a la memoria administrada.</span><span class="sxs-lookup"><span data-stu-id="ce515-320">The following example copies an array to unmanaged memory and then copies the unmanaged array back to managed memory.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.Copy-int#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-int/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.Copy-int#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-int/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ce515-321"><paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" /> o <paramref name="length" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-321"><paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" />, or <paramref name="length" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-322">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-322">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-323">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-323">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (IntPtr source, long[] destination, int startIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(native int source, int64[] destination, int32 startIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Int64[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (source As IntPtr, destination As Long(), startIndex As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(IntPtr source, cli::array &lt;long&gt; ^ destination, int startIndex, int length);" />
      <MemberSignature Language="F#" Value="static member Copy : nativeint * int64[] * int * int -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.Copy (source, destination, startIndex, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IntPtr" />
        <Parameter Name="destination" Type="System.Int64[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="ce515-324">Puntero de memoria del que se va a copiar.</span><span class="sxs-lookup"><span data-stu-id="ce515-324">The memory pointer to copy from.</span></span></param>
        <param name="destination"><span data-ttu-id="ce515-325">Matriz en la que se va a copiar.</span><span class="sxs-lookup"><span data-stu-id="ce515-325">The array to copy to.</span></span></param>
        <param name="startIndex"><span data-ttu-id="ce515-326">Índice de base cero de la matriz de destino donde debe comenzar la copia.</span><span class="sxs-lookup"><span data-stu-id="ce515-326">The zero-based index in the destination array where copying should start.</span></span></param>
        <param name="length"><span data-ttu-id="ce515-327">Número de elementos de la matriz que se van a copiar.</span><span class="sxs-lookup"><span data-stu-id="ce515-327">The number of array elements to copy.</span></span></param>
        <summary><span data-ttu-id="ce515-328">Copia datos de un puntero de memoria no administrada a una matriz administrada de enteros de 64 bits con signo.</span><span class="sxs-lookup"><span data-stu-id="ce515-328">Copies data from an unmanaged memory pointer to a managed 64-bit signed integer array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-329">No administrados, matrices de estilo C no contienen información de límites, lo que evita la `startIndex` y `length` parámetros desde el que se está validando.</span><span class="sxs-lookup"><span data-stu-id="ce515-329">Unmanaged, C-style arrays do not contain bounds information, which prevents the `startIndex` and `length` parameters from being validated.</span></span> <span data-ttu-id="ce515-330">Por lo tanto, los datos no administrados correspondientes a la`source` parámetro rellena la matriz administrada independientemente de su utilidad.</span><span class="sxs-lookup"><span data-stu-id="ce515-330">Thus, the unmanaged data corresponding to the`source` parameter populates the managed array regardless of its usefulness.</span></span> <span data-ttu-id="ce515-331">Debe inicializar la matriz administrada con el tamaño adecuado antes de llamar a este método.</span><span class="sxs-lookup"><span data-stu-id="ce515-331">You must initialize the managed array with the appropriate size before calling this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ce515-332">El ejemplo siguiente copia una matriz en memoria no administrada y, a continuación, copia la matriz no administrada a la memoria administrada.</span><span class="sxs-lookup"><span data-stu-id="ce515-332">The following example copies an array to unmanaged memory and then copies the unmanaged array back to managed memory.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.Copy-int64#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-int64/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.Copy-int64#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-int64/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ce515-333"><paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" /> o <paramref name="length" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-333"><paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" />, or <paramref name="length" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-334">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-334">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-335">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-335">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (IntPtr source, IntPtr[] destination, int startIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(native int source, native int[] destination, int32 startIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.IntPtr[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (source As IntPtr, destination As IntPtr(), startIndex As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(IntPtr source, cli::array &lt;IntPtr&gt; ^ destination, int startIndex, int length);" />
      <MemberSignature Language="F#" Value="static member Copy : nativeint * nativeint[] * int * int -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.Copy (source, destination, startIndex, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IntPtr" />
        <Parameter Name="destination" Type="System.IntPtr[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="ce515-336">Puntero de memoria del que se va a copiar.</span><span class="sxs-lookup"><span data-stu-id="ce515-336">The memory pointer to copy from.</span></span></param>
        <param name="destination"><span data-ttu-id="ce515-337">Matriz en la que se va a copiar.</span><span class="sxs-lookup"><span data-stu-id="ce515-337">The array to copy to.</span></span></param>
        <param name="startIndex"><span data-ttu-id="ce515-338">Índice de base cero de la matriz de destino donde debe comenzar la copia.</span><span class="sxs-lookup"><span data-stu-id="ce515-338">The zero-based index in the destination array where copying should start.</span></span></param>
        <param name="length"><span data-ttu-id="ce515-339">Número de elementos de la matriz que se van a copiar.</span><span class="sxs-lookup"><span data-stu-id="ce515-339">The number of array elements to copy.</span></span></param>
        <summary><span data-ttu-id="ce515-340">Copia datos de un puntero de memoria no administrada a una matriz <see cref="T:System.IntPtr" /> administrada.</span><span class="sxs-lookup"><span data-stu-id="ce515-340">Copies data from an unmanaged memory pointer to a managed <see cref="T:System.IntPtr" /> array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-341">No administrados, matrices de estilo C no contienen información de límites, lo que evita la `startIndex` y `length` parámetros desde el que se está validando.</span><span class="sxs-lookup"><span data-stu-id="ce515-341">Unmanaged, C-style arrays do not contain bounds information, which prevents the `startIndex` and `length` parameters from being validated.</span></span> <span data-ttu-id="ce515-342">Por lo tanto, los datos no administrados que se corresponde con el `source` parámetro rellena la matriz administrada independientemente de su utilidad.</span><span class="sxs-lookup"><span data-stu-id="ce515-342">Therefore, the unmanaged data that corresponds to the `source` parameter populates the managed array regardless of its usefulness.</span></span> <span data-ttu-id="ce515-343">Debe inicializar la matriz administrada con el tamaño adecuado antes de llamar a la <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="ce515-343">You must initialize the managed array with the appropriate size before calling the <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ce515-344"><paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" /> o <paramref name="length" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-344"><paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" />, or <paramref name="length" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-345">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-345">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-346">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-346">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (IntPtr source, float[] destination, int startIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(native int source, float32[] destination, int32 startIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Single[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (source As IntPtr, destination As Single(), startIndex As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(IntPtr source, cli::array &lt;float&gt; ^ destination, int startIndex, int length);" />
      <MemberSignature Language="F#" Value="static member Copy : nativeint * single[] * int * int -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.Copy (source, destination, startIndex, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IntPtr" />
        <Parameter Name="destination" Type="System.Single[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="ce515-347">Puntero de memoria del que se va a copiar.</span><span class="sxs-lookup"><span data-stu-id="ce515-347">The memory pointer to copy from.</span></span></param>
        <param name="destination"><span data-ttu-id="ce515-348">Matriz en la que se va a copiar.</span><span class="sxs-lookup"><span data-stu-id="ce515-348">The array to copy to.</span></span></param>
        <param name="startIndex"><span data-ttu-id="ce515-349">Índice de base cero de la matriz de destino donde debe comenzar la copia.</span><span class="sxs-lookup"><span data-stu-id="ce515-349">The zero-based index in the destination array where copying should start.</span></span></param>
        <param name="length"><span data-ttu-id="ce515-350">Número de elementos de la matriz que se van a copiar.</span><span class="sxs-lookup"><span data-stu-id="ce515-350">The number of array elements to copy.</span></span></param>
        <summary><span data-ttu-id="ce515-351">Copia datos de un puntero de memoria no administrada a una matriz administrada de números de punto flotante de precisión sencilla.</span><span class="sxs-lookup"><span data-stu-id="ce515-351">Copies data from an unmanaged memory pointer to a managed single-precision floating-point number array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-352">No administrados, matrices de estilo C no contienen información de límites, lo que evita la `startIndex` y `length` parámetros desde el que se está validando.</span><span class="sxs-lookup"><span data-stu-id="ce515-352">Unmanaged, C-style arrays do not contain bounds information, which prevents the `startIndex` and `length` parameters from being validated.</span></span> <span data-ttu-id="ce515-353">Por lo tanto, los datos no administrados correspondientes a la `source` parámetro rellena la matriz administrada independientemente de su utilidad.</span><span class="sxs-lookup"><span data-stu-id="ce515-353">Thus, the unmanaged data corresponding to the `source` parameter populates the managed array regardless of its usefulness.</span></span> <span data-ttu-id="ce515-354">Debe inicializar la matriz administrada con el tamaño adecuado antes de llamar a este método.</span><span class="sxs-lookup"><span data-stu-id="ce515-354">You must initialize the managed array with the appropriate size before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ce515-355"><paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" /> o <paramref name="length" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-355"><paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" />, or <paramref name="length" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-356">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-356">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-357">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-357">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (IntPtr[] source, int startIndex, IntPtr destination, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(native int[] source, int32 startIndex, native int destination, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr[],System.Int32,System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (source As IntPtr(), startIndex As Integer, destination As IntPtr, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(cli::array &lt;IntPtr&gt; ^ source, int startIndex, IntPtr destination, int length);" />
      <MemberSignature Language="F#" Value="static member Copy : nativeint[] * int * nativeint * int -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.Copy (source, startIndex, destination, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IntPtr[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="destination" Type="System.IntPtr" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="ce515-358">Matriz unidimensional de la que se va a copiar.</span><span class="sxs-lookup"><span data-stu-id="ce515-358">The one-dimensional array to copy from.</span></span></param>
        <param name="startIndex"><span data-ttu-id="ce515-359">Índice de base cero de la matriz de origen donde debe comenzar la copia.</span><span class="sxs-lookup"><span data-stu-id="ce515-359">The zero-based index in the source array where copying should start.</span></span></param>
        <param name="destination"><span data-ttu-id="ce515-360">Puntero de memoria en el que se va a copiar.</span><span class="sxs-lookup"><span data-stu-id="ce515-360">The memory pointer to copy to.</span></span></param>
        <param name="length"><span data-ttu-id="ce515-361">Número de elementos de la matriz que se van a copiar.</span><span class="sxs-lookup"><span data-stu-id="ce515-361">The number of array elements to copy.</span></span></param>
        <summary><span data-ttu-id="ce515-362">Copia datos de una matriz <see cref="T:System.IntPtr" /> unidimensional y administrada a un puntero de memoria no administrada.</span><span class="sxs-lookup"><span data-stu-id="ce515-362">Copies data from a one-dimensional, managed <see cref="T:System.IntPtr" /> array to an unmanaged memory pointer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-363">Puede usar este método para copiar un subconjunto de unidimensional administrada <xref:System.IntPtr> matriz en una matriz de estilo C no administrada.</span><span class="sxs-lookup"><span data-stu-id="ce515-363">You can use this method to copy a subset of a one-dimensional managed <xref:System.IntPtr> array to an unmanaged C-style array.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ce515-364"><paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" /> o <paramref name="length" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-364"><paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" />, or <paramref name="length" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-365">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-365">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-366">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-366">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (float[] source, int startIndex, IntPtr destination, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(float32[] source, int32 startIndex, native int destination, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Copy(System.Single[],System.Int32,System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (source As Single(), startIndex As Integer, destination As IntPtr, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(cli::array &lt;float&gt; ^ source, int startIndex, IntPtr destination, int length);" />
      <MemberSignature Language="F#" Value="static member Copy : single[] * int * nativeint * int -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.Copy (source, startIndex, destination, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Single[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="destination" Type="System.IntPtr" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="ce515-367">Matriz unidimensional de la que se va a copiar.</span><span class="sxs-lookup"><span data-stu-id="ce515-367">The one-dimensional array to copy from.</span></span></param>
        <param name="startIndex"><span data-ttu-id="ce515-368">Índice de base cero de la matriz de origen donde debe comenzar la copia.</span><span class="sxs-lookup"><span data-stu-id="ce515-368">The zero-based index in the source array where copying should start.</span></span></param>
        <param name="destination"><span data-ttu-id="ce515-369">Puntero de memoria en el que se va a copiar.</span><span class="sxs-lookup"><span data-stu-id="ce515-369">The memory pointer to copy to.</span></span></param>
        <param name="length"><span data-ttu-id="ce515-370">Número de elementos de la matriz que se van a copiar.</span><span class="sxs-lookup"><span data-stu-id="ce515-370">The number of array elements to copy.</span></span></param>
        <summary><span data-ttu-id="ce515-371">Copia datos de una matriz unidimensional y administrada de números de punto flotante de precisión sencilla a un puntero de memoria no administrada.</span><span class="sxs-lookup"><span data-stu-id="ce515-371">Copies data from a one-dimensional, managed single-precision floating-point number array to an unmanaged memory pointer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-372">Puede usar este método para copiar un subconjunto de una matriz unidimensional y administrada en una matriz de estilo C no administrada.</span><span class="sxs-lookup"><span data-stu-id="ce515-372">You can use this method to copy a subset of a one-dimensional managed array to an unmanaged C-style array.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="ce515-373"><paramref name="startIndex" /> y <paramref name="length" /> no son válidos.</span><span class="sxs-lookup"><span data-stu-id="ce515-373"><paramref name="startIndex" /> and <paramref name="length" /> are not valid.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ce515-374"><paramref name="source" />, <paramref name="startIndex" />, <paramref name="destination" /> o <paramref name="length" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-374"><paramref name="source" />, <paramref name="startIndex" />, <paramref name="destination" />, or <paramref name="length" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-375">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-375">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-376">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-376">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateAggregatedObject">
      <MemberSignature Language="C#" Value="public static IntPtr CreateAggregatedObject (IntPtr pOuter, object o);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int CreateAggregatedObject(native int pOuter, object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.CreateAggregatedObject(System.IntPtr,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateAggregatedObject (pOuter As IntPtr, o As Object) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr CreateAggregatedObject(IntPtr pOuter, System::Object ^ o);" />
      <MemberSignature Language="F#" Value="static member CreateAggregatedObject : nativeint * obj -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.CreateAggregatedObject (pOuter, o)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netcore-2.2">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Obsolete("CreateAggregatedObject(IntPtr, Object) may be unavailable in future releases. Instead, use CreateAggregatedObject&lt;T&gt;(IntPtr, T). For more info, go to http://go.microsoft.com/fwlink/?LinkID=296518")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pOuter" Type="System.IntPtr" />
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="pOuter"><span data-ttu-id="ce515-377">Puntero <see langword="IUnknown" /> externo.</span><span class="sxs-lookup"><span data-stu-id="ce515-377">The outer <see langword="IUnknown" /> pointer.</span></span></param>
        <param name="o"><span data-ttu-id="ce515-378">Objeto que se va a agregar.</span><span class="sxs-lookup"><span data-stu-id="ce515-378">An object to aggregate.</span></span></param>
        <summary><span data-ttu-id="ce515-379">Agrega un objeto administrado al objeto COM especificado.</span><span class="sxs-lookup"><span data-stu-id="ce515-379">Aggregates a managed object with the specified COM object.</span></span></summary>
        <returns><span data-ttu-id="ce515-380">Puntero <see langword="IUnknown" /> interno del objeto administrado.</span><span class="sxs-lookup"><span data-stu-id="ce515-380">The inner <see langword="IUnknown" /> pointer of the managed object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-381">El <xref:System.Runtime.InteropServices.Marshal.CreateAggregatedObject%2A> método agrega el puntero interno administrado de un objeto administrado con el puntero externo especificado y, a continuación, devuelve interior [IUnknown](https://go.microsoft.com/fwlink/?LinkId=148003) puntero del objeto administrado.</span><span class="sxs-lookup"><span data-stu-id="ce515-381">The <xref:System.Runtime.InteropServices.Marshal.CreateAggregatedObject%2A> method aggregates the inner managed pointer of a managed object with the specified outer pointer, and then returns an inner [IUnknown](https://go.microsoft.com/fwlink/?LinkId=148003) pointer of the managed object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ce515-382"><paramref name="o" /> es un objeto [!INCLUDE[wrt](~/includes/wrt-md.md)].</span><span class="sxs-lookup"><span data-stu-id="ce515-382"><paramref name="o" /> is a [!INCLUDE[wrt](~/includes/wrt-md.md)] object.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-383">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-383">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-384">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-384">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateAggregatedObject&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static IntPtr CreateAggregatedObject&lt;T&gt; (IntPtr pOuter, T o);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int CreateAggregatedObject&lt;T&gt;(native int pOuter, !!T o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.CreateAggregatedObject``1(System.IntPtr,``0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateAggregatedObject(Of T) (pOuter As IntPtr, o As T) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static IntPtr CreateAggregatedObject(IntPtr pOuter, T o);" />
      <MemberSignature Language="F#" Value="static member CreateAggregatedObject : nativeint * 'T -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.CreateAggregatedObject (pOuter, o)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="pOuter" Type="System.IntPtr" />
        <Parameter Name="o" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="ce515-385">Tipo del objeto administrado que se va a agregar.</span><span class="sxs-lookup"><span data-stu-id="ce515-385">The type of the managed object to aggregate.</span></span></typeparam>
        <param name="pOuter"><span data-ttu-id="ce515-386">El puntero externo [IUnknown](https://go.microsoft.com/fwlink/?LinkId=148003).</span><span class="sxs-lookup"><span data-stu-id="ce515-386">The outer [IUnknown](https://go.microsoft.com/fwlink/?LinkId=148003) pointer.</span></span></param>
        <param name="o"><span data-ttu-id="ce515-387">Objeto administrado que se va a agregar.</span><span class="sxs-lookup"><span data-stu-id="ce515-387">The managed object to aggregate.</span></span></param>
        <summary><span data-ttu-id="ce515-388">[Compatible con .NET Framework 4.5.1 y versiones posteriores]</span><span class="sxs-lookup"><span data-stu-id="ce515-388">[Supported in the .NET Framework 4.5.1 and later versions]</span></span> 
<span data-ttu-id="ce515-389">Agrega un objeto administrado del tipo especificado con el objeto COM especificado.</span><span class="sxs-lookup"><span data-stu-id="ce515-389">Aggregates a managed object of the specified type with the specified COM object.</span></span></summary>
        <returns><span data-ttu-id="ce515-390">El puntero interno <see href="https://docs.microsoft.com/windows/desktop/api/unknwn/nn-unknwn-iunknown">IUnknown</see> del objeto administrado.</span><span class="sxs-lookup"><span data-stu-id="ce515-390">The inner <see href="https://docs.microsoft.com/windows/desktop/api/unknwn/nn-unknwn-iunknown">IUnknown</see> pointer of the managed object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-391">El <xref:System.Runtime.InteropServices.Marshal.CreateAggregatedObject%2A> método agrega el puntero interno administrado de un objeto administrado de un tipo especificado con el puntero externo especificado y devuelve el interior [IUnknown](https://go.microsoft.com/fwlink/?LinkId=148003) puntero del objeto administrado.</span><span class="sxs-lookup"><span data-stu-id="ce515-391">The <xref:System.Runtime.InteropServices.Marshal.CreateAggregatedObject%2A> method aggregates the inner managed pointer of a managed object of a specified type with the specified outer pointer, and returns an inner [IUnknown](https://go.microsoft.com/fwlink/?LinkId=148003) pointer of the managed object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ce515-392"><paramref name="o" /> es un objeto [!INCLUDE[wrt](~/includes/wrt-md.md)].</span><span class="sxs-lookup"><span data-stu-id="ce515-392"><paramref name="o" /> is a [!INCLUDE[wrt](~/includes/wrt-md.md)] object.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-393">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-393">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-394">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-394">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateWrapperOfType">
      <MemberSignature Language="C#" Value="public static object CreateWrapperOfType (object o, Type t);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object CreateWrapperOfType(object o, class System.Type t) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.CreateWrapperOfType(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateWrapperOfType (o As Object, t As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CreateWrapperOfType(System::Object ^ o, Type ^ t);" />
      <MemberSignature Language="F#" Value="static member CreateWrapperOfType : obj * Type -&gt; obj" Usage="System.Runtime.InteropServices.Marshal.CreateWrapperOfType (o, t)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netcore-2.2">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Obsolete("CreateWrapperOfType(Object, Type) may be unavailable in future releases. Instead, use CreateWrapperOfType&lt;T,T2&gt;(T). For more info, go to http://go.microsoft.com/fwlink/?LinkID=296519")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
        <Parameter Name="t" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="o"><span data-ttu-id="ce515-395">Objeto que se va a almacenar en un contenedor.</span><span class="sxs-lookup"><span data-stu-id="ce515-395">The object to be wrapped.</span></span></param>
        <param name="t"><span data-ttu-id="ce515-396">Tipo de contenedor que se va a crear.</span><span class="sxs-lookup"><span data-stu-id="ce515-396">The type of wrapper to create.</span></span></param>
        <summary><span data-ttu-id="ce515-397">Ajusta el objeto COM especificado en un objeto del tipo especificado.</span><span class="sxs-lookup"><span data-stu-id="ce515-397">Wraps the specified COM object in an object of the specified type.</span></span></summary>
        <returns><span data-ttu-id="ce515-398">Objeto recién ajustado que es una instancia del tipo deseado.</span><span class="sxs-lookup"><span data-stu-id="ce515-398">The newly wrapped object that is an instance of the desired type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-399"><xref:System.Runtime.InteropServices.Marshal.CreateWrapperOfType%2A> Convierte un tipo de clase COM, normalmente la base de `__ComObject` tipo a otro tipo de clase COM.</span><span class="sxs-lookup"><span data-stu-id="ce515-399"><xref:System.Runtime.InteropServices.Marshal.CreateWrapperOfType%2A> converts one COM class type, typically the base `__ComObject` type, to another COM class type.</span></span> <span data-ttu-id="ce515-400">El objeto COM de entrada, representado por el parámetro `o`, es un [contenedor RCW](~/docs/framework/interop/runtime-callable-wrapper.md) (RCW).</span><span class="sxs-lookup"><span data-stu-id="ce515-400">The input COM object, represented by parameter `o`, is a [Runtime Callable Wrapper](~/docs/framework/interop/runtime-callable-wrapper.md) (RCW).</span></span>  
  
 <span data-ttu-id="ce515-401">Tanto el `t` y `o` parámetros deben ser clases cuyas firmas se atribuyen con <xref:System.Runtime.InteropServices.ComImportAttribute?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ce515-401">Both the `t` and `o` parameters must be classes whose signatures are attributed with <xref:System.Runtime.InteropServices.ComImportAttribute?displayProperty=nameWithType>.</span></span> <span data-ttu-id="ce515-402">El [Tlbimp.exe (importador de biblioteca)](~/docs/framework/tools/tlbimp-exe-type-library-importer.md) herramienta aplica este atributo para cuando importa una biblioteca de tipos.</span><span class="sxs-lookup"><span data-stu-id="ce515-402">The [Tlbimp.exe (Type Library Importer)](~/docs/framework/tools/tlbimp-exe-type-library-importer.md) tool applies this attribute for you when it imports a type library.</span></span> <span data-ttu-id="ce515-403">Si crea el contenedor RCW manualmente en el código fuente, debe aplicar este atributo a la firma administrada que representa la coclase original para indicar su origen COM.</span><span class="sxs-lookup"><span data-stu-id="ce515-403">If you create the RCW manually in source code, you should apply this attribute to the managed signature that represents the original coclass to signify its COM origins.</span></span>  
  
 <span data-ttu-id="ce515-404">Tlbimp.exe importa COM [coclase](https://msdn.microsoft.com/library/333d0904-ffa2-4d25-878d-7422bcd40582) como una clase administrada y una interfaz.</span><span class="sxs-lookup"><span data-stu-id="ce515-404">Tlbimp.exe imports a COM [coclass](https://msdn.microsoft.com/library/333d0904-ffa2-4d25-878d-7422bcd40582) as a managed class and an interface.</span></span> <span data-ttu-id="ce515-405">La interfaz de coclase tiene el mismo nombre que la coclase original y la clase administrada tiene el nombre de coclase original con "Class" anexado.</span><span class="sxs-lookup"><span data-stu-id="ce515-405">The coclass interface has the same name as the original coclass, and the managed class has the original coclass name appended with "Class".</span></span> <span data-ttu-id="ce515-406">Por ejemplo, una coclase denominada `MyCoclass` se convierte en una interfaz de la coclase denominada `MyCoclass` y llama una clase administrada `MyCoclassClass`.</span><span class="sxs-lookup"><span data-stu-id="ce515-406">For example, a coclass called `MyCoclass` becomes a coclass interface called `MyCoclass` and a managed class called `MyCoclassClass`.</span></span> <span data-ttu-id="ce515-407">Puesto que `t` debe ser una clase, no una interfaz, asegúrese de especificar la clase administrada (`MyCoclassClass`) y no la interfaz de la coclase.</span><span class="sxs-lookup"><span data-stu-id="ce515-407">Since `t` must be a class, not an interface, be sure to specify the managed class (`MyCoclassClass`) and not the coclass interface.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ce515-408">Se pierde la identidad de la entrada de los objetos COM como una nueva instancia de contenedor RCW ajusta el [IUnknown](https://go.microsoft.com/fwlink/?LinkId=148003) puntero expuesto por el contenedor RCW original.</span><span class="sxs-lookup"><span data-stu-id="ce515-408">You lose the identity of the input COM object because a new RCW instance wraps the [IUnknown](https://go.microsoft.com/fwlink/?LinkId=148003) pointer exposed by the original RCW.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ce515-409"><paramref name="t" /> debe derivar de <see langword="__ComObject" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-409"><paramref name="t" /> must derive from <see langword="__ComObject" />.</span></span>  
  
<span data-ttu-id="ce515-410">O bien</span><span class="sxs-lookup"><span data-stu-id="ce515-410">-or-</span></span> 
 <span data-ttu-id="ce515-411"><paramref name="t" /> es un tipo [!INCLUDE[wrt](~/includes/wrt-md.md)].</span><span class="sxs-lookup"><span data-stu-id="ce515-411"><paramref name="t" /> is a [!INCLUDE[wrt](~/includes/wrt-md.md)] type.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ce515-412">El parámetro <paramref name="t" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-412">The <paramref name="t" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="ce515-413"><paramref name="o" /> no se puede convertir en el tipo de destino, ya que no admite todas las interfaces requeridas.</span><span class="sxs-lookup"><span data-stu-id="ce515-413"><paramref name="o" /> cannot be converted to the destination type because it does not support all required interfaces.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-414">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-414">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-415">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-415">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="T:System.Runtime.InteropServices.ComImportAttribute" />
      </Docs>
    </Member>
    <Member MemberName="CreateWrapperOfType&lt;T,TWrapper&gt;">
      <MemberSignature Language="C#" Value="public static TWrapper CreateWrapperOfType&lt;T,TWrapper&gt; (T o);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TWrapper CreateWrapperOfType&lt;T, TWrapper&gt;(!!T o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.CreateWrapperOfType``2(``0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateWrapperOfType(Of T, TWrapper) (o As T) As TWrapper" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T, typename TWrapper&gt;&#xA; static TWrapper CreateWrapperOfType(T o);" />
      <MemberSignature Language="F#" Value="static member CreateWrapperOfType : 'T -&gt; 'Wrapper" Usage="System.Runtime.InteropServices.Marshal.CreateWrapperOfType o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>TWrapper</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
        <TypeParameter Name="TWrapper" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="o" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="ce515-416">Tipo de objeto que se va a incluir.</span><span class="sxs-lookup"><span data-stu-id="ce515-416">The type of object to wrap.</span></span></typeparam>
        <typeparam name="TWrapper"><span data-ttu-id="ce515-417">Tipo de objeto que se va a devolver.</span><span class="sxs-lookup"><span data-stu-id="ce515-417">The type of object to return.</span></span></typeparam>
        <param name="o"><span data-ttu-id="ce515-418">Objeto que se va a almacenar en un contenedor.</span><span class="sxs-lookup"><span data-stu-id="ce515-418">The object to be wrapped.</span></span></param>
        <summary><span data-ttu-id="ce515-419">[Compatible con .NET Framework 4.5.1 y versiones posteriores]</span><span class="sxs-lookup"><span data-stu-id="ce515-419">[Supported in the .NET Framework 4.5.1 and later versions]</span></span> 
<span data-ttu-id="ce515-420">Ajusta el objeto COM especificado en un objeto del tipo especificado.</span><span class="sxs-lookup"><span data-stu-id="ce515-420">Wraps the specified COM object in an object of the specified type.</span></span></summary>
        <returns><span data-ttu-id="ce515-421">Objeto recién ajustado.</span><span class="sxs-lookup"><span data-stu-id="ce515-421">The newly wrapped object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-422"><xref:System.Runtime.InteropServices.Marshal.CreateWrapperOfType%60%602%28%60%600%29> Convierte un objeto COM de tipo `T` a la `TWrapper` tipo de clase COM.</span><span class="sxs-lookup"><span data-stu-id="ce515-422"><xref:System.Runtime.InteropServices.Marshal.CreateWrapperOfType%60%602%28%60%600%29> converts a COM object of type `T` to the `TWrapper` COM class type.</span></span> <span data-ttu-id="ce515-423">El objeto COM de entrada, representado por el parámetro `o`, es un [contenedor RCW](~/docs/framework/interop/runtime-callable-wrapper.md) (RCW).</span><span class="sxs-lookup"><span data-stu-id="ce515-423">The input COM object, represented by parameter `o`, is a [Runtime Callable Wrapper](~/docs/framework/interop/runtime-callable-wrapper.md) (RCW).</span></span>  
  
 <span data-ttu-id="ce515-424">Tanto el `T` parámetro de tipo genérico y el `o` parámetro debe ser clases cuyas firmas se atribuyen con el <xref:System.Runtime.InteropServices.ComImportAttribute?displayProperty=nameWithType> atributo.</span><span class="sxs-lookup"><span data-stu-id="ce515-424">Both the `T` generic type parameter and the `o` parameter must be classes whose signatures are attributed with the <xref:System.Runtime.InteropServices.ComImportAttribute?displayProperty=nameWithType> attribute.</span></span> <span data-ttu-id="ce515-425">El [Tlbimp.exe (importador de biblioteca)](~/docs/framework/tools/tlbimp-exe-type-library-importer.md) herramienta aplica este atributo para cuando importa una biblioteca de tipos.</span><span class="sxs-lookup"><span data-stu-id="ce515-425">The [Tlbimp.exe (Type Library Importer)](~/docs/framework/tools/tlbimp-exe-type-library-importer.md) tool applies this attribute for you when it imports a type library.</span></span> <span data-ttu-id="ce515-426">Si crea el contenedor RCW manualmente en el código fuente, debe aplicar este atributo a la firma administrada que representa la coclase original para indicar su origen COM.</span><span class="sxs-lookup"><span data-stu-id="ce515-426">If you create the RCW manually in source code, you should apply this attribute to the managed signature that represents the original coclass to signify its COM origins.</span></span>  
  
 <span data-ttu-id="ce515-427">Tlbimp.exe importa COM [coclase](https://msdn.microsoft.com/library/333d0904-ffa2-4d25-878d-7422bcd40582) como una clase administrada y una interfaz.</span><span class="sxs-lookup"><span data-stu-id="ce515-427">Tlbimp.exe imports a COM [coclass](https://msdn.microsoft.com/library/333d0904-ffa2-4d25-878d-7422bcd40582) as a managed class and an interface.</span></span> <span data-ttu-id="ce515-428">La interfaz de coclase tiene el mismo nombre que la coclase original y la clase administrada tiene el nombre de coclase original con "Class" anexado.</span><span class="sxs-lookup"><span data-stu-id="ce515-428">The coclass interface has the same name as the original coclass, and the managed class has the original coclass name appended with "Class".</span></span> <span data-ttu-id="ce515-429">Por ejemplo, una coclase denominada `MyCoclass` se convierte en una interfaz de la coclase denominada `MyCoclass` y llama una clase administrada `MyCoclassClass`.</span><span class="sxs-lookup"><span data-stu-id="ce515-429">For example, a coclass called `MyCoclass` becomes a coclass interface called `MyCoclass` and a managed class called `MyCoclassClass`.</span></span> <span data-ttu-id="ce515-430">Dado que`T` debe ser una clase, no una interfaz, asegúrese de especificar la clase administrada (`MyCoclassClass`) y no el `coclass` interfaz.</span><span class="sxs-lookup"><span data-stu-id="ce515-430">Because`T` must be a class, not an interface, be sure to specify the managed class (`MyCoclassClass`) and not the `coclass` interface.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ce515-431">Se pierde la identidad del objeto COM de entrada, como una nueva instancia de contenedor RCW ajusta el [IUnknown](https://go.microsoft.com/fwlink/?LinkId=148003) puntero expuesto por el contenedor RCW original.</span><span class="sxs-lookup"><span data-stu-id="ce515-431">You lose the identity of the input COM object, because a new RCW instance wraps the [IUnknown](https://go.microsoft.com/fwlink/?LinkId=148003) pointer exposed by the original RCW.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ce515-432"><typeparamref name="T" /> debe derivar de <see langword="__ComObject" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-432"><typeparamref name="T" /> must derive from <see langword="__ComObject" />.</span></span>  
  
<span data-ttu-id="ce515-433">O bien</span><span class="sxs-lookup"><span data-stu-id="ce515-433">-or-</span></span> 
 <span data-ttu-id="ce515-434"><typeparamref name="T" /> es un tipo [!INCLUDE[wrt](~/includes/wrt-md.md)].</span><span class="sxs-lookup"><span data-stu-id="ce515-434"><typeparamref name="T" /> is a [!INCLUDE[wrt](~/includes/wrt-md.md)] type.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="ce515-435"><paramref name="o" /> no se puede convertir en <paramref name="TWrapper" /> porque no admite todas las interfaces necesarias.</span><span class="sxs-lookup"><span data-stu-id="ce515-435"><paramref name="o" /> cannot be converted to the <paramref name="TWrapper" /> because it does not support all required interfaces.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-436">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-436">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-437">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-437">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="DestroyStructure">
      <MemberSignature Language="C#" Value="public static void DestroyStructure (IntPtr ptr, Type structuretype);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DestroyStructure(native int ptr, class System.Type structuretype) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.DestroyStructure(System.IntPtr,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub DestroyStructure (ptr As IntPtr, structuretype As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DestroyStructure(IntPtr ptr, Type ^ structuretype);" />
      <MemberSignature Language="F#" Value="static member DestroyStructure : nativeint * Type -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.DestroyStructure (ptr, structuretype)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netcore-2.2">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Obsolete("DestroyStructure(IntPtr, Type) may be unavailable in future releases. Instead, use DestroyStructure&lt;T&gt;(IntPtr). For more info, go to http://go.microsoft.com/fwlink/?LinkID=296520")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="structuretype" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="ptr"><span data-ttu-id="ce515-438">Puntero a un bloque de memoria no administrado.</span><span class="sxs-lookup"><span data-stu-id="ce515-438">A pointer to an unmanaged block of memory.</span></span></param>
        <param name="structuretype"><span data-ttu-id="ce515-439">Tipo de una clase con formato.</span><span class="sxs-lookup"><span data-stu-id="ce515-439">Type of a formatted class.</span></span> <span data-ttu-id="ce515-440">Proporciona la información de diseño necesaria para eliminar el búfer del parámetro <paramref name="ptr" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-440">This provides the layout information necessary to delete the buffer in the <paramref name="ptr" /> parameter.</span></span></param>
        <summary><span data-ttu-id="ce515-441">Libera todas las subestructuras a las que apunta el bloque de memoria no administrada especificado.</span><span class="sxs-lookup"><span data-stu-id="ce515-441">Frees all substructures that the specified unmanaged memory block points to.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-442">Puede usar este método para liberar los campos de tipo de referencia, como cadenas, de una estructura no administrada.</span><span class="sxs-lookup"><span data-stu-id="ce515-442">You can use this method to free reference-type fields, such as strings, of an unmanaged structure.</span></span> <span data-ttu-id="ce515-443">A diferencia de sus campos, una estructura puede ser un tipo de valor o un tipo de referencia.</span><span class="sxs-lookup"><span data-stu-id="ce515-443">Unlike its fields, a structure can be a value type or a reference type.</span></span> <span data-ttu-id="ce515-444">Estructuras de tipo de valor que contienen campos de tipo de valor (todos los bits/bytes) no tienen ninguna referencia cuya memoria se debe liberar.</span><span class="sxs-lookup"><span data-stu-id="ce515-444">Value-type structures that contain value-type fields (all blittable) have no references whose memory must be freed.</span></span> <span data-ttu-id="ce515-445">El <xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A?displayProperty=nameWithType> método usa este método para evitar pérdidas de memoria cuando se reutiliza la memoria ocupada por una estructura.</span><span class="sxs-lookup"><span data-stu-id="ce515-445">The <xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A?displayProperty=nameWithType> method uses this method to prevent memory leaks when reusing memory occupied by a structure.</span></span>  
  
 <span data-ttu-id="ce515-446"><xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A> las llamadas COM [SysFreeString](https://go.microsoft.com/fwlink/?LinkId=148633) función, lo que libera a su vez, una cadena asignada.</span><span class="sxs-lookup"><span data-stu-id="ce515-446"><xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A> calls the COM [SysFreeString](https://go.microsoft.com/fwlink/?LinkId=148633) function, which, in turn, frees an allocated string.</span></span>  
  
 <span data-ttu-id="ce515-447">Además <xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A>, <xref:System.Runtime.InteropServices.Marshal> clase proporciona otros dos métodos de desasignación de memoria: <xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A> y <xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A>.</span><span class="sxs-lookup"><span data-stu-id="ce515-447">In addition to <xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A>, the <xref:System.Runtime.InteropServices.Marshal> class provides two other memory-deallocation methods: <xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A> and <xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ce515-448"><paramref name="structureType" /> tiene un diseño automático.</span><span class="sxs-lookup"><span data-stu-id="ce515-448"><paramref name="structureType" /> has an automatic layout.</span></span> <span data-ttu-id="ce515-449">Utilice, en su lugar, un diseño secuencial o explícito.</span><span class="sxs-lookup"><span data-stu-id="ce515-449">Use sequential or explicit instead.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-450">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-450">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-451">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-451">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.FreeCoTaskMem(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)" />
        <related type="Article" href="https://msdn.microsoft.com/library/~/docs/framework/interop/blittable-and-non-blittable-types.md"><span data-ttu-id="ce515-452">Tipos de bits/bytes y Non-bits/bytes</span><span class="sxs-lookup"><span data-stu-id="ce515-452">Blittable and Non-Blittable types</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DestroyStructure&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void DestroyStructure&lt;T&gt; (IntPtr ptr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DestroyStructure&lt;T&gt;(native int ptr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.DestroyStructure``1(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub DestroyStructure(Of T) (ptr As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static void DestroyStructure(IntPtr ptr);" />
      <MemberSignature Language="F#" Value="static member DestroyStructure : nativeint -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.DestroyStructure ptr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="ce515-453">El tipo de estructura con formato.</span><span class="sxs-lookup"><span data-stu-id="ce515-453">The type of the formatted structure.</span></span> <span data-ttu-id="ce515-454">Proporciona la información de diseño necesaria para eliminar el búfer del parámetro <paramref name="ptr" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-454">This provides the layout information necessary to delete the buffer in the <paramref name="ptr" /> parameter.</span></span></typeparam>
        <param name="ptr"><span data-ttu-id="ce515-455">Puntero a un bloque de memoria no administrado.</span><span class="sxs-lookup"><span data-stu-id="ce515-455">A pointer to an unmanaged block of memory.</span></span></param>
        <summary><span data-ttu-id="ce515-456">[Compatible con .NET Framework 4.5.1 y versiones posteriores]</span><span class="sxs-lookup"><span data-stu-id="ce515-456">[Supported in the .NET Framework 4.5.1 and later versions]</span></span> 
<span data-ttu-id="ce515-457">Libera todas las subestructuras de un tipo especificado a las que apunta el bloque de memoria no administrada especificado.</span><span class="sxs-lookup"><span data-stu-id="ce515-457">Frees all substructures of a specified type that the specified unmanaged memory block points to.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-458">Puede usar este método para liberar los campos de tipo de referencia, como cadenas, de una estructura no administrada.</span><span class="sxs-lookup"><span data-stu-id="ce515-458">You can use this method to free reference type fields, such as strings, of an unmanaged structure.</span></span> <span data-ttu-id="ce515-459">A diferencia de sus campos, una estructura puede ser un tipo de valor o un tipo de referencia.</span><span class="sxs-lookup"><span data-stu-id="ce515-459">Unlike its fields, a structure can be a value type or a reference type.</span></span> <span data-ttu-id="ce515-460">Estructuras de tipo de valor que contienen campos de tipo de valor (todos los bits/bytes) no tienen ninguna referencia cuya memoria se debe liberar.</span><span class="sxs-lookup"><span data-stu-id="ce515-460">Value type structures that contain value type fields (all blittable) have no references whose memory must be freed.</span></span> <span data-ttu-id="ce515-461">El <xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A?displayProperty=nameWithType> método usa este método para evitar pérdidas de memoria cuando se reutiliza la memoria ocupada por una estructura.</span><span class="sxs-lookup"><span data-stu-id="ce515-461">The <xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A?displayProperty=nameWithType> method uses this method to prevent memory leaks when reusing memory occupied by a structure.</span></span>  
  
 <span data-ttu-id="ce515-462"><xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A> las llamadas COM [SysFreeString](https://go.microsoft.com/fwlink/?LinkId=148633) función, lo que libera a su vez, una cadena asignada.</span><span class="sxs-lookup"><span data-stu-id="ce515-462"><xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A> calls the COM [SysFreeString](https://go.microsoft.com/fwlink/?LinkId=148633) function, which, in turn, frees an allocated string.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ce515-463"><typeparamref name="T" /> tiene un diseño automático.</span><span class="sxs-lookup"><span data-stu-id="ce515-463"><typeparamref name="T" /> has an automatic layout.</span></span> <span data-ttu-id="ce515-464">Utilice, en su lugar, un diseño secuencial o explícito.</span><span class="sxs-lookup"><span data-stu-id="ce515-464">Use sequential or explicit instead.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-465">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-465">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-466">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-466">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="FinalReleaseComObject">
      <MemberSignature Language="C#" Value="public static int FinalReleaseComObject (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 FinalReleaseComObject(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.FinalReleaseComObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FinalReleaseComObject (o As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int FinalReleaseComObject(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="static member FinalReleaseComObject : obj -&gt; int" Usage="System.Runtime.InteropServices.Marshal.FinalReleaseComObject o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o"><span data-ttu-id="ce515-467">RCW que se va a liberar.</span><span class="sxs-lookup"><span data-stu-id="ce515-467">The RCW to be released.</span></span></param>
        <summary><span data-ttu-id="ce515-468">Libera todas las referencias a un <see href="https://docs.microsoft.com/dotnet/framework/interop/runtime-callable-wrapper">contenedor RCW</see> estableciendo su recuento de referencias en 0.</span><span class="sxs-lookup"><span data-stu-id="ce515-468">Releases all references to a <see href="https://docs.microsoft.com/dotnet/framework/interop/runtime-callable-wrapper">Runtime Callable Wrapper</see> (RCW) by setting its reference count to 0.</span></span></summary>
        <returns><span data-ttu-id="ce515-469">Nuevo valor del recuento de referencias del RCW asociado al parámetro <paramref name="o" />, que es 0 (cero) si la liberación se realiza correctamente.</span><span class="sxs-lookup"><span data-stu-id="ce515-469">The new value of the reference count of the RCW associated with the <paramref name="o" /> parameter, which is 0 (zero) if the release is successful.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-470">El <xref:System.Runtime.InteropServices.Marshal.FinalReleaseComObject%2A> método libera la referencia a un objeto COM administrada.</span><span class="sxs-lookup"><span data-stu-id="ce515-470">The <xref:System.Runtime.InteropServices.Marshal.FinalReleaseComObject%2A> method releases the managed reference to a COM object.</span></span> <span data-ttu-id="ce515-471">Llamar a este método equivale a llamar a la <xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A> método en un bucle hasta que se devuelve 0 (cero).</span><span class="sxs-lookup"><span data-stu-id="ce515-471">Calling this method is equivalent to calling the <xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A> method in a loop until it returns 0 (zero).</span></span>  
  
 <span data-ttu-id="ce515-472">Cuando el recuento de referencias en el objeto COM se convierte en 0, normalmente se libera el objeto COM, aunque esto depende de implementación del objeto COM y está más allá del control del tiempo de ejecución.</span><span class="sxs-lookup"><span data-stu-id="ce515-472">When the reference count on the COM object becomes 0, the COM object is usually freed, although this depends on the COM object's implementation and is beyond the control of the runtime.</span></span> <span data-ttu-id="ce515-473">Sin embargo, el contenedor RCW puede aún existe, espera de recolección.</span><span class="sxs-lookup"><span data-stu-id="ce515-473">However, the RCW can still exist, waiting to be garbage-collected.</span></span>  
  
 <span data-ttu-id="ce515-474">El objeto COM no se puede usar una vez que se ha separado de su RCW subyacente.</span><span class="sxs-lookup"><span data-stu-id="ce515-474">The COM object cannot be used after it has been separated from its underlying RCW.</span></span> <span data-ttu-id="ce515-475">Si intenta llamar a un método en el RCW después de que su recuento de referencias se convierte en 0, un <xref:System.Runtime.InteropServices.InvalidComObjectException> se iniciará.</span><span class="sxs-lookup"><span data-stu-id="ce515-475">If you try to call a method on the RCW after its reference count becomes 0, a <xref:System.Runtime.InteropServices.InvalidComObjectException> will be thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ce515-476"><paramref name="o" /> no es un objeto COM válido.</span><span class="sxs-lookup"><span data-stu-id="ce515-476"><paramref name="o" /> is not a valid COM object.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ce515-477">El valor de <paramref name="o" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-477"><paramref name="o" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-478">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-478">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-479">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-479">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.ReleaseComObject(System.Object)" />
        <altmember cref="T:System.NullReferenceException" />
      </Docs>
    </Member>
    <Member MemberName="FreeBSTR">
      <MemberSignature Language="C#" Value="public static void FreeBSTR (IntPtr ptr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FreeBSTR(native int ptr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.FreeBSTR(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub FreeBSTR (ptr As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void FreeBSTR(IntPtr ptr);" />
      <MemberSignature Language="F#" Value="static member FreeBSTR : nativeint -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.FreeBSTR ptr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="ptr"><span data-ttu-id="ce515-480">Dirección del BSTR que se va a liberar.</span><span class="sxs-lookup"><span data-stu-id="ce515-480">The address of the BSTR to be freed.</span></span></param>
        <summary><span data-ttu-id="ce515-481">Libera un <see langword="BSTR" /> utilizando la función [SysFreeString](https://go.microsoft.com/fwlink/?LinkID=148633) de COM.</span><span class="sxs-lookup"><span data-stu-id="ce515-481">Frees a <see langword="BSTR" /> using the COM [SysFreeString](https://go.microsoft.com/fwlink/?LinkID=148633) function.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-482">Al igual que <xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A?displayProperty=nameWithType> y <xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A?displayProperty=nameWithType>, puede usar este método para desasignar memoria.</span><span class="sxs-lookup"><span data-stu-id="ce515-482">Like <xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A?displayProperty=nameWithType> and <xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A?displayProperty=nameWithType>, you can use this method to deallocate memory.</span></span> <span data-ttu-id="ce515-483"><xref:System.Runtime.InteropServices.Marshal.FreeBSTR%2A> las llamadas COM [SysFreeString](https://go.microsoft.com/fwlink/?LinkID=148633) función, que libera la memoria asignada por alguno de los siguientes métodos no administrados: `SysAllocString`, `SysAllocStringByteLen`, `SysAllocStringLen`, `SysReAllocString`, `SysReAllocStringLen`.</span><span class="sxs-lookup"><span data-stu-id="ce515-483"><xref:System.Runtime.InteropServices.Marshal.FreeBSTR%2A> calls the COM [SysFreeString](https://go.microsoft.com/fwlink/?LinkID=148633) function, which frees memory allocated by any of the following unmanaged methods: `SysAllocString`, `SysAllocStringByteLen`, `SysAllocStringLen`, `SysReAllocString`, `SysReAllocStringLen`.</span></span> <span data-ttu-id="ce515-484">Puede llamar a métodos no administrados como estos elementos con la plataforma de invocación.</span><span class="sxs-lookup"><span data-stu-id="ce515-484">You can call unmanaged methods such as these with platform invoke.</span></span> <span data-ttu-id="ce515-485">Para obtener más información, consulte [consumir funciones de DLL no administradas](~/docs/framework/interop/consuming-unmanaged-dll-functions.md).</span><span class="sxs-lookup"><span data-stu-id="ce515-485">For details, see [Consuming Unmanaged DLL Functions](~/docs/framework/interop/consuming-unmanaged-dll-functions.md).</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-486">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-486">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-487">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-487">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.FreeCoTaskMem(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="FreeCoTaskMem">
      <MemberSignature Language="C#" Value="public static void FreeCoTaskMem (IntPtr ptr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FreeCoTaskMem(native int ptr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.FreeCoTaskMem(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub FreeCoTaskMem (ptr As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void FreeCoTaskMem(IntPtr ptr);" />
      <MemberSignature Language="F#" Value="static member FreeCoTaskMem : nativeint -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.FreeCoTaskMem ptr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="ptr"><span data-ttu-id="ce515-488">Dirección de la memoria que se va a liberar.</span><span class="sxs-lookup"><span data-stu-id="ce515-488">The address of the memory to be freed.</span></span></param>
        <summary><span data-ttu-id="ce515-489">Libera un bloque de memoria asignado por el asignador de memoria de tareas COM no administrada.</span><span class="sxs-lookup"><span data-stu-id="ce515-489">Frees a block of memory allocated by the unmanaged COM task memory allocator.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-490">Puede usar <xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A> para liberar memoria asignada por <xref:System.Runtime.InteropServices.Marshal.AllocCoTaskMem%2A>, <xref:System.Runtime.InteropServices.Marshal.ReAllocCoTaskMem%2A>, o método no administrado ningún comando equivalente.</span><span class="sxs-lookup"><span data-stu-id="ce515-490">You can use <xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A> to free any memory allocated by <xref:System.Runtime.InteropServices.Marshal.AllocCoTaskMem%2A>, <xref:System.Runtime.InteropServices.Marshal.ReAllocCoTaskMem%2A>, or any equivalent unmanaged method.</span></span> <span data-ttu-id="ce515-491">Si el `ptr` parámetro es `null`, el método no hace nada.</span><span class="sxs-lookup"><span data-stu-id="ce515-491">If the `ptr` parameter is `null`, the method does nothing.</span></span>  
  
 <span data-ttu-id="ce515-492"><xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A> expone el COM [CoTaskMemFree](https://go.microsoft.com/fwlink/?LinkId=148638) función, lo que libera todos los bytes para que ya no puede usar la memoria que el `ptr` parámetro señala.</span><span class="sxs-lookup"><span data-stu-id="ce515-492"><xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A> exposes the COM [CoTaskMemFree](https://go.microsoft.com/fwlink/?LinkId=148638) function, which frees all bytes so that you can no longer use the memory that the `ptr` parameter points to.</span></span>  
  
 <span data-ttu-id="ce515-493">Además <xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A>, <xref:System.Runtime.InteropServices.Marshal> clase proporciona otros dos métodos de desasignación de memoria: <xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A> y <xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A>.</span><span class="sxs-lookup"><span data-stu-id="ce515-493">In addition to <xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A>, the <xref:System.Runtime.InteropServices.Marshal> class provides two other memory-deallocation methods: <xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A> and <xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-494">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-494">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-495">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-495">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.AllocCoTaskMem(System.Int32)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.ReAllocCoTaskMem(System.IntPtr,System.Int32)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.DestroyStructure(System.IntPtr,System.Type)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="FreeHGlobal">
      <MemberSignature Language="C#" Value="public static void FreeHGlobal (IntPtr hglobal);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FreeHGlobal(native int hglobal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub FreeHGlobal (hglobal As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void FreeHGlobal(IntPtr hglobal);" />
      <MemberSignature Language="F#" Value="static member FreeHGlobal : nativeint -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.FreeHGlobal hglobal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hglobal" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="hglobal"><span data-ttu-id="ce515-496">Controlador devuelto por la llamada coincidente original a <see cref="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.IntPtr)" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-496">The handle returned by the original matching call to <see cref="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.IntPtr)" />.</span></span></param>
        <summary><span data-ttu-id="ce515-497">Libera memoria previamente asignada de la memoria no administrada del proceso.</span><span class="sxs-lookup"><span data-stu-id="ce515-497">Frees memory previously allocated from the unmanaged memory of the process.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-498">Puede usar <xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A> para liberar memoria del montón global asignada por <xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A>, <xref:System.Runtime.InteropServices.Marshal.ReAllocHGlobal%2A>, o método de API no administrada de ningún comando equivalente.</span><span class="sxs-lookup"><span data-stu-id="ce515-498">You can use <xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A> to free any memory from the global heap allocated by <xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A>, <xref:System.Runtime.InteropServices.Marshal.ReAllocHGlobal%2A>, or any equivalent unmanaged API method.</span></span> <span data-ttu-id="ce515-499">Si el `hglobal` parámetro es <xref:System.IntPtr.Zero?displayProperty=nameWithType> el método no hace nada.</span><span class="sxs-lookup"><span data-stu-id="ce515-499">If the `hglobal` parameter is <xref:System.IntPtr.Zero?displayProperty=nameWithType> the method does nothing.</span></span>  
  
 <span data-ttu-id="ce515-500"><xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A> expone el [LocalFree](https://go.microsoft.com/fwlink/?LinkId=148640) función de Kernel32.DLL, que libera todos los bytes para que ya no puede usar la memoria a la que señala a `hglobal`.</span><span class="sxs-lookup"><span data-stu-id="ce515-500"><xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A> exposes the [LocalFree](https://go.microsoft.com/fwlink/?LinkId=148640) function from Kernel32.DLL, which frees all bytes so that you can no longer use the memory pointed to by `hglobal`.</span></span>  
  
 <span data-ttu-id="ce515-501">Además <xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A>, <xref:System.Runtime.InteropServices.Marshal> clase proporciona métodos de la API de dos otra desasignación de memoria: <xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A> y <xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A>.</span><span class="sxs-lookup"><span data-stu-id="ce515-501">In addition to <xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A>, the <xref:System.Runtime.InteropServices.Marshal> class provides two other memory-deallocation API methods: <xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A> and <xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ce515-502">En el ejemplo siguiente se muestra la forma de llamar al método <xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A>.</span><span class="sxs-lookup"><span data-stu-id="ce515-502">The following example demonstrates calling the <xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A> method.</span></span> <span data-ttu-id="ce515-503">Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Runtime.InteropServices.Marshal> clase.</span><span class="sxs-lookup"><span data-stu-id="ce515-503">This code example is part of a larger example provided for the <xref:System.Runtime.InteropServices.Marshal> class.</span></span>  
  
 [!code-cpp[Marshal#4](~/samples/snippets/cpp/VS_Snippets_CLR/Marshal/cpp/marshal.cpp#4)]
 [!code-csharp[Marshal#4](~/samples/snippets/csharp/VS_Snippets_CLR/Marshal/CS/Marshal.cs#4)]
 [!code-vb[Marshal#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/Marshal/VB/Marshal.vb#4)]  
  
 <span data-ttu-id="ce515-504">En el ejemplo siguiente se muestra cómo convertir el contenido de una clase administrada <xref:System.String> clase a la memoria no administrada y, a continuación, eliminar la memoria no administrada cuando haya terminado.</span><span class="sxs-lookup"><span data-stu-id="ce515-504">The following example demonstrates how to convert the contents of a managed <xref:System.String> class to unmanaged memory and then dispose of the unmanaged memory when done.</span></span>  
  
 [!code-cpp[Runtime.InteropServices.Marshal.StringToHGlobalAnsi#1](~/samples/snippets/cpp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.StringToHGlobalAnsi/CPP/stringtohglobalansi.cpp#1)]
 [!code-csharp[Runtime.InteropServices.Marshal.StringToHGlobalAnsi#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.StringToHGlobalAnsi/cs/stringtohglobalansi.cs#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-505">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-505">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-506">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-506">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.ReAllocHGlobal(System.IntPtr,System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="GenerateGuidForType">
      <MemberSignature Language="C#" Value="public static Guid GenerateGuidForType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Guid GenerateGuidForType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GenerateGuidForType(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Guid GenerateGuidForType(Type ^ type);" />
      <MemberSignature Language="F#" Value="static member GenerateGuidForType : Type -&gt; Guid" Usage="System.Runtime.InteropServices.Marshal.GenerateGuidForType type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="ce515-507">Tipo para el que se va a generar un GUID.</span><span class="sxs-lookup"><span data-stu-id="ce515-507">The type to generate a GUID for.</span></span></param>
        <summary><span data-ttu-id="ce515-508">Devuelve el identificador único global (GUID) del tipo especificado o genera un GUID mediante el algoritmo que utiliza la herramienta Exportador de la biblioteca de tipos (Tlbexp.exe).</span><span class="sxs-lookup"><span data-stu-id="ce515-508">Returns the globally unique identifier (GUID) for the specified type, or generates a GUID using the algorithm used by the Type Library Exporter (Tlbexp.exe).</span></span></summary>
        <returns><span data-ttu-id="ce515-509">Identificador para el tipo especificado.</span><span class="sxs-lookup"><span data-stu-id="ce515-509">An identifier for the specified type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-510">Si el tipo tiene un GUID en los metadatos, se devuelve.</span><span class="sxs-lookup"><span data-stu-id="ce515-510">If the type has a GUID in the metadata, it is returned.</span></span> <span data-ttu-id="ce515-511">En caso contrario, se genera automáticamente un GUID.</span><span class="sxs-lookup"><span data-stu-id="ce515-511">Otherwise, a GUID is automatically generated.</span></span> <span data-ttu-id="ce515-512">Puede usar este método para determinar mediante programación el GUID de COM para cualquier tipo administrado, incluidos los tipos invisibles para COM.</span><span class="sxs-lookup"><span data-stu-id="ce515-512">You can use this method to programmatically determine the COM GUID for any managed type, including COM-invisible types.</span></span> <span data-ttu-id="ce515-513">Interfaces de clases son la única excepción porque no corresponden a un tipo administrado.</span><span class="sxs-lookup"><span data-stu-id="ce515-513">Class interfaces are the only exception because they do not correspond to a managed type.</span></span> <span data-ttu-id="ce515-514"><xref:System.Runtime.InteropServices.Marshal.GenerateGuidForType%2A> proporciona la misma funcionalidad que el <xref:System.Type.GUID%2A?displayProperty=nameWithType> propiedad.</span><span class="sxs-lookup"><span data-stu-id="ce515-514"><xref:System.Runtime.InteropServices.Marshal.GenerateGuidForType%2A> provides the same functionality as the <xref:System.Type.GUID%2A?displayProperty=nameWithType> property.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-515">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-515">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-516">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-516">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="P:System.Type.GUID" />
      </Docs>
    </Member>
    <Member MemberName="GenerateProgIdForType">
      <MemberSignature Language="C#" Value="public static string GenerateProgIdForType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GenerateProgIdForType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GenerateProgIdForType(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GenerateProgIdForType(Type ^ type);" />
      <MemberSignature Language="F#" Value="static member GenerateProgIdForType : Type -&gt; string" Usage="System.Runtime.InteropServices.Marshal.GenerateProgIdForType type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="ce515-517">Tipo para el que se va a obtener un ProgID.</span><span class="sxs-lookup"><span data-stu-id="ce515-517">The type to get a ProgID for.</span></span></param>
        <summary><span data-ttu-id="ce515-518">Devuelve un identificador de programación (ProgID) para el tipo especificado.</span><span class="sxs-lookup"><span data-stu-id="ce515-518">Returns a programmatic identifier (ProgID) for the specified type.</span></span></summary>
        <returns><span data-ttu-id="ce515-519">ProgID del tipo especificado.</span><span class="sxs-lookup"><span data-stu-id="ce515-519">The ProgID of the specified type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-520">Si el tipo tiene un ProgID en los metadatos, se devuelve ese ProgID.</span><span class="sxs-lookup"><span data-stu-id="ce515-520">If the type has a ProgID in the metadata, that ProgID is returned.</span></span> <span data-ttu-id="ce515-521">En caso contrario, se genera un ProgID basándose en el nombre completo del tipo.</span><span class="sxs-lookup"><span data-stu-id="ce515-521">Otherwise, a ProgID is generated based on the fully qualified name of the type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ce515-522">El parámetro <paramref name="type" /> no es una clase que se pueda crear mediante COM.</span><span class="sxs-lookup"><span data-stu-id="ce515-522">The <paramref name="type" /> parameter is not a class that can be create by COM.</span></span> <span data-ttu-id="ce515-523">La clase debe ser pública, tener un constructor público predeterminado y ser visible para COM.</span><span class="sxs-lookup"><span data-stu-id="ce515-523">The class must be public, have a public default constructor, and be COM visible.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ce515-524">El parámetro <paramref name="type" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-524">The <paramref name="type" /> parameter is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-525">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-525">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-526">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-526">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetActiveObject">
      <MemberSignature Language="C#" Value="public static object GetActiveObject (string progID);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetActiveObject(string progID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetActiveObject(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetActiveObject (progID As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetActiveObject(System::String ^ progID);" />
      <MemberSignature Language="F#" Value="static member GetActiveObject : string -&gt; obj" Usage="System.Runtime.InteropServices.Marshal.GetActiveObject progID" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="progID" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="progID"><span data-ttu-id="ce515-527">Identificador de programación (ProgID) del objeto que se solicitó.</span><span class="sxs-lookup"><span data-stu-id="ce515-527">The programmatic identifier (ProgID) of the object that was requested.</span></span></param>
        <summary><span data-ttu-id="ce515-528">Obtiene una instancia en ejecución del objeto especificado de la tabla de objetos de ejecución (ROT).</span><span class="sxs-lookup"><span data-stu-id="ce515-528">Obtains a running instance of the specified object from the running object table (ROT).</span></span></summary>
        <returns><span data-ttu-id="ce515-529">Objeto que se solicitó; en caso contrario, <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-529">The object that was requested; otherwise <see langword="null" />.</span></span> <span data-ttu-id="ce515-530">Puede convertir este objeto en cualquier interfaz COM compatible.</span><span class="sxs-lookup"><span data-stu-id="ce515-530">You can cast this object to any COM interface that it supports.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-531"><xref:System.Runtime.InteropServices.Marshal.GetActiveObject%2A> expone el COM [GetActiveObject](https://msdn.microsoft.com/library/ms221467\(v=vs.85\).aspx) función de OLEAUT32. ARCHIVO DLL; Sin embargo, este último espera un identificador de clase (CLSID) en lugar del identificador de programación (`ProgID`) esperado por este método.</span><span class="sxs-lookup"><span data-stu-id="ce515-531"><xref:System.Runtime.InteropServices.Marshal.GetActiveObject%2A> exposes the COM [GetActiveObject](https://msdn.microsoft.com/library/ms221467\(v=vs.85\).aspx) function from OLEAUT32.DLL; however, the latter expects a class identifier (CLSID) instead of the programmatic identifier (`ProgID`) expected by this method.</span></span> <span data-ttu-id="ce515-532">Para obtener una instancia en ejecución de un objeto COM sin registrado `ProgID`, invocación de plataforma de uso para definir el COM [GetActiveObject](https://msdn.microsoft.com/library/ms221467\(v=vs.85\).aspx) función.</span><span class="sxs-lookup"><span data-stu-id="ce515-532">To obtain a running instance of a COM object without a registered `ProgID`, use platform invoke to define the COM [GetActiveObject](https://msdn.microsoft.com/library/ms221467\(v=vs.85\).aspx) function.</span></span> <span data-ttu-id="ce515-533">Para obtener una descripción de la plataforma de invocación, vea [consumir funciones de DLL no administradas](~/docs/framework/interop/consuming-unmanaged-dll-functions.md).</span><span class="sxs-lookup"><span data-stu-id="ce515-533">For a description of platform invoke, see [Consuming Unmanaged DLL Functions](~/docs/framework/interop/consuming-unmanaged-dll-functions.md).</span></span>  
  
## <a name="progid-and-clsid"></a><span data-ttu-id="ce515-534">ProgID y CLSID</span><span class="sxs-lookup"><span data-stu-id="ce515-534">ProgID and CLSID</span></span>  
 <span data-ttu-id="ce515-535">Las claves en el subárbol HKEY_CLASSES_ROOT del registro contienen una gran variedad de tipos de subclave.</span><span class="sxs-lookup"><span data-stu-id="ce515-535">Keys in the HKEY_CLASSES_ROOT subtree of the registry contain a variety of subkey types.</span></span> <span data-ttu-id="ce515-536">La mayoría de las subclaves son ProgID, que asignan una cadena fácil de usar a un CLSID.</span><span class="sxs-lookup"><span data-stu-id="ce515-536">Most of the subkeys are ProgIDs, which map a user-friendly string to a CLSID.</span></span> <span data-ttu-id="ce515-537">Las aplicaciones suelen usar estas cadenas legibles en lugar de los CLSID numéricos.</span><span class="sxs-lookup"><span data-stu-id="ce515-537">Applications often use these human-readable strings instead of the numeric CLSIDs.</span></span> <span data-ttu-id="ce515-538">A menudo, un componente tiene un ProgID independientes de la versión que se asigna a la versión más reciente del componente que está instalado en el sistema.</span><span class="sxs-lookup"><span data-stu-id="ce515-538">Often, a component has a version-independent ProgID that is mapped to the latest version of the component that is installed on the system.</span></span>  
  
 <span data-ttu-id="ce515-539">Las aplicaciones y componentes utilizan principalmente ProgID para recuperar su CLSID correspondiente.</span><span class="sxs-lookup"><span data-stu-id="ce515-539">Applications and components primarily use ProgIDs to retrieve their corresponding CLSIDs.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ce515-540">El ejemplo siguiente se ejecutó en un equipo que se configuró con una instancia en ejecución de Microsoft Word.</span><span class="sxs-lookup"><span data-stu-id="ce515-540">The following example was run on a computer that was configured with a running instance of Microsoft Word.</span></span> <span data-ttu-id="ce515-541">No había ninguna instancia de ejecución de Microsoft Excel.</span><span class="sxs-lookup"><span data-stu-id="ce515-541">There were no instances of Microsoft Excel running.</span></span>  
  
 <span data-ttu-id="ce515-542">El ejemplo llama a <xref:System.Runtime.InteropServices.Marshal.GetActiveObject%2A> dos veces.</span><span class="sxs-lookup"><span data-stu-id="ce515-542">The example calls <xref:System.Runtime.InteropServices.Marshal.GetActiveObject%2A> twice.</span></span> <span data-ttu-id="ce515-543">La primera llamada intenta recuperar una referencia a una instancia de Microsoft Word (una instancia de la `Word.Application` objeto).</span><span class="sxs-lookup"><span data-stu-id="ce515-543">The first call tries to retrieve a reference to an instance of Microsoft Word (an instance of the `Word.Application` object).</span></span> <span data-ttu-id="ce515-544">La segunda llamada intenta recuperar una referencia a una instancia de Microsoft Excel (una instancia de un `Excel.Application` objeto).</span><span class="sxs-lookup"><span data-stu-id="ce515-544">The second call tries to retrieve a reference to an instance of Microsoft Excel (an instance of an `Excel.Application` object).</span></span>  
  
 <span data-ttu-id="ce515-545">El código recupera correctamente una referencia a una instancia de Microsoft Word.</span><span class="sxs-lookup"><span data-stu-id="ce515-545">The code retrieves a reference to an instance of Microsoft Word successfully.</span></span> <span data-ttu-id="ce515-546">Sin embargo, dado que no se está ejecutando Microsoft Excel, el intento de recuperar el segundo objeto provoca un <xref:System.Runtime.InteropServices.COMException>.</span><span class="sxs-lookup"><span data-stu-id="ce515-546">However, because Microsoft Excel is not running, the attempt to retrieve the second object raises a <xref:System.Runtime.InteropServices.COMException>.</span></span>  
  
 [!code-csharp[System.Runtime.InteropServices.Marshal.GetActiveObject#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.interopservices.marshal.getactiveobject/cs/marshal.getactiveobject.cs#1)]
 [!code-vb[System.Runtime.InteropServices.Marshal.GetActiveObject#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.interopservices.marshal.getactiveobject/vb/marshal.getactiveobject.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="ce515-547">No se encontró el objeto.</span><span class="sxs-lookup"><span data-stu-id="ce515-547">The object was not found.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-548">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-548">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-549">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-549">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetComInterfaceForObject">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ce515-550">Devuelve un puntero de interfaz que representa una interfaz para un objeto.</span><span class="sxs-lookup"><span data-stu-id="ce515-550">Returns an interface pointer that represents an interface for an object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetComInterfaceForObject">
      <MemberSignature Language="C#" Value="public static IntPtr GetComInterfaceForObject (object o, Type T);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int GetComInterfaceForObject(object o, class System.Type T) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetComInterfaceForObject (o As Object, T As Type) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr GetComInterfaceForObject(System::Object ^ o, Type ^ T);" />
      <MemberSignature Language="F#" Value="static member GetComInterfaceForObject : obj * Type -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.GetComInterfaceForObject (o, T)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netcore-2.2">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Obsolete("GetComInterfaceForObject(Object, Type) may be unavailable in future releases. Instead, use GetComInterfaceForObject&lt;T,T2&gt;(T). For more info, go to http://go.microsoft.com/fwlink/?LinkID=296509")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
        <Parameter Name="T" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="o"><span data-ttu-id="ce515-551">Objeto que proporciona la interfaz.</span><span class="sxs-lookup"><span data-stu-id="ce515-551">The object that provides the interface.</span></span></param>
        <param name="T"><span data-ttu-id="ce515-552">Tipo de interfaz que se solicita.</span><span class="sxs-lookup"><span data-stu-id="ce515-552">The type of interface that is requested.</span></span></param>
        <summary><span data-ttu-id="ce515-553">Devuelve un puntero a una interfaz <see href="https://go.microsoft.com/fwlink/?LinkId=148003">IUnknown</see> que representa la interfaz especificada en el objeto indicado.</span><span class="sxs-lookup"><span data-stu-id="ce515-553">Returns a pointer to an <see href="https://go.microsoft.com/fwlink/?LinkId=148003">IUnknown</see> interface that represents the specified interface on the specified object.</span></span> <span data-ttu-id="ce515-554">El acceso a la interfaz de consulta personalizada está habilitado de forma predeterminada.</span><span class="sxs-lookup"><span data-stu-id="ce515-554">Custom query interface access is enabled by default.</span></span></summary>
        <returns><span data-ttu-id="ce515-555">Puntero de interfaz que representa la interfaz especificada para el objeto.</span><span class="sxs-lookup"><span data-stu-id="ce515-555">The interface pointer that represents the specified interface for the object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-556">Este método devuelve un puntero de interfaz que representa la interfaz solicitada en el objeto especificado.</span><span class="sxs-lookup"><span data-stu-id="ce515-556">This method returns an interface pointer that represents the requested interface on the specified object.</span></span> <span data-ttu-id="ce515-557">Resulta especialmente útil si tiene un método no administrado que se espera que se pasa un puntero de interfaz.</span><span class="sxs-lookup"><span data-stu-id="ce515-557">It is particularly useful if you have an unmanaged method that expects to be passed an interface pointer.</span></span> <span data-ttu-id="ce515-558">Llamar a un objeto con este método hace que el recuento de referencias se incrementa en el puntero de interfaz antes de devolver el puntero.</span><span class="sxs-lookup"><span data-stu-id="ce515-558">Calling an object with this method causes the reference count to increment on the interface pointer before the pointer is returned.</span></span> <span data-ttu-id="ce515-559">Utilice siempre <xref:System.Runtime.InteropServices.Marshal.Release%2A?displayProperty=nameWithType> para reducir el recuento de referencias cuando haya terminado con el puntero.</span><span class="sxs-lookup"><span data-stu-id="ce515-559">Always use <xref:System.Runtime.InteropServices.Marshal.Release%2A?displayProperty=nameWithType> to decrement the reference count once you have finished with the pointer.</span></span> <span data-ttu-id="ce515-560">Debe cumplir las reglas definidas por COM al usar punteros de interfaz COM sin formato.</span><span class="sxs-lookup"><span data-stu-id="ce515-560">You must adhere to the rules defined by COM when using raw COM interface pointers.</span></span>  
  
 <span data-ttu-id="ce515-561"><xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%28System.Object%2CSystem.Type%29> es útil cuando se llama a un método que expone un parámetro de objeto COM como una <xref:System.IntPtr> tipo, o con la serialización personalizada.</span><span class="sxs-lookup"><span data-stu-id="ce515-561"><xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%28System.Object%2CSystem.Type%29> is useful when calling a method that exposes a COM object parameter as an <xref:System.IntPtr> type, or with custom marshaling.</span></span> <span data-ttu-id="ce515-562">Aunque es menos común, puede usar este método en un objeto administrado para obtener un puntero al contenedor CCW del objeto.</span><span class="sxs-lookup"><span data-stu-id="ce515-562">Although less common, you can use this method on a managed object to obtain a pointer to the object's COM callable wrapper.</span></span> <span data-ttu-id="ce515-563">Por ejemplo, puede usar <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%28System.Object%2CSystem.Type%29> en un objeto administrado que se exporta a COM para obtener un puntero de interfaz para <xref:System.Runtime.InteropServices.UCOMIConnectionPointContainer?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ce515-563">For example, you can use <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%28System.Object%2CSystem.Type%29> on a managed object that is exported to COM to obtain an interface pointer for <xref:System.Runtime.InteropServices.UCOMIConnectionPointContainer?displayProperty=nameWithType>.</span></span> <span data-ttu-id="ce515-564">No se puede obtener un puntero a una interfaz de clase desde una interfaz de clase no tiene el tipo correspondiente para pasar al segundo parámetro (`t`).</span><span class="sxs-lookup"><span data-stu-id="ce515-564">You cannot obtain a pointer to a class interface since a class interface lacks the corresponding type to pass to the second parameter (`t`).</span></span> <span data-ttu-id="ce515-565">En su lugar, use <xref:System.Runtime.InteropServices.Marshal.GetIDispatchForObject%2A?displayProperty=nameWithType> para invocar los miembros en la interfaz predeterminada del contenedor CCW, que normalmente es una interfaz de clase de distribución automática.</span><span class="sxs-lookup"><span data-stu-id="ce515-565">Instead, use <xref:System.Runtime.InteropServices.Marshal.GetIDispatchForObject%2A?displayProperty=nameWithType> to invoke the members on the default interface of the COM callable wrapper, which is usually an auto-dispatch class interface.</span></span>  
  
 <span data-ttu-id="ce515-566">El <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%28System.Object%2CSystem.Type%29> sobrecarga del método permite la personalización de la interfaz de consulta de forma predeterminada.</span><span class="sxs-lookup"><span data-stu-id="ce515-566">The <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%28System.Object%2CSystem.Type%29> method overload allows query interface customization by default.</span></span> <span data-ttu-id="ce515-567">Para especificar si se debe aplicar la personalización de la interfaz de consulta, use la <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%28System.Object%2CSystem.Type%2CSystem.Runtime.InteropServices.CustomQueryInterfaceMode%29> sobrecarga del método.</span><span class="sxs-lookup"><span data-stu-id="ce515-567">To specify whether to apply query interface customization, use the <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%28System.Object%2CSystem.Type%2CSystem.Runtime.InteropServices.CustomQueryInterfaceMode%29> method overload.</span></span>  
  
 <span data-ttu-id="ce515-568">Para obtener más información, consulte el [contenedor CCW](~/docs/framework/interop/com-callable-wrapper.md), [contenedor RCW](~/docs/framework/interop/runtime-callable-wrapper.md), y [presentar la interfaz de clase](https://msdn.microsoft.com/library/733c0dd2-12e5-46e6-8de1-39d5b25df024) temas.</span><span class="sxs-lookup"><span data-stu-id="ce515-568">For additional information, see the [COM Callable Wrapper](~/docs/framework/interop/com-callable-wrapper.md), [Runtime Callable Wrapper](~/docs/framework/interop/runtime-callable-wrapper.md), and [Introducing the Class Interface](https://msdn.microsoft.com/library/733c0dd2-12e5-46e6-8de1-39d5b25df024) topics.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ce515-569">El parámetro <typeparamref name="T" /> no es una interfaz.</span><span class="sxs-lookup"><span data-stu-id="ce515-569">The <typeparamref name="T" /> parameter is not an interface.</span></span>  
  
<span data-ttu-id="ce515-570">O bien</span><span class="sxs-lookup"><span data-stu-id="ce515-570">-or-</span></span> 
<span data-ttu-id="ce515-571">El tipo no es visible para COM.</span><span class="sxs-lookup"><span data-stu-id="ce515-571">The type is not visible to COM.</span></span>  
  
<span data-ttu-id="ce515-572">O bien</span><span class="sxs-lookup"><span data-stu-id="ce515-572">-or-</span></span> 
<span data-ttu-id="ce515-573">El parámetro <typeparamref name="T" /> es una definición de tipo genérico.</span><span class="sxs-lookup"><span data-stu-id="ce515-573">The <typeparamref name="T" /> parameter is a generic type definition.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="ce515-574">El parámetro <paramref name="o" /> no admite la interfaz solicitada.</span><span class="sxs-lookup"><span data-stu-id="ce515-574">The <paramref name="o" /> parameter does not support the requested interface.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ce515-575">El parámetro <paramref name="o" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-575">The <paramref name="o" /> parameter is <see langword="null" />.</span></span>  
  
<span data-ttu-id="ce515-576">O bien</span><span class="sxs-lookup"><span data-stu-id="ce515-576">-or-</span></span> 
<span data-ttu-id="ce515-577">El parámetro <typeparamref name="T" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-577">The <typeparamref name="T" /> parameter is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-578">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-578">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-579">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-579">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObjectInContext(System.Object,System.Type)" />
        <altmember cref="T:System.Runtime.InteropServices.ComImportAttribute" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Release(System.IntPtr)" />
        <altmember cref="T:System.Runtime.InteropServices.UCOMIConnectionPointContainer" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetIDispatchForObject(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetComInterfaceForObject">
      <MemberSignature Language="C#" Value="public static IntPtr GetComInterfaceForObject (object o, Type T, System.Runtime.InteropServices.CustomQueryInterfaceMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int GetComInterfaceForObject(object o, class System.Type T, valuetype System.Runtime.InteropServices.CustomQueryInterfaceMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type,System.Runtime.InteropServices.CustomQueryInterfaceMode)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetComInterfaceForObject (o As Object, T As Type, mode As CustomQueryInterfaceMode) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr GetComInterfaceForObject(System::Object ^ o, Type ^ T, System::Runtime::InteropServices::CustomQueryInterfaceMode mode);" />
      <MemberSignature Language="F#" Value="static member GetComInterfaceForObject : obj * Type * System.Runtime.InteropServices.CustomQueryInterfaceMode -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.GetComInterfaceForObject (o, T, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netcore-2.2">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Obsolete("GetComInterfaceForObject(Object, Type, CustomQueryInterfaceMode) and support for ICustomQueryInterface may be unavailable in future releases.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
        <Parameter Name="T" Type="System.Type" />
        <Parameter Name="mode" Type="System.Runtime.InteropServices.CustomQueryInterfaceMode" />
      </Parameters>
      <Docs>
        <param name="o"><span data-ttu-id="ce515-580">Objeto que proporciona la interfaz.</span><span class="sxs-lookup"><span data-stu-id="ce515-580">The object that provides the interface.</span></span></param>
        <param name="T"><span data-ttu-id="ce515-581">Tipo de interfaz que se solicita.</span><span class="sxs-lookup"><span data-stu-id="ce515-581">The type of interface that is requested.</span></span></param>
        <param name="mode"><span data-ttu-id="ce515-582">Uno de los valores de enumeración que indica si se aplica una personalización <see langword="IUnknown::QueryInterface" /> proporcionada por <see cref="T:System.Runtime.InteropServices.ICustomQueryInterface" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-582">One of the enumeration values that indicates whether to apply an <see langword="IUnknown::QueryInterface" /> customization that is supplied by an <see cref="T:System.Runtime.InteropServices.ICustomQueryInterface" />.</span></span></param>
        <summary><span data-ttu-id="ce515-583">Devuelve un puntero a una interfaz <see href="https://go.microsoft.com/fwlink/?LinkId=148003">IUnknown</see> que representa la interfaz especificada en el objeto indicado.</span><span class="sxs-lookup"><span data-stu-id="ce515-583">Returns a pointer to an <see href="https://go.microsoft.com/fwlink/?LinkId=148003">IUnknown</see> interface that represents the specified interface on the specified object.</span></span> <span data-ttu-id="ce515-584">El modo de personalización especificado controla el acceso a la interfaz de consulta personalizada.</span><span class="sxs-lookup"><span data-stu-id="ce515-584">Custom query interface access is controlled by the specified customization mode.</span></span></summary>
        <returns><span data-ttu-id="ce515-585">Puntero de interfaz que representa la interfaz para el objeto.</span><span class="sxs-lookup"><span data-stu-id="ce515-585">The interface pointer that represents the interface for the object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-586"><xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%28System.Object%2CSystem.Type%2CSystem.Runtime.InteropServices.CustomQueryInterfaceMode%29> le permite especificar si se debe aplicar la personalización de la interfaz de consulta.</span><span class="sxs-lookup"><span data-stu-id="ce515-586"><xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%28System.Object%2CSystem.Type%2CSystem.Runtime.InteropServices.CustomQueryInterfaceMode%29> lets you specify whether to apply query interface customization.</span></span> <span data-ttu-id="ce515-587">Use el <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%28System.Object%2CSystem.Type%29> sobrecarga para aplicar la personalización de la interfaz de consulta de forma predeterminada.</span><span class="sxs-lookup"><span data-stu-id="ce515-587">Use the <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%28System.Object%2CSystem.Type%29> overload to apply query interface customization by default.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ce515-588">El parámetro <typeparamref name="T" /> no es una interfaz.</span><span class="sxs-lookup"><span data-stu-id="ce515-588">The <typeparamref name="T" /> parameter is not an interface.</span></span>  
  
<span data-ttu-id="ce515-589">O bien</span><span class="sxs-lookup"><span data-stu-id="ce515-589">-or-</span></span> 
<span data-ttu-id="ce515-590">El tipo no es visible para COM.</span><span class="sxs-lookup"><span data-stu-id="ce515-590">The type is not visible to COM.</span></span>  
  
<span data-ttu-id="ce515-591">O bien</span><span class="sxs-lookup"><span data-stu-id="ce515-591">-or-</span></span> 
<span data-ttu-id="ce515-592">El parámetro <typeparamref name="T" /> es una definición de tipo genérico.</span><span class="sxs-lookup"><span data-stu-id="ce515-592">The <typeparamref name="T" /> parameter is a generic type definition.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="ce515-593">El objeto <paramref name="o" /> no admite la interfaz solicitada.</span><span class="sxs-lookup"><span data-stu-id="ce515-593">The object <paramref name="o" /> does not support the requested interface.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ce515-594">El parámetro <paramref name="o" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-594">The <paramref name="o" /> parameter is <see langword="null" />.</span></span>  
  
<span data-ttu-id="ce515-595">O bien</span><span class="sxs-lookup"><span data-stu-id="ce515-595">-or-</span></span> 
<span data-ttu-id="ce515-596">El parámetro <typeparamref name="T" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-596">The <typeparamref name="T" /> parameter is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-597">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-597">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-598">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-598">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetComInterfaceForObject&lt;T,TInterface&gt;">
      <MemberSignature Language="C#" Value="public static IntPtr GetComInterfaceForObject&lt;T,TInterface&gt; (T o);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int GetComInterfaceForObject&lt;T, TInterface&gt;(!!T o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject``2(``0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetComInterfaceForObject(Of T, TInterface) (o As T) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T, typename TInterface&gt;&#xA; static IntPtr GetComInterfaceForObject(T o);" />
      <MemberSignature Language="F#" Value="static member GetComInterfaceForObject : 'T -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.GetComInterfaceForObject o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
        <TypeParameter Name="TInterface" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="o" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="ce515-599">Tipo de <paramref name="o" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-599">The type of <paramref name="o" />.</span></span></typeparam>
        <typeparam name="TInterface"><span data-ttu-id="ce515-600">Tipo de interfaz que se va a devolver.</span><span class="sxs-lookup"><span data-stu-id="ce515-600">The type of interface to return.</span></span></typeparam>
        <param name="o"><span data-ttu-id="ce515-601">Objeto que proporciona la interfaz.</span><span class="sxs-lookup"><span data-stu-id="ce515-601">The object that provides the interface.</span></span></param>
        <summary><span data-ttu-id="ce515-602">[Compatible con .NET Framework 4.5.1 y versiones posteriores]</span><span class="sxs-lookup"><span data-stu-id="ce515-602">[Supported in the .NET Framework 4.5.1 and later versions]</span></span> 
<span data-ttu-id="ce515-603">Devuelve un puntero a una interfaz [IUnknown](https://go.microsoft.com/fwlink/?LinkId=148003) que representa la interfaz en un objeto del tipo especificado.</span><span class="sxs-lookup"><span data-stu-id="ce515-603">Returns a pointer to an [IUnknown](https://go.microsoft.com/fwlink/?LinkId=148003) interface that represents the specified interface on an object of the specified type.</span></span> <span data-ttu-id="ce515-604">El acceso a la interfaz de consulta personalizada está habilitado de forma predeterminada.</span><span class="sxs-lookup"><span data-stu-id="ce515-604">Custom query interface access is enabled by default.</span></span></summary>
        <returns><span data-ttu-id="ce515-605">Puntero de interfaz que representa la interfaz <paramref name="TInterface" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-605">The interface pointer that represents the <paramref name="TInterface" /> interface.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-606">Este método devuelve un puntero de interfaz que representa el `TInterface` interfaz en el objeto especificado.</span><span class="sxs-lookup"><span data-stu-id="ce515-606">This method returns an interface pointer that represents the `TInterface` interface on the specified object.</span></span> <span data-ttu-id="ce515-607">Resulta especialmente útil si tiene un método no administrado que se espera que se pasa un puntero de interfaz.</span><span class="sxs-lookup"><span data-stu-id="ce515-607">It is particularly useful if you have an unmanaged method that expects to be passed an interface pointer.</span></span> <span data-ttu-id="ce515-608">Llamar a un objeto con este método hace que el recuento de referencias se incrementa en el puntero de interfaz antes de devolver el puntero.</span><span class="sxs-lookup"><span data-stu-id="ce515-608">Calling an object with this method causes the reference count to increment on the interface pointer before the pointer is returned.</span></span> <span data-ttu-id="ce515-609">Use siempre la <xref:System.Runtime.InteropServices.Marshal.Release%2A?displayProperty=nameWithType> método para reducir el recuento de referencias cuando haya terminado con el puntero.</span><span class="sxs-lookup"><span data-stu-id="ce515-609">Always use the <xref:System.Runtime.InteropServices.Marshal.Release%2A?displayProperty=nameWithType> method to decrement the reference count when you have finished with the pointer.</span></span> <span data-ttu-id="ce515-610">Debe cumplir las reglas definidas por COM al usar punteros de interfaz COM sin formato.</span><span class="sxs-lookup"><span data-stu-id="ce515-610">You must adhere to the rules defined by COM when using raw COM interface pointers.</span></span>  
  
 <span data-ttu-id="ce515-611"><xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%60%602%28%60%600%29> es útil cuando se llama a un método que expone un parámetro de objeto COM como una <xref:System.IntPtr> tipo, o con la serialización personalizada.</span><span class="sxs-lookup"><span data-stu-id="ce515-611"><xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%60%602%28%60%600%29> is useful when calling a method that exposes a COM object parameter as an <xref:System.IntPtr> type, or with custom marshaling.</span></span> <span data-ttu-id="ce515-612">También puede usar este método en un objeto administrado para obtener un puntero al contenedor CCW del objeto, aunque esto es menos común.</span><span class="sxs-lookup"><span data-stu-id="ce515-612">You can also use this method on a managed object to obtain a pointer to the object's COM callable wrapper, although this is less common.</span></span> <span data-ttu-id="ce515-613">Por ejemplo, puede usar <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%60%602%28%60%600%29> en un objeto administrado que se exporta a COM para obtener un puntero de interfaz para <xref:System.Runtime.InteropServices.UCOMIConnectionPointContainer?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ce515-613">For example, you can use <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%60%602%28%60%600%29> on a managed object that is exported to COM to obtain an interface pointer for <xref:System.Runtime.InteropServices.UCOMIConnectionPointContainer?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="ce515-614">El <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%60%602%28%60%600%29> sobrecarga del método permite la personalización de la interfaz de consulta de forma predeterminada.</span><span class="sxs-lookup"><span data-stu-id="ce515-614">The <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%60%602%28%60%600%29> method overload allows query interface customization by default.</span></span> <span data-ttu-id="ce515-615">Para especificar si se debe aplicar la personalización de la interfaz de consulta, use la <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%28System.Object%2CSystem.Type%2CSystem.Runtime.InteropServices.CustomQueryInterfaceMode%29> sobrecarga del método.</span><span class="sxs-lookup"><span data-stu-id="ce515-615">To specify whether to apply query interface customization, use the <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%28System.Object%2CSystem.Type%2CSystem.Runtime.InteropServices.CustomQueryInterfaceMode%29> method overload.</span></span>  
  
 <span data-ttu-id="ce515-616">Para obtener más información, consulte el [contenedor CCW](~/docs/framework/interop/com-callable-wrapper.md), [contenedor RCW](~/docs/framework/interop/runtime-callable-wrapper.md), y [presentar la interfaz de clase](https://msdn.microsoft.com/library/733c0dd2-12e5-46e6-8de1-39d5b25df024) temas.</span><span class="sxs-lookup"><span data-stu-id="ce515-616">For additional information, see the [COM Callable Wrapper](~/docs/framework/interop/com-callable-wrapper.md), [Runtime Callable Wrapper](~/docs/framework/interop/runtime-callable-wrapper.md), and [Introducing the Class Interface](https://msdn.microsoft.com/library/733c0dd2-12e5-46e6-8de1-39d5b25df024) topics.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ce515-617">El parámetro <paramref name="TInterface" /> no es una interfaz.</span><span class="sxs-lookup"><span data-stu-id="ce515-617">The <paramref name="TInterface" /> parameter is not an interface.</span></span>  
  
<span data-ttu-id="ce515-618">O bien</span><span class="sxs-lookup"><span data-stu-id="ce515-618">-or-</span></span> 
<span data-ttu-id="ce515-619">El tipo no es visible para COM.</span><span class="sxs-lookup"><span data-stu-id="ce515-619">The type is not visible to COM.</span></span>  
  
<span data-ttu-id="ce515-620">O bien</span><span class="sxs-lookup"><span data-stu-id="ce515-620">-or-</span></span> 
<span data-ttu-id="ce515-621">El parámetro <typeparamref name="T" /> es un tipo genérico abierto.</span><span class="sxs-lookup"><span data-stu-id="ce515-621">The <typeparamref name="T" /> parameter is an open generic type.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="ce515-622">El parámetro <paramref name="o" /> no admite la interfaz <paramref name="TInterface" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-622">The <paramref name="o" /> parameter does not support the <paramref name="TInterface" /> interface.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ce515-623">El parámetro <paramref name="o" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-623">The <paramref name="o" /> parameter is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-624">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-624">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-625">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-625">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetComInterfaceForObjectInContext">
      <MemberSignature Language="C#" Value="public static IntPtr GetComInterfaceForObjectInContext (object o, Type t);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int GetComInterfaceForObjectInContext(object o, class System.Type t) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObjectInContext(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetComInterfaceForObjectInContext (o As Object, t As Type) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr GetComInterfaceForObjectInContext(System::Object ^ o, Type ^ t);" />
      <MemberSignature Language="F#" Value="static member GetComInterfaceForObjectInContext : obj * Type -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.GetComInterfaceForObjectInContext (o, t)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
        <Parameter Name="t" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="o"><span data-ttu-id="ce515-626">Objeto que proporciona la interfaz.</span><span class="sxs-lookup"><span data-stu-id="ce515-626">The object that provides the interface.</span></span></param>
        <param name="t"><span data-ttu-id="ce515-627">Tipo de interfaz que se solicita.</span><span class="sxs-lookup"><span data-stu-id="ce515-627">The type of interface that is requested.</span></span></param>
        <summary><span data-ttu-id="ce515-628">Devuelve un puntero de interfaz que representa la interfaz especificada para un objeto, si el llamador está en el mismo contexto que ese objeto.</span><span class="sxs-lookup"><span data-stu-id="ce515-628">Returns an interface pointer that represents the specified interface for an object, if the caller is in the same context as that object.</span></span></summary>
        <returns><span data-ttu-id="ce515-629">El puntero de interfaz especificado por <paramref name="t" /> que representa la interfaz del objeto especificado o <see langword="null" /> si el llamador no está en el mismo contexto que el objeto.</span><span class="sxs-lookup"><span data-stu-id="ce515-629">The interface pointer specified by <paramref name="t" /> that represents the interface for the specified object, or <see langword="null" /> if the caller is not in the same context as the object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-630">Este método es igual a <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%2A> excepto en que devuelve `null` si el llamador no está en el mismo contexto que el objeto.</span><span class="sxs-lookup"><span data-stu-id="ce515-630">This method is the same as <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%2A> except that it returns `null` if the caller is not in the same context as the object.</span></span> <span data-ttu-id="ce515-631">Resulta especialmente útil si tiene un método no administrado que se espera que se pasa un puntero de interfaz.</span><span class="sxs-lookup"><span data-stu-id="ce515-631">It is particularly useful if you have an unmanaged method that expects to be passed an interface pointer.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ce515-632"><paramref name="t" /> no es una interfaz.</span><span class="sxs-lookup"><span data-stu-id="ce515-632"><paramref name="t" /> is not an interface.</span></span>  
  
<span data-ttu-id="ce515-633">O bien</span><span class="sxs-lookup"><span data-stu-id="ce515-633">-or-</span></span> 
<span data-ttu-id="ce515-634">El tipo no es visible para COM.</span><span class="sxs-lookup"><span data-stu-id="ce515-634">The type is not visible to COM.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="ce515-635"><paramref name="o" /> no admite la interfaz solicitada.</span><span class="sxs-lookup"><span data-stu-id="ce515-635"><paramref name="o" /> does not support the requested interface.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ce515-636">El valor de <paramref name="o" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-636"><paramref name="o" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="ce515-637">O bien</span><span class="sxs-lookup"><span data-stu-id="ce515-637">-or-</span></span> 
 <span data-ttu-id="ce515-638">El valor de <paramref name="t" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-638"><paramref name="t" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-639">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-639">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-640">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-640">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type)" />
        <altmember cref="T:System.Runtime.InteropServices.ComImportAttribute" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Release(System.IntPtr)" />
        <altmember cref="T:System.Runtime.InteropServices.UCOMIConnectionPointContainer" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetIDispatchForObject(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetComObjectData">
      <MemberSignature Language="C#" Value="public static object GetComObjectData (object obj, object key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetComObjectData(object obj, object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetComObjectData(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetComObjectData (obj As Object, key As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetComObjectData(System::Object ^ obj, System::Object ^ key);" />
      <MemberSignature Language="F#" Value="static member GetComObjectData : obj * obj -&gt; obj" Usage="System.Runtime.InteropServices.Marshal.GetComObjectData (obj, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="ce515-641">Objeto COM que contiene los datos que desea.</span><span class="sxs-lookup"><span data-stu-id="ce515-641">The COM object that contains the data that you want.</span></span></param>
        <param name="key"><span data-ttu-id="ce515-642">Clave en la tabla de hash interna de <paramref name="obj" /> de la que se recuperan los datos.</span><span class="sxs-lookup"><span data-stu-id="ce515-642">The key in the internal hash table of <paramref name="obj" /> to retrieve the data from.</span></span></param>
        <summary><span data-ttu-id="ce515-643">Recupera datos a los que hace referencia la clave especificada desde el objeto COM especificado.</span><span class="sxs-lookup"><span data-stu-id="ce515-643">Retrieves data that is referenced by the specified key from the specified COM object.</span></span></summary>
        <returns><span data-ttu-id="ce515-644">Datos representados por el parámetro <paramref name="key" /> en la tabla hash interna del parámetro <paramref name="obj" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-644">The data represented by the <paramref name="key" /> parameter in the internal hash table of the <paramref name="obj" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-645">Todos los objetos COM ajustados en un [contenedor RCW](~/docs/framework/interop/runtime-callable-wrapper.md) tienen asociado un valor de hash de la tabla, que <xref:System.Runtime.InteropServices.Marshal.GetComObjectData%2A> recupera.</span><span class="sxs-lookup"><span data-stu-id="ce515-645">All COM objects wrapped in a [Runtime Callable Wrapper](~/docs/framework/interop/runtime-callable-wrapper.md) have an associated hash table, which <xref:System.Runtime.InteropServices.Marshal.GetComObjectData%2A> retrieves.</span></span> <span data-ttu-id="ce515-646"><xref:System.Runtime.InteropServices.Marshal.SetComObjectData%2A?displayProperty=nameWithType> Agrega datos a la tabla hash.</span><span class="sxs-lookup"><span data-stu-id="ce515-646"><xref:System.Runtime.InteropServices.Marshal.SetComObjectData%2A?displayProperty=nameWithType> adds data to the hash table.</span></span> <span data-ttu-id="ce515-647">Nunca debe tener que llamar a cualquiera de estos métodos desde el código.</span><span class="sxs-lookup"><span data-stu-id="ce515-647">You should never have to call either method from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ce515-648">El valor de <paramref name="obj" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-648"><paramref name="obj" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="ce515-649">O bien</span><span class="sxs-lookup"><span data-stu-id="ce515-649">-or-</span></span> 
 <span data-ttu-id="ce515-650">El valor de <paramref name="key" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-650"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ce515-651"><paramref name="obj" /> no es un objeto COM.</span><span class="sxs-lookup"><span data-stu-id="ce515-651"><paramref name="obj" /> is not a COM object.</span></span>  
  
<span data-ttu-id="ce515-652">O bien</span><span class="sxs-lookup"><span data-stu-id="ce515-652">-or-</span></span> 
 <span data-ttu-id="ce515-653"><paramref name="obj" /> es un objeto [!INCLUDE[wrt](~/includes/wrt-md.md)].</span><span class="sxs-lookup"><span data-stu-id="ce515-653"><paramref name="obj" /> is a [!INCLUDE[wrt](~/includes/wrt-md.md)] object.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-654">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-654">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-655">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-655">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.SetComObjectData(System.Object,System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetComSlotForMethodInfo">
      <MemberSignature Language="C#" Value="public static int GetComSlotForMethodInfo (System.Reflection.MemberInfo m);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetComSlotForMethodInfo(class System.Reflection.MemberInfo m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetComSlotForMethodInfo(System.Reflection.MemberInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetComSlotForMethodInfo (m As MemberInfo) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetComSlotForMethodInfo(System::Reflection::MemberInfo ^ m);" />
      <MemberSignature Language="F#" Value="static member GetComSlotForMethodInfo : System.Reflection.MemberInfo -&gt; int" Usage="System.Runtime.InteropServices.Marshal.GetComSlotForMethodInfo m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Reflection.MemberInfo" />
      </Parameters>
      <Docs>
        <param name="m"><span data-ttu-id="ce515-656">Objeto que representa un método de interfaz.</span><span class="sxs-lookup"><span data-stu-id="ce515-656">An object that represents an interface method.</span></span></param>
        <summary><span data-ttu-id="ce515-657">Recupera la ranura de tabla de funciones virtuales (v-table o VTBL) para un tipo <see cref="T:System.Reflection.MemberInfo" /> especificado cuando ese tipo se expone a COM.</span><span class="sxs-lookup"><span data-stu-id="ce515-657">Retrieves the virtual function table (v-table or VTBL) slot for a specified <see cref="T:System.Reflection.MemberInfo" /> type when that type is exposed to COM.</span></span></summary>
        <returns><span data-ttu-id="ce515-658">Identificador <paramref name="m" /> de ranura VTBL cuando se expone a COM.</span><span class="sxs-lookup"><span data-stu-id="ce515-658">The VTBL slot <paramref name="m" /> identifier when it is exposed to COM.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-659">El número de ranura de base cero devuelto por este método representa tres [IUnknown](https://go.microsoft.com/fwlink/?LinkId=148003) y, posiblemente, cuatro [IDispatch](https://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5) métodos, de modo que el valor de la primera ranura disponible sea 3 o 7.</span><span class="sxs-lookup"><span data-stu-id="ce515-659">The zero-based slot number returned by this method accounts for three [IUnknown](https://go.microsoft.com/fwlink/?LinkId=148003) and possibly four [IDispatch](https://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5) methods, making the value of the first available slot either 3 or 7.</span></span> <span data-ttu-id="ce515-660"><xref:System.Runtime.InteropServices.Marshal.GetComSlotForMethodInfo%2A> proporciona la funcionalidad de opuesta <xref:System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ce515-660"><xref:System.Runtime.InteropServices.Marshal.GetComSlotForMethodInfo%2A> provides the opposite functionality of <xref:System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="ce515-661">Puede usar este método para recuperar los números de ranura para los miembros de interfaces que no son visibles desde COM y de los miembros de las interfaces privadas.</span><span class="sxs-lookup"><span data-stu-id="ce515-661">You can use this method to retrieve slot numbers for members of interfaces that are not visible from COM and for members of private interfaces.</span></span> <span data-ttu-id="ce515-662">Los números de ranura devueltos corresponden a los números de v-table que se deben reservar si el tipo se expone a COM.</span><span class="sxs-lookup"><span data-stu-id="ce515-662">The slot numbers returned correspond to the v-table numbers that would be reserved if the type was exposed to COM.</span></span> <span data-ttu-id="ce515-663">Miembros invisibles para COM ocupan en realidad una ranura en una tabla v expuesta, incluso aunque el cliente COM no puede usar la ranura.</span><span class="sxs-lookup"><span data-stu-id="ce515-663">COM-invisible members actually occupy a slot in an exposed v-table, even though the COM client cannot use the slot.</span></span> <span data-ttu-id="ce515-664">No puede usar <xref:System.Runtime.InteropServices.Marshal.GetComSlotForMethodInfo%2A> en una interfaz de clase pasando <xref:System.Reflection.MemberInfo> desde una clase.</span><span class="sxs-lookup"><span data-stu-id="ce515-664">You cannot use <xref:System.Runtime.InteropServices.Marshal.GetComSlotForMethodInfo%2A> on a class interface by passing <xref:System.Reflection.MemberInfo> from a class.</span></span> <span data-ttu-id="ce515-665">Para obtener más información, consulte [presentar la interfaz de clase](https://msdn.microsoft.com/library/733c0dd2-12e5-46e6-8de1-39d5b25df024).</span><span class="sxs-lookup"><span data-stu-id="ce515-665">For additional information, see [Introducing the Class Interface](https://msdn.microsoft.com/library/733c0dd2-12e5-46e6-8de1-39d5b25df024).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ce515-666">El parámetro <paramref name="m" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-666">The <paramref name="m" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ce515-667">El parámetro <paramref name="m" /> no es un objeto <see cref="T:System.Reflection.MemberInfo" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-667">The <paramref name="m" /> parameter is not a <see cref="T:System.Reflection.MemberInfo" /> object.</span></span>  
  
<span data-ttu-id="ce515-668">O bien</span><span class="sxs-lookup"><span data-stu-id="ce515-668">-or-</span></span> 
<span data-ttu-id="ce515-669">El parámetro <paramref name="m" /> no es un método de interfaz.</span><span class="sxs-lookup"><span data-stu-id="ce515-669">The <paramref name="m" /> parameter is not an interface method.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-670">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-670">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-671">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-671">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="T:System.Reflection.MemberInfo" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot(System.Type,System.Int32,System.Runtime.InteropServices.ComMemberType@)" />
      </Docs>
    </Member>
    <Member MemberName="GetDelegateForFunctionPointer">
      <MemberSignature Language="C#" Value="public static Delegate GetDelegateForFunctionPointer (IntPtr ptr, Type t);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Delegate GetDelegateForFunctionPointer(native int ptr, class System.Type t) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer(System.IntPtr,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDelegateForFunctionPointer (ptr As IntPtr, t As Type) As Delegate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Delegate ^ GetDelegateForFunctionPointer(IntPtr ptr, Type ^ t);" />
      <MemberSignature Language="F#" Value="static member GetDelegateForFunctionPointer : nativeint * Type -&gt; Delegate" Usage="System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer (ptr, t)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netcore-2.2">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Obsolete("GetDelegateForFunctionPointer(IntPtr, Type) may be unavailable in future releases. Instead, use GetDelegateForFunctionPointer&lt;T&gt;(IntPtr). For more info, go to http://go.microsoft.com/fwlink/?LinkID=296521")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Delegate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="t" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="ptr"><span data-ttu-id="ce515-672">Puntero a función no administrada que se va a convertir.</span><span class="sxs-lookup"><span data-stu-id="ce515-672">The unmanaged function pointer to be converted.</span></span></param>
        <param name="t"><span data-ttu-id="ce515-673">Tipo del delegado que se va a devolver.</span><span class="sxs-lookup"><span data-stu-id="ce515-673">The type of the delegate to be returned.</span></span></param>
        <summary><span data-ttu-id="ce515-674">Convierte un puntero a función no administrada en un delegado.</span><span class="sxs-lookup"><span data-stu-id="ce515-674">Converts an unmanaged function pointer to a delegate.</span></span></summary>
        <returns><span data-ttu-id="ce515-675">Instancia de delegado que se puede convertir al tipo de delegado adecuado.</span><span class="sxs-lookup"><span data-stu-id="ce515-675">A delegate instance that can be cast to the appropriate delegate type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-676">En las versiones 1.0 y 1.1 de .NET Framework, era posible pasar un delegado que representa un método administrado a código no administrado como un puntero a función, lo que permite el código no administrado llamar al método administrado a través del puntero de función.</span><span class="sxs-lookup"><span data-stu-id="ce515-676">In versions 1.0 and 1.1 of the .NET Framework, it was possible to pass a delegate representing a managed method to unmanaged code as a function pointer, allowing the unmanaged code to call the managed method through the function pointer.</span></span> <span data-ttu-id="ce515-677">También era posible que el código no administrado pasar ese puntero de función al código administrado y el puntero se resolvió correctamente en el método administrado subyacente.</span><span class="sxs-lookup"><span data-stu-id="ce515-677">It was also possible for the unmanaged code to pass that function pointer back to the managed code, and the pointer was resolved properly to the underlying managed method.</span></span>  
  
 <span data-ttu-id="ce515-678">En .NET Framework 2.0 y versiones posteriores, puede usar el <xref:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer%2A> y <xref:System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate%2A> métodos para calcular las referencias de los delegados en ambas direcciones.</span><span class="sxs-lookup"><span data-stu-id="ce515-678">In the .NET Framework 2.0 and later versions, you can use the <xref:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer%2A> and <xref:System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate%2A> methods to marshal delegates in both directions.</span></span> <span data-ttu-id="ce515-679">Con <xref:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer%2A>, `ptr` se importa como un <xref:System.IntPtr?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ce515-679">With <xref:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer%2A>, `ptr` is imported as a <xref:System.IntPtr?displayProperty=nameWithType>.</span></span> <span data-ttu-id="ce515-680">Un <xref:System.IntPtr?displayProperty=nameWithType> puede obtenerse de un delegado administrado mediante una llamada a <xref:System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate%2A> y se pasa como parámetro; a continuación, se puede llamar desde dentro del método no administrado.</span><span class="sxs-lookup"><span data-stu-id="ce515-680">A <xref:System.IntPtr?displayProperty=nameWithType> can be obtained for a managed delegate by calling <xref:System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate%2A> and passed as a parameter; it can then be called from inside the unmanaged method.</span></span> <span data-ttu-id="ce515-681">Tenga en cuenta que el contador de referencias de parámetro también puede calcular las referencias de los punteros de función a los delegados en .NET Framework 2.0 y versiones posteriores.</span><span class="sxs-lookup"><span data-stu-id="ce515-681">Note that the parameter marshaler can also marshal function pointers to delegates in the .NET Framework 2.0 and later versions.</span></span>  
  
 <span data-ttu-id="ce515-682">El <xref:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer%2A> método tiene las siguientes restricciones:</span><span class="sxs-lookup"><span data-stu-id="ce515-682">The <xref:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer%2A> method has the following restrictions:</span></span>  
  
-   <span data-ttu-id="ce515-683">Los genéricos no se admiten en escenarios de interoperabilidad.</span><span class="sxs-lookup"><span data-stu-id="ce515-683">Generics are not supported in interop scenarios.</span></span>  
  
-   <span data-ttu-id="ce515-684">No se puede pasar un puntero de función no válido a este método.</span><span class="sxs-lookup"><span data-stu-id="ce515-684">You cannot pass an invalid function pointer to this method.</span></span>  
  
-   <span data-ttu-id="ce515-685">Puede usar este método solo para los punteros de función no administrado puro.</span><span class="sxs-lookup"><span data-stu-id="ce515-685">You can use this method only for pure unmanaged function pointers.</span></span>  
  
-   <span data-ttu-id="ce515-686">No se puede usar este método con punteros a función obtenidos a través de C++ o desde el <xref:System.RuntimeMethodHandle.GetFunctionPointer%2A> método.</span><span class="sxs-lookup"><span data-stu-id="ce515-686">You cannot use this method with function pointers obtained through C++ or from the <xref:System.RuntimeMethodHandle.GetFunctionPointer%2A> method.</span></span>  
  
-   <span data-ttu-id="ce515-687">No se puede usar este método para crear a un delegado de un puntero de función a otro delegado administrado.</span><span class="sxs-lookup"><span data-stu-id="ce515-687">You cannot use this method to create a delegate from a function pointer to another managed delegate.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ce515-688">El parámetro <paramref name="t" /> no es un delegado o es genérico.</span><span class="sxs-lookup"><span data-stu-id="ce515-688">The <paramref name="t" /> parameter is not a delegate or is generic.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ce515-689">El parámetro <paramref name="ptr" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-689">The <paramref name="ptr" /> parameter is <see langword="null" />.</span></span>  
  
<span data-ttu-id="ce515-690">O bien</span><span class="sxs-lookup"><span data-stu-id="ce515-690">-or-</span></span> 
<span data-ttu-id="ce515-691">El parámetro <paramref name="t" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-691">The <paramref name="t" /> parameter is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-692">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-692">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-693">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-693">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetDelegateForFunctionPointer&lt;TDelegate&gt;">
      <MemberSignature Language="C#" Value="public static TDelegate GetDelegateForFunctionPointer&lt;TDelegate&gt; (IntPtr ptr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TDelegate GetDelegateForFunctionPointer&lt;TDelegate&gt;(native int ptr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer``1(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDelegateForFunctionPointer(Of TDelegate) (ptr As IntPtr) As TDelegate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TDelegate&gt;&#xA; static TDelegate GetDelegateForFunctionPointer(IntPtr ptr);" />
      <MemberSignature Language="F#" Value="static member GetDelegateForFunctionPointer : nativeint -&gt; 'Delegate" Usage="System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer ptr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>TDelegate</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TDelegate" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <typeparam name="TDelegate"><span data-ttu-id="ce515-694">Tipo del delegado que se va a devolver.</span><span class="sxs-lookup"><span data-stu-id="ce515-694">The type of the delegate to return.</span></span></typeparam>
        <param name="ptr"><span data-ttu-id="ce515-695">Puntero a función no administrada que se va a convertir.</span><span class="sxs-lookup"><span data-stu-id="ce515-695">The unmanaged function pointer to convert.</span></span></param>
        <summary><span data-ttu-id="ce515-696">[Compatible con .NET Framework 4.5.1 y versiones posteriores]</span><span class="sxs-lookup"><span data-stu-id="ce515-696">[Supported in the .NET Framework 4.5.1 and later versions]</span></span> 
<span data-ttu-id="ce515-697">Convierte un puntero a función no administrada en un delegado de un tipo especificado.</span><span class="sxs-lookup"><span data-stu-id="ce515-697">Converts an unmanaged function pointer to a delegate of a specified type.</span></span></summary>
        <returns><span data-ttu-id="ce515-698">Una instancia del tipo de delegado especificado.</span><span class="sxs-lookup"><span data-stu-id="ce515-698">A instance of the specified delegate type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-699">Puede usar el <xref:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer%60%601%28System.IntPtr%29> y <xref:System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate%60%601%28%60%600%29> métodos para calcular las referencias de los delegados en ambas direcciones.</span><span class="sxs-lookup"><span data-stu-id="ce515-699">You can use the <xref:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer%60%601%28System.IntPtr%29> and <xref:System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate%60%601%28%60%600%29> methods to marshal delegates in both directions.</span></span>  
  
 <span data-ttu-id="ce515-700">El <xref:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer%60%601%28System.IntPtr%29> método tiene las siguientes restricciones:</span><span class="sxs-lookup"><span data-stu-id="ce515-700">The <xref:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer%60%601%28System.IntPtr%29> method has the following restrictions:</span></span>  
  
-   <span data-ttu-id="ce515-701">No se puede pasar un puntero de función no válido a este método.</span><span class="sxs-lookup"><span data-stu-id="ce515-701">You cannot pass an invalid function pointer to this method.</span></span>  
  
-   <span data-ttu-id="ce515-702">Puede usar este método solo para los punteros de función no administrado puro.</span><span class="sxs-lookup"><span data-stu-id="ce515-702">You can use this method only for pure unmanaged function pointers.</span></span>  
  
-   <span data-ttu-id="ce515-703">No se puede usar este método con punteros a función obtenidos a través de C++ o desde el <xref:System.RuntimeMethodHandle.GetFunctionPointer%2A> método.</span><span class="sxs-lookup"><span data-stu-id="ce515-703">You cannot use this method with function pointers obtained through C++ or from the <xref:System.RuntimeMethodHandle.GetFunctionPointer%2A> method.</span></span>  
  
-   <span data-ttu-id="ce515-704">No se puede usar este método para crear a un delegado de un puntero de función a otro delegado administrado.</span><span class="sxs-lookup"><span data-stu-id="ce515-704">You cannot use this method to create a delegate from a function pointer to another managed delegate.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ce515-705">El parámetro genérico <paramref name="TDelegate" /> no es un delegado o es un tipo genérico abierto.</span><span class="sxs-lookup"><span data-stu-id="ce515-705">The <paramref name="TDelegate" /> generic parameter is not a delegate, or it is an open generic type.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ce515-706">El parámetro <paramref name="ptr" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-706">The <paramref name="ptr" /> parameter is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-707">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-707">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-708">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-708">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetEndComSlot">
      <MemberSignature Language="C#" Value="public static int GetEndComSlot (Type t);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetEndComSlot(class System.Type t) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetEndComSlot(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEndComSlot (t As Type) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetEndComSlot(Type ^ t);" />
      <MemberSignature Language="F#" Value="static member GetEndComSlot : Type -&gt; int" Usage="System.Runtime.InteropServices.Marshal.GetEndComSlot t" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="t"><span data-ttu-id="ce515-709">Tipo que representa una interfaz o una clase.</span><span class="sxs-lookup"><span data-stu-id="ce515-709">A type that represents an interface or class.</span></span></param>
        <summary><span data-ttu-id="ce515-710">Recupera la última ranura de la tabla de funciones virtuales (v-table o VTBL) de un tipo cuando se expone a COM.</span><span class="sxs-lookup"><span data-stu-id="ce515-710">Retrieves the last slot in the virtual function table (v-table or VTBL) of a type when exposed to COM.</span></span></summary>
        <returns><span data-ttu-id="ce515-711">Última ranura VTBL de la interfaz cuando se expone a COM.</span><span class="sxs-lookup"><span data-stu-id="ce515-711">The last VTBL slot of the interface when exposed to COM.</span></span> <span data-ttu-id="ce515-712">Si el parámetro <paramref name="t" /> es una clase, la ranura VTBL devuelta es la última ranura en la interfaz generada a partir de la clase.</span><span class="sxs-lookup"><span data-stu-id="ce515-712">If the <paramref name="t" /> parameter is a class, the returned VTBL slot is the last slot in the interface that is generated from the class.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-713">Este método devuelve el número de v-table basado en cero, para una interfaz o una clase.</span><span class="sxs-lookup"><span data-stu-id="ce515-713">This method returns the zero-based, v-table number for an interface or a class.</span></span> <span data-ttu-id="ce515-714">Cuando se utiliza en una clase, el número de ranura devuelto hace referencia a la interfaz de clase para la clase.</span><span class="sxs-lookup"><span data-stu-id="ce515-714">When used on a class, the slot number returned refers to the class interface for the class.</span></span> <span data-ttu-id="ce515-715">Si la interfaz de clase es AutoDual, este método siempre devuelve -1 para indicar que la interfaz solo de envío no expone una tabla v a los clientes administrados.</span><span class="sxs-lookup"><span data-stu-id="ce515-715">If the class interface is auto-dual, this method always returns -1 to indicate that the dispatch-only interface does not expose a v-table to managed clients.</span></span> <span data-ttu-id="ce515-716">Puede usar <xref:System.Runtime.InteropServices.Marshal.GetEndComSlot%2A> y <xref:System.Runtime.InteropServices.Marshal.GetStartComSlot%2A?displayProperty=nameWithType> junto con <xref:System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot%2A?displayProperty=nameWithType> para pasar las ranuras dentro de un intervalo especificado.</span><span class="sxs-lookup"><span data-stu-id="ce515-716">You can use <xref:System.Runtime.InteropServices.Marshal.GetEndComSlot%2A> and <xref:System.Runtime.InteropServices.Marshal.GetStartComSlot%2A?displayProperty=nameWithType> in conjunction with <xref:System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot%2A?displayProperty=nameWithType> to pass slots within a specified range.</span></span> <span data-ttu-id="ce515-717">Para obtener más información, consulte [presentar la interfaz de clase](https://msdn.microsoft.com/library/733c0dd2-12e5-46e6-8de1-39d5b25df024).</span><span class="sxs-lookup"><span data-stu-id="ce515-717">For additional information, see [Introducing the Class Interface](https://msdn.microsoft.com/library/733c0dd2-12e5-46e6-8de1-39d5b25df024).</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-718">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-718">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-719">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-719">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetStartComSlot(System.Type)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot(System.Type,System.Int32,System.Runtime.InteropServices.ComMemberType@)" />
      </Docs>
    </Member>
    <Member MemberName="GetExceptionCode">
      <MemberSignature Language="C#" Value="public static int GetExceptionCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetExceptionCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetExceptionCode" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetExceptionCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetExceptionCode();" />
      <MemberSignature Language="F#" Value="static member GetExceptionCode : unit -&gt; int" Usage="System.Runtime.InteropServices.Marshal.GetExceptionCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netcore-2.2">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netcore-2.2">
          <AttributeName>System.Obsolete("GetExceptionCode() may be unavailable in future releases.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ce515-720">Devuelve el código que identifica el tipo de excepción que ocurrió.</span><span class="sxs-lookup"><span data-stu-id="ce515-720">Retrieves a code that identifies the type of the exception that occurred.</span></span></summary>
        <returns><span data-ttu-id="ce515-721">El tipo de la excepción.</span><span class="sxs-lookup"><span data-stu-id="ce515-721">The type of the exception.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-722"><xref:System.Runtime.InteropServices.Marshal.GetExceptionCode%2A> se expone para la compatibilidad del compilador estructurado de control de excepciones (SEH) solo.</span><span class="sxs-lookup"><span data-stu-id="ce515-722"><xref:System.Runtime.InteropServices.Marshal.GetExceptionCode%2A> is exposed for compiler support of structured exception handling (SEH) only.</span></span> <span data-ttu-id="ce515-723">Si se llama a este método antes de que se produce una excepción, devuelve 0 x 0.</span><span class="sxs-lookup"><span data-stu-id="ce515-723">If this method is called before an exception is thrown, it returns 0x0.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-724">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-724">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-725">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-725">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetExceptionForHR">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ce515-726">Convierte un código de error HRESULT en un objeto <see cref="T:System.Exception" /> correspondiente.</span><span class="sxs-lookup"><span data-stu-id="ce515-726">Converts an HRESULT error code to a corresponding <see cref="T:System.Exception" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetExceptionForHR">
      <MemberSignature Language="C#" Value="public static Exception GetExceptionForHR (int errorCode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception GetExceptionForHR(int32 errorCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetExceptionForHR(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetExceptionForHR (errorCode As Integer) As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Exception ^ GetExceptionForHR(int errorCode);" />
      <MemberSignature Language="F#" Value="static member GetExceptionForHR : int -&gt; Exception" Usage="System.Runtime.InteropServices.Marshal.GetExceptionForHR errorCode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="errorCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="errorCode"><span data-ttu-id="ce515-727">HRESULT que se va a convertir.</span><span class="sxs-lookup"><span data-stu-id="ce515-727">The HRESULT to be converted.</span></span></param>
        <summary><span data-ttu-id="ce515-728">Convierte el código de error HRESULT especificado en un objeto <see cref="T:System.Exception" /> correspondiente.</span><span class="sxs-lookup"><span data-stu-id="ce515-728">Converts the specified HRESULT error code to a corresponding <see cref="T:System.Exception" /> object.</span></span></summary>
        <returns><span data-ttu-id="ce515-729">Objeto que representa el HRESULT convertido.</span><span class="sxs-lookup"><span data-stu-id="ce515-729">An object that represents the converted HRESULT.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-730">Use la <xref:System.Runtime.InteropServices.Marshal.GetExceptionForHR%2A> método para obtener un <xref:System.Exception> basándose en un HRESULT sin tener que llamar el <xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A> método y detectar la excepción.</span><span class="sxs-lookup"><span data-stu-id="ce515-730">Use the <xref:System.Runtime.InteropServices.Marshal.GetExceptionForHR%2A> method to get an <xref:System.Exception> based on an HRESULT without having to call the <xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A> method and catch the exception.</span></span>  
  
 <span data-ttu-id="ce515-731">Actual [IErrorInfo](https://msdn.microsoft.com/library/4dda6909-2d9a-4727-ae0c-b5f90dcfa447) interfaz se usa para construir la excepción.</span><span class="sxs-lookup"><span data-stu-id="ce515-731">The current [IErrorInfo](https://msdn.microsoft.com/library/4dda6909-2d9a-4727-ae0c-b5f90dcfa447) interface is used to construct the exception.</span></span>  
  
 <span data-ttu-id="ce515-732">Para la asignación de cada HRESULT a su clase de excepción comparable en .NET Framework, vea [How to: Map HRESULTs and Exceptions](~/docs/framework/interop/how-to-map-hresults-and-exceptions.md).</span><span class="sxs-lookup"><span data-stu-id="ce515-732">For the mapping from each HRESULT to its comparable exception class in the .NET Framework, see [How to: Map HRESULTs and Exceptions](~/docs/framework/interop/how-to-map-hresults-and-exceptions.md).</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-733">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-733">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-734">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-734">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="Overload:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR" />
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/ms221233(v=vs.85).aspx"><span data-ttu-id="ce515-735">Interfaz IErrorInfo</span><span class="sxs-lookup"><span data-stu-id="ce515-735">IErrorInfo Interface</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetExceptionForHR">
      <MemberSignature Language="C#" Value="public static Exception GetExceptionForHR (int errorCode, IntPtr errorInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception GetExceptionForHR(int32 errorCode, native int errorInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetExceptionForHR(System.Int32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetExceptionForHR (errorCode As Integer, errorInfo As IntPtr) As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Exception ^ GetExceptionForHR(int errorCode, IntPtr errorInfo);" />
      <MemberSignature Language="F#" Value="static member GetExceptionForHR : int * nativeint -&gt; Exception" Usage="System.Runtime.InteropServices.Marshal.GetExceptionForHR (errorCode, errorInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="errorCode" Type="System.Int32" />
        <Parameter Name="errorInfo" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="errorCode"><span data-ttu-id="ce515-736">HRESULT que se va a convertir.</span><span class="sxs-lookup"><span data-stu-id="ce515-736">The HRESULT to be converted.</span></span></param>
        <param name="errorInfo"><span data-ttu-id="ce515-737">Puntero a la interfaz <see langword="IErrorInfo" /> que proporciona más información sobre el error.</span><span class="sxs-lookup"><span data-stu-id="ce515-737">A pointer to the <see langword="IErrorInfo" /> interface that provides more information about the error.</span></span> <span data-ttu-id="ce515-738">Puede especificar <c>IntPtr(0)</c> para utilizar la interfaz <see langword="IErrorInfo" /> actual o <c>IntPtr(-1)</c> para omitir la interfaz <see langword="IErrorInfo" /> actual y construir la excepción del código de error únicamente.</span><span class="sxs-lookup"><span data-stu-id="ce515-738">You can specify <c>IntPtr(0)</c> to use the current <see langword="IErrorInfo" /> interface, or <c>IntPtr(-1)</c> to ignore the current <see langword="IErrorInfo" /> interface and construct the exception just from the error code.</span></span></param>
        <summary><span data-ttu-id="ce515-739">Convierte el código de error HRESULT especificado en un objeto <see cref="T:System.Exception" /> correspondiente, con información de error adicional pasada en una interfaz [IErrorInfo](https://msdn.microsoft.com/library/4dda6909-2d9a-4727-ae0c-b5f90dcfa447) para el objeto de excepción.</span><span class="sxs-lookup"><span data-stu-id="ce515-739">Converts the specified HRESULT error code to a corresponding <see cref="T:System.Exception" /> object, with additional error information passed in an [IErrorInfo](https://msdn.microsoft.com/library/4dda6909-2d9a-4727-ae0c-b5f90dcfa447) interface for the exception object.</span></span></summary>
        <returns><span data-ttu-id="ce515-740">Objeto que representa el HRESULT convertido e información obtenida de <paramref name="errorInfo" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-740">An object that represents the converted HRESULT and information obtained from <paramref name="errorInfo" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-741">Use la <xref:System.Runtime.InteropServices.Marshal.GetExceptionForHR%2A> método para obtener un <xref:System.Exception> basándose en un HRESULT sin tener que llamar el <xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A> método y detectar la excepción (lo que evita la sobrecarga en el rendimiento correspondiente).</span><span class="sxs-lookup"><span data-stu-id="ce515-741">Use the <xref:System.Runtime.InteropServices.Marshal.GetExceptionForHR%2A> method to get an <xref:System.Exception> based on an HRESULT without having to call the <xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A> method and catch the exception (thus avoiding the corresponding performance overhead).</span></span> <span data-ttu-id="ce515-742">El `errorInfo` parámetro proporciona información adicional sobre el error, como su descripción textual y el identificador único global (GUID) para la interfaz que definió el error.</span><span class="sxs-lookup"><span data-stu-id="ce515-742">The `errorInfo` parameter supplies additional information about the error, such as its textual description and the globally unique identifier (GUID) for the interface that defined the error.</span></span>  
  
 <span data-ttu-id="ce515-743">Utilice esta sobrecarga del método si tiene información de error personalizada que se debe proporcionar en la conversión.</span><span class="sxs-lookup"><span data-stu-id="ce515-743">Use this method overload if you have custom error information that you have to supply in the conversion.</span></span>  
  
 <span data-ttu-id="ce515-744">Para la asignación de cada HRESULT a su clase de excepción comparable en .NET Framework, vea [How to: Map HRESULTs and Exceptions](~/docs/framework/interop/how-to-map-hresults-and-exceptions.md).</span><span class="sxs-lookup"><span data-stu-id="ce515-744">For the mapping from each HRESULT to its comparable exception class in the .NET Framework, see [How to: Map HRESULTs and Exceptions](~/docs/framework/interop/how-to-map-hresults-and-exceptions.md).</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-745">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-745">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-746">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-746">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="Overload:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR" />
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/ms221233(v=vs.85).aspx"><span data-ttu-id="ce515-747">Interfaz IErrorInfo</span><span class="sxs-lookup"><span data-stu-id="ce515-747">IErrorInfo Interface</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetExceptionPointers">
      <MemberSignature Language="C#" Value="public static IntPtr GetExceptionPointers ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int GetExceptionPointers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetExceptionPointers" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetExceptionPointers () As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr GetExceptionPointers();" />
      <MemberSignature Language="F#" Value="static member GetExceptionPointers : unit -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.GetExceptionPointers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ce515-748">Recupera una descripción de la excepción independiente del equipo así como información sobre el estado del subproceso cuando ocurrió la excepción.</span><span class="sxs-lookup"><span data-stu-id="ce515-748">Retrieves a computer-independent description of an exception, and information about the state that existed for the thread when the exception occurred.</span></span></summary>
        <returns><span data-ttu-id="ce515-749">Puntero a una estructura <see href="https://docs.microsoft.com/windows/desktop/api/winnt/ns-winnt-_exception_pointers">EXCEPTION_POINTERS</see>.</span><span class="sxs-lookup"><span data-stu-id="ce515-749">A pointer to an <see href="https://docs.microsoft.com/windows/desktop/api/winnt/ns-winnt-_exception_pointers">EXCEPTION_POINTERS</see> structure.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-750"><xref:System.Runtime.InteropServices.Marshal.GetExceptionPointers%2A> se expone para la compatibilidad del compilador estructurado de control de excepciones (SEH) solo.</span><span class="sxs-lookup"><span data-stu-id="ce515-750"><xref:System.Runtime.InteropServices.Marshal.GetExceptionPointers%2A> is exposed for compiler support of structured exception handling (SEH) only.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-751">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-751">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-752">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-752">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetFunctionPointerForDelegate">
      <MemberSignature Language="C#" Value="public static IntPtr GetFunctionPointerForDelegate (Delegate d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int GetFunctionPointerForDelegate(class System.Delegate d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate(System.Delegate)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFunctionPointerForDelegate (d As Delegate) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr GetFunctionPointerForDelegate(Delegate ^ d);" />
      <MemberSignature Language="F#" Value="static member GetFunctionPointerForDelegate : Delegate -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netcore-2.2">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Obsolete("GetFunctionPointerForDelegate(Delegate) may be unavailable in future releases. Instead, use GetFunctionPointerForDelegate&lt;T&gt;(T). For more info, go to http://go.microsoft.com/fwlink/?LinkID=296522")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="ce515-753">Delegado que se va a pasar a código no administrado.</span><span class="sxs-lookup"><span data-stu-id="ce515-753">The delegate to be passed to unmanaged code.</span></span></param>
        <summary><span data-ttu-id="ce515-754">Convierte un delegado en un puntero a función invocable desde código no administrado.</span><span class="sxs-lookup"><span data-stu-id="ce515-754">Converts a delegate into a function pointer that is callable from unmanaged code.</span></span></summary>
        <returns><span data-ttu-id="ce515-755">Valor que se puede pasar a código no administrado que, a su vez, puede utilizarlo para llamar al delegado administrado subyacente.</span><span class="sxs-lookup"><span data-stu-id="ce515-755">A value that can be passed to unmanaged code, which, in turn, can use it to call the underlying managed delegate.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-756">El delegado `d` se convierte en un puntero de función que puede pasarse a código no administrado mediante el [__stdcall](https://msdn.microsoft.com/library/e212594b-1827-4d07-9527-7d412b300df8) convención de llamada.</span><span class="sxs-lookup"><span data-stu-id="ce515-756">The delegate `d` is converted to a function pointer that can be passed to unmanaged code using the [__stdcall](https://msdn.microsoft.com/library/e212594b-1827-4d07-9527-7d412b300df8) calling convention.</span></span>  
  
 <span data-ttu-id="ce515-757">Manualmente, debe mantener al delegado desde que se recopilan por el recolector de elementos no utilizados desde el código administrado.</span><span class="sxs-lookup"><span data-stu-id="ce515-757">You must manually keep the delegate from being collected by the garbage collector from managed code.</span></span> <span data-ttu-id="ce515-758">El recolector de elementos no utilizados no realiza un seguimiento de las referencias a código no administrado.</span><span class="sxs-lookup"><span data-stu-id="ce515-758">The garbage collector does not track references to unmanaged code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ce515-759">El parámetro <paramref name="d" /> es una definición de tipo genérico.</span><span class="sxs-lookup"><span data-stu-id="ce515-759">The <paramref name="d" /> parameter is a generic type definition.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ce515-760">El parámetro <paramref name="d" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-760">The <paramref name="d" /> parameter is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-761">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-761">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-762">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-762">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetFunctionPointerForDelegate&lt;TDelegate&gt;">
      <MemberSignature Language="C#" Value="public static IntPtr GetFunctionPointerForDelegate&lt;TDelegate&gt; (TDelegate d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int GetFunctionPointerForDelegate&lt;TDelegate&gt;(!!TDelegate d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate``1(``0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFunctionPointerForDelegate(Of TDelegate) (d As TDelegate) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TDelegate&gt;&#xA; static IntPtr GetFunctionPointerForDelegate(TDelegate d);" />
      <MemberSignature Language="F#" Value="static member GetFunctionPointerForDelegate : 'Delegate -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TDelegate" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="d" Type="TDelegate" />
      </Parameters>
      <Docs>
        <typeparam name="TDelegate"><span data-ttu-id="ce515-763">Tipo de delegado que se va a convertir.</span><span class="sxs-lookup"><span data-stu-id="ce515-763">The type of delegate to convert.</span></span></typeparam>
        <param name="d"><span data-ttu-id="ce515-764">Delegado que se va a pasar a código no administrado.</span><span class="sxs-lookup"><span data-stu-id="ce515-764">The delegate to be passed to unmanaged code.</span></span></param>
        <summary><span data-ttu-id="ce515-765">[Compatible con .NET Framework 4.5.1 y versiones posteriores]</span><span class="sxs-lookup"><span data-stu-id="ce515-765">[Supported in the .NET Framework 4.5.1 and later versions]</span></span> 
<span data-ttu-id="ce515-766">Convierte un delegado de un tipo especificado en un puntero a función invocable desde código no administrado.</span><span class="sxs-lookup"><span data-stu-id="ce515-766">Converts a delegate of a specified type to a function pointer that is callable from unmanaged code.</span></span></summary>
        <returns><span data-ttu-id="ce515-767">Valor que se puede pasar a código no administrado que, a su vez, puede utilizarlo para llamar al delegado administrado subyacente.</span><span class="sxs-lookup"><span data-stu-id="ce515-767">A value that can be passed to unmanaged code, which, in turn, can use it to call the underlying managed delegate.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-768">El delegado `d` se convierte en un puntero de función que puede pasarse a código no administrado por utilizando el [__stdcall](https://msdn.microsoft.com/library/e212594b-1827-4d07-9527-7d412b300df8) convención de llamada.</span><span class="sxs-lookup"><span data-stu-id="ce515-768">The delegate `d` is converted to a function pointer that can be passed to unmanaged code by using the [__stdcall](https://msdn.microsoft.com/library/e212594b-1827-4d07-9527-7d412b300df8) calling convention.</span></span>  
  
 <span data-ttu-id="ce515-769">Manualmente, debe mantener al delegado desde que se recopilan por el recolector de elementos no utilizados desde el código administrado.</span><span class="sxs-lookup"><span data-stu-id="ce515-769">You must manually keep the delegate from being collected by the garbage collector from managed code.</span></span> <span data-ttu-id="ce515-770">El recolector de elementos no utilizados no realiza un seguimiento de las referencias a código no administrado.</span><span class="sxs-lookup"><span data-stu-id="ce515-770">The garbage collector does not track references to unmanaged code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ce515-771">El parámetro <paramref name="d" /> es una definición de tipo genérico.</span><span class="sxs-lookup"><span data-stu-id="ce515-771">The <paramref name="d" /> parameter is a generic type definition.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ce515-772">El parámetro <paramref name="d" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-772">The <paramref name="d" /> parameter is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-773">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-773">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-774">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-774">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetHINSTANCE">
      <MemberSignature Language="C#" Value="public static IntPtr GetHINSTANCE (System.Reflection.Module m);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int GetHINSTANCE(class System.Reflection.Module m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetHINSTANCE(System.Reflection.Module)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHINSTANCE (m As Module) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr GetHINSTANCE(System::Reflection::Module ^ m);" />
      <MemberSignature Language="F#" Value="static member GetHINSTANCE : System.Reflection.Module -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.GetHINSTANCE m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Reflection.Module" />
      </Parameters>
      <Docs>
        <param name="m"><span data-ttu-id="ce515-775">Módulo cuyo HINSTANCE se desea.</span><span class="sxs-lookup"><span data-stu-id="ce515-775">The module whose HINSTANCE is desired.</span></span></param>
        <summary><span data-ttu-id="ce515-776">Devuelve el identificador de instancia (HINSTANCE) para el módulo especificado.</span><span class="sxs-lookup"><span data-stu-id="ce515-776">Returns the instance handle (HINSTANCE) for the specified module.</span></span></summary>
        <returns><span data-ttu-id="ce515-777">HINSTANCE para <paramref name="m" />; -1 si el módulo no tiene HINSTANCE.</span><span class="sxs-lookup"><span data-stu-id="ce515-777">The HINSTANCE for <paramref name="m" />; or -1 if the module does not have an HINSTANCE.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-778">Cuando los módulos dinámicos o en memoria, no tiene HINSTANCE.</span><span class="sxs-lookup"><span data-stu-id="ce515-778">When dynamic or in-memory, modules do not have an HINSTANCE.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ce515-779">El parámetro <paramref name="m" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-779">The <paramref name="m" /> parameter is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-780">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-780">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-781">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-781">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetHRForException">
      <MemberSignature Language="C#" Value="public static int GetHRForException (Exception e);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetHRForException(class System.Exception e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetHRForException(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHRForException (e As Exception) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetHRForException(Exception ^ e);" />
      <MemberSignature Language="F#" Value="static member GetHRForException : Exception -&gt; int" Usage="System.Runtime.InteropServices.Marshal.GetHRForException e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="ce515-782">Excepción que se va a convertir en HRESULT.</span><span class="sxs-lookup"><span data-stu-id="ce515-782">The exception to convert to an HRESULT.</span></span></param>
        <summary><span data-ttu-id="ce515-783">Convierte la excepción especificada en HRESULT.</span><span class="sxs-lookup"><span data-stu-id="ce515-783">Converts the specified exception to an HRESULT.</span></span></summary>
        <returns><span data-ttu-id="ce515-784">HRESULT asignado a la excepción proporcionada.</span><span class="sxs-lookup"><span data-stu-id="ce515-784">The HRESULT mapped to the supplied exception.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-785"><xref:System.Runtime.InteropServices.Marshal.GetHRForException%2A> también configura un [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx) interfaz para la excepción que se puede obtener mediante una llamada a la función COM GetErrorInfoNEEDGUID.</span><span class="sxs-lookup"><span data-stu-id="ce515-785"><xref:System.Runtime.InteropServices.Marshal.GetHRForException%2A> also sets up an [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx) interface for the exception that can be obtained by calling the COM GetErrorInfoNEEDGUID function.</span></span> <span data-ttu-id="ce515-786">Puede usar esta función para devolver un valor HRESULT en una implementación de clase administrada de una interfaz COM en el que aplicar el <xref:System.Runtime.InteropServices.PreserveSigAttribute> atributo.</span><span class="sxs-lookup"><span data-stu-id="ce515-786">You can use this function to return an HRESULT value on a managed class implementation of a COM interface where you apply the <xref:System.Runtime.InteropServices.PreserveSigAttribute> attribute.</span></span> <span data-ttu-id="ce515-787">Tiene el método con atributos todas las excepciones y usar el <xref:System.Runtime.InteropServices.Marshal.GetHRForException%2A> método para devolver el valor HRESULT correspondiente.</span><span class="sxs-lookup"><span data-stu-id="ce515-787">Have the attributed method catch all exceptions and use the <xref:System.Runtime.InteropServices.Marshal.GetHRForException%2A> method to return the appropriate HRESULT value.</span></span> <span data-ttu-id="ce515-788">Lo que permite una excepción se propague fuera del método, produce un comportamiento incorrecto.</span><span class="sxs-lookup"><span data-stu-id="ce515-788">Allowing an exception to propagate outside the method produces incorrect behavior.</span></span> <span data-ttu-id="ce515-789">(De hecho, common language runtime produce un error al pasar una excepción a un cliente COM que llama a este método a través de una tabla v)</span><span class="sxs-lookup"><span data-stu-id="ce515-789">(In fact, the common language runtime fails to pass an exception to a COM client that calls such a method through a v-table.)</span></span>  
  
 <span data-ttu-id="ce515-790">Tenga en cuenta que el <xref:System.Runtime.InteropServices.Marshal.GetHRForException%2A> método establece el [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx) interfaz del subproceso actual.</span><span class="sxs-lookup"><span data-stu-id="ce515-790">Note that the <xref:System.Runtime.InteropServices.Marshal.GetHRForException%2A> method sets the [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx) interface of the current thread.</span></span> <span data-ttu-id="ce515-791">Esto puede provocar resultados inesperados para métodos, como el <xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A> métodos que de forma predeterminada el [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx) del subproceso actual si se establece.</span><span class="sxs-lookup"><span data-stu-id="ce515-791">This can cause unexpected results for methods like the <xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A> methods that default to using the [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx) of the current thread if it is set.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-792">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-792">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-793">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-793">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="T:System.Runtime.InteropServices.PreserveSigAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetHRForLastWin32Error">
      <MemberSignature Language="C#" Value="public static int GetHRForLastWin32Error ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetHRForLastWin32Error() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetHRForLastWin32Error" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHRForLastWin32Error () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetHRForLastWin32Error();" />
      <MemberSignature Language="F#" Value="static member GetHRForLastWin32Error : unit -&gt; int" Usage="System.Runtime.InteropServices.Marshal.GetHRForLastWin32Error " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ce515-794">Devuelve el HRESULT correspondiente al último error producido en código Win32 ejecutado mediante <see cref="T:System.Runtime.InteropServices.Marshal" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-794">Returns the HRESULT corresponding to the last error incurred by Win32 code executed using <see cref="T:System.Runtime.InteropServices.Marshal" />.</span></span></summary>
        <returns><span data-ttu-id="ce515-795">HRESULT correspondiente al último código de error Win32.</span><span class="sxs-lookup"><span data-stu-id="ce515-795">The HRESULT corresponding to the last Win32 error code.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-796">La función de destino debía tener el `setLastError` metadatos marca establecida.</span><span class="sxs-lookup"><span data-stu-id="ce515-796">The target function must have had the `setLastError` metadata flag set.</span></span> <span data-ttu-id="ce515-797">Por ejemplo, el `SetLastError` campo de la <xref:System.Runtime.InteropServices.DllImportAttribute?displayProperty=nameWithType> debe ser `true`.</span><span class="sxs-lookup"><span data-stu-id="ce515-797">For example, the `SetLastError` field of the <xref:System.Runtime.InteropServices.DllImportAttribute?displayProperty=nameWithType> must be `true`.</span></span> <span data-ttu-id="ce515-798">El proceso para establecer esta marca depende del lenguaje utilizado: C# y C++ son `false` de forma predeterminada, pero la `Declare` instrucción en Visual Basic es `true`.</span><span class="sxs-lookup"><span data-stu-id="ce515-798">The process for setting this flag depends on the source language used: C# and C++ are `false` by default, but the `Declare` statement in Visual Basic is `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ce515-799">En el ejemplo siguiente se muestra cómo recuperar un valor HRESULT correspondiente a un código de error de Win32 con el <xref:System.Runtime.InteropServices.Marshal.GetHRForLastWin32Error%2A> método.</span><span class="sxs-lookup"><span data-stu-id="ce515-799">The following example demonstrates how to retrieve an HRESULT corresponding to a Win32 error code using the <xref:System.Runtime.InteropServices.Marshal.GetHRForLastWin32Error%2A> method.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.GetHRForLastWin32Error#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.GetHRForLastWin32Error/cs/example.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.GetHRForLastWin32Error#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.GetHRForLastWin32Error/vb/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-800">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-800">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-801">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-801">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="T:System.Runtime.InteropServices.DllImportAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetIDispatchForObject">
      <MemberSignature Language="C#" Value="public static IntPtr GetIDispatchForObject (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int GetIDispatchForObject(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetIDispatchForObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetIDispatchForObject (o As Object) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr GetIDispatchForObject(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="static member GetIDispatchForObject : obj -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.GetIDispatchForObject o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o"><span data-ttu-id="ce515-802">Objeto cuya interfaz <see langword="IDispatch" /> se solicita.</span><span class="sxs-lookup"><span data-stu-id="ce515-802">The object whose <see langword="IDispatch" /> interface is requested.</span></span></param>
        <summary><span data-ttu-id="ce515-803">Devuelve una interfaz <see href="https://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5">IDispatch</see> de un objeto administrado.</span><span class="sxs-lookup"><span data-stu-id="ce515-803">Returns an <see href="https://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5">IDispatch</see> interface from a managed object.</span></span></summary>
        <returns><span data-ttu-id="ce515-804">Puntero <see langword="IDispatch" /> para el parámetro <paramref name="o" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-804">The <see langword="IDispatch" /> pointer for the <paramref name="o" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-805">En código administrado, rara vez se trabaja directamente con el `IDispatch` interfaz.</span><span class="sxs-lookup"><span data-stu-id="ce515-805">In managed code, you seldom work directly with the `IDispatch` interface.</span></span> <span data-ttu-id="ce515-806">Sin embargo, <xref:System.Runtime.InteropServices.Marshal.GetIDispatchForObject%2A> es útil cuando se llama a un método que expone un parámetro de objeto COM como una <xref:System.IntPtr> tipo, o con la serialización personalizada.</span><span class="sxs-lookup"><span data-stu-id="ce515-806">However, <xref:System.Runtime.InteropServices.Marshal.GetIDispatchForObject%2A> is useful when calling a method that exposes a COM object parameter as an <xref:System.IntPtr> type, or with custom marshaling.</span></span> <span data-ttu-id="ce515-807">Llamar a un objeto con este método hace que el recuento de referencias se incrementa en el puntero de interfaz antes de devolver el puntero.</span><span class="sxs-lookup"><span data-stu-id="ce515-807">Calling an object with this method causes the reference count to increment on the interface pointer before the pointer is returned.</span></span> <span data-ttu-id="ce515-808">Utilice siempre <xref:System.Runtime.InteropServices.Marshal.Release%2A?displayProperty=nameWithType> para reducir el recuento de referencias cuando haya terminado con el puntero.</span><span class="sxs-lookup"><span data-stu-id="ce515-808">Always use <xref:System.Runtime.InteropServices.Marshal.Release%2A?displayProperty=nameWithType> to decrement the reference count once you have finished with the pointer.</span></span>  
  
 <span data-ttu-id="ce515-809">También puede usar este método en un objeto administrado para obtener un puntero de interfaz para el contenedor CCW para el objeto.</span><span class="sxs-lookup"><span data-stu-id="ce515-809">You can also use this method on a managed object to obtain an interface pointer to the COM callable wrapper for the object.</span></span> <span data-ttu-id="ce515-810">Para obtener más información, consulte [contenedor CCW](~/docs/framework/interop/com-callable-wrapper.md).</span><span class="sxs-lookup"><span data-stu-id="ce515-810">For additional information, see [COM Callable Wrapper](~/docs/framework/interop/com-callable-wrapper.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="ce515-811"><paramref name="o" /> no admite la interfaz solicitada.</span><span class="sxs-lookup"><span data-stu-id="ce515-811"><paramref name="o" /> does not support the requested interface.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-812">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-812">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-813">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-813">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Release(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetIDispatchForObjectInContext(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetIDispatchForObjectInContext">
      <MemberSignature Language="C#" Value="public static IntPtr GetIDispatchForObjectInContext (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int GetIDispatchForObjectInContext(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetIDispatchForObjectInContext(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetIDispatchForObjectInContext (o As Object) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr GetIDispatchForObjectInContext(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="static member GetIDispatchForObjectInContext : obj -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.GetIDispatchForObjectInContext o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o"><span data-ttu-id="ce515-814">Objeto cuya interfaz <see langword="IDispatch" /> se solicita.</span><span class="sxs-lookup"><span data-stu-id="ce515-814">The object whose <see langword="IDispatch" /> interface is requested.</span></span></param>
        <summary><span data-ttu-id="ce515-815">Devuelve un puntero de interfaz <see href="https://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5">IDispatch</see> desde un objeto administrado si el llamador está en el mismo contexto que ese objeto.</span><span class="sxs-lookup"><span data-stu-id="ce515-815">Returns an <see href="https://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5">IDispatch</see> interface pointer from a managed object, if the caller is in the same context as that object.</span></span></summary>
        <returns><span data-ttu-id="ce515-816">Puntero de interfaz <see langword="IDispatch" /> para el objeto especificado o <see langword="null" /> si el llamador no está en el mismo contexto que el objeto especificado.</span><span class="sxs-lookup"><span data-stu-id="ce515-816">The <see langword="IDispatch" /> interface pointer for the specified object, or <see langword="null" /> if the caller is not in the same context as the specified object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-817">Este método es igual a <xref:System.Runtime.InteropServices.Marshal.GetIDispatchForObject%2A> excepto en que devuelve `null` si el llamador no está en el mismo contexto que el objeto.</span><span class="sxs-lookup"><span data-stu-id="ce515-817">This method is the same as <xref:System.Runtime.InteropServices.Marshal.GetIDispatchForObject%2A> except that it returns `null` if the caller is not in the same context as the object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="ce515-818"><paramref name="o" /> no admite la interfaz solicitada.</span><span class="sxs-lookup"><span data-stu-id="ce515-818"><paramref name="o" /> does not support the requested interface.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ce515-819">El valor de <paramref name="o" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-819"><paramref name="o" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-820">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-820">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-821">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-821">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Release(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetIDispatchForObject(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetITypeInfoForType">
      <MemberSignature Language="C#" Value="public static IntPtr GetITypeInfoForType (Type t);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int GetITypeInfoForType(class System.Type t) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetITypeInfoForType(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetITypeInfoForType (t As Type) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr GetITypeInfoForType(Type ^ t);" />
      <MemberSignature Language="F#" Value="static member GetITypeInfoForType : Type -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.GetITypeInfoForType t" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="t"><span data-ttu-id="ce515-822">Tipo cuya interfaz <see langword="ITypeInfo" /> se está solicitando.</span><span class="sxs-lookup"><span data-stu-id="ce515-822">The type whose <see langword="ITypeInfo" /> interface is being requested.</span></span></param>
        <summary><span data-ttu-id="ce515-823">Devuelve una interfaz <see cref="T:System.Runtime.InteropServices.ComTypes.ITypeInfo" /> de un tipo administrado.</span><span class="sxs-lookup"><span data-stu-id="ce515-823">Returns a <see cref="T:System.Runtime.InteropServices.ComTypes.ITypeInfo" /> interface from a managed type.</span></span></summary>
        <returns><span data-ttu-id="ce515-824">Puntero a la interfaz <see langword="ITypeInfo" /> para el parámetro <paramref name="t" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-824">A pointer to the <see langword="ITypeInfo" /> interface for the <paramref name="t" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-825">Este método devuelve un puntero a un `ITypeInfo` implementación que se basa en el tipo original.</span><span class="sxs-lookup"><span data-stu-id="ce515-825">This method returns a pointer to an `ITypeInfo` implementation that is based on the original type.</span></span> <span data-ttu-id="ce515-826">Una llamada a un objeto con <xref:System.Runtime.InteropServices.Marshal.GetITypeInfoForType%2A> hace que el recuento de referencias se incrementa en el puntero de interfaz antes de devolver el puntero.</span><span class="sxs-lookup"><span data-stu-id="ce515-826">Calling an object with <xref:System.Runtime.InteropServices.Marshal.GetITypeInfoForType%2A> causes the reference count to increment on the interface pointer before the pointer is returned.</span></span> <span data-ttu-id="ce515-827">Utilice siempre <xref:System.Runtime.InteropServices.Marshal.Release%2A?displayProperty=nameWithType> para reducir el recuento de referencias cuando haya terminado con el puntero.</span><span class="sxs-lookup"><span data-stu-id="ce515-827">Always use <xref:System.Runtime.InteropServices.Marshal.Release%2A?displayProperty=nameWithType> to decrement the reference count once you have finished with the pointer.</span></span> <span data-ttu-id="ce515-828">Puede aplicar el <xref:System.Runtime.InteropServices.MarshalAsAttribute?displayProperty=nameWithType> para reemplazar el comportamiento de serialización de interoperabilidad estándar con este contador de referencias personalizado.</span><span class="sxs-lookup"><span data-stu-id="ce515-828">You can apply the <xref:System.Runtime.InteropServices.MarshalAsAttribute?displayProperty=nameWithType> to replace standard interop marshaling behavior with this custom marshaler.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ce515-829">En el ejemplo siguiente se muestra cómo recuperar un puntero a la `ITypeInfo` interfaz para un tipo con el <xref:System.Runtime.InteropServices.Marshal.GetITypeInfoForType%2A> método.</span><span class="sxs-lookup"><span data-stu-id="ce515-829">The following example demonstrates how to retrieve a pointer to the `ITypeInfo` interface for a type using the <xref:System.Runtime.InteropServices.Marshal.GetITypeInfoForType%2A> method.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.GetITypeInfoForType#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.GetITypeInfoForType/cs/example.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.GetITypeInfoForType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.GetITypeInfoForType/vb/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ce515-830"><paramref name="t" /> no es un tipo visible para COM.</span><span class="sxs-lookup"><span data-stu-id="ce515-830"><paramref name="t" /> is not a visible type to COM.</span></span>  
  
<span data-ttu-id="ce515-831">O bien</span><span class="sxs-lookup"><span data-stu-id="ce515-831">-or-</span></span> 
 <span data-ttu-id="ce515-832"><paramref name="t" /> es un tipo [!INCLUDE[wrt](~/includes/wrt-md.md)].</span><span class="sxs-lookup"><span data-stu-id="ce515-832"><paramref name="t" /> is a [!INCLUDE[wrt](~/includes/wrt-md.md)] type.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="ce515-833">Se registra una biblioteca de tipos para el ensamblado que contiene el tipo, pero no se encuentra la definición de tipo.</span><span class="sxs-lookup"><span data-stu-id="ce515-833">A type library is registered for the assembly that contains the type, but the type definition cannot be found.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-834">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-834">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-835">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-835">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetTypeForITypeInfo(System.IntPtr)" />
        <altmember cref="T:System.Runtime.InteropServices.MarshalAsAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetIUnknownForObject">
      <MemberSignature Language="C#" Value="public static IntPtr GetIUnknownForObject (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int GetIUnknownForObject(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetIUnknownForObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetIUnknownForObject (o As Object) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr GetIUnknownForObject(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="static member GetIUnknownForObject : obj -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.GetIUnknownForObject o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o"><span data-ttu-id="ce515-836">Objeto cuya interfaz <see langword="IUnknown" /> se solicita.</span><span class="sxs-lookup"><span data-stu-id="ce515-836">The object whose <see langword="IUnknown" /> interface is requested.</span></span></param>
        <summary><span data-ttu-id="ce515-837">Devuelve una interfaz <see href="https://go.microsoft.com/fwlink/?LinkId=148003">IUnknown</see> desde un objeto administrado.</span><span class="sxs-lookup"><span data-stu-id="ce515-837">Returns an <see href="https://go.microsoft.com/fwlink/?LinkId=148003">IUnknown</see> interface from a managed object.</span></span></summary>
        <returns><span data-ttu-id="ce515-838">Puntero <see langword="IUnknown" /> para el parámetro <paramref name="o" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-838">The <see langword="IUnknown" /> pointer for the <paramref name="o" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-839">En código administrado, rara vez se trabaja directamente con el `IUnknown` interfaz.</span><span class="sxs-lookup"><span data-stu-id="ce515-839">In managed code, you seldom work directly with the `IUnknown` interface.</span></span> <span data-ttu-id="ce515-840">Sin embargo, <xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObject%2A> es útil cuando se llama a un método que expone un parámetro de objeto COM como una <xref:System.IntPtr> tipo, o con la serialización personalizada.</span><span class="sxs-lookup"><span data-stu-id="ce515-840">However, <xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObject%2A> is useful when calling a method that exposes a COM object parameter as an <xref:System.IntPtr> type, or with custom marshaling.</span></span> <span data-ttu-id="ce515-841">Llamar a un objeto con este método hace que el recuento de referencias se incrementa en el puntero de interfaz antes de devolver el puntero.</span><span class="sxs-lookup"><span data-stu-id="ce515-841">Calling an object with this method causes the reference count to increment on the interface pointer before the pointer is returned.</span></span> <span data-ttu-id="ce515-842">Utilice siempre <xref:System.Runtime.InteropServices.Marshal.Release%2A?displayProperty=nameWithType> para reducir el recuento de referencias cuando haya terminado con el puntero.</span><span class="sxs-lookup"><span data-stu-id="ce515-842">Always use <xref:System.Runtime.InteropServices.Marshal.Release%2A?displayProperty=nameWithType> to decrement the reference count once you have finished with the pointer.</span></span> <span data-ttu-id="ce515-843">Este método proporciona la funcionalidad opuesta de la <xref:System.Runtime.InteropServices.Marshal.GetObjectForIUnknown%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="ce515-843">This method provides the opposite functionality of the <xref:System.Runtime.InteropServices.Marshal.GetObjectForIUnknown%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="ce515-844">También puede usar este método en un objeto administrado para obtener un puntero de interfaz a la [contenedor CCW](~/docs/framework/interop/com-callable-wrapper.md) para el objeto.</span><span class="sxs-lookup"><span data-stu-id="ce515-844">You can also use this method on a managed object to obtain an interface pointer to the [COM Callable Wrapper](~/docs/framework/interop/com-callable-wrapper.md) for the object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ce515-845">En el ejemplo siguiente se muestra cómo recuperar un [IUnknown](https://go.microsoft.com/fwlink/?LinkId=148003) interfaz para un objeto administrado mediante el <xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObject%2A> método.</span><span class="sxs-lookup"><span data-stu-id="ce515-845">The following example demonstrates how to retrieve an [IUnknown](https://go.microsoft.com/fwlink/?LinkId=148003) interface for a managed object using the <xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObject%2A> method.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.GetIUnknownForObject-release#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.GetIUnknownForObject-release/cs/example.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.GetIUnknownForObject-release#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.GetIUnknownForObject-release/vb/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-846">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-846">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-847">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-847">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Release(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetObjectForIUnknown(System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="GetIUnknownForObjectInContext">
      <MemberSignature Language="C#" Value="public static IntPtr GetIUnknownForObjectInContext (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int GetIUnknownForObjectInContext(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetIUnknownForObjectInContext(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetIUnknownForObjectInContext (o As Object) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr GetIUnknownForObjectInContext(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="static member GetIUnknownForObjectInContext : obj -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.GetIUnknownForObjectInContext o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o"><span data-ttu-id="ce515-848">Objeto cuya interfaz <see langword="IUnknown" /> se solicita.</span><span class="sxs-lookup"><span data-stu-id="ce515-848">The object whose <see langword="IUnknown" /> interface is requested.</span></span></param>
        <summary><span data-ttu-id="ce515-849">Devuelve una interfaz <see href="https://go.microsoft.com/fwlink/?LinkId=148003">IUnknown</see> desde un objeto administrado, si el llamador está en el mismo contexto que ese objeto.</span><span class="sxs-lookup"><span data-stu-id="ce515-849">Returns an <see href="https://go.microsoft.com/fwlink/?LinkId=148003">IUnknown</see> interface from a managed object, if the caller is in the same context as that object.</span></span></summary>
        <returns><span data-ttu-id="ce515-850">Puntero <see langword="IUnknown" /> para el objeto especificado o <see langword="null" /> si el llamador no está en el mismo contexto que el objeto especificado.</span><span class="sxs-lookup"><span data-stu-id="ce515-850">The <see langword="IUnknown" /> pointer for the specified object, or <see langword="null" /> if the caller is not in the same context as the specified object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-851">Este método es igual a <xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObject%2A> excepto en que devuelve `null` si el llamador no está en el mismo contexto que el objeto.</span><span class="sxs-lookup"><span data-stu-id="ce515-851">This method is the same as <xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObject%2A> except that it returns `null` if the caller is not in the same context as the object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ce515-852">En el ejemplo siguiente se muestra cómo recuperar un `IUnknown` interfaz para un objeto administrado mediante el <xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObjectInContext%2A> método.</span><span class="sxs-lookup"><span data-stu-id="ce515-852">The following example demonstrates how to retrieve an `IUnknown` interface for a managed object using the <xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObjectInContext%2A> method.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.GetIUnknownForObjectInContext-release#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.GetIUnknownForObjectInContext-release/cs/example.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.GetIUnknownForObjectInContext-release#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.GetIUnknownForObjectInContext-release/vb/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-853">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-853">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-854">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-854">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetIUnknownForObject(System.Object)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Release(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetObjectForIUnknown(System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="GetLastWin32Error">
      <MemberSignature Language="C#" Value="public static int GetLastWin32Error ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetLastWin32Error() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetLastWin32Error" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetLastWin32Error () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetLastWin32Error();" />
      <MemberSignature Language="F#" Value="static member GetLastWin32Error : unit -&gt; int" Usage="System.Runtime.InteropServices.Marshal.GetLastWin32Error " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ce515-855">Devuelve el código de error devuelto por la última función no administrada a la que se llamó mediante la invocación de plataforma que tiene la marca <see cref="F:System.Runtime.InteropServices.DllImportAttribute.SetLastError" /> activada.</span><span class="sxs-lookup"><span data-stu-id="ce515-855">Returns the error code returned by the last unmanaged function that was called using platform invoke that has the <see cref="F:System.Runtime.InteropServices.DllImportAttribute.SetLastError" /> flag set.</span></span></summary>
        <returns><span data-ttu-id="ce515-856">Último código de error establecido por una llamada a la función <see href="https://msdn.microsoft.com/library/ms680627.aspx">SetLastError</see> Win32.</span><span class="sxs-lookup"><span data-stu-id="ce515-856">The last error code set by a call to the Win32 <see href="https://msdn.microsoft.com/library/ms680627.aspx">SetLastError</see> function.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-857"><xref:System.Runtime.InteropServices.Marshal.GetLastWin32Error%2A> expone el Win32 [GetLastError](https://go.microsoft.com/fwlink/?LinkId=148657) función desde Kernel32.DLL.</span><span class="sxs-lookup"><span data-stu-id="ce515-857"><xref:System.Runtime.InteropServices.Marshal.GetLastWin32Error%2A> exposes the Win32 [GetLastError](https://go.microsoft.com/fwlink/?LinkId=148657) function from Kernel32.DLL.</span></span> <span data-ttu-id="ce515-858">Este método existe porque no es seguro para que sea una plataforma directa llamada de invocación a `GetLastError` para obtener esta información.</span><span class="sxs-lookup"><span data-stu-id="ce515-858">This method exists because it is not safe to make a direct platform invoke call to `GetLastError` to obtain this information.</span></span> <span data-ttu-id="ce515-859">Si desea tener acceso a este código de error, debe llamar a <xref:System.Runtime.InteropServices.Marshal.GetLastWin32Error%2A> en lugar de escribir su propia plataforma de definición de invocación para `GetLastError` y llamarlo.</span><span class="sxs-lookup"><span data-stu-id="ce515-859">If you want to access this error code, you must call <xref:System.Runtime.InteropServices.Marshal.GetLastWin32Error%2A> instead of writing your own platform invoke definition for `GetLastError` and calling it.</span></span> <span data-ttu-id="ce515-860">Common language runtime puede realizar llamadas internas a las API que sobrescriben la `GetLastError` mantenida por el sistema operativo.</span><span class="sxs-lookup"><span data-stu-id="ce515-860">The common language runtime can make internal calls to APIs that overwrite the `GetLastError` maintained by the operating system.</span></span>  
  
 <span data-ttu-id="ce515-861">Puede usar este método para obtener códigos de error solo si se aplica el <xref:System.Runtime.InteropServices.DllImportAttribute?displayProperty=nameWithType> a la firma del método y establezca el <xref:System.Runtime.InteropServices.DllImportAttribute.SetLastError> campo`true`.</span><span class="sxs-lookup"><span data-stu-id="ce515-861">You can use this method to obtain error codes only if you apply the <xref:System.Runtime.InteropServices.DllImportAttribute?displayProperty=nameWithType> to the method signature and set the <xref:System.Runtime.InteropServices.DllImportAttribute.SetLastError> field to`true`.</span></span> <span data-ttu-id="ce515-862">El proceso para esto varía según el idioma de origen utilizado: C# y C++ son `false` de forma predeterminada, pero la `Declare` instrucción en Visual Basic es `true`.</span><span class="sxs-lookup"><span data-stu-id="ce515-862">The process for this varies depending upon the source language used: C# and C++ are `false` by default, but the `Declare` statement in Visual Basic is `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ce515-863">En el ejemplo siguiente se muestra la forma de llamar al método <xref:System.Runtime.InteropServices.Marshal.GetLastWin32Error%2A>.</span><span class="sxs-lookup"><span data-stu-id="ce515-863">The following example demonstrates calling the <xref:System.Runtime.InteropServices.Marshal.GetLastWin32Error%2A> method.</span></span> <span data-ttu-id="ce515-864">El ejemplo primero se muestra cómo llamar al método con no existe ningún error y, a continuación, se muestra cómo llamar al método cuando existe un error.</span><span class="sxs-lookup"><span data-stu-id="ce515-864">The example first demonstrates calling the method with no error present and then demonstrates calling the method with an error present.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.GetLastWin32Error#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.GetLastWin32Error/cs/example.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.GetLastWin32Error#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.GetLastWin32Error/vb/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-865">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-865">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-866">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-866">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="T:System.Runtime.InteropServices.DllImportAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetManagedThunkForUnmanagedMethodPtr">
      <MemberSignature Language="C#" Value="public static IntPtr GetManagedThunkForUnmanagedMethodPtr (IntPtr pfnMethodToWrap, IntPtr pbSignature, int cbSignature);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int GetManagedThunkForUnmanagedMethodPtr(native int pfnMethodToWrap, native int pbSignature, int32 cbSignature) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetManagedThunkForUnmanagedMethodPtr(System.IntPtr,System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetManagedThunkForUnmanagedMethodPtr (pfnMethodToWrap As IntPtr, pbSignature As IntPtr, cbSignature As Integer) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr GetManagedThunkForUnmanagedMethodPtr(IntPtr pfnMethodToWrap, IntPtr pbSignature, int cbSignature);" />
      <MemberSignature Language="F#" Value="static member GetManagedThunkForUnmanagedMethodPtr : nativeint * nativeint * int -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.GetManagedThunkForUnmanagedMethodPtr (pfnMethodToWrap, pbSignature, cbSignature)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinmac-3.0">
          <AttributeName>System.Obsolete("This method has been deprecated")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("The GetManagedThunkForUnmanagedMethodPtr method has been deprecated and will be removed in a future release.", false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pfnMethodToWrap" Type="System.IntPtr" />
        <Parameter Name="pbSignature" Type="System.IntPtr" />
        <Parameter Name="cbSignature" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="pfnMethodToWrap"><span data-ttu-id="ce515-867">Puntero al método de que se va a serializar.</span><span class="sxs-lookup"><span data-stu-id="ce515-867">A pointer to the method to marshal.</span></span></param>
        <param name="pbSignature"><span data-ttu-id="ce515-868">Puntero a la firma del método.</span><span class="sxs-lookup"><span data-stu-id="ce515-868">A pointer to the method signature.</span></span></param>
        <param name="cbSignature"><span data-ttu-id="ce515-869">Número de bytes en <paramref name="pbSignature" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-869">The number of bytes in <paramref name="pbSignature" />.</span></span></param>
        <summary><span data-ttu-id="ce515-870">Obtiene un puntero a una función generada en tiempo de ejecución que calcula las referencias a una llamada de código administrado a código no administrado.</span><span class="sxs-lookup"><span data-stu-id="ce515-870">Gets a pointer to a runtime-generated function that marshals a call from managed to unmanaged code.</span></span></summary>
        <returns><span data-ttu-id="ce515-871">Puntero a la función que serializará una llamada desde el parámetro <paramref name="pfnMethodToWrap" /> a código no administrado.</span><span class="sxs-lookup"><span data-stu-id="ce515-871">A pointer to the function that will marshal a call from the <paramref name="pfnMethodToWrap" /> parameter to unmanaged code.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-872"><xref:System.Runtime.InteropServices.Marshal.GetManagedThunkForUnmanagedMethodPtr%2A> se expone para la compatibilidad con el compilador solo.</span><span class="sxs-lookup"><span data-stu-id="ce515-872"><xref:System.Runtime.InteropServices.Marshal.GetManagedThunkForUnmanagedMethodPtr%2A> is exposed for compiler support only.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-873">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-873">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-874">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-874">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetMethodInfoForComSlot">
      <MemberSignature Language="C#" Value="public static System.Reflection.MemberInfo GetMethodInfoForComSlot (Type t, int slot, ref System.Runtime.InteropServices.ComMemberType memberType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.MemberInfo GetMethodInfoForComSlot(class System.Type t, int32 slot, valuetype System.Runtime.InteropServices.ComMemberType&amp; memberType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot(System.Type,System.Int32,System.Runtime.InteropServices.ComMemberType@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMethodInfoForComSlot (t As Type, slot As Integer, ByRef memberType As ComMemberType) As MemberInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::MemberInfo ^ GetMethodInfoForComSlot(Type ^ t, int slot, System::Runtime::InteropServices::ComMemberType % memberType);" />
      <MemberSignature Language="F#" Value="static member GetMethodInfoForComSlot : Type * int *  -&gt; System.Reflection.MemberInfo" Usage="System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot (t, slot, memberType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t" Type="System.Type" />
        <Parameter Name="slot" Type="System.Int32" />
        <Parameter Name="memberType" Type="System.Runtime.InteropServices.ComMemberType" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="t"><span data-ttu-id="ce515-875">Tipo para el que se recupera <see cref="T:System.Reflection.MemberInfo" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-875">The type for which the <see cref="T:System.Reflection.MemberInfo" /> is to be retrieved.</span></span></param>
        <param name="slot"><span data-ttu-id="ce515-876">Ranura de VTBL.</span><span class="sxs-lookup"><span data-stu-id="ce515-876">The VTBL slot.</span></span></param>
        <param name="memberType"><span data-ttu-id="ce515-877">Si vuelve correctamente, uno de los valores de enumeración que especifica el tipo del miembro.</span><span class="sxs-lookup"><span data-stu-id="ce515-877">On successful return, one of the enumeration values that specifies the type of the member.</span></span></param>
        <summary><span data-ttu-id="ce515-878">Recupera un objeto <see cref="T:System.Reflection.MemberInfo" /> para la ranura de la tabla de funciones virtuales (v-table o VTBL) especificada.</span><span class="sxs-lookup"><span data-stu-id="ce515-878">Retrieves a <see cref="T:System.Reflection.MemberInfo" /> object for the specified virtual function table (v-table or VTBL) slot.</span></span></summary>
        <returns><span data-ttu-id="ce515-879">Objeto que representa el miembro en la ranura VTBL especificada.</span><span class="sxs-lookup"><span data-stu-id="ce515-879">The object that represents the member at the specified VTBL slot.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-880">El valor devuelto puede ser un <xref:System.Reflection.FieldInfo>, <xref:System.Reflection.MethodInfo>, o <xref:System.Reflection.PropertyInfo> objeto.</span><span class="sxs-lookup"><span data-stu-id="ce515-880">The return value may be a <xref:System.Reflection.FieldInfo>, <xref:System.Reflection.MethodInfo>, or <xref:System.Reflection.PropertyInfo> object.</span></span> <span data-ttu-id="ce515-881">El valor devuelto depende del tipo de miembro administrado que existe en la ranura de COM determinada (por lo tanto, escriba el valor devuelto generalizado <xref:System.Reflection.MemberInfo> de los cuales tres derivan).</span><span class="sxs-lookup"><span data-stu-id="ce515-881">The return value depends on the type of managed member that exists in the given COM slot (hence the generalized return type <xref:System.Reflection.MemberInfo> from which all three derive).</span></span>  
  
 <span data-ttu-id="ce515-882">El número de ranura de base cero que es devuelto por este método representa tres [IUnknown](https://go.microsoft.com/fwlink/?LinkId=148003) y, posiblemente, cuatro [IDispatch](https://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5) métodos, de modo que el valor de la primera ranura disponible sea 3 o 7.</span><span class="sxs-lookup"><span data-stu-id="ce515-882">The zero-based slot number that is returned by this method accounts for three [IUnknown](https://go.microsoft.com/fwlink/?LinkId=148003) and possibly four [IDispatch](https://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5) methods, making the value of the first available slot either 3 or 7.</span></span> <span data-ttu-id="ce515-883"><xref:System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot%2A> proporciona la funcionalidad de opuesta <xref:System.Runtime.InteropServices.Marshal.GetComSlotForMethodInfo%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ce515-883"><xref:System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot%2A> provides the opposite functionality of <xref:System.Runtime.InteropServices.Marshal.GetComSlotForMethodInfo%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="ce515-884">Puede usar <xref:System.Runtime.InteropServices.Marshal.GetEndComSlot%2A?displayProperty=nameWithType> y <xref:System.Runtime.InteropServices.Marshal.GetStartComSlot%2A?displayProperty=nameWithType> junto con <xref:System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot%2A> para pasar las ranuras dentro de un intervalo especificado.</span><span class="sxs-lookup"><span data-stu-id="ce515-884">You can use <xref:System.Runtime.InteropServices.Marshal.GetEndComSlot%2A?displayProperty=nameWithType> and <xref:System.Runtime.InteropServices.Marshal.GetStartComSlot%2A?displayProperty=nameWithType> in conjunction with <xref:System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot%2A> to pass slots within a specified range.</span></span>  
  
 <span data-ttu-id="ce515-885">El `memberType` parámetro es importante en la devolución.</span><span class="sxs-lookup"><span data-stu-id="ce515-885">The `memberType` parameter is important only on return.</span></span> <span data-ttu-id="ce515-886">Contiene el tipo del miembro COM (un método normal o un descriptor de acceso de propiedad) que se corresponde con el valor devuelto <xref:System.Reflection.MemberInfo> objeto.</span><span class="sxs-lookup"><span data-stu-id="ce515-886">It contains the type of the COM member (a regular method or a property accessor) that corresponds to the returned <xref:System.Reflection.MemberInfo> object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ce515-887"><paramref name="t" /> no es visible desde COM.</span><span class="sxs-lookup"><span data-stu-id="ce515-887"><paramref name="t" /> is not visible from COM.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-888">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-888">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-889">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-889">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetComSlotForMethodInfo(System.Reflection.MemberInfo)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetEndComSlot(System.Type)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetStartComSlot(System.Type)" />
        <altmember cref="T:System.Runtime.InteropServices.ComMemberType" />
      </Docs>
    </Member>
    <Member MemberName="GetNativeVariantForObject">
      <MemberSignature Language="C#" Value="public static void GetNativeVariantForObject (object obj, IntPtr pDstNativeVariant);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetNativeVariantForObject(object obj, native int pDstNativeVariant) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetNativeVariantForObject(System.Object,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub GetNativeVariantForObject (obj As Object, pDstNativeVariant As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void GetNativeVariantForObject(System::Object ^ obj, IntPtr pDstNativeVariant);" />
      <MemberSignature Language="F#" Value="static member GetNativeVariantForObject : obj * nativeint -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.GetNativeVariantForObject (obj, pDstNativeVariant)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netcore-2.2">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netcore-2.2">
          <AttributeName>System.Obsolete("GetNativeVariantForObject(Object, IntPtr) may be unavailable in future releases.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="pDstNativeVariant" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="ce515-890">Objeto para el que se va a obtener un tipo COM VARIANT.</span><span class="sxs-lookup"><span data-stu-id="ce515-890">The object for which to get a COM VARIANT.</span></span></param>
        <param name="pDstNativeVariant"><span data-ttu-id="ce515-891">Puntero para recibir el VARIANT correspondiente al parámetro <paramref name="obj" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-891">A pointer to receive the VARIANT that corresponds to the <paramref name="obj" /> parameter.</span></span></param>
        <summary><span data-ttu-id="ce515-892">Convierte un objeto en un COM VARIANT.</span><span class="sxs-lookup"><span data-stu-id="ce515-892">Converts an object to a COM VARIANT.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-893">El `pDstNativeVariant` parámetro debe apuntar a la memoria suficiente para almacenar la variante resultante.</span><span class="sxs-lookup"><span data-stu-id="ce515-893">The `pDstNativeVariant` parameter must point to sufficient memory to store the resulting VARIANT.</span></span> <span data-ttu-id="ce515-894">Además, la implementación de este método llama a la [VariantInit](https://msdn.microsoft.com/library/ms221402\(v=vs.85\).aspx) función en la memoria sin formato que el `pDstNativeVariant` parámetro apunta a.</span><span class="sxs-lookup"><span data-stu-id="ce515-894">Also, the implementation of this method calls the [VariantInit](https://msdn.microsoft.com/library/ms221402\(v=vs.85\).aspx) function on the raw memory that the `pDstNativeVariant` parameter points to.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ce515-895">El parámetro <paramref name="obj" /> es una instancia de un tipo genérico.</span><span class="sxs-lookup"><span data-stu-id="ce515-895">The <paramref name="obj" /> parameter is an instance of a generic type.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-896">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-896">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-897">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-897">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetNativeVariantForObject&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void GetNativeVariantForObject&lt;T&gt; (T obj, IntPtr pDstNativeVariant);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetNativeVariantForObject&lt;T&gt;(!!T obj, native int pDstNativeVariant) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetNativeVariantForObject``1(``0,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub GetNativeVariantForObject(Of T) (obj As T, pDstNativeVariant As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static void GetNativeVariantForObject(T obj, IntPtr pDstNativeVariant);" />
      <MemberSignature Language="F#" Value="static member GetNativeVariantForObject : 'T * nativeint -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.GetNativeVariantForObject (obj, pDstNativeVariant)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netcore-2.2">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netcore-2.2">
          <AttributeName>System.Obsolete("GetNativeVariantForObject&lt;T&gt;(T, IntPtr) may be unavailable in future releases.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="obj" Type="T" />
        <Parameter Name="pDstNativeVariant" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="ce515-898">Tipo del objeto que se va a convertir.</span><span class="sxs-lookup"><span data-stu-id="ce515-898">The type of the object to convert.</span></span></typeparam>
        <param name="obj"><span data-ttu-id="ce515-899">Objeto para el que se va a obtener un tipo COM VARIANT.</span><span class="sxs-lookup"><span data-stu-id="ce515-899">The object for which to get a COM VARIANT.</span></span></param>
        <param name="pDstNativeVariant"><span data-ttu-id="ce515-900">Puntero para recibir el VARIANT correspondiente al parámetro <paramref name="obj" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-900">A pointer to receive the VARIANT that corresponds to the <paramref name="obj" /> parameter.</span></span></param>
        <summary><span data-ttu-id="ce515-901">[Compatible con .NET Framework 4.5.1 y versiones posteriores]</span><span class="sxs-lookup"><span data-stu-id="ce515-901">[Supported in the .NET Framework 4.5.1 and later versions]</span></span> 
<span data-ttu-id="ce515-902">Convierte un objeto de un tipo especificado en un objeto COM VARIANT.</span><span class="sxs-lookup"><span data-stu-id="ce515-902">Converts an object of a specified type to a COM VARIANT.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-903">El `pDstNativeVariant` parámetro debe apuntar a la memoria suficiente para almacenar la variante resultante.</span><span class="sxs-lookup"><span data-stu-id="ce515-903">The `pDstNativeVariant` parameter must point to sufficient memory to store the resulting VARIANT.</span></span> <span data-ttu-id="ce515-904">Además, la implementación de este método llama [VariantInit](https://msdn.microsoft.com/library/ms221402\(v=vs.85\).aspx) función en la memoria sin formato que el `pDstNativeVariant` parámetro señala.</span><span class="sxs-lookup"><span data-stu-id="ce515-904">Also, the implementation of this method calls [VariantInit](https://msdn.microsoft.com/library/ms221402\(v=vs.85\).aspx) function on the raw memory that the `pDstNativeVariant` parameter points to.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-905">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-905">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-906">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-906">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetObjectForIUnknown">
      <MemberSignature Language="C#" Value="public static object GetObjectForIUnknown (IntPtr pUnk);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetObjectForIUnknown(native int pUnk) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetObjectForIUnknown(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetObjectForIUnknown (pUnk As IntPtr) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetObjectForIUnknown(IntPtr pUnk);" />
      <MemberSignature Language="F#" Value="static member GetObjectForIUnknown : nativeint -&gt; obj" Usage="System.Runtime.InteropServices.Marshal.GetObjectForIUnknown pUnk" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pUnk" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="pUnk"><span data-ttu-id="ce515-907">Puntero a la interfaz <see langword="IUnknown" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-907">A pointer to the <see langword="IUnknown" /> interface.</span></span></param>
        <summary><span data-ttu-id="ce515-908">Devuelve una instancia de un tipo que representa un objeto COM por un puntero a su interfaz <see href="https://go.microsoft.com/fwlink/?LinkId=148003">IUnknown</see>.</span><span class="sxs-lookup"><span data-stu-id="ce515-908">Returns an instance of a type that represents a COM object by a pointer to its <see href="https://go.microsoft.com/fwlink/?LinkId=148003">IUnknown</see> interface.</span></span></summary>
        <returns><span data-ttu-id="ce515-909">Objeto que representa el objeto COM no administrado especificado.</span><span class="sxs-lookup"><span data-stu-id="ce515-909">An object that represents the specified unmanaged COM object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-910">Este método ajusta `IUnknown` en un objeto administrado.</span><span class="sxs-lookup"><span data-stu-id="ce515-910">This method wraps `IUnknown` in a managed object.</span></span> <span data-ttu-id="ce515-911">Esto tiene el efecto de incrementar el recuento de referencias del componente COM.</span><span class="sxs-lookup"><span data-stu-id="ce515-911">This has the effect of incrementing the reference count of the COM component.</span></span> <span data-ttu-id="ce515-912">El recuento de referencias se reducirá cuando el tiempo de ejecución realiza la recolección en el objeto administrado que representa el objeto COM.</span><span class="sxs-lookup"><span data-stu-id="ce515-912">The reference count will be decremented when the runtime performs garbage collection on the managed object that represents the COM object.</span></span>  
  
 <span data-ttu-id="ce515-913">El `pUnk` parámetro representa un `IUnknown` puntero de interfaz; sin embargo, dado que todas las interfaces COM se derivan directa o indirectamente de `IUnknown`, puede pasar cualquier interfaz COM a este método.</span><span class="sxs-lookup"><span data-stu-id="ce515-913">The `pUnk` parameter represents an `IUnknown` interface pointer; however, because all COM interfaces derive directly or indirectly from `IUnknown`, you can pass any COM interface to this method.</span></span> <span data-ttu-id="ce515-914">El objeto devuelto por <xref:System.Runtime.InteropServices.Marshal.GetObjectForIUnknown%2A> es un [contenedor RCW](~/docs/framework/interop/runtime-callable-wrapper.md), que common language runtime administra tal como hace que cualquier otro objeto administrado.</span><span class="sxs-lookup"><span data-stu-id="ce515-914">The object returned by <xref:System.Runtime.InteropServices.Marshal.GetObjectForIUnknown%2A> is a [Runtime Callable Wrapper](~/docs/framework/interop/runtime-callable-wrapper.md), which the common language runtime manages as it does any other managed object.</span></span> <span data-ttu-id="ce515-915">El tipo de este contenedor suele ser una base de `System.__ComObject` tipo, que es un tipo oculto que se utiliza cuando el tipo de contenedor es ambiguo.</span><span class="sxs-lookup"><span data-stu-id="ce515-915">The type of this wrapper is often a base `System.__ComObject` type, which is a hidden type used when the wrapper type is ambiguous.</span></span> <span data-ttu-id="ce515-916">Todavía puede realizar llamadas enlazadas a un tipo base siempre que el objeto COM implementa el [IDispatch](https://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5(vs.85)) interfaz.</span><span class="sxs-lookup"><span data-stu-id="ce515-916">You can still make late-bound calls to such a base type as long as the COM object implements the [IDispatch](https://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5(vs.85)) interface.</span></span> <span data-ttu-id="ce515-917">Del mismo modo, puede convertir el objeto devuelto en una interfaz COM adecuada.</span><span class="sxs-lookup"><span data-stu-id="ce515-917">Likewise, you can cast the returned object to an appropriate COM interface.</span></span>  
  
 <span data-ttu-id="ce515-918">Para un objeto que va a ajustar con un tipo de clase administrada específico (y no un tipo de contenedor genérico), debe cumplir los siguientes requisitos:</span><span class="sxs-lookup"><span data-stu-id="ce515-918">For an object to be wrapped with a specific managed class type (and not a generic wrapper type), you must adhere to the following requirements:</span></span>  
  
-   <span data-ttu-id="ce515-919">Implemente el [IProvideClassInfo](https://go.microsoft.com/fwlink/?LinkID=148012) interfaz para el objeto COM.</span><span class="sxs-lookup"><span data-stu-id="ce515-919">Implement the [IProvideClassInfo](https://go.microsoft.com/fwlink/?LinkID=148012) interface for the COM object.</span></span>  
  
-   <span data-ttu-id="ce515-920">Registrar el ensamblado de contenedor con el [Regasm.exe (Assembly Registration Tool)](~/docs/framework/tools/regasm-exe-assembly-registration-tool.md).</span><span class="sxs-lookup"><span data-stu-id="ce515-920">Register the containing assembly with the [Regasm.exe (Assembly Registration Tool)](~/docs/framework/tools/regasm-exe-assembly-registration-tool.md).</span></span>  
  
 <span data-ttu-id="ce515-921">Como alternativa, puede evitar estos requisitos y obtener un objeto que se ajusta con un tipo de clase administrada específico mediante el uso de la <xref:System.Runtime.InteropServices.Marshal.GetTypedObjectForIUnknown%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="ce515-921">Alternatively, you can avoid these requirements and still get an object that is wrapped with a specific managed class type by using the <xref:System.Runtime.InteropServices.Marshal.GetTypedObjectForIUnknown%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-922">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-922">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-923">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-923">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.AddRef(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Release(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetTypedObjectForIUnknown(System.IntPtr,System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="GetObjectForNativeVariant">
      <MemberSignature Language="C#" Value="public static object GetObjectForNativeVariant (IntPtr pSrcNativeVariant);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetObjectForNativeVariant(native int pSrcNativeVariant) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetObjectForNativeVariant (pSrcNativeVariant As IntPtr) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetObjectForNativeVariant(IntPtr pSrcNativeVariant);" />
      <MemberSignature Language="F#" Value="static member GetObjectForNativeVariant : nativeint -&gt; obj" Usage="System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant pSrcNativeVariant" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netcore-2.2">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netcore-2.2">
          <AttributeName>System.Obsolete("GetObjectForNativeVariant(IntPtr) may be unavailable in future releases.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pSrcNativeVariant" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="pSrcNativeVariant"><span data-ttu-id="ce515-924">Puntero a un tipo de datos VARIANT COM.</span><span class="sxs-lookup"><span data-stu-id="ce515-924">A pointer to a COM VARIANT.</span></span></param>
        <summary><span data-ttu-id="ce515-925">Convierte un COM VARIANT en un objeto.</span><span class="sxs-lookup"><span data-stu-id="ce515-925">Converts a COM VARIANT to an object.</span></span></summary>
        <returns><span data-ttu-id="ce515-926">Objeto que corresponde al parámetro <paramref name="pSrcNativeVariant" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-926">An object that corresponds to the <paramref name="pSrcNativeVariant" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-927"><xref:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant%2A> Devuelve un objeto administrado que corresponde a un puntero sin formato a un tipo VARIANT no administrado.</span><span class="sxs-lookup"><span data-stu-id="ce515-927"><xref:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant%2A> returns a managed object that corresponds to a raw pointer to an unmanaged VARIANT type.</span></span> <span data-ttu-id="ce515-928">El interopmarshaler realiza la misma transformación al exponer un tipo VARIANT a código administrado.</span><span class="sxs-lookup"><span data-stu-id="ce515-928">The interopmarshaler performs the identical transformation when exposing a VARIANT type to managed code.</span></span>  
  
 <span data-ttu-id="ce515-929"><xref:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant%2A> proporciona la funcionalidad de opuesta <xref:System.Runtime.InteropServices.Marshal.GetNativeVariantForObject%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ce515-929"><xref:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant%2A> provides the opposite functionality of <xref:System.Runtime.InteropServices.Marshal.GetNativeVariantForObject%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="ce515-930">Cuando el tipo de variante es VT_ERROR, <xref:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant%2A> devuelve un objeto de tipo `Int32` en lugar de `UInt32`.</span><span class="sxs-lookup"><span data-stu-id="ce515-930">When the VARIANT type is VT_ERROR, <xref:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant%2A> returns an object of type `Int32` instead of `UInt32`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.InvalidOleVariantTypeException"><span data-ttu-id="ce515-931"><paramref name="pSrcNativeVariant" /> no es un tipo VARIANT válido.</span><span class="sxs-lookup"><span data-stu-id="ce515-931"><paramref name="pSrcNativeVariant" /> is not a valid VARIANT type.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ce515-932"><paramref name="pSrcNativeVariant" /> tiene un tipo incompatible.</span><span class="sxs-lookup"><span data-stu-id="ce515-932"><paramref name="pSrcNativeVariant" /> has an unsupported type.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-933">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-933">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-934">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-934">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetNativeVariantForObject(System.Object,System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="GetObjectForNativeVariant&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T GetObjectForNativeVariant&lt;T&gt; (IntPtr pSrcNativeVariant);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T GetObjectForNativeVariant&lt;T&gt;(native int pSrcNativeVariant) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant``1(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetObjectForNativeVariant(Of T) (pSrcNativeVariant As IntPtr) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static T GetObjectForNativeVariant(IntPtr pSrcNativeVariant);" />
      <MemberSignature Language="F#" Value="static member GetObjectForNativeVariant : nativeint -&gt; 'T" Usage="System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant pSrcNativeVariant" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netcore-2.2">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netcore-2.2">
          <AttributeName>System.Obsolete("GetObjectForNativeVariant&lt;T&gt;(IntPtr) may be unavailable in future releases.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="pSrcNativeVariant" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="ce515-935">Tipo al que se va a convertir el COM VARIANT.</span><span class="sxs-lookup"><span data-stu-id="ce515-935">The type to which to convert the COM VARIANT.</span></span></typeparam>
        <param name="pSrcNativeVariant"><span data-ttu-id="ce515-936">Puntero a un tipo de datos VARIANT COM.</span><span class="sxs-lookup"><span data-stu-id="ce515-936">A pointer to a COM VARIANT.</span></span></param>
        <summary><span data-ttu-id="ce515-937">[Compatible con .NET Framework 4.5.1 y versiones posteriores]</span><span class="sxs-lookup"><span data-stu-id="ce515-937">[Supported in the .NET Framework 4.5.1 and later versions]</span></span> 
<span data-ttu-id="ce515-938">Convierte un objeto COM VARIANT en un objeto de un tipo especificado.</span><span class="sxs-lookup"><span data-stu-id="ce515-938">Converts a COM VARIANT to an object of a specified type.</span></span></summary>
        <returns><span data-ttu-id="ce515-939">Objeto del tipo especificado que corresponde al parámetro <paramref name="pSrcNativeVariant" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-939">An object of the specified type that corresponds to the <paramref name="pSrcNativeVariant" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-940"><xref:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant%60%601%28System.IntPtr%29> Devuelve un objeto administrado del tipo `T` que corresponde a un puntero sin formato a un tipo VARIANT no administrado.</span><span class="sxs-lookup"><span data-stu-id="ce515-940"><xref:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant%60%601%28System.IntPtr%29> returns a managed object of type `T` that corresponds to a raw pointer to an unmanaged VARIANT type.</span></span> <span data-ttu-id="ce515-941">El interopmarshaler realiza la misma transformación al exponer un tipo VARIANT a código administrado.</span><span class="sxs-lookup"><span data-stu-id="ce515-941">The interopmarshaler performs the identical transformation when exposing a VARIANT type to managed code.</span></span>  
  
 <span data-ttu-id="ce515-942"><xref:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant%60%601%28System.IntPtr%29> proporciona la funcionalidad de opuesta <xref:System.Runtime.InteropServices.Marshal.GetNativeVariantForObject%60%601%28%60%600%2CSystem.IntPtr%29>.</span><span class="sxs-lookup"><span data-stu-id="ce515-942"><xref:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant%60%601%28System.IntPtr%29> provides the opposite functionality of <xref:System.Runtime.InteropServices.Marshal.GetNativeVariantForObject%60%601%28%60%600%2CSystem.IntPtr%29>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.InvalidOleVariantTypeException"><span data-ttu-id="ce515-943"><paramref name="pSrcNativeVariant" /> no es un tipo VARIANT válido.</span><span class="sxs-lookup"><span data-stu-id="ce515-943"><paramref name="pSrcNativeVariant" /> is not a valid VARIANT type.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ce515-944"><paramref name="pSrcNativeVariant" /> tiene un tipo incompatible.</span><span class="sxs-lookup"><span data-stu-id="ce515-944"><paramref name="pSrcNativeVariant" /> has an unsupported type.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-945">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-945">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-946">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-946">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetObjectsForNativeVariants">
      <MemberSignature Language="C#" Value="public static object[] GetObjectsForNativeVariants (IntPtr aSrcNativeVariant, int cVars);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object[] GetObjectsForNativeVariants(native int aSrcNativeVariant, int32 cVars) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetObjectsForNativeVariants(System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetObjectsForNativeVariants (aSrcNativeVariant As IntPtr, cVars As Integer) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Object ^&gt; ^ GetObjectsForNativeVariants(IntPtr aSrcNativeVariant, int cVars);" />
      <MemberSignature Language="F#" Value="static member GetObjectsForNativeVariants : nativeint * int -&gt; obj[]" Usage="System.Runtime.InteropServices.Marshal.GetObjectsForNativeVariants (aSrcNativeVariant, cVars)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netcore-2.2">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netcore-2.2">
          <AttributeName>System.Obsolete("GetObjectsForNativeVariants(IntPtr, Int32) may be unavailable in future releases.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="aSrcNativeVariant" Type="System.IntPtr" />
        <Parameter Name="cVars" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="aSrcNativeVariant"><span data-ttu-id="ce515-947">Puntero al primer elemento de una matriz de elementos VARIANT COM.</span><span class="sxs-lookup"><span data-stu-id="ce515-947">A pointer to the first element of an array of COM VARIANTs.</span></span></param>
        <param name="cVars"><span data-ttu-id="ce515-948">Número de elementos VARIANT COM en <paramref name="aSrcNativeVariant" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-948">The count of COM VARIANTs in <paramref name="aSrcNativeVariant" />.</span></span></param>
        <summary><span data-ttu-id="ce515-949">Convierte una matriz de elementos <see href="https://go.microsoft.com/fwlink/?LinkId=148670">VARIANT</see> COM en una matriz de objetos.</span><span class="sxs-lookup"><span data-stu-id="ce515-949">Converts an array of COM <see href="https://go.microsoft.com/fwlink/?LinkId=148670">VARIANTs</see> to an array of objects.</span></span></summary>
        <returns><span data-ttu-id="ce515-950">Matriz de objetos correspondiente a <paramref name="aSrcNativeVariant" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-950">An object array that corresponds to <paramref name="aSrcNativeVariant" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-951"><xref:System.Runtime.InteropServices.Marshal.GetObjectsForNativeVariants%2A> Devuelve una matriz de objetos administrados que corresponde a un puntero sin formato en una matriz de estilo C de tipos VARIANT no administrados.</span><span class="sxs-lookup"><span data-stu-id="ce515-951"><xref:System.Runtime.InteropServices.Marshal.GetObjectsForNativeVariants%2A> returns an array of managed objects that corresponds to a raw pointer to a C-style array of unmanaged VARIANT types.</span></span> <span data-ttu-id="ce515-952">El interopmarshaler realiza la misma transformación al exponer un tipo VARIANT a código administrado.</span><span class="sxs-lookup"><span data-stu-id="ce515-952">The interopmarshaler performs the identical transformation when exposing a VARIANT type to managed code.</span></span> <span data-ttu-id="ce515-953">Devuelve el método matriz vacía cuando el `cVars` parámetro es 0.</span><span class="sxs-lookup"><span data-stu-id="ce515-953">The method returns an empty array when the `cVars` parameter is 0.</span></span>  
  
 <span data-ttu-id="ce515-954">La matriz de objetos (el valor devuelto) obtiene recolectado como de costumbre.</span><span class="sxs-lookup"><span data-stu-id="ce515-954">The object array (the return value) gets garbage collected as usual.</span></span> <span data-ttu-id="ce515-955">La matriz de entrada no administrado o variantes individuales en la matriz de entrada no se han liberado.</span><span class="sxs-lookup"><span data-stu-id="ce515-955">The unmanaged input array or individual VARIANTs in the input array are not freed.</span></span> <span data-ttu-id="ce515-956">Por lo tanto, es su responsabilidad liberarlos según corresponda.</span><span class="sxs-lookup"><span data-stu-id="ce515-956">Therefore it is your responsibility to free them as appropriate.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="ce515-957"><paramref name="cVars" /> es un número negativo.</span><span class="sxs-lookup"><span data-stu-id="ce515-957"><paramref name="cVars" /> is a negative number.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-958">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-958">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-959">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-959">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetObjectsForNativeVariants&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T[] GetObjectsForNativeVariants&lt;T&gt; (IntPtr aSrcNativeVariant, int cVars);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T[] GetObjectsForNativeVariants&lt;T&gt;(native int aSrcNativeVariant, int32 cVars) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetObjectsForNativeVariants``1(System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetObjectsForNativeVariants(Of T) (aSrcNativeVariant As IntPtr, cVars As Integer) As T()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static cli::array &lt;T&gt; ^ GetObjectsForNativeVariants(IntPtr aSrcNativeVariant, int cVars);" />
      <MemberSignature Language="F#" Value="static member GetObjectsForNativeVariants : nativeint * int -&gt; 'T[]" Usage="System.Runtime.InteropServices.Marshal.GetObjectsForNativeVariants (aSrcNativeVariant, cVars)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netcore-2.2">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netcore-2.2">
          <AttributeName>System.Obsolete("GetObjectsForNativeVariants&lt;T&gt;(IntPtr, Int32) may be unavailable in future releases.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T[]</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="aSrcNativeVariant" Type="System.IntPtr" />
        <Parameter Name="cVars" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="ce515-960">Tipo del matriz que se va a devolver.</span><span class="sxs-lookup"><span data-stu-id="ce515-960">The type of the array to return.</span></span></typeparam>
        <param name="aSrcNativeVariant"><span data-ttu-id="ce515-961">Puntero al primer elemento de una matriz de elementos VARIANT COM.</span><span class="sxs-lookup"><span data-stu-id="ce515-961">A pointer to the first element of an array of COM VARIANTs.</span></span></param>
        <param name="cVars"><span data-ttu-id="ce515-962">Número de elementos VARIANT COM en <paramref name="aSrcNativeVariant" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-962">The count of COM VARIANTs in <paramref name="aSrcNativeVariant" />.</span></span></param>
        <summary><span data-ttu-id="ce515-963">[Compatible con .NET Framework 4.5.1 y versiones posteriores]</span><span class="sxs-lookup"><span data-stu-id="ce515-963">[Supported in the .NET Framework 4.5.1 and later versions]</span></span> 
<span data-ttu-id="ce515-964">Convierte una matriz de elementos COM VARIANT en una matriz de un tipo especificado.</span><span class="sxs-lookup"><span data-stu-id="ce515-964">Converts an array of COM VARIANTs to an array of a specified type.</span></span></summary>
        <returns><span data-ttu-id="ce515-965">Matriz de objetos <typeparamref name="T" /> correspondiente a <paramref name="aSrcNativeVariant" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-965">An array of <typeparamref name="T" /> objects that corresponds to <paramref name="aSrcNativeVariant" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-966"><xref:System.Runtime.InteropServices.Marshal.GetObjectsForNativeVariants%60%601%28System.IntPtr%2CSystem.Int32%29> Devuelve una matriz de `T` que corresponde a un puntero sin formato en una matriz de estilo C de tipos VARIANT no administrados.</span><span class="sxs-lookup"><span data-stu-id="ce515-966"><xref:System.Runtime.InteropServices.Marshal.GetObjectsForNativeVariants%60%601%28System.IntPtr%2CSystem.Int32%29> returns an array of `T` that corresponds to a raw pointer to a C-style array of unmanaged VARIANT types.</span></span> <span data-ttu-id="ce515-967">El interopmarshaler realiza la misma transformación al exponer un tipo VARIANT a código administrado.</span><span class="sxs-lookup"><span data-stu-id="ce515-967">The interopmarshaler performs the identical transformation when exposing a VARIANT type to managed code.</span></span> <span data-ttu-id="ce515-968">Devuelve el método matriz vacía cuando el `cVars` parámetro es 0.</span><span class="sxs-lookup"><span data-stu-id="ce515-968">The method returns an empty array when the `cVars` parameter is 0.</span></span>  
  
 <span data-ttu-id="ce515-969">La matriz devuelta es recolectar como de costumbre.</span><span class="sxs-lookup"><span data-stu-id="ce515-969">The returned array is garbage-collected as usual.</span></span> <span data-ttu-id="ce515-970">La matriz de entrada no administrado o variantes individuales en la matriz de entrada no se han liberado.</span><span class="sxs-lookup"><span data-stu-id="ce515-970">The unmanaged input array or individual VARIANTs in the input array are not freed.</span></span> <span data-ttu-id="ce515-971">Por lo tanto, es su responsabilidad liberarlos según corresponda.</span><span class="sxs-lookup"><span data-stu-id="ce515-971">Therefore, it is your responsibility to free them as appropriate.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="ce515-972"><paramref name="cVars" /> es un número negativo.</span><span class="sxs-lookup"><span data-stu-id="ce515-972"><paramref name="cVars" /> is a negative number.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-973">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-973">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-974">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-974">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetStartComSlot">
      <MemberSignature Language="C#" Value="public static int GetStartComSlot (Type t);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetStartComSlot(class System.Type t) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetStartComSlot(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetStartComSlot (t As Type) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetStartComSlot(Type ^ t);" />
      <MemberSignature Language="F#" Value="static member GetStartComSlot : Type -&gt; int" Usage="System.Runtime.InteropServices.Marshal.GetStartComSlot t" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="t"><span data-ttu-id="ce515-975">Tipo que representa una interfaz.</span><span class="sxs-lookup"><span data-stu-id="ce515-975">A type that represents an interface.</span></span></param>
        <summary><span data-ttu-id="ce515-976">Obtiene la primera ranura de la tabla de funciones virtuales (v-table o VTBL) que contiene métodos definidos por el usuario.</span><span class="sxs-lookup"><span data-stu-id="ce515-976">Gets the first slot in the virtual function table (v-table or VTBL) that contains user-defined methods.</span></span></summary>
        <returns><span data-ttu-id="ce515-977">Primera ranura VTBL que contiene métodos definidos por el usuario.</span><span class="sxs-lookup"><span data-stu-id="ce515-977">The first VTBL slot that contains user-defined methods.</span></span> <span data-ttu-id="ce515-978">La primera ranura es 3 si la interfaz se basa en <see href="https://docs.microsoft.com/windows/desktop/api/unknwn/nn-unknwn-iunknown">IUnknown</see> y 7 si la interfaz se basa en [IDispatch](https://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5).</span><span class="sxs-lookup"><span data-stu-id="ce515-978">The first slot is 3 if the interface is based on <see href="https://docs.microsoft.com/windows/desktop/api/unknwn/nn-unknwn-iunknown">IUnknown</see>, and 7 if the interface is based on [IDispatch](https://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-979">Este método devuelve el número de base cero de v-table para una interfaz o una clase.</span><span class="sxs-lookup"><span data-stu-id="ce515-979">This method returns the zero-based v-table number for an interface or a class.</span></span> <span data-ttu-id="ce515-980">Cuando se utiliza en una clase, el número de ranura devuelto hace referencia a la interfaz de clase para la clase.</span><span class="sxs-lookup"><span data-stu-id="ce515-980">When used on a class, the slot number that is returned refers to the class interface for the class.</span></span> <span data-ttu-id="ce515-981">Si la interfaz de clase es la distribución automática, este método siempre devuelve -1 para indicar que la interfaz solo de envío no expone una tabla v a los clientes administrados.</span><span class="sxs-lookup"><span data-stu-id="ce515-981">If the class interface is auto-dispatch, this method always returns -1 to indicate that the dispatch-only interface does not expose a v-table to managed clients.</span></span> <span data-ttu-id="ce515-982">Puede usar <xref:System.Runtime.InteropServices.Marshal.GetStartComSlot%2A> y <xref:System.Runtime.InteropServices.Marshal.GetEndComSlot%2A?displayProperty=nameWithType> junto con <xref:System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot%2A?displayProperty=nameWithType> para pasar las ranuras dentro de un intervalo especificado.</span><span class="sxs-lookup"><span data-stu-id="ce515-982">You can use <xref:System.Runtime.InteropServices.Marshal.GetStartComSlot%2A> and <xref:System.Runtime.InteropServices.Marshal.GetEndComSlot%2A?displayProperty=nameWithType> in conjunction with <xref:System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot%2A?displayProperty=nameWithType> to pass slots within a specified range.</span></span> <span data-ttu-id="ce515-983">Para obtener más información, consulte [presentar la interfaz de clase](https://msdn.microsoft.com/library/733c0dd2-12e5-46e6-8de1-39d5b25df024).</span><span class="sxs-lookup"><span data-stu-id="ce515-983">For additional information, see [Introducing the Class Interface](https://msdn.microsoft.com/library/733c0dd2-12e5-46e6-8de1-39d5b25df024).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ce515-984"><paramref name="t" /> no es visible desde COM.</span><span class="sxs-lookup"><span data-stu-id="ce515-984"><paramref name="t" /> is not visible from COM.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-985">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-985">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-986">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-986">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetEndComSlot(System.Type)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot(System.Type,System.Int32,System.Runtime.InteropServices.ComMemberType@)" />
      </Docs>
    </Member>
    <Member MemberName="GetThreadFromFiberCookie">
      <MemberSignature Language="C#" Value="public static System.Threading.Thread GetThreadFromFiberCookie (int cookie);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Thread GetThreadFromFiberCookie(int32 cookie) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetThreadFromFiberCookie(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetThreadFromFiberCookie (cookie As Integer) As Thread" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::Thread ^ GetThreadFromFiberCookie(int cookie);" />
      <MemberSignature Language="F#" Value="static member GetThreadFromFiberCookie : int -&gt; System.Threading.Thread" Usage="System.Runtime.InteropServices.Marshal.GetThreadFromFiberCookie cookie" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinmac-3.0">
          <AttributeName>System.Obsolete("This method has been deprecated")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("The GetThreadFromFiberCookie method has been deprecated.  Use the hosting API to perform this operation.", false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Thread</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cookie" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="cookie"><span data-ttu-id="ce515-987">Entero que representa una cookie de fibra.</span><span class="sxs-lookup"><span data-stu-id="ce515-987">An integer that represents a fiber cookie.</span></span></param>
        <summary><span data-ttu-id="ce515-988">Convierte una cookie de fibra en la correspondiente instancia <see cref="T:System.Threading.Thread" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-988">Converts a fiber cookie into the corresponding <see cref="T:System.Threading.Thread" /> instance.</span></span></summary>
        <returns><span data-ttu-id="ce515-989">Subproceso correspondiente al parámetro <paramref name="cookie" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-989">A thread that corresponds to the <paramref name="cookie" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-990">Las cookies de fibra son opacos tokens que se usan por el host al avisar a common language runtime a sus decisiones de programación de fibra.</span><span class="sxs-lookup"><span data-stu-id="ce515-990">Fiber cookies are opaque tokens that are used by the host when alerting the common language runtime to its fiber-scheduling decisions.</span></span> <span data-ttu-id="ce515-991">Que constan de una pila de y contexto de registro.</span><span class="sxs-lookup"><span data-stu-id="ce515-991">They consist of a stack and register context.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ce515-992">El parámetro <paramref name="cookie" /> es 0.</span><span class="sxs-lookup"><span data-stu-id="ce515-992">The <paramref name="cookie" /> parameter is 0.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-993">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-993">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-994">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-994">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="T:System.Threading.Thread" />
      </Docs>
    </Member>
    <Member MemberName="GetTypedObjectForIUnknown">
      <MemberSignature Language="C#" Value="public static object GetTypedObjectForIUnknown (IntPtr pUnk, Type t);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetTypedObjectForIUnknown(native int pUnk, class System.Type t) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetTypedObjectForIUnknown(System.IntPtr,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTypedObjectForIUnknown (pUnk As IntPtr, t As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetTypedObjectForIUnknown(IntPtr pUnk, Type ^ t);" />
      <MemberSignature Language="F#" Value="static member GetTypedObjectForIUnknown : nativeint * Type -&gt; obj" Usage="System.Runtime.InteropServices.Marshal.GetTypedObjectForIUnknown (pUnk, t)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pUnk" Type="System.IntPtr" />
        <Parameter Name="t" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="pUnk"><span data-ttu-id="ce515-995">Puntero a la interfaz <see langword="IUnknown" /> del objeto no administrado.</span><span class="sxs-lookup"><span data-stu-id="ce515-995">A pointer to the <see langword="IUnknown" /> interface of the unmanaged object.</span></span></param>
        <param name="t"><span data-ttu-id="ce515-996">Tipo de la clase administrada solicitada.</span><span class="sxs-lookup"><span data-stu-id="ce515-996">The type of the requested managed class.</span></span></param>
        <summary><span data-ttu-id="ce515-997">Devuelve un objeto administrado de un tipo especificado que representa un objeto COM.</span><span class="sxs-lookup"><span data-stu-id="ce515-997">Returns a managed object of a specified type that represents a COM object.</span></span></summary>
        <returns><span data-ttu-id="ce515-998">Instancia de la clase correspondiente al objeto <see cref="T:System.Type" /> que representa al objeto COM no administrado solicitado.</span><span class="sxs-lookup"><span data-stu-id="ce515-998">An instance of the class corresponding to the <see cref="T:System.Type" /> object that represents the requested unmanaged COM object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-999">El `t` parámetro debe ser un tipo importado de COM o un subtipo de un tipo importado de COM.</span><span class="sxs-lookup"><span data-stu-id="ce515-999">The `t` parameter must be either a COM-imported type or a subtype of a COM-imported type.</span></span> <span data-ttu-id="ce515-1000">Además, `t` debe ser un tipo cuyos metadatos se importaron mediante la [Tlbimp.exe (importador de biblioteca)](~/docs/framework/tools/tlbimp-exe-type-library-importer.md) herramienta.</span><span class="sxs-lookup"><span data-stu-id="ce515-1000">In addition, `t` must be a type whose metadata was imported by the [Tlbimp.exe (Type Library Importer)](~/docs/framework/tools/tlbimp-exe-type-library-importer.md) tool.</span></span> <span data-ttu-id="ce515-1001">Este tipo debe ser una clase y una interfaz de la coclase asociado, que incluye el nombre de la clase COM.</span><span class="sxs-lookup"><span data-stu-id="ce515-1001">This type must be a class and not an associated coclass interface, which carries the name of the COM class.</span></span> <span data-ttu-id="ce515-1002">Por ejemplo, si Tlbimp.exe importa `Myclass` como una clase denominada `MyclassClass` y como una interfaz de coclase denominada `Myclass`, debe usar `MyclassClass` (no `Myclass`) con este método.</span><span class="sxs-lookup"><span data-stu-id="ce515-1002">For example, if Tlbimp.exe imports `Myclass` as a class called `MyclassClass` and as a coclass interface called `Myclass`, you must use `MyclassClass` (not `Myclass`) with this method.</span></span> <span data-ttu-id="ce515-1003">Para obtener más información sobre las clases importadas y las interfaces de coclase, vea [conversión de tipos importados](https://msdn.microsoft.com/library/cb1ee67d-8ef0-4e40-b2a5-13714b9f33c3).</span><span class="sxs-lookup"><span data-stu-id="ce515-1003">For additional information about imported classes and coclass interfaces, see [Imported Type Conversion](https://msdn.microsoft.com/library/cb1ee67d-8ef0-4e40-b2a5-13714b9f33c3).</span></span>  
  
 <span data-ttu-id="ce515-1004">Si ya ha obtenido un objeto para el `pUnk` parámetro `t` se omite y se devuelve el objeto existente.</span><span class="sxs-lookup"><span data-stu-id="ce515-1004">If an object has already been obtained for the `pUnk` parameter, `t` is ignored and the existing object is returned.</span></span> <span data-ttu-id="ce515-1005">`pUnk` Representa un [IUnknown](https://go.microsoft.com/fwlink/?LinkId=148003) puntero de interfaz; sin embargo, dado que todas las interfaces COM se derivan directa o indirectamente de `IUnknown`, puede pasar cualquier interfaz COM a este método.</span><span class="sxs-lookup"><span data-stu-id="ce515-1005">`pUnk` represents an [IUnknown](https://go.microsoft.com/fwlink/?LinkId=148003) interface pointer; however, because all COM interfaces derive directly or indirectly from `IUnknown`, you can pass any COM interface to this method.</span></span> <span data-ttu-id="ce515-1006">El objeto devuelto por <xref:System.Runtime.InteropServices.Marshal.GetTypedObjectForIUnknown%2A> es un [contenedor RCW](~/docs/framework/interop/runtime-callable-wrapper.md) (RCW), que common language runtime administra tal como hace que cualquier otro objeto administrado.</span><span class="sxs-lookup"><span data-stu-id="ce515-1006">The object returned by <xref:System.Runtime.InteropServices.Marshal.GetTypedObjectForIUnknown%2A> is a [Runtime Callable Wrapper](~/docs/framework/interop/runtime-callable-wrapper.md) (RCW), which the common language runtime manages as it does any other managed object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ce515-1007"><paramref name="t" /> no tiene el atributo <see cref="T:System.Runtime.InteropServices.ComImportAttribute" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-1007"><paramref name="t" /> is not attributed with <see cref="T:System.Runtime.InteropServices.ComImportAttribute" />.</span></span>  
  
<span data-ttu-id="ce515-1008">O bien</span><span class="sxs-lookup"><span data-stu-id="ce515-1008">-or-</span></span> 
 <span data-ttu-id="ce515-1009"><paramref name="t" /> es un tipo [!INCLUDE[wrt](~/includes/wrt-md.md)].</span><span class="sxs-lookup"><span data-stu-id="ce515-1009"><paramref name="t" /> is a [!INCLUDE[wrt](~/includes/wrt-md.md)] type.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-1010">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-1010">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-1011">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-1011">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="T:System.Runtime.InteropServices.ComImportAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetTypeForITypeInfo">
      <MemberSignature Language="C#" Value="public static Type GetTypeForITypeInfo (IntPtr piTypeInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Type GetTypeForITypeInfo(native int piTypeInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetTypeForITypeInfo(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTypeForITypeInfo (piTypeInfo As IntPtr) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Type ^ GetTypeForITypeInfo(IntPtr piTypeInfo);" />
      <MemberSignature Language="F#" Value="static member GetTypeForITypeInfo : nativeint -&gt; Type" Usage="System.Runtime.InteropServices.Marshal.GetTypeForITypeInfo piTypeInfo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="piTypeInfo" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="piTypeInfo"><span data-ttu-id="ce515-1012">Interfaz <see langword="ITypeInfo" /> que se va a serializar</span><span class="sxs-lookup"><span data-stu-id="ce515-1012">The <see langword="ITypeInfo" /> interface to marshal.</span></span></param>
        <summary><span data-ttu-id="ce515-1013">Convierte un objeto [ITypeInfo](https://msdn.microsoft.com/library/f3356463-3373-4279-bae1-953378aa2680) no administrado en un objeto <see cref="T:System.Type" /> administrado.</span><span class="sxs-lookup"><span data-stu-id="ce515-1013">Converts an unmanaged [ITypeInfo](https://msdn.microsoft.com/library/f3356463-3373-4279-bae1-953378aa2680) object into a managed <see cref="T:System.Type" /> object.</span></span></summary>
        <returns><span data-ttu-id="ce515-1014">Tipo administrado que representa el objeto <see langword="ITypeInfo" /> no administrado.</span><span class="sxs-lookup"><span data-stu-id="ce515-1014">A managed type that represents the unmanaged <see langword="ITypeInfo" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-1015"><xref:System.Runtime.InteropServices.Marshal.GetTypeForITypeInfo%2A> Devuelve un <xref:System.Type?displayProperty=nameWithType> instancia que se basa en el tipo original.</span><span class="sxs-lookup"><span data-stu-id="ce515-1015"><xref:System.Runtime.InteropServices.Marshal.GetTypeForITypeInfo%2A> returns a <xref:System.Type?displayProperty=nameWithType> instance that is based on the original type.</span></span> <span data-ttu-id="ce515-1016">Puede aplicar el <xref:System.Runtime.InteropServices.MarshalAsAttribute?displayProperty=nameWithType> para reemplazar el comportamiento de serialización de interoperabilidad estándar con este contador de referencias personalizado.</span><span class="sxs-lookup"><span data-stu-id="ce515-1016">You can apply the <xref:System.Runtime.InteropServices.MarshalAsAttribute?displayProperty=nameWithType> to replace standard interop marshaling behavior with this custom marshaler.</span></span> <span data-ttu-id="ce515-1017">El [Tlbimp.exe (importador de biblioteca)](~/docs/framework/tools/tlbimp-exe-type-library-importer.md) herramienta usa el contador de referencias personalizado para traducir `ITypeInfo` parámetros <xref:System.Type?displayProperty=nameWithType> parámetros.</span><span class="sxs-lookup"><span data-stu-id="ce515-1017">The [Tlbimp.exe (Type Library Importer)](~/docs/framework/tools/tlbimp-exe-type-library-importer.md) tool uses the custom marshaler to translate `ITypeInfo` parameters to <xref:System.Type?displayProperty=nameWithType> parameters.</span></span> <span data-ttu-id="ce515-1018">Sin embargo, si obtiene un `ITypeInfo` interfaz algunos medios distintos del Tlbimp.exe, puede usar <xref:System.Runtime.InteropServices.Marshal.GetTypeForITypeInfo%2A> realizar manualmente la traducción de la misma.</span><span class="sxs-lookup"><span data-stu-id="ce515-1018">However, if you obtain an `ITypeInfo` interface by some means other than Tlbimp.exe, you can use <xref:System.Runtime.InteropServices.Marshal.GetTypeForITypeInfo%2A> to manually perform the same translation.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-1019">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-1019">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-1020">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-1020">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetITypeInfoForType(System.Type)" />
        <altmember cref="T:System.Runtime.InteropServices.MarshalAsAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetTypeFromCLSID">
      <MemberSignature Language="C#" Value="public static Type GetTypeFromCLSID (Guid clsid);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Type GetTypeFromCLSID(valuetype System.Guid clsid) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetTypeFromCLSID(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTypeFromCLSID (clsid As Guid) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Type ^ GetTypeFromCLSID(Guid clsid);" />
      <MemberSignature Language="F#" Value="static member GetTypeFromCLSID : Guid -&gt; Type" Usage="System.Runtime.InteropServices.Marshal.GetTypeFromCLSID clsid" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clsid" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="clsid"><span data-ttu-id="ce515-1021">CLSID del tipo que se va a devolver.</span><span class="sxs-lookup"><span data-stu-id="ce515-1021">The CLSID of the type to return.</span></span></param>
        <summary><span data-ttu-id="ce515-1022">Devuelve el tipo asociado al identificador de clase especificado (CLSID).</span><span class="sxs-lookup"><span data-stu-id="ce515-1022">Returns the type associated with the specified class identifier (CLSID).</span></span></summary>
        <returns><span data-ttu-id="ce515-1023"><see langword="System.__ComObject" /> independientemente de que CLSID sea válido.</span><span class="sxs-lookup"><span data-stu-id="ce515-1023"><see langword="System.__ComObject" /> regardless of whether the CLSID is valid.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetTypeInfoName">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ce515-1024">Recupera el nombre del tipo representado por un objeto [ITypeInfo](https://msdn.microsoft.com/library/f3356463-3373-4279-bae1-953378aa2680).</span><span class="sxs-lookup"><span data-stu-id="ce515-1024">Retrieves the name of the type represented by an [ITypeInfo](https://msdn.microsoft.com/library/f3356463-3373-4279-bae1-953378aa2680) object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetTypeInfoName">
      <MemberSignature Language="C#" Value="public static string GetTypeInfoName (System.Runtime.InteropServices.ComTypes.ITypeInfo typeInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetTypeInfoName(class System.Runtime.InteropServices.ComTypes.ITypeInfo typeInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetTypeInfoName(System.Runtime.InteropServices.ComTypes.ITypeInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTypeInfoName (typeInfo As ITypeInfo) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetTypeInfoName(System::Runtime::InteropServices::ComTypes::ITypeInfo ^ typeInfo);" />
      <MemberSignature Language="F#" Value="static member GetTypeInfoName : System.Runtime.InteropServices.ComTypes.ITypeInfo -&gt; string" Usage="System.Runtime.InteropServices.Marshal.GetTypeInfoName typeInfo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeInfo" Type="System.Runtime.InteropServices.ComTypes.ITypeInfo" />
      </Parameters>
      <Docs>
        <param name="typeInfo"><span data-ttu-id="ce515-1025">Objeto que representa un puntero <see langword="ITypeInfo" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-1025">An object that represents an <see langword="ITypeInfo" /> pointer.</span></span></param>
        <summary><span data-ttu-id="ce515-1026">Recupera el nombre del tipo representado por un objeto [ITypeInfo](https://msdn.microsoft.com/library/f3356463-3373-4279-bae1-953378aa2680).</span><span class="sxs-lookup"><span data-stu-id="ce515-1026">Retrieves the name of the type represented by an [ITypeInfo](https://msdn.microsoft.com/library/f3356463-3373-4279-bae1-953378aa2680) object.</span></span></summary>
        <returns><span data-ttu-id="ce515-1027">Nombre del tipo al que apunta el parámetro <paramref name="typeInfo" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-1027">The name of the type that the <paramref name="typeInfo" /> parameter points to.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-1028">También puede recuperar el nombre del tipo representado por un `ITypeInfo` mediante una llamada a la <xref:System.Runtime.InteropServices.UCOMITypeInfo.GetDocumentation%2A?displayProperty=nameWithType> método y pasando el valor -1 para su primer parámetro.</span><span class="sxs-lookup"><span data-stu-id="ce515-1028">You can also retrieve the name of the type represented by an `ITypeInfo` by calling the <xref:System.Runtime.InteropServices.UCOMITypeInfo.GetDocumentation%2A?displayProperty=nameWithType> method and passing -1 for its first parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ce515-1029">El parámetro <paramref name="typeInfo" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-1029">The <paramref name="typeInfo" /> parameter is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-1030">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-1030">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-1031">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-1031">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.UCOMITypeInfo.GetDocumentation(System.Int32,System.String@,System.String@,System.Int32@,System.String@)" />
      </Docs>
    </Member>
    <Member MemberName="GetTypeInfoName">
      <MemberSignature Language="C#" Value="public static string GetTypeInfoName (System.Runtime.InteropServices.UCOMITypeInfo pTI);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetTypeInfoName(class System.Runtime.InteropServices.UCOMITypeInfo pTI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetTypeInfoName(System.Runtime.InteropServices.UCOMITypeInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTypeInfoName (pTI As UCOMITypeInfo) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetTypeInfoName(System::Runtime::InteropServices::UCOMITypeInfo ^ pTI);" />
      <MemberSignature Language="F#" Value="static member GetTypeInfoName : System.Runtime.InteropServices.UCOMITypeInfo -&gt; string" Usage="System.Runtime.InteropServices.Marshal.GetTypeInfoName pTI" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinmac-3.0">
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("Use System.Runtime.InteropServices.Marshal.GetTypeInfoName(ITypeInfo pTLB) instead. http://go.microsoft.com/fwlink/?linkid=14202&amp;ID=0000011.", false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pTI" Type="System.Runtime.InteropServices.UCOMITypeInfo" />
      </Parameters>
      <Docs>
        <param name="pTI"><span data-ttu-id="ce515-1032">Objeto que representa un puntero <see langword="ITypeInfo" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-1032">An object that represents an <see langword="ITypeInfo" /> pointer.</span></span></param>
        <summary><span data-ttu-id="ce515-1033">Recupera el nombre del tipo representado por un objeto [ITypeInfo](https://msdn.microsoft.com/library/f3356463-3373-4279-bae1-953378aa2680).</span><span class="sxs-lookup"><span data-stu-id="ce515-1033">Retrieves the name of the type represented by an [ITypeInfo](https://msdn.microsoft.com/library/f3356463-3373-4279-bae1-953378aa2680) object.</span></span></summary>
        <returns><span data-ttu-id="ce515-1034">Nombre del tipo al que apunta el parámetro <paramref name="pTI" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-1034">The name of the type that the <paramref name="pTI" /> parameter points to.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-1035">También puede recuperar el nombre del tipo representado por un `ITypeInfo` objeto mediante una llamada a la <xref:System.Runtime.InteropServices.UCOMITypeInfo.GetDocumentation%2A?displayProperty=nameWithType> método y pasando el valor -1 para su primer parámetro.</span><span class="sxs-lookup"><span data-stu-id="ce515-1035">You can also retrieve the name of the type represented by an `ITypeInfo` object by calling the <xref:System.Runtime.InteropServices.UCOMITypeInfo.GetDocumentation%2A?displayProperty=nameWithType> method and passing -1 for its first parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-1036">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-1036">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-1037">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-1037">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.UCOMITypeInfo.GetDocumentation(System.Int32,System.String@,System.String@,System.Int32@,System.String@)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetTypeLibGuid">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ce515-1038">Recupera el identificador de biblioteca (LIBID) de una biblioteca de tipos.</span><span class="sxs-lookup"><span data-stu-id="ce515-1038">Retrieves the library identifier (LIBID) of a type library.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetTypeLibGuid">
      <MemberSignature Language="C#" Value="public static Guid GetTypeLibGuid (System.Runtime.InteropServices.ComTypes.ITypeLib typelib);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Guid GetTypeLibGuid(class System.Runtime.InteropServices.ComTypes.ITypeLib typelib) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetTypeLibGuid(System.Runtime.InteropServices.ComTypes.ITypeLib)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTypeLibGuid (typelib As ITypeLib) As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Guid GetTypeLibGuid(System::Runtime::InteropServices::ComTypes::ITypeLib ^ typelib);" />
      <MemberSignature Language="F#" Value="static member GetTypeLibGuid : System.Runtime.InteropServices.ComTypes.ITypeLib -&gt; Guid" Usage="System.Runtime.InteropServices.Marshal.GetTypeLibGuid typelib" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typelib" Type="System.Runtime.InteropServices.ComTypes.ITypeLib" />
      </Parameters>
      <Docs>
        <param name="typelib"><span data-ttu-id="ce515-1039">Biblioteca de tipos cuyo LIBID se va a recuperar.</span><span class="sxs-lookup"><span data-stu-id="ce515-1039">The type library whose LIBID is to be retrieved.</span></span></param>
        <summary><span data-ttu-id="ce515-1040">Recupera el identificador de biblioteca (LIBID) de una biblioteca de tipos.</span><span class="sxs-lookup"><span data-stu-id="ce515-1040">Retrieves the library identifier (LIBID) of a type library.</span></span></summary>
        <returns><span data-ttu-id="ce515-1041">LIBID de la biblioteca de tipos especificada.</span><span class="sxs-lookup"><span data-stu-id="ce515-1041">The LIBID of the specified type library.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-1042"><xref:System.Runtime.InteropServices.Marshal.GetTypeLibGuid%2A> extrae el LIBID directamente desde una biblioteca de tipos existente.</span><span class="sxs-lookup"><span data-stu-id="ce515-1042"><xref:System.Runtime.InteropServices.Marshal.GetTypeLibGuid%2A> extracts the LIBID directly from an existing type library.</span></span> <span data-ttu-id="ce515-1043">Esta acción difiere de la <xref:System.Runtime.InteropServices.Marshal.GetTypeLibGuidForAssembly%2A?displayProperty=nameWithType> método, que calcula cuál debe ser el LIBID basado en el ensamblado actual.</span><span class="sxs-lookup"><span data-stu-id="ce515-1043">This action differs from that of the <xref:System.Runtime.InteropServices.Marshal.GetTypeLibGuidForAssembly%2A?displayProperty=nameWithType> method, which calculates what the LIBID should be based on the current assembly.</span></span>  
  
 <span data-ttu-id="ce515-1044">Para obtener más información acerca de los identificadores de biblioteca, consulte [conversión de ensamblados exportados](https://msdn.microsoft.com/library/3fffd8db-240f-4fde-a558-a5bcc01e1a86).</span><span class="sxs-lookup"><span data-stu-id="ce515-1044">For more information about library identifiers, see [Exported Assembly Conversion](https://msdn.microsoft.com/library/3fffd8db-240f-4fde-a558-a5bcc01e1a86).</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-1045">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-1045">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-1046">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-1046">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetTypeLibGuidForAssembly(System.Reflection.Assembly)" />
        <altmember cref="T:System.Runtime.InteropServices.ComTypes.ITypeLib" />
      </Docs>
    </Member>
    <Member MemberName="GetTypeLibGuid">
      <MemberSignature Language="C#" Value="public static Guid GetTypeLibGuid (System.Runtime.InteropServices.UCOMITypeLib pTLB);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Guid GetTypeLibGuid(class System.Runtime.InteropServices.UCOMITypeLib pTLB) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetTypeLibGuid(System.Runtime.InteropServices.UCOMITypeLib)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTypeLibGuid (pTLB As UCOMITypeLib) As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Guid GetTypeLibGuid(System::Runtime::InteropServices::UCOMITypeLib ^ pTLB);" />
      <MemberSignature Language="F#" Value="static member GetTypeLibGuid : System.Runtime.InteropServices.UCOMITypeLib -&gt; Guid" Usage="System.Runtime.InteropServices.Marshal.GetTypeLibGuid pTLB" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinmac-3.0">
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("Use System.Runtime.InteropServices.Marshal.GetTypeLibGuid(ITypeLib pTLB) instead. http://go.microsoft.com/fwlink/?linkid=14202&amp;ID=0000011.", false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pTLB" Type="System.Runtime.InteropServices.UCOMITypeLib" />
      </Parameters>
      <Docs>
        <param name="pTLB"><span data-ttu-id="ce515-1047">Biblioteca de tipos cuyo LIBID se va a recuperar.</span><span class="sxs-lookup"><span data-stu-id="ce515-1047">The type library whose LIBID is to be retrieved.</span></span></param>
        <summary><span data-ttu-id="ce515-1048">Recupera el identificador de biblioteca (LIBID) de una biblioteca de tipos.</span><span class="sxs-lookup"><span data-stu-id="ce515-1048">Retrieves the library identifier (LIBID) of a type library.</span></span></summary>
        <returns><span data-ttu-id="ce515-1049">LIBID de la biblioteca de tipos al que apunta el parámetro <paramref name="pTLB" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-1049">The LIBID of the type library that the <paramref name="pTLB" /> parameter points to.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-1050"><xref:System.Runtime.InteropServices.Marshal.GetTypeLibGuid%2A> extrae el LIBID directamente desde una biblioteca de tipos existente.</span><span class="sxs-lookup"><span data-stu-id="ce515-1050"><xref:System.Runtime.InteropServices.Marshal.GetTypeLibGuid%2A> extracts the LIBID directly from an existing type library.</span></span> <span data-ttu-id="ce515-1051">Esta acción difiere de la <xref:System.Runtime.InteropServices.Marshal.GetTypeLibGuidForAssembly%2A?displayProperty=nameWithType> método, que calcula cuál debe ser el LIBID basado en el ensamblado actual.</span><span class="sxs-lookup"><span data-stu-id="ce515-1051">This action differs from that of the <xref:System.Runtime.InteropServices.Marshal.GetTypeLibGuidForAssembly%2A?displayProperty=nameWithType> method, which calculates what the LIBID should be based on the current assembly.</span></span>  
  
 <span data-ttu-id="ce515-1052">Para obtener más información acerca de los identificadores de biblioteca, consulte [conversión de ensamblados exportados](https://msdn.microsoft.com/library/3fffd8db-240f-4fde-a558-a5bcc01e1a86).</span><span class="sxs-lookup"><span data-stu-id="ce515-1052">For more information about library identifiers, see [Exported Assembly Conversion](https://msdn.microsoft.com/library/3fffd8db-240f-4fde-a558-a5bcc01e1a86).</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-1053">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-1053">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-1054">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-1054">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetTypeLibGuidForAssembly(System.Reflection.Assembly)" />
        <altmember cref="T:System.Runtime.InteropServices.UCOMITypeLib" />
      </Docs>
    </Member>
    <Member MemberName="GetTypeLibGuidForAssembly">
      <MemberSignature Language="C#" Value="public static Guid GetTypeLibGuidForAssembly (System.Reflection.Assembly asm);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Guid GetTypeLibGuidForAssembly(class System.Reflection.Assembly asm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetTypeLibGuidForAssembly(System.Reflection.Assembly)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTypeLibGuidForAssembly (asm As Assembly) As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Guid GetTypeLibGuidForAssembly(System::Reflection::Assembly ^ asm);" />
      <MemberSignature Language="F#" Value="static member GetTypeLibGuidForAssembly : System.Reflection.Assembly -&gt; Guid" Usage="System.Runtime.InteropServices.Marshal.GetTypeLibGuidForAssembly asm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asm" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="asm"><span data-ttu-id="ce515-1055">Ensamblado del que se exportó la biblioteca de tipos.</span><span class="sxs-lookup"><span data-stu-id="ce515-1055">The assembly from which the type library was exported.</span></span></param>
        <summary><span data-ttu-id="ce515-1056">Recupera el identificador de biblioteca (LIBID) asignado a una biblioteca de tipos cuando se exportó del ensamblado especificado.</span><span class="sxs-lookup"><span data-stu-id="ce515-1056">Retrieves the library identifier (LIBID) that is assigned to a type library when it was exported from the specified assembly.</span></span></summary>
        <returns><span data-ttu-id="ce515-1057">LIBID asignado a una biblioteca de tipos cuando se exporta desde el ensamblado especificado.</span><span class="sxs-lookup"><span data-stu-id="ce515-1057">The LIBID that is assigned to a type library when it is exported from the specified assembly.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-1058">Cuando se exportan los ensamblados en bibliotecas de tipos, la biblioteca de tipos se asigna un identificador LIBID.</span><span class="sxs-lookup"><span data-stu-id="ce515-1058">When assemblies are exported to type libraries, the type library is assigned a LIBID.</span></span> <span data-ttu-id="ce515-1059">Puede establecer explícitamente el LIBID aplicando el <xref:System.Runtime.InteropServices.GuidAttribute?displayProperty=nameWithType> en el ensamblado de nivel, o bien puede generarse automáticamente.</span><span class="sxs-lookup"><span data-stu-id="ce515-1059">You can set the LIBID explicitly by applying the <xref:System.Runtime.InteropServices.GuidAttribute?displayProperty=nameWithType> at the assembly level, or it can be generated automatically.</span></span> <span data-ttu-id="ce515-1060">El [Tlbimp.exe (importador de biblioteca)](~/docs/framework/tools/tlbimp-exe-type-library-importer.md) herramienta calcula un valor LIBID basándose en la identidad del ensamblado.</span><span class="sxs-lookup"><span data-stu-id="ce515-1060">The [Tlbimp.exe (Type Library Importer)](~/docs/framework/tools/tlbimp-exe-type-library-importer.md) tool calculates a LIBID value based on the identity of the assembly.</span></span> <span data-ttu-id="ce515-1061"><xref:System.Runtime.InteropServices.Marshal.GetTypeLibGuid%2A> Devuelve el LIBID que está asociado el <xref:System.Runtime.InteropServices.GuidAttribute>, si se aplica el atributo.</span><span class="sxs-lookup"><span data-stu-id="ce515-1061"><xref:System.Runtime.InteropServices.Marshal.GetTypeLibGuid%2A> returns the LIBID that is associated with the <xref:System.Runtime.InteropServices.GuidAttribute>, if the attribute is applied.</span></span> <span data-ttu-id="ce515-1062">En caso contrario, <xref:System.Runtime.InteropServices.Marshal.GetTypeLibGuidForAssembly%2A> devuelve el valor calculado.</span><span class="sxs-lookup"><span data-stu-id="ce515-1062">Otherwise, <xref:System.Runtime.InteropServices.Marshal.GetTypeLibGuidForAssembly%2A> returns the calculated value.</span></span> <span data-ttu-id="ce515-1063">Como alternativa, puede usar el <xref:System.Runtime.InteropServices.Marshal.GetTypeLibGuid%2A> método para extraer el LIBID real de una biblioteca de tipos existente.</span><span class="sxs-lookup"><span data-stu-id="ce515-1063">Alternatively, you can use the <xref:System.Runtime.InteropServices.Marshal.GetTypeLibGuid%2A> method to extract the actual LIBID from an existing type library.</span></span>  
  
 <span data-ttu-id="ce515-1064">Consulte la [conversión de ensamblados exportados](https://msdn.microsoft.com/library/3fffd8db-240f-4fde-a558-a5bcc01e1a86) tema para obtener más información acerca de los identificadores de la biblioteca.</span><span class="sxs-lookup"><span data-stu-id="ce515-1064">See the [Exported Assembly Conversion](https://msdn.microsoft.com/library/3fffd8db-240f-4fde-a558-a5bcc01e1a86) topic for more information about library identifiers.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ce515-1065">El valor de <paramref name="asm" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-1065"><paramref name="asm" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-1066">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-1066">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-1067">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-1067">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="T:System.Runtime.InteropServices.GuidAttribute" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetTypeLibGuid(System.Runtime.InteropServices.UCOMITypeLib)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetTypeLibLcid">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ce515-1068">Recupera el LCID de una biblioteca de tipos.</span><span class="sxs-lookup"><span data-stu-id="ce515-1068">Retrieves the LCID of a type library.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetTypeLibLcid">
      <MemberSignature Language="C#" Value="public static int GetTypeLibLcid (System.Runtime.InteropServices.ComTypes.ITypeLib typelib);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetTypeLibLcid(class System.Runtime.InteropServices.ComTypes.ITypeLib typelib) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetTypeLibLcid(System.Runtime.InteropServices.ComTypes.ITypeLib)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTypeLibLcid (typelib As ITypeLib) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetTypeLibLcid(System::Runtime::InteropServices::ComTypes::ITypeLib ^ typelib);" />
      <MemberSignature Language="F#" Value="static member GetTypeLibLcid : System.Runtime.InteropServices.ComTypes.ITypeLib -&gt; int" Usage="System.Runtime.InteropServices.Marshal.GetTypeLibLcid typelib" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typelib" Type="System.Runtime.InteropServices.ComTypes.ITypeLib" />
      </Parameters>
      <Docs>
        <param name="typelib"><span data-ttu-id="ce515-1069">Biblioteca de tipos cuyo LCID se va a recuperar.</span><span class="sxs-lookup"><span data-stu-id="ce515-1069">The type library whose LCID is to be retrieved.</span></span></param>
        <summary><span data-ttu-id="ce515-1070">Recupera el LCID de una biblioteca de tipos.</span><span class="sxs-lookup"><span data-stu-id="ce515-1070">Retrieves the LCID of a type library.</span></span></summary>
        <returns><span data-ttu-id="ce515-1071">LCID de la biblioteca de tipos al que apunta el parámetro <paramref name="typelib" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-1071">The LCID of the type library that the <paramref name="typelib" /> parameter points to.</span></span></returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-1072">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-1072">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-1073">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-1073">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetTypeLibLcid">
      <MemberSignature Language="C#" Value="public static int GetTypeLibLcid (System.Runtime.InteropServices.UCOMITypeLib pTLB);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetTypeLibLcid(class System.Runtime.InteropServices.UCOMITypeLib pTLB) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetTypeLibLcid(System.Runtime.InteropServices.UCOMITypeLib)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTypeLibLcid (pTLB As UCOMITypeLib) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetTypeLibLcid(System::Runtime::InteropServices::UCOMITypeLib ^ pTLB);" />
      <MemberSignature Language="F#" Value="static member GetTypeLibLcid : System.Runtime.InteropServices.UCOMITypeLib -&gt; int" Usage="System.Runtime.InteropServices.Marshal.GetTypeLibLcid pTLB" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinmac-3.0">
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("Use System.Runtime.InteropServices.Marshal.GetTypeLibLcid(ITypeLib pTLB) instead. http://go.microsoft.com/fwlink/?linkid=14202&amp;ID=0000011.", false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pTLB" Type="System.Runtime.InteropServices.UCOMITypeLib" />
      </Parameters>
      <Docs>
        <param name="pTLB"><span data-ttu-id="ce515-1074">Biblioteca de tipos cuyo LCID se va a recuperar.</span><span class="sxs-lookup"><span data-stu-id="ce515-1074">The type library whose LCID is to be retrieved.</span></span></param>
        <summary><span data-ttu-id="ce515-1075">Recupera el LCID de una biblioteca de tipos.</span><span class="sxs-lookup"><span data-stu-id="ce515-1075">Retrieves the LCID of a type library.</span></span></summary>
        <returns><span data-ttu-id="ce515-1076">LCID de la biblioteca de tipos al que apunta el parámetro <paramref name="pTLB" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-1076">The LCID of the type library that the <paramref name="pTLB" /> parameter points to.</span></span></returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-1077">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-1077">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-1078">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-1078">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetTypeLibName">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ce515-1079">Recupera el nombre de una biblioteca de tipos.</span><span class="sxs-lookup"><span data-stu-id="ce515-1079">Retrieves the name of a type library.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetTypeLibName">
      <MemberSignature Language="C#" Value="public static string GetTypeLibName (System.Runtime.InteropServices.ComTypes.ITypeLib typelib);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetTypeLibName(class System.Runtime.InteropServices.ComTypes.ITypeLib typelib) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetTypeLibName(System.Runtime.InteropServices.ComTypes.ITypeLib)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTypeLibName (typelib As ITypeLib) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetTypeLibName(System::Runtime::InteropServices::ComTypes::ITypeLib ^ typelib);" />
      <MemberSignature Language="F#" Value="static member GetTypeLibName : System.Runtime.InteropServices.ComTypes.ITypeLib -&gt; string" Usage="System.Runtime.InteropServices.Marshal.GetTypeLibName typelib" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typelib" Type="System.Runtime.InteropServices.ComTypes.ITypeLib" />
      </Parameters>
      <Docs>
        <param name="typelib"><span data-ttu-id="ce515-1080">Biblioteca de tipos cuyo nombre se va a recuperar.</span><span class="sxs-lookup"><span data-stu-id="ce515-1080">The type library whose name is to be retrieved.</span></span></param>
        <summary><span data-ttu-id="ce515-1081">Recupera el nombre de una biblioteca de tipos.</span><span class="sxs-lookup"><span data-stu-id="ce515-1081">Retrieves the name of a type library.</span></span></summary>
        <returns><span data-ttu-id="ce515-1082">Nombre de la biblioteca de tipos al que apunta el parámetro <paramref name="typelib" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-1082">The name of the type library that the <paramref name="typelib" /> parameter points to.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-1083">El nombre devuelto por este método es el identificador usado con la instrucción library, como ADODB para la biblioteca de tipos ADO de Microsoft.</span><span class="sxs-lookup"><span data-stu-id="ce515-1083">The name returned by this method is the identifier used with the library statement, such as ADODB for the Microsoft ADO type library.</span></span> <span data-ttu-id="ce515-1084">El nombre no es un nombre de archivo.</span><span class="sxs-lookup"><span data-stu-id="ce515-1084">The name is not a file name.</span></span>  
  
 <span data-ttu-id="ce515-1085">También puede recuperar el nombre de la biblioteca de tipos mediante una llamada a la <xref:System.Runtime.InteropServices.UCOMITypeInfo.GetDocumentation%2A?displayProperty=nameWithType> método y pasando el valor -1 para su primer parámetro.</span><span class="sxs-lookup"><span data-stu-id="ce515-1085">You can also retrieve the type library name by calling the <xref:System.Runtime.InteropServices.UCOMITypeInfo.GetDocumentation%2A?displayProperty=nameWithType> method and passing -1 for its first parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ce515-1086">El parámetro <paramref name="typelib" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-1086">The <paramref name="typelib" /> parameter is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-1087">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-1087">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-1088">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-1088">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.UCOMITypeLib.GetDocumentation(System.Int32,System.String@,System.String@,System.Int32@,System.String@)" />
      </Docs>
    </Member>
    <Member MemberName="GetTypeLibName">
      <MemberSignature Language="C#" Value="public static string GetTypeLibName (System.Runtime.InteropServices.UCOMITypeLib pTLB);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetTypeLibName(class System.Runtime.InteropServices.UCOMITypeLib pTLB) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetTypeLibName(System.Runtime.InteropServices.UCOMITypeLib)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTypeLibName (pTLB As UCOMITypeLib) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetTypeLibName(System::Runtime::InteropServices::UCOMITypeLib ^ pTLB);" />
      <MemberSignature Language="F#" Value="static member GetTypeLibName : System.Runtime.InteropServices.UCOMITypeLib -&gt; string" Usage="System.Runtime.InteropServices.Marshal.GetTypeLibName pTLB" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinmac-3.0">
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("Use System.Runtime.InteropServices.Marshal.GetTypeLibName(ITypeLib pTLB) instead. http://go.microsoft.com/fwlink/?linkid=14202&amp;ID=0000011.", false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pTLB" Type="System.Runtime.InteropServices.UCOMITypeLib" />
      </Parameters>
      <Docs>
        <param name="pTLB"><span data-ttu-id="ce515-1089">Biblioteca de tipos cuyo nombre se va a recuperar.</span><span class="sxs-lookup"><span data-stu-id="ce515-1089">The type library whose name is to be retrieved.</span></span></param>
        <summary><span data-ttu-id="ce515-1090">Recupera el nombre de una biblioteca de tipos.</span><span class="sxs-lookup"><span data-stu-id="ce515-1090">Retrieves the name of a type library.</span></span></summary>
        <returns><span data-ttu-id="ce515-1091">Nombre de la biblioteca de tipos al que apunta el parámetro <paramref name="pTLB" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-1091">The name of the type library that the <paramref name="pTLB" /> parameter points to.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-1092">El nombre devuelto por este método es el identificador usado con la instrucción library, como ADODB para la biblioteca de tipos ADO de Microsoft.</span><span class="sxs-lookup"><span data-stu-id="ce515-1092">The name returned by this method is the identifier used with the library statement, such as ADODB for the Microsoft ADO type library.</span></span> <span data-ttu-id="ce515-1093">El nombre no es un nombre de archivo.</span><span class="sxs-lookup"><span data-stu-id="ce515-1093">The name is not a file name.</span></span>  
  
 <span data-ttu-id="ce515-1094">También puede recuperar el nombre de la biblioteca de tipos mediante una llamada a la <xref:System.Runtime.InteropServices.UCOMITypeInfo.GetDocumentation%2A?displayProperty=nameWithType> método y pasando el valor -1 para su primer parámetro.</span><span class="sxs-lookup"><span data-stu-id="ce515-1094">You can also retrieve the type library name by calling the <xref:System.Runtime.InteropServices.UCOMITypeInfo.GetDocumentation%2A?displayProperty=nameWithType> method and passing -1 for its first parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-1095">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-1095">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-1096">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-1096">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.UCOMITypeLib.GetDocumentation(System.Int32,System.String@,System.String@,System.Int32@,System.String@)" />
      </Docs>
    </Member>
    <Member MemberName="GetTypeLibVersionForAssembly">
      <MemberSignature Language="C#" Value="public static void GetTypeLibVersionForAssembly (System.Reflection.Assembly inputAssembly, out int majorVersion, out int minorVersion);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetTypeLibVersionForAssembly(class System.Reflection.Assembly inputAssembly, [out] int32&amp; majorVersion, [out] int32&amp; minorVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetTypeLibVersionForAssembly(System.Reflection.Assembly,System.Int32@,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub GetTypeLibVersionForAssembly (inputAssembly As Assembly, ByRef majorVersion As Integer, ByRef minorVersion As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void GetTypeLibVersionForAssembly(System::Reflection::Assembly ^ inputAssembly, [Runtime::InteropServices::Out] int % majorVersion, [Runtime::InteropServices::Out] int % minorVersion);" />
      <MemberSignature Language="F#" Value="static member GetTypeLibVersionForAssembly : System.Reflection.Assembly *  *  -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.GetTypeLibVersionForAssembly (inputAssembly, majorVersion, minorVersion)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputAssembly" Type="System.Reflection.Assembly" />
        <Parameter Name="majorVersion" Type="System.Int32" RefType="out" />
        <Parameter Name="minorVersion" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="inputAssembly"><span data-ttu-id="ce515-1097">Ensamblado administrado.</span><span class="sxs-lookup"><span data-stu-id="ce515-1097">A managed assembly.</span></span></param>
        <param name="majorVersion"><span data-ttu-id="ce515-1098">Número de versión principal.</span><span class="sxs-lookup"><span data-stu-id="ce515-1098">The major version number.</span></span></param>
        <param name="minorVersion"><span data-ttu-id="ce515-1099">Número de versión secundaria.</span><span class="sxs-lookup"><span data-stu-id="ce515-1099">The minor version number.</span></span></param>
        <summary><span data-ttu-id="ce515-1100">Recupera el número de versión de la biblioteca de tipos que se exportará del ensamblado especificado.</span><span class="sxs-lookup"><span data-stu-id="ce515-1100">Retrieves the version number of a type library that will be exported from the specified assembly.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-1101">Antes de exportar un ensamblado mediante el uso de <xref:System.Runtime.InteropServices.TypeLibExporterFlags> con el `CallerResolvedReferences` valor, puede usar este método para recuperar la versión de la biblioteca de tipos del ensamblado.</span><span class="sxs-lookup"><span data-stu-id="ce515-1101">Before exporting an assembly by using <xref:System.Runtime.InteropServices.TypeLibExporterFlags> with the `CallerResolvedReferences` value, you can use this method to retrieve the type library version from the assembly.</span></span>  
  
 <span data-ttu-id="ce515-1102">Si no se aplican los <xref:System.Runtime.InteropServices.TypeLibVersionAttribute> atributo a un ensamblado exportado para controlar explícitamente el número de versión de la biblioteca de tipos generada, la biblioteca de tipos tendrán el mismo número de versión que el ensamblado.</span><span class="sxs-lookup"><span data-stu-id="ce515-1102">If you do not apply the <xref:System.Runtime.InteropServices.TypeLibVersionAttribute> attribute to an exported assembly to explicitly control the version number of the generated type library, the type library will have the same version number as the assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ce515-1103">El valor de <paramref name="inputAssembly" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-1103"><paramref name="inputAssembly" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-1104">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-1104">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-1105">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-1105">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="T:System.Runtime.InteropServices.TypeLibExporterFlags" />
        <altmember cref="T:System.Runtime.InteropServices.TypeLibVersionAttribute" />
        <altmember cref="T:System.Runtime.InteropServices.ITypeLibConverter" />
      </Docs>
    </Member>
    <Member MemberName="GetUniqueObjectForIUnknown">
      <MemberSignature Language="C#" Value="public static object GetUniqueObjectForIUnknown (IntPtr unknown);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetUniqueObjectForIUnknown(native int unknown) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetUniqueObjectForIUnknown(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUniqueObjectForIUnknown (unknown As IntPtr) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetUniqueObjectForIUnknown(IntPtr unknown);" />
      <MemberSignature Language="F#" Value="static member GetUniqueObjectForIUnknown : nativeint -&gt; obj" Usage="System.Runtime.InteropServices.Marshal.GetUniqueObjectForIUnknown unknown" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unknown" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="unknown"><span data-ttu-id="ce515-1106">Puntero administrado a una interfaz <see langword="IUnknown" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-1106">A managed pointer to an <see langword="IUnknown" /> interface.</span></span></param>
        <summary><span data-ttu-id="ce515-1107">Crea un objeto [contenedor RCW](~/docs/framework/interop/runtime-callable-wrapper.md) único para una interfaz <see href="https://go.microsoft.com/fwlink/?LinkId=148003">IUnknown</see> dada.</span><span class="sxs-lookup"><span data-stu-id="ce515-1107">Creates a unique [Runtime Callable Wrapper](~/docs/framework/interop/runtime-callable-wrapper.md) (RCW) object for a given <see href="https://go.microsoft.com/fwlink/?LinkId=148003">IUnknown</see> interface.</span></span></summary>
        <returns><span data-ttu-id="ce515-1108">RCW único para la interfaz <see langword="IUnknown" /> especificada.</span><span class="sxs-lookup"><span data-stu-id="ce515-1108">A unique RCW for the specified <see langword="IUnknown" /> interface.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-1109">El <xref:System.Runtime.InteropServices.Marshal.GetUniqueObjectForIUnknown%2A> método se asegura de que reciba un RCW único, porque no coincide con un `IUnknown` puntero a un objeto existente.</span><span class="sxs-lookup"><span data-stu-id="ce515-1109">The <xref:System.Runtime.InteropServices.Marshal.GetUniqueObjectForIUnknown%2A> method ensures that you receive a unique RCW, because it does not match an `IUnknown` pointer to an existing object.</span></span> <span data-ttu-id="ce515-1110">Utilice este método cuando tenga que crear un RCW único que no se ve afectado por otro código que llama a la <xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A> método.</span><span class="sxs-lookup"><span data-stu-id="ce515-1110">Use this method when you have to create a unique RCW that is not impacted by other code that calls the <xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-1111">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-1111">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-1112">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-1112">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetUnmanagedThunkForManagedMethodPtr">
      <MemberSignature Language="C#" Value="public static IntPtr GetUnmanagedThunkForManagedMethodPtr (IntPtr pfnMethodToWrap, IntPtr pbSignature, int cbSignature);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int GetUnmanagedThunkForManagedMethodPtr(native int pfnMethodToWrap, native int pbSignature, int32 cbSignature) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetUnmanagedThunkForManagedMethodPtr(System.IntPtr,System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUnmanagedThunkForManagedMethodPtr (pfnMethodToWrap As IntPtr, pbSignature As IntPtr, cbSignature As Integer) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr GetUnmanagedThunkForManagedMethodPtr(IntPtr pfnMethodToWrap, IntPtr pbSignature, int cbSignature);" />
      <MemberSignature Language="F#" Value="static member GetUnmanagedThunkForManagedMethodPtr : nativeint * nativeint * int -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.GetUnmanagedThunkForManagedMethodPtr (pfnMethodToWrap, pbSignature, cbSignature)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinmac-3.0">
          <AttributeName>System.Obsolete("This method has been deprecated")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("The GetUnmanagedThunkForManagedMethodPtr method has been deprecated and will be removed in a future release.", false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pfnMethodToWrap" Type="System.IntPtr" />
        <Parameter Name="pbSignature" Type="System.IntPtr" />
        <Parameter Name="cbSignature" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="pfnMethodToWrap"><span data-ttu-id="ce515-1113">Puntero al método de que se va a serializar.</span><span class="sxs-lookup"><span data-stu-id="ce515-1113">A pointer to the method to marshal.</span></span></param>
        <param name="pbSignature"><span data-ttu-id="ce515-1114">Puntero a la firma del método.</span><span class="sxs-lookup"><span data-stu-id="ce515-1114">A pointer to the method signature.</span></span></param>
        <param name="cbSignature"><span data-ttu-id="ce515-1115">Número de bytes en <paramref name="pbSignature" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-1115">The number of bytes in <paramref name="pbSignature" />.</span></span></param>
        <summary><span data-ttu-id="ce515-1116">Obtiene un puntero a una función generada en tiempo de ejecución que calcula las referencias a una llamada de código no administrado a código administrado.</span><span class="sxs-lookup"><span data-stu-id="ce515-1116">Gets a pointer to a runtime-generated function that marshals a call from unmanaged to managed code.</span></span></summary>
        <returns><span data-ttu-id="ce515-1117">Puntero a una función que serializará una llamada desde <paramref name="pfnMethodToWrap" /> a código administrado.</span><span class="sxs-lookup"><span data-stu-id="ce515-1117">A pointer to a function that will marshal a call from <paramref name="pfnMethodToWrap" /> to managed code.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-1118"><xref:System.Runtime.InteropServices.Marshal.GetUnmanagedThunkForManagedMethodPtr%2A> se expone para la compatibilidad con el compilador solo.</span><span class="sxs-lookup"><span data-stu-id="ce515-1118"><xref:System.Runtime.InteropServices.Marshal.GetUnmanagedThunkForManagedMethodPtr%2A> is exposed for compiler support only.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-1119">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-1119">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-1120">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-1120">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="IsComObject">
      <MemberSignature Language="C#" Value="public static bool IsComObject (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsComObject(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.IsComObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsComObject (o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsComObject(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="static member IsComObject : obj -&gt; bool" Usage="System.Runtime.InteropServices.Marshal.IsComObject o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o"><span data-ttu-id="ce515-1121">Objeto que se va a comprobar.</span><span class="sxs-lookup"><span data-stu-id="ce515-1121">The object to check.</span></span></param>
        <summary><span data-ttu-id="ce515-1122">Indica si un objeto especificado representa un objeto COM.</span><span class="sxs-lookup"><span data-stu-id="ce515-1122">Indicates whether a specified object represents a COM object.</span></span></summary>
        <returns><span data-ttu-id="ce515-1123">Es <see langword="true" /> si el parámetro <paramref name="o" /> es un tipo COM; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-1123"><see langword="true" /> if the <paramref name="o" /> parameter is a COM type; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-1124"><xref:System.Runtime.InteropServices.Marshal.IsComObject%2A> Devuelve `true` si el tipo de clase de la instancia se atribuye con <xref:System.Runtime.InteropServices.ComImportAttribute?displayProperty=nameWithType> o si se deriva directa o indirectamente de una clase con atributos con <xref:System.Runtime.InteropServices.ComImportAttribute>.</span><span class="sxs-lookup"><span data-stu-id="ce515-1124"><xref:System.Runtime.InteropServices.Marshal.IsComObject%2A> returns `true` if the class type of the instance is attributed with <xref:System.Runtime.InteropServices.ComImportAttribute?displayProperty=nameWithType> or if it derives directly or indirectly from a class attributed with <xref:System.Runtime.InteropServices.ComImportAttribute>.</span></span> <span data-ttu-id="ce515-1125">El [Tlbimp.exe (importador de biblioteca)](~/docs/framework/tools/tlbimp-exe-type-library-importer.md) herramienta aplica este atributo para cuando importa una biblioteca de tipos.</span><span class="sxs-lookup"><span data-stu-id="ce515-1125">The [Tlbimp.exe (Type Library Importer)](~/docs/framework/tools/tlbimp-exe-type-library-importer.md) tool applies this attribute for you when it imports a type library.</span></span>  
  
 <span data-ttu-id="ce515-1126">Otros dos métodos también determinan si un objeto especificado representa un objeto COM, pero los requisitos para devolver `true` difieren de los requisitos de este método.</span><span class="sxs-lookup"><span data-stu-id="ce515-1126">Two other methods also determine whether a specified object represents a COM object, but the requirements for returning `true` differ from this method's requirements.</span></span> <span data-ttu-id="ce515-1127"><xref:System.Type.IsImport%2A?displayProperty=nameWithType> Devuelve `true` si la clase (o interfaz) se atribuye con <xref:System.Runtime.InteropServices.ComImportAttribute> directamente; no devuelve `true` para tipos derivados.</span><span class="sxs-lookup"><span data-stu-id="ce515-1127"><xref:System.Type.IsImport%2A?displayProperty=nameWithType> returns `true` if the class (or interface) is attributed with <xref:System.Runtime.InteropServices.ComImportAttribute> directly; it does not return `true` for derived types.</span></span> <span data-ttu-id="ce515-1128"><xref:System.Runtime.InteropServices.RegistrationServices.TypeRepresentsComType%2A?displayProperty=nameWithType> Devuelve `true` si el tipo se atribuye con <xref:System.Runtime.InteropServices.ComImportAttribute> o deriva de un tipo con el mismo GUID.</span><span class="sxs-lookup"><span data-stu-id="ce515-1128"><xref:System.Runtime.InteropServices.RegistrationServices.TypeRepresentsComType%2A?displayProperty=nameWithType> returns `true` if the type is attributed with <xref:System.Runtime.InteropServices.ComImportAttribute> or derives from a type with the same GUID.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ce515-1129">El valor de <paramref name="o" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-1129"><paramref name="o" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Runtime.InteropServices.ComImportAttribute" />
        <altmember cref="P:System.Type.IsImport" />
        <altmember cref="M:System.Runtime.InteropServices.RegistrationServices.TypeRepresentsComType(System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="IsTypeVisibleFromCom">
      <MemberSignature Language="C#" Value="public static bool IsTypeVisibleFromCom (Type t);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsTypeVisibleFromCom(class System.Type t) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.IsTypeVisibleFromCom(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsTypeVisibleFromCom (t As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsTypeVisibleFromCom(Type ^ t);" />
      <MemberSignature Language="F#" Value="static member IsTypeVisibleFromCom : Type -&gt; bool" Usage="System.Runtime.InteropServices.Marshal.IsTypeVisibleFromCom t" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="t"><span data-ttu-id="ce515-1130">Tipo cuya visibilidad a través de COM se va a comprobar.</span><span class="sxs-lookup"><span data-stu-id="ce515-1130">The type to check for COM visibility.</span></span></param>
        <summary><span data-ttu-id="ce515-1131">Indica si un tipo es visible a clientes COM.</span><span class="sxs-lookup"><span data-stu-id="ce515-1131">Indicates whether a type is visible to COM clients.</span></span></summary>
        <returns><span data-ttu-id="ce515-1132">Es <see langword="true" /> si el tipo es visible para COM; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-1132"><see langword="true" /> if the type is visible to COM; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-1133"><xref:System.Runtime.InteropServices.Marshal.IsTypeVisibleFromCom%2A> permite comprobar si hay visibilidad COM en un solo paso.</span><span class="sxs-lookup"><span data-stu-id="ce515-1133"><xref:System.Runtime.InteropServices.Marshal.IsTypeVisibleFromCom%2A> enables you to check for COM visibility in one step.</span></span> <span data-ttu-id="ce515-1134">No se puede usar tipos que no son visibles desde COM.</span><span class="sxs-lookup"><span data-stu-id="ce515-1134">Types that are not visible cannot be used from COM.</span></span> <span data-ttu-id="ce515-1135">Un tipo es visible si se `public` y no ocultos con el <xref:System.Runtime.InteropServices.ComVisibleAttribute?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ce515-1135">A type is visible if it is `public` and not hidden with the <xref:System.Runtime.InteropServices.ComVisibleAttribute?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Runtime.InteropServices.ComVisibleAttribute" />
      </Docs>
    </Member>
    <Member MemberName="NumParamBytes">
      <MemberSignature Language="C#" Value="public static int NumParamBytes (System.Reflection.MethodInfo m);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 NumParamBytes(class System.Reflection.MethodInfo m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.NumParamBytes(System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NumParamBytes (m As MethodInfo) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int NumParamBytes(System::Reflection::MethodInfo ^ m);" />
      <MemberSignature Language="F#" Value="static member NumParamBytes : System.Reflection.MethodInfo -&gt; int" Usage="System.Runtime.InteropServices.Marshal.NumParamBytes m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="m"><span data-ttu-id="ce515-1136">Método que se va a comprobar.</span><span class="sxs-lookup"><span data-stu-id="ce515-1136">The method to be checked.</span></span></param>
        <summary><span data-ttu-id="ce515-1137">Calcula el número de bytes de la memoria no administrada que se necesitan para contener los parámetros del método especificado.</span><span class="sxs-lookup"><span data-stu-id="ce515-1137">Calculates the number of bytes in unmanaged memory that are required to hold the parameters for the specified method.</span></span></summary>
        <returns><span data-ttu-id="ce515-1138">El número de bytes que se necesitan para representar los parámetros del método en la memoria no administrada.</span><span class="sxs-lookup"><span data-stu-id="ce515-1138">The number of bytes required to represent the method parameters in unmanaged memory.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-1139">El <xref:System.Runtime.InteropServices.Marshal.NumParamBytes%2A> método devuelve el tamaño de pila (en bytes) necesario para representar los parámetros de la firma del método en la memoria no administrada.</span><span class="sxs-lookup"><span data-stu-id="ce515-1139">The <xref:System.Runtime.InteropServices.Marshal.NumParamBytes%2A> method returns the stack size (in bytes) needed to represent the parameters of a method signature in unmanaged memory.</span></span>  
  
 <span data-ttu-id="ce515-1140">Tenga en cuenta que el valor devuelto de este método es dependiente de la plataforma.</span><span class="sxs-lookup"><span data-stu-id="ce515-1140">Note that the return value of this method is platform-dependent.</span></span> <span data-ttu-id="ce515-1141">Por ejemplo, una firma con un solo parámetro entero devuelve un valor de 4 en plataformas de 32 bits y un valor de 8 en plataformas de 64 bits.</span><span class="sxs-lookup"><span data-stu-id="ce515-1141">For example, a signature with a single integer parameter returns a value of 4 on 32-bit platforms and a value of 8 on 64-bit platforms.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ce515-1142">El parámetro <paramref name="m" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-1142">The <paramref name="m" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ce515-1143">El parámetro <paramref name="m" /> no es un objeto <see cref="T:System.Reflection.MethodInfo" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-1143">The <paramref name="m" /> parameter is not a <see cref="T:System.Reflection.MethodInfo" /> object.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-1144">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-1144">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-1145">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-1145">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="OffsetOf">
      <MemberSignature Language="C#" Value="public static IntPtr OffsetOf (Type t, string fieldName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int OffsetOf(class System.Type t, string fieldName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.OffsetOf(System.Type,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OffsetOf (t As Type, fieldName As String) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr OffsetOf(Type ^ t, System::String ^ fieldName);" />
      <MemberSignature Language="F#" Value="static member OffsetOf : Type * string -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.OffsetOf (t, fieldName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netcore-2.2">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Obsolete("OffsetOf(Type, string) may be unavailable in future releases. Instead, use OffsetOf&lt;T&gt;(string). For more info, go to http://go.microsoft.com/fwlink/?LinkID=296511")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t" Type="System.Type" />
        <Parameter Name="fieldName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="t"><span data-ttu-id="ce515-1146">Tipo de valor o tipo de referencia con formato que especifica la clase administrada.</span><span class="sxs-lookup"><span data-stu-id="ce515-1146">A value type or formatted reference type that specifies the managed class.</span></span> <span data-ttu-id="ce515-1147">Debe aplicar <see cref="T:System.Runtime.InteropServices.StructLayoutAttribute" /> a la clase.</span><span class="sxs-lookup"><span data-stu-id="ce515-1147">You must apply the <see cref="T:System.Runtime.InteropServices.StructLayoutAttribute" /> to the class.</span></span></param>
        <param name="fieldName"><span data-ttu-id="ce515-1148">Campo dentro del parámetro <paramref name="t" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-1148">The field within the <paramref name="t" /> parameter.</span></span></param>
        <summary><span data-ttu-id="ce515-1149">Devuelve el desplazamiento de campo del formato no administrado de la clase administrada.</span><span class="sxs-lookup"><span data-stu-id="ce515-1149">Returns the field offset of the unmanaged form of the managed class.</span></span></summary>
        <returns><span data-ttu-id="ce515-1150">Desplazamiento, en bytes, para el parámetro <paramref name="fieldName" /> dentro de la clase especificada que se declara mediante invocación de plataforma.</span><span class="sxs-lookup"><span data-stu-id="ce515-1150">The offset, in bytes, for the <paramref name="fieldName" /> parameter within the specified class that is declared by platform invoke.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-1151"><xref:System.Runtime.InteropServices.Marshal.OffsetOf%2A> proporciona el desplazamiento del diseño de estructura no administrada, que no corresponde necesariamente con el desplazamiento del diseño de estructura administrada.</span><span class="sxs-lookup"><span data-stu-id="ce515-1151"><xref:System.Runtime.InteropServices.Marshal.OffsetOf%2A> provides the offset in terms of the unmanaged structure layout, which does not necessarily correspond to the offset of the managed structure layout.</span></span> <span data-ttu-id="ce515-1152">La estructura de cálculo de referencias puede transformar el diseño y variar el desplazamiento.</span><span class="sxs-lookup"><span data-stu-id="ce515-1152">Marshaling the structure can transform the layout and alter the offset.</span></span> <span data-ttu-id="ce515-1153">El `t` parámetro puede ser un tipo de valor o un tipo de referencia con formato (con un diseño secuencial o explícito).</span><span class="sxs-lookup"><span data-stu-id="ce515-1153">The `t` parameter can be a value type or a formatted reference type (with either a sequential or explicit layout).</span></span> <span data-ttu-id="ce515-1154">Puede obtener el tamaño de todo el diseño mediante el <xref:System.Runtime.InteropServices.Marshal.SizeOf%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="ce515-1154">You can obtain the size of the entire layout by using the <xref:System.Runtime.InteropServices.Marshal.SizeOf%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="ce515-1155">Para obtener más información, consulte [serialización predeterminada para los tipos de valor](https://msdn.microsoft.com/library/4d9a876c-e05a-40ba-bd85-bd22877f984a).</span><span class="sxs-lookup"><span data-stu-id="ce515-1155">For additional information, see [Default Marshaling for Value Types](https://msdn.microsoft.com/library/4d9a876c-e05a-40ba-bd85-bd22877f984a).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ce515-1156">A partir de .NET Framework versión 2.0, <xref:System.Runtime.InteropServices.Marshal.OffsetOf%2A> puede exponer los campos privados.</span><span class="sxs-lookup"><span data-stu-id="ce515-1156">Beginning with the .NET Framework version 2.0, <xref:System.Runtime.InteropServices.Marshal.OffsetOf%2A> may expose private fields.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ce515-1157">La clase no se puede exportar como estructura o el campo no es público.</span><span class="sxs-lookup"><span data-stu-id="ce515-1157">The class cannot be exported as a structure or the field is nonpublic.</span></span> <span data-ttu-id="ce515-1158">A partir de la versión 2.0 de .NET Framework, el campo puede ser privado.</span><span class="sxs-lookup"><span data-stu-id="ce515-1158">Beginning with the .NET Framework version 2.0, the field may be private.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ce515-1159">El parámetro <paramref name="t" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-1159">The <paramref name="t" /> parameter is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.SizeOf(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="OffsetOf&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static IntPtr OffsetOf&lt;T&gt; (string fieldName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int OffsetOf&lt;T&gt;(string fieldName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.OffsetOf``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OffsetOf(Of T) (fieldName As String) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static IntPtr OffsetOf(System::String ^ fieldName);" />
      <MemberSignature Language="F#" Value="static member OffsetOf : string -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.OffsetOf fieldName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="fieldName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="ce515-1160">Tipo de valor administrado o tipo de referencia con formato.</span><span class="sxs-lookup"><span data-stu-id="ce515-1160">A managed value type or formatted reference type.</span></span> <span data-ttu-id="ce515-1161">Debe aplicar el atributo <see cref="T:System.Runtime.InteropServices.StructLayoutAttribute" /> a la clase.</span><span class="sxs-lookup"><span data-stu-id="ce515-1161">You must apply the <see cref="T:System.Runtime.InteropServices.StructLayoutAttribute" /> attribute to the class.</span></span></typeparam>
        <param name="fieldName"><span data-ttu-id="ce515-1162">Nombre del campo en el tipo <paramref name="T" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-1162">The name of the field in the <paramref name="T" /> type.</span></span></param>
        <summary><span data-ttu-id="ce515-1163">[Compatible con .NET Framework 4.5.1 y versiones posteriores]</span><span class="sxs-lookup"><span data-stu-id="ce515-1163">[Supported in the .NET Framework 4.5.1 and later versions]</span></span> 
<span data-ttu-id="ce515-1164">Devuelve el desplazamiento de campo del formato no administrado de una clase administrada específica.</span><span class="sxs-lookup"><span data-stu-id="ce515-1164">Returns the field offset of the unmanaged form of a specified managed class.</span></span></summary>
        <returns><span data-ttu-id="ce515-1165">Desplazamiento, en bytes, para el parámetro <paramref name="fieldName" /> dentro de la clase especificada que se declara mediante invocación de plataforma.</span><span class="sxs-lookup"><span data-stu-id="ce515-1165">The offset, in bytes, for the <paramref name="fieldName" /> parameter within the specified class that is declared by platform invoke.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-1166"><xref:System.Runtime.InteropServices.Marshal.OffsetOf%60%601%28System.String%29> proporciona el desplazamiento del diseño de estructura no administrada, que no corresponde necesariamente con el desplazamiento del diseño de estructura administrada.</span><span class="sxs-lookup"><span data-stu-id="ce515-1166"><xref:System.Runtime.InteropServices.Marshal.OffsetOf%60%601%28System.String%29> provides the offset in terms of the unmanaged structure layout, which does not necessarily correspond to the offset of the managed structure layout.</span></span> <span data-ttu-id="ce515-1167">La estructura de cálculo de referencias puede transformar el diseño y variar el desplazamiento.</span><span class="sxs-lookup"><span data-stu-id="ce515-1167">Marshaling the structure can transform the layout and alter the offset.</span></span> <span data-ttu-id="ce515-1168">El `T` parámetro de tipo genérico puede ser un tipo de valor o un tipo de referencia con formato (con un diseño secuencial o explícito).</span><span class="sxs-lookup"><span data-stu-id="ce515-1168">The `T` generic type parameter can be a value type or a formatted reference type (with either a sequential or explicit layout).</span></span> <span data-ttu-id="ce515-1169">Puede obtener el tamaño de todo el diseño mediante el <xref:System.Runtime.InteropServices.Marshal.SizeOf%60%601%28%60%600%29> método.</span><span class="sxs-lookup"><span data-stu-id="ce515-1169">You can obtain the size of the entire layout by using the <xref:System.Runtime.InteropServices.Marshal.SizeOf%60%601%28%60%600%29> method.</span></span> <span data-ttu-id="ce515-1170">Para obtener más información, consulte [serialización predeterminada para los tipos de valor](https://msdn.microsoft.com/library/4d9a876c-e05a-40ba-bd85-bd22877f984a).</span><span class="sxs-lookup"><span data-stu-id="ce515-1170">For additional information, see [Default Marshaling for Value Types](https://msdn.microsoft.com/library/4d9a876c-e05a-40ba-bd85-bd22877f984a).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ce515-1171">A partir de .NET Framework versión 2.0, <xref:System.Runtime.InteropServices.Marshal.OffsetOf%2A> puede exponer los campos privados.</span><span class="sxs-lookup"><span data-stu-id="ce515-1171">Beginning with the .NET Framework version 2.0, <xref:System.Runtime.InteropServices.Marshal.OffsetOf%2A> may expose private fields.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.SizeOf``1(``0)" />
      </Docs>
    </Member>
    <Member MemberName="Prelink">
      <MemberSignature Language="C#" Value="public static void Prelink (System.Reflection.MethodInfo m);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Prelink(class System.Reflection.MethodInfo m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Prelink(System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Prelink (m As MethodInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Prelink(System::Reflection::MethodInfo ^ m);" />
      <MemberSignature Language="F#" Value="static member Prelink : System.Reflection.MethodInfo -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.Prelink m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="m"><span data-ttu-id="ce515-1172">Método que se va a comprobar.</span><span class="sxs-lookup"><span data-stu-id="ce515-1172">The method to be checked.</span></span></param>
        <summary><span data-ttu-id="ce515-1173">Ejecuta tareas únicas de configuración de método sin llamar al método.</span><span class="sxs-lookup"><span data-stu-id="ce515-1173">Executes one-time method setup tasks without calling the method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-1174">Tareas de configuración de proporcionan inicialización temprana y se realizan automáticamente cuando se invoca el método de destino.</span><span class="sxs-lookup"><span data-stu-id="ce515-1174">Setup tasks provide early initialization and are performed automatically when the target method is invoked.</span></span> <span data-ttu-id="ce515-1175">Las tareas iniciales incluyen lo siguiente:</span><span class="sxs-lookup"><span data-stu-id="ce515-1175">First-time tasks include the following:</span></span>  
  
-   <span data-ttu-id="ce515-1176">Comprobando que la invocación de plataforma metadatos tiene el formato correcto.</span><span class="sxs-lookup"><span data-stu-id="ce515-1176">Verifying that the platform invoke metadata is correctly formatted.</span></span>  
  
-   <span data-ttu-id="ce515-1177">Comprobando que todos los tipos administrados son parámetros válidos de la plataforma de invocación de funciones.</span><span class="sxs-lookup"><span data-stu-id="ce515-1177">Verifying that all the managed types are valid parameters of platform invoke functions.</span></span>  
  
-   <span data-ttu-id="ce515-1178">Localizar y cargar la DLL no administrada en el proceso.</span><span class="sxs-lookup"><span data-stu-id="ce515-1178">Locating and loading the unmanaged DLL into the process.</span></span>  
  
-   <span data-ttu-id="ce515-1179">Buscar el punto de entrada en el proceso.</span><span class="sxs-lookup"><span data-stu-id="ce515-1179">Locating the entry point in the process.</span></span>  
  
 <span data-ttu-id="ce515-1180">Una llamada a <xref:System.Runtime.InteropServices.Marshal.Prelink%2A> en un método fuera de la plataforma de invocación no tiene ningún efecto.</span><span class="sxs-lookup"><span data-stu-id="ce515-1180">Calling <xref:System.Runtime.InteropServices.Marshal.Prelink%2A> on a method outside of platform invoke has no effect.</span></span> <span data-ttu-id="ce515-1181">Para ejecutar el programa de instalación de las tareas todas las plataformas de invocan métodos en un tipo, use <xref:System.Runtime.InteropServices.Marshal.PrelinkAll%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ce515-1181">To execute setup tasks on all platform invoke methods in a type, use <xref:System.Runtime.InteropServices.Marshal.PrelinkAll%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ce515-1182">El parámetro <paramref name="m" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-1182">The <paramref name="m" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ce515-1183">El parámetro <paramref name="m" /> no es un objeto <see cref="T:System.Reflection.MethodInfo" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-1183">The <paramref name="m" /> parameter is not a <see cref="T:System.Reflection.MethodInfo" /> object.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-1184">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-1184">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-1185">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-1185">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.PrelinkAll(System.Type)" />
        <altmember cref="T:System.Reflection.MethodInfo" />
      </Docs>
    </Member>
    <Member MemberName="PrelinkAll">
      <MemberSignature Language="C#" Value="public static void PrelinkAll (Type c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PrelinkAll(class System.Type c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.PrelinkAll(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub PrelinkAll (c As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void PrelinkAll(Type ^ c);" />
      <MemberSignature Language="F#" Value="static member PrelinkAll : Type -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.PrelinkAll c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="ce515-1186">Clase cuyos métodos se van a comprobar.</span><span class="sxs-lookup"><span data-stu-id="ce515-1186">The class whose methods are to be checked.</span></span></param>
        <summary><span data-ttu-id="ce515-1187">Realiza una comprobación anterior al vínculo de todos los métodos de una clase.</span><span class="sxs-lookup"><span data-stu-id="ce515-1187">Performs a pre-link check for all methods on a class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-1188">El <xref:System.Runtime.InteropServices.Marshal.PrelinkAll%2A> invoca el método <xref:System.Runtime.InteropServices.Marshal.Prelink%2A?displayProperty=nameWithType> en todos los métodos para un tipo determinado.</span><span class="sxs-lookup"><span data-stu-id="ce515-1188">The <xref:System.Runtime.InteropServices.Marshal.PrelinkAll%2A> method invokes <xref:System.Runtime.InteropServices.Marshal.Prelink%2A?displayProperty=nameWithType> on every method for a given type.</span></span> <span data-ttu-id="ce515-1189"><xref:System.Runtime.InteropServices.Marshal.Prelink%2A> ejecuta tareas de configuración de un solo uso del método sin llamar a cada método.</span><span class="sxs-lookup"><span data-stu-id="ce515-1189"><xref:System.Runtime.InteropServices.Marshal.Prelink%2A> executes one-time method setup tasks without calling each method.</span></span> <span data-ttu-id="ce515-1190">Puede usar <xref:System.Runtime.InteropServices.Marshal.PrelinkAll%2A> solo para la plataforma llamadas de invocación.</span><span class="sxs-lookup"><span data-stu-id="ce515-1190">You can use <xref:System.Runtime.InteropServices.Marshal.PrelinkAll%2A> only for platform invoke calls.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ce515-1191">El parámetro <paramref name="c" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-1191">The <paramref name="c" /> parameter is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-1192">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-1192">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-1193">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-1193">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Prelink(System.Reflection.MethodInfo)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="PtrToStringAnsi">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ce515-1194">Asigna un <see cref="T:System.String" /> administrado y copia en él total o parcialmente una cadena ANSI no administrada.</span><span class="sxs-lookup"><span data-stu-id="ce515-1194">Allocates a managed <see cref="T:System.String" /> and copies all or part of an unmanaged ANSI string into it.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="PtrToStringAnsi">
      <MemberSignature Language="C#" Value="public static string PtrToStringAnsi (IntPtr ptr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PtrToStringAnsi(native int ptr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.PtrToStringAnsi(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PtrToStringAnsi (ptr As IntPtr) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ PtrToStringAnsi(IntPtr ptr);" />
      <MemberSignature Language="F#" Value="static member PtrToStringAnsi : nativeint -&gt; string" Usage="System.Runtime.InteropServices.Marshal.PtrToStringAnsi ptr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="ptr"><span data-ttu-id="ce515-1195">Dirección del primer carácter de la cadena no administrada.</span><span class="sxs-lookup"><span data-stu-id="ce515-1195">The address of the first character of the unmanaged string.</span></span></param>
        <summary><span data-ttu-id="ce515-1196">Copia todos los caracteres hasta el primer carácter nulo de una cadena ANSI no administrada a un <see cref="T:System.String" />, administrado y ensancha cada carácter ANSI a Unicode.</span><span class="sxs-lookup"><span data-stu-id="ce515-1196">Copies all characters up to the first null character from an unmanaged ANSI string to a managed <see cref="T:System.String" />, and widens each ANSI character to Unicode.</span></span></summary>
        <returns><span data-ttu-id="ce515-1197">Cadena administrada que contiene una copia de la cadena ANSI no administrada.</span><span class="sxs-lookup"><span data-stu-id="ce515-1197">A managed string that holds a copy of the unmanaged ANSI string.</span></span> <span data-ttu-id="ce515-1198">Si <paramref name="ptr" /> es <see langword="null" />, el método devuelve una cadena nula.</span><span class="sxs-lookup"><span data-stu-id="ce515-1198">If <paramref name="ptr" /> is <see langword="null" />, the method returns a null string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-1199"><xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A> es útil para el cálculo de referencias personalizado o al mezclar código administrado y no administrado.</span><span class="sxs-lookup"><span data-stu-id="ce515-1199"><xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A> is useful for custom marshaling or when mixing managed and unmanaged code.</span></span> <span data-ttu-id="ce515-1200">Dado que este método crea una copia del contenido de la cadena no administrada, debe liberar la cadena original según corresponda.</span><span class="sxs-lookup"><span data-stu-id="ce515-1200">Because this method creates a copy of the unmanaged string's contents, you must free the original string as appropriate.</span></span> <span data-ttu-id="ce515-1201">Este método proporciona la funcionalidad opuesta de la <xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAnsi%2A?displayProperty=nameWithType> y <xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi%2A?displayProperty=nameWithType> métodos.</span><span class="sxs-lookup"><span data-stu-id="ce515-1201">This method provides the opposite functionality of the <xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAnsi%2A?displayProperty=nameWithType> and <xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi%2A?displayProperty=nameWithType> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ce515-1202">En el ejemplo siguiente se usa el <xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A> método para crear una cadena administrada de una unmanaged `char` matriz.</span><span class="sxs-lookup"><span data-stu-id="ce515-1202">The following example uses the <xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A> method to create a managed string from an unmanaged `char` array.</span></span>  
  
 [!code-cpp[Runtime.InteropServices.Marshal.PtrToStringAnsi-IntPtr#1](~/samples/snippets/cpp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.PtrToStringAnsi-IntPtr/cpp/sample.cpp#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-1203">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-1203">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-1204">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-1204">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAnsi(System.String)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="PtrToStringAnsi">
      <MemberSignature Language="C#" Value="public static string PtrToStringAnsi (IntPtr ptr, int len);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PtrToStringAnsi(native int ptr, int32 len) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.PtrToStringAnsi(System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PtrToStringAnsi (ptr As IntPtr, len As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ PtrToStringAnsi(IntPtr ptr, int len);" />
      <MemberSignature Language="F#" Value="static member PtrToStringAnsi : nativeint * int -&gt; string" Usage="System.Runtime.InteropServices.Marshal.PtrToStringAnsi (ptr, len)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="len" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ptr"><span data-ttu-id="ce515-1205">Dirección del primer carácter de la cadena no administrada.</span><span class="sxs-lookup"><span data-stu-id="ce515-1205">The address of the first character of the unmanaged string.</span></span></param>
        <param name="len"><span data-ttu-id="ce515-1206">Número de bytes de la cadena de entrada que se va a copiar.</span><span class="sxs-lookup"><span data-stu-id="ce515-1206">The byte count of the input string to copy.</span></span></param>
        <summary><span data-ttu-id="ce515-1207">Asigna un <see cref="T:System.String" />, administrado, copia en él un número especificado de caracteres de una cadena ANSI no administrada y ensancha cada carácter ANSI a Unicode.</span><span class="sxs-lookup"><span data-stu-id="ce515-1207">Allocates a managed <see cref="T:System.String" />, copies a specified number of characters from an unmanaged ANSI string into it, and widens each ANSI character to Unicode.</span></span></summary>
        <returns><span data-ttu-id="ce515-1208">Cadena administrada que contiene una copia de la cadena ANSI nativa si el valor del parámetro <paramref name="ptr" /> no es <see langword="null" />; de lo contrario, este método devuelve <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-1208">A managed string that holds a copy of the native ANSI string if the value of the <paramref name="ptr" /> parameter is not <see langword="null" />; otherwise, this method returns <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-1209"><xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A> es útil para el cálculo de referencias personalizado o al mezclar código administrado y no administrado.</span><span class="sxs-lookup"><span data-stu-id="ce515-1209"><xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A> is useful for custom marshaling or when mixing managed and unmanaged code.</span></span> <span data-ttu-id="ce515-1210">Dado que este método crea una copia del contenido de la cadena no administrada, debe liberar la cadena original según corresponda.</span><span class="sxs-lookup"><span data-stu-id="ce515-1210">Because this method creates a copy of the unmanaged string's contents, you must free the original string as appropriate.</span></span> <span data-ttu-id="ce515-1211">Este método proporciona la funcionalidad opuesta de la <xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAnsi%2A?displayProperty=nameWithType> y <xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi%2A?displayProperty=nameWithType> métodos.</span><span class="sxs-lookup"><span data-stu-id="ce515-1211">This method provides the opposite functionality of the <xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAnsi%2A?displayProperty=nameWithType> and <xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi%2A?displayProperty=nameWithType> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ce515-1212">En el ejemplo siguiente se usa el <xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A> método para crear una cadena administrada de una unmanaged`char` matriz.</span><span class="sxs-lookup"><span data-stu-id="ce515-1212">The following example uses the <xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A> method to create a managed string from an unmanaged`char` array.</span></span>  
  
 [!code-cpp[Runtime.InteropServices.Marshal.PtrToStringAnsi-IntPtr-int#1](~/samples/snippets/cpp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.PtrToStringAnsi-IntPtr-int/cpp/sample.cpp#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ce515-1213"><paramref name="len" /> es menor que cero.</span><span class="sxs-lookup"><span data-stu-id="ce515-1213"><paramref name="len" /> is less than zero.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-1214">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-1214">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-1215">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-1215">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAnsi(System.String)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="PtrToStringAuto">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ce515-1216">Asigna un <see cref="T:System.String" /> administrado y copia en él total o parcialmente una cadena no administrada.</span><span class="sxs-lookup"><span data-stu-id="ce515-1216">Allocates a managed <see cref="T:System.String" /> and copies all or part of an unmanaged string into it.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="PtrToStringAuto">
      <MemberSignature Language="C#" Value="public static string PtrToStringAuto (IntPtr ptr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PtrToStringAuto(native int ptr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.PtrToStringAuto(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PtrToStringAuto (ptr As IntPtr) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ PtrToStringAuto(IntPtr ptr);" />
      <MemberSignature Language="F#" Value="static member PtrToStringAuto : nativeint -&gt; string" Usage="System.Runtime.InteropServices.Marshal.PtrToStringAuto ptr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="ptr"><span data-ttu-id="ce515-1217">Para las plataformas Unicode, la dirección del primer carácter Unicode.</span><span class="sxs-lookup"><span data-stu-id="ce515-1217">For Unicode platforms, the address of the first Unicode character.</span></span>  
  
<span data-ttu-id="ce515-1218">O bien</span><span class="sxs-lookup"><span data-stu-id="ce515-1218">-or-</span></span> 
<span data-ttu-id="ce515-1219">Para las plataformas ANSI, la dirección del primer carácter ANSI.</span><span class="sxs-lookup"><span data-stu-id="ce515-1219">For ANSI plaforms, the address of the first ANSI character.</span></span></param>
        <summary><span data-ttu-id="ce515-1220">Asigna un <see cref="T:System.String" /> administrado y copia en él todos los caracteres hasta el primer carácter nulo de una cadena almacenada en memoria no administrada.</span><span class="sxs-lookup"><span data-stu-id="ce515-1220">Allocates a managed <see cref="T:System.String" /> and copies all characters up to the first null character from a string stored in unmanaged memory into it.</span></span></summary>
        <returns><span data-ttu-id="ce515-1221">Cadena administrada que contiene una copia de la cadena no administrada si el valor del parámetro <paramref name="ptr" /> no es <see langword="null" />; en caso contrario, este método devuelve <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-1221">A managed string that holds a copy of the unmanaged string if the value of the <paramref name="ptr" /> parameter is not <see langword="null" />; otherwise, this method returns <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-1222">Si la plataforma actual es Unicode, cada carácter ANSI se convierte en un carácter Unicode y llama este método <xref:System.Runtime.InteropServices.Marshal.PtrToStringUni%2A>.</span><span class="sxs-lookup"><span data-stu-id="ce515-1222">If the current platform is Unicode, each ANSI character is widened to a Unicode character and this method calls <xref:System.Runtime.InteropServices.Marshal.PtrToStringUni%2A>.</span></span> <span data-ttu-id="ce515-1223">En caso contrario, este método llama a <xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A>.</span><span class="sxs-lookup"><span data-stu-id="ce515-1223">Otherwise, this method calls <xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A>.</span></span>  
  
 <span data-ttu-id="ce515-1224"><xref:System.Runtime.InteropServices.Marshal.PtrToStringAuto%2A> es útil para el cálculo de referencias personalizado o al mezclar código administrado y no administrado.</span><span class="sxs-lookup"><span data-stu-id="ce515-1224"><xref:System.Runtime.InteropServices.Marshal.PtrToStringAuto%2A> is useful for custom marshaling or when mixing managed and unmanaged code.</span></span> <span data-ttu-id="ce515-1225">Dado que este método crea una copia del contenido de la cadena no administrada, debe liberar la cadena original según corresponda.</span><span class="sxs-lookup"><span data-stu-id="ce515-1225">Because this method creates a copy of the unmanaged string's contents, you must free the original string as appropriate.</span></span> <span data-ttu-id="ce515-1226"><xref:System.Runtime.InteropServices.Marshal.PtrToStringAuto%2A> proporciona la funcionalidad opuesta de la <xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAuto%2A?displayProperty=nameWithType> y <xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAuto%2A?displayProperty=nameWithType> métodos.</span><span class="sxs-lookup"><span data-stu-id="ce515-1226"><xref:System.Runtime.InteropServices.Marshal.PtrToStringAuto%2A> provides the opposite functionality of the <xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAuto%2A?displayProperty=nameWithType> and <xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAuto%2A?displayProperty=nameWithType> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-1227">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-1227">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-1228">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-1228">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAuto(System.String)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.StringToHGlobalAuto(System.String)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.PtrToStringUni(System.IntPtr,System.Int32)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.PtrToStringAnsi(System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="PtrToStringAuto">
      <MemberSignature Language="C#" Value="public static string PtrToStringAuto (IntPtr ptr, int len);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PtrToStringAuto(native int ptr, int32 len) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.PtrToStringAuto(System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PtrToStringAuto (ptr As IntPtr, len As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ PtrToStringAuto(IntPtr ptr, int len);" />
      <MemberSignature Language="F#" Value="static member PtrToStringAuto : nativeint * int -&gt; string" Usage="System.Runtime.InteropServices.Marshal.PtrToStringAuto (ptr, len)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="len" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ptr"><span data-ttu-id="ce515-1229">Para las plataformas Unicode, la dirección del primer carácter Unicode.</span><span class="sxs-lookup"><span data-stu-id="ce515-1229">For Unicode platforms, the address of the first Unicode character.</span></span>  
  
<span data-ttu-id="ce515-1230">O bien</span><span class="sxs-lookup"><span data-stu-id="ce515-1230">-or-</span></span> 
<span data-ttu-id="ce515-1231">Para las plataformas ANSI, la dirección del primer carácter ANSI.</span><span class="sxs-lookup"><span data-stu-id="ce515-1231">For ANSI plaforms, the address of the first ANSI character.</span></span></param>
        <param name="len"><span data-ttu-id="ce515-1232">Número de caracteres que se van a copiar.</span><span class="sxs-lookup"><span data-stu-id="ce515-1232">The number of characters to copy.</span></span></param>
        <summary><span data-ttu-id="ce515-1233">Asigna un <see cref="T:System.String" /> administrado y copia en él el número de caracteres especificado de una cadena almacenada en memoria no administrada.</span><span class="sxs-lookup"><span data-stu-id="ce515-1233">Allocates a managed <see cref="T:System.String" /> and copies the specified number of characters from a string stored in unmanaged memory into it.</span></span></summary>
        <returns><span data-ttu-id="ce515-1234">Una cadena administrada que contiene una copia de la cadena nativa si el valor del parámetro <paramref name="ptr" /> no es <see langword="null" />; en caso contrario, este método devuelve <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-1234">A managed string that holds a copy of the native string if the value of the <paramref name="ptr" /> parameter is not <see langword="null" />; otherwise, this method returns <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-1235">En las plataformas Unicode, este método llama a <xref:System.Runtime.InteropServices.Marshal.PtrToStringUni%2A>; en las plataformas ANSI, llama a <xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A>.</span><span class="sxs-lookup"><span data-stu-id="ce515-1235">On Unicode platforms, this method calls <xref:System.Runtime.InteropServices.Marshal.PtrToStringUni%2A>; on ANSI platforms, it calls <xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A>.</span></span> <span data-ttu-id="ce515-1236">Antes de llamar a estos métodos, se realiza ninguna transformación.</span><span class="sxs-lookup"><span data-stu-id="ce515-1236">No transformations are done before these methods are called.</span></span>  
  
 <span data-ttu-id="ce515-1237"><xref:System.Runtime.InteropServices.Marshal.PtrToStringAuto%2A> es útil para el cálculo de referencias personalizado o al mezclar código administrado y no administrado.</span><span class="sxs-lookup"><span data-stu-id="ce515-1237"><xref:System.Runtime.InteropServices.Marshal.PtrToStringAuto%2A> is useful for custom marshaling or when mixing managed and unmanaged code.</span></span> <span data-ttu-id="ce515-1238">Dado que este método crea una copia del contenido de la cadena no administrada, debe liberar la cadena original según corresponda.</span><span class="sxs-lookup"><span data-stu-id="ce515-1238">Because this method creates a copy of the unmanaged string's contents, you must free the original string as appropriate.</span></span> <span data-ttu-id="ce515-1239"><xref:System.Runtime.InteropServices.Marshal.PtrToStringAuto%2A> proporciona la funcionalidad de opuesta <xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAuto%2A?displayProperty=nameWithType> y <xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAuto%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ce515-1239"><xref:System.Runtime.InteropServices.Marshal.PtrToStringAuto%2A> provides the opposite functionality of <xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAuto%2A?displayProperty=nameWithType> and <xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAuto%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ce515-1240"><paramref name="len" /> es menor que cero.</span><span class="sxs-lookup"><span data-stu-id="ce515-1240"><paramref name="len" /> is less than zero.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-1241">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-1241">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-1242">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-1242">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAuto(System.String)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.StringToHGlobalAuto(System.String)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.PtrToStringUni(System.IntPtr,System.Int32)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.PtrToStringAnsi(System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="PtrToStringBSTR">
      <MemberSignature Language="C#" Value="public static string PtrToStringBSTR (IntPtr ptr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PtrToStringBSTR(native int ptr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.PtrToStringBSTR(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PtrToStringBSTR (ptr As IntPtr) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ PtrToStringBSTR(IntPtr ptr);" />
      <MemberSignature Language="F#" Value="static member PtrToStringBSTR : nativeint -&gt; string" Usage="System.Runtime.InteropServices.Marshal.PtrToStringBSTR ptr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="ptr"><span data-ttu-id="ce515-1243">Dirección del primer carácter de la cadena no administrada.</span><span class="sxs-lookup"><span data-stu-id="ce515-1243">The address of the first character of the unmanaged string.</span></span></param>
        <summary><span data-ttu-id="ce515-1244">Asigna un <see cref="T:System.String" /> administrado y copia en él una [cadena binaria (BSTR)](https://msdn.microsoft.com/library/ms221069\(v=vs.85\).aspx) almacenada en memoria no administrada.</span><span class="sxs-lookup"><span data-stu-id="ce515-1244">Allocates a managed <see cref="T:System.String" /> and copies a [binary string (BSTR)](https://msdn.microsoft.com/library/ms221069\(v=vs.85\).aspx) stored in unmanaged memory into it.</span></span></summary>
        <returns><span data-ttu-id="ce515-1245">Cadena administrada que contiene una copia de la cadena no administrada.</span><span class="sxs-lookup"><span data-stu-id="ce515-1245">A managed string that holds a copy of the unmanaged string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-1246">Llame a este método solo en las cadenas que se asignaron con no administrado [SysAllocString](https://msdn.microsoft.com/library/ms221458\(v=vs.85\).aspx) y [SysAllocStringLen](https://msdn.microsoft.com/library/ms221639\(v=vs.85\).aspx) funciones.</span><span class="sxs-lookup"><span data-stu-id="ce515-1246">Call this method only on strings that were allocated with the unmanaged [SysAllocString](https://msdn.microsoft.com/library/ms221458\(v=vs.85\).aspx) and [SysAllocStringLen](https://msdn.microsoft.com/library/ms221639\(v=vs.85\).aspx) functions.</span></span>  
  
 <span data-ttu-id="ce515-1247"><xref:System.Runtime.InteropServices.Marshal.PtrToStringBSTR%2A> es útil para el cálculo de referencias personalizado o al mezclar código administrado y no administrado.</span><span class="sxs-lookup"><span data-stu-id="ce515-1247"><xref:System.Runtime.InteropServices.Marshal.PtrToStringBSTR%2A> is useful for custom marshaling or when mixing managed and unmanaged code.</span></span> <span data-ttu-id="ce515-1248">Dado que este método crea una copia del contenido de la cadena no administrada, debe liberar la cadena original según corresponda.</span><span class="sxs-lookup"><span data-stu-id="ce515-1248">Because this method creates a copy of the unmanaged string's contents, you must free the original string as appropriate.</span></span> <span data-ttu-id="ce515-1249">Este método proporciona la funcionalidad opuesta de la <xref:System.Runtime.InteropServices.Marshal.StringToBSTR%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="ce515-1249">This method provides the opposite functionality of the <xref:System.Runtime.InteropServices.Marshal.StringToBSTR%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ce515-1250"><paramref name="ptr" /> es igual que <see cref="F:System.IntPtr.Zero" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-1250"><paramref name="ptr" /> equals <see cref="F:System.IntPtr.Zero" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-1251">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-1251">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-1252">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-1252">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.StringToBSTR(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="PtrToStringUni">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ce515-1253">Asigna un <see cref="T:System.String" /> administrado y copia en él total o parcialmente una cadena Unicode no administrada.</span><span class="sxs-lookup"><span data-stu-id="ce515-1253">Allocates a managed <see cref="T:System.String" /> and copies all or part of an unmanaged Unicode string into it.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="PtrToStringUni">
      <MemberSignature Language="C#" Value="public static string PtrToStringUni (IntPtr ptr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PtrToStringUni(native int ptr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.PtrToStringUni(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PtrToStringUni (ptr As IntPtr) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ PtrToStringUni(IntPtr ptr);" />
      <MemberSignature Language="F#" Value="static member PtrToStringUni : nativeint -&gt; string" Usage="System.Runtime.InteropServices.Marshal.PtrToStringUni ptr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="ptr"><span data-ttu-id="ce515-1254">Dirección del primer carácter de la cadena no administrada.</span><span class="sxs-lookup"><span data-stu-id="ce515-1254">The address of the first character of the unmanaged string.</span></span></param>
        <summary><span data-ttu-id="ce515-1255">Asigna un <see cref="T:System.String" /> administrado y copia en él todos los caracteres hasta el primer carácter nulo de una cadena Unicode no administrada.</span><span class="sxs-lookup"><span data-stu-id="ce515-1255">Allocates a managed <see cref="T:System.String" /> and copies all characters up to the first null character from an unmanaged Unicode string into it.</span></span></summary>
        <returns><span data-ttu-id="ce515-1256">Cadena administrada que contiene una copia de la cadena no administrada si el valor del parámetro <paramref name="ptr" /> no es <see langword="null" />; en caso contrario, este método devuelve <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-1256">A managed string that holds a copy of the unmanaged string if the value of the <paramref name="ptr" /> parameter is not <see langword="null" />; otherwise, this method returns <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-1257"><xref:System.Runtime.InteropServices.Marshal.PtrToStringUni%2A> es útil para el cálculo de referencias personalizado o para su uso al mezclar código administrado y no administrado.</span><span class="sxs-lookup"><span data-stu-id="ce515-1257"><xref:System.Runtime.InteropServices.Marshal.PtrToStringUni%2A> is useful for custom marshaling or for use when mixing managed and unmanaged code.</span></span> <span data-ttu-id="ce515-1258">Dado que este método crea una copia del contenido de la cadena no administrada, debe liberar la cadena original según corresponda.</span><span class="sxs-lookup"><span data-stu-id="ce515-1258">Because this method creates a copy of the unmanaged string's contents, you must free the original string as appropriate.</span></span> <span data-ttu-id="ce515-1259">Este método proporciona la funcionalidad opuesta de la <xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemUni%2A?displayProperty=nameWithType> y <xref:System.Runtime.InteropServices.Marshal.StringToHGlobalUni%2A?displayProperty=nameWithType> métodos.</span><span class="sxs-lookup"><span data-stu-id="ce515-1259">This method provides the opposite functionality of the <xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemUni%2A?displayProperty=nameWithType> and <xref:System.Runtime.InteropServices.Marshal.StringToHGlobalUni%2A?displayProperty=nameWithType> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-1260">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-1260">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-1261">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-1261">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAnsi(System.String)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="PtrToStringUni">
      <MemberSignature Language="C#" Value="public static string PtrToStringUni (IntPtr ptr, int len);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PtrToStringUni(native int ptr, int32 len) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.PtrToStringUni(System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PtrToStringUni (ptr As IntPtr, len As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ PtrToStringUni(IntPtr ptr, int len);" />
      <MemberSignature Language="F#" Value="static member PtrToStringUni : nativeint * int -&gt; string" Usage="System.Runtime.InteropServices.Marshal.PtrToStringUni (ptr, len)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="len" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ptr"><span data-ttu-id="ce515-1262">Dirección del primer carácter de la cadena no administrada.</span><span class="sxs-lookup"><span data-stu-id="ce515-1262">The address of the first character of the unmanaged string.</span></span></param>
        <param name="len"><span data-ttu-id="ce515-1263">Número de caracteres Unicode que se van a copiar.</span><span class="sxs-lookup"><span data-stu-id="ce515-1263">The number of Unicode characters to copy.</span></span></param>
        <summary><span data-ttu-id="ce515-1264">Asigna un <see cref="T:System.String" /> administrado y copia en él un número de caracteres especificado de una cadena Unicode no administrada.</span><span class="sxs-lookup"><span data-stu-id="ce515-1264">Allocates a managed <see cref="T:System.String" /> and copies a specified number of characters from an unmanaged Unicode string into it.</span></span></summary>
        <returns><span data-ttu-id="ce515-1265">Cadena administrada que contiene una copia de la cadena no administrada si el valor del parámetro <paramref name="ptr" /> no es <see langword="null" />; en caso contrario, este método devuelve <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-1265">A managed string that holds a copy of the unmanaged string if the value of the <paramref name="ptr" /> parameter is not <see langword="null" />; otherwise, this method returns <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-1266"><xref:System.Runtime.InteropServices.Marshal.PtrToStringUni%2A> es útil para el cálculo de referencias personalizado o al mezclar código administrado y no administrado.</span><span class="sxs-lookup"><span data-stu-id="ce515-1266"><xref:System.Runtime.InteropServices.Marshal.PtrToStringUni%2A> is useful for custom marshaling or when mixing managed and unmanaged code.</span></span> <span data-ttu-id="ce515-1267">Dado que este método crea una copia del contenido de la cadena no administrada, debe liberar la cadena original según corresponda.</span><span class="sxs-lookup"><span data-stu-id="ce515-1267">Because this method creates a copy of the unmanaged string's contents, you must free the original string as appropriate.</span></span> <span data-ttu-id="ce515-1268">Este método proporciona la funcionalidad opuesta de la <xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemUni%2A?displayProperty=nameWithType> y <xref:System.Runtime.InteropServices.Marshal.StringToHGlobalUni%2A?displayProperty=nameWithType> métodos.</span><span class="sxs-lookup"><span data-stu-id="ce515-1268">This method provides the opposite functionality of the <xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemUni%2A?displayProperty=nameWithType> and <xref:System.Runtime.InteropServices.Marshal.StringToHGlobalUni%2A?displayProperty=nameWithType> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-1269">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-1269">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-1270">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-1270">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAnsi(System.String)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="PtrToStringUTF8">
      <MemberSignature Language="C#" Value="public static string PtrToStringUTF8 (IntPtr ptr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PtrToStringUTF8(native int ptr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.PtrToStringUTF8(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PtrToStringUTF8 (ptr As IntPtr) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ PtrToStringUTF8(IntPtr ptr);" />
      <MemberSignature Language="F#" Value="static member PtrToStringUTF8 : nativeint -&gt; string" Usage="System.Runtime.InteropServices.Marshal.PtrToStringUTF8 ptr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.1">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="ptr">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PtrToStringUTF8">
      <MemberSignature Language="C#" Value="public static string PtrToStringUTF8 (IntPtr ptr, int byteLen);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PtrToStringUTF8(native int ptr, int32 byteLen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.PtrToStringUTF8(System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PtrToStringUTF8 (ptr As IntPtr, byteLen As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ PtrToStringUTF8(IntPtr ptr, int byteLen);" />
      <MemberSignature Language="F#" Value="static member PtrToStringUTF8 : nativeint * int -&gt; string" Usage="System.Runtime.InteropServices.Marshal.PtrToStringUTF8 (ptr, byteLen)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.1">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="byteLen" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ptr">To be added.</param>
        <param name="byteLen">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="PtrToStructure">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ce515-1271">Calcula las referencias a los datos desde un bloque de memoria no administrada a un objeto administrado.</span><span class="sxs-lookup"><span data-stu-id="ce515-1271">Marshals data from an unmanaged block of memory to a managed object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="PtrToStructure">
      <MemberSignature Language="C#" Value="public static void PtrToStructure (IntPtr ptr, object structure);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PtrToStructure(native int ptr, object structure) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.PtrToStructure(System.IntPtr,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub PtrToStructure (ptr As IntPtr, structure As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void PtrToStructure(IntPtr ptr, System::Object ^ structure);" />
      <MemberSignature Language="F#" Value="static member PtrToStructure : nativeint * obj -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.PtrToStructure (ptr, structure)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netcore-2.2">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Obsolete("PtrToStructure(IntPtr, Object) may be unavailable in future releases. Instead, use PtrToStructure&lt;T&gt;(IntPtr). For more info, go to http://go.microsoft.com/fwlink/?LinkID=296512")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="structure" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="ptr"><span data-ttu-id="ce515-1272">Puntero a un bloque de memoria no administrado.</span><span class="sxs-lookup"><span data-stu-id="ce515-1272">A pointer to an unmanaged block of memory.</span></span></param>
        <param name="structure"><span data-ttu-id="ce515-1273">Objeto en el que se copiarán los datos.</span><span class="sxs-lookup"><span data-stu-id="ce515-1273">The object to which the data is to be copied.</span></span> <span data-ttu-id="ce515-1274">Este objeto debe ser una instancia de una clase con formato.</span><span class="sxs-lookup"><span data-stu-id="ce515-1274">This must be an instance of a formatted class.</span></span></param>
        <summary><span data-ttu-id="ce515-1275">Calcula las referencias a los datos desde un bloque de memoria no administrada a un objeto administrado.</span><span class="sxs-lookup"><span data-stu-id="ce515-1275">Marshals data from an unmanaged block of memory to a managed object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-1276"><xref:System.Runtime.InteropServices.Marshal.PtrToStructure%2A> a menudo es necesario en COM interop e invocación de plataforma cuando los parámetros de la estructura se representan como un <xref:System.IntPtr?displayProperty=nameWithType> valor.</span><span class="sxs-lookup"><span data-stu-id="ce515-1276"><xref:System.Runtime.InteropServices.Marshal.PtrToStructure%2A> is often necessary in COM interop and platform invoke when structure parameters are represented as an <xref:System.IntPtr?displayProperty=nameWithType> value.</span></span> <span data-ttu-id="ce515-1277">No se puede usar este método de sobrecarga con tipos de valor.</span><span class="sxs-lookup"><span data-stu-id="ce515-1277">You cannot use this overload method with value types.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ce515-1278">El diseño de la estructura no es secuencial ni explícito.</span><span class="sxs-lookup"><span data-stu-id="ce515-1278">Structure layout is not sequential or explicit.</span></span>  
  
<span data-ttu-id="ce515-1279">O bien</span><span class="sxs-lookup"><span data-stu-id="ce515-1279">-or-</span></span> 
<span data-ttu-id="ce515-1280">La estructura es un tipo de valor al que se ha aplicado la conversión boxing.</span><span class="sxs-lookup"><span data-stu-id="ce515-1280">Structure is a boxed value type.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-1281">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-1281">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-1282">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-1282">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="PtrToStructure">
      <MemberSignature Language="C#" Value="public static object PtrToStructure (IntPtr ptr, Type structureType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object PtrToStructure(native int ptr, class System.Type structureType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.PtrToStructure(System.IntPtr,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PtrToStructure (ptr As IntPtr, structureType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ PtrToStructure(IntPtr ptr, Type ^ structureType);" />
      <MemberSignature Language="F#" Value="static member PtrToStructure : nativeint * Type -&gt; obj" Usage="System.Runtime.InteropServices.Marshal.PtrToStructure (ptr, structureType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netcore-2.2">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Obsolete("PtrToStructure(IntPtr, Type) may be unavailable in future releases. Instead, use PtrToStructure&lt;T&gt;(IntPtr). For more info, go to http://go.microsoft.com/fwlink/?LinkID=296513")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="structureType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="ptr"><span data-ttu-id="ce515-1283">Puntero a un bloque de memoria no administrado.</span><span class="sxs-lookup"><span data-stu-id="ce515-1283">A pointer to an unmanaged block of memory.</span></span></param>
        <param name="structureType"><span data-ttu-id="ce515-1284">Tipo de objeto que se va a crear.</span><span class="sxs-lookup"><span data-stu-id="ce515-1284">The type of object to be created.</span></span> <span data-ttu-id="ce515-1285">Este objeto debe representar una clase con formato o una estructura.</span><span class="sxs-lookup"><span data-stu-id="ce515-1285">This object must represent a formatted class or a structure.</span></span></param>
        <summary><span data-ttu-id="ce515-1286">Calcula las referencias a los datos desde un bloque de memoria no administrado a un objeto administrado y recién asignado del tipo especificado.</span><span class="sxs-lookup"><span data-stu-id="ce515-1286">Marshals data from an unmanaged block of memory to a newly allocated managed object of the specified type.</span></span></summary>
        <returns><span data-ttu-id="ce515-1287">Objeto administrado que contiene los datos a los que apunta el parámetro <paramref name="ptr" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-1287">A managed object containing the data pointed to by the <paramref name="ptr" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-1288"><xref:System.Runtime.InteropServices.Marshal.PtrToStructure%2A> a menudo es necesario en COM interop e invocación de plataforma cuando los parámetros de la estructura se representan como un <xref:System.IntPtr?displayProperty=nameWithType> valor.</span><span class="sxs-lookup"><span data-stu-id="ce515-1288"><xref:System.Runtime.InteropServices.Marshal.PtrToStructure%2A> is often necessary in COM interop and platform invoke when structure parameters are represented as an <xref:System.IntPtr?displayProperty=nameWithType> value.</span></span> <span data-ttu-id="ce515-1289">Puede pasar un tipo de valor a este método de sobrecarga.</span><span class="sxs-lookup"><span data-stu-id="ce515-1289">You can pass a value type to this overload method.</span></span> <span data-ttu-id="ce515-1290">En este caso, el objeto devuelto es una instancia de la conversión boxing.</span><span class="sxs-lookup"><span data-stu-id="ce515-1290">In this case, the returned object is a boxed instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ce515-1291">El ejemplo siguiente se crea una estructura administrada, se transfiere a la memoria no administrada y, a continuación, se transfiere de nuevo a la memoria administrada usando el <xref:System.Runtime.InteropServices.Marshal.PtrToStructure%2A> método.</span><span class="sxs-lookup"><span data-stu-id="ce515-1291">The following example creates a managed structure, transfers it to unmanaged memory, and then transfers it back to managed memory using the <xref:System.Runtime.InteropServices.Marshal.PtrToStructure%2A> method.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.PtrToStructure-SizeOf#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.PtrToStructure-SizeOf/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.PtrToStructure-SizeOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.PtrToStructure-SizeOf/vb/sample.vb#1)]  
  
 <span data-ttu-id="ce515-1292">En el ejemplo siguiente se muestra cómo calcular las referencias de un bloque no administrado de memoria a una estructura administrada mediante el <xref:System.Runtime.InteropServices.Marshal.PtrToStructure%2A> método.</span><span class="sxs-lookup"><span data-stu-id="ce515-1292">The following example demonstrates how to marshal an unmanaged block of memory to a managed structure using the <xref:System.Runtime.InteropServices.Marshal.PtrToStructure%2A> method.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ce515-1293">Este código supone la compilación de 32 bits.</span><span class="sxs-lookup"><span data-stu-id="ce515-1293">This code assumes 32-bit compilation.</span></span> <span data-ttu-id="ce515-1294">Antes de usar un compilador de 64 bits, reemplace <xref:System.IntPtr.ToInt32%2A?displayProperty=nameWithType> con <xref:System.IntPtr.ToInt64%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ce515-1294">Before using a 64-bit compiler, replace <xref:System.IntPtr.ToInt32%2A?displayProperty=nameWithType> with <xref:System.IntPtr.ToInt64%2A?displayProperty=nameWithType>.</span></span>  
  
 [!code-cpp[PtrToStructure#1](~/samples/snippets/cpp/VS_Snippets_CLR/PtrToStructure/CPP/pts.cpp#1)]
 [!code-csharp[PtrToStructure#1](~/samples/snippets/csharp/VS_Snippets_CLR/PtrToStructure/CS/pts.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ce515-1295">El diseño del parámetro <paramref name="structureType" /> no es secuencial ni explícito.</span><span class="sxs-lookup"><span data-stu-id="ce515-1295">The <paramref name="structureType" /> parameter layout is not sequential or explicit.</span></span>  
  
<span data-ttu-id="ce515-1296">O bien</span><span class="sxs-lookup"><span data-stu-id="ce515-1296">-or-</span></span> 
<span data-ttu-id="ce515-1297">El parámetro <paramref name="structureType" /> es una definición de tipo genérico.</span><span class="sxs-lookup"><span data-stu-id="ce515-1297">The <paramref name="structureType" /> parameter is a generic type definition.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ce515-1298">El valor de <paramref name="structureType" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-1298"><paramref name="structureType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="ce515-1299">La clase especificada por <paramref name="structureType" /> no tiene un constructor predeterminado accesible.</span><span class="sxs-lookup"><span data-stu-id="ce515-1299">The class specified by <paramref name="structureType" /> does not have an accessible default constructor.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-1300">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-1300">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-1301">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-1301">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.UCOMITypeInfo.GetTypeAttr(System.IntPtr@)" />
      </Docs>
    </Member>
    <Member MemberName="PtrToStructure&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T PtrToStructure&lt;T&gt; (IntPtr ptr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T PtrToStructure&lt;T&gt;(native int ptr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.PtrToStructure``1(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PtrToStructure(Of T) (ptr As IntPtr) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static T PtrToStructure(IntPtr ptr);" />
      <MemberSignature Language="F#" Value="static member PtrToStructure : nativeint -&gt; 'T" Usage="System.Runtime.InteropServices.Marshal.PtrToStructure ptr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="ce515-1302">Tipo de objeto en el que se copiarán los datos.</span><span class="sxs-lookup"><span data-stu-id="ce515-1302">The type of the object to which the data is to be copied.</span></span> <span data-ttu-id="ce515-1303">Este objeto debe ser una clase con formato o una estructura.</span><span class="sxs-lookup"><span data-stu-id="ce515-1303">This must be a formatted class or a structure.</span></span></typeparam>
        <param name="ptr"><span data-ttu-id="ce515-1304">Puntero a un bloque de memoria no administrado.</span><span class="sxs-lookup"><span data-stu-id="ce515-1304">A pointer to an unmanaged block of memory.</span></span></param>
        <summary><span data-ttu-id="ce515-1305">[Compatible con .NET Framework 4.5.1 y versiones posteriores]</span><span class="sxs-lookup"><span data-stu-id="ce515-1305">[Supported in the .NET Framework 4.5.1 and later versions]</span></span> 
<span data-ttu-id="ce515-1306">Serializa las referencias a los datos desde un bloque de memoria no administrado a un objeto administrado y recién asignado del tipo especificado por un parámetro de tipo genérico.</span><span class="sxs-lookup"><span data-stu-id="ce515-1306">Marshals data from an unmanaged block of memory to a newly allocated managed object of the type specified by a generic type parameter.</span></span></summary>
        <returns><span data-ttu-id="ce515-1307">Objeto administrado que contiene los datos a los que apunta el parámetro <paramref name="ptr" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-1307">A managed object that contains the data that the <paramref name="ptr" /> parameter points to.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-1308"><xref:System.Runtime.InteropServices.Marshal.PtrToStructure%60%601%28System.IntPtr%29> a menudo es necesario en COM interop e invocación de plataforma cuando los parámetros de la estructura se representan como <xref:System.IntPtr?displayProperty=nameWithType> valores.</span><span class="sxs-lookup"><span data-stu-id="ce515-1308"><xref:System.Runtime.InteropServices.Marshal.PtrToStructure%60%601%28System.IntPtr%29> is often necessary in COM interop and platform invoke when structure parameters are represented as <xref:System.IntPtr?displayProperty=nameWithType> values.</span></span> <span data-ttu-id="ce515-1309">Puede pasar un tipo de valor a esta sobrecarga del método.</span><span class="sxs-lookup"><span data-stu-id="ce515-1309">You can pass a value type to this method overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ce515-1310">El diseño de <typeparamref name="T" /> no es secuencial ni explícito.</span><span class="sxs-lookup"><span data-stu-id="ce515-1310">The layout of <typeparamref name="T" /> is not sequential or explicit.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="ce515-1311">La clase especificada por <typeparamref name="T" /> no tiene un constructor predeterminado accesible.</span><span class="sxs-lookup"><span data-stu-id="ce515-1311">The class specified by <typeparamref name="T" /> does not have an accessible default constructor.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-1312">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-1312">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-1313">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-1313">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="PtrToStructure&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void PtrToStructure&lt;T&gt; (IntPtr ptr, T structure);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PtrToStructure&lt;T&gt;(native int ptr, !!T structure) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.PtrToStructure``1(System.IntPtr,``0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub PtrToStructure(Of T) (ptr As IntPtr, structure As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static void PtrToStructure(IntPtr ptr, T structure);" />
      <MemberSignature Language="F#" Value="static member PtrToStructure : nativeint * 'T -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.PtrToStructure (ptr, structure)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="structure" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="ce515-1314">Tipo de <paramref name="structure" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-1314">The type of <paramref name="structure" />.</span></span> <span data-ttu-id="ce515-1315">Debe ser una clase con formato.</span><span class="sxs-lookup"><span data-stu-id="ce515-1315">This must be a formatted class.</span></span></typeparam>
        <param name="ptr"><span data-ttu-id="ce515-1316">Puntero a un bloque de memoria no administrado.</span><span class="sxs-lookup"><span data-stu-id="ce515-1316">A pointer to an unmanaged block of memory.</span></span></param>
        <param name="structure"><span data-ttu-id="ce515-1317">Objeto en el que se copiarán los datos.</span><span class="sxs-lookup"><span data-stu-id="ce515-1317">The object to which the data is to be copied.</span></span></param>
        <summary><span data-ttu-id="ce515-1318">[Compatible con .NET Framework 4.5.1 y versiones posteriores]</span><span class="sxs-lookup"><span data-stu-id="ce515-1318">[Supported in the .NET Framework 4.5.1 and later versions]</span></span> 
<span data-ttu-id="ce515-1319">Calcula las referencias desde un bloque de memoria no administrado a un objeto administrado de un tipo especificado.</span><span class="sxs-lookup"><span data-stu-id="ce515-1319">Marshals data from an unmanaged block of memory to a managed object of the specified type.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-1320"><xref:System.Runtime.InteropServices.Marshal.PtrToStructure%60%601%28System.IntPtr%2C%60%600%29> a menudo es necesario en COM interop e invocación de plataforma cuando los parámetros de la estructura se representan como <xref:System.IntPtr> valores.</span><span class="sxs-lookup"><span data-stu-id="ce515-1320"><xref:System.Runtime.InteropServices.Marshal.PtrToStructure%60%601%28System.IntPtr%2C%60%600%29> is often necessary in COM interop and platform invoke when structure parameters are represented as <xref:System.IntPtr> values.</span></span> <span data-ttu-id="ce515-1321">No se puede utilizar esta sobrecarga del método con tipos de valor.</span><span class="sxs-lookup"><span data-stu-id="ce515-1321">You cannot use this method overload with value types.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ce515-1322">El diseño de la estructura no es secuencial ni explícito.</span><span class="sxs-lookup"><span data-stu-id="ce515-1322">Structure layout is not sequential or explicit.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-1323">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-1323">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-1324">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-1324">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="QueryInterface">
      <MemberSignature Language="C#" Value="public static int QueryInterface (IntPtr pUnk, ref Guid iid, out IntPtr ppv);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 QueryInterface(native int pUnk, valuetype System.Guid&amp; iid, [out] native int&amp; ppv) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.QueryInterface(System.IntPtr,System.Guid@,System.IntPtr@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function QueryInterface (pUnk As IntPtr, ByRef iid As Guid, ByRef ppv As IntPtr) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int QueryInterface(IntPtr pUnk, Guid % iid, [Runtime::InteropServices::Out] IntPtr % ppv);" />
      <MemberSignature Language="F#" Value="static member QueryInterface : nativeint *  *  -&gt; int" Usage="System.Runtime.InteropServices.Marshal.QueryInterface (pUnk, iid, ppv)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pUnk" Type="System.IntPtr" />
        <Parameter Name="iid" Type="System.Guid" RefType="ref" />
        <Parameter Name="ppv" Type="System.IntPtr" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pUnk"><span data-ttu-id="ce515-1325">Interfaz que se va a consultar.</span><span class="sxs-lookup"><span data-stu-id="ce515-1325">The interface to be queried.</span></span></param>
        <param name="iid"><span data-ttu-id="ce515-1326">Identificador de interfaz (IID) de la interfaz solicitada.</span><span class="sxs-lookup"><span data-stu-id="ce515-1326">The interface identifier (IID) of the requested interface.</span></span></param>
        <param name="ppv"><span data-ttu-id="ce515-1327">Cuando este método finaliza, contiene una referencia a la interfaz devuelta.</span><span class="sxs-lookup"><span data-stu-id="ce515-1327">When this method returns, contains a reference to the returned interface.</span></span></param>
        <summary><span data-ttu-id="ce515-1328">Solicita un puntero a una interfaz especificada de un objeto COM.</span><span class="sxs-lookup"><span data-stu-id="ce515-1328">Requests a pointer to a specified interface from a COM object.</span></span></summary>
        <returns><span data-ttu-id="ce515-1329">HRESULT que indica si la llamada se realizó correctamente o no.</span><span class="sxs-lookup"><span data-stu-id="ce515-1329">An HRESULT that indicates the success or failure of the call.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-1330">El <xref:System.Runtime.InteropServices.Marshal.QueryInterface%2A> método expone el [IUnknown:: QueryInterface](https://go.microsoft.com/fwlink/?LinkID=144867) método de un objeto COM, que intenta obtener un puntero de interfaz específica.</span><span class="sxs-lookup"><span data-stu-id="ce515-1330">The <xref:System.Runtime.InteropServices.Marshal.QueryInterface%2A> method exposes the [IUnknown::QueryInterface](https://go.microsoft.com/fwlink/?LinkID=144867) method of a COM object, which attempts to obtain a specific interface pointer.</span></span> <span data-ttu-id="ce515-1331">Uso de `QueryInterface` en COM objeto es igual a realizar una operación de conversión en código administrado.</span><span class="sxs-lookup"><span data-stu-id="ce515-1331">Using `QueryInterface` on a COM object is the same as performing a cast operation in managed code.</span></span> <span data-ttu-id="ce515-1332">Llamar a un objeto con este método hace que el recuento de referencias se incrementa en el puntero de interfaz antes de devolver el puntero.</span><span class="sxs-lookup"><span data-stu-id="ce515-1332">Calling an object with this method causes the reference count to increment on the interface pointer before the pointer is returned.</span></span> <span data-ttu-id="ce515-1333">Utilice siempre <xref:System.Runtime.InteropServices.Marshal.Release%2A?displayProperty=nameWithType> para reducir el recuento de referencias cuando haya terminado con el puntero.</span><span class="sxs-lookup"><span data-stu-id="ce515-1333">Always use <xref:System.Runtime.InteropServices.Marshal.Release%2A?displayProperty=nameWithType> to decrement the reference count once you have finished with the pointer.</span></span> <span data-ttu-id="ce515-1334">Para obtener un <xref:System.IntPtr> valor que representa un [IUnknown](https://go.microsoft.com/fwlink/?LinkId=148003) puntero de interfaz, puede llamar a <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%2A?displayProperty=nameWithType>, <xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObject%2A?displayProperty=nameWithType>, o <xref:System.Runtime.InteropServices.Marshal.GetIDispatchForObject%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ce515-1334">To obtain an <xref:System.IntPtr> value that represents a [IUnknown](https://go.microsoft.com/fwlink/?LinkId=148003) interface pointer, you can call <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%2A?displayProperty=nameWithType>, <xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObject%2A?displayProperty=nameWithType>, or <xref:System.Runtime.InteropServices.Marshal.GetIDispatchForObject%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-1335">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-1335">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-1336">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-1336">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.AddRef(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Release(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetIUnknownForObject(System.Object)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetIDispatchForObject(System.Object)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetObjectForIUnknown(System.IntPtr)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadByte">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ce515-1337">Lee un único byte desde la memoria no administrada.</span><span class="sxs-lookup"><span data-stu-id="ce515-1337">Reads a single byte from unmanaged memory.</span></span> <span data-ttu-id="ce515-1338">Se admite la lectura desde ubicaciones de memoria desalineadas.</span><span class="sxs-lookup"><span data-stu-id="ce515-1338">Reading from unaligned memory locations is supported.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadByte">
      <MemberSignature Language="C#" Value="public static byte ReadByte (IntPtr ptr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ReadByte(native int ptr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReadByte(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadByte (ptr As IntPtr) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ReadByte(IntPtr ptr);" />
      <MemberSignature Language="F#" Value="static member ReadByte : nativeint -&gt; byte" Usage="System.Runtime.InteropServices.Marshal.ReadByte ptr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="ptr"><span data-ttu-id="ce515-1339">Dirección en la memoria no administrada desde la que se va a leer.</span><span class="sxs-lookup"><span data-stu-id="ce515-1339">The address in unmanaged memory from which to read.</span></span></param>
        <summary><span data-ttu-id="ce515-1340">Lee un único byte desde la memoria no administrada.</span><span class="sxs-lookup"><span data-stu-id="ce515-1340">Reads a single byte from unmanaged memory.</span></span></summary>
        <returns><span data-ttu-id="ce515-1341">Byte leído de la memoria no administrada.</span><span class="sxs-lookup"><span data-stu-id="ce515-1341">The byte read from unmanaged memory.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-1342"><xref:System.Runtime.InteropServices.Marshal.ReadByte%2A> tiene un desplazamiento implícito de 0.</span><span class="sxs-lookup"><span data-stu-id="ce515-1342"><xref:System.Runtime.InteropServices.Marshal.ReadByte%2A> has an implied offset of 0.</span></span> <span data-ttu-id="ce515-1343">Este método permite la interacción directa con una matriz de bytes de estilo C no administrada, lo que elimina el gasto de copiar toda una matriz no administrada (mediante <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) a una matriz administrada distinta antes de leer los valores de sus elementos.</span><span class="sxs-lookup"><span data-stu-id="ce515-1343">This method enables direct interaction with an unmanaged C-style byte array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before reading its element values.</span></span>  
  
 <span data-ttu-id="ce515-1344">Se admite la lectura desde ubicaciones de memoria desalineadas.</span><span class="sxs-lookup"><span data-stu-id="ce515-1344">Reading from unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ce515-1345">En el ejemplo siguiente se crea un bloque de memoria no administrada, se escribe un byte en la memoria no administrada, se vuelve a leer los bytes de memoria no administrada y, a continuación, elimina la memoria no administrada.</span><span class="sxs-lookup"><span data-stu-id="ce515-1345">The following example creates a block of unmanaged memory, writes a byte to the unmanaged memory, reads the byte back from unmanaged memory, and then disposes the unmanaged memory.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.ReadByte - WriteByte#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.ReadByte - WriteByte/cs/example.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.ReadByte - WriteByte#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.ReadByte - WriteByte/vb/example.vb#1)]  
  
 <span data-ttu-id="ce515-1346">En el ejemplo siguiente se muestra cómo usar el <xref:System.Runtime.InteropServices.Marshal.ReadByte%2A> método para leer el valor de un carácter no administrado.</span><span class="sxs-lookup"><span data-stu-id="ce515-1346">The following example demonstrates how to use the <xref:System.Runtime.InteropServices.Marshal.ReadByte%2A> method to read the value of an unmanaged character.</span></span>  
  
 [!code-cpp[Runtime.InteropServices.Marshal.ReadByte#1](~/samples/snippets/cpp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.ReadByte/cpp/sample.cpp#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException"><span data-ttu-id="ce515-1347"><paramref name="ptr" /> no es un formato reconocido.</span><span class="sxs-lookup"><span data-stu-id="ce515-1347"><paramref name="ptr" /> is not a recognized format.</span></span>  
  
<span data-ttu-id="ce515-1348">O bien</span><span class="sxs-lookup"><span data-stu-id="ce515-1348">-or-</span></span> 
 <span data-ttu-id="ce515-1349">El valor de <paramref name="ptr" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-1349"><paramref name="ptr" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="ce515-1350">O bien</span><span class="sxs-lookup"><span data-stu-id="ce515-1350">-or-</span></span> 
 <span data-ttu-id="ce515-1351"><paramref name="ptr" /> no es válido.</span><span class="sxs-lookup"><span data-stu-id="ce515-1351"><paramref name="ptr" /> is invalid.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-1352">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-1352">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-1353">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-1353">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadByte">
      <MemberSignature Language="C#" Value="public static byte ReadByte (IntPtr ptr, int ofs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ReadByte(native int ptr, int32 ofs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReadByte(System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadByte (ptr As IntPtr, ofs As Integer) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ReadByte(IntPtr ptr, int ofs);" />
      <MemberSignature Language="F#" Value="static member ReadByte : nativeint * int -&gt; byte" Usage="System.Runtime.InteropServices.Marshal.ReadByte (ptr, ofs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="ofs" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ptr"><span data-ttu-id="ce515-1354">Dirección base en la memoria no administrada desde la que se va a leer.</span><span class="sxs-lookup"><span data-stu-id="ce515-1354">The base address in unmanaged memory from which to read.</span></span></param>
        <param name="ofs"><span data-ttu-id="ce515-1355">Desplazamiento de bytes adicional, que se agrega al parámetro <paramref name="ptr" /> antes de la lectura.</span><span class="sxs-lookup"><span data-stu-id="ce515-1355">An additional byte offset, which is added to the <paramref name="ptr" /> parameter before reading.</span></span></param>
        <summary><span data-ttu-id="ce515-1356">Lee un único byte en un desplazamiento (o índice) dado desde la memoria no administrada.</span><span class="sxs-lookup"><span data-stu-id="ce515-1356">Reads a single byte at a given offset (or index) from unmanaged memory.</span></span></summary>
        <returns><span data-ttu-id="ce515-1357">Byte leído de la memoria no administrada en el desplazamiento dado.</span><span class="sxs-lookup"><span data-stu-id="ce515-1357">The byte read from unmanaged memory at the given offset.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-1358"><xref:System.Runtime.InteropServices.Marshal.ReadByte%2A> permite una interacción directa con una matriz de bytes de estilo C no administrada, lo que elimina el gasto de copiar toda una matriz no administrada (mediante <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) a una matriz administrada distinta antes de leer los valores de sus elementos.</span><span class="sxs-lookup"><span data-stu-id="ce515-1358"><xref:System.Runtime.InteropServices.Marshal.ReadByte%2A> enables direct interaction with an unmanaged C-style byte array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before reading its element values.</span></span>  
  
 <span data-ttu-id="ce515-1359">Se admite la lectura desde ubicaciones de memoria desalineadas.</span><span class="sxs-lookup"><span data-stu-id="ce515-1359">Reading from unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ce515-1360">En el ejemplo siguiente se muestra cómo leer y escribir en una matriz no administrada mediante el <xref:System.Runtime.InteropServices.Marshal.ReadByte%2A> y <xref:System.Runtime.InteropServices.Marshal.WriteByte%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="ce515-1360">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadByte%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteByte%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#3)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#3)]  
  
 <span data-ttu-id="ce515-1361">En el ejemplo siguiente se muestra cómo usar el <xref:System.Runtime.InteropServices.Marshal.ReadByte%2A> método para leer el valor de un carácter no administrado.</span><span class="sxs-lookup"><span data-stu-id="ce515-1361">The following example demonstrates how to use the <xref:System.Runtime.InteropServices.Marshal.ReadByte%2A> method to read the value of an unmanaged character.</span></span>  
  
 [!code-cpp[Runtime.InteropServices.Marshal.ReadByte-IntPtr-int#1](~/samples/snippets/cpp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.ReadByte-IntPtr-int/cpp/sample.cpp#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException"><span data-ttu-id="ce515-1362">La dirección base (<paramref name="ptr" />) más el byte de desplazamiento (<paramref name="ofs" />) produce un valor null o una dirección no válida.</span><span class="sxs-lookup"><span data-stu-id="ce515-1362">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-1363">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-1363">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-1364">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-1364">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadByte">
      <MemberSignature Language="C#" Value="public static byte ReadByte (object ptr, int ofs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ReadByte([in]object ptr, int32 ofs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReadByte(System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadByte (ptr As Object, ofs As Integer) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ReadByte(System::Object ^ ptr, int ofs);" />
      <MemberSignature Language="F#" Value="static member ReadByte : obj * int -&gt; byte" Usage="System.Runtime.InteropServices.Marshal.ReadByte (ptr, ofs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SuppressUnmanagedCodeSecurity</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netcore-2.2">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netcore-2.2">
          <AttributeName>System.Obsolete("ReadByte(Object, Int32) may be unavailable in future releases.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.Object" />
        <Parameter Name="ofs" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ptr"><span data-ttu-id="ce515-1365">Dirección base en la memoria no administrada del objeto de origen.</span><span class="sxs-lookup"><span data-stu-id="ce515-1365">The base address in unmanaged memory of the source object.</span></span></param>
        <param name="ofs"><span data-ttu-id="ce515-1366">Desplazamiento de bytes adicional, que se agrega al parámetro <paramref name="ptr" /> antes de la lectura.</span><span class="sxs-lookup"><span data-stu-id="ce515-1366">An additional byte offset, which is added to the <paramref name="ptr" /> parameter before reading.</span></span></param>
        <summary><span data-ttu-id="ce515-1367">Lee un único byte en un desplazamiento (o índice) dado desde la memoria no administrada.</span><span class="sxs-lookup"><span data-stu-id="ce515-1367">Reads a single byte at a given offset (or index) from unmanaged memory.</span></span></summary>
        <returns><span data-ttu-id="ce515-1368">Byte leído de la memoria no administrada en el desplazamiento dado.</span><span class="sxs-lookup"><span data-stu-id="ce515-1368">The byte read from unmanaged memory at the given offset.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-1369"><xref:System.Runtime.InteropServices.Marshal.ReadByte%2A> permite una interacción directa con una matriz de bytes de estilo C no administrada, lo que elimina el gasto de copiar toda una matriz no administrada (mediante <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) a una matriz administrada distinta antes de leer los valores de sus elementos.</span><span class="sxs-lookup"><span data-stu-id="ce515-1369"><xref:System.Runtime.InteropServices.Marshal.ReadByte%2A> enables direct interaction with an unmanaged C-style byte array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before reading its element values.</span></span>  
  
 <span data-ttu-id="ce515-1370">Se admite la lectura desde ubicaciones de memoria desalineadas.</span><span class="sxs-lookup"><span data-stu-id="ce515-1370">Reading from unaligned memory locations is supported.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException"><span data-ttu-id="ce515-1371">La dirección base (<paramref name="ptr" />) más el byte de desplazamiento (<paramref name="ofs" />) produce un valor null o una dirección no válida.</span><span class="sxs-lookup"><span data-stu-id="ce515-1371">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ce515-1372"><paramref name="ptr" /> es un objeto <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-1372"><paramref name="ptr" /> is an <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> object.</span></span> <span data-ttu-id="ce515-1373">Este método no acepta parámetros <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-1373">This method does not accept <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> parameters.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-1374">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-1374">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-1375">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-1375">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadInt16">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ce515-1376">Lee un entero de 16 bits con signo de la memoria no administrada.</span><span class="sxs-lookup"><span data-stu-id="ce515-1376">Reads a 16-bit signed integer from unmanaged memory.</span></span> <span data-ttu-id="ce515-1377">Se admite la lectura desde ubicaciones de memoria desalineadas.</span><span class="sxs-lookup"><span data-stu-id="ce515-1377">Reading from unaligned memory locations is supported.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadInt16">
      <MemberSignature Language="C#" Value="public static short ReadInt16 (IntPtr ptr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ReadInt16(native int ptr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReadInt16(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadInt16 (ptr As IntPtr) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ReadInt16(IntPtr ptr);" />
      <MemberSignature Language="F#" Value="static member ReadInt16 : nativeint -&gt; int16" Usage="System.Runtime.InteropServices.Marshal.ReadInt16 ptr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="ptr"><span data-ttu-id="ce515-1378">Dirección en la memoria no administrada desde la que se va a leer.</span><span class="sxs-lookup"><span data-stu-id="ce515-1378">The address in unmanaged memory from which to read.</span></span></param>
        <summary><span data-ttu-id="ce515-1379">Lee un entero de 16 bits con signo de la memoria no administrada.</span><span class="sxs-lookup"><span data-stu-id="ce515-1379">Reads a 16-bit signed integer from unmanaged memory.</span></span></summary>
        <returns><span data-ttu-id="ce515-1380">Entero de 16 bits con signo leído de la memoria no administrada.</span><span class="sxs-lookup"><span data-stu-id="ce515-1380">The 16-bit signed integer read from unmanaged memory.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-1381"><xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> tiene un desplazamiento implícito de 0.</span><span class="sxs-lookup"><span data-stu-id="ce515-1381"><xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> has an implied offset of 0.</span></span> <span data-ttu-id="ce515-1382">Este método permite la interacción directa con un estilo de C no administrado `Int16` matriz, lo que elimina el gasto de copiar toda una matriz no administrada (mediante <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) a una matriz administrada distinta antes de leer los valores de sus elementos.</span><span class="sxs-lookup"><span data-stu-id="ce515-1382">This method enables direct interaction with an unmanaged C-style `Int16` array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before reading its element values.</span></span>  
  
 <span data-ttu-id="ce515-1383">Se admite la lectura desde ubicaciones de memoria desalineadas.</span><span class="sxs-lookup"><span data-stu-id="ce515-1383">Reading from unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ce515-1384">En el ejemplo siguiente se muestra cómo leer y escribir en una matriz no administrada mediante el <xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> y <xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="ce515-1384">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#4)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#4)]  
  
 <span data-ttu-id="ce515-1385">En el ejemplo siguiente se muestra cómo usar el <xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> método para leer el valor de no administrado `short` variable.</span><span class="sxs-lookup"><span data-stu-id="ce515-1385">The following example demonstrates how to use the <xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> method to read the value of an unmanaged `short` variable.</span></span>  
  
 [!code-cpp[Runtime.InteropServices.Marshal.ReadInt16#1](~/samples/snippets/cpp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.ReadInt16/cpp/sample.cpp#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException"><span data-ttu-id="ce515-1386"><paramref name="ptr" /> no es un formato reconocido.</span><span class="sxs-lookup"><span data-stu-id="ce515-1386"><paramref name="ptr" /> is not a recognized format.</span></span>  
  
<span data-ttu-id="ce515-1387">O bien</span><span class="sxs-lookup"><span data-stu-id="ce515-1387">-or-</span></span> 
 <span data-ttu-id="ce515-1388">El valor de <paramref name="ptr" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-1388"><paramref name="ptr" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="ce515-1389">O bien</span><span class="sxs-lookup"><span data-stu-id="ce515-1389">-or-</span></span> 
 <span data-ttu-id="ce515-1390"><paramref name="ptr" /> no es válido.</span><span class="sxs-lookup"><span data-stu-id="ce515-1390"><paramref name="ptr" /> is invalid.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-1391">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-1391">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-1392">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-1392">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadInt16">
      <MemberSignature Language="C#" Value="public static short ReadInt16 (IntPtr ptr, int ofs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ReadInt16(native int ptr, int32 ofs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReadInt16(System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadInt16 (ptr As IntPtr, ofs As Integer) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ReadInt16(IntPtr ptr, int ofs);" />
      <MemberSignature Language="F#" Value="static member ReadInt16 : nativeint * int -&gt; int16" Usage="System.Runtime.InteropServices.Marshal.ReadInt16 (ptr, ofs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="ofs" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ptr"><span data-ttu-id="ce515-1393">Dirección base en la memoria no administrada desde la que se va a leer.</span><span class="sxs-lookup"><span data-stu-id="ce515-1393">The base address in unmanaged memory from which to read.</span></span></param>
        <param name="ofs"><span data-ttu-id="ce515-1394">Desplazamiento de bytes adicional, que se agrega al parámetro <paramref name="ptr" /> antes de la lectura.</span><span class="sxs-lookup"><span data-stu-id="ce515-1394">An additional byte offset, which is added to the <paramref name="ptr" /> parameter before reading.</span></span></param>
        <summary><span data-ttu-id="ce515-1395">Lee un entero de 16 bits con signo en un desplazamiento dado de la memoria no administrada.</span><span class="sxs-lookup"><span data-stu-id="ce515-1395">Reads a 16-bit signed integer at a given offset from unmanaged memory.</span></span></summary>
        <returns><span data-ttu-id="ce515-1396">Entero de 16 bits con signo leído de la memoria no administrada en el desplazamiento dado.</span><span class="sxs-lookup"><span data-stu-id="ce515-1396">The 16-bit signed integer read from unmanaged memory at the given offset.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-1397"><xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> permite una interacción directa con una matriz de 16 bits con signo no administrada, lo que elimina el gasto de copiar toda una matriz no administrada (mediante <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) a una matriz administrada distinta antes de leer los valores de sus elementos.</span><span class="sxs-lookup"><span data-stu-id="ce515-1397"><xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> enables direct interaction with an unmanaged 16-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before reading its element values.</span></span>  
  
 <span data-ttu-id="ce515-1398">Se admite la lectura desde ubicaciones de memoria desalineadas.</span><span class="sxs-lookup"><span data-stu-id="ce515-1398">Reading from unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ce515-1399">En el ejemplo siguiente se muestra cómo leer y escribir en una matriz no administrada mediante el <xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> y <xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="ce515-1399">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#4)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#4)]  
  
 <span data-ttu-id="ce515-1400">En el ejemplo siguiente se muestra cómo usar el <xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> método para leer el valor de no administrado `short` variable.</span><span class="sxs-lookup"><span data-stu-id="ce515-1400">The following example demonstrates how to use the <xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> method to read the value of an unmanaged `short` variable.</span></span>  
  
 [!code-cpp[Runtime.InteropServices.Marshal.ReadInt16-IntPtr-Int#1](~/samples/snippets/cpp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.ReadInt16-IntPtr-Int/cpp/sample.cpp#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException"><span data-ttu-id="ce515-1401">La dirección base (<paramref name="ptr" />) más el byte de desplazamiento (<paramref name="ofs" />) produce un valor null o una dirección no válida.</span><span class="sxs-lookup"><span data-stu-id="ce515-1401">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-1402">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-1402">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-1403">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-1403">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.ReadByte(System.Object,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadInt16">
      <MemberSignature Language="C#" Value="public static short ReadInt16 (object ptr, int ofs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ReadInt16([in]object ptr, int32 ofs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReadInt16(System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadInt16 (ptr As Object, ofs As Integer) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ReadInt16(System::Object ^ ptr, int ofs);" />
      <MemberSignature Language="F#" Value="static member ReadInt16 : obj * int -&gt; int16" Usage="System.Runtime.InteropServices.Marshal.ReadInt16 (ptr, ofs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SuppressUnmanagedCodeSecurity</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netcore-2.2">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netcore-2.2">
          <AttributeName>System.Obsolete("ReadInt16(Object, Int32) may be unavailable in future releases.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.Object" />
        <Parameter Name="ofs" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ptr"><span data-ttu-id="ce515-1404">Dirección base en la memoria no administrada del objeto de origen.</span><span class="sxs-lookup"><span data-stu-id="ce515-1404">The base address in unmanaged memory of the source object.</span></span></param>
        <param name="ofs"><span data-ttu-id="ce515-1405">Desplazamiento de bytes adicional, que se agrega al parámetro <paramref name="ptr" /> antes de la lectura.</span><span class="sxs-lookup"><span data-stu-id="ce515-1405">An additional byte offset, which is added to the <paramref name="ptr" /> parameter before reading.</span></span></param>
        <summary><span data-ttu-id="ce515-1406">Lee un entero de 16 bits con signo en un desplazamiento dado de la memoria no administrada.</span><span class="sxs-lookup"><span data-stu-id="ce515-1406">Reads a 16-bit signed integer at a given offset from unmanaged memory.</span></span></summary>
        <returns><span data-ttu-id="ce515-1407">Entero de 16 bits con signo leído de la memoria no administrada en el desplazamiento dado.</span><span class="sxs-lookup"><span data-stu-id="ce515-1407">The 16-bit signed integer read from unmanaged memory at the given offset.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-1408"><xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> permite una interacción directa con una matriz de 16 bits con signo no administrada, lo que elimina el gasto de copiar toda una matriz no administrada (mediante <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) a una matriz administrada distinta antes de leer los valores de sus elementos.</span><span class="sxs-lookup"><span data-stu-id="ce515-1408"><xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> enables direct interaction with an unmanaged 16-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before reading its element values.</span></span>  
  
 <span data-ttu-id="ce515-1409">Se admite la lectura desde ubicaciones de memoria desalineadas.</span><span class="sxs-lookup"><span data-stu-id="ce515-1409">Reading from unaligned memory locations is supported.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException"><span data-ttu-id="ce515-1410">La dirección base (<paramref name="ptr" />) más el byte de desplazamiento (<paramref name="ofs" />) produce un valor null o una dirección no válida.</span><span class="sxs-lookup"><span data-stu-id="ce515-1410">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ce515-1411"><paramref name="ptr" /> es un objeto <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-1411"><paramref name="ptr" /> is an <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> object.</span></span> <span data-ttu-id="ce515-1412">Este método no acepta parámetros <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-1412">This method does not accept <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> parameters.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-1413">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-1413">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-1414">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-1414">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadInt32">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ce515-1415">Lee un entero de 32 bits con signo de la memoria no administrada.</span><span class="sxs-lookup"><span data-stu-id="ce515-1415">Reads a 32-bit signed integer from unmanaged memory.</span></span> <span data-ttu-id="ce515-1416">Se admite la lectura desde ubicaciones de memoria desalineadas.</span><span class="sxs-lookup"><span data-stu-id="ce515-1416">Reading from unaligned memory locations is supported.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadInt32">
      <MemberSignature Language="C#" Value="public static int ReadInt32 (IntPtr ptr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ReadInt32(native int ptr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReadInt32(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadInt32 (ptr As IntPtr) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ReadInt32(IntPtr ptr);" />
      <MemberSignature Language="F#" Value="static member ReadInt32 : nativeint -&gt; int" Usage="System.Runtime.InteropServices.Marshal.ReadInt32 ptr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="ptr"><span data-ttu-id="ce515-1417">Dirección en la memoria no administrada desde la que se va a leer.</span><span class="sxs-lookup"><span data-stu-id="ce515-1417">The address in unmanaged memory from which to read.</span></span></param>
        <summary><span data-ttu-id="ce515-1418">Lee un entero de 32 bits con signo de la memoria no administrada.</span><span class="sxs-lookup"><span data-stu-id="ce515-1418">Reads a 32-bit signed integer from unmanaged memory.</span></span></summary>
        <returns><span data-ttu-id="ce515-1419">Entero de 32 bits con signo leído de la memoria no administrada.</span><span class="sxs-lookup"><span data-stu-id="ce515-1419">The 32-bit signed integer read from unmanaged memory.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-1420"><xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A> tiene un desplazamiento implícito de 0.</span><span class="sxs-lookup"><span data-stu-id="ce515-1420"><xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A> has an implied offset of 0.</span></span> <span data-ttu-id="ce515-1421">Este método permite la interacción directa con un estilo de C no administrado `Int32` matriz, lo que elimina el gasto de copiar toda una matriz no administrada (mediante <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) a una matriz administrada distinta antes de leer los valores de sus elementos.</span><span class="sxs-lookup"><span data-stu-id="ce515-1421">This method enables direct interaction with an unmanaged C-style `Int32` array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before reading its element values.</span></span>  
  
 <span data-ttu-id="ce515-1422">Se admite la lectura desde ubicaciones de memoria desalineadas.</span><span class="sxs-lookup"><span data-stu-id="ce515-1422">Reading from unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ce515-1423">En el ejemplo siguiente se muestra cómo leer y escribir en una matriz no administrada mediante el <xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A> y <xref:System.Runtime.InteropServices.Marshal.WriteInt32%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="ce515-1423">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteInt32%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#5)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#5)]  
  
 <span data-ttu-id="ce515-1424">En el ejemplo siguiente se muestra cómo usar el <xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A> método para leer el valor de no administrado `int` variable.</span><span class="sxs-lookup"><span data-stu-id="ce515-1424">The following example demonstrates how to use the <xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A> method to read the value of an unmanaged `int` variable.</span></span>  
  
 [!code-cpp[Runtime.InteropServices.Marshal.ReadInt32#1](~/samples/snippets/cpp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.ReadInt32/cpp/sample.cpp#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException"><span data-ttu-id="ce515-1425"><paramref name="ptr" /> no es un formato reconocido.</span><span class="sxs-lookup"><span data-stu-id="ce515-1425"><paramref name="ptr" /> is not a recognized format.</span></span>  
  
<span data-ttu-id="ce515-1426">O bien</span><span class="sxs-lookup"><span data-stu-id="ce515-1426">-or-</span></span> 
 <span data-ttu-id="ce515-1427">El valor de <paramref name="ptr" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-1427"><paramref name="ptr" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="ce515-1428">O bien</span><span class="sxs-lookup"><span data-stu-id="ce515-1428">-or-</span></span> 
 <span data-ttu-id="ce515-1429"><paramref name="ptr" /> no es válido.</span><span class="sxs-lookup"><span data-stu-id="ce515-1429"><paramref name="ptr" /> is invalid.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-1430">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-1430">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-1431">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-1431">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadInt32">
      <MemberSignature Language="C#" Value="public static int ReadInt32 (IntPtr ptr, int ofs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ReadInt32(native int ptr, int32 ofs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReadInt32(System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadInt32 (ptr As IntPtr, ofs As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ReadInt32(IntPtr ptr, int ofs);" />
      <MemberSignature Language="F#" Value="static member ReadInt32 : nativeint * int -&gt; int" Usage="System.Runtime.InteropServices.Marshal.ReadInt32 (ptr, ofs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="ofs" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ptr"><span data-ttu-id="ce515-1432">Dirección base en la memoria no administrada desde la que se va a leer.</span><span class="sxs-lookup"><span data-stu-id="ce515-1432">The base address in unmanaged memory from which to read.</span></span></param>
        <param name="ofs"><span data-ttu-id="ce515-1433">Desplazamiento de bytes adicional, que se agrega al parámetro <paramref name="ptr" /> antes de la lectura.</span><span class="sxs-lookup"><span data-stu-id="ce515-1433">An additional byte offset, which is added to the <paramref name="ptr" /> parameter before reading.</span></span></param>
        <summary><span data-ttu-id="ce515-1434">Lee un entero de 32 bits con signo en un desplazamiento dado de la memoria no administrada.</span><span class="sxs-lookup"><span data-stu-id="ce515-1434">Reads a 32-bit signed integer at a given offset from unmanaged memory.</span></span></summary>
        <returns><span data-ttu-id="ce515-1435">Entero de 32 bits con signo leído de la memoria no administrada.</span><span class="sxs-lookup"><span data-stu-id="ce515-1435">The 32-bit signed integer read from unmanaged memory.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-1436"><xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A> permite una interacción directa con una matriz de 32 bits con signo no administrada, lo que elimina el gasto de copiar toda una matriz no administrada (mediante <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) a una matriz administrada distinta antes de leer los valores de sus elementos.</span><span class="sxs-lookup"><span data-stu-id="ce515-1436"><xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A> enables direct interaction with an unmanaged 32-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before reading its element values.</span></span>  
  
 <span data-ttu-id="ce515-1437">Se admite la lectura desde ubicaciones de memoria desalineadas.</span><span class="sxs-lookup"><span data-stu-id="ce515-1437">Reading from unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ce515-1438">En el ejemplo siguiente se muestra cómo leer y escribir en una matriz no administrada mediante el <xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A> y <xref:System.Runtime.InteropServices.Marshal.WriteInt32%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="ce515-1438">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteInt32%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#5)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#5)]  
  
 <span data-ttu-id="ce515-1439">En el ejemplo siguiente se muestra cómo usar el <xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A> método para leer el valor de no administrado `int` variable.</span><span class="sxs-lookup"><span data-stu-id="ce515-1439">The following example demonstrates how to use the <xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A> method to read the value of an unmanaged `int` variable.</span></span>  
  
 [!code-cpp[Runtime.InteropServices.Marshal.ReadInt32-IntPtr-Int#1](~/samples/snippets/cpp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.ReadInt32-IntPtr-Int/cpp/sample.cpp#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException"><span data-ttu-id="ce515-1440">La dirección base (<paramref name="ptr" />) más el byte de desplazamiento (<paramref name="ofs" />) produce un valor null o una dirección no válida.</span><span class="sxs-lookup"><span data-stu-id="ce515-1440">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-1441">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-1441">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-1442">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-1442">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.ReadByte(System.Object,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadInt32">
      <MemberSignature Language="C#" Value="public static int ReadInt32 (object ptr, int ofs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ReadInt32([in]object ptr, int32 ofs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReadInt32(System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadInt32 (ptr As Object, ofs As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ReadInt32(System::Object ^ ptr, int ofs);" />
      <MemberSignature Language="F#" Value="static member ReadInt32 : obj * int -&gt; int" Usage="System.Runtime.InteropServices.Marshal.ReadInt32 (ptr, ofs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SuppressUnmanagedCodeSecurity</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netcore-2.2">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netcore-2.2">
          <AttributeName>System.Obsolete("ReadInt32(Object, Int32) may be unavailable in future releases.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.Object" />
        <Parameter Name="ofs" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ptr"><span data-ttu-id="ce515-1443">Dirección base en la memoria no administrada del objeto de origen.</span><span class="sxs-lookup"><span data-stu-id="ce515-1443">The base address in unmanaged memory of the source object.</span></span></param>
        <param name="ofs"><span data-ttu-id="ce515-1444">Desplazamiento de bytes adicional, que se agrega al parámetro <paramref name="ptr" /> antes de la lectura.</span><span class="sxs-lookup"><span data-stu-id="ce515-1444">An additional byte offset, which is added to the <paramref name="ptr" /> parameter before reading.</span></span></param>
        <summary><span data-ttu-id="ce515-1445">Lee un entero de 32 bits con signo en un desplazamiento dado de la memoria no administrada.</span><span class="sxs-lookup"><span data-stu-id="ce515-1445">Reads a 32-bit signed integer at a given offset from unmanaged memory.</span></span></summary>
        <returns><span data-ttu-id="ce515-1446">Entero de 32 bits con signo leído de la memoria no administrada en el desplazamiento dado.</span><span class="sxs-lookup"><span data-stu-id="ce515-1446">The 32-bit signed integer read from unmanaged memory at the given offset.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-1447"><xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A> permite una interacción directa con una matriz de 32 bits con signo no administrada, lo que elimina el gasto de copiar toda una matriz no administrada (mediante <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) a una matriz administrada distinta antes de leer los valores de sus elementos.</span><span class="sxs-lookup"><span data-stu-id="ce515-1447"><xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A> enables direct interaction with an unmanaged 32-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before reading its element values.</span></span>  
  
 <span data-ttu-id="ce515-1448">Se admite la lectura desde ubicaciones de memoria desalineadas.</span><span class="sxs-lookup"><span data-stu-id="ce515-1448">Reading from unaligned memory locations is supported.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException"><span data-ttu-id="ce515-1449">La dirección base (<paramref name="ptr" />) más el byte de desplazamiento (<paramref name="ofs" />) produce un valor null o una dirección no válida.</span><span class="sxs-lookup"><span data-stu-id="ce515-1449">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ce515-1450"><paramref name="ptr" /> es un objeto <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-1450"><paramref name="ptr" /> is an <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> object.</span></span> <span data-ttu-id="ce515-1451">Este método no acepta parámetros <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-1451">This method does not accept <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> parameters.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-1452">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-1452">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-1453">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-1453">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadInt64">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ce515-1454">Lee un entero de 64 bits con signo de la memoria no administrada.</span><span class="sxs-lookup"><span data-stu-id="ce515-1454">Reads a 64-bit signed integer from unmanaged memory.</span></span> <span data-ttu-id="ce515-1455">Se admite la lectura desde ubicaciones de memoria desalineadas.</span><span class="sxs-lookup"><span data-stu-id="ce515-1455">Reading from unaligned memory locations is supported.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadInt64">
      <MemberSignature Language="C#" Value="public static long ReadInt64 (IntPtr ptr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ReadInt64(native int ptr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReadInt64(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadInt64 (ptr As IntPtr) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ReadInt64(IntPtr ptr);" />
      <MemberSignature Language="F#" Value="static member ReadInt64 : nativeint -&gt; int64" Usage="System.Runtime.InteropServices.Marshal.ReadInt64 ptr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="ptr"><span data-ttu-id="ce515-1456">Dirección en la memoria no administrada desde la que se va a leer.</span><span class="sxs-lookup"><span data-stu-id="ce515-1456">The address in unmanaged memory from which to read.</span></span></param>
        <summary><span data-ttu-id="ce515-1457">Lee un entero de 64 bits con signo de la memoria no administrada.</span><span class="sxs-lookup"><span data-stu-id="ce515-1457">Reads a 64-bit signed integer from unmanaged memory.</span></span></summary>
        <returns><span data-ttu-id="ce515-1458">Entero de 64 bits con signo leído de la memoria no administrada.</span><span class="sxs-lookup"><span data-stu-id="ce515-1458">The 64-bit signed integer read from unmanaged memory.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-1459"><xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A> tiene un desplazamiento implícito de 0.</span><span class="sxs-lookup"><span data-stu-id="ce515-1459"><xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A> has an implied offset of 0.</span></span> <span data-ttu-id="ce515-1460">Este método permite la interacción directa con un estilo de C no administrado `Int64` matriz, lo que elimina el gasto de copiar toda una matriz no administrada (mediante <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) a una matriz administrada distinta antes de leer los valores de sus elementos.</span><span class="sxs-lookup"><span data-stu-id="ce515-1460">This method enables direct interaction with an unmanaged C-style `Int64` array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before reading its element values.</span></span>  
  
 <span data-ttu-id="ce515-1461">Se admite la lectura desde ubicaciones de memoria desalineadas.</span><span class="sxs-lookup"><span data-stu-id="ce515-1461">Reading from unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ce515-1462">En el ejemplo siguiente se muestra cómo leer y escribir en una matriz no administrada mediante el <xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A> y <xref:System.Runtime.InteropServices.Marshal.WriteInt64%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="ce515-1462">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteInt64%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#6)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#6)]  
  
 <span data-ttu-id="ce515-1463">En el ejemplo siguiente se muestra cómo usar el <xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A> método para leer el valor de no administrado `__int64` variable.</span><span class="sxs-lookup"><span data-stu-id="ce515-1463">The following example demonstrates how to use the <xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A> method to read the value of an unmanaged `__int64` variable.</span></span>  
  
 [!code-cpp[Runtime.InteropServices.Marshal.ReadInt64#1](~/samples/snippets/cpp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.ReadInt64/cpp/sample.cpp#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException"><span data-ttu-id="ce515-1464"><paramref name="ptr" /> no es un formato reconocido.</span><span class="sxs-lookup"><span data-stu-id="ce515-1464"><paramref name="ptr" /> is not a recognized format.</span></span>  
  
<span data-ttu-id="ce515-1465">O bien</span><span class="sxs-lookup"><span data-stu-id="ce515-1465">-or-</span></span> 
 <span data-ttu-id="ce515-1466">El valor de <paramref name="ptr" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-1466"><paramref name="ptr" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="ce515-1467">O bien</span><span class="sxs-lookup"><span data-stu-id="ce515-1467">-or-</span></span> 
 <span data-ttu-id="ce515-1468"><paramref name="ptr" /> no es válido.</span><span class="sxs-lookup"><span data-stu-id="ce515-1468"><paramref name="ptr" /> is invalid.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-1469">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-1469">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-1470">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-1470">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadInt64">
      <MemberSignature Language="C#" Value="public static long ReadInt64 (IntPtr ptr, int ofs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ReadInt64(native int ptr, int32 ofs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReadInt64(System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadInt64 (ptr As IntPtr, ofs As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ReadInt64(IntPtr ptr, int ofs);" />
      <MemberSignature Language="F#" Value="static member ReadInt64 : nativeint * int -&gt; int64" Usage="System.Runtime.InteropServices.Marshal.ReadInt64 (ptr, ofs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="ofs" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ptr"><span data-ttu-id="ce515-1471">Dirección base en la memoria no administrada desde la que se va a leer.</span><span class="sxs-lookup"><span data-stu-id="ce515-1471">The base address in unmanaged memory from which to read.</span></span></param>
        <param name="ofs"><span data-ttu-id="ce515-1472">Desplazamiento de bytes adicional, que se agrega al parámetro <paramref name="ptr" /> antes de la lectura.</span><span class="sxs-lookup"><span data-stu-id="ce515-1472">An additional byte offset, which is added to the <paramref name="ptr" /> parameter before reading.</span></span></param>
        <summary><span data-ttu-id="ce515-1473">Lee un entero de 64 bits con signo en un desplazamiento dado de la memoria no administrada.</span><span class="sxs-lookup"><span data-stu-id="ce515-1473">Reads a 64-bit signed integer at a given offset from unmanaged memory.</span></span></summary>
        <returns><span data-ttu-id="ce515-1474">Entero de 64 bits con signo leído de la memoria no administrada en el desplazamiento dado.</span><span class="sxs-lookup"><span data-stu-id="ce515-1474">The 64-bit signed integer read from unmanaged memory at the given offset.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-1475"><xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A> permite una interacción directa con una matriz de 64 bits con signo no administrada, lo que elimina el gasto de copiar toda una matriz no administrada (mediante <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) a una matriz administrada distinta antes de leer los valores de sus elementos.</span><span class="sxs-lookup"><span data-stu-id="ce515-1475"><xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A> enables direct interaction with an unmanaged 64-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before reading its element values.</span></span>  
  
 <span data-ttu-id="ce515-1476">Se admite la lectura desde ubicaciones de memoria desalineadas.</span><span class="sxs-lookup"><span data-stu-id="ce515-1476">Reading from unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ce515-1477">En el ejemplo siguiente se muestra cómo leer y escribir en una matriz no administrada mediante el <xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A> y <xref:System.Runtime.InteropServices.Marshal.WriteInt64%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="ce515-1477">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteInt64%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#6)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#6)]  
  
 <span data-ttu-id="ce515-1478">En el ejemplo siguiente se muestra cómo usar el <xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A> método para leer el valor de no administrado `__int64` variable.</span><span class="sxs-lookup"><span data-stu-id="ce515-1478">The following example demonstrates how to use the <xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A> method to read the value of an unmanaged `__int64` variable.</span></span>  
  
 [!code-cpp[Runtime.InteropServices.Marshal.ReadInt64-IntPtr-Int#1](~/samples/snippets/cpp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.ReadInt64-IntPtr-Int/cpp/sample.cpp#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException"><span data-ttu-id="ce515-1479">La dirección base (<paramref name="ptr" />) más el byte de desplazamiento (<paramref name="ofs" />) produce un valor null o una dirección no válida.</span><span class="sxs-lookup"><span data-stu-id="ce515-1479">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-1480">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-1480">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-1481">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-1481">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.ReadByte(System.Object,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadInt64">
      <MemberSignature Language="C#" Value="public static long ReadInt64 (object ptr, int ofs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ReadInt64([in]object ptr, int32 ofs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReadInt64(System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadInt64 (ptr As Object, ofs As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ReadInt64(System::Object ^ ptr, int ofs);" />
      <MemberSignature Language="F#" Value="static member ReadInt64 : obj * int -&gt; int64" Usage="System.Runtime.InteropServices.Marshal.ReadInt64 (ptr, ofs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SuppressUnmanagedCodeSecurity</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netcore-2.2">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netcore-2.2">
          <AttributeName>System.Obsolete("ReadInt64(Object, Int32) may be unavailable in future releases.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.Object" />
        <Parameter Name="ofs" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ptr"><span data-ttu-id="ce515-1482">Dirección base en la memoria no administrada del objeto de origen.</span><span class="sxs-lookup"><span data-stu-id="ce515-1482">The base address in unmanaged memory of the source object.</span></span></param>
        <param name="ofs"><span data-ttu-id="ce515-1483">Desplazamiento de bytes adicional, que se agrega al parámetro <paramref name="ptr" /> antes de la lectura.</span><span class="sxs-lookup"><span data-stu-id="ce515-1483">An additional byte offset, which is added to the <paramref name="ptr" /> parameter before reading.</span></span></param>
        <summary><span data-ttu-id="ce515-1484">Lee un entero de 64 bits con signo en un desplazamiento dado de la memoria no administrada.</span><span class="sxs-lookup"><span data-stu-id="ce515-1484">Reads a 64-bit signed integer at a given offset from unmanaged memory.</span></span></summary>
        <returns><span data-ttu-id="ce515-1485">Entero de 64 bits con signo leído de la memoria no administrada en el desplazamiento dado.</span><span class="sxs-lookup"><span data-stu-id="ce515-1485">The 64-bit signed integer read from unmanaged memory at the given offset.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-1486"><xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A> permite una interacción directa con una matriz de 64 bits con signo no administrada, lo que elimina el gasto de copiar toda una matriz no administrada (mediante <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) a una matriz administrada distinta antes de leer los valores de sus elementos.</span><span class="sxs-lookup"><span data-stu-id="ce515-1486"><xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A> enables direct interaction with an unmanaged 64-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before reading its element values.</span></span>  
  
 <span data-ttu-id="ce515-1487">Se admite la lectura desde ubicaciones de memoria desalineadas.</span><span class="sxs-lookup"><span data-stu-id="ce515-1487">Reading from unaligned memory locations is supported.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException"><span data-ttu-id="ce515-1488">La dirección base (<paramref name="ptr" />) más el byte de desplazamiento (<paramref name="ofs" />) produce un valor null o una dirección no válida.</span><span class="sxs-lookup"><span data-stu-id="ce515-1488">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ce515-1489"><paramref name="ptr" /> es un objeto <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-1489"><paramref name="ptr" /> is an <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> object.</span></span> <span data-ttu-id="ce515-1490">Este método no acepta parámetros <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-1490">This method does not accept <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> parameters.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-1491">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-1491">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-1492">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-1492">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadIntPtr">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ce515-1493">Lee de la memoria no administrada un valor de tipo entero cuyo tamaño en bytes es propio del procesador nativo.</span><span class="sxs-lookup"><span data-stu-id="ce515-1493">Reads a processor native sized integer from unmanaged memory.</span></span> <span data-ttu-id="ce515-1494">Se admite la lectura desde ubicaciones de memoria desalineadas.</span><span class="sxs-lookup"><span data-stu-id="ce515-1494">Reading from unaligned memory locations is supported.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadIntPtr">
      <MemberSignature Language="C#" Value="public static IntPtr ReadIntPtr (IntPtr ptr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int ReadIntPtr(native int ptr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReadIntPtr(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadIntPtr (ptr As IntPtr) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr ReadIntPtr(IntPtr ptr);" />
      <MemberSignature Language="F#" Value="static member ReadIntPtr : nativeint -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.ReadIntPtr ptr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="ptr"><span data-ttu-id="ce515-1495">Dirección en la memoria no administrada desde la que se va a leer.</span><span class="sxs-lookup"><span data-stu-id="ce515-1495">The address in unmanaged memory from which to read.</span></span></param>
        <summary><span data-ttu-id="ce515-1496">Lee de la memoria no administrada un entero cuyo tamaño es propio del procesador nativo.</span><span class="sxs-lookup"><span data-stu-id="ce515-1496">Reads a processor native-sized integer from unmanaged memory.</span></span></summary>
        <returns><span data-ttu-id="ce515-1497">Entero leído de la memoria no administrada.</span><span class="sxs-lookup"><span data-stu-id="ce515-1497">The integer read from unmanaged memory.</span></span> <span data-ttu-id="ce515-1498">Se devuelve un entero de 32 bits en los equipos de 32 bits y un entero de 64 bits en los equipos de 64 bits.</span><span class="sxs-lookup"><span data-stu-id="ce515-1498">A 32 bit integer is returned on 32 bit machines and a 64 bit integer is returned on 64 bit machines.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-1499"><xref:System.Runtime.InteropServices.Marshal.ReadIntPtr%2A> tiene un desplazamiento implícito de 0.</span><span class="sxs-lookup"><span data-stu-id="ce515-1499"><xref:System.Runtime.InteropServices.Marshal.ReadIntPtr%2A> has an implied offset of 0.</span></span> <span data-ttu-id="ce515-1500">Este método permite la interacción directa con un estilo de C no administrado `IntPtr` matriz, lo que elimina el gasto de copiar toda una matriz no administrada (mediante <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) a una matriz administrada distinta antes de leer los valores de sus elementos.</span><span class="sxs-lookup"><span data-stu-id="ce515-1500">This method enables direct interaction with an unmanaged C-style `IntPtr` array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before reading its element values.</span></span>  
  
 <span data-ttu-id="ce515-1501">Se admite la lectura desde ubicaciones de memoria desalineadas.</span><span class="sxs-lookup"><span data-stu-id="ce515-1501">Reading from unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ce515-1502">En el ejemplo siguiente se muestra cómo leer y escribir en una matriz no administrada mediante el <xref:System.Runtime.InteropServices.Marshal.ReadIntPtr%2A> y <xref:System.Runtime.InteropServices.Marshal.WriteIntPtr%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="ce515-1502">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadIntPtr%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteIntPtr%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#2)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException"><span data-ttu-id="ce515-1503"><paramref name="ptr" /> no es un formato reconocido.</span><span class="sxs-lookup"><span data-stu-id="ce515-1503"><paramref name="ptr" /> is not a recognized format.</span></span>  
  
<span data-ttu-id="ce515-1504">O bien</span><span class="sxs-lookup"><span data-stu-id="ce515-1504">-or-</span></span> 
 <span data-ttu-id="ce515-1505">El valor de <paramref name="ptr" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-1505"><paramref name="ptr" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="ce515-1506">O bien</span><span class="sxs-lookup"><span data-stu-id="ce515-1506">-or-</span></span> 
 <span data-ttu-id="ce515-1507"><paramref name="ptr" /> no es válido.</span><span class="sxs-lookup"><span data-stu-id="ce515-1507"><paramref name="ptr" /> is invalid.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-1508">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-1508">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-1509">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-1509">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadIntPtr">
      <MemberSignature Language="C#" Value="public static IntPtr ReadIntPtr (IntPtr ptr, int ofs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int ReadIntPtr(native int ptr, int32 ofs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReadIntPtr(System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadIntPtr (ptr As IntPtr, ofs As Integer) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr ReadIntPtr(IntPtr ptr, int ofs);" />
      <MemberSignature Language="F#" Value="static member ReadIntPtr : nativeint * int -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.ReadIntPtr (ptr, ofs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="ofs" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ptr"><span data-ttu-id="ce515-1510">Dirección base en la memoria no administrada desde la que se va a leer.</span><span class="sxs-lookup"><span data-stu-id="ce515-1510">The base address in unmanaged memory from which to read.</span></span></param>
        <param name="ofs"><span data-ttu-id="ce515-1511">Desplazamiento de bytes adicional, que se agrega al parámetro <paramref name="ptr" /> antes de la lectura.</span><span class="sxs-lookup"><span data-stu-id="ce515-1511">An additional byte offset, which is added to the <paramref name="ptr" /> parameter before reading.</span></span></param>
        <summary><span data-ttu-id="ce515-1512">Lee de la memoria no administrada un valor de tipo entero cuyo tamaño en bytes es propio del procesador nativo en un desplazamiento dado.</span><span class="sxs-lookup"><span data-stu-id="ce515-1512">Reads a processor native sized integer at a given offset from unmanaged memory.</span></span></summary>
        <returns><span data-ttu-id="ce515-1513">Entero leído de la memoria no administrada en el desplazamiento dado.</span><span class="sxs-lookup"><span data-stu-id="ce515-1513">The integer read from unmanaged memory at the given offset.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-1514"><xref:System.Runtime.InteropServices.Marshal.ReadIntPtr%2A> permite una interacción directa con un estilo de C no administrado `IntPtr` matriz, lo que elimina el gasto de copiar toda una matriz no administrada (mediante <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) a una matriz administrada distinta antes de leer los valores de sus elementos.</span><span class="sxs-lookup"><span data-stu-id="ce515-1514"><xref:System.Runtime.InteropServices.Marshal.ReadIntPtr%2A> enables direct interaction with an unmanaged C-style `IntPtr` array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before reading its element values.</span></span>  
  
 <span data-ttu-id="ce515-1515">Se admite la lectura desde ubicaciones de memoria desalineadas.</span><span class="sxs-lookup"><span data-stu-id="ce515-1515">Reading from unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ce515-1516">En el ejemplo siguiente se muestra cómo leer y escribir en una matriz no administrada mediante el <xref:System.Runtime.InteropServices.Marshal.ReadIntPtr%2A> y <xref:System.Runtime.InteropServices.Marshal.WriteIntPtr%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="ce515-1516">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadIntPtr%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteIntPtr%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#2)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException"><span data-ttu-id="ce515-1517">La dirección base (<paramref name="ptr" />) más el byte de desplazamiento (<paramref name="ofs" />) produce un valor null o una dirección no válida.</span><span class="sxs-lookup"><span data-stu-id="ce515-1517">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-1518">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-1518">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-1519">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-1519">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.ReadByte(System.Object,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadIntPtr">
      <MemberSignature Language="C#" Value="public static IntPtr ReadIntPtr (object ptr, int ofs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int ReadIntPtr([in]object ptr, int32 ofs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReadIntPtr(System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadIntPtr (ptr As Object, ofs As Integer) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr ReadIntPtr(System::Object ^ ptr, int ofs);" />
      <MemberSignature Language="F#" Value="static member ReadIntPtr : obj * int -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.ReadIntPtr (ptr, ofs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netcore-2.2">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netcore-2.2">
          <AttributeName>System.Obsolete("ReadIntPtr(Object, Int32) may be unavailable in future releases.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.Object" />
        <Parameter Name="ofs" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ptr"><span data-ttu-id="ce515-1520">Dirección base en la memoria no administrada del objeto de origen.</span><span class="sxs-lookup"><span data-stu-id="ce515-1520">The base address in unmanaged memory of the source object.</span></span></param>
        <param name="ofs"><span data-ttu-id="ce515-1521">Desplazamiento de bytes adicional, que se agrega al parámetro <paramref name="ptr" /> antes de la lectura.</span><span class="sxs-lookup"><span data-stu-id="ce515-1521">An additional byte offset, which is added to the <paramref name="ptr" /> parameter before reading.</span></span></param>
        <summary><span data-ttu-id="ce515-1522">Lee de la memoria no administrada un valor de tipo entero cuyo tamaño en bytes es propio del procesador nativo.</span><span class="sxs-lookup"><span data-stu-id="ce515-1522">Reads a processor native sized integer from unmanaged memory.</span></span></summary>
        <returns><span data-ttu-id="ce515-1523">Entero leído de la memoria no administrada en el desplazamiento dado.</span><span class="sxs-lookup"><span data-stu-id="ce515-1523">The integer read from unmanaged memory at the given offset.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-1524"><xref:System.Runtime.InteropServices.Marshal.ReadIntPtr%2A> permite una interacción directa con un estilo de C no administrado `IntPtr` matriz, lo que elimina el gasto de copiar toda una matriz no administrada (mediante <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) a una matriz administrada distinta antes de leer los valores de sus elementos.</span><span class="sxs-lookup"><span data-stu-id="ce515-1524"><xref:System.Runtime.InteropServices.Marshal.ReadIntPtr%2A> enables direct interaction with an unmanaged C-style `IntPtr` array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before reading its element values.</span></span>  
  
 <span data-ttu-id="ce515-1525">Se admite la lectura desde ubicaciones de memoria desalineadas.</span><span class="sxs-lookup"><span data-stu-id="ce515-1525">Reading from unaligned memory locations is supported.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException"><span data-ttu-id="ce515-1526">La dirección base (<paramref name="ptr" />) más el byte de desplazamiento (<paramref name="ofs" />) produce un valor null o una dirección no válida.</span><span class="sxs-lookup"><span data-stu-id="ce515-1526">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ce515-1527"><paramref name="ptr" /> es un objeto <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-1527"><paramref name="ptr" /> is an <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> object.</span></span> <span data-ttu-id="ce515-1528">Este método no acepta parámetros <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-1528">This method does not accept <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> parameters.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-1529">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-1529">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-1530">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-1530">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReAllocCoTaskMem">
      <MemberSignature Language="C#" Value="public static IntPtr ReAllocCoTaskMem (IntPtr pv, int cb);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int ReAllocCoTaskMem(native int pv, int32 cb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReAllocCoTaskMem(System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReAllocCoTaskMem (pv As IntPtr, cb As Integer) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr ReAllocCoTaskMem(IntPtr pv, int cb);" />
      <MemberSignature Language="F#" Value="static member ReAllocCoTaskMem : nativeint * int -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.ReAllocCoTaskMem (pv, cb)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pv" Type="System.IntPtr" />
        <Parameter Name="cb" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="pv"><span data-ttu-id="ce515-1531">Puntero a memoria asignada con <see cref="M:System.Runtime.InteropServices.Marshal.AllocCoTaskMem(System.Int32)" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-1531">A pointer to memory allocated with <see cref="M:System.Runtime.InteropServices.Marshal.AllocCoTaskMem(System.Int32)" />.</span></span></param>
        <param name="cb"><span data-ttu-id="ce515-1532">Nuevo tamaño del bloque asignado.</span><span class="sxs-lookup"><span data-stu-id="ce515-1532">The new size of the allocated block.</span></span></param>
        <summary><span data-ttu-id="ce515-1533">Cambia el tamaño de un bloque de memoria asignado previamente con <see cref="M:System.Runtime.InteropServices.Marshal.AllocCoTaskMem(System.Int32)" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-1533">Resizes a block of memory previously allocated with <see cref="M:System.Runtime.InteropServices.Marshal.AllocCoTaskMem(System.Int32)" />.</span></span></summary>
        <returns><span data-ttu-id="ce515-1534">Entero que representa la dirección del bloque de memoria reasignado.</span><span class="sxs-lookup"><span data-stu-id="ce515-1534">An integer representing the address of the reallocated block of memory.</span></span> <span data-ttu-id="ce515-1535">Debe liberarse esta memoria con <see cref="M:System.Runtime.InteropServices.Marshal.FreeCoTaskMem(System.IntPtr)" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-1535">This memory must be released with <see cref="M:System.Runtime.InteropServices.Marshal.FreeCoTaskMem(System.IntPtr)" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-1536"><xref:System.Runtime.InteropServices.Marshal.ReAllocCoTaskMem%2A> es uno de los dos métodos de reasignación de memoria en el <xref:System.Runtime.InteropServices.Marshal> clase.</span><span class="sxs-lookup"><span data-stu-id="ce515-1536"><xref:System.Runtime.InteropServices.Marshal.ReAllocCoTaskMem%2A> is one of two memory reallocation methods in the <xref:System.Runtime.InteropServices.Marshal> class.</span></span> <span data-ttu-id="ce515-1537">(<xref:System.Runtime.InteropServices.Marshal.ReAllocHGlobal%2A> es el otro.) El principio del contenido de la memoria reasignada es el mismo que el contenido original; Sin embargo, puede ser el bloque de memoria completo en una ubicación diferente.</span><span class="sxs-lookup"><span data-stu-id="ce515-1537">(<xref:System.Runtime.InteropServices.Marshal.ReAllocHGlobal%2A> is the other.) The beginning of the reallocated memory content is the same as the original content; however, the entire memory block can be in a different location.</span></span> <span data-ttu-id="ce515-1538">Este método expone el COM [CoTaskMemRealloc](https://go.microsoft.com/fwlink/?LinkId=148778) función, que se conoce como el asignador de memoria de tareas COM.</span><span class="sxs-lookup"><span data-stu-id="ce515-1538">This method exposes the COM [CoTaskMemRealloc](https://go.microsoft.com/fwlink/?LinkId=148778) function, which is referred to as the COM task memory allocator.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="ce515-1539">No hay memoria suficiente para satisfacer la solicitud.</span><span class="sxs-lookup"><span data-stu-id="ce515-1539">There is insufficient memory to satisfy the request.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-1540">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-1540">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-1541">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-1541">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.ReAllocHGlobal(System.IntPtr,System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.FreeCoTaskMem(System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="ReAllocHGlobal">
      <MemberSignature Language="C#" Value="public static IntPtr ReAllocHGlobal (IntPtr pv, IntPtr cb);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int ReAllocHGlobal(native int pv, native int cb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReAllocHGlobal(System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReAllocHGlobal (pv As IntPtr, cb As IntPtr) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr ReAllocHGlobal(IntPtr pv, IntPtr cb);" />
      <MemberSignature Language="F#" Value="static member ReAllocHGlobal : nativeint * nativeint -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.ReAllocHGlobal (pv, cb)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pv" Type="System.IntPtr" />
        <Parameter Name="cb" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="pv"><span data-ttu-id="ce515-1542">Puntero a memoria asignada con <see cref="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.IntPtr)" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-1542">A pointer to memory allocated with <see cref="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.IntPtr)" />.</span></span></param>
        <param name="cb"><span data-ttu-id="ce515-1543">Nuevo tamaño del bloque asignado.</span><span class="sxs-lookup"><span data-stu-id="ce515-1543">The new size of the allocated block.</span></span> <span data-ttu-id="ce515-1544">Esto no es un puntero; es el recuento de bytes que está solicitando, convertido al tipo <see cref="T:System.IntPtr" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-1544">This is not a pointer; it is the byte count you are requesting, cast to type <see cref="T:System.IntPtr" />.</span></span> <span data-ttu-id="ce515-1545">Si pasa un puntero, se trata como un tamaño.</span><span class="sxs-lookup"><span data-stu-id="ce515-1545">If you pass a pointer, it is treated as a size.</span></span></param>
        <summary><span data-ttu-id="ce515-1546">Cambia el tamaño de un bloque de memoria asignado previamente con <see cref="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.IntPtr)" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-1546">Resizes a block of memory previously allocated with <see cref="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.IntPtr)" />.</span></span></summary>
        <returns><span data-ttu-id="ce515-1547">Puntero a la memoria reasignada.</span><span class="sxs-lookup"><span data-stu-id="ce515-1547">A pointer to the reallocated memory.</span></span> <span data-ttu-id="ce515-1548">Esta memoria debe liberarse mediante <see cref="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-1548">This memory must be released using <see cref="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-1549"><xref:System.Runtime.InteropServices.Marshal.ReAllocHGlobal%2A> es uno de reasignación de memoria de dos métodos de API en el <xref:System.Runtime.InteropServices.Marshal> clase.</span><span class="sxs-lookup"><span data-stu-id="ce515-1549"><xref:System.Runtime.InteropServices.Marshal.ReAllocHGlobal%2A> is one of two memory reallocation API methods in the <xref:System.Runtime.InteropServices.Marshal> class.</span></span> <span data-ttu-id="ce515-1550">(<xref:System.Runtime.InteropServices.Marshal.ReAllocCoTaskMem%2A?displayProperty=nameWithType> es el otro.)</span><span class="sxs-lookup"><span data-stu-id="ce515-1550">(<xref:System.Runtime.InteropServices.Marshal.ReAllocCoTaskMem%2A?displayProperty=nameWithType> is the other.)</span></span>  
  
 <span data-ttu-id="ce515-1551">Este método expone Win32 [GlobalReAlloc](https://go.microsoft.com/fwlink/?LinkId=148780) función desde Kernel32.dll.</span><span class="sxs-lookup"><span data-stu-id="ce515-1551">This method exposes the Win32 [GlobalReAlloc](https://go.microsoft.com/fwlink/?LinkId=148780) function from Kernel32.dll.</span></span> <span data-ttu-id="ce515-1552">El puntero devuelto puede ser diferente al original.</span><span class="sxs-lookup"><span data-stu-id="ce515-1552">The returned pointer can differ from the original.</span></span> <span data-ttu-id="ce515-1553">Si es diferente, el contenido del bloque de memoria original se han copiado en el bloque nuevo y el bloque de memoria original se ha liberado.</span><span class="sxs-lookup"><span data-stu-id="ce515-1553">If it is different, the contents of the original memory block have been copied to the new block, and the original memory block has been freed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="ce515-1554">No hay memoria suficiente para satisfacer la solicitud.</span><span class="sxs-lookup"><span data-stu-id="ce515-1554">There is insufficient memory to satisfy the request.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-1555">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-1555">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-1556">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-1556">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.ReAllocCoTaskMem(System.IntPtr,System.Int32)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=148781"><span data-ttu-id="ce515-1557">Función GlobalAlloc</span><span class="sxs-lookup"><span data-stu-id="ce515-1557">GlobalAlloc Function</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Release">
      <MemberSignature Language="C#" Value="public static int Release (IntPtr pUnk);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Release(native int pUnk) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Release(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Release (pUnk As IntPtr) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Release(IntPtr pUnk);" />
      <MemberSignature Language="F#" Value="static member Release : nativeint -&gt; int" Usage="System.Runtime.InteropServices.Marshal.Release pUnk" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pUnk" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="pUnk"><span data-ttu-id="ce515-1558">Interfaz que se va a liberar.</span><span class="sxs-lookup"><span data-stu-id="ce515-1558">The interface to release.</span></span></param>
        <summary><span data-ttu-id="ce515-1559">Disminuye el contador de referencia de la interfaz especificada.</span><span class="sxs-lookup"><span data-stu-id="ce515-1559">Decrements the reference count on the specified interface.</span></span></summary>
        <returns><span data-ttu-id="ce515-1560">Nuevo valor del contador de referencias en la interfaz especificada por el parámetro <paramref name="pUnk" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-1560">The new value of the reference count on the interface specified by the <paramref name="pUnk" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-1561">Common language runtime administra el recuento de referencias de un objeto COM, por lo necesario usar este método directamente.</span><span class="sxs-lookup"><span data-stu-id="ce515-1561">The common language runtime manages the reference count of a COM object for you, making it unnecessary to use this method directly.</span></span> <span data-ttu-id="ce515-1562">Use este valor sólo para fines de prueba.</span><span class="sxs-lookup"><span data-stu-id="ce515-1562">Use this value only for testing purposes.</span></span> <span data-ttu-id="ce515-1563">En raras ocasiones, como pruebas de un contador de referencias personalizado, le resultará necesario manipular la duración del objeto manualmente.</span><span class="sxs-lookup"><span data-stu-id="ce515-1563">In rare cases, such as testing a custom marshaler, you might find it necessary to manipulate an object's lifetime manually.</span></span> <span data-ttu-id="ce515-1564">Sólo los programas que llaman a <xref:System.Runtime.InteropServices.Marshal.AddRef%2A?displayProperty=nameWithType> debe llamar a <xref:System.Runtime.InteropServices.Marshal.Release%2A>.</span><span class="sxs-lookup"><span data-stu-id="ce515-1564">Only programs that call <xref:System.Runtime.InteropServices.Marshal.AddRef%2A?displayProperty=nameWithType> should call <xref:System.Runtime.InteropServices.Marshal.Release%2A>.</span></span> <span data-ttu-id="ce515-1565">Una llamada a <xref:System.Runtime.InteropServices.Marshal.Release%2A> después de haber alcanzado el recuento de referencias cero, produce un comportamiento indefinido.</span><span class="sxs-lookup"><span data-stu-id="ce515-1565">Calling <xref:System.Runtime.InteropServices.Marshal.Release%2A> after the reference count has reached zero causes undefined behavior.</span></span>  
  
 <span data-ttu-id="ce515-1566">Puede llamar a <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%2A?displayProperty=nameWithType>, <xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObject%2A?displayProperty=nameWithType>, o <xref:System.Runtime.InteropServices.Marshal.GetIDispatchForObject%2A?displayProperty=nameWithType> para obtener un <xref:System.IntPtr> valor que representa un [IUnknown](https://go.microsoft.com/fwlink/?LinkId=148003) puntero de interfaz a la versión.</span><span class="sxs-lookup"><span data-stu-id="ce515-1566">You can call <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%2A?displayProperty=nameWithType>, <xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObject%2A?displayProperty=nameWithType>, or <xref:System.Runtime.InteropServices.Marshal.GetIDispatchForObject%2A?displayProperty=nameWithType> to obtain an <xref:System.IntPtr> value that represents a [IUnknown](https://go.microsoft.com/fwlink/?LinkId=148003) interface pointer to release.</span></span> <span data-ttu-id="ce515-1567">También puede usar estos métodos y el <xref:System.Runtime.InteropServices.Marshal.Release%2A> método en objetos administrados para liberar las interfaces COM representadas por el objeto administrado [contenedor CCW](~/docs/framework/interop/com-callable-wrapper.md).</span><span class="sxs-lookup"><span data-stu-id="ce515-1567">You can also use these methods and the <xref:System.Runtime.InteropServices.Marshal.Release%2A> method on managed objects to release the COM interfaces represented by the managed object's [COM Callable Wrapper](~/docs/framework/interop/com-callable-wrapper.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ce515-1568">En el ejemplo siguiente se muestra cómo recuperar un `IUnknown` interfaz para un objeto administrado mediante el <xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObject%2A> método.</span><span class="sxs-lookup"><span data-stu-id="ce515-1568">The following example demonstrates how to retrieve an `IUnknown` interface for a managed object using the <xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObject%2A> method.</span></span> <span data-ttu-id="ce515-1569">El ejemplo, a continuación, libera el puntero de interfaz mediante una llamada a la <xref:System.Runtime.InteropServices.Marshal.Release%2A> método.</span><span class="sxs-lookup"><span data-stu-id="ce515-1569">The example then releases the interface pointer by calling the <xref:System.Runtime.InteropServices.Marshal.Release%2A> method.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.GetIUnknownForObject-release#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.GetIUnknownForObject-release/cs/example.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.GetIUnknownForObject-release#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.GetIUnknownForObject-release/vb/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-1570">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-1570">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-1571">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-1571">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.AddRef(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.QueryInterface(System.IntPtr,System.Guid@,System.IntPtr@)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetIUnknownForObject(System.Object)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetIDispatchForObject(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ReleaseComObject">
      <MemberSignature Language="C#" Value="public static int ReleaseComObject (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ReleaseComObject(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReleaseComObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReleaseComObject (o As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ReleaseComObject(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="static member ReleaseComObject : obj -&gt; int" Usage="System.Runtime.InteropServices.Marshal.ReleaseComObject o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o"><span data-ttu-id="ce515-1572">Objeto COM que se va a liberar.</span><span class="sxs-lookup"><span data-stu-id="ce515-1572">The COM object to release.</span></span></param>
        <summary><span data-ttu-id="ce515-1573">Disminuye el recuento de referencias del [contenedor RWC](~/docs/framework/interop/runtime-callable-wrapper.md) asociado al objeto COM indicado.</span><span class="sxs-lookup"><span data-stu-id="ce515-1573">Decrements the reference count of the [Runtime Callable Wrapper](~/docs/framework/interop/runtime-callable-wrapper.md) (RCW) associated with the specified COM object.</span></span></summary>
        <returns><span data-ttu-id="ce515-1574">Nuevo valor del recuento de referencias del contenedor RCW asociado a <paramref name="o" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-1574">The new value of the reference count of the RCW associated with <paramref name="o" />.</span></span> <span data-ttu-id="ce515-1575">Este valor suele ser cero ya que el RCW conserva una sola referencia al objeto COM incluido en el contenedor, independientemente del número de clientes administrados que lo llamen.</span><span class="sxs-lookup"><span data-stu-id="ce515-1575">This value is typically zero since the RCW keeps just one reference to the wrapped COM object regardless of the number of managed clients calling it.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-1576">Este método se utiliza para controlar explícitamente la duración de un objeto COM utilizado desde el código administrado.</span><span class="sxs-lookup"><span data-stu-id="ce515-1576">This method is used to explicitly control the lifetime of a COM object used from managed code.</span></span> <span data-ttu-id="ce515-1577">Debe usar este método para liberar el objeto COM subyacente que contiene referencias a los recursos de manera oportuna, o cuando se deben liberar objetos en un orden específico.</span><span class="sxs-lookup"><span data-stu-id="ce515-1577">You should use this method to free the underlying COM object that holds references to resources in a timely manner or when objects must be freed in a specific order.</span></span>  
  
 <span data-ttu-id="ce515-1578">Cada vez que un puntero de interfaz COM entra en common language runtime (CLR), se encapsula en un contenedor RCW.</span><span class="sxs-lookup"><span data-stu-id="ce515-1578">Every time a COM interface pointer enters the common language runtime (CLR), it is wrapped in an RCW.</span></span>  
  
 <span data-ttu-id="ce515-1579">El contenedor RCW tiene un recuento de referencias que se incrementa cada vez que se asigna un puntero de interfaz COM a él.</span><span class="sxs-lookup"><span data-stu-id="ce515-1579">The RCW has a reference count that is incremented every time a COM interface pointer is mapped to it.</span></span> <span data-ttu-id="ce515-1580">El <xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A> método disminuye el recuento de referencias de un contenedor RCW.</span><span class="sxs-lookup"><span data-stu-id="ce515-1580">The <xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A> method decrements the reference count of an RCW.</span></span> <span data-ttu-id="ce515-1581">Cuando el recuento de referencias llega a cero, el tiempo de ejecución libera todas sus referencias en el objeto COM no administrado y produce una <xref:System.NullReferenceException?displayProperty=nameWithType> si intenta seguir utilizando el objeto.</span><span class="sxs-lookup"><span data-stu-id="ce515-1581">When the reference count reaches zero, the runtime releases all its references on the unmanaged COM object, and throws a <xref:System.NullReferenceException?displayProperty=nameWithType> if you attempt to use the object further.</span></span> <span data-ttu-id="ce515-1582">Si la misma interfaz COM se pasa más de una vez de no administrado a código administrado, el recuento de referencias en el contenedor se incrementa cada vez y que realiza la llamada <xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A> devuelve el número de referencias restantes.</span><span class="sxs-lookup"><span data-stu-id="ce515-1582">If the same COM interface is passed more than one time from unmanaged to managed code, the reference count on the wrapper is incremented every time, and calling <xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A> returns the number of remaining references.</span></span>  
  
 <span data-ttu-id="ce515-1583">Este método le permite forzar una versión de recuento de referencia de contenedor RCW para que se produzca con precisión cuando lo desee a.</span><span class="sxs-lookup"><span data-stu-id="ce515-1583">This method enables you to force an RCW reference count release so that it occurs precisely when you want it to.</span></span> <span data-ttu-id="ce515-1584">Sin embargo, el uso inadecuado de <xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A> puede provocar un error, la aplicación o se pueden producir una infracción de acceso.</span><span class="sxs-lookup"><span data-stu-id="ce515-1584">However, improper use of <xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A> may cause your application to fail, or may cause an access violation.</span></span>  
  
 <span data-ttu-id="ce515-1585">Considere un escenario en el que contiene código administrado en un dominio de aplicación en un RCW que representa un componente COM.</span><span class="sxs-lookup"><span data-stu-id="ce515-1585">Consider a scenario in which managed code in an application domain is holding onto an RCW that represents a COM component.</span></span> <span data-ttu-id="ce515-1586">Si se llama a la <xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A> método en el RCW, el código administrado no podrá tener acceso a lo RCW y generará una <xref:System.Runtime.InteropServices.InvalidComObjectException> excepción.</span><span class="sxs-lookup"><span data-stu-id="ce515-1586">If you call the <xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A> method on the RCW, the managed code will be unable to access the RCW and will raise an <xref:System.Runtime.InteropServices.InvalidComObjectException> exception.</span></span>  
  
 <span data-ttu-id="ce515-1587">Puede producirse un error más grave si está ejecutando una llamada para el contenedor RCW cuando se suelta el RCW.</span><span class="sxs-lookup"><span data-stu-id="ce515-1587">A more serious error may occur if a call to the RCW is executing when the RCW is released.</span></span> <span data-ttu-id="ce515-1588">En este caso, hay muchas posibilidades de que el subproceso que realiza la llamada provocará una infracción de acceso.</span><span class="sxs-lookup"><span data-stu-id="ce515-1588">In this case, there is a good chance that the thread making the call will cause an access violation.</span></span> <span data-ttu-id="ce515-1589">Sin embargo, se puede dañar la memoria del proceso y el proceso puede continuar ejecutándose hasta que se produce un error por razones que son muy difíciles de depurar.</span><span class="sxs-lookup"><span data-stu-id="ce515-1589">However, process memory may become corrupted, and the process may continue to run until it fails for reasons that are very difficult to debug.</span></span>  
  
 <span data-ttu-id="ce515-1590">Este riesgo se acentúa cuando el componente COM que se usa es un singleton, por el siguiente motivo: el CLR activa los componentes COM mediante una llamada a COM [CoCreateInstance](https://go.microsoft.com/fwlink/?LinkID=142894) función, que devuelve el mismo puntero de interfaz cada tiempo se llama a componentes COM singleton.</span><span class="sxs-lookup"><span data-stu-id="ce515-1590">This risk is compounded when the COM component that is being used is a singleton, for the following reason: The CLR activates COM components by calling the COM [CoCreateInstance](https://go.microsoft.com/fwlink/?LinkID=142894) function, which returns the same interface pointer every time it is called for singleton COM components.</span></span> <span data-ttu-id="ce515-1591">Por lo tanto, diferentes e independientes fragmentos de código administrado en un dominio de aplicación pueden usar el mismo RCW para un componente COM singleton y si una de las llamadas del <xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A> método en el componente COM, el otro se interrumpirá.</span><span class="sxs-lookup"><span data-stu-id="ce515-1591">Thus, separate and independent pieces of managed code in an application domain can be using the same RCW for a singleton COM component, and if either one calls the <xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A> method on the COM component, the other will be broken.</span></span>  
  
 <span data-ttu-id="ce515-1592">Por lo tanto, use el <xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A> solo si es absolutamente necesario.</span><span class="sxs-lookup"><span data-stu-id="ce515-1592">Therefore, use the <xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A> only if it is absolutely required.</span></span> <span data-ttu-id="ce515-1593">Si desea llamar a este método para asegurarse de que un componente COM se libera en un momento determinado, considere el uso de la <xref:System.Runtime.InteropServices.Marshal.FinalReleaseComObject%2A> método en su lugar.</span><span class="sxs-lookup"><span data-stu-id="ce515-1593">If you want to call this method to ensure that a COM component is released at a determined time, consider using the <xref:System.Runtime.InteropServices.Marshal.FinalReleaseComObject%2A> method instead.</span></span> <span data-ttu-id="ce515-1594"><xref:System.Runtime.InteropServices.Marshal.FinalReleaseComObject%2A> se lanzará el componente COM subyacente, independientemente de cuántas veces ha entrado en volver a CLR.</span><span class="sxs-lookup"><span data-stu-id="ce515-1594"><xref:System.Runtime.InteropServices.Marshal.FinalReleaseComObject%2A> will release the underlying COM component regardless of how many times it has re-entered the CLR.</span></span> <span data-ttu-id="ce515-1595">El recuento de referencias interna del contenedor RCW se incrementa en uno cada vez que el componente COM vuelve a entra en el CLR.</span><span class="sxs-lookup"><span data-stu-id="ce515-1595">The internal reference count of the RCW is incremented by one every time the COM component re-enters the CLR.</span></span> <span data-ttu-id="ce515-1596">Por lo tanto, podría llamar a la <xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A> método en un bucle hasta que el valor devuelto es cero.</span><span class="sxs-lookup"><span data-stu-id="ce515-1596">Therefore, you could call the <xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A> method in a loop until the value returned is zero.</span></span> <span data-ttu-id="ce515-1597">Esto consigue el mismo resultado que el <xref:System.Runtime.InteropServices.Marshal.FinalReleaseComObject%2A> método.</span><span class="sxs-lookup"><span data-stu-id="ce515-1597">This achieves the same result as the <xref:System.Runtime.InteropServices.Marshal.FinalReleaseComObject%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ce515-1598"><paramref name="o" /> no es un objeto COM válido.</span><span class="sxs-lookup"><span data-stu-id="ce515-1598"><paramref name="o" /> is not a valid COM object.</span></span></exception>
        <exception cref="T:System.NullReferenceException"><span data-ttu-id="ce515-1599">El valor de <paramref name="o" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-1599"><paramref name="o" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-1600">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-1600">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-1601">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-1601">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.FinalReleaseComObject(System.Object)" />
        <altmember cref="T:System.NullReferenceException" />
      </Docs>
    </Member>
    <Member MemberName="ReleaseThreadCache">
      <MemberSignature Language="C#" Value="public static void ReleaseThreadCache ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ReleaseThreadCache() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReleaseThreadCache" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ReleaseThreadCache ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ReleaseThreadCache();" />
      <MemberSignature Language="F#" Value="static member ReleaseThreadCache : unit -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.ReleaseThreadCache " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinmac-3.0">
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("This API did not perform any operation and will be removed in future versions of the CLR.", false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ce515-1602">Libera la memoria caché del subproceso.</span><span class="sxs-lookup"><span data-stu-id="ce515-1602">Releases the thread cache.</span></span></summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-1603">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-1603">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-1604">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-1604">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="SecureStringToBSTR">
      <MemberSignature Language="C#" Value="public static IntPtr SecureStringToBSTR (System.Security.SecureString s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int SecureStringToBSTR(class System.Security.SecureString s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.SecureStringToBSTR(System.Security.SecureString)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SecureStringToBSTR (s As SecureString) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr SecureStringToBSTR(System::Security::SecureString ^ s);" />
      <MemberSignature Language="F#" Value="static member SecureStringToBSTR : System.Security.SecureString -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.SecureStringToBSTR s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.Security.SecureString" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="ce515-1605">Objeto administrado que se va a copiar.</span><span class="sxs-lookup"><span data-stu-id="ce515-1605">The managed object to copy.</span></span></param>
        <summary><span data-ttu-id="ce515-1606">Asigna una [cadena binaria (BSTR)](https://msdn.microsoft.com/library/ms221069\(v=vs.85\).aspx) no administrada y copia en ella el contenido de un objeto <see cref="T:System.Security.SecureString" /> administrado.</span><span class="sxs-lookup"><span data-stu-id="ce515-1606">Allocates an unmanaged [binary string (BSTR)](https://msdn.microsoft.com/library/ms221069\(v=vs.85\).aspx) and copies the contents of a managed <see cref="T:System.Security.SecureString" /> object into it.</span></span></summary>
        <returns><span data-ttu-id="ce515-1607">Dirección, en memoria no administrada, donde se copió el parámetro <paramref name="s" /> o 0 si se suministró un objeto null.</span><span class="sxs-lookup"><span data-stu-id="ce515-1607">The address, in unmanaged memory, where the <paramref name="s" /> parameter was copied to, or 0 if a null object was supplied.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-1608">El <xref:System.Runtime.InteropServices.Marshal.SecureStringToBSTR%2A> método es útil para el cálculo de referencias personalizado o al mezclar código administrado y.</span><span class="sxs-lookup"><span data-stu-id="ce515-1608">The <xref:System.Runtime.InteropServices.Marshal.SecureStringToBSTR%2A> method is useful for custom marshaling or when mixing managed and unmanaged code.</span></span> <span data-ttu-id="ce515-1609">Dado que este método asigna la memoria no administrada necesaria para una cadena, libere siempre los `BSTR` cuando haya terminado mediante una llamada a la <xref:System.Runtime.InteropServices.Marshal.ZeroFreeBSTR%2A> método.</span><span class="sxs-lookup"><span data-stu-id="ce515-1609">Because this method allocates the unmanaged memory required for a string, always free the `BSTR` when finished by calling the <xref:System.Runtime.InteropServices.Marshal.ZeroFreeBSTR%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ce515-1610">El parámetro <paramref name="s" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-1610">The <paramref name="s" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ce515-1611">El equipo actual no está ejecutando Windows 2000 Service Pack 3 o una versión posterior.</span><span class="sxs-lookup"><span data-stu-id="ce515-1611">The current computer is not running Windows 2000 Service Pack 3 or later.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="ce515-1612">No hay suficiente memoria disponible.</span><span class="sxs-lookup"><span data-stu-id="ce515-1612">There is insufficient memory available.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-1613">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-1613">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-1614">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-1614">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <block subset="none" type="usage"><para><span data-ttu-id="ce515-1615">Este método se admite solo en equipos que ejecutan Windows 2000 Service Pack 3 o posterior.</span><span class="sxs-lookup"><span data-stu-id="ce515-1615">This method is supported only on computers running Windows 2000 Service Pack 3 or later.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="SecureStringToCoTaskMemAnsi">
      <MemberSignature Language="C#" Value="public static IntPtr SecureStringToCoTaskMemAnsi (System.Security.SecureString s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int SecureStringToCoTaskMemAnsi(class System.Security.SecureString s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi(System.Security.SecureString)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SecureStringToCoTaskMemAnsi (s As SecureString) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr SecureStringToCoTaskMemAnsi(System::Security::SecureString ^ s);" />
      <MemberSignature Language="F#" Value="static member SecureStringToCoTaskMemAnsi : System.Security.SecureString -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.Security.SecureString" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="ce515-1616">Objeto administrado que se va a copiar.</span><span class="sxs-lookup"><span data-stu-id="ce515-1616">The managed object to copy.</span></span></param>
        <summary><span data-ttu-id="ce515-1617">Copia el contenido de un objeto <see cref="T:System.Security.SecureString" /> administrado en un bloque de memoria asignado desde el asignador de tareas COM no administrado.</span><span class="sxs-lookup"><span data-stu-id="ce515-1617">Copies the contents of a managed <see cref="T:System.Security.SecureString" /> object to a block of memory allocated from the unmanaged COM task allocator.</span></span></summary>
        <returns><span data-ttu-id="ce515-1618">Dirección, en memoria no administrada, donde se copió el parámetro <paramref name="s" /> o 0 si se suministró un objeto null.</span><span class="sxs-lookup"><span data-stu-id="ce515-1618">The address, in unmanaged memory, where the <paramref name="s" /> parameter was copied to, or 0 if a null object was supplied.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-1619">El <xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi%2A> método es útil para el cálculo de referencias personalizado o al mezclar código administrado y.</span><span class="sxs-lookup"><span data-stu-id="ce515-1619">The <xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi%2A> method is useful for custom marshaling or when mixing managed and unmanaged code.</span></span> <span data-ttu-id="ce515-1620">Dado que este método asigna la memoria no administrada necesaria para una cadena, libere siempre la memoria mediante una llamada a <xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemAnsi%2A>.</span><span class="sxs-lookup"><span data-stu-id="ce515-1620">Because this method allocates the unmanaged memory required for a string, always free the memory by calling <xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemAnsi%2A>.</span></span> <span data-ttu-id="ce515-1621">Los caracteres de la cadena se copian como caracteres ANSI.</span><span class="sxs-lookup"><span data-stu-id="ce515-1621">The characters of the string are copied as ANSI characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ce515-1622">En el ejemplo siguiente se usa el <xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi%2A> método para calcular las referencias y descifrar el contenido de un <xref:System.Security.SecureString> objeto en un bloque de memoria no administrada.</span><span class="sxs-lookup"><span data-stu-id="ce515-1622">The following example uses the <xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi%2A> method to marshal and decrypt the contents of a <xref:System.Security.SecureString> object to a block of unmanaged memory.</span></span> <span data-ttu-id="ce515-1623">A continuación, usa el <xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemAnsi%2A> método a cero y desechar el bloque no administrado.</span><span class="sxs-lookup"><span data-stu-id="ce515-1623">It then uses the <xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemAnsi%2A> method to zero out and dispose the unmanaged block.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ce515-1624">El parámetro <paramref name="s" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-1624">The <paramref name="s" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ce515-1625">El equipo actual no está ejecutando Windows 2000 Service Pack 3 o una versión posterior.</span><span class="sxs-lookup"><span data-stu-id="ce515-1625">The current computer is not running Windows 2000 Service Pack 3 or later.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="ce515-1626">No hay suficiente memoria disponible.</span><span class="sxs-lookup"><span data-stu-id="ce515-1626">There is insufficient memory available.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-1627">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-1627">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-1628">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-1628">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <block subset="none" type="usage"><para><span data-ttu-id="ce515-1629">Este método se admite solo en equipos que ejecutan Windows 2000 Service Pack 3 o posterior.</span><span class="sxs-lookup"><span data-stu-id="ce515-1629">This method is supported only on computers running Windows 2000 Service Pack 3 or later.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="SecureStringToCoTaskMemUnicode">
      <MemberSignature Language="C#" Value="public static IntPtr SecureStringToCoTaskMemUnicode (System.Security.SecureString s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int SecureStringToCoTaskMemUnicode(class System.Security.SecureString s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode(System.Security.SecureString)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SecureStringToCoTaskMemUnicode (s As SecureString) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr SecureStringToCoTaskMemUnicode(System::Security::SecureString ^ s);" />
      <MemberSignature Language="F#" Value="static member SecureStringToCoTaskMemUnicode : System.Security.SecureString -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.Security.SecureString" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="ce515-1630">Objeto administrado que se va a copiar.</span><span class="sxs-lookup"><span data-stu-id="ce515-1630">The managed object to copy.</span></span></param>
        <summary><span data-ttu-id="ce515-1631">Copia el contenido de un objeto <see cref="T:System.Security.SecureString" /> administrado en un bloque de memoria asignado desde el asignador de tareas COM no administrado.</span><span class="sxs-lookup"><span data-stu-id="ce515-1631">Copies the contents of a managed <see cref="T:System.Security.SecureString" /> object to a block of memory allocated from the unmanaged COM task allocator.</span></span></summary>
        <returns><span data-ttu-id="ce515-1632">Dirección, en memoria no administrada, donde se copió el parámetro <paramref name="s" /> o 0 si se suministró un objeto null.</span><span class="sxs-lookup"><span data-stu-id="ce515-1632">The address, in unmanaged memory, where the <paramref name="s" /> parameter was copied to, or 0 if a null object was supplied.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-1633">El <xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A> método es útil para el cálculo de referencias personalizado o al mezclar código administrado y.</span><span class="sxs-lookup"><span data-stu-id="ce515-1633">The <xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A> method is useful for custom marshaling or when mixing managed and unmanaged code.</span></span> <span data-ttu-id="ce515-1634">Dado que este método asigna la memoria no administrada necesaria para una cadena, libere siempre la memoria mediante una llamada a la <xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemUnicode%2A> método.</span><span class="sxs-lookup"><span data-stu-id="ce515-1634">Because this method allocates the unmanaged memory required for a string, always free the memory by calling the <xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemUnicode%2A> method.</span></span> <span data-ttu-id="ce515-1635">Los caracteres de la cadena se copian como caracteres Unicode.</span><span class="sxs-lookup"><span data-stu-id="ce515-1635">The characters of the string are copied as Unicode characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ce515-1636">En el ejemplo siguiente se usa el <xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A> método para calcular las referencias y descifrar el contenido de un <xref:System.Security.SecureString> objeto en un bloque de memoria no administrada.</span><span class="sxs-lookup"><span data-stu-id="ce515-1636">The following example uses the <xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A> method to marshal and decrypt the contents of a <xref:System.Security.SecureString> object to a block of unmanaged memory.</span></span> <span data-ttu-id="ce515-1637">A continuación, usa el <xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemUnicode%2A> método a cero y desechar el bloque no administrado.</span><span class="sxs-lookup"><span data-stu-id="ce515-1637">It then uses the <xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemUnicode%2A> method to zero out and dispose the unmanaged block.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ce515-1638">El parámetro <paramref name="s" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-1638">The <paramref name="s" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ce515-1639">El equipo actual no está ejecutando Windows 2000 Service Pack 3 o una versión posterior.</span><span class="sxs-lookup"><span data-stu-id="ce515-1639">The current computer is not running Windows 2000 Service Pack 3 or later.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="ce515-1640">No hay suficiente memoria disponible.</span><span class="sxs-lookup"><span data-stu-id="ce515-1640">There is insufficient memory available.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-1641">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-1641">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-1642">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-1642">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <block subset="none" type="usage"><para><span data-ttu-id="ce515-1643">Este método se admite solo en equipos que ejecutan Windows 2000 Service Pack 3 o posterior.</span><span class="sxs-lookup"><span data-stu-id="ce515-1643">This method is supported only on computers running Windows 2000 Service Pack 3 or later.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="SecureStringToGlobalAllocAnsi">
      <MemberSignature Language="C#" Value="public static IntPtr SecureStringToGlobalAllocAnsi (System.Security.SecureString s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int SecureStringToGlobalAllocAnsi(class System.Security.SecureString s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi(System.Security.SecureString)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SecureStringToGlobalAllocAnsi (s As SecureString) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr SecureStringToGlobalAllocAnsi(System::Security::SecureString ^ s);" />
      <MemberSignature Language="F#" Value="static member SecureStringToGlobalAllocAnsi : System.Security.SecureString -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.Security.SecureString" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="ce515-1644">Objeto administrado que se va a copiar.</span><span class="sxs-lookup"><span data-stu-id="ce515-1644">The managed object to copy.</span></span></param>
        <summary><span data-ttu-id="ce515-1645">Copia el contenido de un <see cref="T:System.Security.SecureString" /> administrado en la memoria no administrada, convirtiéndolo en formato ANSI mientras realiza la copia.</span><span class="sxs-lookup"><span data-stu-id="ce515-1645">Copies the contents of a managed <see cref="T:System.Security.SecureString" /> into unmanaged memory, converting into ANSI format as it copies.</span></span></summary>
        <returns><span data-ttu-id="ce515-1646">Dirección, en memoria no administrada, donde se copió el parámetro <paramref name="s" /> o 0 si se suministró un objeto null.</span><span class="sxs-lookup"><span data-stu-id="ce515-1646">The address, in unmanaged memory, to where the <paramref name="s" /> parameter was copied, or 0 if a null object was supplied.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-1647">El <xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi%2A> método es útil para el cálculo de referencias personalizado o al mezclar código administrado y.</span><span class="sxs-lookup"><span data-stu-id="ce515-1647">The <xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi%2A> method is useful for custom marshaling or when mixing managed and unmanaged code.</span></span> <span data-ttu-id="ce515-1648">Dado que este método asigna la memoria no administrada necesaria para una cadena, libere siempre la memoria mediante una llamada a la <xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocAnsi%2A> método.</span><span class="sxs-lookup"><span data-stu-id="ce515-1648">Because this method allocates the unmanaged memory required for a string, always free the memory by calling the <xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocAnsi%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ce515-1649">En el ejemplo siguiente se usa el <xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi%2A> método para calcular las referencias y descifrar el contenido de un <xref:System.Security.SecureString> objeto en un bloque de memoria no administrada.</span><span class="sxs-lookup"><span data-stu-id="ce515-1649">The following example uses the <xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi%2A> method to marshal and decrypt the contents of a <xref:System.Security.SecureString> object to a block of unmanaged memory.</span></span> <span data-ttu-id="ce515-1650">A continuación, usa el <xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocAnsi%2A> método a cero y desechar el bloque no administrado.</span><span class="sxs-lookup"><span data-stu-id="ce515-1650">It then uses the <xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocAnsi%2A> method to zero out and dispose the unmanaged block.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.SecureStringToHGlobalAnsi#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.SecureStringToHGlobalAnsi/CS/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.SecureStringToHGlobalAnsi#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.SecureStringToHGlobalAnsi/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ce515-1651">El parámetro <paramref name="s" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-1651">The <paramref name="s" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ce515-1652">El equipo actual no está ejecutando Windows 2000 Service Pack 3 o una versión posterior.</span><span class="sxs-lookup"><span data-stu-id="ce515-1652">The current computer is not running Windows 2000 Service Pack 3 or later.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="ce515-1653">No hay suficiente memoria disponible.</span><span class="sxs-lookup"><span data-stu-id="ce515-1653">There is insufficient memory available.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-1654">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-1654">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-1655">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-1655">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <block subset="none" type="usage"><para><span data-ttu-id="ce515-1656">Este método se admite solo en equipos que ejecutan Windows 2000 Service Pack 3 o posterior.</span><span class="sxs-lookup"><span data-stu-id="ce515-1656">This method is supported only on computers running Windows 2000 Service Pack 3 or later.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="SecureStringToGlobalAllocUnicode">
      <MemberSignature Language="C#" Value="public static IntPtr SecureStringToGlobalAllocUnicode (System.Security.SecureString s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int SecureStringToGlobalAllocUnicode(class System.Security.SecureString s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocUnicode(System.Security.SecureString)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SecureStringToGlobalAllocUnicode (s As SecureString) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr SecureStringToGlobalAllocUnicode(System::Security::SecureString ^ s);" />
      <MemberSignature Language="F#" Value="static member SecureStringToGlobalAllocUnicode : System.Security.SecureString -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocUnicode s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.Security.SecureString" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="ce515-1657">Objeto administrado que se va a copiar.</span><span class="sxs-lookup"><span data-stu-id="ce515-1657">The managed object to copy.</span></span></param>
        <summary><span data-ttu-id="ce515-1658">Copia el contenido de un objeto <see cref="T:System.Security.SecureString" /> administrado en la memoria no administrada.</span><span class="sxs-lookup"><span data-stu-id="ce515-1658">Copies the contents of a managed <see cref="T:System.Security.SecureString" /> object into unmanaged memory.</span></span></summary>
        <returns><span data-ttu-id="ce515-1659">La dirección, en memoria no administrada, donde se copió <paramref name="s" />, o 0 si <paramref name="s" /> es un objeto <see cref="T:System.Security.SecureString" /> cuya longitud es 0.</span><span class="sxs-lookup"><span data-stu-id="ce515-1659">The address, in unmanaged memory, where <paramref name="s" /> was copied, or 0 if <paramref name="s" /> is a <see cref="T:System.Security.SecureString" /> object whose length is 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-1660">El <xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocUnicode%2A> método resulta útil para el cálculo de referencias personalizado o para su uso al mezclar código administrado y.</span><span class="sxs-lookup"><span data-stu-id="ce515-1660">The <xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocUnicode%2A> method is useful for custom marshaling or for use when mixing managed and unmanaged code.</span></span> <span data-ttu-id="ce515-1661">Dado que este método asigna la memoria no administrada necesaria para una cadena, libere siempre la memoria mediante una llamada a la <xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocUnicode%2A> método.</span><span class="sxs-lookup"><span data-stu-id="ce515-1661">Because this method allocates the unmanaged memory required for a string, always free the memory by calling the <xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocUnicode%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ce515-1662">En el ejemplo siguiente se muestra cómo usar el <xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocUnicode%2A> método con el no administrado `LogonUser` función para realizar la suplantación con la <xref:System.Security.SecureString> clase.</span><span class="sxs-lookup"><span data-stu-id="ce515-1662">The following example demonstrates how to use the <xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocUnicode%2A> method with the unmanaged `LogonUser` function to perform impersonation with the <xref:System.Security.SecureString> class.</span></span> <span data-ttu-id="ce515-1663">El ejemplo se utiliza el <xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocUnicode%2A> método a cero y liberar la referencia de cadena no administrada.</span><span class="sxs-lookup"><span data-stu-id="ce515-1663">The example then uses the <xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocUnicode%2A> method to zero out and free the unmanaged string reference.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.SecureStringToHGlobalUni#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.SecureStringToHGlobalUni/CS/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.SecureStringToHGlobalUni#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.SecureStringToHGlobalUni/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ce515-1664">El parámetro <paramref name="s" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-1664">The <paramref name="s" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ce515-1665">El equipo actual no está ejecutando Windows 2000 Service Pack 3 o una versión posterior.</span><span class="sxs-lookup"><span data-stu-id="ce515-1665">The current computer is not running Windows 2000 Service Pack 3 or later.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="ce515-1666">No hay suficiente memoria disponible.</span><span class="sxs-lookup"><span data-stu-id="ce515-1666">There is insufficient memory available.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-1667">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-1667">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-1668">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-1668">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <block subset="none" type="usage"><para><span data-ttu-id="ce515-1669">Este método se admite solo en equipos que ejecutan Windows 2000 Service Pack 3 o posterior.</span><span class="sxs-lookup"><span data-stu-id="ce515-1669">This method is supported only on computers running Windows 2000 Service Pack 3 or later.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="SetComObjectData">
      <MemberSignature Language="C#" Value="public static bool SetComObjectData (object obj, object key, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool SetComObjectData(object obj, object key, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.SetComObjectData(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SetComObjectData (obj As Object, key As Object, data As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool SetComObjectData(System::Object ^ obj, System::Object ^ key, System::Object ^ data);" />
      <MemberSignature Language="F#" Value="static member SetComObjectData : obj * obj * obj -&gt; bool" Usage="System.Runtime.InteropServices.Marshal.SetComObjectData (obj, key, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="ce515-1670">Objeto COM donde se van a almacenar los datos.</span><span class="sxs-lookup"><span data-stu-id="ce515-1670">The COM object in which to store the data.</span></span></param>
        <param name="key"><span data-ttu-id="ce515-1671">Clave de la tabla hash interna del objeto COM donde se van a almacenar los datos.</span><span class="sxs-lookup"><span data-stu-id="ce515-1671">The key in the internal hash table of the COM object in which to store the data.</span></span></param>
        <param name="data"><span data-ttu-id="ce515-1672">Datos que se van a establecer.</span><span class="sxs-lookup"><span data-stu-id="ce515-1672">The data to set.</span></span></param>
        <summary><span data-ttu-id="ce515-1673">Establece los datos a los que hace referencia la clave especificada desde el objeto COM especificado.</span><span class="sxs-lookup"><span data-stu-id="ce515-1673">Sets data referenced by the specified key in the specified COM object.</span></span></summary>
        <returns><span data-ttu-id="ce515-1674">Es <see langword="true" /> si los datos se han establecido correctamente; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-1674"><see langword="true" /> if the data was set successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-1675">Todos los objetos COM ajustados en un [contenedor RCW](~/docs/framework/interop/runtime-callable-wrapper.md) (RCW) tienen una tabla hash asociada, a la que <xref:System.Runtime.InteropServices.Marshal.SetComObjectData%2A> agrega datos.</span><span class="sxs-lookup"><span data-stu-id="ce515-1675">All COM objects wrapped in a [Runtime Callable Wrapper](~/docs/framework/interop/runtime-callable-wrapper.md) (RCW) have an associated hash table, to which <xref:System.Runtime.InteropServices.Marshal.SetComObjectData%2A> adds data.</span></span> <span data-ttu-id="ce515-1676"><xref:System.Runtime.InteropServices.Marshal.GetComObjectData%2A?displayProperty=nameWithType> Recupera datos de la tabla hash.</span><span class="sxs-lookup"><span data-stu-id="ce515-1676"><xref:System.Runtime.InteropServices.Marshal.GetComObjectData%2A?displayProperty=nameWithType> retrieves data from the hash table.</span></span> <span data-ttu-id="ce515-1677">Nunca debe tener que llamar a cualquiera de estos métodos desde el código.</span><span class="sxs-lookup"><span data-stu-id="ce515-1677">You should never have to call either method from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ce515-1678">El valor de <paramref name="obj" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-1678"><paramref name="obj" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="ce515-1679">O bien</span><span class="sxs-lookup"><span data-stu-id="ce515-1679">-or-</span></span> 
 <span data-ttu-id="ce515-1680">El valor de <paramref name="key" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-1680"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ce515-1681"><paramref name="obj" /> no es un objeto COM.</span><span class="sxs-lookup"><span data-stu-id="ce515-1681"><paramref name="obj" /> is not a COM object.</span></span>  
  
<span data-ttu-id="ce515-1682">O bien</span><span class="sxs-lookup"><span data-stu-id="ce515-1682">-or-</span></span> 
 <span data-ttu-id="ce515-1683"><paramref name="obj" /> es un objeto [!INCLUDE[wrt](~/includes/wrt-md.md)].</span><span class="sxs-lookup"><span data-stu-id="ce515-1683"><paramref name="obj" /> is a [!INCLUDE[wrt](~/includes/wrt-md.md)] object.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-1684">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-1684">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-1685">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-1685">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetComObjectData(System.Object,System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SizeOf">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ce515-1686">Devuelve el tamaño no administrado, en bytes, de una clase.</span><span class="sxs-lookup"><span data-stu-id="ce515-1686">Returns the unmanaged size, in bytes, of a class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SizeOf">
      <MemberSignature Language="C#" Value="public static int SizeOf (object structure);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 SizeOf(object structure) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.SizeOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SizeOf (structure As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int SizeOf(System::Object ^ structure);" />
      <MemberSignature Language="F#" Value="static member SizeOf : obj -&gt; int" Usage="System.Runtime.InteropServices.Marshal.SizeOf structure" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netcore-2.2">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Obsolete("SizeOf(Object) may be unavailable in future releases. Instead, use SizeOf&lt;T&gt;(). For more info, go to http://go.microsoft.com/fwlink/?LinkID=296514")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="structure" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="structure"><span data-ttu-id="ce515-1687">Objeto cuyo tamaño se devolverá.</span><span class="sxs-lookup"><span data-stu-id="ce515-1687">The object whose size is to be returned.</span></span></param>
        <summary><span data-ttu-id="ce515-1688">Devuelve el tamaño no administrado de un objeto en bytes.</span><span class="sxs-lookup"><span data-stu-id="ce515-1688">Returns the unmanaged size of an object in bytes.</span></span></summary>
        <returns><span data-ttu-id="ce515-1689">Tamaño del objeto especificado en código no administrado.</span><span class="sxs-lookup"><span data-stu-id="ce515-1689">The size of the specified object in unmanaged code.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-1690">Este método acepta una instancia de una estructura, que puede ser un tipo de referencia o un tipo de valor con conversión boxing.</span><span class="sxs-lookup"><span data-stu-id="ce515-1690">This method accepts an instance of a structure, which can be a reference type or a boxed value type.</span></span> <span data-ttu-id="ce515-1691">El diseño debe ser secuencial ni explícito.</span><span class="sxs-lookup"><span data-stu-id="ce515-1691">The layout must be sequential or explicit.</span></span>  
  
 <span data-ttu-id="ce515-1692">El tamaño devuelto es el tamaño del objeto no administrado.</span><span class="sxs-lookup"><span data-stu-id="ce515-1692">The size returned is the size of the unmanaged object.</span></span> <span data-ttu-id="ce515-1693">Los tamaños administrados y no de un objeto pueden ser diferente.</span><span class="sxs-lookup"><span data-stu-id="ce515-1693">The unmanaged and managed sizes of an object can differ.</span></span> <span data-ttu-id="ce515-1694">Tipos de caracteres, el tamaño se ve afectado por la <xref:System.Runtime.InteropServices.CharSet> aplicada a esa clase de valor.</span><span class="sxs-lookup"><span data-stu-id="ce515-1694">For character types, the size is affected by the <xref:System.Runtime.InteropServices.CharSet> value applied to that class.</span></span>  
  
 <span data-ttu-id="ce515-1695">Puede usar el <xref:System.Runtime.InteropServices.Marshal.SizeOf%2A> método para determinar cuánta memoria no administrada para asignar mediante el <xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A> y <xref:System.Runtime.InteropServices.Marshal.AllocCoTaskMem%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="ce515-1695">You can use the <xref:System.Runtime.InteropServices.Marshal.SizeOf%2A> method to determine how much unmanaged memory to allocate using the <xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A> and <xref:System.Runtime.InteropServices.Marshal.AllocCoTaskMem%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ce515-1696">El ejemplo siguiente crea una estructura administrada, transfiere a la memoria no administrada y, a continuación, transfiere a la memoria administrada.</span><span class="sxs-lookup"><span data-stu-id="ce515-1696">The following example creates a managed structure, transfers it to unmanaged memory, and then transfers it back to managed memory.</span></span> <span data-ttu-id="ce515-1697">Este ejemplo se usa el <xref:System.Runtime.InteropServices.Marshal.SizeOf%2A> método para determinar cuánta memoria no administrada para asignar.</span><span class="sxs-lookup"><span data-stu-id="ce515-1697">This example uses the <xref:System.Runtime.InteropServices.Marshal.SizeOf%2A> method to determine how much unmanaged memory to allocate.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.PtrToStructure-SizeOf#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.PtrToStructure-SizeOf/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.PtrToStructure-SizeOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.PtrToStructure-SizeOf/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ce515-1698">El parámetro <paramref name="structure" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-1698">The <paramref name="structure" /> parameter is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Runtime.InteropServices.CharSet" />
      </Docs>
    </Member>
    <Member MemberName="SizeOf">
      <MemberSignature Language="C#" Value="public static int SizeOf (Type t);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 SizeOf(class System.Type t) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.SizeOf(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SizeOf (t As Type) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int SizeOf(Type ^ t);" />
      <MemberSignature Language="F#" Value="static member SizeOf : Type -&gt; int" Usage="System.Runtime.InteropServices.Marshal.SizeOf t" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netcore-2.2">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Obsolete("SizeOf(Type) may be unavailable in future releases. Instead, use SizeOf&lt;T&gt;(). For more info, go to http://go.microsoft.com/fwlink/?LinkID=296515")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="t"><span data-ttu-id="ce515-1699">Tipo cuyo tamaño se va a devolver.</span><span class="sxs-lookup"><span data-stu-id="ce515-1699">The type whose size is to be returned.</span></span></param>
        <summary><span data-ttu-id="ce515-1700">Devuelve el tamaño, expresado en bytes, de un tipo no administrado.</span><span class="sxs-lookup"><span data-stu-id="ce515-1700">Returns the size of an unmanaged type in bytes.</span></span></summary>
        <returns><span data-ttu-id="ce515-1701">Tamaño del tipo especificado en código no administrado.</span><span class="sxs-lookup"><span data-stu-id="ce515-1701">The size of the specified type in unmanaged code.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-1702">Puede usar este método cuando no tiene una estructura.</span><span class="sxs-lookup"><span data-stu-id="ce515-1702">You can use this method when you do not have a structure.</span></span> <span data-ttu-id="ce515-1703">El diseño debe ser secuencial ni explícito.</span><span class="sxs-lookup"><span data-stu-id="ce515-1703">The layout must be sequential or explicit.</span></span>  
  
 <span data-ttu-id="ce515-1704">El tamaño devuelto es el tamaño del tipo no administrado.</span><span class="sxs-lookup"><span data-stu-id="ce515-1704">The size returned is the size of the unmanaged type.</span></span> <span data-ttu-id="ce515-1705">Los tamaños administrados y no de un objeto pueden ser diferente.</span><span class="sxs-lookup"><span data-stu-id="ce515-1705">The unmanaged and managed sizes of an object can differ.</span></span> <span data-ttu-id="ce515-1706">Tipos de caracteres, el tamaño se ve afectado por la <xref:System.Runtime.InteropServices.CharSet> aplicada a esa clase de valor.</span><span class="sxs-lookup"><span data-stu-id="ce515-1706">For character types, the size is affected by the <xref:System.Runtime.InteropServices.CharSet> value applied to that class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ce515-1707">En el ejemplo siguiente se muestra la forma de llamar al método <xref:System.Runtime.InteropServices.Marshal.SizeOf%2A>.</span><span class="sxs-lookup"><span data-stu-id="ce515-1707">The following example demonstrates calling the <xref:System.Runtime.InteropServices.Marshal.SizeOf%2A> method.</span></span> <span data-ttu-id="ce515-1708">Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Runtime.InteropServices.Marshal> clase.</span><span class="sxs-lookup"><span data-stu-id="ce515-1708">This code example is part of a larger example provided for the <xref:System.Runtime.InteropServices.Marshal> class.</span></span>  
  
 [!code-cpp[Marshal#3](~/samples/snippets/cpp/VS_Snippets_CLR/Marshal/cpp/marshal.cpp#3)]
 [!code-csharp[Marshal#3](~/samples/snippets/csharp/VS_Snippets_CLR/Marshal/CS/Marshal.cs#3)]
 [!code-vb[Marshal#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/Marshal/VB/Marshal.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ce515-1709">El parámetro <paramref name="t" /> es una definición de tipo genérico.</span><span class="sxs-lookup"><span data-stu-id="ce515-1709">The <paramref name="t" /> parameter is a generic type definition.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ce515-1710">El parámetro <paramref name="t" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-1710">The <paramref name="t" /> parameter is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Runtime.InteropServices.CharSet" />
      </Docs>
    </Member>
    <Member MemberName="SizeOf&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int SizeOf&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 SizeOf&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.SizeOf``1" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SizeOf(Of T) () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static int SizeOf();" />
      <MemberSignature Language="F#" Value="static member SizeOf : unit -&gt; int" Usage="System.Runtime.InteropServices.Marshal.SizeOf " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T"><span data-ttu-id="ce515-1711">Tipo cuyo tamaño se va a devolver.</span><span class="sxs-lookup"><span data-stu-id="ce515-1711">The type whose size is to be returned.</span></span></typeparam>
        <summary><span data-ttu-id="ce515-1712">[Compatible con .NET Framework 4.5.1 y versiones posteriores]</span><span class="sxs-lookup"><span data-stu-id="ce515-1712">[Supported in the .NET Framework 4.5.1 and later versions]</span></span> 
<span data-ttu-id="ce515-1713">Devuelve el tamaño, expresado en bytes, de un tipo no administrado.</span><span class="sxs-lookup"><span data-stu-id="ce515-1713">Returns the size of an unmanaged type in bytes.</span></span></summary>
        <returns><span data-ttu-id="ce515-1714">El tamaño, en bytes, del tipo especificado por el parámetro de tipo genérico <typeparamref name="T" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-1714">The size, in bytes, of the type that is specified by the <typeparamref name="T" /> generic type parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-1715">Puede usar este método cuando no tiene una estructura.</span><span class="sxs-lookup"><span data-stu-id="ce515-1715">You can use this method when you do not have a structure.</span></span> <span data-ttu-id="ce515-1716">El diseño debe ser secuencial ni explícito.</span><span class="sxs-lookup"><span data-stu-id="ce515-1716">The layout must be sequential or explicit.</span></span>  
  
 <span data-ttu-id="ce515-1717">El tamaño devuelto es el tamaño del tipo no administrado.</span><span class="sxs-lookup"><span data-stu-id="ce515-1717">The size returned is the size of the unmanaged type.</span></span> <span data-ttu-id="ce515-1718">Los tamaños administrados y no de un objeto pueden ser diferente.</span><span class="sxs-lookup"><span data-stu-id="ce515-1718">The unmanaged and managed sizes of an object can differ.</span></span> <span data-ttu-id="ce515-1719">Tipos de caracteres, el tamaño se ve afectado por la <xref:System.Runtime.InteropServices.CharSet> aplicada a esa clase de valor.</span><span class="sxs-lookup"><span data-stu-id="ce515-1719">For character types, the size is affected by the <xref:System.Runtime.InteropServices.CharSet> value applied to that class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SizeOf&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int SizeOf&lt;T&gt; (T structure);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 SizeOf&lt;T&gt;(!!T structure) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.SizeOf``1(``0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SizeOf(Of T) (structure As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static int SizeOf(T structure);" />
      <MemberSignature Language="F#" Value="static member SizeOf : 'T -&gt; int" Usage="System.Runtime.InteropServices.Marshal.SizeOf structure" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="structure" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="ce515-1720">Tipo del parámetro <paramref name="structure" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-1720">The type of the <paramref name="structure" /> parameter.</span></span></typeparam>
        <param name="structure"><span data-ttu-id="ce515-1721">Objeto cuyo tamaño se devolverá.</span><span class="sxs-lookup"><span data-stu-id="ce515-1721">The object whose size is to be returned.</span></span></param>
        <summary><span data-ttu-id="ce515-1722">[Compatible con .NET Framework 4.5.1 y versiones posteriores]</span><span class="sxs-lookup"><span data-stu-id="ce515-1722">[Supported in the .NET Framework 4.5.1 and later versions]</span></span> 
<span data-ttu-id="ce515-1723">Devuelve el tamaño no administrado de un objeto de un tipo especificado en bytes.</span><span class="sxs-lookup"><span data-stu-id="ce515-1723">Returns the unmanaged size of an object of a specified type in bytes.</span></span></summary>
        <returns><span data-ttu-id="ce515-1724">Tamaño del objeto especificado, en bytes, en código no administrado.</span><span class="sxs-lookup"><span data-stu-id="ce515-1724">The size, in bytes, of the specified object in unmanaged code.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-1725">Este método acepta una instancia de una estructura, que puede ser un tipo de referencia o un tipo de valor con conversión boxing.</span><span class="sxs-lookup"><span data-stu-id="ce515-1725">This method accepts an instance of a structure, which can be a reference type or a boxed value type.</span></span> <span data-ttu-id="ce515-1726">El diseño debe ser secuencial ni explícito.</span><span class="sxs-lookup"><span data-stu-id="ce515-1726">The layout must be sequential or explicit.</span></span>  
  
 <span data-ttu-id="ce515-1727">El tamaño devuelto es el tamaño del objeto no administrado.</span><span class="sxs-lookup"><span data-stu-id="ce515-1727">The size returned is the size of the unmanaged object.</span></span> <span data-ttu-id="ce515-1728">Los tamaños administrados y no de un objeto pueden ser diferente.</span><span class="sxs-lookup"><span data-stu-id="ce515-1728">The unmanaged and managed sizes of an object can differ.</span></span> <span data-ttu-id="ce515-1729">Tipos de caracteres, el tamaño se ve afectado por la <xref:System.Runtime.InteropServices.CharSet> aplicada a esa clase de valor.</span><span class="sxs-lookup"><span data-stu-id="ce515-1729">For character types, the size is affected by the <xref:System.Runtime.InteropServices.CharSet> value applied to that class.</span></span>  
  
 <span data-ttu-id="ce515-1730">Puede usar el <xref:System.Runtime.InteropServices.Marshal.SizeOf%60%601%28%60%600%29> método para determinar cuánta memoria no administrada que asignará con el <xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A> y <xref:System.Runtime.InteropServices.Marshal.AllocCoTaskMem%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="ce515-1730">You can use the <xref:System.Runtime.InteropServices.Marshal.SizeOf%60%601%28%60%600%29> method to determine how much unmanaged memory to allocate by using the <xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A> and <xref:System.Runtime.InteropServices.Marshal.AllocCoTaskMem%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ce515-1731">El parámetro <paramref name="structure" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-1731">The <paramref name="structure" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="StringToBSTR">
      <MemberSignature Language="C#" Value="public static IntPtr StringToBSTR (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int StringToBSTR(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.StringToBSTR(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StringToBSTR (s As String) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr StringToBSTR(System::String ^ s);" />
      <MemberSignature Language="F#" Value="static member StringToBSTR : string -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.StringToBSTR s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="ce515-1732">Cadena administrada que se va a copiar.</span><span class="sxs-lookup"><span data-stu-id="ce515-1732">The managed string to be copied.</span></span></param>
        <summary><span data-ttu-id="ce515-1733">Asigna un [BSTR](https://msdn.microsoft.com/library/ms221069.aspx) y copia en él el contenido de un objeto <see cref="T:System.String" /> administrado.</span><span class="sxs-lookup"><span data-stu-id="ce515-1733">Allocates a [BSTR](https://msdn.microsoft.com/library/ms221069.aspx) and copies the contents of a managed <see cref="T:System.String" /> into it.</span></span></summary>
        <returns><span data-ttu-id="ce515-1734">Puntero no administrado a <see langword="BSTR" /> o 0 si <paramref name="s" /> es null.</span><span class="sxs-lookup"><span data-stu-id="ce515-1734">An unmanaged pointer to the <see langword="BSTR" />, or 0 if <paramref name="s" /> is null.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-1735"><xref:System.Runtime.InteropServices.Marshal.StringToBSTR%2A> es útil para el cálculo de referencias personalizado o al mezclar código administrado y no administrado.</span><span class="sxs-lookup"><span data-stu-id="ce515-1735"><xref:System.Runtime.InteropServices.Marshal.StringToBSTR%2A> is useful for custom marshaling or when mixing managed and unmanaged code.</span></span> <span data-ttu-id="ce515-1736">Dado que este método asigna la memoria no administrada necesaria para una cadena, libere siempre los `BSTR` cuando haya terminado mediante una llamada a <xref:System.Runtime.InteropServices.Marshal.FreeBSTR%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ce515-1736">Because this method allocates the unmanaged memory required for a string, always free the `BSTR` when finished by calling <xref:System.Runtime.InteropServices.Marshal.FreeBSTR%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="ce515-1737">Este método proporciona la funcionalidad opuesta de <xref:System.Runtime.InteropServices.Marshal.PtrToStringBSTR%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ce515-1737">This method provides the opposite functionality of <xref:System.Runtime.InteropServices.Marshal.PtrToStringBSTR%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="ce515-1738">No hay suficiente memoria disponible.</span><span class="sxs-lookup"><span data-stu-id="ce515-1738">There is insufficient memory available.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="ce515-1739">La longitud de <paramref name="s" /> está fuera del intervalo.</span><span class="sxs-lookup"><span data-stu-id="ce515-1739">The length for <paramref name="s" /> is out of range.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-1740">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-1740">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-1741">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-1741">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.PtrToStringBSTR(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.FreeBSTR(System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="StringToCoTaskMemAnsi">
      <MemberSignature Language="C#" Value="public static IntPtr StringToCoTaskMemAnsi (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int StringToCoTaskMemAnsi(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAnsi(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StringToCoTaskMemAnsi (s As String) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr StringToCoTaskMemAnsi(System::String ^ s);" />
      <MemberSignature Language="F#" Value="static member StringToCoTaskMemAnsi : string -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.StringToCoTaskMemAnsi s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="ce515-1742">Cadena administrada que se va a copiar.</span><span class="sxs-lookup"><span data-stu-id="ce515-1742">A managed string to be copied.</span></span></param>
        <summary><span data-ttu-id="ce515-1743">Copia el contenido de un <see cref="T:System.String" /> administrado en un bloque de memoria asignado desde el asignador de tareas COM no administrado.</span><span class="sxs-lookup"><span data-stu-id="ce515-1743">Copies the contents of a managed <see cref="T:System.String" /> to a block of memory allocated from the unmanaged COM task allocator.</span></span></summary>
        <returns><span data-ttu-id="ce515-1744">Entero que representa un puntero al bloque de memoria asignado a la cadena, o 0 si <paramref name="s" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-1744">An integer representing a pointer to the block of memory allocated for the string, or 0 if <paramref name="s" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-1745"><xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAnsi%2A> es útil para el cálculo de referencias personalizado o al mezclar código administrado y no administrado.</span><span class="sxs-lookup"><span data-stu-id="ce515-1745"><xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAnsi%2A> is useful for custom marshaling or when mixing managed and unmanaged code.</span></span> <span data-ttu-id="ce515-1746">Dado que este método asigna la memoria no administrada necesaria para una cadena, libere siempre la memoria mediante una llamada a <xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A>.</span><span class="sxs-lookup"><span data-stu-id="ce515-1746">Because this method allocates the unmanaged memory required for a string, always free the memory by calling <xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A>.</span></span> <span data-ttu-id="ce515-1747">Este método proporciona la funcionalidad opuesta de <xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ce515-1747">This method provides the opposite functionality of <xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="ce515-1748">Los caracteres de la cadena se copian como caracteres ANSI.</span><span class="sxs-lookup"><span data-stu-id="ce515-1748">The characters of the string are copied as ANSI characters.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="ce515-1749">No hay suficiente memoria disponible.</span><span class="sxs-lookup"><span data-stu-id="ce515-1749">There is insufficient memory available.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="ce515-1750">El parámetro <paramref name="s" /> supera la longitud máxima permitida por el sistema operativo.</span><span class="sxs-lookup"><span data-stu-id="ce515-1750">The <paramref name="s" /> parameter exceeds the maximum length allowed by the operating system.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-1751">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-1751">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-1752">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-1752">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.FreeCoTaskMem(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.PtrToStringAnsi(System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="StringToCoTaskMemAuto">
      <MemberSignature Language="C#" Value="public static IntPtr StringToCoTaskMemAuto (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int StringToCoTaskMemAuto(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAuto(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StringToCoTaskMemAuto (s As String) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr StringToCoTaskMemAuto(System::String ^ s);" />
      <MemberSignature Language="F#" Value="static member StringToCoTaskMemAuto : string -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.StringToCoTaskMemAuto s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="ce515-1753">Cadena administrada que se va a copiar.</span><span class="sxs-lookup"><span data-stu-id="ce515-1753">A managed string to be copied.</span></span></param>
        <summary><span data-ttu-id="ce515-1754">Copia el contenido de un <see cref="T:System.String" /> administrado en un bloque de memoria asignado desde el asignador de tareas COM no administrado.</span><span class="sxs-lookup"><span data-stu-id="ce515-1754">Copies the contents of a managed <see cref="T:System.String" /> to a block of memory allocated from the unmanaged COM task allocator.</span></span></summary>
        <returns><span data-ttu-id="ce515-1755">Bloque de memoria asignado o 0 si <paramref name="s" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-1755">The allocated memory block, or 0 if <paramref name="s" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-1756"><xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAuto%2A> es útil para el cálculo de referencias personalizado o para su uso al mezclar código administrado y no administrado.</span><span class="sxs-lookup"><span data-stu-id="ce515-1756"><xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAuto%2A> is useful for custom marshaling or for use when mixing managed and unmanaged code.</span></span> <span data-ttu-id="ce515-1757">Dado que este método asigna la memoria no administrada necesaria para una cadena, libere siempre la memoria mediante una llamada a <xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A>.</span><span class="sxs-lookup"><span data-stu-id="ce515-1757">Because this method allocates the unmanaged memory required for a string, always free the memory by calling <xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A>.</span></span> <span data-ttu-id="ce515-1758">Este método proporciona la funcionalidad opuesta de <xref:System.Runtime.InteropServices.Marshal.PtrToStringAuto%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ce515-1758">This method provides the opposite functionality of <xref:System.Runtime.InteropServices.Marshal.PtrToStringAuto%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="ce515-1759">Los caracteres de la cadena se copian como caracteres ANSI o Unicode, dependiendo del sistema operativo donde se ejecuta el código.</span><span class="sxs-lookup"><span data-stu-id="ce515-1759">The characters of the string are copied as either ANSI or Unicode characters, depending on the operating system where the code is executing.</span></span> <span data-ttu-id="ce515-1760">En Windows 98, los caracteres se copian como caracteres ANSI.</span><span class="sxs-lookup"><span data-stu-id="ce515-1760">On Windows 98, the characters are copied as ANSI characters.</span></span> <span data-ttu-id="ce515-1761">En Windows NT 4.0, Windows 2000, Windows XP y la familia Windows Server 2003, los caracteres se copian como caracteres Unicode.</span><span class="sxs-lookup"><span data-stu-id="ce515-1761">On Windows NT 4.0, Windows 2000, Windows XP, and the Windows Server 2003 family, the characters are copied as Unicode characters.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="ce515-1762">No hay suficiente memoria disponible.</span><span class="sxs-lookup"><span data-stu-id="ce515-1762">There is insufficient memory available.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="ce515-1763">La longitud de <paramref name="s" /> está fuera del intervalo.</span><span class="sxs-lookup"><span data-stu-id="ce515-1763">The length for <paramref name="s" /> is out of range.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-1764">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-1764">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-1765">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-1765">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.PtrToStringAuto(System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="StringToCoTaskMemUni">
      <MemberSignature Language="C#" Value="public static IntPtr StringToCoTaskMemUni (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int StringToCoTaskMemUni(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemUni(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StringToCoTaskMemUni (s As String) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr StringToCoTaskMemUni(System::String ^ s);" />
      <MemberSignature Language="F#" Value="static member StringToCoTaskMemUni : string -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.StringToCoTaskMemUni s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="ce515-1766">Cadena administrada que se va a copiar.</span><span class="sxs-lookup"><span data-stu-id="ce515-1766">A managed string to be copied.</span></span></param>
        <summary><span data-ttu-id="ce515-1767">Copia el contenido de un <see cref="T:System.String" /> administrado en un bloque de memoria asignado desde el asignador de tareas COM no administrado.</span><span class="sxs-lookup"><span data-stu-id="ce515-1767">Copies the contents of a managed <see cref="T:System.String" /> to a block of memory allocated from the unmanaged COM task allocator.</span></span></summary>
        <returns><span data-ttu-id="ce515-1768">Entero que representa un puntero al bloque de memoria asignado a la cadena, o 0 si s es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-1768">An integer representing a pointer to the block of memory allocated for the string, or 0 if s is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-1769"><xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemUni%2A> es útil para el cálculo de referencias personalizado o para su uso al mezclar código administrado y no administrado.</span><span class="sxs-lookup"><span data-stu-id="ce515-1769"><xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemUni%2A> is useful for custom marshaling or for use when mixing managed and unmanaged code.</span></span> <span data-ttu-id="ce515-1770">Dado que este método asigna la memoria no administrada necesaria para una cadena, libere siempre la memoria mediante una llamada a <xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ce515-1770">Because this method allocates the unmanaged memory required for a string, always free the memory by calling <xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="ce515-1771">Este método proporciona la funcionalidad opuesta de <xref:System.Runtime.InteropServices.Marshal.PtrToStringUni%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ce515-1771">This method provides the opposite functionality of <xref:System.Runtime.InteropServices.Marshal.PtrToStringUni%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="ce515-1772">Los caracteres de la cadena se copian como caracteres Unicode.</span><span class="sxs-lookup"><span data-stu-id="ce515-1772">The characters of the string are copied as Unicode characters.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="ce515-1773">El parámetro <paramref name="s" /> supera la longitud máxima permitida por el sistema operativo.</span><span class="sxs-lookup"><span data-stu-id="ce515-1773">The <paramref name="s" /> parameter exceeds the maximum length allowed by the operating system.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="ce515-1774">No hay suficiente memoria disponible.</span><span class="sxs-lookup"><span data-stu-id="ce515-1774">There is insufficient memory available.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-1775">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-1775">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-1776">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-1776">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.FreeCoTaskMem(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.PtrToStringUni(System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="StringToCoTaskMemUTF8">
      <MemberSignature Language="C#" Value="public static IntPtr StringToCoTaskMemUTF8 (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int StringToCoTaskMemUTF8(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemUTF8(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StringToCoTaskMemUTF8 (s As String) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr StringToCoTaskMemUTF8(System::String ^ s);" />
      <MemberSignature Language="F#" Value="static member StringToCoTaskMemUTF8 : string -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.StringToCoTaskMemUTF8 s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.1">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StringToHGlobalAnsi">
      <MemberSignature Language="C#" Value="public static IntPtr StringToHGlobalAnsi (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int StringToHGlobalAnsi(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StringToHGlobalAnsi (s As String) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr StringToHGlobalAnsi(System::String ^ s);" />
      <MemberSignature Language="F#" Value="static member StringToHGlobalAnsi : string -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="ce515-1777">Cadena administrada que se va a copiar.</span><span class="sxs-lookup"><span data-stu-id="ce515-1777">A managed string to be copied.</span></span></param>
        <summary><span data-ttu-id="ce515-1778">Copia el contenido de un <see cref="T:System.String" /> administrado en la memoria no administrada, convirtiéndolo en formato ANSI mientras realiza la copia.</span><span class="sxs-lookup"><span data-stu-id="ce515-1778">Copies the contents of a managed <see cref="T:System.String" /> into unmanaged memory, converting into ANSI format as it copies.</span></span></summary>
        <returns><span data-ttu-id="ce515-1779">Dirección, en memoria no administrada, adonde se copió <paramref name="s" /> o 0 si <paramref name="s" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-1779">The address, in unmanaged memory, to where <paramref name="s" /> was copied, or 0 if <paramref name="s" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-1780"><xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi%2A> es útil para el cálculo de referencias personalizado o al mezclar código administrado y no administrado.</span><span class="sxs-lookup"><span data-stu-id="ce515-1780"><xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi%2A> is useful for custom marshaling or when mixing managed and unmanaged code.</span></span> <span data-ttu-id="ce515-1781">Dado que este método asigna la memoria no administrada necesaria para una cadena, libere siempre la memoria mediante una llamada a <xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A>.</span><span class="sxs-lookup"><span data-stu-id="ce515-1781">Because this method allocates the unmanaged memory required for a string, always free the memory by calling <xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A>.</span></span> <span data-ttu-id="ce515-1782"><xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi%2A> proporciona la funcionalidad de opuesta <xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ce515-1782"><xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi%2A> provides the opposite functionality of <xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="ce515-1783">Este método copia los caracteres nulos incrustados e incluye un carácter nulo de terminación.</span><span class="sxs-lookup"><span data-stu-id="ce515-1783">This method copies embedded null characters, and includes a terminating null character.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ce515-1784">En el ejemplo siguiente se muestra cómo convertir el contenido de una clase administrada <xref:System.String> clase a la memoria no administrada y, a continuación, eliminar la memoria no administrada cuando haya terminado.</span><span class="sxs-lookup"><span data-stu-id="ce515-1784">The following example demonstrates how to convert the contents of a managed <xref:System.String> class to unmanaged memory and then dispose of the unmanaged memory when done.</span></span>  
  
 [!code-cpp[Runtime.InteropServices.Marshal.StringToHGlobalAnsi#1](~/samples/snippets/cpp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.StringToHGlobalAnsi/CPP/stringtohglobalansi.cpp#1)]
 [!code-csharp[Runtime.InteropServices.Marshal.StringToHGlobalAnsi#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.StringToHGlobalAnsi/cs/stringtohglobalansi.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="ce515-1785">No hay suficiente memoria disponible.</span><span class="sxs-lookup"><span data-stu-id="ce515-1785">There is insufficient memory available.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="ce515-1786">El parámetro <paramref name="s" /> supera la longitud máxima permitida por el sistema operativo.</span><span class="sxs-lookup"><span data-stu-id="ce515-1786">The <paramref name="s" /> parameter exceeds the maximum length allowed by the operating system.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-1787">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-1787">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-1788">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-1788">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.FreeCoTaskMem(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.PtrToStringAnsi(System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="StringToHGlobalAuto">
      <MemberSignature Language="C#" Value="public static IntPtr StringToHGlobalAuto (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int StringToHGlobalAuto(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.StringToHGlobalAuto(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StringToHGlobalAuto (s As String) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr StringToHGlobalAuto(System::String ^ s);" />
      <MemberSignature Language="F#" Value="static member StringToHGlobalAuto : string -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.StringToHGlobalAuto s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="ce515-1789">Cadena administrada que se va a copiar.</span><span class="sxs-lookup"><span data-stu-id="ce515-1789">A managed string to be copied.</span></span></param>
        <summary><span data-ttu-id="ce515-1790">Copia el contenido de un <see cref="T:System.String" /> administrado en la memoria no administrada, convirtiéndolo en formato ANSI si es necesario.</span><span class="sxs-lookup"><span data-stu-id="ce515-1790">Copies the contents of a managed <see cref="T:System.String" /> into unmanaged memory, converting into ANSI format if required.</span></span></summary>
        <returns><span data-ttu-id="ce515-1791">Dirección, en memoria no administrada, donde se copió la cadena o 0 si <paramref name="s" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-1791">The address, in unmanaged memory, to where the string was copied, or 0 if <paramref name="s" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-1792"><xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAuto%2A> es útil para el cálculo de referencias personalizado o para su uso al mezclar código administrado y no administrado.</span><span class="sxs-lookup"><span data-stu-id="ce515-1792"><xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAuto%2A> is useful for custom marshaling or for use when mixing managed and unmanaged code.</span></span> <span data-ttu-id="ce515-1793">Dado que este método asigna la memoria no administrada necesaria para una cadena, libere siempre la memoria mediante una llamada a <xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A>.</span><span class="sxs-lookup"><span data-stu-id="ce515-1793">Because this method allocates the unmanaged memory required for a string, always free the memory by calling <xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A>.</span></span> <span data-ttu-id="ce515-1794">Este método proporciona la funcionalidad opuesta de <xref:System.Runtime.InteropServices.Marshal.PtrToStringAuto%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ce515-1794">This method provides the opposite functionality of <xref:System.Runtime.InteropServices.Marshal.PtrToStringAuto%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="ce515-1795">Este método copia los caracteres nulos incrustados e incluye un carácter nulo de terminación.</span><span class="sxs-lookup"><span data-stu-id="ce515-1795">This method copies embedded null characters, and includes a terminating null character.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ce515-1796">En el ejemplo siguiente se muestra cómo convertir el contenido de una clase administrada <xref:System.String> clase a la memoria no administrada y, a continuación, eliminar la memoria no administrada cuando haya terminado.</span><span class="sxs-lookup"><span data-stu-id="ce515-1796">The following example demonstrates how to convert the contents of a managed <xref:System.String> class to unmanaged memory and then dispose of the unmanaged memory when done.</span></span>  
  
 [!code-cpp[Runtime.InteropServices.Marshal.StringToHGlobalAuto#1](~/samples/snippets/cpp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.StringToHGlobalAuto/CPP/sample.cpp#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="ce515-1797">No hay suficiente memoria disponible.</span><span class="sxs-lookup"><span data-stu-id="ce515-1797">There is insufficient memory available.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-1798">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-1798">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-1799">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-1799">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.PtrToStringAuto(System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="StringToHGlobalUni">
      <MemberSignature Language="C#" Value="public static IntPtr StringToHGlobalUni (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int StringToHGlobalUni(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.StringToHGlobalUni(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StringToHGlobalUni (s As String) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr StringToHGlobalUni(System::String ^ s);" />
      <MemberSignature Language="F#" Value="static member StringToHGlobalUni : string -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.StringToHGlobalUni s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="ce515-1800">Cadena administrada que se va a copiar.</span><span class="sxs-lookup"><span data-stu-id="ce515-1800">A managed string to be copied.</span></span></param>
        <summary><span data-ttu-id="ce515-1801">Copia el contenido de un <see cref="T:System.String" /> administrado en la memoria no administrada.</span><span class="sxs-lookup"><span data-stu-id="ce515-1801">Copies the contents of a managed <see cref="T:System.String" /> into unmanaged memory.</span></span></summary>
        <returns><span data-ttu-id="ce515-1802">Dirección, en memoria no administrada, donde se copió <paramref name="s" /> o 0 si <paramref name="s" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-1802">The address, in unmanaged memory, to where the <paramref name="s" /> was copied, or 0 if <paramref name="s" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-1803"><xref:System.Runtime.InteropServices.Marshal.StringToHGlobalUni%2A> es útil para el cálculo de referencias personalizado o para su uso al mezclar código administrado y no administrado.</span><span class="sxs-lookup"><span data-stu-id="ce515-1803"><xref:System.Runtime.InteropServices.Marshal.StringToHGlobalUni%2A> is useful for custom marshaling or for use when mixing managed and unmanaged code.</span></span> <span data-ttu-id="ce515-1804">Dado que este método asigna la memoria no administrada necesaria para una cadena, libere siempre la memoria mediante una llamada a <xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A>.</span><span class="sxs-lookup"><span data-stu-id="ce515-1804">Because this method allocates the unmanaged memory required for a string, always free the memory by calling <xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A>.</span></span> <span data-ttu-id="ce515-1805">Este método proporciona la funcionalidad opuesta de <xref:System.Runtime.InteropServices.Marshal.PtrToStringUni%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ce515-1805">This method provides the opposite functionality of <xref:System.Runtime.InteropServices.Marshal.PtrToStringUni%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="ce515-1806">Este método copia los caracteres nulos incrustados e incluye un carácter nulo de terminación.</span><span class="sxs-lookup"><span data-stu-id="ce515-1806">This method copies embedded null characters, and includes a terminating null character.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="ce515-1807">El método no pudo asignar la suficiente memoria de montón nativo.</span><span class="sxs-lookup"><span data-stu-id="ce515-1807">The method could not allocate enough native heap memory.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="ce515-1808">El parámetro <paramref name="s" /> supera la longitud máxima permitida por el sistema operativo.</span><span class="sxs-lookup"><span data-stu-id="ce515-1808">The <paramref name="s" /> parameter exceeds the maximum length allowed by the operating system.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-1809">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-1809">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-1810">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-1810">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.PtrToStringUni(System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="StructureToPtr">
      <MemberSignature Language="C#" Value="public static void StructureToPtr (object structure, IntPtr ptr, bool fDeleteOld);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StructureToPtr(object structure, native int ptr, bool fDeleteOld) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.StructureToPtr(System.Object,System.IntPtr,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub StructureToPtr (structure As Object, ptr As IntPtr, fDeleteOld As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void StructureToPtr(System::Object ^ structure, IntPtr ptr, bool fDeleteOld);" />
      <MemberSignature Language="F#" Value="static member StructureToPtr : obj * nativeint * bool -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.StructureToPtr (structure, ptr, fDeleteOld)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netcore-2.2">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Obsolete("StructureToPtr(Object, IntPtr, Boolean) may be unavailable in future releases. Instead, use StructureToPtr&lt;T&gt;(T, IntPtr, Boolean). For more info, go to http://go.microsoft.com/fwlink/?LinkID=296516")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="structure" Type="System.Object" />
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="fDeleteOld" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="structure"><span data-ttu-id="ce515-1811">Objeto administrado que contiene los datos de referencias que se van a calcular.</span><span class="sxs-lookup"><span data-stu-id="ce515-1811">A managed object that holds the data to be marshaled.</span></span> <span data-ttu-id="ce515-1812">Este objeto debe ser una estructura o una instancia de una clase con formato.</span><span class="sxs-lookup"><span data-stu-id="ce515-1812">This object must be a structure or an instance of a formatted class.</span></span></param>
        <param name="ptr"><span data-ttu-id="ce515-1813">Puntero a un bloque de memoria no administrada que debe ser asignado antes de llamar a este método.</span><span class="sxs-lookup"><span data-stu-id="ce515-1813">A pointer to an unmanaged block of memory, which must be allocated before this method is called.</span></span></param>
        <param name="fDeleteOld"><span data-ttu-id="ce515-1814">Es <see langword="true" /> para llamar al método <see cref="M:System.Runtime.InteropServices.Marshal.DestroyStructure(System.IntPtr,System.Type)" /> en el parámetro <paramref name="ptr" /> antes de que este método copie los datos.</span><span class="sxs-lookup"><span data-stu-id="ce515-1814"><see langword="true" /> to call the <see cref="M:System.Runtime.InteropServices.Marshal.DestroyStructure(System.IntPtr,System.Type)" /> method on the <paramref name="ptr" /> parameter before this method copies the data.</span></span> <span data-ttu-id="ce515-1815">El bloque debe contener datos válidos.</span><span class="sxs-lookup"><span data-stu-id="ce515-1815">The block must contain valid data.</span></span> <span data-ttu-id="ce515-1816">Observe que al pasar <see langword="false" /> cuando el bloque de memoria ya contiene datos puede provocar una fuga de memoria.</span><span class="sxs-lookup"><span data-stu-id="ce515-1816">Note that passing <see langword="false" /> when the memory block already contains data can lead to a memory leak.</span></span></param>
        <summary><span data-ttu-id="ce515-1817">Calcula las referencias a los datos desde un objeto administrado a un bloque de memoria no administrado.</span><span class="sxs-lookup"><span data-stu-id="ce515-1817">Marshals data from a managed object to an unmanaged block of memory.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-1818">Si `structure` es un tipo de valor, se puede aplicar la conversión boxing o conversión unboxing.</span><span class="sxs-lookup"><span data-stu-id="ce515-1818">If `structure` is a value type, it can be boxed or unboxed.</span></span> <span data-ttu-id="ce515-1819">Si lo es la conversión boxing, es conversión unboxing antes de copiar.</span><span class="sxs-lookup"><span data-stu-id="ce515-1819">If it is boxed, it is unboxed before copying.</span></span>  
  
 <span data-ttu-id="ce515-1820">Una clase con formato es un tipo de referencia cuyo diseño se especifica mediante el <xref:System.Runtime.InteropServices.StructLayoutAttribute> atributo como <xref:System.Runtime.InteropServices.LayoutKind.Explicit?displayProperty=nameWithType> o <xref:System.Runtime.InteropServices.LayoutKind.Sequential?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ce515-1820">A formatted class is a reference type whose layout is specified by the <xref:System.Runtime.InteropServices.StructLayoutAttribute> attribute, as either <xref:System.Runtime.InteropServices.LayoutKind.Explicit?displayProperty=nameWithType> or <xref:System.Runtime.InteropServices.LayoutKind.Sequential?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="ce515-1821"><xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A> copia el contenido de `structure` para el bloque de memoria asignado previamente que el `ptr` parámetro señala.</span><span class="sxs-lookup"><span data-stu-id="ce515-1821"><xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A> copies the contents of `structure` to the pre-allocated block of memory that the `ptr` parameter points to.</span></span> <span data-ttu-id="ce515-1822">Si `structure` contiene tipos de referencia que calcular las referencias a punteros de interfaz COM (interfaces, clases sin diseño, y <xref:System.Object?displayProperty=nameWithType>), los objetos administrados, se mantienen activos con recuentos de referencia.</span><span class="sxs-lookup"><span data-stu-id="ce515-1822">If `structure` contains reference types that marshal to COM interface pointers (interfaces, classes without layout, and <xref:System.Object?displayProperty=nameWithType>), the managed objects are kept alive with reference counts.</span></span> <span data-ttu-id="ce515-1823">Todos los demás tipos de referencia (por ejemplo, cadenas y matrices) se convierten en copias.</span><span class="sxs-lookup"><span data-stu-id="ce515-1823">All other reference types (for example, strings and arrays) are marshaled to copies.</span></span> <span data-ttu-id="ce515-1824">Para liberar estos objetos administrados o no administrados, debe llamar a la <xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A?displayProperty=nameWithType> método antes de liberar el bloque de memoria.</span><span class="sxs-lookup"><span data-stu-id="ce515-1824">To release these managed or unmanaged objects, you must call the <xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A?displayProperty=nameWithType> method before you free the memory block.</span></span>  
  
 <span data-ttu-id="ce515-1825">Si usas el <xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A> método para copiar una instancia diferente en el bloque de memoria en un momento posterior, especificar `true` para `fDeleteOld` recuentos de quitar la referencia para tipos de referencia en la instancia anterior.</span><span class="sxs-lookup"><span data-stu-id="ce515-1825">If you use the <xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A> method to copy a different instance to the memory block at a later time, specify `true` for `fDeleteOld` to remove reference counts for reference types in the previous instance.</span></span> <span data-ttu-id="ce515-1826">En caso contrario, las copias de referencia administrada typesand no administrada de forma eficaz se pierden.</span><span class="sxs-lookup"><span data-stu-id="ce515-1826">Otherwise, the managed reference typesand unmanaged copies are effectively leaked.</span></span>  
  
 <span data-ttu-id="ce515-1827">El patrón general para usar <xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A> es como sigue:</span><span class="sxs-lookup"><span data-stu-id="ce515-1827">The overall pattern for using <xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A> is as follows:</span></span>  
  
1.  <span data-ttu-id="ce515-1828">En la primera llamada a la <xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A> método una vez que se ha asignado un bloque de memoria, `fDeleteOld` debe ser `false`, porque no hay ningún contenido para borrar.</span><span class="sxs-lookup"><span data-stu-id="ce515-1828">On the first call to the <xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A> method after a memory block has been allocated, `fDeleteOld` must be `false`, because there are no contents to clear.</span></span>  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="ce515-1829">Especificar `true` para `fDeleteOld` solo si el bloque contiene datos válidos.</span><span class="sxs-lookup"><span data-stu-id="ce515-1829">Specify `true` for `fDeleteOld` only if the block contains valid data.</span></span>  
  
2.  <span data-ttu-id="ce515-1830">Si copia una instancia diferente para el bloque de memoria y el objeto contiene los tipos de referencia, `fDeleteOld` debe ser `true` para liberar tipos de referencia en el contenido antiguo.</span><span class="sxs-lookup"><span data-stu-id="ce515-1830">If you copy a different instance to the memory block, and the object contains reference types, `fDeleteOld` must be `true` to free reference types in the old contents.</span></span>  
  
3.  <span data-ttu-id="ce515-1831">Si el objeto contiene los tipos de referencia, se debe llamar a la <xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A> método antes de liberar el bloque de memoria.</span><span class="sxs-lookup"><span data-stu-id="ce515-1831">If the object contains reference types, you must call the <xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A> method before you free the memory block.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ce515-1832">Para anclar una estructura existente en lugar de copiarlo, utilice el <xref:System.Runtime.InteropServices.GCHandle?displayProperty=nameWithType> tipo para crear un identificador fijo para la estructura.</span><span class="sxs-lookup"><span data-stu-id="ce515-1832">To pin an existing structure instead of copying it, use the <xref:System.Runtime.InteropServices.GCHandle?displayProperty=nameWithType> type to create a pinned handle for the structure.</span></span> <span data-ttu-id="ce515-1833">Para obtener más información sobre cómo anclar, consulte [copiar y fijar](~/docs/framework/interop/copying-and-pinning.md).</span><span class="sxs-lookup"><span data-stu-id="ce515-1833">For details on how to pin, see [Copying and Pinning](~/docs/framework/interop/copying-and-pinning.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ce515-1834">El ejemplo siguiente se crea una estructura administrada, se transfiere a la memoria no administrada usando el <xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A> método y las transferencias a continuación, vuelva al uso de memoria administrada el <xref:System.Runtime.InteropServices.Marshal.PtrToStructure%2A> método.</span><span class="sxs-lookup"><span data-stu-id="ce515-1834">The following example creates a managed structure, transfers it to unmanaged memory using the <xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A> method, and then transfers it back to managed memory using the <xref:System.Runtime.InteropServices.Marshal.PtrToStructure%2A> method.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.PtrToStructure-SizeOf#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.PtrToStructure-SizeOf/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.PtrToStructure-SizeOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.PtrToStructure-SizeOf/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ce515-1835"><paramref name="structure" /> es un tipo de referencia que no es una clase con formato.</span><span class="sxs-lookup"><span data-stu-id="ce515-1835"><paramref name="structure" /> is a reference type that is not a formatted class.</span></span>  
  
<span data-ttu-id="ce515-1836">O bien</span><span class="sxs-lookup"><span data-stu-id="ce515-1836">-or-</span></span> 
 <span data-ttu-id="ce515-1837"><paramref name="structure" /> es una instancia de un tipo genérico (solo en .NET Framework 4.5 y versiones anteriores).</span><span class="sxs-lookup"><span data-stu-id="ce515-1837"><paramref name="structure" /> is an instance of a generic type (in the .NET Framework 4.5 and earlier versions only).</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-1838">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-1838">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-1839">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-1839">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.DestroyStructure(System.IntPtr,System.Type)" />
        <altmember cref="T:System.Runtime.InteropServices.GCHandle" />
      </Docs>
    </Member>
    <Member MemberName="StructureToPtr&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void StructureToPtr&lt;T&gt; (T structure, IntPtr ptr, bool fDeleteOld);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StructureToPtr&lt;T&gt;(!!T structure, native int ptr, bool fDeleteOld) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.StructureToPtr``1(``0,System.IntPtr,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub StructureToPtr(Of T) (structure As T, ptr As IntPtr, fDeleteOld As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static void StructureToPtr(T structure, IntPtr ptr, bool fDeleteOld);" />
      <MemberSignature Language="F#" Value="static member StructureToPtr : 'T * nativeint * bool -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.StructureToPtr (structure, ptr, fDeleteOld)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="structure" Type="T" />
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="fDeleteOld" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="ce515-1840">Tipo del objeto administrado.</span><span class="sxs-lookup"><span data-stu-id="ce515-1840">The type of the managed object.</span></span></typeparam>
        <param name="structure"><span data-ttu-id="ce515-1841">Objeto administrado que contiene los datos de referencias que se van a calcular.</span><span class="sxs-lookup"><span data-stu-id="ce515-1841">A managed object that holds the data to be marshaled.</span></span> <span data-ttu-id="ce515-1842">El objeto debe ser una estructura o una instancia de una clase con formato.</span><span class="sxs-lookup"><span data-stu-id="ce515-1842">The object must be a structure or an instance of a formatted class.</span></span></param>
        <param name="ptr"><span data-ttu-id="ce515-1843">Puntero a un bloque de memoria no administrada que debe ser asignado antes de llamar a este método.</span><span class="sxs-lookup"><span data-stu-id="ce515-1843">A pointer to an unmanaged block of memory, which must be allocated before this method is called.</span></span></param>
        <param name="fDeleteOld"><span data-ttu-id="ce515-1844">Es <see langword="true" /> para llamar al método <see cref="M:System.Runtime.InteropServices.Marshal.DestroyStructure``1(System.IntPtr)" /> en el parámetro <paramref name="ptr" /> antes de que este método copie los datos.</span><span class="sxs-lookup"><span data-stu-id="ce515-1844"><see langword="true" /> to call the <see cref="M:System.Runtime.InteropServices.Marshal.DestroyStructure``1(System.IntPtr)" /> method on the <paramref name="ptr" /> parameter before this method copies the data.</span></span> <span data-ttu-id="ce515-1845">El bloque debe contener datos válidos.</span><span class="sxs-lookup"><span data-stu-id="ce515-1845">The block must contain valid data.</span></span> <span data-ttu-id="ce515-1846">Observe que al pasar <see langword="false" /> cuando el bloque de memoria ya contiene datos puede provocar una fuga de memoria.</span><span class="sxs-lookup"><span data-stu-id="ce515-1846">Note that passing <see langword="false" /> when the memory block already contains data can lead to a memory leak.</span></span></param>
        <summary><span data-ttu-id="ce515-1847">[Compatible con .NET Framework 4.5.1 y versiones posteriores]</span><span class="sxs-lookup"><span data-stu-id="ce515-1847">[Supported in the .NET Framework 4.5.1 and later versions]</span></span> 
<span data-ttu-id="ce515-1848">Calcula las referencias de un objeto administrado de un tipo especificado a un bloque de memoria no administrado.</span><span class="sxs-lookup"><span data-stu-id="ce515-1848">Marshals data from a managed object of a specified type to an unmanaged block of memory.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-1849">Una clase con formato es un tipo de referencia cuyo diseño se especifica mediante el <xref:System.Runtime.InteropServices.StructLayoutAttribute> atributo como <xref:System.Runtime.InteropServices.LayoutKind.Explicit?displayProperty=nameWithType> o <xref:System.Runtime.InteropServices.LayoutKind.Sequential?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ce515-1849">A formatted class is a reference type whose layout is specified by the <xref:System.Runtime.InteropServices.StructLayoutAttribute> attribute, as either <xref:System.Runtime.InteropServices.LayoutKind.Explicit?displayProperty=nameWithType> or <xref:System.Runtime.InteropServices.LayoutKind.Sequential?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="ce515-1850"><xref:System.Runtime.InteropServices.Marshal.StructureToPtr%60%601%28%60%600%2CSystem.IntPtr%2CSystem.Boolean%29> copia el contenido de `structure` para el bloque de memoria asignado previamente que el `ptr` parámetro señala.</span><span class="sxs-lookup"><span data-stu-id="ce515-1850"><xref:System.Runtime.InteropServices.Marshal.StructureToPtr%60%601%28%60%600%2CSystem.IntPtr%2CSystem.Boolean%29> copies the contents of `structure` to the pre-allocated block of memory that the `ptr` parameter points to.</span></span> <span data-ttu-id="ce515-1851">Si `structure` contiene tipos de referencia que calcular las referencias a punteros de interfaz COM (interfaces, clases sin diseño, y <xref:System.Object?displayProperty=nameWithType>), los objetos administrados, se mantienen activos con recuentos de referencia.</span><span class="sxs-lookup"><span data-stu-id="ce515-1851">If `structure` contains reference types that marshal to COM interface pointers (interfaces, classes without layout, and <xref:System.Object?displayProperty=nameWithType>), the managed objects are kept alive with reference counts.</span></span> <span data-ttu-id="ce515-1852">Todos los demás tipos de referencia (por ejemplo, cadenas y matrices) se convierten en copias.</span><span class="sxs-lookup"><span data-stu-id="ce515-1852">All other reference types (for example, strings and arrays) are marshaled to copies.</span></span> <span data-ttu-id="ce515-1853">Para liberar estos objetos administrados o no administrados, debe llamar a la <xref:System.Runtime.InteropServices.Marshal.DestroyStructure%60%601%28System.IntPtr%29> método antes de liberar el bloque de memoria.</span><span class="sxs-lookup"><span data-stu-id="ce515-1853">To release these managed or unmanaged objects, you must call the <xref:System.Runtime.InteropServices.Marshal.DestroyStructure%60%601%28System.IntPtr%29> method before you free the memory block.</span></span>  
  
 <span data-ttu-id="ce515-1854">Si usas el <xref:System.Runtime.InteropServices.Marshal.StructureToPtr%60%601%28%60%600%2CSystem.IntPtr%2CSystem.Boolean%29> método para copiar una instancia diferente en el bloque de memoria en un momento posterior, especificar `true` para `fDeleteOld` recuentos de quitar la referencia para tipos de referencia en la instancia anterior.</span><span class="sxs-lookup"><span data-stu-id="ce515-1854">If you use the <xref:System.Runtime.InteropServices.Marshal.StructureToPtr%60%601%28%60%600%2CSystem.IntPtr%2CSystem.Boolean%29> method to copy a different instance to the memory block at a later time, specify `true` for `fDeleteOld` to remove reference counts for reference types in the previous instance.</span></span> <span data-ttu-id="ce515-1855">En caso contrario, los tipos de referencia administrada y no administradas copias se pierden eficazmente.</span><span class="sxs-lookup"><span data-stu-id="ce515-1855">Otherwise, the managed reference types and unmanaged copies are effectively leaked.</span></span>  
  
 <span data-ttu-id="ce515-1856">El patrón general para usar <xref:System.Runtime.InteropServices.Marshal.StructureToPtr%60%601%28%60%600%2CSystem.IntPtr%2CSystem.Boolean%29> es como sigue:</span><span class="sxs-lookup"><span data-stu-id="ce515-1856">The overall pattern for using <xref:System.Runtime.InteropServices.Marshal.StructureToPtr%60%601%28%60%600%2CSystem.IntPtr%2CSystem.Boolean%29> is as follows:</span></span>  
  
1.  <span data-ttu-id="ce515-1857">En la primera llamada a la <xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A> método una vez que se ha asignado un bloque de memoria, `fDeleteOld` debe ser `false`, porque no hay ningún contenido para borrar.</span><span class="sxs-lookup"><span data-stu-id="ce515-1857">On the first call to the <xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A> method after a memory block has been allocated, `fDeleteOld` must be `false`, because there are no contents to clear.</span></span>  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="ce515-1858">Especificar `true` para `fDeleteOld` solo si el bloque contiene datos válidos.</span><span class="sxs-lookup"><span data-stu-id="ce515-1858">Specify `true` for `fDeleteOld` only if the block contains valid data.</span></span>  
  
2.  <span data-ttu-id="ce515-1859">Si copia una instancia diferente para el bloque de memoria y el objeto contiene los tipos de referencia, `fDeleteOld` debe ser `true` para liberar tipos de referencia en el contenido antiguo.</span><span class="sxs-lookup"><span data-stu-id="ce515-1859">If you copy a different instance to the memory block, and the object contains reference types, `fDeleteOld` must be `true` to free reference types in the old contents.</span></span>  
  
3.  <span data-ttu-id="ce515-1860">Si el objeto contiene los tipos de referencia, se debe llamar a la <xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A> método antes de liberar el bloque de memoria.</span><span class="sxs-lookup"><span data-stu-id="ce515-1860">If the object contains reference types, you must call the <xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A> method before you free the memory block.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ce515-1861">Para anclar una estructura existente en lugar de copiarlo, utilice el <xref:System.Runtime.InteropServices.GCHandle?displayProperty=nameWithType> tipo para crear un identificador fijo para la estructura.</span><span class="sxs-lookup"><span data-stu-id="ce515-1861">To pin an existing structure instead of copying it, use the <xref:System.Runtime.InteropServices.GCHandle?displayProperty=nameWithType> type to create a pinned handle for the structure.</span></span> <span data-ttu-id="ce515-1862">Para obtener más información sobre cómo anclar, consulte [copiar y fijar](~/docs/framework/interop/copying-and-pinning.md).</span><span class="sxs-lookup"><span data-stu-id="ce515-1862">For details on how to pin, see [Copying and Pinning](~/docs/framework/interop/copying-and-pinning.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ce515-1863"><paramref name="structure" /> es un tipo de referencia que no es una clase con formato.</span><span class="sxs-lookup"><span data-stu-id="ce515-1863"><paramref name="structure" /> is a reference type that is not a formatted class.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-1864">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-1864">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-1865">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-1865">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.DestroyStructure``1(System.IntPtr)" />
        <altmember cref="T:System.Runtime.InteropServices.GCHandle" />
      </Docs>
    </Member>
    <Member MemberName="SystemDefaultCharSize">
      <MemberSignature Language="C#" Value="public static readonly int SystemDefaultCharSize;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly int32 SystemDefaultCharSize" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.InteropServices.Marshal.SystemDefaultCharSize" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SystemDefaultCharSize As Integer " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly int SystemDefaultCharSize;" />
      <MemberSignature Language="F#" Value=" staticval mutable SystemDefaultCharSize : int" Usage="System.Runtime.InteropServices.Marshal.SystemDefaultCharSize" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ce515-1866">Representa el tamaño de carácter predeterminado del sistema; el valor predeterminado es 2 para los sistemas Unicode y 1 para los sistemas ANSI.</span><span class="sxs-lookup"><span data-stu-id="ce515-1866">Represents the default character size on the system; the default is 2 for Unicode systems and 1 for ANSI systems.</span></span> <span data-ttu-id="ce515-1867">Este campo es de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="ce515-1867">This field is read-only.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ce515-1868">En el ejemplo siguiente se muestra el <xref:System.Runtime.InteropServices.Marshal.SystemDefaultCharSize> campo.</span><span class="sxs-lookup"><span data-stu-id="ce515-1868">The following example demonstrates the <xref:System.Runtime.InteropServices.Marshal.SystemDefaultCharSize> field.</span></span> <span data-ttu-id="ce515-1869">Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Runtime.InteropServices.Marshal> clase.</span><span class="sxs-lookup"><span data-stu-id="ce515-1869">This code example is part of a larger example provided for the <xref:System.Runtime.InteropServices.Marshal> class.</span></span>  
  
 [!code-cpp[Marshal#2](~/samples/snippets/cpp/VS_Snippets_CLR/Marshal/cpp/marshal.cpp#2)]
 [!code-csharp[Marshal#2](~/samples/snippets/csharp/VS_Snippets_CLR/Marshal/CS/Marshal.cs#2)]
 [!code-vb[Marshal#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/Marshal/VB/Marshal.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.PtrToStringAuto(System.IntPtr,System.Int32)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.StringToHGlobalAuto(System.String)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAuto(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SystemMaxDBCSCharSize">
      <MemberSignature Language="C#" Value="public static readonly int SystemMaxDBCSCharSize;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly int32 SystemMaxDBCSCharSize" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.InteropServices.Marshal.SystemMaxDBCSCharSize" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SystemMaxDBCSCharSize As Integer " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly int SystemMaxDBCSCharSize;" />
      <MemberSignature Language="F#" Value=" staticval mutable SystemMaxDBCSCharSize : int" Usage="System.Runtime.InteropServices.Marshal.SystemMaxDBCSCharSize" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ce515-1870">Representa el tamaño máximo de un juego de caracteres de doble byte (DBCS), expresado en bytes, para el actual sistema operativo.</span><span class="sxs-lookup"><span data-stu-id="ce515-1870">Represents the maximum size of a double byte character set (DBCS) size, in bytes, for the current operating system.</span></span> <span data-ttu-id="ce515-1871">Este campo es de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="ce515-1871">This field is read-only.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ce515-1872">En el ejemplo siguiente se muestra el <xref:System.Runtime.InteropServices.Marshal.SystemDefaultCharSize> campo.</span><span class="sxs-lookup"><span data-stu-id="ce515-1872">The following example demonstrates the <xref:System.Runtime.InteropServices.Marshal.SystemDefaultCharSize> field.</span></span> <span data-ttu-id="ce515-1873">Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Runtime.InteropServices.Marshal> clase.</span><span class="sxs-lookup"><span data-stu-id="ce515-1873">This code example is part of a larger example provided for the <xref:System.Runtime.InteropServices.Marshal> class.</span></span>  
  
 [!code-cpp[Marshal#2](~/samples/snippets/cpp/VS_Snippets_CLR/Marshal/cpp/marshal.cpp#2)]
 [!code-csharp[Marshal#2](~/samples/snippets/csharp/VS_Snippets_CLR/Marshal/CS/Marshal.cs#2)]
 [!code-vb[Marshal#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/Marshal/VB/Marshal.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(System.String)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAnsi(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ThrowExceptionForHR">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ce515-1874">Se produce una excepción con un valor HRESULT de error específico.</span><span class="sxs-lookup"><span data-stu-id="ce515-1874">Throws an exception with a specific failure HRESULT value.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ThrowExceptionForHR">
      <MemberSignature Language="C#" Value="public static void ThrowExceptionForHR (int errorCode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ThrowExceptionForHR(int32 errorCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ThrowExceptionForHR (errorCode As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ThrowExceptionForHR(int errorCode);" />
      <MemberSignature Language="F#" Value="static member ThrowExceptionForHR : int -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.ThrowExceptionForHR errorCode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="errorCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="errorCode"><span data-ttu-id="ce515-1875">HRESULT correspondiente a la excepción deseada.</span><span class="sxs-lookup"><span data-stu-id="ce515-1875">The HRESULT corresponding to the desired exception.</span></span></param>
        <summary><span data-ttu-id="ce515-1876">Se produce una excepción con un valor HRESULT de error específico.</span><span class="sxs-lookup"><span data-stu-id="ce515-1876">Throws an exception with a specific failure HRESULT value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-1877">Este método crea un objeto de excepción para el valor HRESULT de error especificado.</span><span class="sxs-lookup"><span data-stu-id="ce515-1877">This method creates an exception object for the specified failure HRESULT.</span></span> <span data-ttu-id="ce515-1878">Si el valor HRESULT es 0 o positivo (un código correcto), el método devuelve sin crear ni producir una excepción.</span><span class="sxs-lookup"><span data-stu-id="ce515-1878">If the HRESULT is 0 or positive (a success code), the method returns without creating or throwing an exception.</span></span>  
  
 <span data-ttu-id="ce515-1879">Tenga en cuenta que el <xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%28System.Int32%29> método devuelve una excepción basada en la [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx) interfaz del subproceso actual si se ha establecido uno.</span><span class="sxs-lookup"><span data-stu-id="ce515-1879">Note that the <xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%28System.Int32%29> method returns an exception based on the [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx) interface of the current thread if one is set.</span></span> <span data-ttu-id="ce515-1880">Cuando esto sucede, el `errorCode` se omite el parámetro.</span><span class="sxs-lookup"><span data-stu-id="ce515-1880">When this happens, the `errorCode` parameter is ignored.</span></span>  
  
 <span data-ttu-id="ce515-1881">Algunos valores HRESULT de error se asignan a excepciones definidas, mientras que otros no.</span><span class="sxs-lookup"><span data-stu-id="ce515-1881">Some failure HRESULTs map to defined exceptions, whereas others do not.</span></span> <span data-ttu-id="ce515-1882">Si el valor HRESULT que se asigna a una excepción definida, <xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A> crea una instancia de la excepción y la inicia.</span><span class="sxs-lookup"><span data-stu-id="ce515-1882">If the HRESULT maps to a defined exception, <xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A> creates an instance of the exception and throws it.</span></span> <span data-ttu-id="ce515-1883">En caso contrario, crea una instancia de <xref:System.Runtime.InteropServices.COMException>, inicializa el campo de código de error con el valor HRESULT y produce dicha excepción.</span><span class="sxs-lookup"><span data-stu-id="ce515-1883">Otherwise, it creates an instance of <xref:System.Runtime.InteropServices.COMException>, initializes the error code field with the HRESULT, and throws that exception.</span></span> <span data-ttu-id="ce515-1884">Cuando <xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A> es invoca, intenta recuperar información adicional sobre el error mediante el uso de no administrado [GetErrorInfo](https://msdn.microsoft.com/library/ms221032\(v=vs.85\).aspx) función.</span><span class="sxs-lookup"><span data-stu-id="ce515-1884">When <xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A> is invoked, it attempts to retrieve extra information regarding the error by using the unmanaged [GetErrorInfo](https://msdn.microsoft.com/library/ms221032\(v=vs.85\).aspx) function.</span></span>  
  
 <span data-ttu-id="ce515-1885">Para la asignación de cada HRESULT a su clase de excepción comparable en .NET Framework, vea [How to: Map HRESULTs and Exceptions](~/docs/framework/interop/how-to-map-hresults-and-exceptions.md).</span><span class="sxs-lookup"><span data-stu-id="ce515-1885">For the mapping from each HRESULT to its comparable exception class in the .NET Framework, see [How to: Map HRESULTs and Exceptions](~/docs/framework/interop/how-to-map-hresults-and-exceptions.md).</span></span>  
  
 <span data-ttu-id="ce515-1886">En ocasiones, <xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A> podría devolver una excepción de una llamada COM anterior.</span><span class="sxs-lookup"><span data-stu-id="ce515-1886">Occasionally, <xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A> might return an exception from a previous COM call.</span></span> <span data-ttu-id="ce515-1887">En este caso, puede usar la siguiente solución alternativa y pasar `IntPtr(-1)` como segundo parámetro (`errorInfo`):</span><span class="sxs-lookup"><span data-stu-id="ce515-1887">In this case, you can use the following workaround and pass `IntPtr(-1)` as the second parameter (`errorInfo`):</span></span>  
  
```  
[SecurityPermissionAttribute(SecurityAction.LinkDemand, Flags = SecurityPermissionFlag.UnmanagedCode)]  
public static void ThrowExceptionForHR(interrorCode,IntPtrerrorInfo)  
```  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-1888">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-1888">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-1889">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-1889">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="T:System.Runtime.InteropServices.COMException" />
      </Docs>
    </Member>
    <Member MemberName="ThrowExceptionForHR">
      <MemberSignature Language="C#" Value="public static void ThrowExceptionForHR (int errorCode, IntPtr errorInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ThrowExceptionForHR(int32 errorCode, native int errorInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR(System.Int32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ThrowExceptionForHR (errorCode As Integer, errorInfo As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ThrowExceptionForHR(int errorCode, IntPtr errorInfo);" />
      <MemberSignature Language="F#" Value="static member ThrowExceptionForHR : int * nativeint -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.ThrowExceptionForHR (errorCode, errorInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="errorCode" Type="System.Int32" />
        <Parameter Name="errorInfo" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="errorCode"><span data-ttu-id="ce515-1890">HRESULT correspondiente a la excepción deseada.</span><span class="sxs-lookup"><span data-stu-id="ce515-1890">The HRESULT corresponding to the desired exception.</span></span></param>
        <param name="errorInfo"><span data-ttu-id="ce515-1891">Puntero a la interfaz [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx) que proporciona más información sobre el error.</span><span class="sxs-lookup"><span data-stu-id="ce515-1891">A pointer to the [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx) interface that provides more information about the error.</span></span> <span data-ttu-id="ce515-1892">Puede especificar <c>IntPtr(0)</c> para que use la interfaz [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx) actual o <c>IntPtr(-1)</c> para omitir la interfaz [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx) actual y construir la excepción del código de error únicamente.</span><span class="sxs-lookup"><span data-stu-id="ce515-1892">You can specify <c>IntPtr(0)</c> to use the current [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx) interface, or <c>IntPtr(-1)</c> to ignore the current [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx) interface and construct the exception just from the error code.</span></span></param>
        <summary><span data-ttu-id="ce515-1893">Inicia una excepción con un valor HRESULT de error concreto, basado en la interfaz <see href="https://msdn.microsoft.com/library/ms221233\(v=vs.85\">IErrorInfo</see>.aspx) especificada.</span><span class="sxs-lookup"><span data-stu-id="ce515-1893">Throws an exception with a specific failure HRESULT, based on the specified <see href="https://msdn.microsoft.com/library/ms221233\(v=vs.85\">IErrorInfo</see>.aspx) interface.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-1894">Este método crea un objeto de excepción para el valor HRESULT de error especificado.</span><span class="sxs-lookup"><span data-stu-id="ce515-1894">This method creates an exception object for the specified failure HRESULT.</span></span> <span data-ttu-id="ce515-1895">Si el valor HRESULT es 0 o positivo (un código correcto), el método devuelve sin crear ni producir una excepción.</span><span class="sxs-lookup"><span data-stu-id="ce515-1895">If the HRESULT is 0 or positive (a success code), the method returns without creating or throwing an exception.</span></span>  
  
 <span data-ttu-id="ce515-1896">El <xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A> método libera el `errorInfo` recuento de hacer referencia a parámetros, disminuyendo el COM el [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx) interfaz.</span><span class="sxs-lookup"><span data-stu-id="ce515-1896">The <xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A> method releases the `errorInfo` parameter, decreasing the COM reference count of the [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx) interface.</span></span>  
  
 <span data-ttu-id="ce515-1897">Tenga en cuenta que el <xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A> método devuelve una excepción basada en la [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx) interfaz del subproceso actual si se ha establecido uno.</span><span class="sxs-lookup"><span data-stu-id="ce515-1897">Note that the <xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A> method returns an exception based on the [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx) interface of the current thread if one is set.</span></span> <span data-ttu-id="ce515-1898">Cuando esto sucede, el `errorCode` se omite el parámetro.</span><span class="sxs-lookup"><span data-stu-id="ce515-1898">When this happens, the `errorCode` parameter is ignored.</span></span>  
  
 <span data-ttu-id="ce515-1899">Algunos valores HRESULT de error se asignan a excepciones definidas, mientras que otros no.</span><span class="sxs-lookup"><span data-stu-id="ce515-1899">Some failure HRESULTs map to defined exceptions, whereas others do not.</span></span> <span data-ttu-id="ce515-1900">Si el valor HRESULT que se asigna a una excepción definida, <xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A> crea una instancia de la excepción y la inicia.</span><span class="sxs-lookup"><span data-stu-id="ce515-1900">If the HRESULT maps to a defined exception, <xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A> creates an instance of the exception and throws it.</span></span> <span data-ttu-id="ce515-1901">En caso contrario, crea una instancia de <xref:System.Runtime.InteropServices.COMException?displayProperty=nameWithType>, inicializa el campo de código de error con el valor HRESULT y produce dicha excepción.</span><span class="sxs-lookup"><span data-stu-id="ce515-1901">Otherwise, it creates an instance of <xref:System.Runtime.InteropServices.COMException?displayProperty=nameWithType>, initializes the error code field with the HRESULT, and throws that exception.</span></span> <span data-ttu-id="ce515-1902">El `errorInfo` parámetro se usa para recuperar información adicional sobre el error.</span><span class="sxs-lookup"><span data-stu-id="ce515-1902">The `errorInfo` parameter is used to retrieve extra information regarding the error.</span></span>  
  
 <span data-ttu-id="ce515-1903">Para la asignación de cada HRESULT a su clase de excepción comparable en .NET Framework, vea [How to: Map HRESULTs and Exceptions](~/docs/framework/interop/how-to-map-hresults-and-exceptions.md).</span><span class="sxs-lookup"><span data-stu-id="ce515-1903">For the mapping from each HRESULT to its comparable exception class in the .NET Framework, see [How to: Map HRESULTs and Exceptions](~/docs/framework/interop/how-to-map-hresults-and-exceptions.md).</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-1904">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-1904">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-1905">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-1905">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="T:System.Runtime.InteropServices.COMException" />
      </Docs>
    </Member>
    <Member MemberName="UnsafeAddrOfPinnedArrayElement">
      <MemberSignature Language="C#" Value="public static IntPtr UnsafeAddrOfPinnedArrayElement (Array arr, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int UnsafeAddrOfPinnedArrayElement(class System.Array arr, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.UnsafeAddrOfPinnedArrayElement(System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UnsafeAddrOfPinnedArrayElement (arr As Array, index As Integer) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr UnsafeAddrOfPinnedArrayElement(Array ^ arr, int index);" />
      <MemberSignature Language="F#" Value="static member UnsafeAddrOfPinnedArrayElement : Array * int -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.UnsafeAddrOfPinnedArrayElement (arr, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netcore-2.2">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Obsolete("UnsafeAddrOfPinnedArrayElement(Array, Int32) may be unavailable in future releases. Instead, use UnsafeAddrOfPinnedArrayElement&lt;T&gt;(T[], Int32). For more info, go to http://go.microsoft.com/fwlink/?LinkID=296517")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arr" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="arr"><span data-ttu-id="ce515-1906">Matriz que contiene el elemento deseado.</span><span class="sxs-lookup"><span data-stu-id="ce515-1906">The array that contains the desired element.</span></span></param>
        <param name="index"><span data-ttu-id="ce515-1907">Índice en el parámetro <paramref name="arr" /> del elemento deseado.</span><span class="sxs-lookup"><span data-stu-id="ce515-1907">The index in the <paramref name="arr" /> parameter of the desired element.</span></span></param>
        <summary><span data-ttu-id="ce515-1908">Obtiene la dirección del elemento en el índice especificado dentro de la matriz especificada.</span><span class="sxs-lookup"><span data-stu-id="ce515-1908">Gets the address of the element at the specified index inside the specified array.</span></span></summary>
        <returns><span data-ttu-id="ce515-1909">Dirección de <paramref name="index" /> dentro de <paramref name="arr" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-1909">The address of <paramref name="index" /> inside <paramref name="arr" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-1910">La matriz se debe fijar utilizando un <xref:System.Runtime.InteropServices.GCHandle> antes de pasarla a este método.</span><span class="sxs-lookup"><span data-stu-id="ce515-1910">The array must be pinned using a <xref:System.Runtime.InteropServices.GCHandle> before it is passed to this method.</span></span> <span data-ttu-id="ce515-1911">Para obtener el máximo rendimiento, este método no valida la matriz pasada a él; Esto puede provocar un comportamiento inesperado.</span><span class="sxs-lookup"><span data-stu-id="ce515-1911">For maximum performance, this method does not validate the array passed to it; this can result in unexpected behavior.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-1912">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-1912">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-1913">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-1913">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="T:System.Runtime.InteropServices.GCHandle" />
      </Docs>
    </Member>
    <Member MemberName="UnsafeAddrOfPinnedArrayElement&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static IntPtr UnsafeAddrOfPinnedArrayElement&lt;T&gt; (T[] arr, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int UnsafeAddrOfPinnedArrayElement&lt;T&gt;(!!T[] arr, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.UnsafeAddrOfPinnedArrayElement``1(``0[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UnsafeAddrOfPinnedArrayElement(Of T) (arr As T(), index As Integer) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static IntPtr UnsafeAddrOfPinnedArrayElement(cli::array &lt;T&gt; ^ arr, int index);" />
      <MemberSignature Language="F#" Value="static member UnsafeAddrOfPinnedArrayElement : 'T[] * int -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.UnsafeAddrOfPinnedArrayElement (arr, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="arr" Type="T[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="ce515-1914">Tipo de matriz.</span><span class="sxs-lookup"><span data-stu-id="ce515-1914">The type of the array.</span></span></typeparam>
        <param name="arr"><span data-ttu-id="ce515-1915">Matriz que contiene el elemento deseado.</span><span class="sxs-lookup"><span data-stu-id="ce515-1915">The array that contains the desired element.</span></span></param>
        <param name="index"><span data-ttu-id="ce515-1916">Índice del elemento deseado en la matriz <paramref name="arr" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-1916">The index of the desired element in the <paramref name="arr" /> array.</span></span></param>
        <summary><span data-ttu-id="ce515-1917">[Compatible con .NET Framework 4.5.1 y versiones posteriores]</span><span class="sxs-lookup"><span data-stu-id="ce515-1917">[Supported in the .NET Framework 4.5.1 and later versions]</span></span> 
<span data-ttu-id="ce515-1918">Obtiene la dirección del elemento en el índice especificado en una matriz de tipo especificado.</span><span class="sxs-lookup"><span data-stu-id="ce515-1918">Gets the address of the element at the specified index in an array of a specified type.</span></span></summary>
        <returns><span data-ttu-id="ce515-1919">Dirección de <paramref name="index" /> en <paramref name="arr" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-1919">The address of <paramref name="index" /> in <paramref name="arr" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-1920">La matriz se debe fijar utilizando un <xref:System.Runtime.InteropServices.GCHandle> antes de pasarla a este método.</span><span class="sxs-lookup"><span data-stu-id="ce515-1920">The array must be pinned by using a <xref:System.Runtime.InteropServices.GCHandle> before it is passed to this method.</span></span> <span data-ttu-id="ce515-1921">Para obtener el máximo rendimiento, este método no valida la matriz pasada a él; Esto puede provocar un comportamiento inesperado.</span><span class="sxs-lookup"><span data-stu-id="ce515-1921">For maximum performance, this method does not validate the array passed to it; this can result in unexpected behavior.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-1922">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-1922">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-1923">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-1923">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="T:System.Runtime.InteropServices.GCHandle" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteByte">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ce515-1924">Escribe un único byte en la memoria no administrada.</span><span class="sxs-lookup"><span data-stu-id="ce515-1924">Writes a single byte value to unmanaged memory.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteByte">
      <MemberSignature Language="C#" Value="public static void WriteByte (IntPtr ptr, byte val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteByte(native int ptr, unsigned int8 val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteByte(System.IntPtr,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteByte (ptr As IntPtr, val As Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteByte(IntPtr ptr, System::Byte val);" />
      <MemberSignature Language="F#" Value="static member WriteByte : nativeint * byte -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.WriteByte (ptr, val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="val" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="ptr"><span data-ttu-id="ce515-1925">Dirección de la memoria no administrada en la que se va a escribir.</span><span class="sxs-lookup"><span data-stu-id="ce515-1925">The address in unmanaged memory to write to.</span></span></param>
        <param name="val"><span data-ttu-id="ce515-1926">Valor que se va a escribir.</span><span class="sxs-lookup"><span data-stu-id="ce515-1926">The value to write.</span></span></param>
        <summary><span data-ttu-id="ce515-1927">Escribe un único byte en la memoria no administrada.</span><span class="sxs-lookup"><span data-stu-id="ce515-1927">Writes a single byte value to unmanaged memory.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-1928"><xref:System.Runtime.InteropServices.Marshal.WriteByte%2A> permite una interacción directa con una matriz de bytes de estilo C no administrada, lo que elimina el gasto de copiar toda una matriz no administrada (mediante <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) a una matriz administrada distinta antes de establecer los valores de sus elementos.</span><span class="sxs-lookup"><span data-stu-id="ce515-1928"><xref:System.Runtime.InteropServices.Marshal.WriteByte%2A> enables direct interaction with an unmanaged C-style byte array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ce515-1929">En el ejemplo siguiente se crea un bloque de memoria no administrada, se escribe un byte en la memoria no administrada, se vuelve a leer los bytes de memoria no administrada y, a continuación, elimina la memoria no administrada.</span><span class="sxs-lookup"><span data-stu-id="ce515-1929">The following example creates a block of unmanaged memory, writes a byte to the unmanaged memory, reads the byte back from unmanaged memory, and then disposes the unmanaged memory.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.ReadByte - WriteByte#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.ReadByte - WriteByte/cs/example.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.ReadByte - WriteByte#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.ReadByte - WriteByte/vb/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException"><span data-ttu-id="ce515-1930"><paramref name="ptr" /> no es un formato reconocido.</span><span class="sxs-lookup"><span data-stu-id="ce515-1930"><paramref name="ptr" /> is not a recognized format.</span></span>  
  
<span data-ttu-id="ce515-1931">O bien</span><span class="sxs-lookup"><span data-stu-id="ce515-1931">-or-</span></span> 
 <span data-ttu-id="ce515-1932">El valor de <paramref name="ptr" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-1932"><paramref name="ptr" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="ce515-1933">O bien</span><span class="sxs-lookup"><span data-stu-id="ce515-1933">-or-</span></span> 
 <span data-ttu-id="ce515-1934"><paramref name="ptr" /> no es válido.</span><span class="sxs-lookup"><span data-stu-id="ce515-1934"><paramref name="ptr" /> is invalid.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-1935">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-1935">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-1936">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-1936">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="WriteByte">
      <MemberSignature Language="C#" Value="public static void WriteByte (IntPtr ptr, int ofs, byte val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteByte(native int ptr, int32 ofs, unsigned int8 val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteByte(System.IntPtr,System.Int32,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteByte (ptr As IntPtr, ofs As Integer, val As Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteByte(IntPtr ptr, int ofs, System::Byte val);" />
      <MemberSignature Language="F#" Value="static member WriteByte : nativeint * int * byte -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.WriteByte (ptr, ofs, val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="ofs" Type="System.Int32" />
        <Parameter Name="val" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="ptr"><span data-ttu-id="ce515-1937">Dirección base de la memoria no administrada en la que se va a escribir.</span><span class="sxs-lookup"><span data-stu-id="ce515-1937">The base address in unmanaged memory to write to.</span></span></param>
        <param name="ofs"><span data-ttu-id="ce515-1938">Desplazamiento de bytes adicional, que se agrega al parámetro <paramref name="ptr" /> antes de la escritura.</span><span class="sxs-lookup"><span data-stu-id="ce515-1938">An additional byte offset, which is added to the <paramref name="ptr" /> parameter before writing.</span></span></param>
        <param name="val"><span data-ttu-id="ce515-1939">Valor que se va a escribir.</span><span class="sxs-lookup"><span data-stu-id="ce515-1939">The value to write.</span></span></param>
        <summary><span data-ttu-id="ce515-1940">Escribe un valor de un solo byte en la memoria no administrada en un desplazamiento especificado.</span><span class="sxs-lookup"><span data-stu-id="ce515-1940">Writes a single byte value to unmanaged memory at a specified offset.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-1941"><xref:System.Runtime.InteropServices.Marshal.WriteByte%2A> permite una interacción directa con una matriz de bytes de estilo C no administrada, lo que elimina el gasto de copiar toda una matriz no administrada (mediante <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) a una matriz administrada distinta antes de establecer los valores de sus elementos.</span><span class="sxs-lookup"><span data-stu-id="ce515-1941"><xref:System.Runtime.InteropServices.Marshal.WriteByte%2A> enables direct interaction with an unmanaged C-style byte array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ce515-1942">En el ejemplo siguiente se muestra cómo leer y escribir en una matriz no administrada mediante el <xref:System.Runtime.InteropServices.Marshal.ReadByte%2A> y <xref:System.Runtime.InteropServices.Marshal.WriteByte%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="ce515-1942">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadByte%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteByte%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#3)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException"><span data-ttu-id="ce515-1943">La dirección base (<paramref name="ptr" />) más el byte de desplazamiento (<paramref name="ofs" />) produce un valor null o una dirección no válida.</span><span class="sxs-lookup"><span data-stu-id="ce515-1943">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-1944">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-1944">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-1945">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-1945">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="WriteByte">
      <MemberSignature Language="C#" Value="public static void WriteByte (object ptr, int ofs, byte val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteByte([out] object ptr, int32 ofs, unsigned int8 val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteByte(System.Object,System.Int32,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteByte (ptr As Object, ofs As Integer, val As Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteByte(System::Object ^ ptr, int ofs, System::Byte val);" />
      <MemberSignature Language="F#" Value="static member WriteByte : obj * int * byte -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.WriteByte (ptr, ofs, val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SuppressUnmanagedCodeSecurity</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netcore-2.2">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netcore-2.2">
          <AttributeName>System.Obsolete("WriteByte(Object, Int32, Byte) may be unavailable in future releases.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.Object" />
        <Parameter Name="ofs" Type="System.Int32" />
        <Parameter Name="val" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="ptr"><span data-ttu-id="ce515-1946">Dirección base en la memoria no administrada del objeto de destino.</span><span class="sxs-lookup"><span data-stu-id="ce515-1946">The base address in unmanaged memory of the target object.</span></span></param>
        <param name="ofs"><span data-ttu-id="ce515-1947">Desplazamiento de bytes adicional, que se agrega al parámetro <paramref name="ptr" /> antes de la escritura.</span><span class="sxs-lookup"><span data-stu-id="ce515-1947">An additional byte offset, which is added to the <paramref name="ptr" /> parameter before writing.</span></span></param>
        <param name="val"><span data-ttu-id="ce515-1948">Valor que se va a escribir.</span><span class="sxs-lookup"><span data-stu-id="ce515-1948">The value to write.</span></span></param>
        <summary><span data-ttu-id="ce515-1949">Escribe un valor de un solo byte en la memoria no administrada en un desplazamiento especificado.</span><span class="sxs-lookup"><span data-stu-id="ce515-1949">Writes a single byte value to unmanaged memory at a specified offset.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-1950"><xref:System.Runtime.InteropServices.Marshal.WriteByte%2A> permite una interacción directa con una matriz de bytes de estilo C no administrada, lo que elimina el gasto de copiar toda una matriz no administrada (mediante <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) a una matriz administrada distinta antes de establecer los valores de sus elementos.</span><span class="sxs-lookup"><span data-stu-id="ce515-1950"><xref:System.Runtime.InteropServices.Marshal.WriteByte%2A> enables direct interaction with an unmanaged C-style byte array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException"><span data-ttu-id="ce515-1951">La dirección base (<paramref name="ptr" />) más el byte de desplazamiento (<paramref name="ofs" />) produce un valor null o una dirección no válida.</span><span class="sxs-lookup"><span data-stu-id="ce515-1951">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ce515-1952"><paramref name="ptr" /> es un objeto <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-1952"><paramref name="ptr" /> is an <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> object.</span></span> <span data-ttu-id="ce515-1953">Este método no acepta parámetros <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-1953">This method does not accept <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> parameters.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-1954">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-1954">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-1955">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-1955">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteInt16">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ce515-1956">Escribe un valor entero de 16 bits con signo en la memoria no administrada.</span><span class="sxs-lookup"><span data-stu-id="ce515-1956">Writes a 16-bit signed integer value to unmanaged memory.</span></span> <span data-ttu-id="ce515-1957">Se admite la escritura en ubicaciones de memoria desalineadas.</span><span class="sxs-lookup"><span data-stu-id="ce515-1957">Writing to unaligned memory locations is supported.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteInt16">
      <MemberSignature Language="C#" Value="public static void WriteInt16 (IntPtr ptr, char val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteInt16(native int ptr, char val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.IntPtr,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteInt16 (ptr As IntPtr, val As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteInt16(IntPtr ptr, char val);" />
      <MemberSignature Language="F#" Value="static member WriteInt16 : nativeint * char -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.WriteInt16 (ptr, val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="val" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ptr"><span data-ttu-id="ce515-1958">Dirección de la memoria no administrada en la que se va a escribir.</span><span class="sxs-lookup"><span data-stu-id="ce515-1958">The address in unmanaged memory to write to.</span></span></param>
        <param name="val"><span data-ttu-id="ce515-1959">Valor que se va a escribir.</span><span class="sxs-lookup"><span data-stu-id="ce515-1959">The value to write.</span></span></param>
        <summary><span data-ttu-id="ce515-1960">Escribe un carácter como un valor entero de 16 bits en la memoria no administrada.</span><span class="sxs-lookup"><span data-stu-id="ce515-1960">Writes a character as a 16-bit integer value to unmanaged memory.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-1961"><xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> permite una interacción directa con una matriz de 16 bits con signo no administrada, lo que elimina el gasto de copiar toda una matriz no administrada (mediante <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) a una matriz administrada distinta antes de establecer los valores de sus elementos.</span><span class="sxs-lookup"><span data-stu-id="ce515-1961"><xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> enables direct interaction with an unmanaged 16-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
 <span data-ttu-id="ce515-1962">Se admite la escritura en ubicaciones de memoria desalineadas.</span><span class="sxs-lookup"><span data-stu-id="ce515-1962">Writing to unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ce515-1963">En el ejemplo siguiente se muestra cómo leer y escribir en una matriz no administrada mediante el <xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> y <xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="ce515-1963">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#4)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException"><span data-ttu-id="ce515-1964"><paramref name="ptr" /> no es un formato reconocido.</span><span class="sxs-lookup"><span data-stu-id="ce515-1964"><paramref name="ptr" /> is not a recognized format.</span></span>  
  
<span data-ttu-id="ce515-1965">O bien</span><span class="sxs-lookup"><span data-stu-id="ce515-1965">-or-</span></span> 
 <span data-ttu-id="ce515-1966">El valor de <paramref name="ptr" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-1966"><paramref name="ptr" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="ce515-1967">O bien</span><span class="sxs-lookup"><span data-stu-id="ce515-1967">-or-</span></span> 
 <span data-ttu-id="ce515-1968"><paramref name="ptr" /> no es válido.</span><span class="sxs-lookup"><span data-stu-id="ce515-1968"><paramref name="ptr" /> is invalid.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-1969">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-1969">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-1970">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-1970">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="WriteInt16">
      <MemberSignature Language="C#" Value="public static void WriteInt16 (IntPtr ptr, short val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteInt16(native int ptr, int16 val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.IntPtr,System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteInt16 (ptr As IntPtr, val As Short)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteInt16(IntPtr ptr, short val);" />
      <MemberSignature Language="F#" Value="static member WriteInt16 : nativeint * int16 -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.WriteInt16 (ptr, val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="val" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="ptr"><span data-ttu-id="ce515-1971">Dirección de la memoria no administrada en la que se va a escribir.</span><span class="sxs-lookup"><span data-stu-id="ce515-1971">The address in unmanaged memory to write to.</span></span></param>
        <param name="val"><span data-ttu-id="ce515-1972">Valor que se va a escribir.</span><span class="sxs-lookup"><span data-stu-id="ce515-1972">The value to write.</span></span></param>
        <summary><span data-ttu-id="ce515-1973">Escribe un valor entero de 16 bits en la memoria no administrada.</span><span class="sxs-lookup"><span data-stu-id="ce515-1973">Writes a 16-bit integer value to unmanaged memory.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-1974"><xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> permite una interacción directa con una matriz de 16 bits con signo no administrada, lo que elimina el gasto de copiar toda una matriz no administrada (mediante <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) a una matriz administrada distinta antes de establecer los valores de sus elementos.</span><span class="sxs-lookup"><span data-stu-id="ce515-1974"><xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> enables direct interaction with an unmanaged 16-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
 <span data-ttu-id="ce515-1975">Se admite la escritura en ubicaciones de memoria desalineadas.</span><span class="sxs-lookup"><span data-stu-id="ce515-1975">Writing to unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ce515-1976">En el ejemplo siguiente se muestra cómo leer y escribir en una matriz no administrada mediante el <xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> y <xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="ce515-1976">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#4)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException"><span data-ttu-id="ce515-1977"><paramref name="ptr" /> no es un formato reconocido.</span><span class="sxs-lookup"><span data-stu-id="ce515-1977"><paramref name="ptr" /> is not a recognized format.</span></span>  
  
<span data-ttu-id="ce515-1978">O bien</span><span class="sxs-lookup"><span data-stu-id="ce515-1978">-or-</span></span> 
 <span data-ttu-id="ce515-1979">El valor de <paramref name="ptr" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-1979"><paramref name="ptr" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="ce515-1980">O bien</span><span class="sxs-lookup"><span data-stu-id="ce515-1980">-or-</span></span> 
 <span data-ttu-id="ce515-1981"><paramref name="ptr" /> no es válido.</span><span class="sxs-lookup"><span data-stu-id="ce515-1981"><paramref name="ptr" /> is invalid.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-1982">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-1982">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-1983">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-1983">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="WriteInt16">
      <MemberSignature Language="C#" Value="public static void WriteInt16 (IntPtr ptr, int ofs, char val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteInt16(native int ptr, int32 ofs, char val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.IntPtr,System.Int32,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteInt16 (ptr As IntPtr, ofs As Integer, val As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteInt16(IntPtr ptr, int ofs, char val);" />
      <MemberSignature Language="F#" Value="static member WriteInt16 : nativeint * int * char -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.WriteInt16 (ptr, ofs, val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="ofs" Type="System.Int32" />
        <Parameter Name="val" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ptr"><span data-ttu-id="ce515-1984">Dirección base del montón nativo en la que se va a escribir.</span><span class="sxs-lookup"><span data-stu-id="ce515-1984">The base address in the native heap to write to.</span></span></param>
        <param name="ofs"><span data-ttu-id="ce515-1985">Desplazamiento de bytes adicional, que se agrega al parámetro <paramref name="ptr" /> antes de la escritura.</span><span class="sxs-lookup"><span data-stu-id="ce515-1985">An additional byte offset, which is added to the <paramref name="ptr" /> parameter before writing.</span></span></param>
        <param name="val"><span data-ttu-id="ce515-1986">Valor que se va a escribir.</span><span class="sxs-lookup"><span data-stu-id="ce515-1986">The value to write.</span></span></param>
        <summary><span data-ttu-id="ce515-1987">Escribe un valor entero de 16 bits con signo en la memoria no administrada en un desplazamiento especificado.</span><span class="sxs-lookup"><span data-stu-id="ce515-1987">Writes a 16-bit signed integer value to unmanaged memory at a specified offset.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-1988"><xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> permite una interacción directa con una matriz de 16 bits con signo no administrada, lo que elimina el gasto de copiar toda una matriz no administrada (mediante <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) a una matriz administrada distinta antes de establecer los valores de sus elementos.</span><span class="sxs-lookup"><span data-stu-id="ce515-1988"><xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> enables direct interaction with an unmanaged 16-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
 <span data-ttu-id="ce515-1989">Se admite la escritura en ubicaciones de memoria desalineadas.</span><span class="sxs-lookup"><span data-stu-id="ce515-1989">Writing to unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ce515-1990">En el ejemplo siguiente se muestra cómo leer y escribir en una matriz no administrada mediante el <xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> y <xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="ce515-1990">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#4)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException"><span data-ttu-id="ce515-1991">La dirección base (<paramref name="ptr" />) más el byte de desplazamiento (<paramref name="ofs" />) produce un valor null o una dirección no válida.</span><span class="sxs-lookup"><span data-stu-id="ce515-1991">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-1992">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-1992">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-1993">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-1993">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.WriteByte(System.IntPtr,System.Int32,System.Byte)" />
      </Docs>
    </Member>
    <Member MemberName="WriteInt16">
      <MemberSignature Language="C#" Value="public static void WriteInt16 (IntPtr ptr, int ofs, short val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteInt16(native int ptr, int32 ofs, int16 val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.IntPtr,System.Int32,System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteInt16 (ptr As IntPtr, ofs As Integer, val As Short)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteInt16(IntPtr ptr, int ofs, short val);" />
      <MemberSignature Language="F#" Value="static member WriteInt16 : nativeint * int * int16 -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.WriteInt16 (ptr, ofs, val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="ofs" Type="System.Int32" />
        <Parameter Name="val" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="ptr"><span data-ttu-id="ce515-1994">Dirección base de la memoria no administrada en la que se va a escribir.</span><span class="sxs-lookup"><span data-stu-id="ce515-1994">The base address in unmanaged memory to write to.</span></span></param>
        <param name="ofs"><span data-ttu-id="ce515-1995">Desplazamiento de bytes adicional, que se agrega al parámetro <paramref name="ptr" /> antes de la escritura.</span><span class="sxs-lookup"><span data-stu-id="ce515-1995">An additional byte offset, which is added to the <paramref name="ptr" /> parameter before writing.</span></span></param>
        <param name="val"><span data-ttu-id="ce515-1996">Valor que se va a escribir.</span><span class="sxs-lookup"><span data-stu-id="ce515-1996">The value to write.</span></span></param>
        <summary><span data-ttu-id="ce515-1997">Escribe un valor entero de 16 bits con signo en la memoria no administrada en un desplazamiento especificado.</span><span class="sxs-lookup"><span data-stu-id="ce515-1997">Writes a 16-bit signed integer value into unmanaged memory at a specified offset.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-1998"><xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> permite una interacción directa con una matriz de 16 bits con signo no administrada, lo que elimina el gasto de copiar toda una matriz no administrada (mediante <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) a una matriz administrada distinta antes de establecer los valores de sus elementos.</span><span class="sxs-lookup"><span data-stu-id="ce515-1998"><xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> enables direct interaction with an unmanaged 16-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
 <span data-ttu-id="ce515-1999">Se admite la escritura en ubicaciones de memoria desalineadas.</span><span class="sxs-lookup"><span data-stu-id="ce515-1999">Writing to unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ce515-2000">En el ejemplo siguiente se muestra cómo leer y escribir en una matriz no administrada mediante el <xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> y <xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="ce515-2000">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#4)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException"><span data-ttu-id="ce515-2001">La dirección base (<paramref name="ptr" />) más el byte de desplazamiento (<paramref name="ofs" />) produce un valor null o una dirección no válida.</span><span class="sxs-lookup"><span data-stu-id="ce515-2001">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-2002">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-2002">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-2003">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-2003">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.WriteByte(System.IntPtr,System.Int32,System.Byte)" />
      </Docs>
    </Member>
    <Member MemberName="WriteInt16">
      <MemberSignature Language="C#" Value="public static void WriteInt16 (object ptr, int ofs, char val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteInt16([out] object ptr, int32 ofs, char val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.Object,System.Int32,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteInt16 (ptr As Object, ofs As Integer, val As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteInt16(System::Object ^ ptr, int ofs, char val);" />
      <MemberSignature Language="F#" Value="static member WriteInt16 : obj * int * char -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.WriteInt16 (ptr, ofs, val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netcore-2.2">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netcore-2.2">
          <AttributeName>System.Obsolete("WriteInt16(Object, Int32, Char) may be unavailable in future releases.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.Object" />
        <Parameter Name="ofs" Type="System.Int32" />
        <Parameter Name="val" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ptr"><span data-ttu-id="ce515-2004">Dirección base en la memoria no administrada del objeto de destino.</span><span class="sxs-lookup"><span data-stu-id="ce515-2004">The base address in unmanaged memory of the target object.</span></span></param>
        <param name="ofs"><span data-ttu-id="ce515-2005">Desplazamiento de bytes adicional, que se agrega al parámetro <paramref name="ptr" /> antes de la escritura.</span><span class="sxs-lookup"><span data-stu-id="ce515-2005">An additional byte offset, which is added to the <paramref name="ptr" /> parameter before writing.</span></span></param>
        <param name="val"><span data-ttu-id="ce515-2006">Valor que se va a escribir.</span><span class="sxs-lookup"><span data-stu-id="ce515-2006">The value to write.</span></span></param>
        <summary><span data-ttu-id="ce515-2007">Escribe un valor entero de 16 bits con signo en la memoria no administrada en un desplazamiento especificado.</span><span class="sxs-lookup"><span data-stu-id="ce515-2007">Writes a 16-bit signed integer value to unmanaged memory at a specified offset.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-2008"><xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> permite una interacción directa con una matriz de 16 bits con signo no administrada, lo que elimina el gasto de copiar toda una matriz no administrada (mediante <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) a una matriz administrada distinta antes de establecer los valores de sus elementos.</span><span class="sxs-lookup"><span data-stu-id="ce515-2008"><xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> enables direct interaction with an unmanaged 16-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
 <span data-ttu-id="ce515-2009">Se admite la escritura en ubicaciones de memoria desalineadas.</span><span class="sxs-lookup"><span data-stu-id="ce515-2009">Writing to unaligned memory locations is supported.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException"><span data-ttu-id="ce515-2010">La dirección base (<paramref name="ptr" />) más el byte de desplazamiento (<paramref name="ofs" />) produce un valor null o una dirección no válida.</span><span class="sxs-lookup"><span data-stu-id="ce515-2010">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ce515-2011"><paramref name="ptr" /> es un objeto <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-2011"><paramref name="ptr" /> is an <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> object.</span></span> <span data-ttu-id="ce515-2012">Este método no acepta parámetros <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-2012">This method does not accept <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> parameters.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-2013">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-2013">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-2014">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-2014">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="WriteInt16">
      <MemberSignature Language="C#" Value="public static void WriteInt16 (object ptr, int ofs, short val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteInt16([out] object ptr, int32 ofs, int16 val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.Object,System.Int32,System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteInt16 (ptr As Object, ofs As Integer, val As Short)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteInt16(System::Object ^ ptr, int ofs, short val);" />
      <MemberSignature Language="F#" Value="static member WriteInt16 : obj * int * int16 -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.WriteInt16 (ptr, ofs, val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SuppressUnmanagedCodeSecurity</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netcore-2.2">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netcore-2.2">
          <AttributeName>System.Obsolete("WriteInt16(Object, Int32, Int16) may be unavailable in future releases.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.Object" />
        <Parameter Name="ofs" Type="System.Int32" />
        <Parameter Name="val" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="ptr"><span data-ttu-id="ce515-2015">Dirección base en la memoria no administrada del objeto de destino.</span><span class="sxs-lookup"><span data-stu-id="ce515-2015">The base address in unmanaged memory of the target object.</span></span></param>
        <param name="ofs"><span data-ttu-id="ce515-2016">Desplazamiento de bytes adicional, que se agrega al parámetro <paramref name="ptr" /> antes de la escritura.</span><span class="sxs-lookup"><span data-stu-id="ce515-2016">An additional byte offset, which is added to the <paramref name="ptr" /> parameter before writing.</span></span></param>
        <param name="val"><span data-ttu-id="ce515-2017">Valor que se va a escribir.</span><span class="sxs-lookup"><span data-stu-id="ce515-2017">The value to write.</span></span></param>
        <summary><span data-ttu-id="ce515-2018">Escribe un valor entero de 16 bits con signo en la memoria no administrada en un desplazamiento especificado.</span><span class="sxs-lookup"><span data-stu-id="ce515-2018">Writes a 16-bit signed integer value to unmanaged memory at a specified offset.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-2019"><xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> permite una interacción directa con una matriz de 16 bits con signo no administrada, lo que elimina el gasto de copiar toda una matriz no administrada (mediante <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) a una matriz administrada distinta antes de establecer los valores de sus elementos.</span><span class="sxs-lookup"><span data-stu-id="ce515-2019"><xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> enables direct interaction with an unmanaged 16-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
 <span data-ttu-id="ce515-2020">Se admite la escritura en ubicaciones de memoria desalineadas.</span><span class="sxs-lookup"><span data-stu-id="ce515-2020">Writing to unaligned memory locations is supported.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException"><span data-ttu-id="ce515-2021">La dirección base (<paramref name="ptr" />) más el byte de desplazamiento (<paramref name="ofs" />) produce un valor null o una dirección no válida.</span><span class="sxs-lookup"><span data-stu-id="ce515-2021">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ce515-2022"><paramref name="ptr" /> es un objeto <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-2022"><paramref name="ptr" /> is an <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> object.</span></span> <span data-ttu-id="ce515-2023">Este método no acepta parámetros <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-2023">This method does not accept <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> parameters.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-2024">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-2024">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-2025">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-2025">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteInt32">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ce515-2026">Escribe un valor entero de 32 bits con signo en la memoria no administrada.</span><span class="sxs-lookup"><span data-stu-id="ce515-2026">Writes a 32-bit signed integer value to unmanaged memory.</span></span> <span data-ttu-id="ce515-2027">Se admite la escritura en ubicaciones de memoria desalineadas.</span><span class="sxs-lookup"><span data-stu-id="ce515-2027">Writing to unaligned memory locations is supported.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteInt32">
      <MemberSignature Language="C#" Value="public static void WriteInt32 (IntPtr ptr, int val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteInt32(native int ptr, int32 val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteInt32(System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteInt32 (ptr As IntPtr, val As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteInt32(IntPtr ptr, int val);" />
      <MemberSignature Language="F#" Value="static member WriteInt32 : nativeint * int -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.WriteInt32 (ptr, val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="val" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ptr"><span data-ttu-id="ce515-2028">Dirección de la memoria no administrada en la que se va a escribir.</span><span class="sxs-lookup"><span data-stu-id="ce515-2028">The address in unmanaged memory to write to.</span></span></param>
        <param name="val"><span data-ttu-id="ce515-2029">Valor que se va a escribir.</span><span class="sxs-lookup"><span data-stu-id="ce515-2029">The value to write.</span></span></param>
        <summary><span data-ttu-id="ce515-2030">Escribe un valor entero de 32 bits con signo en la memoria no administrada.</span><span class="sxs-lookup"><span data-stu-id="ce515-2030">Writes a 32-bit signed integer value to unmanaged memory.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-2031"><xref:System.Runtime.InteropServices.Marshal.WriteInt32%2A> permite una interacción directa con una matriz de 32 bits con signo no administrada, lo que elimina el gasto de copiar toda una matriz no administrada (mediante <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) a una matriz administrada distinta antes de establecer los valores de sus elementos.</span><span class="sxs-lookup"><span data-stu-id="ce515-2031"><xref:System.Runtime.InteropServices.Marshal.WriteInt32%2A> enables direct interaction with an unmanaged 32-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
 <span data-ttu-id="ce515-2032">Se admite la escritura en ubicaciones de memoria desalineadas.</span><span class="sxs-lookup"><span data-stu-id="ce515-2032">Writing to unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ce515-2033">En el ejemplo siguiente se muestra cómo leer y escribir en una matriz no administrada mediante el <xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A> y <xref:System.Runtime.InteropServices.Marshal.WriteInt32%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="ce515-2033">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteInt32%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#5)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException"><span data-ttu-id="ce515-2034"><paramref name="ptr" /> no es un formato reconocido.</span><span class="sxs-lookup"><span data-stu-id="ce515-2034"><paramref name="ptr" /> is not a recognized format.</span></span>  
  
<span data-ttu-id="ce515-2035">O bien</span><span class="sxs-lookup"><span data-stu-id="ce515-2035">-or-</span></span> 
 <span data-ttu-id="ce515-2036">El valor de <paramref name="ptr" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-2036"><paramref name="ptr" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="ce515-2037">O bien</span><span class="sxs-lookup"><span data-stu-id="ce515-2037">-or-</span></span> 
 <span data-ttu-id="ce515-2038"><paramref name="ptr" /> no es válido.</span><span class="sxs-lookup"><span data-stu-id="ce515-2038"><paramref name="ptr" /> is invalid.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-2039">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-2039">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-2040">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-2040">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="WriteInt32">
      <MemberSignature Language="C#" Value="public static void WriteInt32 (IntPtr ptr, int ofs, int val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteInt32(native int ptr, int32 ofs, int32 val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteInt32(System.IntPtr,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteInt32 (ptr As IntPtr, ofs As Integer, val As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteInt32(IntPtr ptr, int ofs, int val);" />
      <MemberSignature Language="F#" Value="static member WriteInt32 : nativeint * int * int -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.WriteInt32 (ptr, ofs, val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="ofs" Type="System.Int32" />
        <Parameter Name="val" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ptr"><span data-ttu-id="ce515-2041">Dirección base de la memoria no administrada en la que se va a escribir.</span><span class="sxs-lookup"><span data-stu-id="ce515-2041">The base address in unmanaged memory to write to.</span></span></param>
        <param name="ofs"><span data-ttu-id="ce515-2042">Desplazamiento de bytes adicional, que se agrega al parámetro <paramref name="ptr" /> antes de la escritura.</span><span class="sxs-lookup"><span data-stu-id="ce515-2042">An additional byte offset, which is added to the <paramref name="ptr" /> parameter before writing.</span></span></param>
        <param name="val"><span data-ttu-id="ce515-2043">Valor que se va a escribir.</span><span class="sxs-lookup"><span data-stu-id="ce515-2043">The value to write.</span></span></param>
        <summary><span data-ttu-id="ce515-2044">Escribe un valor entero de 32 bits con signo en la memoria no administrada en un desplazamiento especificado.</span><span class="sxs-lookup"><span data-stu-id="ce515-2044">Writes a 32-bit signed integer value into unmanaged memory at a specified offset.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-2045"><xref:System.Runtime.InteropServices.Marshal.WriteInt32%2A> permite una interacción directa con una matriz de 32 bits con signo no administrada, lo que elimina el gasto de copiar toda una matriz no administrada (mediante <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) a una matriz administrada distinta antes de establecer los valores de sus elementos.</span><span class="sxs-lookup"><span data-stu-id="ce515-2045"><xref:System.Runtime.InteropServices.Marshal.WriteInt32%2A> enables direct interaction with an unmanaged 32-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
 <span data-ttu-id="ce515-2046">Se admite la escritura en ubicaciones de memoria desalineadas.</span><span class="sxs-lookup"><span data-stu-id="ce515-2046">Writing to unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ce515-2047">En el ejemplo siguiente se muestra cómo leer y escribir en una matriz no administrada mediante el <xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A> y <xref:System.Runtime.InteropServices.Marshal.WriteInt32%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="ce515-2047">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteInt32%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#5)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException"><span data-ttu-id="ce515-2048">La dirección base (<paramref name="ptr" />) más el byte de desplazamiento (<paramref name="ofs" />) produce un valor null o una dirección no válida.</span><span class="sxs-lookup"><span data-stu-id="ce515-2048">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-2049">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-2049">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-2050">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-2050">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.WriteByte(System.IntPtr,System.Int32,System.Byte)" />
      </Docs>
    </Member>
    <Member MemberName="WriteInt32">
      <MemberSignature Language="C#" Value="public static void WriteInt32 (object ptr, int ofs, int val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteInt32([out] object ptr, int32 ofs, int32 val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteInt32(System.Object,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteInt32 (ptr As Object, ofs As Integer, val As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteInt32(System::Object ^ ptr, int ofs, int val);" />
      <MemberSignature Language="F#" Value="static member WriteInt32 : obj * int * int -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.WriteInt32 (ptr, ofs, val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SuppressUnmanagedCodeSecurity</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netcore-2.2">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netcore-2.2">
          <AttributeName>System.Obsolete("WriteInt32(Object, Int32, Int32) may be unavailable in future releases.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.Object" />
        <Parameter Name="ofs" Type="System.Int32" />
        <Parameter Name="val" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ptr"><span data-ttu-id="ce515-2051">Dirección base en la memoria no administrada del objeto de destino.</span><span class="sxs-lookup"><span data-stu-id="ce515-2051">The base address in unmanaged memory of the target object.</span></span></param>
        <param name="ofs"><span data-ttu-id="ce515-2052">Desplazamiento de bytes adicional, que se agrega al parámetro <paramref name="ptr" /> antes de la escritura.</span><span class="sxs-lookup"><span data-stu-id="ce515-2052">An additional byte offset, which is added to the <paramref name="ptr" /> parameter before writing.</span></span></param>
        <param name="val"><span data-ttu-id="ce515-2053">Valor que se va a escribir.</span><span class="sxs-lookup"><span data-stu-id="ce515-2053">The value to write.</span></span></param>
        <summary><span data-ttu-id="ce515-2054">Escribe un valor entero de 32 bits con signo en la memoria no administrada en un desplazamiento especificado.</span><span class="sxs-lookup"><span data-stu-id="ce515-2054">Writes a 32-bit signed integer value to unmanaged memory at a specified offset.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-2055"><xref:System.Runtime.InteropServices.Marshal.WriteInt32%2A> permite una interacción directa con una matriz de 32 bits con signo no administrada, lo que elimina el gasto de copiar toda una matriz no administrada (mediante <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) a una matriz administrada distinta antes de establecer los valores de sus elementos.</span><span class="sxs-lookup"><span data-stu-id="ce515-2055"><xref:System.Runtime.InteropServices.Marshal.WriteInt32%2A> enables direct interaction with an unmanaged 32-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
 <span data-ttu-id="ce515-2056">Se admite la escritura en ubicaciones de memoria desalineadas.</span><span class="sxs-lookup"><span data-stu-id="ce515-2056">Writing to unaligned memory locations is supported.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException"><span data-ttu-id="ce515-2057">La dirección base (<paramref name="ptr" />) más el byte de desplazamiento (<paramref name="ofs" />) produce un valor null o una dirección no válida.</span><span class="sxs-lookup"><span data-stu-id="ce515-2057">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ce515-2058"><paramref name="ptr" /> es un objeto <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-2058"><paramref name="ptr" /> is an <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> object.</span></span> <span data-ttu-id="ce515-2059">Este método no acepta parámetros <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-2059">This method does not accept <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> parameters.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-2060">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-2060">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-2061">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-2061">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteInt64">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ce515-2062">Escribe un valor entero de 64 bits con signo en la memoria no administrada.</span><span class="sxs-lookup"><span data-stu-id="ce515-2062">Writes a 64-bit signed integer value to unmanaged memory.</span></span> <span data-ttu-id="ce515-2063">Se admite la escritura en ubicaciones de memoria desalineadas.</span><span class="sxs-lookup"><span data-stu-id="ce515-2063">Writing to unaligned memory locations is supported.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteInt64">
      <MemberSignature Language="C#" Value="public static void WriteInt64 (IntPtr ptr, long val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteInt64(native int ptr, int64 val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteInt64(System.IntPtr,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteInt64 (ptr As IntPtr, val As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteInt64(IntPtr ptr, long val);" />
      <MemberSignature Language="F#" Value="static member WriteInt64 : nativeint * int64 -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.WriteInt64 (ptr, val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="val" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="ptr"><span data-ttu-id="ce515-2064">Dirección de la memoria no administrada en la que se va a escribir.</span><span class="sxs-lookup"><span data-stu-id="ce515-2064">The address in unmanaged memory to write to.</span></span></param>
        <param name="val"><span data-ttu-id="ce515-2065">Valor que se va a escribir.</span><span class="sxs-lookup"><span data-stu-id="ce515-2065">The value to write.</span></span></param>
        <summary><span data-ttu-id="ce515-2066">Escribe un valor entero de 64 bits con signo en la memoria no administrada.</span><span class="sxs-lookup"><span data-stu-id="ce515-2066">Writes a 64-bit signed integer value to unmanaged memory.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-2067"><xref:System.Runtime.InteropServices.Marshal.WriteInt64%2A> permite una interacción directa con una matriz de 64 bits con signo no administrada, lo que elimina el gasto de copiar toda una matriz no administrada (mediante <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) a una matriz administrada distinta antes de establecer los valores de sus elementos.</span><span class="sxs-lookup"><span data-stu-id="ce515-2067"><xref:System.Runtime.InteropServices.Marshal.WriteInt64%2A> enables direct interaction with an unmanaged 64-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
 <span data-ttu-id="ce515-2068">Se admite la escritura en ubicaciones de memoria desalineadas.</span><span class="sxs-lookup"><span data-stu-id="ce515-2068">Writing to unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ce515-2069">En el ejemplo siguiente se muestra cómo leer y escribir en una matriz no administrada mediante el <xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A> y <xref:System.Runtime.InteropServices.Marshal.WriteInt64%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="ce515-2069">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteInt64%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#6)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException"><span data-ttu-id="ce515-2070"><paramref name="ptr" /> no es un formato reconocido.</span><span class="sxs-lookup"><span data-stu-id="ce515-2070"><paramref name="ptr" /> is not a recognized format.</span></span>  
  
<span data-ttu-id="ce515-2071">O bien</span><span class="sxs-lookup"><span data-stu-id="ce515-2071">-or-</span></span> 
 <span data-ttu-id="ce515-2072">El valor de <paramref name="ptr" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-2072"><paramref name="ptr" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="ce515-2073">O bien</span><span class="sxs-lookup"><span data-stu-id="ce515-2073">-or-</span></span> 
 <span data-ttu-id="ce515-2074"><paramref name="ptr" /> no es válido.</span><span class="sxs-lookup"><span data-stu-id="ce515-2074"><paramref name="ptr" /> is invalid.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-2075">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-2075">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-2076">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-2076">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="WriteInt64">
      <MemberSignature Language="C#" Value="public static void WriteInt64 (IntPtr ptr, int ofs, long val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteInt64(native int ptr, int32 ofs, int64 val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteInt64(System.IntPtr,System.Int32,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteInt64 (ptr As IntPtr, ofs As Integer, val As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteInt64(IntPtr ptr, int ofs, long val);" />
      <MemberSignature Language="F#" Value="static member WriteInt64 : nativeint * int * int64 -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.WriteInt64 (ptr, ofs, val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="ofs" Type="System.Int32" />
        <Parameter Name="val" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="ptr"><span data-ttu-id="ce515-2077">Dirección base de la memoria no administrada en la que se va a escribir.</span><span class="sxs-lookup"><span data-stu-id="ce515-2077">The base address in unmanaged memory to write.</span></span></param>
        <param name="ofs"><span data-ttu-id="ce515-2078">Desplazamiento de bytes adicional, que se agrega al parámetro <paramref name="ptr" /> antes de la escritura.</span><span class="sxs-lookup"><span data-stu-id="ce515-2078">An additional byte offset, which is added to the <paramref name="ptr" /> parameter before writing.</span></span></param>
        <param name="val"><span data-ttu-id="ce515-2079">Valor que se va a escribir.</span><span class="sxs-lookup"><span data-stu-id="ce515-2079">The value to write.</span></span></param>
        <summary><span data-ttu-id="ce515-2080">Escribe un valor entero de 64 bits con signo en la memoria no administrada en un desplazamiento especificado.</span><span class="sxs-lookup"><span data-stu-id="ce515-2080">Writes a 64-bit signed integer value to unmanaged memory at a specified offset.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-2081"><xref:System.Runtime.InteropServices.Marshal.WriteInt64%2A> permite una interacción directa con una matriz de 64 bits con signo no administrada, lo que elimina el gasto de copiar toda una matriz no administrada (mediante <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) a una matriz administrada distinta antes de establecer los valores de sus elementos.</span><span class="sxs-lookup"><span data-stu-id="ce515-2081"><xref:System.Runtime.InteropServices.Marshal.WriteInt64%2A> enables direct interaction with an unmanaged 64-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
 <span data-ttu-id="ce515-2082">Se admite la escritura en ubicaciones de memoria desalineadas.</span><span class="sxs-lookup"><span data-stu-id="ce515-2082">Writing to unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ce515-2083">En el ejemplo siguiente se muestra cómo leer y escribir en una matriz no administrada mediante el <xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A> y <xref:System.Runtime.InteropServices.Marshal.WriteInt64%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="ce515-2083">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteInt64%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#6)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException"><span data-ttu-id="ce515-2084">La dirección base (<paramref name="ptr" />) más el byte de desplazamiento (<paramref name="ofs" />) produce un valor null o una dirección no válida.</span><span class="sxs-lookup"><span data-stu-id="ce515-2084">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-2085">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-2085">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-2086">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-2086">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.WriteByte(System.IntPtr,System.Int32,System.Byte)" />
      </Docs>
    </Member>
    <Member MemberName="WriteInt64">
      <MemberSignature Language="C#" Value="public static void WriteInt64 (object ptr, int ofs, long val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteInt64([out] object ptr, int32 ofs, int64 val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteInt64(System.Object,System.Int32,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteInt64 (ptr As Object, ofs As Integer, val As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteInt64(System::Object ^ ptr, int ofs, long val);" />
      <MemberSignature Language="F#" Value="static member WriteInt64 : obj * int * int64 -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.WriteInt64 (ptr, ofs, val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SuppressUnmanagedCodeSecurity</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netcore-2.2">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netcore-2.2">
          <AttributeName>System.Obsolete("WriteInt64(Object, Int32, Int64) may be unavailable in future releases.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.Object" />
        <Parameter Name="ofs" Type="System.Int32" />
        <Parameter Name="val" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="ptr"><span data-ttu-id="ce515-2087">Dirección base en la memoria no administrada del objeto de destino.</span><span class="sxs-lookup"><span data-stu-id="ce515-2087">The base address in unmanaged memory of the target object.</span></span></param>
        <param name="ofs"><span data-ttu-id="ce515-2088">Desplazamiento de bytes adicional, que se agrega al parámetro <paramref name="ptr" /> antes de la escritura.</span><span class="sxs-lookup"><span data-stu-id="ce515-2088">An additional byte offset, which is added to the <paramref name="ptr" /> parameter before writing.</span></span></param>
        <param name="val"><span data-ttu-id="ce515-2089">Valor que se va a escribir.</span><span class="sxs-lookup"><span data-stu-id="ce515-2089">The value to write.</span></span></param>
        <summary><span data-ttu-id="ce515-2090">Escribe un valor entero de 64 bits con signo en la memoria no administrada en un desplazamiento especificado.</span><span class="sxs-lookup"><span data-stu-id="ce515-2090">Writes a 64-bit signed integer value to unmanaged memory at a specified offset.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-2091"><xref:System.Runtime.InteropServices.Marshal.WriteInt64%2A> permite una interacción directa con una matriz de 64 bits con signo no administrada, lo que elimina el gasto de copiar toda una matriz no administrada (mediante <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) a una matriz administrada distinta antes de establecer los valores de sus elementos.</span><span class="sxs-lookup"><span data-stu-id="ce515-2091"><xref:System.Runtime.InteropServices.Marshal.WriteInt64%2A> enables direct interaction with an unmanaged 64-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
 <span data-ttu-id="ce515-2092">Se admite la escritura en ubicaciones de memoria desalineadas.</span><span class="sxs-lookup"><span data-stu-id="ce515-2092">Writing to unaligned memory locations is supported.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException"><span data-ttu-id="ce515-2093">La dirección base (<paramref name="ptr" />) más el byte de desplazamiento (<paramref name="ofs" />) produce un valor null o una dirección no válida.</span><span class="sxs-lookup"><span data-stu-id="ce515-2093">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ce515-2094"><paramref name="ptr" /> es un objeto <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-2094"><paramref name="ptr" /> is an <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> object.</span></span> <span data-ttu-id="ce515-2095">Este método no acepta parámetros <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-2095">This method does not accept <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> parameters.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-2096">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-2096">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-2097">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-2097">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteIntPtr">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ce515-2098">Escribe en la memoria no administrada un valor de tipo entero cuyo tamaño en bytes es propio del procesador nativo.</span><span class="sxs-lookup"><span data-stu-id="ce515-2098">Writes a processor native-sized integer value to unmanaged memory.</span></span> <span data-ttu-id="ce515-2099">Se escriben enteros de 32 bits en los sistemas de 32 bits y enteros de 64 bits en los sistemas de 64 bits.</span><span class="sxs-lookup"><span data-stu-id="ce515-2099">32-bit integers are written on 32-bit systems, and 64-bit integers are written on 64-bit systems.</span></span> <span data-ttu-id="ce515-2100">Se admite la escritura en ubicaciones de memoria desalineadas.</span><span class="sxs-lookup"><span data-stu-id="ce515-2100">Writing to unaligned memory locations is supported.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteIntPtr">
      <MemberSignature Language="C#" Value="public static void WriteIntPtr (IntPtr ptr, IntPtr val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteIntPtr(native int ptr, native int val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteIntPtr(System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteIntPtr (ptr As IntPtr, val As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteIntPtr(IntPtr ptr, IntPtr val);" />
      <MemberSignature Language="F#" Value="static member WriteIntPtr : nativeint * nativeint -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.WriteIntPtr (ptr, val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="val" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="ptr"><span data-ttu-id="ce515-2101">Dirección de la memoria no administrada en la que se va a escribir.</span><span class="sxs-lookup"><span data-stu-id="ce515-2101">The address in unmanaged memory to write to.</span></span></param>
        <param name="val"><span data-ttu-id="ce515-2102">Valor que se va a escribir.</span><span class="sxs-lookup"><span data-stu-id="ce515-2102">The value to write.</span></span></param>
        <summary><span data-ttu-id="ce515-2103">Escribe en la memoria no administrada un valor de tipo entero cuyo tamaño en bytes es propio del procesador nativo.</span><span class="sxs-lookup"><span data-stu-id="ce515-2103">Writes a processor native sized integer value into unmanaged memory.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-2104"><xref:System.Runtime.InteropServices.Marshal.WriteIntPtr%2A> permite una interacción directa con un estilo de C no administrado `IntPtr` matriz, lo que elimina el gasto de copiar toda una matriz no administrada (mediante <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) a una matriz administrada distinta antes de establecer los valores de sus elementos.</span><span class="sxs-lookup"><span data-stu-id="ce515-2104"><xref:System.Runtime.InteropServices.Marshal.WriteIntPtr%2A> enables direct interaction with an unmanaged C-style `IntPtr` array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
 <span data-ttu-id="ce515-2105">Se admite la escritura en ubicaciones de memoria desalineadas.</span><span class="sxs-lookup"><span data-stu-id="ce515-2105">Writing to unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ce515-2106">En el ejemplo siguiente se muestra cómo leer y escribir en una matriz no administrada mediante el <xref:System.Runtime.InteropServices.Marshal.ReadIntPtr%2A> y <xref:System.Runtime.InteropServices.Marshal.WriteIntPtr%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="ce515-2106">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadIntPtr%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteIntPtr%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#2)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException"><span data-ttu-id="ce515-2107"><paramref name="ptr" /> no es un formato reconocido.</span><span class="sxs-lookup"><span data-stu-id="ce515-2107"><paramref name="ptr" /> is not a recognized format.</span></span>  
  
<span data-ttu-id="ce515-2108">O bien</span><span class="sxs-lookup"><span data-stu-id="ce515-2108">-or-</span></span> 
 <span data-ttu-id="ce515-2109">El valor de <paramref name="ptr" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-2109"><paramref name="ptr" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="ce515-2110">O bien</span><span class="sxs-lookup"><span data-stu-id="ce515-2110">-or-</span></span> 
 <span data-ttu-id="ce515-2111"><paramref name="ptr" /> no es válido.</span><span class="sxs-lookup"><span data-stu-id="ce515-2111"><paramref name="ptr" /> is invalid.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-2112">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-2112">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-2113">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-2113">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="WriteIntPtr">
      <MemberSignature Language="C#" Value="public static void WriteIntPtr (IntPtr ptr, int ofs, IntPtr val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteIntPtr(native int ptr, int32 ofs, native int val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteIntPtr(System.IntPtr,System.Int32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteIntPtr (ptr As IntPtr, ofs As Integer, val As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteIntPtr(IntPtr ptr, int ofs, IntPtr val);" />
      <MemberSignature Language="F#" Value="static member WriteIntPtr : nativeint * int * nativeint -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.WriteIntPtr (ptr, ofs, val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="ofs" Type="System.Int32" />
        <Parameter Name="val" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="ptr"><span data-ttu-id="ce515-2114">Dirección base de la memoria no administrada en la que se va a escribir.</span><span class="sxs-lookup"><span data-stu-id="ce515-2114">The base address in unmanaged memory to write to.</span></span></param>
        <param name="ofs"><span data-ttu-id="ce515-2115">Desplazamiento de bytes adicional, que se agrega al parámetro <paramref name="ptr" /> antes de la escritura.</span><span class="sxs-lookup"><span data-stu-id="ce515-2115">An additional byte offset, which is added to the <paramref name="ptr" /> parameter before writing.</span></span></param>
        <param name="val"><span data-ttu-id="ce515-2116">Valor que se va a escribir.</span><span class="sxs-lookup"><span data-stu-id="ce515-2116">The value to write.</span></span></param>
        <summary><span data-ttu-id="ce515-2117">Escribe en la memoria no administrada un valor de tipo entero cuyo tamaño en bytes es propio del procesador nativo en un desplazamiento especificado.</span><span class="sxs-lookup"><span data-stu-id="ce515-2117">Writes a processor native-sized integer value to unmanaged memory at a specified offset.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-2118">Este método escribe un entero de 32 bits en sistemas de 32 bits y un entero de 64 bits en sistemas de 64 bits.</span><span class="sxs-lookup"><span data-stu-id="ce515-2118">This method writes a 32 bit integer on 32 bit systems, and a 64 bit integer on 64 bit systems.</span></span>  
  
 <span data-ttu-id="ce515-2119"><xref:System.Runtime.InteropServices.Marshal.WriteIntPtr%2A> permite una interacción directa con un estilo de C no administrado `IntPtr` matriz, lo que elimina el gasto de copiar toda una matriz no administrada (mediante <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) a una matriz administrada distinta antes de establecer los valores de sus elementos.</span><span class="sxs-lookup"><span data-stu-id="ce515-2119"><xref:System.Runtime.InteropServices.Marshal.WriteIntPtr%2A> enables direct interaction with an unmanaged C-style `IntPtr` array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
 <span data-ttu-id="ce515-2120">Se admite la escritura en ubicaciones de memoria desalineadas.</span><span class="sxs-lookup"><span data-stu-id="ce515-2120">Writing to unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ce515-2121">En el ejemplo siguiente se muestra cómo leer y escribir en una matriz no administrada mediante el <xref:System.Runtime.InteropServices.Marshal.ReadIntPtr%2A> y <xref:System.Runtime.InteropServices.Marshal.WriteIntPtr%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="ce515-2121">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadIntPtr%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteIntPtr%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#2)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException"><span data-ttu-id="ce515-2122">La dirección base (<paramref name="ptr" />) más el byte de desplazamiento (<paramref name="ofs" />) produce un valor null o una dirección no válida.</span><span class="sxs-lookup"><span data-stu-id="ce515-2122">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-2123">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-2123">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-2124">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-2124">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.WriteByte(System.IntPtr,System.Int32,System.Byte)" />
      </Docs>
    </Member>
    <Member MemberName="WriteIntPtr">
      <MemberSignature Language="C#" Value="public static void WriteIntPtr (object ptr, int ofs, IntPtr val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteIntPtr([out] object ptr, int32 ofs, native int val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteIntPtr(System.Object,System.Int32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteIntPtr (ptr As Object, ofs As Integer, val As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteIntPtr(System::Object ^ ptr, int ofs, IntPtr val);" />
      <MemberSignature Language="F#" Value="static member WriteIntPtr : obj * int * nativeint -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.WriteIntPtr (ptr, ofs, val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netcore-2.2">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netcore-2.2">
          <AttributeName>System.Obsolete("WriteIntPtr(Object, Int32, IntPtr) may be unavailable in future releases.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.Object" />
        <Parameter Name="ofs" Type="System.Int32" />
        <Parameter Name="val" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="ptr"><span data-ttu-id="ce515-2125">Dirección base en la memoria no administrada del objeto de destino.</span><span class="sxs-lookup"><span data-stu-id="ce515-2125">The base address in unmanaged memory of the target object.</span></span></param>
        <param name="ofs"><span data-ttu-id="ce515-2126">Desplazamiento de bytes adicional, que se agrega al parámetro <paramref name="ptr" /> antes de la escritura.</span><span class="sxs-lookup"><span data-stu-id="ce515-2126">An additional byte offset, which is added to the <paramref name="ptr" /> parameter before writing.</span></span></param>
        <param name="val"><span data-ttu-id="ce515-2127">Valor que se va a escribir.</span><span class="sxs-lookup"><span data-stu-id="ce515-2127">The value to write.</span></span></param>
        <summary><span data-ttu-id="ce515-2128">Escribe en la memoria no administrada un valor de tipo entero cuyo tamaño en bytes es propio del procesador nativo.</span><span class="sxs-lookup"><span data-stu-id="ce515-2128">Writes a processor native sized integer value to unmanaged memory.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-2129"><xref:System.Runtime.InteropServices.Marshal.WriteIntPtr%2A> permite una interacción directa con una matriz de bytes de estilo C no administrada, lo que elimina el gasto de copiar toda una matriz no administrada (mediante <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) a una matriz administrada distinta antes de establecer los valores de sus elementos.</span><span class="sxs-lookup"><span data-stu-id="ce515-2129"><xref:System.Runtime.InteropServices.Marshal.WriteIntPtr%2A> enables direct interaction with an unmanaged C-style byte array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
 <span data-ttu-id="ce515-2130">Se admite la escritura en ubicaciones de memoria desalineadas.</span><span class="sxs-lookup"><span data-stu-id="ce515-2130">Writing to unaligned memory locations is supported.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException"><span data-ttu-id="ce515-2131">La dirección base (<paramref name="ptr" />) más el byte de desplazamiento (<paramref name="ofs" />) produce un valor null o una dirección no válida.</span><span class="sxs-lookup"><span data-stu-id="ce515-2131">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ce515-2132"><paramref name="ptr" /> es un objeto <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-2132"><paramref name="ptr" /> is an <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> object.</span></span> <span data-ttu-id="ce515-2133">Este método no acepta parámetros <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-2133">This method does not accept <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> parameters.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-2134">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-2134">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-2135">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-2135">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ZeroFreeBSTR">
      <MemberSignature Language="C#" Value="public static void ZeroFreeBSTR (IntPtr s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ZeroFreeBSTR(native int s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ZeroFreeBSTR(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ZeroFreeBSTR (s As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ZeroFreeBSTR(IntPtr s);" />
      <MemberSignature Language="F#" Value="static member ZeroFreeBSTR : nativeint -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.ZeroFreeBSTR s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="ce515-2136">Dirección del <see langword="BSTR" /> que se va a liberar.</span><span class="sxs-lookup"><span data-stu-id="ce515-2136">The address of the <see langword="BSTR" /> to free.</span></span></param>
        <summary><span data-ttu-id="ce515-2137">Libera un puntero [BSTR](https://msdn.microsoft.com/library/ms221069.aspx) que se asignó usando el método <see cref="M:System.Runtime.InteropServices.Marshal.SecureStringToBSTR(System.Security.SecureString)" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-2137">Frees a [BSTR](https://msdn.microsoft.com/library/ms221069.aspx) pointer that was allocated using the <see cref="M:System.Runtime.InteropServices.Marshal.SecureStringToBSTR(System.Security.SecureString)" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-2138">El <xref:System.Runtime.InteropServices.Marshal.ZeroFreeBSTR%2A> método primero establece el contenido de lo BSTR en cero y, a continuación, libera el BSTR.</span><span class="sxs-lookup"><span data-stu-id="ce515-2138">The <xref:System.Runtime.InteropServices.Marshal.ZeroFreeBSTR%2A> method first sets the contents of the BSTR to zero, and then frees the BSTR.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-2139">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-2139">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-2140">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-2140">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="ZeroFreeCoTaskMemAnsi">
      <MemberSignature Language="C#" Value="public static void ZeroFreeCoTaskMemAnsi (IntPtr s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ZeroFreeCoTaskMemAnsi(native int s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemAnsi(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ZeroFreeCoTaskMemAnsi (s As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ZeroFreeCoTaskMemAnsi(IntPtr s);" />
      <MemberSignature Language="F#" Value="static member ZeroFreeCoTaskMemAnsi : nativeint -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemAnsi s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="ce515-2141">La dirección de la cadena no administrada que se va a liberar.</span><span class="sxs-lookup"><span data-stu-id="ce515-2141">The address of the unmanaged string to free.</span></span></param>
        <summary><span data-ttu-id="ce515-2142">Libera un puntero a una cadena no administrada que se ha asignado con el método <see cref="M:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi(System.Security.SecureString)" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-2142">Frees an unmanaged string pointer that was allocated using the <see cref="M:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi(System.Security.SecureString)" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-2143">El <xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemAnsi%2A> método ceros en primer lugar y, a continuación, libera memoria no administrada que se asignó usando el <xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi%2A> método.</span><span class="sxs-lookup"><span data-stu-id="ce515-2143">The <xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemAnsi%2A> method first zeros out and then frees unmanaged memory that was allocated using the <xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ce515-2144">En el ejemplo siguiente se usa el <xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi%2A> método para calcular las referencias y descifrar el contenido de un <xref:System.Security.SecureString> objeto en un bloque de memoria no administrada.</span><span class="sxs-lookup"><span data-stu-id="ce515-2144">The following example uses the <xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi%2A> method to marshal and decrypt the contents of a <xref:System.Security.SecureString> object to a block of unmanaged memory.</span></span> <span data-ttu-id="ce515-2145">A continuación, usa el <xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemAnsi%2A> método a cero y desechar el bloque no administrado.</span><span class="sxs-lookup"><span data-stu-id="ce515-2145">It then uses the <xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemAnsi%2A> method to zero out and dispose the unmanaged block.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-2146">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-2146">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-2147">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-2147">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="ZeroFreeCoTaskMemUnicode">
      <MemberSignature Language="C#" Value="public static void ZeroFreeCoTaskMemUnicode (IntPtr s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ZeroFreeCoTaskMemUnicode(native int s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemUnicode(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ZeroFreeCoTaskMemUnicode (s As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ZeroFreeCoTaskMemUnicode(IntPtr s);" />
      <MemberSignature Language="F#" Value="static member ZeroFreeCoTaskMemUnicode : nativeint -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemUnicode s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="ce515-2148">La dirección de la cadena no administrada que se va a liberar.</span><span class="sxs-lookup"><span data-stu-id="ce515-2148">The address of the unmanaged string to free.</span></span></param>
        <summary><span data-ttu-id="ce515-2149">Libera un puntero a una cadena no administrada que se ha asignado con el método <see cref="M:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode(System.Security.SecureString)" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-2149">Frees an unmanaged string pointer that was allocated using the <see cref="M:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode(System.Security.SecureString)" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-2150">El <xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemUnicode%2A> método ceros en primer lugar y, a continuación, libera memoria no administrada que se asignó usando el <xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A> método.</span><span class="sxs-lookup"><span data-stu-id="ce515-2150">The <xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemUnicode%2A> method first zeros out and then frees unmanaged memory that was allocated using the <xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-2151">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-2151">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-2152">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-2152">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="ZeroFreeCoTaskMemUTF8">
      <MemberSignature Language="C#" Value="public static void ZeroFreeCoTaskMemUTF8 (IntPtr s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ZeroFreeCoTaskMemUTF8(native int s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemUTF8(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ZeroFreeCoTaskMemUTF8 (s As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ZeroFreeCoTaskMemUTF8(IntPtr s);" />
      <MemberSignature Language="F#" Value="static member ZeroFreeCoTaskMemUTF8 : nativeint -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemUTF8 s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.1">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ZeroFreeGlobalAllocAnsi">
      <MemberSignature Language="C#" Value="public static void ZeroFreeGlobalAllocAnsi (IntPtr s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ZeroFreeGlobalAllocAnsi(native int s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocAnsi(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ZeroFreeGlobalAllocAnsi (s As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ZeroFreeGlobalAllocAnsi(IntPtr s);" />
      <MemberSignature Language="F#" Value="static member ZeroFreeGlobalAllocAnsi : nativeint -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocAnsi s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="ce515-2153">La dirección de la cadena no administrada que se va a liberar.</span><span class="sxs-lookup"><span data-stu-id="ce515-2153">The address of the unmanaged string to free.</span></span></param>
        <summary><span data-ttu-id="ce515-2154">Libera un puntero a una cadena no administrada que se ha asignado con el método <see cref="M:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi(System.Security.SecureString)" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-2154">Frees an unmanaged string pointer that was allocated using the <see cref="M:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi(System.Security.SecureString)" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-2155">El <xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocAnsi%2A> método ceros en primer lugar y, a continuación, libera memoria no administrada que se asignó usando el <xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi%2A> método.</span><span class="sxs-lookup"><span data-stu-id="ce515-2155">The <xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocAnsi%2A> method first zeros out and then frees unmanaged memory that was allocated using the <xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ce515-2156">En el ejemplo siguiente se usa el <xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi%2A> método para calcular las referencias y descifrar el contenido de un <xref:System.Security.SecureString> objeto en un bloque de memoria no administrada.</span><span class="sxs-lookup"><span data-stu-id="ce515-2156">The following example uses the <xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi%2A> method to marshal and decrypt the contents of a <xref:System.Security.SecureString> object to a block of unmanaged memory.</span></span> <span data-ttu-id="ce515-2157">A continuación, usa el <xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocAnsi%2A> método a cero y desechar el bloque no administrado.</span><span class="sxs-lookup"><span data-stu-id="ce515-2157">It then uses the <xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocAnsi%2A> method to zero out and dispose the unmanaged block.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.SecureStringToHGlobalAnsi#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.SecureStringToHGlobalAnsi/CS/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.SecureStringToHGlobalAnsi#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.SecureStringToHGlobalAnsi/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-2158">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-2158">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-2159">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-2159">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="ZeroFreeGlobalAllocUnicode">
      <MemberSignature Language="C#" Value="public static void ZeroFreeGlobalAllocUnicode (IntPtr s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ZeroFreeGlobalAllocUnicode(native int s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocUnicode(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ZeroFreeGlobalAllocUnicode (s As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ZeroFreeGlobalAllocUnicode(IntPtr s);" />
      <MemberSignature Language="F#" Value="static member ZeroFreeGlobalAllocUnicode : nativeint -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocUnicode s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="ce515-2160">La dirección de la cadena no administrada que se va a liberar.</span><span class="sxs-lookup"><span data-stu-id="ce515-2160">The address of the unmanaged string to free.</span></span></param>
        <summary><span data-ttu-id="ce515-2161">Libera un puntero a una cadena no administrada que se ha asignado con el método <see cref="M:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocUnicode(System.Security.SecureString)" />.</span><span class="sxs-lookup"><span data-stu-id="ce515-2161">Frees an unmanaged string pointer that was allocated using the <see cref="M:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocUnicode(System.Security.SecureString)" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce515-2162">El <xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocUnicode%2A> método ceros en primer lugar y, a continuación, libera memoria no administrada que se asignó usando el <xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocUnicode%2A> método.</span><span class="sxs-lookup"><span data-stu-id="ce515-2162">The <xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocUnicode%2A> method first zeros out and then frees unmanaged memory that was allocated using the <xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocUnicode%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ce515-2163">En el ejemplo siguiente se muestra cómo usar el <xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocUnicode%2A> método con el no administrado `LogonUser` función para realizar la suplantación con la <xref:System.Security.SecureString> clase.</span><span class="sxs-lookup"><span data-stu-id="ce515-2163">The following example demonstrates how to use the <xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocUnicode%2A> method with the unmanaged `LogonUser` function to perform impersonation with the <xref:System.Security.SecureString> class.</span></span> <span data-ttu-id="ce515-2164">El ejemplo se utiliza el <xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocUnicode%2A> método a cero y liberar la referencia de cadena no administrada.</span><span class="sxs-lookup"><span data-stu-id="ce515-2164">The example then uses the <xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocUnicode%2A> method to zero out and free the unmanaged string reference.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.SecureStringToHGlobalUni#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.SecureStringToHGlobalUni/CS/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.SecureStringToHGlobalUni#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.SecureStringToHGlobalUni/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ce515-2165">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ce515-2165">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ce515-2166">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ce515-2166">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
  </Members>
</Type>
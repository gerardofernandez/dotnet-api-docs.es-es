<Type Name="OutAttribute" FullName="System.Runtime.InteropServices.OutAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="500aea7f68ac38dc2c070a2da68b3d4fdd46dc58" /><Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="11/20/2018" /><Meta Name="ms.locfileid" Value="52237588" /></Metadata><TypeSignature Language="C#" Value="public sealed class OutAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OutAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.OutAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OutAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class OutAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type OutAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Parameter, Inherited=false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="bab0b-101">Indica que las referencias de los datos se deben calcular desde el destinatario de la llamada al llamador.</span><span class="sxs-lookup"><span data-stu-id="bab0b-101">Indicates that data should be marshaled from callee back to caller.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bab0b-102">Este atributo se puede aplicar a parámetros.</span><span class="sxs-lookup"><span data-stu-id="bab0b-102">You can apply this attribute to parameters.</span></span>  
  
 <span data-ttu-id="bab0b-103">El <xref:System.Runtime.InteropServices.OutAttribute> es opcional.</span><span class="sxs-lookup"><span data-stu-id="bab0b-103">The <xref:System.Runtime.InteropServices.OutAttribute> is optional.</span></span> <span data-ttu-id="bab0b-104">El atributo es compatible con la interoperabilidad COM y solo la invocación de plataforma.</span><span class="sxs-lookup"><span data-stu-id="bab0b-104">The attribute is supported for COM interop and platform invoke only.</span></span> <span data-ttu-id="bab0b-105">En ausencia de una configuración explícita, el serializador de interoperabilidad supone que las reglas basan en el parámetro de tipo, si el parámetro se pasa por referencia o por valor y si el tipo es bits/bytes o espacio.</span><span class="sxs-lookup"><span data-stu-id="bab0b-105">In the absence of explicit settings, the interop marshaler assumes rules based on the parameter type, whether the parameter is passed by reference or by value, and whether the type is blittable or non-blittable.</span></span> <span data-ttu-id="bab0b-106">Por ejemplo, el <xref:System.Text.StringBuilder> clase siempre se considera como In/Out y una matriz de cadenas que se pasan por valor en.</span><span class="sxs-lookup"><span data-stu-id="bab0b-106">For example, the <xref:System.Text.StringBuilder> class is always assumed to be In/Out and an array of strings passed by value is assumed to be In.</span></span>  
  
 <span data-ttu-id="bab0b-107">Comportamiento solo hacia fuera nunca es el valor predeterminado es el cálculo de referencias para los parámetros.</span><span class="sxs-lookup"><span data-stu-id="bab0b-107">Out-only behavior is never a default marshaling behavior for parameters.</span></span> <span data-ttu-id="bab0b-108">Puede aplicar el <xref:System.Runtime.InteropServices.OutAttribute> a tipos de referencia y valor pasados por referencia para cambiar In/Out comportamiento al comportamiento solo hacia fuera, que es equivalente a usar el `out` palabra clave en C#.</span><span class="sxs-lookup"><span data-stu-id="bab0b-108">You can apply the <xref:System.Runtime.InteropServices.OutAttribute> to value and reference types passed by reference to change In/Out behavior to Out-only behavior, which is equivalent to using the `out` keyword in C#.</span></span> <span data-ttu-id="bab0b-109">Por ejemplo, se pueden cambiar las matrices que se pasan por valor, se calculan las referencias como parámetros solo en de forma predeterminada, solo hacia fuera.</span><span class="sxs-lookup"><span data-stu-id="bab0b-109">For example, arrays passed by value, marshaled as In-only parameters by default, can be changed to Out-only.</span></span> <span data-ttu-id="bab0b-110">Sin embargo, el comportamiento no siempre proporciona la semántica esperada cuando los tipos incluyen elementos all-bits/bytes o porque el serializador de interoperabilidad utiliza la asignación de campos.</span><span class="sxs-lookup"><span data-stu-id="bab0b-110">However, the behavior does not always provide expected semantics when the types include all-blittable elements or fields because the interop marshaler uses pinning.</span></span> <span data-ttu-id="bab0b-111">Si no desea saber acerca de cómo pasar datos en el destinatario, solo hacia fuera el cálculo de referencias puede proporcionar un mejor rendimiento para los tipos del espacio.</span><span class="sxs-lookup"><span data-stu-id="bab0b-111">If you do not care about passing data into the callee, Out-only marshaling can provide better performance for non-blittable types.</span></span>  
  
 <span data-ttu-id="bab0b-112">Combinar el <xref:System.Runtime.InteropServices.InAttribute> y <xref:System.Runtime.InteropServices.OutAttribute> es especialmente útil cuando se aplica a las matrices y con formato, los tipos del espacio.</span><span class="sxs-lookup"><span data-stu-id="bab0b-112">Combining the <xref:System.Runtime.InteropServices.InAttribute> and <xref:System.Runtime.InteropServices.OutAttribute> is particularly useful when applied to arrays and formatted, non-blittable types.</span></span> <span data-ttu-id="bab0b-113">Los llamadores verán los cambios que realiza un destinatario a estos tipos sólo cuando se aplican ambos atributos.</span><span class="sxs-lookup"><span data-stu-id="bab0b-113">Callers see the changes a callee makes to these types only when you apply both attributes.</span></span> <span data-ttu-id="bab0b-114">Puesto que estos tipos requieren copiar durante la serialización, puede usar <xref:System.Runtime.InteropServices.InAttribute> y <xref:System.Runtime.InteropServices.OutAttribute> para reducir el número de copias innecesaria.</span><span class="sxs-lookup"><span data-stu-id="bab0b-114">Since these types require copying during marshaling, you can use <xref:System.Runtime.InteropServices.InAttribute> and <xref:System.Runtime.InteropServices.OutAttribute> to reduce unnecessary copies.</span></span>  
  
 <span data-ttu-id="bab0b-115">Para obtener más información sobre el efecto de <xref:System.Runtime.InteropServices.OutAttribute> en el comportamiento de serialización, vea [atributos direccionales](https://msdn.microsoft.com/library/241ac5b5-928e-4969-8f58-1dbc048f9ea2).</span><span class="sxs-lookup"><span data-stu-id="bab0b-115">For more information on the effect of <xref:System.Runtime.InteropServices.OutAttribute> on marshaling behavior, see [Directional Attributes](https://msdn.microsoft.com/library/241ac5b5-928e-4969-8f58-1dbc048f9ea2).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bab0b-116">El ejemplo siguiente muestra cómo aplicar el <xref:System.Runtime.InteropServices.InAttribute> y <xref:System.Runtime.InteropServices.OutAttribute> a una plataforma de prototipo que se pasa una matriz como parámetro de invocación.</span><span class="sxs-lookup"><span data-stu-id="bab0b-116">The following example shows how to apply the <xref:System.Runtime.InteropServices.InAttribute> and <xref:System.Runtime.InteropServices.OutAttribute> to a platform invoke prototype that passes an array as a parameter.</span></span> <span data-ttu-id="bab0b-117">La combinación de atributos direccionales permite al llamador ver los cambios realizados por el destinatario.</span><span class="sxs-lookup"><span data-stu-id="bab0b-117">The combination of directional attributes allows the caller to see the changes made by the callee.</span></span>  
  
 [!code-cpp[Interop InOutParameters#1](~/samples/snippets/cpp/VS_Snippets_CLR/Interop InOutParameters/CPP/inout.cpp#1)]
 [!code-csharp[Interop InOutParameters#1](~/samples/snippets/csharp/VS_Snippets_CLR/Interop InOutParameters/CS/inout.cs#1)]
 [!code-vb[Interop InOutParameters#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Interop InOutParameters/VB/inout.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Runtime.InteropServices.InAttribute" />
    <altmember cref="T:System.Text.StringBuilder" />
    <related type="Article" href="~/docs/framework/interop/blittable-and-non-blittable-types.md"><span data-ttu-id="bab0b-118">Tipos que pueden o que no pueden transferirse en bloque de bits</span><span class="sxs-lookup"><span data-stu-id="bab0b-118">Blittable and Non-Blittable Types</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OutAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.OutAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OutAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bab0b-119">Inicializa una nueva instancia de la clase <see cref="T:System.Runtime.InteropServices.OutAttribute" />.</span><span class="sxs-lookup"><span data-stu-id="bab0b-119">Initializes a new instance of the <see cref="T:System.Runtime.InteropServices.OutAttribute" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
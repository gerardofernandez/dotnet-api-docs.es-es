<Type Name="SafeBuffer" FullName="System.Runtime.InteropServices.SafeBuffer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5bb50b9c8213c49e092d14586ac6ad5b1b4ca92b" /><Meta Name="ms.sourcegitcommit" Value="8e213bb5e6801f6e29861ba72664978ad00e34fa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="02/18/2019" /><Meta Name="ms.locfileid" Value="56356384" /></Metadata><TypeSignature Language="C#" Value="public abstract class SafeBuffer : Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SafeBuffer extends Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.SafeBuffer" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SafeBuffer&#xA;Inherits SafeHandleZeroOrMinusOneIsInvalid" />
  <TypeSignature Language="C++ CLI" Value="public ref class SafeBuffer abstract : Microsoft::Win32::SafeHandles::SafeHandleZeroOrMinusOneIsInvalid" />
  <TypeSignature Language="F#" Value="type SafeBuffer = class&#xA;    inherit SafeHandleZeroOrMinusOneIsInvalid&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.InteropServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Runtime.InteropServices.SafeHandle</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;dotnet-uwp-10.0">
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netstandard-1.2">
      <AttributeName>System.Obsolete("SafeBuffer may be unavailable in future releases.")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netstandard-1.2">
      <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="81bcc-101">Proporciona un búfer de memoria controlado que se puede usar para lectura y escritura.</span><span class="sxs-lookup"><span data-stu-id="81bcc-101">Provides a controlled memory buffer that can be used for reading and writing.</span></span> <span data-ttu-id="81bcc-102">Los intentos de obtener acceso a memoria fuera del búfer controlado provocan excepciones (agotamientos y saturaciones).</span><span class="sxs-lookup"><span data-stu-id="81bcc-102">Attempts to access memory outside the controlled buffer (underruns and overruns) raise exceptions.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81bcc-103">Debe llamar a la <xref:System.Runtime.InteropServices.SafeBuffer.Initialize%2A?displayProperty=nameWithType> método antes de usar cualquier instancia de <xref:System.Runtime.InteropServices.SafeBuffer>.</span><span class="sxs-lookup"><span data-stu-id="81bcc-103">You must call the <xref:System.Runtime.InteropServices.SafeBuffer.Initialize%2A?displayProperty=nameWithType> method before you use any instance of <xref:System.Runtime.InteropServices.SafeBuffer>.</span></span> <span data-ttu-id="81bcc-104">Para evitar las carreras al almacenar una instancia de un <xref:System.Runtime.InteropServices.SafeBuffer> de objeto en una variable estática, debe usar uno de los enfoques siguientes:</span><span class="sxs-lookup"><span data-stu-id="81bcc-104">To avoid races when you store an instance of a <xref:System.Runtime.InteropServices.SafeBuffer> object in a static variable, you should use one of the following approaches:</span></span>  
  
-   <span data-ttu-id="81bcc-105">Crear un bloqueo al publicar el <xref:System.Runtime.InteropServices.SafeBuffer>.</span><span class="sxs-lookup"><span data-stu-id="81bcc-105">Create a lock when publishing the <xref:System.Runtime.InteropServices.SafeBuffer>.</span></span>  
  
-   <span data-ttu-id="81bcc-106">Creación de una inicialización de variable local el <xref:System.Runtime.InteropServices.SafeBuffer>y, a continuación, asigne el <xref:System.Runtime.InteropServices.SafeBuffer> a la variable estática, por ejemplo, utilizando el <xref:System.Threading.Interlocked.CompareExchange%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="81bcc-106">Create a local variable, initialize the <xref:System.Runtime.InteropServices.SafeBuffer>, and then assign the <xref:System.Runtime.InteropServices.SafeBuffer> to the static variable, for example, by using the <xref:System.Threading.Interlocked.CompareExchange%2A?displayProperty=nameWithType> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="81bcc-107">Implícitamente se bloquean las asignaciones en un constructor de clase estática.</span><span class="sxs-lookup"><span data-stu-id="81bcc-107">Assignments in a static class constructor are implicitly locked.</span></span>  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="81bcc-108">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="81bcc-108">requires full trust for the immediate caller.</span></span> <span data-ttu-id="81bcc-109">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="81bcc-109">This member cannot be used by partially trusted or transparent code.</span></span></permission>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SafeBuffer (bool ownsHandle);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(bool ownsHandle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.SafeBuffer.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (ownsHandle As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SafeBuffer(bool ownsHandle);" />
      <MemberSignature Language="F#" Value="new System.Runtime.InteropServices.SafeBuffer : bool -&gt; System.Runtime.InteropServices.SafeBuffer" Usage="new System.Runtime.InteropServices.SafeBuffer ownsHandle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="ownsHandle" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="ownsHandle"><span data-ttu-id="81bcc-110">Se establece en <see langword="true" /> para liberar de forma confiable el identificador durante la fase de finalización; se establece en <see langword="false" /> para impedir que se libere de forma confiable (no se recomienda).</span><span class="sxs-lookup"><span data-stu-id="81bcc-110"><see langword="true" /> to reliably release the handle during the finalization phase; <see langword="false" /> to prevent reliable release (not recommended).</span></span></param>
        <summary><span data-ttu-id="81bcc-111">Crea una nueva instancia de la clase <see cref="T:System.Runtime.InteropServices.SafeBuffer" /> y especifica si el identificador del búfer se va a liberar de forma segura.</span><span class="sxs-lookup"><span data-stu-id="81bcc-111">Creates a new instance of the <see cref="T:System.Runtime.InteropServices.SafeBuffer" /> class, and specifies whether the buffer handle is to be reliably released.</span></span></summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="81bcc-112">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="81bcc-112">requires full trust for the immediate caller.</span></span> <span data-ttu-id="81bcc-113">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="81bcc-113">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="AcquirePointer">
      <MemberSignature Language="C#" Value="public void AcquirePointer (ref byte* pointer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AcquirePointer(unsigned int8*&amp; pointer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.SafeBuffer.AcquirePointer(System.Byte*@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AcquirePointer(System::Byte* % pointer);" />
      <MemberSignature Language="F#" Value="member this.AcquirePointer :  -&gt; unit" Usage="safeBuffer.AcquirePointer pointer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pointer" Type="System.Byte*" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="pointer"><span data-ttu-id="81bcc-114">Puntero de byte, pasado por referencia, para recibir el puntero desde dentro del objeto <see cref="T:System.Runtime.InteropServices.SafeBuffer" />.</span><span class="sxs-lookup"><span data-stu-id="81bcc-114">A byte pointer, passed by reference, to receive the pointer from within the <see cref="T:System.Runtime.InteropServices.SafeBuffer" /> object.</span></span> <span data-ttu-id="81bcc-115">Debe establecer este puntero en <see langword="null" /> antes de llamar a este método.</span><span class="sxs-lookup"><span data-stu-id="81bcc-115">You must set this pointer to <see langword="null" /> before you call this method.</span></span></param>
        <summary><span data-ttu-id="81bcc-116">Obtiene un puntero de un objeto <see cref="T:System.Runtime.InteropServices.SafeBuffer" /> para un bloque de memoria.</span><span class="sxs-lookup"><span data-stu-id="81bcc-116">Obtains a pointer from a <see cref="T:System.Runtime.InteropServices.SafeBuffer" /> object for a block of memory.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81bcc-117">Cuando <xref:System.Runtime.InteropServices.SafeBuffer.AcquirePointer%2A> devuelve, debe realizar la comprobación, compruebe que la `pointer` parámetro es `null`.</span><span class="sxs-lookup"><span data-stu-id="81bcc-117">When <xref:System.Runtime.InteropServices.SafeBuffer.AcquirePointer%2A> returns, you should perform bounds checking by verifying that the `pointer` parameter is `null`.</span></span> <span data-ttu-id="81bcc-118">Si no es `null`, debe llamar a la <xref:System.Runtime.InteropServices.SafeBuffer.ReleasePointer%2A?displayProperty=nameWithType> método en una región de ejecución restringida (CER).</span><span class="sxs-lookup"><span data-stu-id="81bcc-118">If it is not `null`, you must call the <xref:System.Runtime.InteropServices.SafeBuffer.ReleasePointer%2A?displayProperty=nameWithType> method in a constrained execution region (CER).</span></span>  
  
 <span data-ttu-id="81bcc-119"><xref:System.Runtime.InteropServices.SafeBuffer.AcquirePointer%2A> las llamadas del <xref:System.Runtime.InteropServices.SafeHandle.DangerousAddRef%2A?displayProperty=nameWithType> método y expone el puntero.</span><span class="sxs-lookup"><span data-stu-id="81bcc-119"><xref:System.Runtime.InteropServices.SafeBuffer.AcquirePointer%2A> calls the <xref:System.Runtime.InteropServices.SafeHandle.DangerousAddRef%2A?displayProperty=nameWithType> method and exposes the pointer.</span></span> <span data-ttu-id="81bcc-120">A diferencia de la <xref:System.Runtime.InteropServices.SafeBuffer.Read%2A> método, no cambia la posición actual del puntero.</span><span class="sxs-lookup"><span data-stu-id="81bcc-120">Unlike the <xref:System.Runtime.InteropServices.SafeBuffer.Read%2A> method, it does not change the current position of the pointer.</span></span>  
  
 <span data-ttu-id="81bcc-121">El siguiente exampledemonstrates cómo usar el <xref:System.Runtime.InteropServices.SafeBuffer.AcquirePointer%2A> método:</span><span class="sxs-lookup"><span data-stu-id="81bcc-121">The following exampledemonstrates how to use the <xref:System.Runtime.InteropServices.SafeBuffer.AcquirePointer%2A> method:</span></span>  
  
```  
byte* pointer = null;  
RuntimeHelpers.PrepareConstrainedRegions();  
try {  
    MySafeBuffer.AcquirePointer(ref pointer);  
    // Use pointer here, with your own bounds checking.  
    }  
finally {  
    if (pointer != null)  
        MySafeBuffer.ReleasePointer();  
    }  
```  
  
 <span data-ttu-id="81bcc-122">Si convierte `pointer` (que es un puntero a un byte) como un puntero a un tipo diferente (T \*), puede tener problemas de alineación del puntero.</span><span class="sxs-lookup"><span data-stu-id="81bcc-122">If you cast `pointer` (which is a pointer to a byte) as a pointer to a different type (T\*), you may have pointer alignment issues.</span></span>  
  
 <span data-ttu-id="81bcc-123">Debe asumir la responsabilidad de comprobar con este puntero todos los límites.</span><span class="sxs-lookup"><span data-stu-id="81bcc-123">You must take responsibility for all bounds checking with this pointer.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="81bcc-124">No se ha llamado al método <see cref="Overload:System.Runtime.InteropServices.SafeBuffer.Initialize" />.</span><span class="sxs-lookup"><span data-stu-id="81bcc-124">The <see cref="Overload:System.Runtime.InteropServices.SafeBuffer.Initialize" /> method has not been called.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ByteLength">
      <MemberSignature Language="C#" Value="public ulong ByteLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int64 ByteLength" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices.SafeBuffer.ByteLength" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ByteLength As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::UInt64 ByteLength { System::UInt64 get(); };" />
      <MemberSignature Language="F#" Value="member this.ByteLength : uint64" Usage="System.Runtime.InteropServices.SafeBuffer.ByteLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="81bcc-125">Obtiene el tamaño del búfer, en bytes.</span><span class="sxs-lookup"><span data-stu-id="81bcc-125">Gets the size of the buffer, in bytes.</span></span></summary>
        <value><span data-ttu-id="81bcc-126">Número de bytes del búfer de memoria.</span><span class="sxs-lookup"><span data-stu-id="81bcc-126">The number of bytes in the memory buffer.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="81bcc-127">No se ha llamado al método <see cref="Overload:System.Runtime.InteropServices.SafeBuffer.Initialize" />.</span><span class="sxs-lookup"><span data-stu-id="81bcc-127">The <see cref="Overload:System.Runtime.InteropServices.SafeBuffer.Initialize" /> method has not been called.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Initialize">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="81bcc-128">Especifica el tamaño del búfer de memoria que se va a asignar.</span><span class="sxs-lookup"><span data-stu-id="81bcc-128">Specifies the size of the memory buffer to allocate.</span></span> <span data-ttu-id="81bcc-129">Debe llamar a este método antes de usar la instancia de <see cref="T:System.Runtime.InteropServices.SafeBuffer" />.</span><span class="sxs-lookup"><span data-stu-id="81bcc-129">You must call this method before you use the <see cref="T:System.Runtime.InteropServices.SafeBuffer" /> instance.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public void Initialize (ulong numBytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Initialize(unsigned int64 numBytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.SafeBuffer.Initialize(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Initialize (numBytes As ULong)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Initialize(System::UInt64 numBytes);" />
      <MemberSignature Language="F#" Value="member this.Initialize : uint64 -&gt; unit" Usage="safeBuffer.Initialize numBytes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="numBytes" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="numBytes"><span data-ttu-id="81bcc-130">Número de bytes del búfer.</span><span class="sxs-lookup"><span data-stu-id="81bcc-130">The number of bytes in the buffer.</span></span></param>
        <summary><span data-ttu-id="81bcc-131">Define el tamaño de asignación del área de memoria en bytes.</span><span class="sxs-lookup"><span data-stu-id="81bcc-131">Defines the allocation size of the memory region in bytes.</span></span> <span data-ttu-id="81bcc-132">Debe llamar a este método antes de usar la instancia de <see cref="T:System.Runtime.InteropServices.SafeBuffer" />.</span><span class="sxs-lookup"><span data-stu-id="81bcc-132">You must call this method before you use the <see cref="T:System.Runtime.InteropServices.SafeBuffer" /> instance.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="81bcc-133"><paramref name="numBytes" /> es menor que cero.</span><span class="sxs-lookup"><span data-stu-id="81bcc-133"><paramref name="numBytes" /> is less than zero.</span></span>  
  
<span data-ttu-id="81bcc-134">O bien</span><span class="sxs-lookup"><span data-stu-id="81bcc-134">-or-</span></span> 
 <span data-ttu-id="81bcc-135"><paramref name="numBytes" /> es mayor que el espacio de direcciones disponible.</span><span class="sxs-lookup"><span data-stu-id="81bcc-135"><paramref name="numBytes" /> is greater than the available address space.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public void Initialize (uint numElements, uint sizeOfEachElement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Initialize(unsigned int32 numElements, unsigned int32 sizeOfEachElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.SafeBuffer.Initialize(System.UInt32,System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Initialize (numElements As UInteger, sizeOfEachElement As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Initialize(System::UInt32 numElements, System::UInt32 sizeOfEachElement);" />
      <MemberSignature Language="F#" Value="member this.Initialize : uint32 * uint32 -&gt; unit" Usage="safeBuffer.Initialize (numElements, sizeOfEachElement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="numElements" Type="System.UInt32" />
        <Parameter Name="sizeOfEachElement" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="numElements"><span data-ttu-id="81bcc-136">Número de elementos que hay en el búfer.</span><span class="sxs-lookup"><span data-stu-id="81bcc-136">The number of elements in the buffer.</span></span></param>
        <param name="sizeOfEachElement"><span data-ttu-id="81bcc-137">Tamaño de cada elemento del búfer.</span><span class="sxs-lookup"><span data-stu-id="81bcc-137">The size of each element in the buffer.</span></span></param>
        <summary><span data-ttu-id="81bcc-138">Especifica el tamaño de asignación del búfer de memoria utilizando el número especificado de elementos y tamaño de elemento.</span><span class="sxs-lookup"><span data-stu-id="81bcc-138">Specifies the allocation size of the memory buffer by using the specified number of elements and element size.</span></span> <span data-ttu-id="81bcc-139">Debe llamar a este método antes de usar la instancia de <see cref="T:System.Runtime.InteropServices.SafeBuffer" />.</span><span class="sxs-lookup"><span data-stu-id="81bcc-139">You must call this method before you use the <see cref="T:System.Runtime.InteropServices.SafeBuffer" /> instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81bcc-140">Este método define el tamaño necesario de la región de memoria como el número de elementos de una matriz multiplicado por el tamaño de cada elemento.</span><span class="sxs-lookup"><span data-stu-id="81bcc-140">This method defines the required size of the memory region as the number of elements in an array multiplied by the size of each element.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="81bcc-141"><paramref name="numElements" /> es menor que cero.</span><span class="sxs-lookup"><span data-stu-id="81bcc-141"><paramref name="numElements" /> is less than zero.</span></span>  
  
<span data-ttu-id="81bcc-142">O bien</span><span class="sxs-lookup"><span data-stu-id="81bcc-142">-or-</span></span> 
 <span data-ttu-id="81bcc-143"><paramref name="sizeOfEachElement" /> es menor que cero.</span><span class="sxs-lookup"><span data-stu-id="81bcc-143"><paramref name="sizeOfEachElement" /> is less than zero.</span></span>  
  
<span data-ttu-id="81bcc-144">O bien</span><span class="sxs-lookup"><span data-stu-id="81bcc-144">-or-</span></span> 
 <span data-ttu-id="81bcc-145"><paramref name="numElements" /> multiplicado por <paramref name="sizeOfEachElement" /> es mayor que el espacio de direcciones disponible.</span><span class="sxs-lookup"><span data-stu-id="81bcc-145"><paramref name="numElements" /> multiplied by <paramref name="sizeOfEachElement" /> is greater than the available address space.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Initialize&lt;T&gt;">
      <MemberSignature Language="C#" Value="public void Initialize&lt;T&gt; (uint numElements) where T : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Initialize&lt;struct .ctor (class System.ValueType) T&gt;(unsigned int32 numElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.SafeBuffer.Initialize``1(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Initialize(Of T As Structure) (numElements As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class void Initialize(System::UInt32 numElements);" />
      <MemberSignature Language="F#" Value="member this.Initialize : uint32 -&gt; unit (requires 'T : struct)" Usage="safeBuffer.Initialize numElements" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="numElements" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="81bcc-146">Tipo de valor para el que se va a asignar memoria.</span><span class="sxs-lookup"><span data-stu-id="81bcc-146">The value type to allocate memory for.</span></span></typeparam>
        <param name="numElements"><span data-ttu-id="81bcc-147">Número de elementos del tipo de valor para el que se va a asignar memoria.</span><span class="sxs-lookup"><span data-stu-id="81bcc-147">The number of elements of the value type to allocate memory for.</span></span></param>
        <summary><span data-ttu-id="81bcc-148">Define el tamaño de asignación del área de memoria especificando el número de tipos de valor.</span><span class="sxs-lookup"><span data-stu-id="81bcc-148">Defines the allocation size of the memory region by specifying the number of value types.</span></span> <span data-ttu-id="81bcc-149">Debe llamar a este método antes de usar la instancia de <see cref="T:System.Runtime.InteropServices.SafeBuffer" />.</span><span class="sxs-lookup"><span data-stu-id="81bcc-149">You must call this method before you use the <see cref="T:System.Runtime.InteropServices.SafeBuffer" /> instance.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="81bcc-150"><paramref name="numElements" /> es menor que cero.</span><span class="sxs-lookup"><span data-stu-id="81bcc-150"><paramref name="numElements" /> is less than zero.</span></span>  
  
<span data-ttu-id="81bcc-151">O bien</span><span class="sxs-lookup"><span data-stu-id="81bcc-151">-or-</span></span> 
 <span data-ttu-id="81bcc-152"><paramref name="numElements" /> multiplicado por el tamaño de cada elemento es mayor que el espacio de direcciones disponible.</span><span class="sxs-lookup"><span data-stu-id="81bcc-152"><paramref name="numElements" /> multiplied by the size of each element is greater than the available address space.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsInvalid">
      <MemberSignature Language="C#" Value="public override bool IsInvalid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInvalid" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices.SafeBuffer.IsInvalid" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsInvalid As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsInvalid { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsInvalid : bool" Usage="System.Runtime.InteropServices.SafeBuffer.IsInvalid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Read&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T Read&lt;T&gt; (ulong byteOffset) where T : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T Read&lt;struct .ctor (class System.ValueType) T&gt;(unsigned int64 byteOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.SafeBuffer.Read``1(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Function Read(Of T As Structure) (byteOffset As ULong) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class T Read(System::UInt64 byteOffset);" />
      <MemberSignature Language="F#" Value="member this.Read : uint64 -&gt; 'T (requires 'T : struct)" Usage="safeBuffer.Read byteOffset" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="byteOffset" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="81bcc-153">Tipo de valor que se va a leer.</span><span class="sxs-lookup"><span data-stu-id="81bcc-153">The value type to read.</span></span></typeparam>
        <param name="byteOffset"><span data-ttu-id="81bcc-154">Ubicación desde la que se va a leer el tipo de valor.</span><span class="sxs-lookup"><span data-stu-id="81bcc-154">The location from which to read the value type.</span></span> <span data-ttu-id="81bcc-155">Quizás tenga que tener en cuenta los problemas de alineación.</span><span class="sxs-lookup"><span data-stu-id="81bcc-155">You may have to consider alignment issues.</span></span></param>
        <summary><span data-ttu-id="81bcc-156">Lee un tipo de valor de la memoria en el desplazamiento especificado.</span><span class="sxs-lookup"><span data-stu-id="81bcc-156">Reads a value type from memory at the specified offset.</span></span></summary>
        <returns><span data-ttu-id="81bcc-157">Tipo de valor leído de la memoria.</span><span class="sxs-lookup"><span data-stu-id="81bcc-157">The value type that was read from memory.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="81bcc-158">No se ha llamado al método <see cref="Overload:System.Runtime.InteropServices.SafeBuffer.Initialize" />.</span><span class="sxs-lookup"><span data-stu-id="81bcc-158">The <see cref="Overload:System.Runtime.InteropServices.SafeBuffer.Initialize" /> method has not been called.</span></span></exception>
        <altmember cref="M:System.Runtime.InteropServices.SafeBuffer.Write``1(System.UInt64,``0)" />
      </Docs>
    </Member>
    <Member MemberName="ReadArray&lt;T&gt;">
      <MemberSignature Language="C#" Value="public void ReadArray&lt;T&gt; (ulong byteOffset, T[] array, int index, int count) where T : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReadArray&lt;struct .ctor (class System.ValueType) T&gt;(unsigned int64 byteOffset, !!T[] array, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.SafeBuffer.ReadArray``1(System.UInt64,``0[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReadArray(Of T As Structure) (byteOffset As ULong, array As T(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class void ReadArray(System::UInt64 byteOffset, cli::array &lt;T&gt; ^ array, int index, int count);" />
      <MemberSignature Language="F#" Value="member this.ReadArray : uint64 * 'T[] * int * int -&gt; unit (requires 'T : struct)" Usage="safeBuffer.ReadArray (byteOffset, array, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="byteOffset" Type="System.UInt64" />
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="81bcc-159">Tipo de valor que se va a leer.</span><span class="sxs-lookup"><span data-stu-id="81bcc-159">The value type to read.</span></span></typeparam>
        <param name="byteOffset"><span data-ttu-id="81bcc-160">Ubicación desde la que se va a iniciar la lectura.</span><span class="sxs-lookup"><span data-stu-id="81bcc-160">The location from which to start reading.</span></span></param>
        <param name="array"><span data-ttu-id="81bcc-161">Matriz de salida en la que se va a escribir.</span><span class="sxs-lookup"><span data-stu-id="81bcc-161">The output array to write to.</span></span></param>
        <param name="index"><span data-ttu-id="81bcc-162">Ubicación en la matriz de salida en la que se va a empezar a escribir.</span><span class="sxs-lookup"><span data-stu-id="81bcc-162">The location in the output array to begin writing to.</span></span></param>
        <param name="count"><span data-ttu-id="81bcc-163">Número de tipos de valor que se van a leer de la matriz de entrada y que se van a escribir en la matriz de salida.</span><span class="sxs-lookup"><span data-stu-id="81bcc-163">The number of value types to read from the input array and to write to the output array.</span></span></param>
        <summary><span data-ttu-id="81bcc-164">Lee el número especificado de tipos de valor de la memoria empezando en el desplazamiento y los escribe en una matriz empezando en el índice.</span><span class="sxs-lookup"><span data-stu-id="81bcc-164">Reads the specified number of value types from memory starting at the offset, and writes them into an array starting at the index.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="81bcc-165"><paramref name="index" /> es menor que cero.</span><span class="sxs-lookup"><span data-stu-id="81bcc-165"><paramref name="index" /> is less than zero.</span></span>  
  
<span data-ttu-id="81bcc-166">O bien</span><span class="sxs-lookup"><span data-stu-id="81bcc-166">-or-</span></span> 
 <span data-ttu-id="81bcc-167"><paramref name="count" /> es menor que cero.</span><span class="sxs-lookup"><span data-stu-id="81bcc-167"><paramref name="count" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="81bcc-168"><paramref name="array" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="81bcc-168"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="81bcc-169">La longitud de la matriz menos el índice es menor que <paramref name="count" />.</span><span class="sxs-lookup"><span data-stu-id="81bcc-169">The length of the array minus the index is less than <paramref name="count" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="81bcc-170">No se ha llamado al método <see cref="Overload:System.Runtime.InteropServices.SafeBuffer.Initialize" />.</span><span class="sxs-lookup"><span data-stu-id="81bcc-170">The <see cref="Overload:System.Runtime.InteropServices.SafeBuffer.Initialize" /> method has not been called.</span></span></exception>
        <altmember cref="M:System.Runtime.InteropServices.SafeBuffer.WriteArray``1(System.UInt64,``0[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReleasePointer">
      <MemberSignature Language="C#" Value="public void ReleasePointer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReleasePointer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.SafeBuffer.ReleasePointer" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReleasePointer ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReleasePointer();" />
      <MemberSignature Language="F#" Value="member this.ReleasePointer : unit -&gt; unit" Usage="safeBuffer.ReleasePointer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="81bcc-171">Libera un puntero obtenido por el método <see cref="M:System.Runtime.InteropServices.SafeBuffer.AcquirePointer(System.Byte*@)" />.</span><span class="sxs-lookup"><span data-stu-id="81bcc-171">Releases a pointer that was obtained by the <see cref="M:System.Runtime.InteropServices.SafeBuffer.AcquirePointer(System.Byte*@)" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81bcc-172">Cuando se devuelve este método, no se puede usar el puntero.</span><span class="sxs-lookup"><span data-stu-id="81bcc-172">After this method returns, the pointer cannot be used.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="81bcc-173">No se ha llamado al método <see cref="Overload:System.Runtime.InteropServices.SafeBuffer.Initialize" />.</span><span class="sxs-lookup"><span data-stu-id="81bcc-173">The <see cref="Overload:System.Runtime.InteropServices.SafeBuffer.Initialize" /> method has not been called.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Write&lt;T&gt;">
      <MemberSignature Language="C#" Value="public void Write&lt;T&gt; (ulong byteOffset, T value) where T : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write&lt;struct .ctor (class System.ValueType) T&gt;(unsigned int64 byteOffset, !!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.SafeBuffer.Write``1(System.UInt64,``0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write(Of T As Structure) (byteOffset As ULong, value As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class void Write(System::UInt64 byteOffset, T value);" />
      <MemberSignature Language="F#" Value="member this.Write : uint64 * 'T -&gt; unit (requires 'T : struct)" Usage="safeBuffer.Write (byteOffset, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="byteOffset" Type="System.UInt64" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="81bcc-174">Tipo de valor que se va a escribir.</span><span class="sxs-lookup"><span data-stu-id="81bcc-174">The value type to write.</span></span></typeparam>
        <param name="byteOffset"><span data-ttu-id="81bcc-175">Ubicación en la que se va a empezar a escribir.</span><span class="sxs-lookup"><span data-stu-id="81bcc-175">The location at which to start writing.</span></span> <span data-ttu-id="81bcc-176">Quizás tenga que tener en cuenta los problemas de alineación.</span><span class="sxs-lookup"><span data-stu-id="81bcc-176">You may have to consider alignment issues.</span></span></param>
        <param name="value"><span data-ttu-id="81bcc-177">Valor que se va a escribir.</span><span class="sxs-lookup"><span data-stu-id="81bcc-177">The value to write.</span></span></param>
        <summary><span data-ttu-id="81bcc-178">Escribe un tipo de valor en la memoria en la ubicación dada.</span><span class="sxs-lookup"><span data-stu-id="81bcc-178">Writes a value type to memory at the given location.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81bcc-179">Este método es equivalente al código siguiente:</span><span class="sxs-lookup"><span data-stu-id="81bcc-179">This method is equivalent to the following code:</span></span>  
  
```  
*(T*)(bytePtr + byteOffset) = value;  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="81bcc-180">No se ha llamado al método <see cref="Overload:System.Runtime.InteropServices.SafeBuffer.Initialize" />.</span><span class="sxs-lookup"><span data-stu-id="81bcc-180">The <see cref="Overload:System.Runtime.InteropServices.SafeBuffer.Initialize" /> method has not been called.</span></span></exception>
        <altmember cref="M:System.Runtime.InteropServices.SafeBuffer.Read``1(System.UInt64)" />
      </Docs>
    </Member>
    <Member MemberName="WriteArray&lt;T&gt;">
      <MemberSignature Language="C#" Value="public void WriteArray&lt;T&gt; (ulong byteOffset, T[] array, int index, int count) where T : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteArray&lt;struct .ctor (class System.ValueType) T&gt;(unsigned int64 byteOffset, !!T[] array, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.SafeBuffer.WriteArray``1(System.UInt64,``0[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteArray(Of T As Structure) (byteOffset As ULong, array As T(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class void WriteArray(System::UInt64 byteOffset, cli::array &lt;T&gt; ^ array, int index, int count);" />
      <MemberSignature Language="F#" Value="member this.WriteArray : uint64 * 'T[] * int * int -&gt; unit (requires 'T : struct)" Usage="safeBuffer.WriteArray (byteOffset, array, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="byteOffset" Type="System.UInt64" />
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="81bcc-181">Tipo de valor que se va a escribir.</span><span class="sxs-lookup"><span data-stu-id="81bcc-181">The value type to write.</span></span></typeparam>
        <param name="byteOffset"><span data-ttu-id="81bcc-182">Ubicación de la memoria en la que se va a escribir.</span><span class="sxs-lookup"><span data-stu-id="81bcc-182">The location in memory to write to.</span></span></param>
        <param name="array"><span data-ttu-id="81bcc-183">Matriz de entrada.</span><span class="sxs-lookup"><span data-stu-id="81bcc-183">The input array.</span></span></param>
        <param name="index"><span data-ttu-id="81bcc-184">Desplazamiento en la matriz a partir del cual se va a empezar a leer.</span><span class="sxs-lookup"><span data-stu-id="81bcc-184">The offset in the array to start reading from.</span></span></param>
        <param name="count"><span data-ttu-id="81bcc-185">Número de tipos de valor que se van a escribir.</span><span class="sxs-lookup"><span data-stu-id="81bcc-185">The number of value types to write.</span></span></param>
        <summary><span data-ttu-id="81bcc-186">Escribe el número especificado de tipos de valor en una ubicación de memoria leyendo bytes a partir de la ubicación especificada en la matriz de entrada.</span><span class="sxs-lookup"><span data-stu-id="81bcc-186">Writes the specified number of value types to a memory location by reading bytes starting from the specified location in the input array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81bcc-187">Cada elemento de la matriz de entrada se compone del tipo de valor genérico de la clase.</span><span class="sxs-lookup"><span data-stu-id="81bcc-187">Each element in the input array consists of the generic value type of the class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="81bcc-188"><paramref name="array" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="81bcc-188"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="81bcc-189"><paramref name="index" /> o <paramref name="count" /> es menor que cero.</span><span class="sxs-lookup"><span data-stu-id="81bcc-189"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="81bcc-190">La longitud de la matriz de entrada menos <paramref name="index" /> es menor que <paramref name="count" />.</span><span class="sxs-lookup"><span data-stu-id="81bcc-190">The length of the input array minus <paramref name="index" /> is less than <paramref name="count" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="81bcc-191">No se ha llamado al método <see cref="Overload:System.Runtime.InteropServices.SafeBuffer.Initialize" />.</span><span class="sxs-lookup"><span data-stu-id="81bcc-191">The <see cref="Overload:System.Runtime.InteropServices.SafeBuffer.Initialize" /> method has not been called.</span></span></exception>
        <altmember cref="M:System.Runtime.InteropServices.SafeBuffer.ReadArray``1(System.UInt64,``0[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
  </Members>
</Type>
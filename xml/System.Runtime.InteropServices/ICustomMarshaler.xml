<Type Name="ICustomMarshaler" FullName="System.Runtime.InteropServices.ICustomMarshaler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="03ef26878dc74066eb80a36c6aa1a51c27cec8e3" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58711421" /></Metadata><TypeSignature Language="C#" Value="public interface ICustomMarshaler" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ICustomMarshaler" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.ICustomMarshaler" />
  <TypeSignature Language="VB.NET" Value="Public Interface ICustomMarshaler" />
  <TypeSignature Language="C++ CLI" Value="public interface class ICustomMarshaler" />
  <TypeSignature Language="F#" Value="type ICustomMarshaler = interface" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.InteropServices</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="95d90-101">Proporciona contenedores personalizados para controlar las llamadas a métodos.</span><span class="sxs-lookup"><span data-stu-id="95d90-101">Provides custom wrappers for handling method calls.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95d90-102">Un contador de referencias proporciona un puente entre la funcionalidad de las antiguas y nuevas interfaces.</span><span class="sxs-lookup"><span data-stu-id="95d90-102">A marshaler provides a bridge between the functionality of old and new interfaces.</span></span> <span data-ttu-id="95d90-103">Cálculo de referencias personalizado proporciona las siguientes ventajas:</span><span class="sxs-lookup"><span data-stu-id="95d90-103">Custom marshaling provides the following benefits:</span></span>  
  
-   <span data-ttu-id="95d90-104">Permite que las aplicaciones cliente que se han diseñado para trabajar con una interfaz antigua y funcionar también con servidores que implementan una interfaz nueva.</span><span class="sxs-lookup"><span data-stu-id="95d90-104">It enables client applications that were designed to work with an old interface to also work with servers that implement a new interface.</span></span>  
  
-   <span data-ttu-id="95d90-105">Permite que las aplicaciones de cliente creadas para trabajar con una nueva interfaz trabajar con servidores que implementan una interfaz antigua.</span><span class="sxs-lookup"><span data-stu-id="95d90-105">It enables client applications built to work with a new interface to work with servers that implement an old interface.</span></span>  
  
 <span data-ttu-id="95d90-106">Si tiene una interfaz que presenta un comportamiento de serialización diferente o para el modelo de objetos componentes (COM) que se expone de forma diferente, puede diseñar un contador de referencias personalizado en lugar de usar al serializador de interoperabilidad.</span><span class="sxs-lookup"><span data-stu-id="95d90-106">If you have an interface that introduces different marshaling behavior or that is exposed to the Component Object Model (COM) in a different way, you can design a custom marshaler instead of using the interop marshaler.</span></span> <span data-ttu-id="95d90-107">Mediante el uso de un contador de referencias personalizado, puede minimizar la distinción entre los nuevos componentes de .NET Framework y los componentes COM existentes.</span><span class="sxs-lookup"><span data-stu-id="95d90-107">By using a custom marshaler, you can minimize the distinction between new .NET Framework components and existing COM components.</span></span>  
  
 <span data-ttu-id="95d90-108">Por ejemplo, supongamos que está desarrollando una interfaz administrada denominada `INew`.</span><span class="sxs-lookup"><span data-stu-id="95d90-108">For example, suppose that you are developing a managed interface called `INew`.</span></span> <span data-ttu-id="95d90-109">Cuando esta interfaz se expone a COM a través de un estándar contenedor COM invocable (CCW), tiene los mismos métodos que la interfaz administrada y usa las reglas de serialización integradas en el serializador de interoperabilidad.</span><span class="sxs-lookup"><span data-stu-id="95d90-109">When this interface is exposed to COM through a standard COM callable wrapper (CCW), it has the same methods as the managed interface and uses the marshaling rules built into the interop marshaler.</span></span> <span data-ttu-id="95d90-110">Ahora supongamos que llama una interfaz COM conocida `IOld` ya proporciona la misma funcionalidad que el `INew` interfaz.</span><span class="sxs-lookup"><span data-stu-id="95d90-110">Now suppose that a well-known COM interface called `IOld` already provides the same functionality as the `INew` interface.</span></span> <span data-ttu-id="95d90-111">Al diseñar un serializador personalizado, puede proporcionar una implementación no administrada de `IOld` que simplemente delega las llamadas a la implementación administrada de la `INew` interfaz.</span><span class="sxs-lookup"><span data-stu-id="95d90-111">By designing a custom marshaler, you can provide an unmanaged implementation of `IOld` that simply delegates the calls to the managed implementation of the `INew` interface.</span></span> <span data-ttu-id="95d90-112">Por lo tanto, el contador de referencias personalizado actúa como puente entre las interfaces administradas y no administradas.</span><span class="sxs-lookup"><span data-stu-id="95d90-112">Therefore, the custom marshaler acts as a bridge between the managed and unmanaged interfaces.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="95d90-113">Contadores de referencias personalizados no se invocan cuando se llama desde código administrado a código no administrado de una interfaz solo de envío.</span><span class="sxs-lookup"><span data-stu-id="95d90-113">Custom marshalers are not invoked when calling from managed code to unmanaged code on a dispatch-only interface.</span></span>  
  
## <a name="defining-the-marshaling-type"></a><span data-ttu-id="95d90-114">Definir el tipo de serialización</span><span class="sxs-lookup"><span data-stu-id="95d90-114">Defining the Marshaling Type</span></span>  
 <span data-ttu-id="95d90-115">Antes de generar un contador de referencias personalizado, debe definir las interfaces administradas y no administradas que se serializará.</span><span class="sxs-lookup"><span data-stu-id="95d90-115">Before you can build a custom marshaler, you must define the managed and unmanaged interfaces that will be marshaled.</span></span> <span data-ttu-id="95d90-116">Normalmente, estas interfaces realizan la misma función pero se exponen de forma diferente a los objetos administrados y no administrados.</span><span class="sxs-lookup"><span data-stu-id="95d90-116">These interfaces commonly perform the same function but are exposed differently to managed and unmanaged objects.</span></span>  
  
 <span data-ttu-id="95d90-117">Un compilador administrado produce una interfaz administrada de los metadatos y la interfaz resultante es similar a cualquier otra interfaz administrada.</span><span class="sxs-lookup"><span data-stu-id="95d90-117">A managed compiler produces a managed interface from metadata, and the resulting interface looks like any other managed interface.</span></span> <span data-ttu-id="95d90-118">El ejemplo siguiente muestra una interfaz típica.</span><span class="sxs-lookup"><span data-stu-id="95d90-118">The following example shows a typical interface.</span></span>  
  
 [!code-cpp[System.Runtime.InteropServices.ICustomMarshaler#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.runtime.interopservices.icustommarshaler/cpp/source.cpp#1)]
 [!code-csharp[System.Runtime.InteropServices.ICustomMarshaler#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.interopservices.icustommarshaler/cs/source.cs#1)]
 [!code-vb[System.Runtime.InteropServices.ICustomMarshaler#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.interopservices.icustommarshaler/vb/source.vb#1)]  
  
 <span data-ttu-id="95d90-119">Definir el tipo no administrado en el lenguaje de definición de interfaz (IDL) y compílelo con el compilador de lenguaje de definición de interfaz de Microsoft (MIDL).</span><span class="sxs-lookup"><span data-stu-id="95d90-119">You define the unmanaged type in Interface Definition Language (IDL) and compile it with the Microsoft Interface Definition Language (MIDL) compiler.</span></span> <span data-ttu-id="95d90-120">Definir la interfaz dentro de una instrucción de biblioteca y asignar un identificador de interfaz con el atributo de identificador único universal (UUID), como se muestra en el ejemplo siguiente.</span><span class="sxs-lookup"><span data-stu-id="95d90-120">You define the interface within a library statement and assign it an interface ID with the universal unique identifier (UUID) attribute, as the following example demonstrates.</span></span>  
  
```  
 [uuid(9B2BAADA-0705-11D3-A0CD-00C04FA35826)]  
library OldLib {  
     [uuid(9B2BAADD-0705-11D3-A0CD-00C04FA35826)]  
     interface IOld : IUnknown  
         HRESULT OldMethod();  
}  
```  
  
 <span data-ttu-id="95d90-121">El compilador MIDL genera varios archivos de salida.</span><span class="sxs-lookup"><span data-stu-id="95d90-121">The MIDL compiler produces several output files.</span></span> <span data-ttu-id="95d90-122">Si la interfaz se define en Old.idl, el archivo de salida Old_i.c define un `const` variable con el identificador de interfaz (IID) de la interfaz, como se muestra en el ejemplo siguiente.</span><span class="sxs-lookup"><span data-stu-id="95d90-122">If the interface is defined in Old.idl, the output file Old_i.c defines a `const` variable with the interface identifier (IID) of the interface, as the following example demonstrates.</span></span>  
  
```  
const IID IID_IOld = {0x9B2BAADD,0x0705,0x11D3,{0xA0,0xCD,0x00,0xC0,0x4F,0xA3,0x58,0x26}};  
```  
  
 <span data-ttu-id="95d90-123">También se genera el archivo Old.h por MIDL.</span><span class="sxs-lookup"><span data-stu-id="95d90-123">The Old.h file is also produced by MIDL.</span></span> <span data-ttu-id="95d90-124">Contiene una definición de la interfaz que puede incluirse en el código fuente de C++ de C++.</span><span class="sxs-lookup"><span data-stu-id="95d90-124">It contains a C++ definition of the interface that can be included in your C++ source code.</span></span>  
  
## <a name="implementing-the-icustommarshaler-interface"></a><span data-ttu-id="95d90-125">Implementar la interfaz ICustomMarshaler</span><span class="sxs-lookup"><span data-stu-id="95d90-125">Implementing the ICustomMarshaler Interface</span></span>  
 <span data-ttu-id="95d90-126">El contador de referencias personalizado debe implementar la <xref:System.Runtime.InteropServices.ICustomMarshaler> interfaz para proporcionar los contenedores adecuados para el tiempo de ejecución.</span><span class="sxs-lookup"><span data-stu-id="95d90-126">Your custom marshaler must implement the <xref:System.Runtime.InteropServices.ICustomMarshaler> interface to provide the appropriate wrappers to the runtime.</span></span>  
  
 <span data-ttu-id="95d90-127">El código de C# siguiente muestra la interfaz base que debe ser implementada por todos los contadores de referencias personalizados.</span><span class="sxs-lookup"><span data-stu-id="95d90-127">The following C# code displays the base interface that must be implemented by all custom marshalers.</span></span>  
  
 [!code-cpp[System.Runtime.InteropServices.ICustomMarshaler#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.runtime.interopservices.icustommarshaler/cpp/source.cpp#2)]
 [!code-csharp[System.Runtime.InteropServices.ICustomMarshaler#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.interopservices.icustommarshaler/cs/source.cs#2)]
 [!code-vb[System.Runtime.InteropServices.ICustomMarshaler#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.interopservices.icustommarshaler/vb/source.vb#2)]  
  
 <span data-ttu-id="95d90-128">El <xref:System.Runtime.InteropServices.ICustomMarshaler> interfaz incluye métodos que proporcionan compatibilidad de conversión de limpieza y la compatibilidad con información sobre los datos se van a calcular.</span><span class="sxs-lookup"><span data-stu-id="95d90-128">The <xref:System.Runtime.InteropServices.ICustomMarshaler> interface includes methods that provide conversion support, cleanup support, and information about the data to be marshaled.</span></span>  
  
|<span data-ttu-id="95d90-129">Tipo de operación</span><span class="sxs-lookup"><span data-stu-id="95d90-129">Type of operation</span></span>|<span data-ttu-id="95d90-130">Método ICustomMarshaler</span><span class="sxs-lookup"><span data-stu-id="95d90-130">ICustomMarshaler method</span></span>|<span data-ttu-id="95d90-131">Descripción</span><span class="sxs-lookup"><span data-stu-id="95d90-131">Description</span></span>|  
|-----------------------|-----------------------------|-----------------|  
|<span data-ttu-id="95d90-132">Conversión (de código nativo a código administrado)</span><span class="sxs-lookup"><span data-stu-id="95d90-132">Conversion (from native to managed code)</span></span>|<xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged%2A>|<span data-ttu-id="95d90-133">Calcula las referencias de un puntero a datos nativos en un objeto administrado.</span><span class="sxs-lookup"><span data-stu-id="95d90-133">Marshals a pointer to native data into a managed object.</span></span> <span data-ttu-id="95d90-134">Este método devuelve un contenedor RCW personalizado en tiempo de ejecución (RCW) que puede serializar la interfaz no administrada que se pasa como argumento.</span><span class="sxs-lookup"><span data-stu-id="95d90-134">This method returns a custom runtime callable wrapper (RCW) that can marshal the unmanaged interface that is passed as an argument.</span></span> <span data-ttu-id="95d90-135">El contador de referencias debe devolver una instancia del contenedor RCW personalizado para ese tipo.</span><span class="sxs-lookup"><span data-stu-id="95d90-135">The marshaler should return an instance of the custom RCW for that type.</span></span>|  
|<span data-ttu-id="95d90-136">Conversión (de código administrado a nativo)</span><span class="sxs-lookup"><span data-stu-id="95d90-136">Conversion (from managed to native code)</span></span>|<xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative%2A>|<span data-ttu-id="95d90-137">Calcula las referencias de un objeto administrado en un puntero a datos nativos.</span><span class="sxs-lookup"><span data-stu-id="95d90-137">Marshals a managed object into a pointer to native data.</span></span> <span data-ttu-id="95d90-138">Este método devuelve un personalizado contenedor COM invocable (CCW) que puede serializar la interfaz administrada que se pasa como argumento.</span><span class="sxs-lookup"><span data-stu-id="95d90-138">This method returns a custom COM callable wrapper (CCW) that can marshal the managed interface that is passed as an argument.</span></span> <span data-ttu-id="95d90-139">El contador de referencias debe devolver una instancia de contenedor CCW personalizado para ese tipo.</span><span class="sxs-lookup"><span data-stu-id="95d90-139">The marshaler should return an instance of the custom CCW for that type.</span></span>|  
|<span data-ttu-id="95d90-140">Limpieza (de código nativo)</span><span class="sxs-lookup"><span data-stu-id="95d90-140">Cleanup (of native code)</span></span>|<xref:System.Runtime.InteropServices.ICustomMarshaler.CleanUpNativeData%2A>|<span data-ttu-id="95d90-141">Habilita el contador de referencias limpiar los datos nativos (CCW) que devuelven el <xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative%2A> método.</span><span class="sxs-lookup"><span data-stu-id="95d90-141">Enables the marshaler to clean up the native data (the CCW) that is returned by the <xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative%2A> method.</span></span>|  
|<span data-ttu-id="95d90-142">Limpieza (de código administrado)</span><span class="sxs-lookup"><span data-stu-id="95d90-142">Cleanup (of managed code)</span></span>|<xref:System.Runtime.InteropServices.ICustomMarshaler.CleanUpManagedData%2A>|<span data-ttu-id="95d90-143">Habilita el contador de referencias limpiar los datos administrados (RCW) que devuelven el <xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged%2A> método.</span><span class="sxs-lookup"><span data-stu-id="95d90-143">Enables the marshaler to clean up the managed data (the RCW) that is returned by the <xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged%2A> method.</span></span>|  
|<span data-ttu-id="95d90-144">Información (sobre código nativo)</span><span class="sxs-lookup"><span data-stu-id="95d90-144">Information (about native code)</span></span>|<xref:System.Runtime.InteropServices.ICustomMarshaler.GetNativeDataSize%2A>|<span data-ttu-id="95d90-145">Devuelve el tamaño de los datos no administrados se van a calcular.</span><span class="sxs-lookup"><span data-stu-id="95d90-145">Returns the size of the unmanaged data to be marshaled.</span></span>|  
  
### <a name="conversion"></a><span data-ttu-id="95d90-146">Conversión</span><span class="sxs-lookup"><span data-stu-id="95d90-146">Conversion</span></span>  
 <xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged%2A?displayProperty=nameWithType>  
  
 <span data-ttu-id="95d90-147">Calcula las referencias de un puntero a datos nativos en un objeto administrado.</span><span class="sxs-lookup"><span data-stu-id="95d90-147">Marshals a pointer to native data into a managed object.</span></span> <span data-ttu-id="95d90-148">Este método devuelve un contenedor RCW personalizado en tiempo de ejecución (RCW) que puede serializar la interfaz no administrada que se pasa como argumento.</span><span class="sxs-lookup"><span data-stu-id="95d90-148">This method returns a custom runtime callable wrapper (RCW) that can marshal the unmanaged interface that is passed as an argument.</span></span> <span data-ttu-id="95d90-149">El contador de referencias debe devolver una instancia del contenedor RCW personalizado para ese tipo.</span><span class="sxs-lookup"><span data-stu-id="95d90-149">The marshaler should return an instance of the custom RCW for that type.</span></span>  
  
 <xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative%2A?displayProperty=nameWithType>  
  
 <span data-ttu-id="95d90-150">Calcula las referencias de un objeto administrado en un puntero a datos nativos.</span><span class="sxs-lookup"><span data-stu-id="95d90-150">Marshals a managed object into a pointer to native data.</span></span> <span data-ttu-id="95d90-151">Este método devuelve un personalizado contenedor COM invocable (CCW) que puede serializar la interfaz administrada que se pasa como argumento.</span><span class="sxs-lookup"><span data-stu-id="95d90-151">This method returns a custom COM callable wrapper (CCW) that can marshal the managed interface that is passed as an argument.</span></span> <span data-ttu-id="95d90-152">El contador de referencias debe devolver una instancia de contenedor CCW personalizado para ese tipo.</span><span class="sxs-lookup"><span data-stu-id="95d90-152">The marshaler should return an instance of the custom CCW for that type.</span></span>  
  
### <a name="cleanup"></a><span data-ttu-id="95d90-153">Limpieza</span><span class="sxs-lookup"><span data-stu-id="95d90-153">Cleanup</span></span>  
 <xref:System.Runtime.InteropServices.ICustomMarshaler.CleanUpNativeData%2A?displayProperty=nameWithType>  
  
 <span data-ttu-id="95d90-154">Habilita el contador de referencias limpiar los datos nativos (CCW) que devuelven el <xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative%2A> método.</span><span class="sxs-lookup"><span data-stu-id="95d90-154">Enables the marshaler to clean up the native data (the CCW) that is returned by the <xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative%2A> method.</span></span>  
  
 <xref:System.Runtime.InteropServices.ICustomMarshaler.CleanUpManagedData%2A?displayProperty=nameWithType>  
  
 <span data-ttu-id="95d90-155">Habilita el contador de referencias limpiar los datos administrados (RCW) que devuelven el <xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged%2A> método.</span><span class="sxs-lookup"><span data-stu-id="95d90-155">Enables the marshaler to clean up the managed data (the RCW) that is returned by the <xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged%2A> method.</span></span>  
  
### <a name="size-information"></a><span data-ttu-id="95d90-156">Información de tamaño</span><span class="sxs-lookup"><span data-stu-id="95d90-156">Size Information</span></span>  
 <xref:System.Runtime.InteropServices.ICustomMarshaler.GetNativeDataSize%2A?displayProperty=nameWithType>  
  
 <span data-ttu-id="95d90-157">Devuelve el tamaño de los datos no administrados se van a calcular.</span><span class="sxs-lookup"><span data-stu-id="95d90-157">Returns the size of the unmanaged data to be marshaled.</span></span>  
  
## <a name="implementing-the-getinstance-method"></a><span data-ttu-id="95d90-158">Implementación del método GetInstance</span><span class="sxs-lookup"><span data-stu-id="95d90-158">Implementing the GetInstance Method</span></span>  
 <span data-ttu-id="95d90-159">Además de implementar el <xref:System.Runtime.InteropServices.ICustomMarshaler> interfaz, los contadores de referencias personalizados deben implementar un `static` método llamado `GetInstance` que acepta un <xref:System.String> como un parámetro y tiene un tipo de valor devuelto de <xref:System.Runtime.InteropServices.ICustomMarshaler>.</span><span class="sxs-lookup"><span data-stu-id="95d90-159">In addition to implementing the <xref:System.Runtime.InteropServices.ICustomMarshaler> interface, custom marshalers must implement a `static` method called `GetInstance` that accepts a <xref:System.String> as a parameter and has a return type of <xref:System.Runtime.InteropServices.ICustomMarshaler>.</span></span> <span data-ttu-id="95d90-160">Esto `static` se llama al método mediante la capa de interoperabilidad COM de common language runtime para crear una instancia del contador de referencias personalizado.</span><span class="sxs-lookup"><span data-stu-id="95d90-160">This `static` method is called by the common language runtime's COM interop layer to instantiate an instance of the custom marshaler.</span></span> <span data-ttu-id="95d90-161">La cadena que se pasa a `GetInstance` es una cookie que se puede usar el método para personalizar el contenedor personalizado devuelto.</span><span class="sxs-lookup"><span data-stu-id="95d90-161">The string that is passed to `GetInstance` is a cookie that the method can use to customize the returned custom marshaler.</span></span>  
  
```  
static ICustomMarshaler *GetInstance(String *pstrCookie);  
```  
  
## <a name="applying-marshalasattribute"></a><span data-ttu-id="95d90-162">Aplicar MarshalAsAttribute</span><span class="sxs-lookup"><span data-stu-id="95d90-162">Applying MarshalAsAttribute</span></span>  
 <span data-ttu-id="95d90-163">Para utilizar un serializador personalizado, debe aplicar la <xref:System.Runtime.InteropServices.MarshalAsAttribute> para el parámetro o campo que se calculan las referencias de atributo.</span><span class="sxs-lookup"><span data-stu-id="95d90-163">To use a custom marshaler, you must apply the <xref:System.Runtime.InteropServices.MarshalAsAttribute> attribute to the parameter or field that is being marshaled.</span></span>  
  
 <span data-ttu-id="95d90-164">También se debe pasar el <xref:System.Runtime.InteropServices.UnmanagedType.CustomMarshaler?displayProperty=nameWithType> valor de enumeración para el <xref:System.Runtime.InteropServices.MarshalAsAttribute> constructor.</span><span class="sxs-lookup"><span data-stu-id="95d90-164">You must also pass the <xref:System.Runtime.InteropServices.UnmanagedType.CustomMarshaler?displayProperty=nameWithType> enumeration value to the <xref:System.Runtime.InteropServices.MarshalAsAttribute> constructor.</span></span> <span data-ttu-id="95d90-165">Además, debe especificar el <xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType> campo con uno de los siguientes parámetros con nombre:</span><span class="sxs-lookup"><span data-stu-id="95d90-165">In addition, you must specify the <xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType> field with one of the following named parameters:</span></span>  
  
-   <span data-ttu-id="95d90-166"><xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType> (obligatorio): El nombre completo de ensamblado del contador de referencias personalizado.</span><span class="sxs-lookup"><span data-stu-id="95d90-166"><xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType> (required): The assembly-qualified name of the custom marshaler.</span></span> <span data-ttu-id="95d90-167">El nombre debe incluir el espacio de nombres y la clase de contador de referencias personalizado.</span><span class="sxs-lookup"><span data-stu-id="95d90-167">The name should include the namespace and class of the custom marshaler.</span></span> <span data-ttu-id="95d90-168">Si el contador de referencias personalizado no está definido en el ensamblado se utiliza en, debe especificar el nombre del ensamblado en el que está definido.</span><span class="sxs-lookup"><span data-stu-id="95d90-168">If the custom marshaler is not defined in the assembly it is used in, you must specify the name of the assembly in which it is defined.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="95d90-169">Puede usar el <xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef> campo en lugar de la <xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType> campo.</span><span class="sxs-lookup"><span data-stu-id="95d90-169">You can use the <xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef> field instead of the <xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType> field.</span></span> <span data-ttu-id="95d90-170"><xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef> toma un tipo que es fácil de especificar.</span><span class="sxs-lookup"><span data-stu-id="95d90-170"><xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef> takes a type that is easier to specify.</span></span>  
  
-   <span data-ttu-id="95d90-171"><xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalCookie> (opcional): Una cookie que se pasa al contador de referencias personalizado.</span><span class="sxs-lookup"><span data-stu-id="95d90-171"><xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalCookie> (optional): A cookie that is passed to the custom marshaler.</span></span> <span data-ttu-id="95d90-172">Puede usar la cookie para proporcionar información adicional para el contador de referencias.</span><span class="sxs-lookup"><span data-stu-id="95d90-172">You can use the cookie to provide additional information to the marshaler.</span></span> <span data-ttu-id="95d90-173">Por ejemplo, si se usa el mismo contador de referencias para proporcionar un número de contenedores, la cookie identifica un contenedor específico.</span><span class="sxs-lookup"><span data-stu-id="95d90-173">For example, if the same marshaler is used to provide a number of wrappers, the cookie identifies a specific wrapper.</span></span> <span data-ttu-id="95d90-174">La cookie se pasa a la `GetInstance` método del contador de referencias.</span><span class="sxs-lookup"><span data-stu-id="95d90-174">The cookie is passed to the `GetInstance` method of the marshaler.</span></span>  
  
 <span data-ttu-id="95d90-175">El <xref:System.Runtime.InteropServices.MarshalAsAttribute> atributo identifica el contador de referencias personalizado para que Active el contenedor adecuado.</span><span class="sxs-lookup"><span data-stu-id="95d90-175">The <xref:System.Runtime.InteropServices.MarshalAsAttribute> attribute identifies the custom marshaler so it can activate the appropriate wrapper.</span></span> <span data-ttu-id="95d90-176">Servicio de interoperabilidad de common language runtime, a continuación, examina el atributo y crea la hora del contador de referencias personalizado la primera de las necesidades de argumento (parámetro o campo) se van a calcular.</span><span class="sxs-lookup"><span data-stu-id="95d90-176">The common language runtime's interop service then examines the attribute and creates the custom marshaler the first time the argument (parameter or field) needs to be marshaled.</span></span>  
  
 <span data-ttu-id="95d90-177">El tiempo de ejecución, a continuación, llama a la <xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged%2A> y <xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative%2A> métodos en el contador de referencias personalizado para activar el contenedor correcto para controlar la llamada.</span><span class="sxs-lookup"><span data-stu-id="95d90-177">The runtime then calls the <xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged%2A> and <xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative%2A> methods on the custom marshaler to activate the correct wrapper to handle the call.</span></span>  
  
## <a name="using-a-custom-marshaler"></a><span data-ttu-id="95d90-178">Uso de un contador de referencias personalizado</span><span class="sxs-lookup"><span data-stu-id="95d90-178">Using a Custom Marshaler</span></span>  
 <span data-ttu-id="95d90-179">Una vez completado el contador de referencias personalizado, puede usar como un contenedor personalizado para un tipo determinado.</span><span class="sxs-lookup"><span data-stu-id="95d90-179">When the custom marshaler is complete, you can use it as a custom wrapper for a particular type.</span></span> <span data-ttu-id="95d90-180">El ejemplo siguiente muestra la definición de la `IUserData` interfaz administrada:</span><span class="sxs-lookup"><span data-stu-id="95d90-180">The following example shows the definition of the `IUserData` managed interface:</span></span>  
  
 [!code-cpp[System.Runtime.InteropServices.ICustomMarshaler#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.runtime.interopservices.icustommarshaler/cpp/source.cpp#3)]
 [!code-csharp[System.Runtime.InteropServices.ICustomMarshaler#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.interopservices.icustommarshaler/cs/source.cs#3)]
 [!code-vb[System.Runtime.InteropServices.ICustomMarshaler#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.interopservices.icustommarshaler/vb/source.vb#3)]  
  
 <span data-ttu-id="95d90-181">En el ejemplo siguiente, la `IUserData` usa la interfaz la `NewOldMarshaler` contador de referencias personalizado para permitir que las aplicaciones cliente no administrado pasar un `IOld` interfaz a la `DoSomeStuff` método.</span><span class="sxs-lookup"><span data-stu-id="95d90-181">In the following example, the `IUserData` interface uses the `NewOldMarshaler` custom marshaler to enable unmanaged client applications to pass an `IOld` interface to the `DoSomeStuff` method.</span></span> <span data-ttu-id="95d90-182">La descripción administrada de la `DoSomeStuff` método toma un `INew` interfaz, como se muestra en el ejemplo anterior, mientras que la versión no administrada de `DoSomeStuff` toma un `IOld` puntero de interfaz, como se muestra en el ejemplo siguiente.</span><span class="sxs-lookup"><span data-stu-id="95d90-182">The managed description of the `DoSomeStuff` method takes an `INew` interface, as shown in the previous example, whereas the unmanaged version of `DoSomeStuff` takes an `IOld` interface pointer, as shown in the following example.</span></span>  
  
```  
[uuid(9B2BAADA-0705-11D3-A0CD-00C04FA35826)]  
library UserLib {  
     [uuid(9B2BABCD-0705-11D3-A0CD-00C04FA35826)]  
     interface IUserData : IUnknown  
         HRESULT DoSomeStuff(IUnknown* pIOld);  
}  
```  
  
 <span data-ttu-id="95d90-183">La biblioteca de tipos que se genera mediante la exportación de la definición administrada de `IUserData` produce la definición no administrada que se muestra en este ejemplo, en lugar de la definición del estándar.</span><span class="sxs-lookup"><span data-stu-id="95d90-183">The type library that is generated by exporting the managed definition of `IUserData` yields the unmanaged definition shown in this example instead of the standard definition.</span></span> <span data-ttu-id="95d90-184">El <xref:System.Runtime.InteropServices.MarshalAsAttribute> atributo aplicado a la `INew` argumento en la definición administrada de la `DoSomeStuff` método indica que el argumento utiliza un contador de referencias personalizado, como se muestra en el ejemplo siguiente.</span><span class="sxs-lookup"><span data-stu-id="95d90-184">The <xref:System.Runtime.InteropServices.MarshalAsAttribute> attribute applied to the `INew` argument in the managed definition of the `DoSomeStuff` method indicates that the argument uses a custom marshaler, as the following example shows.</span></span>  
  
 [!code-cpp[System.Runtime.InteropServices.ICustomMarshaler#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.runtime.interopservices.icustommarshaler/cpp/source.cpp#4)]
 [!code-csharp[System.Runtime.InteropServices.ICustomMarshaler#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.interopservices.icustommarshaler/cs/source.cs#4)]
 [!code-vb[System.Runtime.InteropServices.ICustomMarshaler#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.interopservices.icustommarshaler/vb/source.vb#4)]  
  
 [!code-cpp[System.Runtime.InteropServices.ICustomMarshaler#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.runtime.interopservices.icustommarshaler/cpp/source.cpp#5)]
 [!code-csharp[System.Runtime.InteropServices.ICustomMarshaler#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.interopservices.icustommarshaler/cs/source.cs#5)]
 [!code-vb[System.Runtime.InteropServices.ICustomMarshaler#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.interopservices.icustommarshaler/vb/source.vb#5)]  
  
 <span data-ttu-id="95d90-185">En los ejemplos anteriores, el primer parámetro se proporciona para el <xref:System.Runtime.InteropServices.MarshalAsAttribute> atributo es el <xref:System.Runtime.InteropServices.UnmanagedType.CustomMarshaler?displayProperty=nameWithType> valor de enumeración `UnmanagedType.CustomMarshaler`.</span><span class="sxs-lookup"><span data-stu-id="95d90-185">In the previous examples, the first parameter provided to the <xref:System.Runtime.InteropServices.MarshalAsAttribute> attribute is the <xref:System.Runtime.InteropServices.UnmanagedType.CustomMarshaler?displayProperty=nameWithType> enumeration value `UnmanagedType.CustomMarshaler`.</span></span>  
  
 <span data-ttu-id="95d90-186">El segundo parámetro es el <xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType> campo, que proporciona el nombre completo de ensamblado del contador de referencias personalizado.</span><span class="sxs-lookup"><span data-stu-id="95d90-186">The second parameter is the <xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType> field, which provides the assembly-qualified name of the custom marshaler.</span></span> <span data-ttu-id="95d90-187">Este nombre consta del espacio de nombres y la clase de contador de referencias personalizado (`MarshalType="MyCompany.NewOldMarshaler"`).</span><span class="sxs-lookup"><span data-stu-id="95d90-187">This name consists of the namespace and class of the custom marshaler (`MarshalType="MyCompany.NewOldMarshaler"`).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CleanUpManagedData">
      <MemberSignature Language="C#" Value="public void CleanUpManagedData (object ManagedObj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CleanUpManagedData(object ManagedObj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ICustomMarshaler.CleanUpManagedData(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CleanUpManagedData (ManagedObj As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CleanUpManagedData(System::Object ^ ManagedObj);" />
      <MemberSignature Language="F#" Value="abstract member CleanUpManagedData : obj -&gt; unit" Usage="iCustomMarshaler.CleanUpManagedData ManagedObj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ManagedObj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="ManagedObj"><span data-ttu-id="95d90-188">Objeto administrado que se va a destruir.</span><span class="sxs-lookup"><span data-stu-id="95d90-188">The managed object to be destroyed.</span></span></param>
        <summary><span data-ttu-id="95d90-189">Realiza la limpieza necesaria en los datos administrados cuando ya no son necesarios.</span><span class="sxs-lookup"><span data-stu-id="95d90-189">Performs necessary cleanup of the managed data when it is no longer needed.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CleanUpNativeData">
      <MemberSignature Language="C#" Value="public void CleanUpNativeData (IntPtr pNativeData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CleanUpNativeData(native int pNativeData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ICustomMarshaler.CleanUpNativeData(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CleanUpNativeData (pNativeData As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CleanUpNativeData(IntPtr pNativeData);" />
      <MemberSignature Language="F#" Value="abstract member CleanUpNativeData : nativeint -&gt; unit" Usage="iCustomMarshaler.CleanUpNativeData pNativeData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pNativeData" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="pNativeData"><span data-ttu-id="95d90-190">Puntero a los datos no administrados que se van a destruir.</span><span class="sxs-lookup"><span data-stu-id="95d90-190">A pointer to the unmanaged data to be destroyed.</span></span></param>
        <summary><span data-ttu-id="95d90-191">Realiza la limpieza necesaria en los datos no administrados cuando ya no son necesarios.</span><span class="sxs-lookup"><span data-stu-id="95d90-191">Performs necessary cleanup of the unmanaged data when it is no longer needed.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNativeDataSize">
      <MemberSignature Language="C#" Value="public int GetNativeDataSize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetNativeDataSize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ICustomMarshaler.GetNativeDataSize" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNativeDataSize () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetNativeDataSize();" />
      <MemberSignature Language="F#" Value="abstract member GetNativeDataSize : unit -&gt; int" Usage="iCustomMarshaler.GetNativeDataSize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="95d90-192">Devuelve el tamaño de los datos nativos cuyas referencias se van a calcular.</span><span class="sxs-lookup"><span data-stu-id="95d90-192">Returns the size of the native data to be marshaled.</span></span></summary>
        <returns><span data-ttu-id="95d90-193">Tamaño de los datos nativos, en bytes.</span><span class="sxs-lookup"><span data-stu-id="95d90-193">The size, in bytes, of the native data.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MarshalManagedToNative">
      <MemberSignature Language="C#" Value="public IntPtr MarshalManagedToNative (object ManagedObj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance native int MarshalManagedToNative(object ManagedObj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function MarshalManagedToNative (ManagedObj As Object) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IntPtr MarshalManagedToNative(System::Object ^ ManagedObj);" />
      <MemberSignature Language="F#" Value="abstract member MarshalManagedToNative : obj -&gt; nativeint" Usage="iCustomMarshaler.MarshalManagedToNative ManagedObj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ManagedObj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="ManagedObj"><span data-ttu-id="95d90-194">Objeto administrado que se va a convertir.</span><span class="sxs-lookup"><span data-stu-id="95d90-194">The managed object to be converted.</span></span></param>
        <summary><span data-ttu-id="95d90-195">Convierte los datos administrados en datos no administrados.</span><span class="sxs-lookup"><span data-stu-id="95d90-195">Converts the managed data to unmanaged data.</span></span></summary>
        <returns><span data-ttu-id="95d90-196">Puntero a la vista COM del objeto administrado.</span><span class="sxs-lookup"><span data-stu-id="95d90-196">A pointer to the COM view of the managed object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MarshalNativeToManaged">
      <MemberSignature Language="C#" Value="public object MarshalNativeToManaged (IntPtr pNativeData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object MarshalNativeToManaged(native int pNativeData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Function MarshalNativeToManaged (pNativeData As IntPtr) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ MarshalNativeToManaged(IntPtr pNativeData);" />
      <MemberSignature Language="F#" Value="abstract member MarshalNativeToManaged : nativeint -&gt; obj" Usage="iCustomMarshaler.MarshalNativeToManaged pNativeData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pNativeData" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="pNativeData"><span data-ttu-id="95d90-197">Puntero a los datos no administrados que se van a ajustar.</span><span class="sxs-lookup"><span data-stu-id="95d90-197">A pointer to the unmanaged data to be wrapped.</span></span></param>
        <summary><span data-ttu-id="95d90-198">Convierte los datos no administrados en datos administrados.</span><span class="sxs-lookup"><span data-stu-id="95d90-198">Converts the unmanaged data to managed data.</span></span></summary>
        <returns><span data-ttu-id="95d90-199">Objeto que representa la vista administrada de los datos COM.</span><span class="sxs-lookup"><span data-stu-id="95d90-199">An object that represents the managed view of the COM data.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
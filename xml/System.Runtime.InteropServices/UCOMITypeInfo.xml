<Type Name="UCOMITypeInfo" FullName="System.Runtime.InteropServices.UCOMITypeInfo">
  <Metadata><Meta Name="ms.openlocfilehash" Value="33093fcb1b89fb2ead6986f48b6ac4b8ce5431cc" /><Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="11/20/2018" /><Meta Name="ms.locfileid" Value="52226070" /></Metadata><TypeSignature Language="C#" Value="public interface UCOMITypeInfo" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract UCOMITypeInfo" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.UCOMITypeInfo" />
  <TypeSignature Language="VB.NET" Value="Public Interface UCOMITypeInfo" />
  <TypeSignature Language="C++ CLI" Value="public interface class UCOMITypeInfo" />
  <TypeSignature Language="F#" Value="type UCOMITypeInfo = interface" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinmac-3.0">
      <AttributeName>System.Obsolete</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.Guid("00020401-0000-0000-c000-000000000046")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.Guid("00020401-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("Use System.Runtime.InteropServices.ComTypes.ITypeInfo instead. http://go.microsoft.com/fwlink/?linkid=14202", false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="3c72c-101">Utilice <see cref="T:System.Runtime.InteropServices.ComTypes.ITypeInfo" /> en su lugar.</span><span class="sxs-lookup"><span data-stu-id="3c72c-101">Use <see cref="T:System.Runtime.InteropServices.ComTypes.ITypeInfo" /> instead.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c72c-102">Para obtener más información sobre `ITypeInfo`, vea MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="3c72c-102">For additional information about `ITypeInfo`, see the MSDN Library.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddressOfMember">
      <MemberSignature Language="C#" Value="public void AddressOfMember (int memid, System.Runtime.InteropServices.INVOKEKIND invKind, out IntPtr ppv);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddressOfMember(int32 memid, valuetype System.Runtime.InteropServices.INVOKEKIND invKind, [out] native int&amp; ppv) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMITypeInfo.AddressOfMember(System.Int32,System.Runtime.InteropServices.INVOKEKIND,System.IntPtr@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddressOfMember (memid As Integer, invKind As INVOKEKIND, ByRef ppv As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddressOfMember(int memid, System::Runtime::InteropServices::INVOKEKIND invKind, [Runtime::InteropServices::Out] IntPtr % ppv);" />
      <MemberSignature Language="F#" Value="abstract member AddressOfMember : int * System.Runtime.InteropServices.INVOKEKIND *  -&gt; unit" Usage="uCOMITypeInfo.AddressOfMember (memid, invKind, ppv)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="memid" Type="System.Int32" />
        <Parameter Name="invKind" Type="System.Runtime.InteropServices.INVOKEKIND" />
        <Parameter Name="ppv" Type="System.IntPtr" RefType="out" />
      </Parameters>
      <Docs>
        <param name="memid"><span data-ttu-id="3c72c-103">Identificador de miembro de la dirección del miembro <see langword="static" /> que se va a recuperar.</span><span class="sxs-lookup"><span data-stu-id="3c72c-103">Member ID of the <see langword="static" /> member's address to retrieve.</span></span></param>
        <param name="invKind"><span data-ttu-id="3c72c-104">Especifica si el miembro es una propiedad y, si lo es, especifica el tipo.</span><span class="sxs-lookup"><span data-stu-id="3c72c-104">Specifies whether the member is a property, and if so, what kind.</span></span></param>
        <param name="ppv"><span data-ttu-id="3c72c-105">Referencia al miembro <see langword="static" />, si la devolución es correcta.</span><span class="sxs-lookup"><span data-stu-id="3c72c-105">On successful return, a reference to the <see langword="static" /> member.</span></span></param>
        <summary><span data-ttu-id="3c72c-106">Recupera las direcciones de variables o funciones estáticas, como las que se definen en un archivo DLL.</span><span class="sxs-lookup"><span data-stu-id="3c72c-106">Retrieves the addresses of static functions or variables, such as those defined in a DLL.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c72c-107">Para obtener más información sobre `ITypeInfo::AddressOfMember`, vea MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="3c72c-107">For additional information about `ITypeInfo::AddressOfMember`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public void CreateInstance (object pUnkOuter, ref Guid riid, out object ppvObj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CreateInstance(object pUnkOuter, valuetype System.Guid&amp; riid, [out] object&amp; ppvObj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMITypeInfo.CreateInstance(System.Object,System.Guid@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CreateInstance (pUnkOuter As Object, ByRef riid As Guid, ByRef ppvObj As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CreateInstance(System::Object ^ pUnkOuter, Guid % riid, [Runtime::InteropServices::Out] System::Object ^ % ppvObj);" />
      <MemberSignature Language="F#" Value="abstract member CreateInstance : obj *  *  -&gt; unit" Usage="uCOMITypeInfo.CreateInstance (pUnkOuter, riid, ppvObj)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pUnkOuter" Type="System.Object" />
        <Parameter Name="riid" Type="System.Guid" RefType="ref" />
        <Parameter Name="ppvObj" Type="System.Object" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pUnkOuter"><span data-ttu-id="3c72c-108">Objeto que actúa como objeto <see langword="IUnknown" /> de control.</span><span class="sxs-lookup"><span data-stu-id="3c72c-108">Object which acts as the controlling <see langword="IUnknown" />.</span></span></param>
        <param name="riid"><span data-ttu-id="3c72c-109">IID de la interfaz que el llamador utilizará para comunicarse con el objeto resultante.</span><span class="sxs-lookup"><span data-stu-id="3c72c-109">The IID of the interface that the caller will use to communicate with the resulting object.</span></span></param>
        <param name="ppvObj"><span data-ttu-id="3c72c-110">Referencia al objeto creado, si la devolución es correcta.</span><span class="sxs-lookup"><span data-stu-id="3c72c-110">On successful return, a reference to the created object.</span></span></param>
        <summary><span data-ttu-id="3c72c-111">Crea una nueva instancia de un tipo que describe una clase de componentes (coclase).</span><span class="sxs-lookup"><span data-stu-id="3c72c-111">Creates a new instance of a type that describes a component class (coclass).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c72c-112">Para obtener más información sobre `ITypeInfo::CreateInstance`, vea MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="3c72c-112">For additional information about `ITypeInfo::CreateInstance`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContainingTypeLib">
      <MemberSignature Language="C#" Value="public void GetContainingTypeLib (out System.Runtime.InteropServices.UCOMITypeLib ppTLB, out int pIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetContainingTypeLib([out] class System.Runtime.InteropServices.UCOMITypeLib&amp; ppTLB, [out] int32&amp; pIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMITypeInfo.GetContainingTypeLib(System.Runtime.InteropServices.UCOMITypeLib@,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetContainingTypeLib (ByRef ppTLB As UCOMITypeLib, ByRef pIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetContainingTypeLib([Runtime::InteropServices::Out] System::Runtime::InteropServices::UCOMITypeLib ^ % ppTLB, [Runtime::InteropServices::Out] int % pIndex);" />
      <MemberSignature Language="F#" Value="abstract member GetContainingTypeLib :  *  -&gt; unit" Usage="uCOMITypeInfo.GetContainingTypeLib (ppTLB, pIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ppTLB" Type="System.Runtime.InteropServices.UCOMITypeLib" RefType="out" />
        <Parameter Name="pIndex" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="ppTLB"><span data-ttu-id="3c72c-113">Referencia a la biblioteca de tipos contenedora, si la devolución es correcta.</span><span class="sxs-lookup"><span data-stu-id="3c72c-113">On successful return, a reference to the containing type library.</span></span></param>
        <param name="pIndex"><span data-ttu-id="3c72c-114">Referencia al índice de la descripción de tipos dentro de la biblioteca de tipos contenedora, si la devolución es correcta.</span><span class="sxs-lookup"><span data-stu-id="3c72c-114">On successful return, a reference to the index of the type description within the containing type library.</span></span></param>
        <summary><span data-ttu-id="3c72c-115">Recupera la biblioteca de tipos que contiene esta descripción de tipos y su índice en dicha biblioteca.</span><span class="sxs-lookup"><span data-stu-id="3c72c-115">Retrieves the type library that contains this type description and its index within that type library.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c72c-116">Para obtener más información sobre `ITypeInfo::GetContainingTypeLib`, vea MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="3c72c-116">For additional information about `ITypeInfo::GetContainingTypeLib`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDllEntry">
      <MemberSignature Language="C#" Value="public void GetDllEntry (int memid, System.Runtime.InteropServices.INVOKEKIND invKind, out string pBstrDllName, out string pBstrName, out short pwOrdinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetDllEntry(int32 memid, valuetype System.Runtime.InteropServices.INVOKEKIND invKind, [out] string&amp; pBstrDllName, [out] string&amp; pBstrName, [out] int16&amp; pwOrdinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMITypeInfo.GetDllEntry(System.Int32,System.Runtime.InteropServices.INVOKEKIND,System.String@,System.String@,System.Int16@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetDllEntry (memid As Integer, invKind As INVOKEKIND, ByRef pBstrDllName As String, ByRef pBstrName As String, ByRef pwOrdinal As Short)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetDllEntry(int memid, System::Runtime::InteropServices::INVOKEKIND invKind, [Runtime::InteropServices::Out] System::String ^ % pBstrDllName, [Runtime::InteropServices::Out] System::String ^ % pBstrName, [Runtime::InteropServices::Out] short % pwOrdinal);" />
      <MemberSignature Language="F#" Value="abstract member GetDllEntry : int * System.Runtime.InteropServices.INVOKEKIND *  *  *  -&gt; unit" Usage="uCOMITypeInfo.GetDllEntry (memid, invKind, pBstrDllName, pBstrName, pwOrdinal)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="memid" Type="System.Int32" />
        <Parameter Name="invKind" Type="System.Runtime.InteropServices.INVOKEKIND" />
        <Parameter Name="pBstrDllName" Type="System.String" RefType="out" />
        <Parameter Name="pBstrName" Type="System.String" RefType="out" />
        <Parameter Name="pwOrdinal" Type="System.Int16" RefType="out" />
      </Parameters>
      <Docs>
        <param name="memid"><span data-ttu-id="3c72c-117">Identificador de la función miembro cuya descripción de entrada de archivo DLL se va a devolver.</span><span class="sxs-lookup"><span data-stu-id="3c72c-117">ID of the member function whose DLL entry description is to be returned.</span></span></param>
        <param name="invKind"><span data-ttu-id="3c72c-118">Especifica el tipo de miembro identificado por <paramref name="memid" />.</span><span class="sxs-lookup"><span data-stu-id="3c72c-118">Specifies the kind of member identified by <paramref name="memid" />.</span></span></param>
        <param name="pBstrDllName"><span data-ttu-id="3c72c-119">Si no es <see langword="null" />, la función establece <paramref name="pBstrDllName" /> en un <see langword="BSTR" /> que contiene el nombre del archivo DLL.</span><span class="sxs-lookup"><span data-stu-id="3c72c-119">If not <see langword="null" />, the function sets <paramref name="pBstrDllName" /> to a <see langword="BSTR" /> that contains the name of the DLL.</span></span></param>
        <param name="pBstrName"><span data-ttu-id="3c72c-120">Si no es <see langword="null" />, la función establece <c>lpbstrName</c> en un <see langword="BSTR" /> que contiene el nombre del punto de entrada.</span><span class="sxs-lookup"><span data-stu-id="3c72c-120">If not <see langword="null" />, the function sets <c>lpbstrName</c> to a <see langword="BSTR" /> that contains the name of the entry point.</span></span></param>
        <param name="pwOrdinal"><span data-ttu-id="3c72c-121">Si no es <see langword="null" /> y la función está definida por un ordinal, <c>lpwOrdinal</c> se establece de forma que apunte al ordinal.</span><span class="sxs-lookup"><span data-stu-id="3c72c-121">If not <see langword="null" />, and the function is defined by an ordinal, then <c>lpwOrdinal</c> is set to point to the ordinal.</span></span></param>
        <summary><span data-ttu-id="3c72c-122">Recupera una descripción o especificación de un punto de entrada para una función de un archivo DLL.</span><span class="sxs-lookup"><span data-stu-id="3c72c-122">Retrieves a description or specification of an entry point for a function in a DLL.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c72c-123">Para obtener más información sobre `ITypeInfo::GetDllEntry`, vea MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="3c72c-123">For additional information about `ITypeInfo::GetDllEntry`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDocumentation">
      <MemberSignature Language="C#" Value="public void GetDocumentation (int index, out string strName, out string strDocString, out int dwHelpContext, out string strHelpFile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetDocumentation(int32 index, [out] string&amp; strName, [out] string&amp; strDocString, [out] int32&amp; dwHelpContext, [out] string&amp; strHelpFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMITypeInfo.GetDocumentation(System.Int32,System.String@,System.String@,System.Int32@,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetDocumentation (index As Integer, ByRef strName As String, ByRef strDocString As String, ByRef dwHelpContext As Integer, ByRef strHelpFile As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetDocumentation(int index, [Runtime::InteropServices::Out] System::String ^ % strName, [Runtime::InteropServices::Out] System::String ^ % strDocString, [Runtime::InteropServices::Out] int % dwHelpContext, [Runtime::InteropServices::Out] System::String ^ % strHelpFile);" />
      <MemberSignature Language="F#" Value="abstract member GetDocumentation : int *  *  *  *  -&gt; unit" Usage="uCOMITypeInfo.GetDocumentation (index, strName, strDocString, dwHelpContext, strHelpFile)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="strName" Type="System.String" RefType="out" />
        <Parameter Name="strDocString" Type="System.String" RefType="out" />
        <Parameter Name="dwHelpContext" Type="System.Int32" RefType="out" />
        <Parameter Name="strHelpFile" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="3c72c-124">Identificador del miembro cuya documentación se va a devolver.</span><span class="sxs-lookup"><span data-stu-id="3c72c-124">ID of the member whose documentation is to be returned.</span></span></param>
        <param name="strName"><span data-ttu-id="3c72c-125">Nombre del método del elemento, si la devolución es correcta.</span><span class="sxs-lookup"><span data-stu-id="3c72c-125">On successful return, the name of the item method.</span></span></param>
        <param name="strDocString"><span data-ttu-id="3c72c-126">Cadena de documentación del elemento especificado, si la devolución es correcta.</span><span class="sxs-lookup"><span data-stu-id="3c72c-126">On successful return, the documentation string for the specified item.</span></span></param>
        <param name="dwHelpContext"><span data-ttu-id="3c72c-127">Referencia al contexto de Ayuda asociado al elemento especificado, si la devolución es correcta.</span><span class="sxs-lookup"><span data-stu-id="3c72c-127">On successful return, a reference to the Help context associated with the specified item.</span></span></param>
        <param name="strHelpFile"><span data-ttu-id="3c72c-128">Nombre completo del archivo de Ayuda, si la devolución es correcta.</span><span class="sxs-lookup"><span data-stu-id="3c72c-128">On successful return, the fully qualified name of the Help file.</span></span></param>
        <summary><span data-ttu-id="3c72c-129">Recupera la cadena de documentación, el nombre y la ruta de acceso completos del archivo de Ayuda y el identificador de contexto del tema de Ayuda de una descripción de tipos especificada.</span><span class="sxs-lookup"><span data-stu-id="3c72c-129">Retrieves the documentation string, the complete Help file name and path, and the context ID for the Help topic for a specified type description.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c72c-130">Para obtener más información sobre `ITypeInfo::GetDocumentation`, vea MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="3c72c-130">For additional information about `ITypeInfo::GetDocumentation`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFuncDesc">
      <MemberSignature Language="C#" Value="public void GetFuncDesc (int index, out IntPtr ppFuncDesc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetFuncDesc(int32 index, [out] native int&amp; ppFuncDesc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMITypeInfo.GetFuncDesc(System.Int32,System.IntPtr@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetFuncDesc (index As Integer, ByRef ppFuncDesc As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetFuncDesc(int index, [Runtime::InteropServices::Out] IntPtr % ppFuncDesc);" />
      <MemberSignature Language="F#" Value="abstract member GetFuncDesc : int *  -&gt; unit" Usage="uCOMITypeInfo.GetFuncDesc (index, ppFuncDesc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="ppFuncDesc" Type="System.IntPtr" RefType="out" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="3c72c-131">Índice de la descripción de función que se va a devolver.</span><span class="sxs-lookup"><span data-stu-id="3c72c-131">Index of the function description to return.</span></span></param>
        <param name="ppFuncDesc"><span data-ttu-id="3c72c-132">Referencia a una estructura <see langword="FUNCDESC" /> que describe la función especificada.</span><span class="sxs-lookup"><span data-stu-id="3c72c-132">Reference to a <see langword="FUNCDESC" /> that describes the specified function.</span></span></param>
        <summary><span data-ttu-id="3c72c-133">Recupera la estructura <see cref="T:System.Runtime.InteropServices.FUNCDESC" /> que contiene información acerca de una función especificada.</span><span class="sxs-lookup"><span data-stu-id="3c72c-133">Retrieves the <see cref="T:System.Runtime.InteropServices.FUNCDESC" /> structure that contains information about a specified function.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c72c-134">Los valores de `ppFuncDesc` puede obtenerse a través <xref:System.Runtime.InteropServices.Marshal.PtrToStructure%2A>.</span><span class="sxs-lookup"><span data-stu-id="3c72c-134">The values of `ppFuncDesc` can be accessed through <xref:System.Runtime.InteropServices.Marshal.PtrToStructure%2A>.</span></span>  
  
 <span data-ttu-id="3c72c-135">Para obtener más información sobre `ITypeInfo::GetFuncDesc`, vea MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="3c72c-135">For additional information about `ITypeInfo::GetFuncDesc`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIDsOfNames">
      <MemberSignature Language="C#" Value="public void GetIDsOfNames (string[] rgszNames, int cNames, int[] pMemId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetIDsOfNames([in]string[] rgszNames, int32 cNames, [out] int32[] pMemId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMITypeInfo.GetIDsOfNames(System.String[],System.Int32,System.Int32[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetIDsOfNames (rgszNames As String(), cNames As Integer, pMemId As Integer())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetIDsOfNames(cli::array &lt;System::String ^&gt; ^ rgszNames, int cNames, cli::array &lt;int&gt; ^ pMemId);" />
      <MemberSignature Language="F#" Value="abstract member GetIDsOfNames : string[] * int * int[] -&gt; unit" Usage="uCOMITypeInfo.GetIDsOfNames (rgszNames, cNames, pMemId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgszNames" Type="System.String[]" />
        <Parameter Name="cNames" Type="System.Int32" />
        <Parameter Name="pMemId" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="rgszNames"><span data-ttu-id="3c72c-136">Matriz de nombres que se van a asignar, si la devolución es correcta.</span><span class="sxs-lookup"><span data-stu-id="3c72c-136">On succesful return, an array of names to map.</span></span></param>
        <param name="cNames"><span data-ttu-id="3c72c-137">Número de nombres que se van a asignar.</span><span class="sxs-lookup"><span data-stu-id="3c72c-137">Count of names to map.</span></span></param>
        <param name="pMemId"><span data-ttu-id="3c72c-138">Referencia a una matriz en la que se sitúan las asignaciones de nombres.</span><span class="sxs-lookup"><span data-stu-id="3c72c-138">Reference to an array in which name mappings are placed.</span></span></param>
        <summary><span data-ttu-id="3c72c-139">Realiza asignaciones entre nombres e identificadores de miembro, y nombres e identificadores de parámetros.</span><span class="sxs-lookup"><span data-stu-id="3c72c-139">Maps between member names and member IDs, and parameter names and parameter IDs.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c72c-140">Para obtener más información sobre `ITypeInfo::GetIDsOfNames`, vea MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="3c72c-140">For additional information about `ITypeInfo::GetIDsOfNames`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetImplTypeFlags">
      <MemberSignature Language="C#" Value="public void GetImplTypeFlags (int index, out int pImplTypeFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetImplTypeFlags(int32 index, [out] int32&amp; pImplTypeFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMITypeInfo.GetImplTypeFlags(System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetImplTypeFlags (index As Integer, ByRef pImplTypeFlags As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetImplTypeFlags(int index, [Runtime::InteropServices::Out] int % pImplTypeFlags);" />
      <MemberSignature Language="F#" Value="abstract member GetImplTypeFlags : int *  -&gt; unit" Usage="uCOMITypeInfo.GetImplTypeFlags (index, pImplTypeFlags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="pImplTypeFlags" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="3c72c-141">Índice de la interfaz implementada o interfaz base.</span><span class="sxs-lookup"><span data-stu-id="3c72c-141">Index of the implemented interface or base interface.</span></span></param>
        <param name="pImplTypeFlags"><span data-ttu-id="3c72c-142">Referencia a la enumeración <see langword="IMPLTYPEFLAGS" />, si la devolución es correcta.</span><span class="sxs-lookup"><span data-stu-id="3c72c-142">On successful return, a reference to the <see langword="IMPLTYPEFLAGS" /> enumeration.</span></span></param>
        <summary><span data-ttu-id="3c72c-143">Recupera el valor de <see cref="T:System.Runtime.InteropServices.IMPLTYPEFLAGS" /> para una interfaz implementada o interfaz base en una descripción de tipos.</span><span class="sxs-lookup"><span data-stu-id="3c72c-143">Retrieves the <see cref="T:System.Runtime.InteropServices.IMPLTYPEFLAGS" /> value for one implemented interface or base interface in a type description.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c72c-144">Para obtener más información sobre `ITypeInfo::GetImplTypeFlags`, vea MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="3c72c-144">For additional information about `ITypeInfo::GetImplTypeFlags`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMops">
      <MemberSignature Language="C#" Value="public void GetMops (int memid, out string pBstrMops);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetMops(int32 memid, [out] string&amp; pBstrMops) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMITypeInfo.GetMops(System.Int32,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetMops (memid As Integer, ByRef pBstrMops As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetMops(int memid, [Runtime::InteropServices::Out] System::String ^ % pBstrMops);" />
      <MemberSignature Language="F#" Value="abstract member GetMops : int *  -&gt; unit" Usage="uCOMITypeInfo.GetMops (memid, pBstrMops)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="memid" Type="System.Int32" />
        <Parameter Name="pBstrMops" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="memid"><span data-ttu-id="3c72c-145">Identificador de miembro que indica la información sobre cálculo de referencias que es necesaria.</span><span class="sxs-lookup"><span data-stu-id="3c72c-145">The member ID that indicates which marshaling information is needed.</span></span></param>
        <param name="pBstrMops"><span data-ttu-id="3c72c-146">Devuelve una referencia a la cadena de código de operación utilizada para calcular las referencias de los campos de la estructura descrita por la descripción del tipo al que se hace referencia, o devuelve <see langword="null" /> si no hay ninguna información que devolver.</span><span class="sxs-lookup"><span data-stu-id="3c72c-146">A reference to the opcode string used in marshaling the fields of the structure described by the referenced type description, or returns <see langword="null" /> if there is no information to return.</span></span></param>
        <summary><span data-ttu-id="3c72c-147">Recupera información sobre el cálculo de referencias.</span><span class="sxs-lookup"><span data-stu-id="3c72c-147">Retrieves marshaling information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c72c-148">Para obtener más información sobre `ITypeInfo::GetMops`, vea MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="3c72c-148">For additional information about `ITypeInfo::GetMops`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNames">
      <MemberSignature Language="C#" Value="public void GetNames (int memid, string[] rgBstrNames, int cMaxNames, out int pcNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetNames(int32 memid, [out] string[] rgBstrNames, int32 cMaxNames, [out] int32&amp; pcNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMITypeInfo.GetNames(System.Int32,System.String[],System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetNames (memid As Integer, rgBstrNames As String(), cMaxNames As Integer, ByRef pcNames As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetNames(int memid, cli::array &lt;System::String ^&gt; ^ rgBstrNames, int cMaxNames, [Runtime::InteropServices::Out] int % pcNames);" />
      <MemberSignature Language="F#" Value="abstract member GetNames : int * string[] * int *  -&gt; unit" Usage="uCOMITypeInfo.GetNames (memid, rgBstrNames, cMaxNames, pcNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="memid" Type="System.Int32" />
        <Parameter Name="rgBstrNames" Type="System.String[]" />
        <Parameter Name="cMaxNames" Type="System.Int32" />
        <Parameter Name="pcNames" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="memid"><span data-ttu-id="3c72c-149">Identificador del miembro cuyo nombre o nombres se van a devolver.</span><span class="sxs-lookup"><span data-stu-id="3c72c-149">The ID of the member whose name (or names) is to be returned.</span></span></param>
        <param name="rgBstrNames"><span data-ttu-id="3c72c-150">Contiene el nombre o nombres asociados al miembro, si la devolución es correcta.</span><span class="sxs-lookup"><span data-stu-id="3c72c-150">On succesful return, contains the name (or names) associated with the member.</span></span></param>
        <param name="cMaxNames"><span data-ttu-id="3c72c-151">Longitud de la matriz <paramref name="rgBstrNames" />.</span><span class="sxs-lookup"><span data-stu-id="3c72c-151">Length of the <paramref name="rgBstrNames" /> array.</span></span></param>
        <param name="pcNames"><span data-ttu-id="3c72c-152">Número de nombres de la matriz <paramref name="rgBstrNames" />, si la devolución es correcta.</span><span class="sxs-lookup"><span data-stu-id="3c72c-152">On succesful return, the number of names in the <paramref name="rgBstrNames" /> array.</span></span></param>
        <summary><span data-ttu-id="3c72c-153">Recupera la variable con el identificador de miembro especificado (o el nombre de la propiedad o método y sus parámetros) que se corresponde con el identificador de función especificado.</span><span class="sxs-lookup"><span data-stu-id="3c72c-153">Retrieves the variable with the specified member ID (or the name of the property or method and its parameters) that correspond to the specified function ID.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c72c-154">Para obtener más información sobre `ITypeInfo::GetNames`, vea MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="3c72c-154">For additional information about `ITypeInfo::GetNames`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRefTypeInfo">
      <MemberSignature Language="C#" Value="public void GetRefTypeInfo (int hRef, out System.Runtime.InteropServices.UCOMITypeInfo ppTI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetRefTypeInfo(int32 hRef, [out] class System.Runtime.InteropServices.UCOMITypeInfo&amp; ppTI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMITypeInfo.GetRefTypeInfo(System.Int32,System.Runtime.InteropServices.UCOMITypeInfo@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetRefTypeInfo (hRef As Integer, ByRef ppTI As UCOMITypeInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetRefTypeInfo(int hRef, [Runtime::InteropServices::Out] System::Runtime::InteropServices::UCOMITypeInfo ^ % ppTI);" />
      <MemberSignature Language="F#" Value="abstract member GetRefTypeInfo : int *  -&gt; unit" Usage="uCOMITypeInfo.GetRefTypeInfo (hRef, ppTI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hRef" Type="System.Int32" />
        <Parameter Name="ppTI" Type="System.Runtime.InteropServices.UCOMITypeInfo" RefType="out" />
      </Parameters>
      <Docs>
        <param name="hRef"><span data-ttu-id="3c72c-155">Identificador de la descripción de tipo a la que se hace referencia y que se va a devolver.</span><span class="sxs-lookup"><span data-stu-id="3c72c-155">Handle to the referenced type description to return.</span></span></param>
        <param name="ppTI"><span data-ttu-id="3c72c-156">Descripción de tipo a la que se hace referencia, si la devolución es correcta.</span><span class="sxs-lookup"><span data-stu-id="3c72c-156">On successful return, the referenced type description.</span></span></param>
        <summary><span data-ttu-id="3c72c-157">Si una descripción de tipo hace referencia a otras descripciones de tipo, recupera las descripciones de tipo a las que se hace referencia.</span><span class="sxs-lookup"><span data-stu-id="3c72c-157">If a type description references other type descriptions, it retrieves the referenced type descriptions.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c72c-158">Para obtener más información sobre `ITypeInfo::GetRefTypeInfo`, vea MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="3c72c-158">For additional information about `ITypeInfo::GetRefTypeInfo`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRefTypeOfImplType">
      <MemberSignature Language="C#" Value="public void GetRefTypeOfImplType (int index, out int href);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetRefTypeOfImplType(int32 index, [out] int32&amp; href) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMITypeInfo.GetRefTypeOfImplType(System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetRefTypeOfImplType (index As Integer, ByRef href As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetRefTypeOfImplType(int index, [Runtime::InteropServices::Out] int % href);" />
      <MemberSignature Language="F#" Value="abstract member GetRefTypeOfImplType : int *  -&gt; unit" Usage="uCOMITypeInfo.GetRefTypeOfImplType (index, href)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="href" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="3c72c-159">Índice del tipo implementado cuyo identificador se devuelve.</span><span class="sxs-lookup"><span data-stu-id="3c72c-159">Index of the implemented type whose handle is returned.</span></span></param>
        <param name="href"><span data-ttu-id="3c72c-160">Referencia a un identificador de la interfaz implementada.</span><span class="sxs-lookup"><span data-stu-id="3c72c-160">Reference to a handle for the implemented interface.</span></span></param>
        <summary><span data-ttu-id="3c72c-161">Si una descripción de tipo describe una clase COM, recupera la descripción de los tipos de interfaz implementados.</span><span class="sxs-lookup"><span data-stu-id="3c72c-161">If a type description describes a COM class, it retrieves the type description of the implemented interface types.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c72c-162">Para obtener más información sobre `ITypeInfo::GetRefTypeOfImplType`, vea MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="3c72c-162">For additional information about `ITypeInfo::GetRefTypeOfImplType`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeAttr">
      <MemberSignature Language="C#" Value="public void GetTypeAttr (out IntPtr ppTypeAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetTypeAttr([out] native int&amp; ppTypeAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMITypeInfo.GetTypeAttr(System.IntPtr@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetTypeAttr (ByRef ppTypeAttr As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetTypeAttr([Runtime::InteropServices::Out] IntPtr % ppTypeAttr);" />
      <MemberSignature Language="F#" Value="abstract member GetTypeAttr :  -&gt; unit" Usage="uCOMITypeInfo.GetTypeAttr ppTypeAttr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ppTypeAttr" Type="System.IntPtr" RefType="out" />
      </Parameters>
      <Docs>
        <param name="ppTypeAttr"><span data-ttu-id="3c72c-163">Referencia a la estructura que contiene los atributos de esta descripción de tipo, si la devolución es correcta.</span><span class="sxs-lookup"><span data-stu-id="3c72c-163">On successful return, a reference to the structure that contains the attributes of this type description.</span></span></param>
        <summary><span data-ttu-id="3c72c-164">Recupera una estructura <see cref="T:System.Runtime.InteropServices.TYPEATTR" /> que contiene los atributos de la descripción de tipo.</span><span class="sxs-lookup"><span data-stu-id="3c72c-164">Retrieves a <see cref="T:System.Runtime.InteropServices.TYPEATTR" /> structure that contains the attributes of the type description.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c72c-165">Los valores de `ppTypeAttr` puede obtenerse a través <xref:System.Runtime.InteropServices.Marshal.PtrToStructure%2A>.</span><span class="sxs-lookup"><span data-stu-id="3c72c-165">The values of `ppTypeAttr` can be accessed through <xref:System.Runtime.InteropServices.Marshal.PtrToStructure%2A>.</span></span>  
  
 <span data-ttu-id="3c72c-166">Para obtener más información sobre `ITypeInfo::GetTypeAttr`, vea MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="3c72c-166">For additional information about `ITypeInfo::GetTypeAttr`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeComp">
      <MemberSignature Language="C#" Value="public void GetTypeComp (out System.Runtime.InteropServices.UCOMITypeComp ppTComp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetTypeComp([out] class System.Runtime.InteropServices.UCOMITypeComp&amp; ppTComp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMITypeInfo.GetTypeComp(System.Runtime.InteropServices.UCOMITypeComp@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetTypeComp (ByRef ppTComp As UCOMITypeComp)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetTypeComp([Runtime::InteropServices::Out] System::Runtime::InteropServices::UCOMITypeComp ^ % ppTComp);" />
      <MemberSignature Language="F#" Value="abstract member GetTypeComp :  -&gt; unit" Usage="uCOMITypeInfo.GetTypeComp ppTComp" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ppTComp" Type="System.Runtime.InteropServices.UCOMITypeComp" RefType="out" />
      </Parameters>
      <Docs>
        <param name="ppTComp"><span data-ttu-id="3c72c-167">Referencia a la interfaz <see langword="UCOMITypeComp" /> de la biblioteca de tipos contenedora, si la devolución es correcta.</span><span class="sxs-lookup"><span data-stu-id="3c72c-167">On successful return, a reference to the <see langword="UCOMITypeComp" /> of the containing type library.</span></span></param>
        <summary><span data-ttu-id="3c72c-168">Recupera la interfaz <see langword="ITypeComp" /> de la descripción de tipo, que permite a un compilador cliente enlazarse a los miembros de la descripción de tipo.</span><span class="sxs-lookup"><span data-stu-id="3c72c-168">Retrieves the <see langword="ITypeComp" /> interface for the type description, which enables a client compiler to bind to the type description's members.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c72c-169">Para obtener más información sobre `ITypeInfo::GetTypeComp`, vea MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="3c72c-169">For additional information about `ITypeInfo::GetTypeComp`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVarDesc">
      <MemberSignature Language="C#" Value="public void GetVarDesc (int index, out IntPtr ppVarDesc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetVarDesc(int32 index, [out] native int&amp; ppVarDesc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMITypeInfo.GetVarDesc(System.Int32,System.IntPtr@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetVarDesc (index As Integer, ByRef ppVarDesc As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetVarDesc(int index, [Runtime::InteropServices::Out] IntPtr % ppVarDesc);" />
      <MemberSignature Language="F#" Value="abstract member GetVarDesc : int *  -&gt; unit" Usage="uCOMITypeInfo.GetVarDesc (index, ppVarDesc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="ppVarDesc" Type="System.IntPtr" RefType="out" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="3c72c-170">Índice de la descripción de variable que se va a devolver.</span><span class="sxs-lookup"><span data-stu-id="3c72c-170">Index of the variable description to return.</span></span></param>
        <param name="ppVarDesc"><span data-ttu-id="3c72c-171">Referencia a la estructura <see langword="VARDESC" /> que describe la variable especificada, si la devolución es correcta.</span><span class="sxs-lookup"><span data-stu-id="3c72c-171">On successful return, a reference to the <see langword="VARDESC" /> that describes the specified variable.</span></span></param>
        <summary><span data-ttu-id="3c72c-172">Recupera una estructura <see langword="VARDESC" /> que describe la variable especificada.</span><span class="sxs-lookup"><span data-stu-id="3c72c-172">Retrieves a <see langword="VARDESC" /> structure that describes the specified variable.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c72c-173">Los valores de `ppVarDesc` puede obtenerse a través <xref:System.Runtime.InteropServices.Marshal.PtrToStructure%2A>.</span><span class="sxs-lookup"><span data-stu-id="3c72c-173">The values of `ppVarDesc` can be accessed through <xref:System.Runtime.InteropServices.Marshal.PtrToStructure%2A>.</span></span>  
  
 <span data-ttu-id="3c72c-174">Para obtener más información sobre `ITypeInfo::GetVarDesc`, vea MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="3c72c-174">For additional information about `ITypeInfo::GetVarDesc`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public void Invoke (object pvInstance, int memid, short wFlags, ref System.Runtime.InteropServices.DISPPARAMS pDispParams, out object pVarResult, out System.Runtime.InteropServices.EXCEPINFO pExcepInfo, out int puArgErr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Invoke(object pvInstance, int32 memid, int16 wFlags, valuetype System.Runtime.InteropServices.DISPPARAMS&amp; pDispParams, [out] object&amp; pVarResult, [out] valuetype System.Runtime.InteropServices.EXCEPINFO&amp; pExcepInfo, [out] int32&amp; puArgErr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMITypeInfo.Invoke(System.Object,System.Int32,System.Int16,System.Runtime.InteropServices.DISPPARAMS@,System.Object@,System.Runtime.InteropServices.EXCEPINFO@,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Invoke (pvInstance As Object, memid As Integer, wFlags As Short, ByRef pDispParams As DISPPARAMS, ByRef pVarResult As Object, ByRef pExcepInfo As EXCEPINFO, ByRef puArgErr As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invoke(System::Object ^ pvInstance, int memid, short wFlags, System::Runtime::InteropServices::DISPPARAMS % pDispParams, [Runtime::InteropServices::Out] System::Object ^ % pVarResult, [Runtime::InteropServices::Out] System::Runtime::InteropServices::EXCEPINFO % pExcepInfo, [Runtime::InteropServices::Out] int % puArgErr);" />
      <MemberSignature Language="F#" Value="abstract member Invoke : obj * int * int16 *  *  *  *  -&gt; unit" Usage="uCOMITypeInfo.Invoke (pvInstance, memid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pvInstance" Type="System.Object" />
        <Parameter Name="memid" Type="System.Int32" />
        <Parameter Name="wFlags" Type="System.Int16" />
        <Parameter Name="pDispParams" Type="System.Runtime.InteropServices.DISPPARAMS" RefType="ref" />
        <Parameter Name="pVarResult" Type="System.Object" RefType="out" />
        <Parameter Name="pExcepInfo" Type="System.Runtime.InteropServices.EXCEPINFO" RefType="out" />
        <Parameter Name="puArgErr" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pvInstance"><span data-ttu-id="3c72c-175">Referencia a la interfaz descrita por esta descripción de tipo.</span><span class="sxs-lookup"><span data-stu-id="3c72c-175">Reference to the interface described by this type description.</span></span></param>
        <param name="memid"><span data-ttu-id="3c72c-176">Identifica el miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="3c72c-176">Identifies the interface member.</span></span></param>
        <param name="wFlags"><span data-ttu-id="3c72c-177">Marcadores que describen el contexto de la llamada Invoke.</span><span class="sxs-lookup"><span data-stu-id="3c72c-177">Flags describing the context of the invoke call.</span></span></param>
        <param name="pDispParams"><span data-ttu-id="3c72c-178">Referencia a una estructura que contiene una matriz de argumentos, una matriz de identificadores de envío (DISPID) para argumentos con nombre y recuentos del número de elementos de cada matriz.</span><span class="sxs-lookup"><span data-stu-id="3c72c-178">Reference to a structure that contains an array of arguments, an array of DISPIDs for named arguments, and counts of the number of elements in each array.</span></span></param>
        <param name="pVarResult"><span data-ttu-id="3c72c-179">Referencia a la ubicación donde se va a almacenar el resultado.</span><span class="sxs-lookup"><span data-stu-id="3c72c-179">Reference to the location at which the result is to be stored.</span></span> <span data-ttu-id="3c72c-180">Si <paramref name="wFlags" /> especifica <see langword="DISPATCH_PROPERTYPUT" /> o <see langword="DISPATCH_PROPERTYPUTREF" />, <paramref name="pVarResult" /> se omite.</span><span class="sxs-lookup"><span data-stu-id="3c72c-180">If <paramref name="wFlags" /> specifies <see langword="DISPATCH_PROPERTYPUT" /> or <see langword="DISPATCH_PROPERTYPUTREF" />, <paramref name="pVarResult" /> is ignored.</span></span> <span data-ttu-id="3c72c-181">Se establece en <see langword="null" /> si no se desea ningún resultado.</span><span class="sxs-lookup"><span data-stu-id="3c72c-181">Set to <see langword="null" /> if no result is desired.</span></span></param>
        <param name="pExcepInfo"><span data-ttu-id="3c72c-182">Apunta a una estructura de información sobre excepciones, que sólo se rellena si se devuelve <see langword="DISP_E_EXCEPTION" />.</span><span class="sxs-lookup"><span data-stu-id="3c72c-182">Points to an exception information structure, which is filled in only if <see langword="DISP_E_EXCEPTION" /> is returned.</span></span></param>
        <param name="puArgErr"><span data-ttu-id="3c72c-183">Si <see langword="Invoke" /> devuelve <see langword="DISP_E_TYPEMISMATCH" />, <paramref name="puArgErr" /> indica el índice en <c>rgvarg</c> del argumento con el tipo incorrecto.</span><span class="sxs-lookup"><span data-stu-id="3c72c-183">If <see langword="Invoke" /> returns <see langword="DISP_E_TYPEMISMATCH" />, <paramref name="puArgErr" /> indicates the index within <c>rgvarg</c> of the argument with incorrect type.</span></span> <span data-ttu-id="3c72c-184">Si hay más de un argumento que devuelva un error, <paramref name="puArgErr" /> indica sólo el primer argumento con error.</span><span class="sxs-lookup"><span data-stu-id="3c72c-184">If more than one argument returns an error, <paramref name="puArgErr" /> indicates only the first argument with an error.</span></span></param>
        <summary><span data-ttu-id="3c72c-185">Invoca a un método u obtiene acceso a una propiedad de un objeto, que implementa la interfaz descrita por la descripción de tipo.</span><span class="sxs-lookup"><span data-stu-id="3c72c-185">Invokes a method, or accesses a property of an object, that implements the interface described by the type description.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c72c-186">Los valores de `pDispParams` puede obtenerse a través <xref:System.Runtime.InteropServices.Marshal.PtrToStructure%2A>.</span><span class="sxs-lookup"><span data-stu-id="3c72c-186">The values of `pDispParams` can be accessed through <xref:System.Runtime.InteropServices.Marshal.PtrToStructure%2A>.</span></span>  
  
 <span data-ttu-id="3c72c-187">Los valores válidos para `wFlags` son:</span><span class="sxs-lookup"><span data-stu-id="3c72c-187">Valid values for `wFlags` are:</span></span>  
  
|<span data-ttu-id="3c72c-188">Valor</span><span class="sxs-lookup"><span data-stu-id="3c72c-188">Value</span></span>|<span data-ttu-id="3c72c-189">Descripción</span><span class="sxs-lookup"><span data-stu-id="3c72c-189">Description</span></span>|  
|-----------|-----------------|  
|<span data-ttu-id="3c72c-190">DISPATCH_METHOD</span><span class="sxs-lookup"><span data-stu-id="3c72c-190">DISPATCH_METHOD</span></span>|<span data-ttu-id="3c72c-191">Se obtiene acceso al miembro como un método.</span><span class="sxs-lookup"><span data-stu-id="3c72c-191">The member is accessed as a method.</span></span> <span data-ttu-id="3c72c-192">Si existe ambigüedad, ambos, este y el `DISPATCH_PROPERTYGET` se puede establecer la marca.</span><span class="sxs-lookup"><span data-stu-id="3c72c-192">If there is ambiguity, both this and the `DISPATCH_PROPERTYGET` flag can be set.</span></span>|  
|<span data-ttu-id="3c72c-193">DISPATCH_PROPERTYGET</span><span class="sxs-lookup"><span data-stu-id="3c72c-193">DISPATCH_PROPERTYGET</span></span>|<span data-ttu-id="3c72c-194">El miembro se recupera como una propiedad o miembro de datos.</span><span class="sxs-lookup"><span data-stu-id="3c72c-194">The member is retrieved as a property or data member.</span></span>|  
|<span data-ttu-id="3c72c-195">DISPATCH_PROPERTYPUT</span><span class="sxs-lookup"><span data-stu-id="3c72c-195">DISPATCH_PROPERTYPUT</span></span>|<span data-ttu-id="3c72c-196">El miembro se cambia como una propiedad o miembro de datos.</span><span class="sxs-lookup"><span data-stu-id="3c72c-196">The member is changed as a property or data member.</span></span>|  
|<span data-ttu-id="3c72c-197">DISPATCH_PROPERTYPUTREF</span><span class="sxs-lookup"><span data-stu-id="3c72c-197">DISPATCH_PROPERTYPUTREF</span></span>|<span data-ttu-id="3c72c-198">El miembro se cambia utilizando una asignación de referencia, en lugar de una asignación de valor.</span><span class="sxs-lookup"><span data-stu-id="3c72c-198">The member is changed by using a reference assignment, rather than a value assignment.</span></span> <span data-ttu-id="3c72c-199">Este valor sólo es válido cuando la propiedad acepta una referencia a un objeto.</span><span class="sxs-lookup"><span data-stu-id="3c72c-199">This value is only valid when the property accepts a reference to an object.</span></span>|  
  
 <span data-ttu-id="3c72c-200">Para obtener más información sobre `ITypeInfo::Invoke`, vea MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="3c72c-200">For additional information about `ITypeInfo::Invoke`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseFuncDesc">
      <MemberSignature Language="C#" Value="public void ReleaseFuncDesc (IntPtr pFuncDesc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReleaseFuncDesc(native int pFuncDesc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMITypeInfo.ReleaseFuncDesc(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReleaseFuncDesc (pFuncDesc As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReleaseFuncDesc(IntPtr pFuncDesc);" />
      <MemberSignature Language="F#" Value="abstract member ReleaseFuncDesc : nativeint -&gt; unit" Usage="uCOMITypeInfo.ReleaseFuncDesc pFuncDesc" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pFuncDesc" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="pFuncDesc"><span data-ttu-id="3c72c-201">Referencia a la estructura <see langword="FUNCDESC" /> que se va a liberar.</span><span class="sxs-lookup"><span data-stu-id="3c72c-201">Reference to the <see langword="FUNCDESC" /> to release.</span></span></param>
        <summary><span data-ttu-id="3c72c-202">Libera una estructura <see cref="T:System.Runtime.InteropServices.FUNCDESC" /> previamente devuelta por <see cref="M:System.Runtime.InteropServices.UCOMITypeInfo.GetFuncDesc(System.Int32,System.IntPtr@)" />.</span><span class="sxs-lookup"><span data-stu-id="3c72c-202">Releases a <see cref="T:System.Runtime.InteropServices.FUNCDESC" /> previously returned by <see cref="M:System.Runtime.InteropServices.UCOMITypeInfo.GetFuncDesc(System.Int32,System.IntPtr@)" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c72c-203">Para obtener más información sobre `ITypeInfo::ReleaseFuncDesc`, vea MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="3c72c-203">For additional information about `ITypeInfo::ReleaseFuncDesc`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseTypeAttr">
      <MemberSignature Language="C#" Value="public void ReleaseTypeAttr (IntPtr pTypeAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReleaseTypeAttr(native int pTypeAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMITypeInfo.ReleaseTypeAttr(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReleaseTypeAttr (pTypeAttr As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReleaseTypeAttr(IntPtr pTypeAttr);" />
      <MemberSignature Language="F#" Value="abstract member ReleaseTypeAttr : nativeint -&gt; unit" Usage="uCOMITypeInfo.ReleaseTypeAttr pTypeAttr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pTypeAttr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="pTypeAttr"><span data-ttu-id="3c72c-204">Referencia a la estructura <see langword="TYPEATTR" /> que se va a liberar.</span><span class="sxs-lookup"><span data-stu-id="3c72c-204">Reference to the <see langword="TYPEATTR" /> to release.</span></span></param>
        <summary><span data-ttu-id="3c72c-205">Libera una estructura <see cref="T:System.Runtime.InteropServices.TYPEATTR" /> previamente devuelta por <see cref="M:System.Runtime.InteropServices.UCOMITypeInfo.GetTypeAttr(System.IntPtr@)" />.</span><span class="sxs-lookup"><span data-stu-id="3c72c-205">Releases a <see cref="T:System.Runtime.InteropServices.TYPEATTR" /> previously returned by <see cref="M:System.Runtime.InteropServices.UCOMITypeInfo.GetTypeAttr(System.IntPtr@)" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c72c-206">Para obtener más información sobre `ITypeInfo::ReleaseTypeAttr`, vea MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="3c72c-206">For additional information about `ITypeInfo::ReleaseTypeAttr`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseVarDesc">
      <MemberSignature Language="C#" Value="public void ReleaseVarDesc (IntPtr pVarDesc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReleaseVarDesc(native int pVarDesc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMITypeInfo.ReleaseVarDesc(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReleaseVarDesc (pVarDesc As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReleaseVarDesc(IntPtr pVarDesc);" />
      <MemberSignature Language="F#" Value="abstract member ReleaseVarDesc : nativeint -&gt; unit" Usage="uCOMITypeInfo.ReleaseVarDesc pVarDesc" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pVarDesc" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="pVarDesc"><span data-ttu-id="3c72c-207">Referencia a la estructura <see langword="VARDESC" /> que se va a liberar.</span><span class="sxs-lookup"><span data-stu-id="3c72c-207">Reference to the <see langword="VARDESC" /> to release.</span></span></param>
        <summary><span data-ttu-id="3c72c-208">Libera una estructura <see langword="VARDESC" /> previamente devuelta por <see cref="M:System.Runtime.InteropServices.UCOMITypeInfo.GetVarDesc(System.Int32,System.IntPtr@)" />.</span><span class="sxs-lookup"><span data-stu-id="3c72c-208">Releases a <see langword="VARDESC" /> previously returned by <see cref="M:System.Runtime.InteropServices.UCOMITypeInfo.GetVarDesc(System.Int32,System.IntPtr@)" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c72c-209">Para obtener más información sobre `ITypeInfo::ReleaseVarDesc`, vea MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="3c72c-209">For additional information about `ITypeInfo::ReleaseVarDesc`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
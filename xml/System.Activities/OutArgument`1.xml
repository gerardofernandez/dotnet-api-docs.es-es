<Type Name="OutArgument&lt;T&gt;" FullName="System.Activities.OutArgument&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="375dade1ae2aea0c4306143f1e5a54bb93c4e95a" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55393070" /></Metadata><TypeSignature Language="C#" Value="public sealed class OutArgument&lt;T&gt; : System.Activities.OutArgument" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OutArgument`1&lt;T&gt; extends System.Activities.OutArgument" />
  <TypeSignature Language="DocId" Value="T:System.Activities.OutArgument`1" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OutArgument(Of T)&#xA;Inherits OutArgument" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class OutArgument sealed : System::Activities::OutArgument" />
  <TypeSignature Language="F#" Value="type OutArgument&lt;'T&gt; = class&#xA;    inherit OutArgument" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Activities.OutArgument</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Activities.XamlIntegration.OutArgumentConverter))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("Expression")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.ValueSerializer(typeof(System.Activities.XamlIntegration.ArgumentValueSerializer))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="T"><span data-ttu-id="432b9-101">Tipo de datos de <see cref="T:System.Activities.OutArgument`1" />.</span><span class="sxs-lookup"><span data-stu-id="432b9-101">The data type of the <see cref="T:System.Activities.OutArgument`1" />.</span></span></typeparam>
    <summary><span data-ttu-id="432b9-102">Terminal de enlace que representa el flujo de datos de salida de una actividad.</span><span class="sxs-lookup"><span data-stu-id="432b9-102">A binding terminal that represents the flow of data out of an activity.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="432b9-103">El <xref:System.Activities.OutArgument%601> se utiliza para canalizar el flujo de datos de salida de una actividad.</span><span class="sxs-lookup"><span data-stu-id="432b9-103">An <xref:System.Activities.OutArgument%601> is used to flow data out of an activity.</span></span> <span data-ttu-id="432b9-104">Si la actividad es la actividad raíz de un flujo de trabajo, también se utiliza para el flujo de datos de salida del flujo de trabajo al host del flujo de trabajo.</span><span class="sxs-lookup"><span data-stu-id="432b9-104">If the activity is the root activity of a workflow, then it is also used to flow data out of the workflow to the workflow host.</span></span> <span data-ttu-id="432b9-105">En este ejemplo, se utiliza como la actividad raíz de un flujo de trabajo una actividad `Divide` personalizada que tiene dos argumentos de entrada y un argumento de salida.</span><span class="sxs-lookup"><span data-stu-id="432b9-105">In this example, a custom `Divide` activity that has two input arguments and one output argument is used as the root activity of a workflow.</span></span> <span data-ttu-id="432b9-106">La aplicación host pasa dos valores al flujo de trabajo y, a continuación, recupera el resultado de la división cuando se completa el flujo de trabajo.</span><span class="sxs-lookup"><span data-stu-id="432b9-106">The host application passes two values into the workflow and then retrieves the result of the division after the workflow completes.</span></span>  
  
 [!code-csharp[CFX_WorkflowInvokerExample#20](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowinvokerexample/cs/program.cs#20)]  
  
 <span data-ttu-id="432b9-107">La actividad `Divide` utiliza los argumentos para recibir los valores de entrada y proporcionar los valores calculados de resultado.</span><span class="sxs-lookup"><span data-stu-id="432b9-107">The `Divide` activity uses arguments to receive the input values and to provide the computed result values.</span></span> <span data-ttu-id="432b9-108">El `Remainder` <xref:System.Activities.OutArgument%601> se usa para pasar el resto de la división y el <xref:System.Activities.Activity%601.Result%2A> proporcionado por el argumento de salida <xref:System.Activities.Activity%601> las actividades derivadas se usa para pasar el cociente.</span><span class="sxs-lookup"><span data-stu-id="432b9-108">The `Remainder` <xref:System.Activities.OutArgument%601> is used to pass out the remainder of the division, and the <xref:System.Activities.Activity%601.Result%2A> output argument provided by <xref:System.Activities.Activity%601> derived activities is used to pass out the quotient.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="432b9-109">Si su actividad personalizada se deriva del objeto <xref:System.Activities.CodeActivity%601> genérico con un valor <xref:System.Int32> como su argumento de tipo genérico, al invocar la actividad con el método Invoke <xref:System.Activities.WorkflowInvoker>, devuelve un valor <xref:System.Int32>.</span><span class="sxs-lookup"><span data-stu-id="432b9-109">If your custom activity is derived from the generic <xref:System.Activities.CodeActivity%601> with an <xref:System.Int32> as its generic type argument, when you invoke the activity with the <xref:System.Activities.WorkflowInvoker> Invoke method, it returns an <xref:System.Int32> value.</span></span> <span data-ttu-id="432b9-110">Además, el <xref:System.Activities.CodeActivity%601.Execute%2A?displayProperty=nameWithType> método devolverá un <xref:System.Int32> valor en lugar de `void` y no es necesario establecer un valor devuelto.</span><span class="sxs-lookup"><span data-stu-id="432b9-110">In Addition, the <xref:System.Activities.CodeActivity%601.Execute%2A?displayProperty=nameWithType> method will return an <xref:System.Int32> value instead of `void` and you do not need to set a return value.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#120](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#120)]  
  
   
  
## Examples  
 <span data-ttu-id="432b9-111">En la siguiente muestra de código se presenta la creación de <xref:System.Activities.OutArgument%601>.</span><span class="sxs-lookup"><span data-stu-id="432b9-111">The following code sample demonstrates creating an <xref:System.Activities.OutArgument%601>.</span></span> <span data-ttu-id="432b9-112">Este ejemplo se ha extraído de la muestra Formatter.</span><span class="sxs-lookup"><span data-stu-id="432b9-112">This example is from the Formatter sample.</span></span>  
  
 [!code-csharp[wfs_Formatter#1](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_formatter/cs/program.cs#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="432b9-113">Inicializa una nueva instancia de la clase <see cref="T:System.Activities.OutArgument`1" />.</span><span class="sxs-lookup"><span data-stu-id="432b9-113">Initialize a new instance of the <see cref="T:System.Activities.OutArgument`1" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OutArgument ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.OutArgument`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OutArgument();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="432b9-114">Inicializa una nueva instancia de la clase <see cref="T:System.Activities.OutArgument`1" /> utilizando los valores predeterminados.</span><span class="sxs-lookup"><span data-stu-id="432b9-114">Initialize a new instance of the <see cref="T:System.Activities.OutArgument`1" /> class using default values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="432b9-115">En la siguiente muestra de código se presenta la creación de <xref:System.Activities.OutArgument%601>.</span><span class="sxs-lookup"><span data-stu-id="432b9-115">The following code sample demonstrates creating an <xref:System.Activities.OutArgument%601>.</span></span> <span data-ttu-id="432b9-116">Este ejemplo se ha extraído de la muestra Formatter.</span><span class="sxs-lookup"><span data-stu-id="432b9-116">This example is from the Formatter sample.</span></span>  
  
 [!code-csharp[wfs_Formatter#1](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_formatter/cs/program.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OutArgument (System.Activities.Activity&lt;System.Activities.Location&lt;T&gt;&gt; expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Activities.Activity`1&lt;class System.Activities.Location`1&lt;!T&gt;&gt; expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.OutArgument`1.#ctor(System.Activities.Activity{System.Activities.Location{`0}})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (expression As Activity(Of Location(Of T)))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OutArgument(System::Activities::Activity&lt;System::Activities::Location&lt;T&gt; ^&gt; ^ expression);" />
      <MemberSignature Language="F#" Value="new System.Activities.OutArgument&lt;'T&gt; : System.Activities.Activity&lt;System.Activities.Location&lt;'T&gt;&gt; -&gt; System.Activities.OutArgument&lt;'T&gt;" Usage="new System.Activities.OutArgument&lt;'T&gt; expression" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="expression" Type="System.Activities.Activity&lt;System.Activities.Location&lt;T&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="432b9-117">Valor del argumento.</span><span class="sxs-lookup"><span data-stu-id="432b9-117">The value of the argument.</span></span></param>
        <summary><span data-ttu-id="432b9-118">Inicializa una nueva instancia de la clase <see cref="T:System.Activities.OutArgument`1" /> utilizando la clase <see cref="T:System.Activities.Activity`1" /> especificada.</span><span class="sxs-lookup"><span data-stu-id="432b9-118">Initializes a new instance of the <see cref="T:System.Activities.OutArgument`1" /> class using the specified <see cref="T:System.Activities.Activity`1" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OutArgument (System.Activities.DelegateArgument delegateArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Activities.DelegateArgument delegateArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.OutArgument`1.#ctor(System.Activities.DelegateArgument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OutArgument(System::Activities::DelegateArgument ^ delegateArgument);" />
      <MemberSignature Language="F#" Value="new System.Activities.OutArgument&lt;'T&gt; : System.Activities.DelegateArgument -&gt; System.Activities.OutArgument&lt;'T&gt;" Usage="new System.Activities.OutArgument&lt;'T&gt; delegateArgument" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="delegateArgument" Type="System.Activities.DelegateArgument" />
      </Parameters>
      <Docs>
        <param name="delegateArgument"><span data-ttu-id="432b9-119">Valor del argumento.</span><span class="sxs-lookup"><span data-stu-id="432b9-119">The value of the argument.</span></span></param>
        <summary><span data-ttu-id="432b9-120">Inicializa una nueva instancia de la clase <see cref="T:System.Activities.OutArgument`1" /> utilizando la clase <see cref="T:System.Activities.DelegateArgument" /> especificada.</span><span class="sxs-lookup"><span data-stu-id="432b9-120">Initializes a new instance of the <see cref="T:System.Activities.OutArgument`1" /> class using the specified <see cref="T:System.Activities.DelegateArgument" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OutArgument (System.Activities.Variable variable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Activities.Variable variable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.OutArgument`1.#ctor(System.Activities.Variable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OutArgument(System::Activities::Variable ^ variable);" />
      <MemberSignature Language="F#" Value="new System.Activities.OutArgument&lt;'T&gt; : System.Activities.Variable -&gt; System.Activities.OutArgument&lt;'T&gt;" Usage="new System.Activities.OutArgument&lt;'T&gt; variable" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="variable" Type="System.Activities.Variable" />
      </Parameters>
      <Docs>
        <param name="variable"><span data-ttu-id="432b9-121">Valor del argumento.</span><span class="sxs-lookup"><span data-stu-id="432b9-121">The value of the argument.</span></span></param>
        <summary><span data-ttu-id="432b9-122">Inicializa una nueva instancia de la clase <see cref="T:System.Activities.OutArgument`1" /> utilizando la clase <see cref="T:System.Activities.Variable" /> especificada.</span><span class="sxs-lookup"><span data-stu-id="432b9-122">Initializes a new instance of the <see cref="T:System.Activities.OutArgument`1" /> class using the specified <see cref="T:System.Activities.Variable" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OutArgument (System.Linq.Expressions.Expression&lt;Func&lt;System.Activities.ActivityContext,T&gt;&gt; expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;class System.Activities.ActivityContext, !T&gt;&gt; expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.OutArgument`1.#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,`0}})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (expression As Expression(Of Func(Of ActivityContext, T)))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OutArgument(System::Linq::Expressions::Expression&lt;Func&lt;System::Activities::ActivityContext ^, T&gt; ^&gt; ^ expression);" />
      <MemberSignature Language="F#" Value="new System.Activities.OutArgument&lt;'T&gt; : System.Linq.Expressions.Expression&lt;Func&lt;System.Activities.ActivityContext, 'T&gt;&gt; -&gt; System.Activities.OutArgument&lt;'T&gt;" Usage="new System.Activities.OutArgument&lt;'T&gt; expression" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;System.Activities.ActivityContext,T&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="432b9-123">Valor del argumento.</span><span class="sxs-lookup"><span data-stu-id="432b9-123">The value of the argument.</span></span></param>
        <summary><span data-ttu-id="432b9-124">Inicializa una nueva instancia de la clase <see cref="T:System.Activities.OutArgument`1" /> utilizando la expresión especificada.</span><span class="sxs-lookup"><span data-stu-id="432b9-124">Initializes a new instance of the <see cref="T:System.Activities.OutArgument`1" /> class using the specified expression.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Expression">
      <MemberSignature Language="C#" Value="public System.Activities.Activity&lt;System.Activities.Location&lt;T&gt;&gt; Expression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Activity`1&lt;class System.Activities.Location`1&lt;!T&gt;&gt; Expression" />
      <MemberSignature Language="DocId" Value="P:System.Activities.OutArgument`1.Expression" />
      <MemberSignature Language="VB.NET" Value="Public Property Expression As Activity(Of Location(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::Activity&lt;System::Activities::Location&lt;T&gt; ^&gt; ^ Expression { System::Activities::Activity&lt;System::Activities::Location&lt;T&gt; ^&gt; ^ get(); void set(System::Activities::Activity&lt;System::Activities::Location&lt;T&gt; ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Expression : System.Activities.Activity&lt;System.Activities.Location&lt;'T&gt;&gt; with get, set" Usage="System.Activities.OutArgument&lt;'T&gt;.Expression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Activities.Activity&lt;System.Activities.Location&lt;T&gt;&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="432b9-125">Obtiene una clase <see cref="T:System.Activities.Activity`1" /> que representa el valor de esta clase <see cref="T:System.Activities.OutArgument`1" />.</span><span class="sxs-lookup"><span data-stu-id="432b9-125">Gets an <see cref="T:System.Activities.Activity`1" /> that represents the value of this <see cref="T:System.Activities.OutArgument`1" />.</span></span></summary>
        <value><span data-ttu-id="432b9-126">Actividad que representa el valor del argumento.</span><span class="sxs-lookup"><span data-stu-id="432b9-126">An activity that represents the value of the argument.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromDelegateArgument">
      <MemberSignature Language="C#" Value="public static System.Activities.OutArgument&lt;T&gt; FromDelegateArgument (System.Activities.DelegateArgument delegateArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Activities.OutArgument`1&lt;!T&gt; FromDelegateArgument(class System.Activities.DelegateArgument delegateArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.OutArgument`1.FromDelegateArgument(System.Activities.DelegateArgument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Activities::OutArgument&lt;T&gt; ^ FromDelegateArgument(System::Activities::DelegateArgument ^ delegateArgument);" />
      <MemberSignature Language="F#" Value="static member FromDelegateArgument : System.Activities.DelegateArgument -&gt; System.Activities.OutArgument&lt;'T&gt;" Usage="System.Activities.OutArgument&lt;'T&gt;.FromDelegateArgument delegateArgument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.OutArgument&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="delegateArgument" Type="System.Activities.DelegateArgument" />
      </Parameters>
      <Docs>
        <param name="delegateArgument"><span data-ttu-id="432b9-127">Valor del argumento.</span><span class="sxs-lookup"><span data-stu-id="432b9-127">The value of the argument.</span></span></param>
        <summary><span data-ttu-id="432b9-128">Inicializa y devuelve una nueva clase <see cref="T:System.Activities.OutArgument`1" /> construida usando la <see cref="T:System.Activities.DelegateArgument" /> especificada.</span><span class="sxs-lookup"><span data-stu-id="432b9-128">Initializes and returns a new <see cref="T:System.Activities.OutArgument`1" /> constructed using the specified <see cref="T:System.Activities.DelegateArgument" />.</span></span></summary>
        <returns><span data-ttu-id="432b9-129">Nuevo argumento.</span><span class="sxs-lookup"><span data-stu-id="432b9-129">The new argument.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromExpression">
      <MemberSignature Language="C#" Value="public static System.Activities.OutArgument&lt;T&gt; FromExpression (System.Activities.Activity&lt;System.Activities.Location&lt;T&gt;&gt; expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Activities.OutArgument`1&lt;!T&gt; FromExpression(class System.Activities.Activity`1&lt;class System.Activities.Location`1&lt;!T&gt;&gt; expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.OutArgument`1.FromExpression(System.Activities.Activity{System.Activities.Location{`0}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromExpression (expression As Activity(Of Location(Of T))) As OutArgument(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Activities::OutArgument&lt;T&gt; ^ FromExpression(System::Activities::Activity&lt;System::Activities::Location&lt;T&gt; ^&gt; ^ expression);" />
      <MemberSignature Language="F#" Value="static member FromExpression : System.Activities.Activity&lt;System.Activities.Location&lt;'T&gt;&gt; -&gt; System.Activities.OutArgument&lt;'T&gt;" Usage="System.Activities.OutArgument&lt;'T&gt;.FromExpression expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.OutArgument&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Activities.Activity&lt;System.Activities.Location&lt;T&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="432b9-130">Valor del argumento.</span><span class="sxs-lookup"><span data-stu-id="432b9-130">The value of the argument,</span></span></param>
        <summary><span data-ttu-id="432b9-131">Inicializa y devuelve una nueva clase <see cref="T:System.Activities.OutArgument`1" /> construida usando la <see cref="T:System.Activities.Activity`1" /> especificada.</span><span class="sxs-lookup"><span data-stu-id="432b9-131">Initializes and returns a new <see cref="T:System.Activities.OutArgument`1" /> constructed using the specified <see cref="T:System.Activities.Activity`1" />.</span></span></summary>
        <returns><span data-ttu-id="432b9-132">Nuevo argumento.</span><span class="sxs-lookup"><span data-stu-id="432b9-132">The new argument.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromVariable">
      <MemberSignature Language="C#" Value="public static System.Activities.OutArgument&lt;T&gt; FromVariable (System.Activities.Variable variable);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Activities.OutArgument`1&lt;!T&gt; FromVariable(class System.Activities.Variable variable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.OutArgument`1.FromVariable(System.Activities.Variable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Activities::OutArgument&lt;T&gt; ^ FromVariable(System::Activities::Variable ^ variable);" />
      <MemberSignature Language="F#" Value="static member FromVariable : System.Activities.Variable -&gt; System.Activities.OutArgument&lt;'T&gt;" Usage="System.Activities.OutArgument&lt;'T&gt;.FromVariable variable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.OutArgument&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="variable" Type="System.Activities.Variable" />
      </Parameters>
      <Docs>
        <param name="variable"><span data-ttu-id="432b9-133">Valor del argumento.</span><span class="sxs-lookup"><span data-stu-id="432b9-133">The value of the argument.</span></span></param>
        <summary><span data-ttu-id="432b9-134">Inicializa y devuelve una nueva clase <see cref="T:System.Activities.OutArgument`1" /> construida usando la <see cref="T:System.Activities.Variable" /> especificada.</span><span class="sxs-lookup"><span data-stu-id="432b9-134">Initializes and returns a new <see cref="T:System.Activities.OutArgument`1" /> constructed using the specified <see cref="T:System.Activities.Variable" />.</span></span></summary>
        <returns><span data-ttu-id="432b9-135">Nuevo argumento.</span><span class="sxs-lookup"><span data-stu-id="432b9-135">The new argument.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public T Get (System.Activities.ActivityContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !T Get(class System.Activities.ActivityContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.OutArgument`1.Get(System.Activities.ActivityContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function Get (context As ActivityContext) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; T Get(System::Activities::ActivityContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.Get : System.Activities.ActivityContext -&gt; 'T" Usage="outArgument.Get context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Activities.ActivityContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="432b9-136">Contexto de actividad actual.</span><span class="sxs-lookup"><span data-stu-id="432b9-136">The current activity context.</span></span></param>
        <summary><span data-ttu-id="432b9-137">Obtiene el valor de la clase <see cref="T:System.Activities.OutArgument`1" /> utilizando el contexto de actividad especificado.</span><span class="sxs-lookup"><span data-stu-id="432b9-137">Gets the value of the <see cref="T:System.Activities.OutArgument`1" /> using the specified activity context.</span></span></summary>
        <returns><span data-ttu-id="432b9-138">Valor del argumento.</span><span class="sxs-lookup"><span data-stu-id="432b9-138">The value of the argument.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLocation">
      <MemberSignature Language="C#" Value="public System.Activities.Location&lt;T&gt; GetLocation (System.Activities.ActivityContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.Location`1&lt;!T&gt; GetLocation(class System.Activities.ActivityContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.OutArgument`1.GetLocation(System.Activities.ActivityContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLocation (context As ActivityContext) As Location(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Activities::Location&lt;T&gt; ^ GetLocation(System::Activities::ActivityContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.GetLocation : System.Activities.ActivityContext -&gt; System.Activities.Location&lt;'T&gt;" Usage="outArgument.GetLocation context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Location&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Activities.ActivityContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="432b9-139">Contexto de actividad que contiene el valor de la variable.</span><span class="sxs-lookup"><span data-stu-id="432b9-139">The activity context that contains the value of the variable.</span></span></param>
        <summary><span data-ttu-id="432b9-140">Obtiene la ubicación del valor de la clase <see cref="T:System.Activities.OutArgument`1" />.</span><span class="sxs-lookup"><span data-stu-id="432b9-140">Gets the location of the value for the <see cref="T:System.Activities.OutArgument`1" />.</span></span></summary>
        <returns><span data-ttu-id="432b9-141">Referencia a la ubicación donde está almacenado el valor del argumento.</span><span class="sxs-lookup"><span data-stu-id="432b9-141">A reference to the location where the value of the argument is stored.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Activities.OutArgument&lt;T&gt; (System.Activities.Activity&lt;System.Activities.Location&lt;T&gt;&gt; expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class System.Activities.OutArgument`1&lt;!T&gt; op_Implicit(class System.Activities.Activity`1&lt;class System.Activities.Location`1&lt;!T&gt;&gt; expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.OutArgument`1.op_Implicit(System.Activities.Activity{System.Activities.Location{`0}})~System.Activities.OutArgument{`0}" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (expression As Activity(Of Location(Of T))) As OutArgument(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Activities::OutArgument&lt;T&gt; ^(System::Activities::Activity&lt;System::Activities::Location&lt;T&gt; ^&gt; ^ expression);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : System.Activities.Activity&lt;System.Activities.Location&lt;'T&gt;&gt; -&gt; System.Activities.OutArgument&lt;'T&gt;" Usage="System.Activities.OutArgument&lt;'T&gt;.op_Implicit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Activities.OutArgument&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Activities.Activity&lt;System.Activities.Location&lt;T&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="432b9-142">Valor del argumento.</span><span class="sxs-lookup"><span data-stu-id="432b9-142">The value of the argument,</span></span></param>
        <summary><span data-ttu-id="432b9-143">Inicializa y devuelve una nueva clase <see cref="T:System.Activities.OutArgument`1" /> construida usando la <see cref="T:System.Activities.Activity`1" /> especificada.</span><span class="sxs-lookup"><span data-stu-id="432b9-143">Initializes and returns a new <see cref="T:System.Activities.OutArgument`1" /> constructed using the specified <see cref="T:System.Activities.Activity`1" />.</span></span></summary>
        <returns><span data-ttu-id="432b9-144">Nuevo argumento.</span><span class="sxs-lookup"><span data-stu-id="432b9-144">The new argument.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Activities.OutArgument&lt;T&gt; (System.Activities.DelegateArgument delegateArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class System.Activities.OutArgument`1&lt;!T&gt; op_Implicit(class System.Activities.DelegateArgument delegateArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.OutArgument`1.op_Implicit(System.Activities.DelegateArgument)~System.Activities.OutArgument{`0}" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Activities::OutArgument&lt;T&gt; ^(System::Activities::DelegateArgument ^ delegateArgument);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : System.Activities.DelegateArgument -&gt; System.Activities.OutArgument&lt;'T&gt;" Usage="System.Activities.OutArgument&lt;'T&gt;.op_Implicit delegateArgument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Activities.OutArgument&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="delegateArgument" Type="System.Activities.DelegateArgument" />
      </Parameters>
      <Docs>
        <param name="delegateArgument"><span data-ttu-id="432b9-145">Valor del argumento.</span><span class="sxs-lookup"><span data-stu-id="432b9-145">The value of the argument.</span></span></param>
        <summary><span data-ttu-id="432b9-146">Inicializa y devuelve una nueva clase <see cref="T:System.Activities.OutArgument`1" /> construida usando la <see cref="T:System.Activities.DelegateArgument" /> especificada.</span><span class="sxs-lookup"><span data-stu-id="432b9-146">Initializes and returns a new <see cref="T:System.Activities.OutArgument`1" /> constructed using the specified <see cref="T:System.Activities.DelegateArgument" />.</span></span></summary>
        <returns><span data-ttu-id="432b9-147">Nuevo argumento.</span><span class="sxs-lookup"><span data-stu-id="432b9-147">The new argument.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="432b9-148">Se trata de una conversión implícita.</span><span class="sxs-lookup"><span data-stu-id="432b9-148">This is an implicit conversion.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Activities.OutArgument&lt;T&gt; (System.Activities.Variable variable);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class System.Activities.OutArgument`1&lt;!T&gt; op_Implicit(class System.Activities.Variable variable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.OutArgument`1.op_Implicit(System.Activities.Variable)~System.Activities.OutArgument{`0}" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Activities::OutArgument&lt;T&gt; ^(System::Activities::Variable ^ variable);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : System.Activities.Variable -&gt; System.Activities.OutArgument&lt;'T&gt;" Usage="System.Activities.OutArgument&lt;'T&gt;.op_Implicit variable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Activities.OutArgument&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="variable" Type="System.Activities.Variable" />
      </Parameters>
      <Docs>
        <param name="variable"><span data-ttu-id="432b9-149">Valor del argumento.</span><span class="sxs-lookup"><span data-stu-id="432b9-149">The value of the argument.</span></span></param>
        <summary><span data-ttu-id="432b9-150">Inicializa y devuelve una nueva clase <see cref="T:System.Activities.OutArgument`1" /> construida usando la <see cref="T:System.Activities.Variable" /> especificada.</span><span class="sxs-lookup"><span data-stu-id="432b9-150">Initializes and returns a new <see cref="T:System.Activities.OutArgument`1" /> constructed using the specified <see cref="T:System.Activities.Variable" />.</span></span></summary>
        <returns><span data-ttu-id="432b9-151">Nuevo argumento.</span><span class="sxs-lookup"><span data-stu-id="432b9-151">The new argument.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Set">
      <MemberSignature Language="C#" Value="public void Set (System.Activities.ActivityContext context, T value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Set(class System.Activities.ActivityContext context, !T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.OutArgument`1.Set(System.Activities.ActivityContext,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Set (context As ActivityContext, value As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Set(System::Activities::ActivityContext ^ context, T value);" />
      <MemberSignature Language="F#" Value="override this.Set : System.Activities.ActivityContext * 'T -&gt; unit" Usage="outArgument.Set (context, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Activities.ActivityContext" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="432b9-152">Contexto de actividad actual.</span><span class="sxs-lookup"><span data-stu-id="432b9-152">The current activity context.</span></span></param>
        <param name="value"><span data-ttu-id="432b9-153">Nuevo valor.</span><span class="sxs-lookup"><span data-stu-id="432b9-153">The new value.</span></span></param>
        <summary><span data-ttu-id="432b9-154">Establece el valor del argumento <see cref="T:System.Activities.OutArgument`1" /> utilizando el contexto de actividad especificado.</span><span class="sxs-lookup"><span data-stu-id="432b9-154">Sets the value of the <see cref="T:System.Activities.OutArgument`1" /> using the specified activity context.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
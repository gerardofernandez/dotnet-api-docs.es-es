<Type Name="RuntimeTransactionHandle" FullName="System.Activities.RuntimeTransactionHandle">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a3c668188ebefee9008dc9ca4217003bbe3c7bf5" /><Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="10/04/2018" /><Meta Name="ms.locfileid" Value="48629484" /></Metadata><TypeSignature Language="C#" Value="public sealed class RuntimeTransactionHandle : System.Activities.Handle, System.Activities.IExecutionProperty, System.Activities.IPropertyRegistrationCallback" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit RuntimeTransactionHandle extends System.Activities.Handle implements class System.Activities.IExecutionProperty, class System.Activities.IPropertyRegistrationCallback" />
  <TypeSignature Language="DocId" Value="T:System.Activities.RuntimeTransactionHandle" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class RuntimeTransactionHandle&#xA;Inherits Handle&#xA;Implements IExecutionProperty, IPropertyRegistrationCallback" />
  <TypeSignature Language="C++ CLI" Value="public ref class RuntimeTransactionHandle sealed : System::Activities::Handle, System::Activities::IExecutionProperty, System::Activities::IPropertyRegistrationCallback" />
  <TypeSignature Language="F#" Value="type RuntimeTransactionHandle = class&#xA;    inherit Handle&#xA;    interface IExecutionProperty&#xA;    interface IPropertyRegistrationCallback" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Activities.Handle</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Activities.IExecutionProperty</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Activities.IPropertyRegistrationCallback</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.Serialization.DataContract</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="d1876-101">Proporciona acceso a la transacción en tiempo de ejecución de una instancia de flujo de trabajo.</span><span class="sxs-lookup"><span data-stu-id="d1876-101">Provides access to the run-time transaction in a workflow instance.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d1876-102">Inicializa una nueva instancia de la clase <see cref="T:System.Activities.RuntimeTransactionHandle" />.</span><span class="sxs-lookup"><span data-stu-id="d1876-102">Initializes a new instance of the <see cref="T:System.Activities.RuntimeTransactionHandle" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RuntimeTransactionHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.RuntimeTransactionHandle.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RuntimeTransactionHandle();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d1876-103">Inicializa una nueva instancia de la clase <see cref="T:System.Activities.RuntimeTransactionHandle" />.</span><span class="sxs-lookup"><span data-stu-id="d1876-103">Initializes a new instance of the <see cref="T:System.Activities.RuntimeTransactionHandle" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RuntimeTransactionHandle (System.Transactions.Transaction rootTransaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Transactions.Transaction rootTransaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.RuntimeTransactionHandle.#ctor(System.Transactions.Transaction)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rootTransaction As Transaction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RuntimeTransactionHandle(System::Transactions::Transaction ^ rootTransaction);" />
      <MemberSignature Language="F#" Value="new System.Activities.RuntimeTransactionHandle : System.Transactions.Transaction -&gt; System.Activities.RuntimeTransactionHandle" Usage="new System.Activities.RuntimeTransactionHandle rootTransaction" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rootTransaction" Type="System.Transactions.Transaction" />
      </Parameters>
      <Docs>
        <param name="rootTransaction"><span data-ttu-id="d1876-104">Transacción raíz.</span><span class="sxs-lookup"><span data-stu-id="d1876-104">The root transaction.</span></span></param>
        <summary><span data-ttu-id="d1876-105">Inicializa una nueva instancia de la clase <see cref="T:System.Activities.RuntimeTransactionHandle" /> usando la transacción raíz especificada.</span><span class="sxs-lookup"><span data-stu-id="d1876-105">Initializes a new instance of the <see cref="T:System.Activities.RuntimeTransactionHandle" /> class using the specified root transaction.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AbortInstanceOnTransactionFailure">
      <MemberSignature Language="C#" Value="public bool AbortInstanceOnTransactionFailure { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AbortInstanceOnTransactionFailure" />
      <MemberSignature Language="DocId" Value="P:System.Activities.RuntimeTransactionHandle.AbortInstanceOnTransactionFailure" />
      <MemberSignature Language="VB.NET" Value="Public Property AbortInstanceOnTransactionFailure As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AbortInstanceOnTransactionFailure { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AbortInstanceOnTransactionFailure : bool with get, set" Usage="System.Activities.RuntimeTransactionHandle.AbortInstanceOnTransactionFailure" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d1876-106">Obtiene o establece si se debe anular la instancia de flujo de trabajo en caso de que se produzca un error en la transacción.</span><span class="sxs-lookup"><span data-stu-id="d1876-106">Gets or sets whether the workflow instance should be aborted if the transaction fails.</span></span></summary>
        <value><span data-ttu-id="d1876-107"><see langword="true" /> si se debe anular la instancia de flujo de trabajo en caso de que se produzca un error en la transacción; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d1876-107"><see langword="true" /> if the workflow instance should be aborted if the transaction fails; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1876-108">Si <xref:System.Activities.RuntimeTransactionHandle.AbortInstanceOnTransactionFailure%2A> es `false`, da como resultado un error en la transacción en la excepción que produce el error se propague como normal.</span><span class="sxs-lookup"><span data-stu-id="d1876-108">If <xref:System.Activities.RuntimeTransactionHandle.AbortInstanceOnTransactionFailure%2A> is `false`, transaction failure results in the exception that causes the failure to be propagated as normal.</span></span> <span data-ttu-id="d1876-109">El valor predeterminado de <xref:System.Activities.RuntimeTransactionHandle.AbortInstanceOnTransactionFailure%2A> es `true`.</span><span class="sxs-lookup"><span data-stu-id="d1876-109">The default value for <xref:System.Activities.RuntimeTransactionHandle.AbortInstanceOnTransactionFailure%2A> is `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CompleteTransaction">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d1876-110">Completa la transacción en tiempo de ejecución actual.</span><span class="sxs-lookup"><span data-stu-id="d1876-110">Completes the current run-time transaction.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CompleteTransaction">
      <MemberSignature Language="C#" Value="public void CompleteTransaction (System.Activities.NativeActivityContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CompleteTransaction(class System.Activities.NativeActivityContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.RuntimeTransactionHandle.CompleteTransaction(System.Activities.NativeActivityContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CompleteTransaction (context As NativeActivityContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CompleteTransaction(System::Activities::NativeActivityContext ^ context);" />
      <MemberSignature Language="F#" Value="member this.CompleteTransaction : System.Activities.NativeActivityContext -&gt; unit" Usage="runtimeTransactionHandle.CompleteTransaction context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Activities.NativeActivityContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="d1876-111">Entorno de ejecución actual.</span><span class="sxs-lookup"><span data-stu-id="d1876-111">The current execution environment.</span></span></param>
        <summary><span data-ttu-id="d1876-112">Completa la transacción en tiempo de ejecución actual.</span><span class="sxs-lookup"><span data-stu-id="d1876-112">Completes the current run-time transaction.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompleteTransaction">
      <MemberSignature Language="C#" Value="public void CompleteTransaction (System.Activities.NativeActivityContext context, System.Activities.BookmarkCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CompleteTransaction(class System.Activities.NativeActivityContext context, class System.Activities.BookmarkCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.RuntimeTransactionHandle.CompleteTransaction(System.Activities.NativeActivityContext,System.Activities.BookmarkCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CompleteTransaction (context As NativeActivityContext, callback As BookmarkCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CompleteTransaction(System::Activities::NativeActivityContext ^ context, System::Activities::BookmarkCallback ^ callback);" />
      <MemberSignature Language="F#" Value="member this.CompleteTransaction : System.Activities.NativeActivityContext * System.Activities.BookmarkCallback -&gt; unit" Usage="runtimeTransactionHandle.CompleteTransaction (context, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Activities.NativeActivityContext" />
        <Parameter Name="callback" Type="System.Activities.BookmarkCallback" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="d1876-113">Entorno de ejecución actual.</span><span class="sxs-lookup"><span data-stu-id="d1876-113">The current execution environment.</span></span></param>
        <param name="callback"><span data-ttu-id="d1876-114">La devolución de llamada del marcador que se debe invocar cuando finaliza la transacción.</span><span class="sxs-lookup"><span data-stu-id="d1876-114">The bookmark callback to be invoked when the transaction completes.</span></span></param>
        <summary><span data-ttu-id="d1876-115">Completa la transacción en tiempo de ejecución actual y programa la devolución de llamada del marcador cuando la transacción ha finalizado.</span><span class="sxs-lookup"><span data-stu-id="d1876-115">Completes the current run-time transaction and schedules the bookmark callback when the transaction is complete.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCurrentTransaction">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d1876-116">Devuelve una referencia a la transacción en tiempo de ejecución actual.</span><span class="sxs-lookup"><span data-stu-id="d1876-116">Returns a reference to the current run-time transaction.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCurrentTransaction">
      <MemberSignature Language="C#" Value="public System.Transactions.Transaction GetCurrentTransaction (System.Activities.AsyncCodeActivityContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Transactions.Transaction GetCurrentTransaction(class System.Activities.AsyncCodeActivityContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.RuntimeTransactionHandle.GetCurrentTransaction(System.Activities.AsyncCodeActivityContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentTransaction (context As AsyncCodeActivityContext) As Transaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Transactions::Transaction ^ GetCurrentTransaction(System::Activities::AsyncCodeActivityContext ^ context);" />
      <MemberSignature Language="F#" Value="member this.GetCurrentTransaction : System.Activities.AsyncCodeActivityContext -&gt; System.Transactions.Transaction" Usage="runtimeTransactionHandle.GetCurrentTransaction context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Transactions.Transaction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Activities.AsyncCodeActivityContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="d1876-117">Entorno de ejecución actual.</span><span class="sxs-lookup"><span data-stu-id="d1876-117">The current execution environment.</span></span></param>
        <summary><span data-ttu-id="d1876-118">Devuelve una referencia a la transacción en tiempo de ejecución actual.</span><span class="sxs-lookup"><span data-stu-id="d1876-118">Returns a reference to the current run-time transaction.</span></span></summary>
        <returns><span data-ttu-id="d1876-119">Transacción actual.</span><span class="sxs-lookup"><span data-stu-id="d1876-119">The current transaction.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentTransaction">
      <MemberSignature Language="C#" Value="public System.Transactions.Transaction GetCurrentTransaction (System.Activities.CodeActivityContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Transactions.Transaction GetCurrentTransaction(class System.Activities.CodeActivityContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.RuntimeTransactionHandle.GetCurrentTransaction(System.Activities.CodeActivityContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentTransaction (context As CodeActivityContext) As Transaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Transactions::Transaction ^ GetCurrentTransaction(System::Activities::CodeActivityContext ^ context);" />
      <MemberSignature Language="F#" Value="member this.GetCurrentTransaction : System.Activities.CodeActivityContext -&gt; System.Transactions.Transaction" Usage="runtimeTransactionHandle.GetCurrentTransaction context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Transactions.Transaction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Activities.CodeActivityContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="d1876-120">Entorno de ejecución actual.</span><span class="sxs-lookup"><span data-stu-id="d1876-120">The current execution environment.</span></span></param>
        <summary><span data-ttu-id="d1876-121">Devuelve una referencia a la transacción en tiempo de ejecución actual.</span><span class="sxs-lookup"><span data-stu-id="d1876-121">Returns a reference to the current run-time transaction.</span></span></summary>
        <returns><span data-ttu-id="d1876-122">Transacción actual.</span><span class="sxs-lookup"><span data-stu-id="d1876-122">The current transaction.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentTransaction">
      <MemberSignature Language="C#" Value="public System.Transactions.Transaction GetCurrentTransaction (System.Activities.NativeActivityContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Transactions.Transaction GetCurrentTransaction(class System.Activities.NativeActivityContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.RuntimeTransactionHandle.GetCurrentTransaction(System.Activities.NativeActivityContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentTransaction (context As NativeActivityContext) As Transaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Transactions::Transaction ^ GetCurrentTransaction(System::Activities::NativeActivityContext ^ context);" />
      <MemberSignature Language="F#" Value="member this.GetCurrentTransaction : System.Activities.NativeActivityContext -&gt; System.Transactions.Transaction" Usage="runtimeTransactionHandle.GetCurrentTransaction context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Transactions.Transaction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Activities.NativeActivityContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="d1876-123">Entorno de ejecución actual.</span><span class="sxs-lookup"><span data-stu-id="d1876-123">The current execution environment.</span></span></param>
        <summary><span data-ttu-id="d1876-124">Devuelve una referencia a la transacción en tiempo de ejecución actual.</span><span class="sxs-lookup"><span data-stu-id="d1876-124">Returns a reference to the current run-time transaction.</span></span></summary>
        <returns><span data-ttu-id="d1876-125">Transacción en tiempo de ejecución actual.</span><span class="sxs-lookup"><span data-stu-id="d1876-125">The current run-time transaction.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnInitialize">
      <MemberSignature Language="C#" Value="protected override void OnInitialize (System.Activities.HandleInitializationContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnInitialize(class System.Activities.HandleInitializationContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.RuntimeTransactionHandle.OnInitialize(System.Activities.HandleInitializationContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnInitialize (context As HandleInitializationContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnInitialize(System::Activities::HandleInitializationContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.OnInitialize : System.Activities.HandleInitializationContext -&gt; unit" Usage="runtimeTransactionHandle.OnInitialize context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Activities.HandleInitializationContext" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnUninitialize">
      <MemberSignature Language="C#" Value="protected override void OnUninitialize (System.Activities.HandleInitializationContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnUninitialize(class System.Activities.HandleInitializationContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.RuntimeTransactionHandle.OnUninitialize(System.Activities.HandleInitializationContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnUninitialize (context As HandleInitializationContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnUninitialize(System::Activities::HandleInitializationContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.OnUninitialize : System.Activities.HandleInitializationContext -&gt; unit" Usage="runtimeTransactionHandle.OnUninitialize context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Activities.HandleInitializationContext" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestTransactionContext">
      <MemberSignature Language="C#" Value="public void RequestTransactionContext (System.Activities.NativeActivityContext context, Action&lt;System.Activities.NativeActivityTransactionContext,object&gt; callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RequestTransactionContext(class System.Activities.NativeActivityContext context, class System.Action`2&lt;class System.Activities.NativeActivityTransactionContext, object&gt; callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.RuntimeTransactionHandle.RequestTransactionContext(System.Activities.NativeActivityContext,System.Action{System.Activities.NativeActivityTransactionContext,System.Object},System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RequestTransactionContext (context As NativeActivityContext, callback As Action(Of NativeActivityTransactionContext, Object), state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RequestTransactionContext(System::Activities::NativeActivityContext ^ context, Action&lt;System::Activities::NativeActivityTransactionContext ^, System::Object ^&gt; ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.RequestTransactionContext : System.Activities.NativeActivityContext * Action&lt;System.Activities.NativeActivityTransactionContext, obj&gt; * obj -&gt; unit" Usage="runtimeTransactionHandle.RequestTransactionContext (context, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Activities.NativeActivityContext" />
        <Parameter Name="callback" Type="System.Action&lt;System.Activities.NativeActivityTransactionContext,System.Object&gt;" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="d1876-126">Entorno de ejecución actual.</span><span class="sxs-lookup"><span data-stu-id="d1876-126">The current execution environment.</span></span></param>
        <param name="callback"><span data-ttu-id="d1876-127">Método al que se debe llamar cuando se crea la clase <see cref="T:System.Activities.NativeActivityTransactionContext" />.</span><span class="sxs-lookup"><span data-stu-id="d1876-127">The method to be called when the <see cref="T:System.Activities.NativeActivityTransactionContext" /> is created.</span></span></param>
        <param name="state"><span data-ttu-id="d1876-128">Estado opcional proporcionado por el usuario que contiene información sobre la solicitud.</span><span class="sxs-lookup"><span data-stu-id="d1876-128">An optional user-provided state that contains information about the request.</span></span></param>
        <summary><span data-ttu-id="d1876-129">Inicia la creación de una clase <see cref="T:System.Activities.NativeActivityTransactionContext" /> para utilizarla con una nueva transacción.</span><span class="sxs-lookup"><span data-stu-id="d1876-129">Initiates the creation of a <see cref="T:System.Activities.NativeActivityTransactionContext" /> for use with a new transaction.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1876-130">Este método se utiliza cuando la actividad crea una nueva transacción para su uso por el runtime.</span><span class="sxs-lookup"><span data-stu-id="d1876-130">This method is used when the activity creates a new transaction for use by the runtime.</span></span> <span data-ttu-id="d1876-131">El flujo de trabajo podría conservarse potencialmente una o más veces antes de llamar a la devolución de llamada.</span><span class="sxs-lookup"><span data-stu-id="d1876-131">The workflow could potentially persist one or more times before the callback is called.</span></span> <span data-ttu-id="d1876-132">Este método permite a los ámbitos de transacción de varias bifurcaciones de un paralelo poner en cola solicitudes simultáneas sin bloquear mutuamente su conservación cuando finaliza la transacción.</span><span class="sxs-lookup"><span data-stu-id="d1876-132">This method allows transaction scopes in multiple branches of a parallel to queue up simultaneous requests without blocking each other from persisting at the completion of the transaction.</span></span> <span data-ttu-id="d1876-133">Para evitar errores si se conserva el flujo de trabajo, asegúrese de que se puede serializar el objeto de estado.</span><span class="sxs-lookup"><span data-stu-id="d1876-133">To avoid errors if the workflow persists, make sure the state object can be serialized.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequireTransactionContext">
      <MemberSignature Language="C#" Value="public void RequireTransactionContext (System.Activities.NativeActivityContext context, Action&lt;System.Activities.NativeActivityTransactionContext,object&gt; callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RequireTransactionContext(class System.Activities.NativeActivityContext context, class System.Action`2&lt;class System.Activities.NativeActivityTransactionContext, object&gt; callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.RuntimeTransactionHandle.RequireTransactionContext(System.Activities.NativeActivityContext,System.Action{System.Activities.NativeActivityTransactionContext,System.Object},System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RequireTransactionContext (context As NativeActivityContext, callback As Action(Of NativeActivityTransactionContext, Object), state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RequireTransactionContext(System::Activities::NativeActivityContext ^ context, Action&lt;System::Activities::NativeActivityTransactionContext ^, System::Object ^&gt; ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.RequireTransactionContext : System.Activities.NativeActivityContext * Action&lt;System.Activities.NativeActivityTransactionContext, obj&gt; * obj -&gt; unit" Usage="runtimeTransactionHandle.RequireTransactionContext (context, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Activities.NativeActivityContext" />
        <Parameter Name="callback" Type="System.Action&lt;System.Activities.NativeActivityTransactionContext,System.Object&gt;" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="d1876-134">Entorno de ejecución actual.</span><span class="sxs-lookup"><span data-stu-id="d1876-134">The current execution environment.</span></span></param>
        <param name="callback"><span data-ttu-id="d1876-135">Método al que se debe llamar cuando se crea la clase <see cref="T:System.Activities.NativeActivityTransactionContext" />.</span><span class="sxs-lookup"><span data-stu-id="d1876-135">The method to be called when the <see cref="T:System.Activities.NativeActivityTransactionContext" /> is created.</span></span></param>
        <param name="state"><span data-ttu-id="d1876-136">Estado opcional proporcionado por el usuario que contiene información sobre la solicitud.</span><span class="sxs-lookup"><span data-stu-id="d1876-136">An optional user-provided state that contains information about the request.</span></span></param>
        <summary><span data-ttu-id="d1876-137">Inicia la creación de un <see cref="T:System.Activities.NativeActivityTransactionContext" /> para su uso con una transacción existente.</span><span class="sxs-lookup"><span data-stu-id="d1876-137">Initiates the creation of a <see cref="T:System.Activities.NativeActivityTransactionContext" /> for use with an existing transaction.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1876-138">Este método se utiliza cuando la actividad tiene una transacción que exige su uso al runtime.</span><span class="sxs-lookup"><span data-stu-id="d1876-138">This method is used when the activity has a transaction that it requires the runtime to use.</span></span> <span data-ttu-id="d1876-139">El flujo de trabajo no puede conservarse entre una llamada al método <xref:System.Activities.RuntimeTransactionHandle.RequireTransactionContext%2A> y a su devolución de llamada subsiguiente.</span><span class="sxs-lookup"><span data-stu-id="d1876-139">The workflow cannot persist between a call to <xref:System.Activities.RuntimeTransactionHandle.RequireTransactionContext%2A> and the subsequent callback.</span></span> <span data-ttu-id="d1876-140">No se permite llamar de nuevo al método <xref:System.Activities.RuntimeTransactionHandle.RequireTransactionContext%2A> antes de que finalice la primera llamada y todas las llamadas posteriores a ella provocan excepciones.</span><span class="sxs-lookup"><span data-stu-id="d1876-140">Calling <xref:System.Activities.RuntimeTransactionHandle.RequireTransactionContext%2A> again before the first call completes is not allowed and all calls after the first call result in exceptions.</span></span> <span data-ttu-id="d1876-141">Este método permite proporcionar al tiempo de ejecución transacciones procedentes del host sin arriesgar ningún punto de conservación intermedio.</span><span class="sxs-lookup"><span data-stu-id="d1876-141">This method allows transactions flowed in from the host to be provided to the runtime without risking an intermediate persistence point.</span></span> <span data-ttu-id="d1876-142">El objeto de estado que se puede serializar no es necesario porque se garantiza que la instancia no se conserva cuando se usa este método.</span><span class="sxs-lookup"><span data-stu-id="d1876-142">The state object that can be serialized is not necessary because the instance is guaranteed not to persist when this method is used.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SuppressTransaction">
      <MemberSignature Language="C#" Value="public bool SuppressTransaction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SuppressTransaction" />
      <MemberSignature Language="DocId" Value="P:System.Activities.RuntimeTransactionHandle.SuppressTransaction" />
      <MemberSignature Language="VB.NET" Value="Public Property SuppressTransaction As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SuppressTransaction { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SuppressTransaction : bool with get, set" Usage="System.Activities.RuntimeTransactionHandle.SuppressTransaction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d1876-143">Obtiene o establece un valor que indica si se suprime esta transacción en tiempo de ejecución.</span><span class="sxs-lookup"><span data-stu-id="d1876-143">Gets or sets a value that indicates whether this run-time transaction is suppressed.</span></span></summary>
        <value><span data-ttu-id="d1876-144"><see langword="true" /> si se suprime la transacción en tiempo de ejecución; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d1876-144"><see langword="true" /> if the run-time transaction is suppressed; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Activities.IExecutionProperty.CleanupWorkflowThread">
      <MemberSignature Language="C#" Value="void IExecutionProperty.CleanupWorkflowThread ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Activities.IExecutionProperty.CleanupWorkflowThread() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.RuntimeTransactionHandle.System#Activities#IExecutionProperty#CleanupWorkflowThread" />
      <MemberSignature Language="VB.NET" Value="Sub CleanupWorkflowThread () Implements IExecutionProperty.CleanupWorkflowThread" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Activities.IExecutionProperty.CleanupWorkflowThread() = System::Activities::IExecutionProperty::CleanupWorkflowThread;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Activities.IExecutionProperty.CleanupWorkflowThread</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d1876-145">Para una descripción de este miembro, vea <see cref="M:System.Activities.IExecutionProperty.CleanupWorkflowThread" />.</span><span class="sxs-lookup"><span data-stu-id="d1876-145">For a description of this member, see <see cref="M:System.Activities.IExecutionProperty.CleanupWorkflowThread" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Activities.IExecutionProperty.SetupWorkflowThread">
      <MemberSignature Language="C#" Value="void IExecutionProperty.SetupWorkflowThread ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Activities.IExecutionProperty.SetupWorkflowThread() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.RuntimeTransactionHandle.System#Activities#IExecutionProperty#SetupWorkflowThread" />
      <MemberSignature Language="VB.NET" Value="Sub SetupWorkflowThread () Implements IExecutionProperty.SetupWorkflowThread" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Activities.IExecutionProperty.SetupWorkflowThread() = System::Activities::IExecutionProperty::SetupWorkflowThread;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Activities.IExecutionProperty.SetupWorkflowThread</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d1876-146">Para una descripción de este miembro, vea <see cref="M:System.Activities.IExecutionProperty.SetupWorkflowThread" />.</span><span class="sxs-lookup"><span data-stu-id="d1876-146">For a description of this member, see <see cref="M:System.Activities.IExecutionProperty.SetupWorkflowThread" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Activities.IPropertyRegistrationCallback.Register">
      <MemberSignature Language="C#" Value="void IPropertyRegistrationCallback.Register (System.Activities.RegistrationContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Activities.IPropertyRegistrationCallback.Register(class System.Activities.RegistrationContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.RuntimeTransactionHandle.System#Activities#IPropertyRegistrationCallback#Register(System.Activities.RegistrationContext)" />
      <MemberSignature Language="VB.NET" Value="Sub Register (context As RegistrationContext) Implements IPropertyRegistrationCallback.Register" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Activities.IPropertyRegistrationCallback.Register(System::Activities::RegistrationContext ^ context) = System::Activities::IPropertyRegistrationCallback::Register;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Activities.IPropertyRegistrationCallback.Register(System.Activities.RegistrationContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Activities.RegistrationContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="d1876-147">Para obtener una descripción de este parámetro, vea el método <see cref="M:System.Activities.IPropertyRegistrationCallback.Register(System.Activities.RegistrationContext)" />.</span><span class="sxs-lookup"><span data-stu-id="d1876-147">For a description of this parameter, see <see cref="M:System.Activities.IPropertyRegistrationCallback.Register(System.Activities.RegistrationContext)" />.</span></span></param>
        <summary><span data-ttu-id="d1876-148">Para una descripción de este miembro, vea <see cref="M:System.Activities.IPropertyRegistrationCallback.Register(System.Activities.RegistrationContext)" />.</span><span class="sxs-lookup"><span data-stu-id="d1876-148">For a description of this member, see <see cref="M:System.Activities.IPropertyRegistrationCallback.Register(System.Activities.RegistrationContext)" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Activities.IPropertyRegistrationCallback.Unregister">
      <MemberSignature Language="C#" Value="void IPropertyRegistrationCallback.Unregister (System.Activities.RegistrationContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Activities.IPropertyRegistrationCallback.Unregister(class System.Activities.RegistrationContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.RuntimeTransactionHandle.System#Activities#IPropertyRegistrationCallback#Unregister(System.Activities.RegistrationContext)" />
      <MemberSignature Language="VB.NET" Value="Sub Unregister (context As RegistrationContext) Implements IPropertyRegistrationCallback.Unregister" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Activities.IPropertyRegistrationCallback.Unregister(System::Activities::RegistrationContext ^ context) = System::Activities::IPropertyRegistrationCallback::Unregister;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Activities.IPropertyRegistrationCallback.Unregister(System.Activities.RegistrationContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Activities.RegistrationContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="d1876-149">Para obtener una descripción de este parámetro, vea el método <see cref="M:System.Activities.IPropertyRegistrationCallback.Unregister(System.Activities.RegistrationContext)" />.</span><span class="sxs-lookup"><span data-stu-id="d1876-149">For a description of this parameter, see <see cref="M:System.Activities.IPropertyRegistrationCallback.Unregister(System.Activities.RegistrationContext)" />.</span></span></param>
        <summary><span data-ttu-id="d1876-150">Para una descripción de este miembro, vea <see cref="M:System.Activities.IPropertyRegistrationCallback.Unregister(System.Activities.RegistrationContext)" />.</span><span class="sxs-lookup"><span data-stu-id="d1876-150">For a description of this member, see <see cref="M:System.Activities.IPropertyRegistrationCallback.Unregister(System.Activities.RegistrationContext)" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
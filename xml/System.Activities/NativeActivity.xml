<Type Name="NativeActivity" FullName="System.Activities.NativeActivity">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c011cc9b561c2747a21c7635385dd721b9cb1503" /><Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="11/29/2018" /><Meta Name="ms.locfileid" Value="52601104" /></Metadata><TypeSignature Language="C#" Value="public abstract class NativeActivity : System.Activities.Activity" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit NativeActivity extends System.Activities.Activity" />
  <TypeSignature Language="DocId" Value="T:System.Activities.NativeActivity" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class NativeActivity&#xA;Inherits Activity" />
  <TypeSignature Language="C++ CLI" Value="public ref class NativeActivity abstract : System::Activities::Activity" />
  <TypeSignature Language="F#" Value="type NativeActivity = class&#xA;    inherit Activity" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Activities.Activity</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="b9470-101">Clase base abstracta para actividades personalizadas que implementan lógica de ejecución mediante el método <see cref="M:System.Activities.NativeActivity.Execute(System.Activities.NativeActivityContext)" />, que tiene acceso total a las características del runtime.</span><span class="sxs-lookup"><span data-stu-id="b9470-101">Abstract base class for custom activities that implement execution logic using the <see cref="M:System.Activities.NativeActivity.Execute(System.Activities.NativeActivityContext)" /> method, which has full access to the runtime's features.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b9470-102">En la siguiente muestra de código se presenta cómo crear una clase que hereda de <xref:System.Activities.NativeActivity%601>.</span><span class="sxs-lookup"><span data-stu-id="b9470-102">The following code sample demonstrates creating a class that inherits from <xref:System.Activities.NativeActivity%601>.</span></span> <span data-ttu-id="b9470-103">Este ejemplo es de la [compuesto personalizado utilizando la actividad Native](~/docs/framework/windows-workflow-foundation/samples/custom-composite-using-native-activity.md) ejemplo.</span><span class="sxs-lookup"><span data-stu-id="b9470-103">This example is from the [Custom Composite using Native Activity](~/docs/framework/windows-workflow-foundation/samples/custom-composite-using-native-activity.md) sample.</span></span>  
  
```csharp
public sealed class MySequence : NativeActivity  
{  
    Collection<Activity> children;  
    Collection<Variable> variables;  
    Variable<int> currentIndex;  
    CompletionCallback onChildComplete;  
  
    public MySequence()  
        : base()  
    {  
        this.children = new Collection<Activity>();  
        this.variables = new Collection<Variable>();  
        this.currentIndex = new Variable<int>();  
    }  
  
    public Collection<Activity> Activities  
    {  
        get  
        {  
            return this.children;  
        }  
    }  
    public Collection<Variable> Variables  
    {  
        get  
        {  
            return this.variables;  
        }  
    }  
    protected override void CacheMetadata(NativeActivityMetadata metadata)  
    {  
        //call base.CacheMetadata to add the Activities and Variables to this activity's metadata  
        base.CacheMetadata(metadata);  
        //add the private implementation variable: currentIndex   
        metadata.AddImplementationVariable(this.currentIndex);  
    }                     
  
    protected override void Execute(NativeActivityContext context)  
    {  
        InternalExecute(context, null);  
    }  
    void InternalExecute(NativeActivityContext context, ActivityInstance instance)  
    {  
        //grab the index of the current Activity  
        int currentActivityIndex = this.currentIndex.Get(context);  
        if (currentActivityIndex == Activities.Count)  
        {  
            //if the currentActivityIndex is equal to the count of MySequence's Activities  
            //MySequence is complete  
            return;  
        }  
  
        if (this.onChildComplete == null)  
        {  
            //on completion of the current child, have the runtime call back on this method  
            this.onChildComplete = new CompletionCallback(InternalExecute);  
        }  
        //grab the next Activity in MySequence.Activities and schedule it  
        Activity nextChild = Activities[currentActivityIndex];  
        context.ScheduleActivity(nextChild, this.onChildComplete);  
  
        //increment the currentIndex  
        this.currentIndex.Set(context, ++currentActivityIndex);  
    }  
}  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected NativeActivity ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivity.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; NativeActivity();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b9470-104">Cuando se implementa en una clase derivada, crea una nueva instancia de esta.</span><span class="sxs-lookup"><span data-stu-id="b9470-104">When implemented in a derived class, creates a new instance of the derived class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b9470-105">En la siguiente muestra de código se presenta cómo crear una clase que hereda de <xref:System.Activities.NativeActivity%601>.</span><span class="sxs-lookup"><span data-stu-id="b9470-105">The following code sample demonstrates creating a class that inherits from <xref:System.Activities.NativeActivity%601>.</span></span> <span data-ttu-id="b9470-106">Este ejemplo es de la [compuesto personalizado utilizando la actividad Native](~/docs/framework/windows-workflow-foundation/samples/custom-composite-using-native-activity.md) ejemplo.</span><span class="sxs-lookup"><span data-stu-id="b9470-106">This example is from the [Custom Composite using Native Activity](~/docs/framework/windows-workflow-foundation/samples/custom-composite-using-native-activity.md) sample.</span></span>  
  
 [!code-csharp[wfs_CustomCompositeNativeActivity#1](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_customcompositenativeactivity/cs/mysequence.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="protected virtual void Abort (System.Activities.NativeActivityAbortContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Abort(class System.Activities.NativeActivityAbortContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivity.Abort(System.Activities.NativeActivityAbortContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Abort (context As NativeActivityAbortContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Abort(System::Activities::NativeActivityAbortContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member Abort : System.Activities.NativeActivityAbortContext -&gt; unit&#xA;override this.Abort : System.Activities.NativeActivityAbortContext -&gt; unit" Usage="nativeActivity.Abort context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Activities.NativeActivityAbortContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="b9470-107">Contexto de ejecución en el que se ejecuta la actividad.</span><span class="sxs-lookup"><span data-stu-id="b9470-107">The execution context in which the activity executes.</span></span></param>
        <summary><span data-ttu-id="b9470-108">Cuando se implementa en una clase derivada, realiza acciones en respuesta a la actividad que se va a anular.</span><span class="sxs-lookup"><span data-stu-id="b9470-108">When implemented in a derived class, takes actions in response to the activity being aborted.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CacheMetadata">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b9470-109">Crea y valida una descripción de los argumentos, las variables, las actividades secundarias y delegados de la actividad.</span><span class="sxs-lookup"><span data-stu-id="b9470-109">Creates and validates a description of the activity's arguments, variables, child activities, and activity delegates.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9470-110">Los autores de actividades personalizadas pueden proporcionar lógica de validación en la invalidación del método <xref:System.Activities.NativeActivity.CacheMetadata%2A> de una actividad.</span><span class="sxs-lookup"><span data-stu-id="b9470-110">Custom activity authors can provide validation logic in an activity's <xref:System.Activities.NativeActivity.CacheMetadata%2A> override.</span></span> <span data-ttu-id="b9470-111">Cualquier excepción que se produzca desde el método <xref:System.Activities.NativeActivity.CacheMetadata%2A> no se trata como errores de validación.</span><span class="sxs-lookup"><span data-stu-id="b9470-111">Any exceptions that are thrown from <xref:System.Activities.NativeActivity.CacheMetadata%2A> are not treated as validation errors.</span></span> <span data-ttu-id="b9470-112">Estas excepciones escaparán de la llamada al método <xref:System.Activities.Validation.ActivityValidationServices.Validate%2A> y serán administradas por el autor de la llamada.</span><span class="sxs-lookup"><span data-stu-id="b9470-112">These exceptions will escape from the call to <xref:System.Activities.Validation.ActivityValidationServices.Validate%2A> and must be handled by the caller.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CacheMetadata">
      <MemberSignature Language="C#" Value="protected override sealed void CacheMetadata (System.Activities.ActivityMetadata metadata);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CacheMetadata(valuetype System.Activities.ActivityMetadata metadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivity.CacheMetadata(System.Activities.ActivityMetadata)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Sub CacheMetadata (metadata As ActivityMetadata)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CacheMetadata(System::Activities::ActivityMetadata metadata);" />
      <MemberSignature Language="F#" Value="override this.CacheMetadata : System.Activities.ActivityMetadata -&gt; unit" Usage="nativeActivity.CacheMetadata metadata" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadata" Type="System.Activities.ActivityMetadata" />
      </Parameters>
      <Docs>
        <param name="metadata"><span data-ttu-id="b9470-113">Sin implementar.</span><span class="sxs-lookup"><span data-stu-id="b9470-113">Not implemented.</span></span></param>
        <summary><span data-ttu-id="b9470-114">Sin implementar.</span><span class="sxs-lookup"><span data-stu-id="b9470-114">Not implemented.</span></span> <span data-ttu-id="b9470-115">Use el método <see cref="M:System.Activities.NativeActivity.CacheMetadata(System.Activities.NativeActivityMetadata)" /> en su lugar.</span><span class="sxs-lookup"><span data-stu-id="b9470-115">Use the <see cref="M:System.Activities.NativeActivity.CacheMetadata(System.Activities.NativeActivityMetadata)" /> method instead.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9470-116">Los autores de actividades personalizadas pueden proporcionar lógica de validación en la invalidación del método <xref:System.Activities.NativeActivity.CacheMetadata%2A> de una actividad.</span><span class="sxs-lookup"><span data-stu-id="b9470-116">Custom activity authors can provide validation logic in an activity's <xref:System.Activities.NativeActivity.CacheMetadata%2A> override.</span></span> <span data-ttu-id="b9470-117">Cualquier excepción que se produzca desde el método <xref:System.Activities.NativeActivity.CacheMetadata%2A> no se trata como errores de validación.</span><span class="sxs-lookup"><span data-stu-id="b9470-117">Any exceptions that are thrown from <xref:System.Activities.NativeActivity.CacheMetadata%2A> are not treated as validation errors.</span></span> <span data-ttu-id="b9470-118">Estas excepciones escaparán de la llamada al método <xref:System.Activities.Validation.ActivityValidationServices.Validate%2A> y serán administradas por el autor de la llamada.</span><span class="sxs-lookup"><span data-stu-id="b9470-118">These exceptions will escape from the call to <xref:System.Activities.Validation.ActivityValidationServices.Validate%2A> and must be handled by the caller.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CacheMetadata">
      <MemberSignature Language="C#" Value="protected virtual void CacheMetadata (System.Activities.NativeActivityMetadata metadata);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void CacheMetadata(valuetype System.Activities.NativeActivityMetadata metadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivity.CacheMetadata(System.Activities.NativeActivityMetadata)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub CacheMetadata (metadata As NativeActivityMetadata)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void CacheMetadata(System::Activities::NativeActivityMetadata metadata);" />
      <MemberSignature Language="F#" Value="override this.CacheMetadata : System.Activities.NativeActivityMetadata -&gt; unit" Usage="nativeActivity.CacheMetadata metadata" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadata" Type="System.Activities.NativeActivityMetadata" />
      </Parameters>
      <Docs>
        <param name="metadata"><span data-ttu-id="b9470-119">Metadatos de la actividad que encapsulan los argumentos, las variables, las actividades secundarias y los delegados de la actividad.</span><span class="sxs-lookup"><span data-stu-id="b9470-119">The activity's metadata that encapsulates the activity's arguments, variables, child activities, and activity delegates.</span></span></param>
        <summary><span data-ttu-id="b9470-120">Crea y valida una descripción de los argumentos, las variables, las actividades secundarias y delegados de la actividad.</span><span class="sxs-lookup"><span data-stu-id="b9470-120">Creates and validates a description of the activity's arguments, variables, child activities, and activity delegates.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9470-121">El tiempo de ejecución del flujo de trabajo utiliza la implementación predeterminada del método <xref:System.Activities.NativeActivity.CacheMetadata%2A> para asegurar la construcción correcta de un flujo de trabajo, así como para administrar relaciones en tiempo de ejecución y reglas de duración.</span><span class="sxs-lookup"><span data-stu-id="b9470-121">The workflow runtime uses the default implementation of <xref:System.Activities.NativeActivity.CacheMetadata%2A> to ensure correct construction of a workflow as well as to manage run-time relationships and lifetime rules.</span></span> <span data-ttu-id="b9470-122">La implementación predeterminada de <xref:System.Activities.NativeActivity.CacheMetadata%2A> examina los miembros públicos del tipo de actividad con el tipo <xref:System.ComponentModel.TypeDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="b9470-122">The default implementation of <xref:System.Activities.NativeActivity.CacheMetadata%2A> examines the public members of the activity type using the type's <xref:System.ComponentModel.TypeDescriptor>.</span></span> <span data-ttu-id="b9470-123">Estos miembros públicos son del tipo <xref:System.Activities.Argument>, <xref:System.Activities.Variable>, [IEnumerable\<Variable >](xref:System.Collections.Generic.IEnumerable%601), <xref:System.Activities.Activity>, [IEnumerable\<actividad >](xref:System.Collections.Generic.IEnumerable%601), o <xref:System.Activities.ActivityDelegate>.</span><span class="sxs-lookup"><span data-stu-id="b9470-123">These public members are of type <xref:System.Activities.Argument>, <xref:System.Activities.Variable>, [IEnumerable\<Variable>](xref:System.Collections.Generic.IEnumerable%601), <xref:System.Activities.Activity>, [IEnumerable\<Activity>](xref:System.Collections.Generic.IEnumerable%601), or <xref:System.Activities.ActivityDelegate>.</span></span> <span data-ttu-id="b9470-124">Puede invalidar este método para personalizar la generación de descripción de tiempo de ejecución de la actividad y proporcionar lógica de validación personalizada.</span><span class="sxs-lookup"><span data-stu-id="b9470-124">You can override this method to customize the building of the activity's run-time description and to provide custom validation logic.</span></span> <span data-ttu-id="b9470-125">Cualquier excepción que se produzca desde el método <xref:System.Activities.NativeActivity.CacheMetadata%2A> no se trata como errores de validación.</span><span class="sxs-lookup"><span data-stu-id="b9470-125">Any exceptions that are thrown from <xref:System.Activities.NativeActivity.CacheMetadata%2A> are not treated as validation errors.</span></span> <span data-ttu-id="b9470-126">Estas excepciones escaparán de la llamada al método <xref:System.Activities.Validation.ActivityValidationServices.Validate%2A> y serán administradas por el autor de la llamada.</span><span class="sxs-lookup"><span data-stu-id="b9470-126">These exceptions will escape from the call to <xref:System.Activities.Validation.ActivityValidationServices.Validate%2A> and must be handled by the caller.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b9470-127">El siguiente ejemplo de código muestra cómo utilizar CacheMetadata en una clase que hereda de <xref:System.Activities.NativeActivity%601>.</span><span class="sxs-lookup"><span data-stu-id="b9470-127">The following code sample demonstrates using CacheMetadata in a class that inherits from <xref:System.Activities.NativeActivity%601>.</span></span> <span data-ttu-id="b9470-128">Este ejemplo es de la [compuesto personalizado utilizando la actividad Native](~/docs/framework/windows-workflow-foundation/samples/custom-composite-using-native-activity.md) ejemplo.</span><span class="sxs-lookup"><span data-stu-id="b9470-128">This example is from the [Custom Composite using Native Activity](~/docs/framework/windows-workflow-foundation/samples/custom-composite-using-native-activity.md) sample.</span></span>  
  
 [!code-csharp[wfs_CustomCompositeNativeActivity#2](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_customcompositenativeactivity/cs/mysequence.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="protected virtual void Cancel (System.Activities.NativeActivityContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Cancel(class System.Activities.NativeActivityContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivity.Cancel(System.Activities.NativeActivityContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Cancel (context As NativeActivityContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Cancel(System::Activities::NativeActivityContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member Cancel : System.Activities.NativeActivityContext -&gt; unit&#xA;override this.Cancel : System.Activities.NativeActivityContext -&gt; unit" Usage="nativeActivity.Cancel context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Activities.NativeActivityContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="b9470-129">Contexto de ejecución en el que se ejecuta la actividad.</span><span class="sxs-lookup"><span data-stu-id="b9470-129">The execution context in which the activity executes.</span></span></param>
        <summary><span data-ttu-id="b9470-130">Cuando se implementa en una clase derivada, ejecuta la lógica para producir una finalización precoz y correcta de la actividad.</span><span class="sxs-lookup"><span data-stu-id="b9470-130">When implemented in a derived class, runs logic to cause graceful early completion of the activity.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b9470-131">El siguiente ejemplo de código muestra cómo utilizar Cancel en una clase que hereda de <xref:System.Activities.NativeActivity%601>.</span><span class="sxs-lookup"><span data-stu-id="b9470-131">The following code sample demonstrates using Cancel in a class that inherits from <xref:System.Activities.NativeActivity%601>.</span></span> <span data-ttu-id="b9470-132">Este ejemplo es de la [ParallelForEach no genérico](~/docs/framework/windows-workflow-foundation/samples/non-generic-parallelforeach.md) ejemplo.</span><span class="sxs-lookup"><span data-stu-id="b9470-132">This example is from the [Non-Generic ParallelForEach](~/docs/framework/windows-workflow-foundation/samples/non-generic-parallelforeach.md) sample.</span></span>  
  
 [!code-csharp[wfs_NonGenericParallelForEach#2](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_nongenericparallelforeach/cs/parallelforeach.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanInduceIdle">
      <MemberSignature Language="C#" Value="protected virtual bool CanInduceIdle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanInduceIdle" />
      <MemberSignature Language="DocId" Value="P:System.Activities.NativeActivity.CanInduceIdle" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property CanInduceIdle As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool CanInduceIdle { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanInduceIdle : bool" Usage="System.Activities.NativeActivity.CanInduceIdle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9470-133">Obtiene o establece un valor que indica si la actividad puede hacer que el flujo de trabajo quede inactivo.</span><span class="sxs-lookup"><span data-stu-id="b9470-133">Gets or sets a value that indicates whether the activity can cause the workflow to become idle.</span></span></summary>
        <value><span data-ttu-id="b9470-134"><see langword="true" /> si la actividad puede hacer que el flujo de trabajo quede inactivo.</span><span class="sxs-lookup"><span data-stu-id="b9470-134"><see langword="true" /> if the activity can cause the workflow to become idle.</span></span> <span data-ttu-id="b9470-135">Esta valor es <see langword="false" /> de forma predeterminada.</span><span class="sxs-lookup"><span data-stu-id="b9470-135">This value is <see langword="false" /> by default.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="protected abstract void Execute (System.Activities.NativeActivityContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Execute(class System.Activities.NativeActivityContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivity.Execute(System.Activities.NativeActivityContext)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub Execute (context As NativeActivityContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void Execute(System::Activities::NativeActivityContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member Execute : System.Activities.NativeActivityContext -&gt; unit" Usage="nativeActivity.Execute context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Activities.NativeActivityContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="b9470-136">Contexto de ejecución en el que se ejecuta la actividad.</span><span class="sxs-lookup"><span data-stu-id="b9470-136">The execution context in which the activity executes.</span></span></param>
        <summary><span data-ttu-id="b9470-137">Cuando se implementa en una clase derivada, ejecuta la lógica de ejecución de la actividad.</span><span class="sxs-lookup"><span data-stu-id="b9470-137">When implemented in a derived class, runs the activity's execution logic.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b9470-138">El siguiente ejemplo de código muestra cómo utilizar Cancel en una clase que hereda de <xref:System.Activities.NativeActivity%601>.</span><span class="sxs-lookup"><span data-stu-id="b9470-138">The following code sample demonstrates using Cancel in a class that inherits from <xref:System.Activities.NativeActivity%601>.</span></span> <span data-ttu-id="b9470-139">Este ejemplo es de la [ParallelForEach no genérico](~/docs/framework/windows-workflow-foundation/samples/non-generic-parallelforeach.md) ejemplo.</span><span class="sxs-lookup"><span data-stu-id="b9470-139">This example is from the [Non-Generic ParallelForEach](~/docs/framework/windows-workflow-foundation/samples/non-generic-parallelforeach.md) sample.</span></span>  
  
 [!code-csharp[wfs_NonGenericParallelForEach#2](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_nongenericparallelforeach/cs/parallelforeach.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Implementation">
      <MemberSignature Language="C#" Value="protected override sealed Func&lt;System.Activities.Activity&gt; Implementation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Func`1&lt;class System.Activities.Activity&gt; Implementation" />
      <MemberSignature Language="DocId" Value="P:System.Activities.NativeActivity.Implementation" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Property Implementation As Func(Of Activity)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property Func&lt;System::Activities::Activity ^&gt; ^ Implementation { Func&lt;System::Activities::Activity ^&gt; ^ get(); void set(Func&lt;System::Activities::Activity ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Implementation : Func&lt;System.Activities.Activity&gt; with get, set" Usage="System.Activities.NativeActivity.Implementation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.Serialization.IgnoreDataMember</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Func&lt;System.Activities.Activity&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9470-140">Lógica de ejecución de la actividad.</span><span class="sxs-lookup"><span data-stu-id="b9470-140">The execution logic of the activity.</span></span></summary>
        <value><span data-ttu-id="b9470-141">Lógica de ejecución.</span><span class="sxs-lookup"><span data-stu-id="b9470-141">The execution logic.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImplementationVersion">
      <MemberSignature Language="C#" Value="protected internal override sealed Version ImplementationVersion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version ImplementationVersion" />
      <MemberSignature Language="DocId" Value="P:System.Activities.NativeActivity.ImplementationVersion" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides NotOverridable Property ImplementationVersion As Version" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property Version ^ ImplementationVersion { Version ^ get(); void set(Version ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ImplementationVersion : Version with get, set" Usage="System.Activities.NativeActivity.ImplementationVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9470-142">Obtiene o establece la versión de implementación de la actividad.</span><span class="sxs-lookup"><span data-stu-id="b9470-142">Gets or sets the implementation version of the activity.</span></span></summary>
        <value><span data-ttu-id="b9470-143">Versión de implementación de la actividad.</span><span class="sxs-lookup"><span data-stu-id="b9470-143">The implementation version of the activity.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="OnCreateDynamicUpdateMap">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b9470-144">Genera un evento al crear una asignación para la actualización dinámica.</span><span class="sxs-lookup"><span data-stu-id="b9470-144">Raises an event when creating a map for the dynamic update.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OnCreateDynamicUpdateMap">
      <MemberSignature Language="C#" Value="protected virtual void OnCreateDynamicUpdateMap (System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata metadata, System.Activities.Activity originalActivity);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCreateDynamicUpdateMap(class System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata metadata, class System.Activities.Activity originalActivity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCreateDynamicUpdateMap (metadata As NativeActivityUpdateMapMetadata, originalActivity As Activity)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCreateDynamicUpdateMap(System::Activities::DynamicUpdate::NativeActivityUpdateMapMetadata ^ metadata, System::Activities::Activity ^ originalActivity);" />
      <MemberSignature Language="F#" Value="override this.OnCreateDynamicUpdateMap : System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata * System.Activities.Activity -&gt; unit" Usage="nativeActivity.OnCreateDynamicUpdateMap (metadata, originalActivity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadata" Type="System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata" />
        <Parameter Name="originalActivity" Type="System.Activities.Activity" />
      </Parameters>
      <Docs>
        <param name="metadata"><span data-ttu-id="b9470-145">Los metadatos.</span><span class="sxs-lookup"><span data-stu-id="b9470-145">The metadata.</span></span></param>
        <param name="originalActivity"><span data-ttu-id="b9470-146">Actividad original.</span><span class="sxs-lookup"><span data-stu-id="b9470-146">The original activity.</span></span></param>
        <summary><span data-ttu-id="b9470-147">Genera un evento al crear una asignación para la actualización dinámica.</span><span class="sxs-lookup"><span data-stu-id="b9470-147">Raises an event when creating a map for the dynamic update.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateDynamicUpdateMap">
      <MemberSignature Language="C#" Value="protected override sealed void OnCreateDynamicUpdateMap (System.Activities.DynamicUpdate.UpdateMapMetadata metadata, System.Activities.Activity originalActivity);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnCreateDynamicUpdateMap(class System.Activities.DynamicUpdate.UpdateMapMetadata metadata, class System.Activities.Activity originalActivity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Sub OnCreateDynamicUpdateMap (metadata As UpdateMapMetadata, originalActivity As Activity)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnCreateDynamicUpdateMap(System::Activities::DynamicUpdate::UpdateMapMetadata ^ metadata, System::Activities::Activity ^ originalActivity);" />
      <MemberSignature Language="F#" Value="override this.OnCreateDynamicUpdateMap : System.Activities.DynamicUpdate.UpdateMapMetadata * System.Activities.Activity -&gt; unit" Usage="nativeActivity.OnCreateDynamicUpdateMap (metadata, originalActivity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadata" Type="System.Activities.DynamicUpdate.UpdateMapMetadata" />
        <Parameter Name="originalActivity" Type="System.Activities.Activity" />
      </Parameters>
      <Docs>
        <param name="metadata"><span data-ttu-id="b9470-148">Los metadatos.</span><span class="sxs-lookup"><span data-stu-id="b9470-148">The metadata.</span></span></param>
        <param name="originalActivity"><span data-ttu-id="b9470-149">Actividad original.</span><span class="sxs-lookup"><span data-stu-id="b9470-149">The original activity.</span></span></param>
        <summary><span data-ttu-id="b9470-150">Genera un evento al crear una asignación para la actualización dinámica.</span><span class="sxs-lookup"><span data-stu-id="b9470-150">Raises an event when creating a map for the dynamic update.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateInstance">
      <MemberSignature Language="C#" Value="protected virtual void UpdateInstance (System.Activities.DynamicUpdate.NativeActivityUpdateContext updateContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void UpdateInstance(class System.Activities.DynamicUpdate.NativeActivityUpdateContext updateContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivity.UpdateInstance(System.Activities.DynamicUpdate.NativeActivityUpdateContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub UpdateInstance (updateContext As NativeActivityUpdateContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void UpdateInstance(System::Activities::DynamicUpdate::NativeActivityUpdateContext ^ updateContext);" />
      <MemberSignature Language="F#" Value="abstract member UpdateInstance : System.Activities.DynamicUpdate.NativeActivityUpdateContext -&gt; unit&#xA;override this.UpdateInstance : System.Activities.DynamicUpdate.NativeActivityUpdateContext -&gt; unit" Usage="nativeActivity.UpdateInstance updateContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="updateContext" Type="System.Activities.DynamicUpdate.NativeActivityUpdateContext" />
      </Parameters>
      <Docs>
        <param name="updateContext"><span data-ttu-id="b9470-151">El contexto de actualización.</span><span class="sxs-lookup"><span data-stu-id="b9470-151">The update context.</span></span></param>
        <summary><span data-ttu-id="b9470-152">Actualiza la instancia de <see cref="T:System.Activities.NativeActivity" />.</span><span class="sxs-lookup"><span data-stu-id="b9470-152">Updates the instance of <see cref="T:System.Activities.NativeActivity" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
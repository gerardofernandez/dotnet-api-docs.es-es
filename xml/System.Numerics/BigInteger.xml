<Type Name="BigInteger" FullName="System.Numerics.BigInteger">
  <Metadata><Meta Name="ms.openlocfilehash" Value="85a4380915d6023fb6b118226ee2acaef322ca38" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58710162" /></Metadata><TypeSignature Language="C#" Value="public struct BigInteger : IComparable, IComparable&lt;System.Numerics.BigInteger&gt;, IEquatable&lt;System.Numerics.BigInteger&gt;, IFormattable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit BigInteger extends System.ValueType implements class System.IComparable, class System.IComparable`1&lt;valuetype System.Numerics.BigInteger&gt;, class System.IEquatable`1&lt;valuetype System.Numerics.BigInteger&gt;, class System.IFormattable" />
  <TypeSignature Language="DocId" Value="T:System.Numerics.BigInteger" />
  <TypeSignature Language="VB.NET" Value="Public Structure BigInteger&#xA;Implements IComparable, IComparable(Of BigInteger), IEquatable(Of BigInteger), IFormattable" />
  <TypeSignature Language="C++ CLI" Value="public value class BigInteger : IComparable, IComparable&lt;System::Numerics::BigInteger&gt;, IEquatable&lt;System::Numerics::BigInteger&gt;, IFormattable" />
  <TypeSignature Language="F#" Value="type BigInteger = struct&#xA;    interface IFormattable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Numerics</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Numerics</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable&lt;System.Numerics.BigInteger&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Numerics.BigInteger&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IFormattable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1">
      <AttributeName>System.Runtime.CompilerServices.IsReadOnly</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="4a467-101">Representa un entero con signo arbitrariamente grande.</span><span class="sxs-lookup"><span data-stu-id="4a467-101">Represents an arbitrarily large signed integer.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a467-102">El <xref:System.Numerics.BigInteger> tipo es un tipo inmutable que representa un entero arbitrariamente grande cuyo valor en teoría no tiene ningún límite superior o inferior.</span><span class="sxs-lookup"><span data-stu-id="4a467-102">The <xref:System.Numerics.BigInteger> type is an immutable type that represents an arbitrarily large integer whose value in theory has no upper or lower bounds.</span></span> <span data-ttu-id="4a467-103">Los miembros de la <xref:System.Numerics.BigInteger> tipo análogos a los de otros tipos integrales (el <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.Int64>, <xref:System.SByte>, <xref:System.UInt16>, <xref:System.UInt32>, y <xref:System.UInt64> tipos).</span><span class="sxs-lookup"><span data-stu-id="4a467-103">The members of the <xref:System.Numerics.BigInteger> type closely parallel those of other integral types (the <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.Int64>, <xref:System.SByte>, <xref:System.UInt16>, <xref:System.UInt32>, and <xref:System.UInt64> types).</span></span> <span data-ttu-id="4a467-104">Este tipo difiere de otros tipos integrales en el [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)], que tiene un intervalo indicado por su `MinValue` y `MaxValue` propiedades.</span><span class="sxs-lookup"><span data-stu-id="4a467-104">This type differs from the other integral types in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)], which have a range indicated by their `MinValue` and `MaxValue` properties.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4a467-105">Dado que el <xref:System.Numerics.BigInteger> tipo es inmutable (consulte [mutabilidad y la estructura BigInteger](#mutability)) y porque no tiene ningún límite superior o inferior, una <xref:System.OutOfMemoryException> se pueden producir para cualquier operación que hace que un <xref:System.Numerics.BigInteger> valor crezca demasiado grandes.</span><span class="sxs-lookup"><span data-stu-id="4a467-105">Because the <xref:System.Numerics.BigInteger> type is immutable (see [Mutability and the BigInteger Structure](#mutability)) and because it has no upper or lower bounds, an <xref:System.OutOfMemoryException> can be thrown for any operation that causes a <xref:System.Numerics.BigInteger> value to grow too large.</span></span>  
  
## <a name="instantiating-a-biginteger-object"></a><span data-ttu-id="4a467-106">Instancias de un objeto BigInteger</span><span class="sxs-lookup"><span data-stu-id="4a467-106">Instantiating a BigInteger Object</span></span>  
 <span data-ttu-id="4a467-107">Puede crear instancias de un <xref:System.Numerics.BigInteger> objetos de varias maneras:</span><span class="sxs-lookup"><span data-stu-id="4a467-107">You can instantiate a <xref:System.Numerics.BigInteger> object in several ways:</span></span>  
  
-   <span data-ttu-id="4a467-108">Puede usar el `new` palabra clave y cualquier valor integral o de punto flotante se proporciona como parámetro a la <xref:System.Numerics.BigInteger> constructor.</span><span class="sxs-lookup"><span data-stu-id="4a467-108">You can use the `new` keyword and provide any integral or floating-point value as a parameter to the <xref:System.Numerics.BigInteger> constructor.</span></span> <span data-ttu-id="4a467-109">(Se truncan los valores de punto flotante antes de que se asignan a la <xref:System.Numerics.BigInteger>.) El ejemplo siguiente muestra cómo usar el `new` palabra clave para crear una instancia <xref:System.Numerics.BigInteger> valores.</span><span class="sxs-lookup"><span data-stu-id="4a467-109">(Floating-point values are truncated before they are assigned to the <xref:System.Numerics.BigInteger>.) The following example illustrates how to use the `new` keyword to instantiate <xref:System.Numerics.BigInteger> values.</span></span>  
  
     [!code-csharp[System.Numerics.BigInteger.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class/cs/BigInteger_Examples.cs#1)]
     [!code-vb[System.Numerics.BigInteger.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class/vb/BigInteger_Examples.vb#1)]  
  
-   <span data-ttu-id="4a467-110">Puede declarar un <xref:System.Numerics.BigInteger> variable y asigne un valor como lo haría con cualquier tipo numérico, siempre y cuando ese valor es un tipo entero.</span><span class="sxs-lookup"><span data-stu-id="4a467-110">You can declare a <xref:System.Numerics.BigInteger> variable and assign it a value just as you would any numeric type, as long as that value is an integral type.</span></span> <span data-ttu-id="4a467-111">El ejemplo siguiente utiliza la asignación para crear un <xref:System.Numerics.BigInteger> valor desde un <xref:System.Int64>.</span><span class="sxs-lookup"><span data-stu-id="4a467-111">The following example uses assignment to create a <xref:System.Numerics.BigInteger> value from an <xref:System.Int64>.</span></span>  
  
     [!code-csharp[System.Numerics.BigInteger.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class/cs/BigInteger_Examples.cs#2)]
     [!code-vb[System.Numerics.BigInteger.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class/vb/BigInteger_Examples.vb#2)]  
  
-   <span data-ttu-id="4a467-112">Puede asignar un valor decimal o de punto flotante a un <xref:System.Numerics.BigInteger> objeto si convierte el valor o conviértalo primero.</span><span class="sxs-lookup"><span data-stu-id="4a467-112">You can assign a decimal or floating-point value to a <xref:System.Numerics.BigInteger> object if you cast the value or convert it first.</span></span> <span data-ttu-id="4a467-113">El ejemplo siguiente se convierte (en C#) o convierte (en Visual Basic) explícitamente un <xref:System.Double> y un <xref:System.Decimal> valor a un <xref:System.Numerics.BigInteger>.</span><span class="sxs-lookup"><span data-stu-id="4a467-113">The following example explicitly casts (in C#) or converts (in Visual Basic) a <xref:System.Double> and a <xref:System.Decimal> value to a <xref:System.Numerics.BigInteger>.</span></span>  
  
     [!code-csharp[System.Numerics.BigInteger.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class/cs/BigInteger_Examples.cs#3)]
     [!code-vb[System.Numerics.BigInteger.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class/vb/BigInteger_Examples.vb#3)]  
  
 <span data-ttu-id="4a467-114">Estos métodos le permiten crear una instancia de un <xref:System.Numerics.BigInteger> sólo los tipos de objeto cuyo valor está en el intervalo de uno de los valores numéricos existente.</span><span class="sxs-lookup"><span data-stu-id="4a467-114">These methods enable you to instantiate a <xref:System.Numerics.BigInteger> object whose value is in the range of one of the existing numeric types only.</span></span> <span data-ttu-id="4a467-115">Puede crear instancias de un <xref:System.Numerics.BigInteger> objeto cuyo valor puede superar el intervalo de los tipos numéricos existentes en una de estas tres maneras:</span><span class="sxs-lookup"><span data-stu-id="4a467-115">You can instantiate a <xref:System.Numerics.BigInteger> object whose value can exceed the range of the existing numeric types in one of three ways:</span></span>  
  
-   <span data-ttu-id="4a467-116">Puede usar el `new` palabra clave y proporcionar una matriz de bytes de cualquier tamaño la <xref:System.Numerics.BigInteger.%23ctor%2A?displayProperty=nameWithType> constructor.</span><span class="sxs-lookup"><span data-stu-id="4a467-116">You can use the `new` keyword and provide a byte array of any size to the <xref:System.Numerics.BigInteger.%23ctor%2A?displayProperty=nameWithType> constructor.</span></span> <span data-ttu-id="4a467-117">Por ejemplo:</span><span class="sxs-lookup"><span data-stu-id="4a467-117">For example:</span></span>  
  
     [!code-csharp[System.Numerics.BigInteger.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class/cs/BigInteger_Examples.cs#4)]
     [!code-vb[System.Numerics.BigInteger.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class/vb/BigInteger_Examples.vb#4)]  
  
-   <span data-ttu-id="4a467-118">Puede llamar a la <xref:System.Numerics.BigInteger.Parse%2A> o <xref:System.Numerics.BigInteger.TryParse%2A> métodos para convertir la representación de cadena de un número en un <xref:System.Numerics.BigInteger>.</span><span class="sxs-lookup"><span data-stu-id="4a467-118">You can call the <xref:System.Numerics.BigInteger.Parse%2A> or <xref:System.Numerics.BigInteger.TryParse%2A> methods to convert the string representation of a number to a <xref:System.Numerics.BigInteger>.</span></span> <span data-ttu-id="4a467-119">Por ejemplo:</span><span class="sxs-lookup"><span data-stu-id="4a467-119">For example:</span></span>  
  
     [!code-csharp[System.Numerics.BigInteger.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class/cs/BigInteger_Examples.cs#5)]
     [!code-vb[System.Numerics.BigInteger.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class/vb/BigInteger_Examples.vb#5)]  
  
-   <span data-ttu-id="4a467-120">Puede llamar a un `static` (`Shared` en Visual Basic) <xref:System.Numerics.BigInteger> método que realiza alguna operación en una expresión numérica y devuelve un calculado <xref:System.Numerics.BigInteger> resultado.</span><span class="sxs-lookup"><span data-stu-id="4a467-120">You can call a `static` (`Shared` in Visual Basic) <xref:System.Numerics.BigInteger> method that performs some operation on a numeric expression and returns a calculated <xref:System.Numerics.BigInteger> result.</span></span> <span data-ttu-id="4a467-121">En el siguiente ejemplo para ello, elevando <xref:System.UInt64.MaxValue?displayProperty=nameWithType> y asignar el resultado a un <xref:System.Numerics.BigInteger>.</span><span class="sxs-lookup"><span data-stu-id="4a467-121">The following example does this by cubing <xref:System.UInt64.MaxValue?displayProperty=nameWithType> and assigning the result to a <xref:System.Numerics.BigInteger>.</span></span>  
  
     [!code-csharp[System.Numerics.BigInteger.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class/cs/BigInteger_Examples.cs#6)]
     [!code-vb[System.Numerics.BigInteger.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class/vb/BigInteger_Examples.vb#6)]  
  
 <span data-ttu-id="4a467-122">El valor inicializado de un <xref:System.Numerics.BigInteger> es <xref:System.Numerics.BigInteger.Zero%2A>.</span><span class="sxs-lookup"><span data-stu-id="4a467-122">The uninitialized value of a <xref:System.Numerics.BigInteger> is <xref:System.Numerics.BigInteger.Zero%2A>.</span></span>  
  
## <a name="performing-operations-on-biginteger-values"></a><span data-ttu-id="4a467-123">Realizar operaciones en valores BigInteger</span><span class="sxs-lookup"><span data-stu-id="4a467-123">Performing Operations on BigInteger Values</span></span>  
 <span data-ttu-id="4a467-124">Puede usar un <xref:System.Numerics.BigInteger> como utilizaría cualquier otro tipo integral de la instancia.</span><span class="sxs-lookup"><span data-stu-id="4a467-124">You can use a <xref:System.Numerics.BigInteger> instance as you would use any other integral type.</span></span> <span data-ttu-id="4a467-125"><xref:System.Numerics.BigInteger> sobrecarga los operadores numéricos estándar para permitirle realizar operaciones matemáticas básicas como suma, resta, división, multiplicación, resta, negación y negación unaria.</span><span class="sxs-lookup"><span data-stu-id="4a467-125"><xref:System.Numerics.BigInteger> overloads the standard numeric operators to enable you to perform basic mathematical operations such as addition, subtraction, division, multiplication, subtraction, negation, and unary negation.</span></span> <span data-ttu-id="4a467-126">También puede usar los operadores numéricos estándar para comparar dos <xref:System.Numerics.BigInteger> valores entre sí.</span><span class="sxs-lookup"><span data-stu-id="4a467-126">You can also use the standard numeric operators to compare two <xref:System.Numerics.BigInteger> values with each other.</span></span> <span data-ttu-id="4a467-127">Al igual que otros tipos integrales, <xref:System.Numerics.BigInteger> también es compatible con el bit a bit `And`, `Or`, `XOr`, deja la tecla MAYÚS y operadores de desplazamiento a la derecha.</span><span class="sxs-lookup"><span data-stu-id="4a467-127">Like the other integral types, <xref:System.Numerics.BigInteger> also supports the bitwise `And`, `Or`, `XOr`, left shift, and right shift operators.</span></span> <span data-ttu-id="4a467-128">Para los idiomas que no admiten operadores personalizados, la <xref:System.Numerics.BigInteger> estructura también proporciona los métodos equivalentes para realizar operaciones matemáticas.</span><span class="sxs-lookup"><span data-stu-id="4a467-128">For languages that do not support custom operators, the <xref:System.Numerics.BigInteger> structure also provides equivalent methods for performing mathematical operations.</span></span> <span data-ttu-id="4a467-129">Estos incluyen <xref:System.Numerics.BigInteger.Add%2A>, <xref:System.Numerics.BigInteger.Divide%2A>, <xref:System.Numerics.BigInteger.Multiply%2A>, <xref:System.Numerics.BigInteger.Negate%2A>, <xref:System.Numerics.BigInteger.Subtract%2A>entre otras.</span><span class="sxs-lookup"><span data-stu-id="4a467-129">These include <xref:System.Numerics.BigInteger.Add%2A>, <xref:System.Numerics.BigInteger.Divide%2A>, <xref:System.Numerics.BigInteger.Multiply%2A>, <xref:System.Numerics.BigInteger.Negate%2A>, <xref:System.Numerics.BigInteger.Subtract%2A>, and several others.</span></span>  
  
 <span data-ttu-id="4a467-130">Muchos de los miembros de la <xref:System.Numerics.BigInteger> estructura corresponden directamente a los miembros de otros tipos integrales.</span><span class="sxs-lookup"><span data-stu-id="4a467-130">Many members of the <xref:System.Numerics.BigInteger> structure correspond directly to members of the other integral types.</span></span> <span data-ttu-id="4a467-131">Además, <xref:System.Numerics.BigInteger> agrega miembros, como lo siguiente:</span><span class="sxs-lookup"><span data-stu-id="4a467-131">In addition, <xref:System.Numerics.BigInteger> adds members such as the following:</span></span>  
  
-   <span data-ttu-id="4a467-132"><xref:System.Numerics.BigInteger.Sign%2A>, que devuelve un valor que indica el signo de un <xref:System.Numerics.BigInteger> valor.</span><span class="sxs-lookup"><span data-stu-id="4a467-132"><xref:System.Numerics.BigInteger.Sign%2A>, which returns a value that indicates the sign of a <xref:System.Numerics.BigInteger> value.</span></span>  
  
-   <span data-ttu-id="4a467-133"><xref:System.Numerics.BigInteger.Abs%2A>, que devuelve el valor absoluto de un <xref:System.Numerics.BigInteger> valor.</span><span class="sxs-lookup"><span data-stu-id="4a467-133"><xref:System.Numerics.BigInteger.Abs%2A>, which returns the absolute value of a <xref:System.Numerics.BigInteger> value.</span></span>  
  
-   <span data-ttu-id="4a467-134"><xref:System.Numerics.BigInteger.DivRem%2A>, que devuelve el cociente y el resto de una operación de división.</span><span class="sxs-lookup"><span data-stu-id="4a467-134"><xref:System.Numerics.BigInteger.DivRem%2A>, which returns both the quotient and remainder of a division operation.</span></span>  
  
-   <span data-ttu-id="4a467-135"><xref:System.Numerics.BigInteger.GreatestCommonDivisor%2A>, que devuelve el máximo común divisor de dos <xref:System.Numerics.BigInteger> valores.</span><span class="sxs-lookup"><span data-stu-id="4a467-135"><xref:System.Numerics.BigInteger.GreatestCommonDivisor%2A>, which returns the greatest common divisor of two <xref:System.Numerics.BigInteger> values.</span></span>  
  
 <span data-ttu-id="4a467-136">Muchos de estos miembros adicionales corresponden a los miembros de la <xref:System.Math> (clase), que proporciona la funcionalidad para trabajar con los tipos numéricos primitivos.</span><span class="sxs-lookup"><span data-stu-id="4a467-136">Many of these additional members correspond to the members of the <xref:System.Math> class, which provides the functionality to work with the primitive numeric types.</span></span>  
  
<a name="mutability"></a>   
## <a name="mutability-and-the-biginteger-structure"></a><span data-ttu-id="4a467-137">Mutabilidad y BigInteger (estructura)</span><span class="sxs-lookup"><span data-stu-id="4a467-137">Mutability and the BigInteger Structure</span></span>  
 <span data-ttu-id="4a467-138">El ejemplo siguiente crea un <xref:System.Numerics.BigInteger> de objetos y, a continuación, aumenta su valor en uno.</span><span class="sxs-lookup"><span data-stu-id="4a467-138">The following example instantiates a <xref:System.Numerics.BigInteger> object and then increments its value by one.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Class.Mutability#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.Mutability/cs/Mutability_Examples.cs#1)]
 [!code-vb[System.Numerics.BigInteger.Class.Mutability#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.Mutability/vb/Mutability_Examples.vb#1)]  
  
 <span data-ttu-id="4a467-139">Aunque este ejemplo aparece modificar el valor del objeto existente, no es el caso.</span><span class="sxs-lookup"><span data-stu-id="4a467-139">Although this example appears to modify the value of the existing object, this is not the case.</span></span> <span data-ttu-id="4a467-140"><xref:System.Numerics.BigInteger> los objetos son inmutables, lo que significa que internamente, common language runtime realmente crea una nueva <xref:System.Numerics.BigInteger> objeto y le asigna un valor de una unidad mayor que su valor anterior.</span><span class="sxs-lookup"><span data-stu-id="4a467-140"><xref:System.Numerics.BigInteger> objects are immutable, which means that internally, the common language runtime actually creates a new <xref:System.Numerics.BigInteger> object and assigns it a value one greater than its previous value.</span></span> <span data-ttu-id="4a467-141">Este nuevo objeto, a continuación, se devuelve al llamador.</span><span class="sxs-lookup"><span data-stu-id="4a467-141">This new object is then returned to the caller.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4a467-142">Los demás tipos numéricos en .NET Framework también son inmutables.</span><span class="sxs-lookup"><span data-stu-id="4a467-142">The other numeric types in the .NET Framework are also immutable.</span></span> <span data-ttu-id="4a467-143">Sin embargo, dado que el <xref:System.Numerics.BigInteger> tipo no tiene ningún límite superior o inferior, sus valores pueden llegar a ser muy grandes y tiene un impacto cuantificable sobre el rendimiento.</span><span class="sxs-lookup"><span data-stu-id="4a467-143">However, because the <xref:System.Numerics.BigInteger> type has no upper or lower bounds, its values can grow extremely large and have a measurable impact on performance.</span></span>  
  
 <span data-ttu-id="4a467-144">Aunque este proceso es transparente para el llamador, disminuye el rendimiento.</span><span class="sxs-lookup"><span data-stu-id="4a467-144">Although this process is transparent to the caller, it does incur a performance penalty.</span></span> <span data-ttu-id="4a467-145">En algunos casos, especialmente cuando las operaciones repetidas se realizan en un bucle en gran <xref:System.Numerics.BigInteger> valores, esa disminución del rendimiento puede ser considerable.</span><span class="sxs-lookup"><span data-stu-id="4a467-145">In some cases, especially when repeated operations are performed in a loop on very large <xref:System.Numerics.BigInteger> values, that performance penalty can be significant.</span></span> <span data-ttu-id="4a467-146">Por ejemplo, en el ejemplo siguiente, se realiza una operación repetidamente hasta un millón de veces y un <xref:System.Numerics.BigInteger> valor se incrementa en uno cada vez que la operación se realiza correctamente.</span><span class="sxs-lookup"><span data-stu-id="4a467-146">For example, in the following example, an operation is performed repetitively up to a million times, and a <xref:System.Numerics.BigInteger> value is incremented by one every time the operation succeeds.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Class.Mutability#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.Mutability/cs/Mutability_Examples.cs#12)]
 [!code-vb[System.Numerics.BigInteger.Class.Mutability#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.Mutability/vb/Mutability_Examples.vb#12)]  
  
 <span data-ttu-id="4a467-147">En tal caso, puede mejorar el rendimiento mediante la realización de todos los trabajos intermedios en un <xref:System.Int32> variable.</span><span class="sxs-lookup"><span data-stu-id="4a467-147">In such a case, you can improve performance by performing all intermediate assignments to an <xref:System.Int32> variable.</span></span> <span data-ttu-id="4a467-148">El valor final de la variable, a continuación, puede asignarse a la <xref:System.Numerics.BigInteger> objeto cuando se sale del bucle.</span><span class="sxs-lookup"><span data-stu-id="4a467-148">The final value of the variable can then be assigned to the <xref:System.Numerics.BigInteger> object when the loop exits.</span></span> <span data-ttu-id="4a467-149">Esto se muestra en el ejemplo siguiente.</span><span class="sxs-lookup"><span data-stu-id="4a467-149">The following example provides an illustration.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Class.Mutability#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.Mutability/cs/Mutability_Examples.cs#3)]
 [!code-vb[System.Numerics.BigInteger.Class.Mutability#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.Mutability/vb/Mutability_Examples.vb#3)]  
  
## <a name="working-with-byte-arrays-and-hexadecimal-strings"></a><span data-ttu-id="4a467-150">Trabajar con matrices de bytes y cadenas hexadecimales</span><span class="sxs-lookup"><span data-stu-id="4a467-150">Working with Byte Arrays and Hexadecimal Strings</span></span>  
 <span data-ttu-id="4a467-151">Si convierte <xref:System.Numerics.BigInteger> valores a las matrices de bytes, o si convierte las matrices de bytes a <xref:System.Numerics.BigInteger> valores, debe tener en cuenta el orden de bytes.</span><span class="sxs-lookup"><span data-stu-id="4a467-151">If you convert <xref:System.Numerics.BigInteger> values to byte arrays, or if you convert byte arrays to <xref:System.Numerics.BigInteger> values, you must consider the order of bytes.</span></span> <span data-ttu-id="4a467-152">El <xref:System.Numerics.BigInteger> estructura espera los bytes individuales en una matriz de bytes que aparezcan en orden little-endian (es decir, los bytes de orden inferior del valor preceden a los bytes de orden superior).</span><span class="sxs-lookup"><span data-stu-id="4a467-152">The <xref:System.Numerics.BigInteger> structure expects the individual bytes in a byte array to appear in little-endian order (that is, the lower-order bytes of the value precede the higher-order bytes).</span></span> <span data-ttu-id="4a467-153">Puede ida y vuelta una <xref:System.Numerics.BigInteger> valor mediante una llamada a la <xref:System.Numerics.BigInteger.ToByteArray%2A> método y, a continuación, pasa el byte resultante de matriz a la <xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29> constructor, como se muestra en el ejemplo siguiente.</span><span class="sxs-lookup"><span data-stu-id="4a467-153">You can round-trip a <xref:System.Numerics.BigInteger> value by calling the <xref:System.Numerics.BigInteger.ToByteArray%2A> method and then passing the resulting byte array to the <xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29> constructor, as the following example shows.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Class.ByteAndHex#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.ByteAndHex/cs/ByteAndHex_Examples.cs#1)]
 [!code-vb[System.Numerics.BigInteger.Class.ByteAndHex#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.ByteAndHex/vb/ByteAndHex_Examples.vb#1)]  
  
 <span data-ttu-id="4a467-154">Para crear instancias de un <xref:System.Numerics.BigInteger> valor desde una matriz de bytes que representa un valor de algún otro tipo entero, puede pasar el valor entero para la <xref:System.BitConverter.GetBytes%2A?displayProperty=nameWithType> método y, a continuación, pasa el byte resultante de matriz a la <xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29> constructor.</span><span class="sxs-lookup"><span data-stu-id="4a467-154">To instantiate a <xref:System.Numerics.BigInteger> value from a byte array that represents a value of some other integral type, you can pass the integral value to the <xref:System.BitConverter.GetBytes%2A?displayProperty=nameWithType> method, and then pass the resulting byte array to the <xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29> constructor.</span></span> <span data-ttu-id="4a467-155">El ejemplo siguiente crea un <xref:System.Numerics.BigInteger> valor desde una matriz de bytes que representa un <xref:System.Int16> valor.</span><span class="sxs-lookup"><span data-stu-id="4a467-155">The following example instantiates a <xref:System.Numerics.BigInteger> value from a byte array that represents an <xref:System.Int16> value.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Class.ByteAndHex#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.ByteAndHex/cs/ByteAndHex_Examples.cs#2)]
 [!code-vb[System.Numerics.BigInteger.Class.ByteAndHex#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.ByteAndHex/vb/ByteAndHex_Examples.vb#2)]  
  
 <span data-ttu-id="4a467-156">El <xref:System.Numerics.BigInteger> estructura se da por supuesto que los valores negativos se almacenan utilizando dos representación del complemento.</span><span class="sxs-lookup"><span data-stu-id="4a467-156">The <xref:System.Numerics.BigInteger> structure assumes that negative values are stored by using two's complement representation.</span></span> <span data-ttu-id="4a467-157">Dado que el <xref:System.Numerics.BigInteger> estructura representa un valor numérico sin longitud fija, el <xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29> constructor siempre interpreta el bit más significativo del último byte de la matriz como un bit de signo.</span><span class="sxs-lookup"><span data-stu-id="4a467-157">Because the <xref:System.Numerics.BigInteger> structure represents a numeric value with no fixed length, the <xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29> constructor always interprets the most significant bit of the last byte in the array as a sign bit.</span></span> <span data-ttu-id="4a467-158">Para evitar la <xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29> valores de constructor de confundir las dos representación del complemento de un valor negativo con la representación de signo y magnitud de un valor positivo, positivo en el que el máximo bit significativo del último byte de la matriz de bytes Normalmente, sería conjunto debe incluir un byte adicional cuyo valor es 0.</span><span class="sxs-lookup"><span data-stu-id="4a467-158">To prevent the <xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29> constructor from confusing the two's complement representation of a negative value with the sign and magnitude representation of a positive value, positive values in which the most significant bit of the last byte in the byte array would ordinarily be set should include an additional byte whose value is 0.</span></span> <span data-ttu-id="4a467-159">Por ejemplo, 0xC0 0xBD 0xF0 0xFF es la representación hexadecimal de little-endian de -1.000.000 o 4.293.967.296.</span><span class="sxs-lookup"><span data-stu-id="4a467-159">For example, 0xC0 0xBD 0xF0 0xFF is the little-endian hexadecimal representation of either -1,000,000 or 4,293,967,296.</span></span> <span data-ttu-id="4a467-160">Dado que es el bit más significativo del último byte de la matriz en, el valor de la matriz de bytes se interpretaría por la <xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29> constructor como -1.000.000.</span><span class="sxs-lookup"><span data-stu-id="4a467-160">Because the most significant bit of the last byte in this array is on, the value of the byte array would be interpreted by the <xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29> constructor as -1,000,000.</span></span> <span data-ttu-id="4a467-161">Para crear instancias de un <xref:System.Numerics.BigInteger> cuyo valor es positivo, una matriz de bytes cuyos elementos son 0xC0 0xBD 0xF0 0xFF 0x00 deben pasarse al constructor.</span><span class="sxs-lookup"><span data-stu-id="4a467-161">To instantiate a <xref:System.Numerics.BigInteger> whose value is positive, a byte array whose elements are 0xC0 0xBD 0xF0 0xFF 0x00 must be passed to the constructor.</span></span> <span data-ttu-id="4a467-162">Esto se ilustra en el siguiente ejemplo:</span><span class="sxs-lookup"><span data-stu-id="4a467-162">The following example illustrates this.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Class.ByteAndHex#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.ByteAndHex/cs/ByteAndHex_Examples.cs#3)]
 [!code-vb[System.Numerics.BigInteger.Class.ByteAndHex#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.ByteAndHex/vb/ByteAndHex_Examples.vb#3)]  
  
 <span data-ttu-id="4a467-163">Las matrices de bytes creadas por el <xref:System.Numerics.BigInteger.ToByteArray%2A> método desde los valores positivos incluyen este byte de valor cero adicional.</span><span class="sxs-lookup"><span data-stu-id="4a467-163">Byte arrays created by the <xref:System.Numerics.BigInteger.ToByteArray%2A> method from positive values include this extra zero-value byte.</span></span> <span data-ttu-id="4a467-164">Por lo tanto, el <xref:System.Numerics.BigInteger> estructura puede valores de ida y vuelta correctamente mediante la asignación a y, a continuación, restaurarlos desde matrices de bytes, como se muestra en el ejemplo siguiente.</span><span class="sxs-lookup"><span data-stu-id="4a467-164">Therefore, the <xref:System.Numerics.BigInteger> structure can successfully round-trip values by assigning them to, and then restoring them from, byte arrays, as the following example shows.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Class.ByteAndHex#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.ByteAndHex/cs/ByteAndHex_Examples.cs#4)]
 [!code-vb[System.Numerics.BigInteger.Class.ByteAndHex#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.ByteAndHex/vb/ByteAndHex_Examples.vb#4)]  
  
 <span data-ttu-id="4a467-165">Sin embargo, quizás deba agregar este byte del valor cero adicional a las matrices de bytes que se crean dinámicamente por el desarrollador o que son devueltas por los métodos que convierten los enteros sin signo en matrices de bytes (como <xref:System.BitConverter.GetBytes%28System.UInt16%29?displayProperty=nameWithType>, <xref:System.BitConverter.GetBytes%28System.UInt32%29?displayProperty=nameWithType>, y <xref:System.BitConverter.GetBytes%28System.UInt64%29?displayProperty=nameWithType>).</span><span class="sxs-lookup"><span data-stu-id="4a467-165">However, you may need to add this additional zero-value byte to byte arrays that are created dynamically by the developer or that are returned by methods that convert unsigned integers to byte arrays (such as <xref:System.BitConverter.GetBytes%28System.UInt16%29?displayProperty=nameWithType>, <xref:System.BitConverter.GetBytes%28System.UInt32%29?displayProperty=nameWithType>, and <xref:System.BitConverter.GetBytes%28System.UInt64%29?displayProperty=nameWithType>).</span></span>  
  
 <span data-ttu-id="4a467-166">Al analizar una cadena hexadecimal y la <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType> y <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> métodos suponen que si se establece el bit más significativo del primer byte de la cadena, o si el primer dígito hexadecimal de la cadena representa los cuatro bits inferiores de un valor de byte, el valor es se representan mediante dos representación del complemento.</span><span class="sxs-lookup"><span data-stu-id="4a467-166">When parsing a hexadecimal string, the <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType> and <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> methods assume that if the most significant bit of the first byte in the string is set, or if the first hexadecimal digit of the string represents the lower four bits of a byte value, the value is represented by using two's complement representation.</span></span> <span data-ttu-id="4a467-167">Por ejemplo, "FF01" y "F01" representan el valor decimal -255.</span><span class="sxs-lookup"><span data-stu-id="4a467-167">For example, both "FF01" and "F01" represent the decimal value -255.</span></span> <span data-ttu-id="4a467-168">Para diferenciar positivo de los valores negativos, los valores positivos deben incluir un cero inicial.</span><span class="sxs-lookup"><span data-stu-id="4a467-168">To differentiate positive from negative values, positive values should include a leading zero.</span></span> <span data-ttu-id="4a467-169">Las sobrecargas pertinentes de la <xref:System.Numerics.BigInteger.ToString%2A> método, cuando se pasan la cadena de formato "X", agregue un cero inicial a la cadena hexadecimal devuelta para los valores positivos.</span><span class="sxs-lookup"><span data-stu-id="4a467-169">The relevant overloads of the <xref:System.Numerics.BigInteger.ToString%2A> method, when they are passed the "X" format string, add a leading zero to the returned hexadecimal string for positive values.</span></span> <span data-ttu-id="4a467-170">Esto hace posible de ida y vuelta <xref:System.Numerics.BigInteger> valores usando el <xref:System.Numerics.BigInteger.ToString%2A> y <xref:System.Numerics.BigInteger.Parse%2A> métodos, como se muestra en el ejemplo siguiente.</span><span class="sxs-lookup"><span data-stu-id="4a467-170">This makes it possible to round-trip <xref:System.Numerics.BigInteger> values by using the <xref:System.Numerics.BigInteger.ToString%2A> and <xref:System.Numerics.BigInteger.Parse%2A> methods, as the following example shows.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Class.ByteAndHex#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.ByteAndHex/cs/ByteAndHex_Examples.cs#5)]
 [!code-vb[System.Numerics.BigInteger.Class.ByteAndHex#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.ByteAndHex/vb/ByteAndHex_Examples.vb#5)]  
  
 <span data-ttu-id="4a467-171">Sin embargo, las cadenas hexadecimales se crean mediante una llamada a la `ToString` métodos de los otros tipos enteros o de las sobrecargas de los <xref:System.Convert.ToString%2A> método que incluyen un `toBase` parámetro no indican el signo del valor o el tipo de datos de origen desde el que se derivó la cadena hexadecimal.</span><span class="sxs-lookup"><span data-stu-id="4a467-171">However, the hexadecimal strings created by calling the `ToString` methods of the other integral types or the overloads of the <xref:System.Convert.ToString%2A> method that include a `toBase` parameter do not indicate the sign of the value or the source data type from which the hexadecimal string was derived.</span></span> <span data-ttu-id="4a467-172">Crear instancias de correctamente un <xref:System.Numerics.BigInteger> valor de este tipo de cadena requiere alguna lógica adicional.</span><span class="sxs-lookup"><span data-stu-id="4a467-172">Successfully instantiating a <xref:System.Numerics.BigInteger> value from such a string requires some additional logic.</span></span> <span data-ttu-id="4a467-173">El ejemplo siguiente proporciona una implementación posible.</span><span class="sxs-lookup"><span data-stu-id="4a467-173">The following example provides one possible implementation.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Class.ByteAndHex#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.ByteAndHex/cs/ByteAndHex_Examples2.cs#6)]
 [!code-vb[System.Numerics.BigInteger.Class.ByteAndHex#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.ByteAndHex/vb/ByteAndHex_Examples2.vb#6)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4a467-174">Inicializa una nueva instancia de la estructura <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-174">Initializes a new instance of the <see cref="T:System.Numerics.BigInteger" /> structure.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BigInteger (byte[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.#ctor(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BigInteger(cli::array &lt;System::Byte&gt; ^ value);" />
      <MemberSignature Language="F#" Value="new System.Numerics.BigInteger : byte[] -&gt; System.Numerics.BigInteger" Usage="new System.Numerics.BigInteger value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4a467-175">Matriz de valores de byte en orden little-endian.</span><span class="sxs-lookup"><span data-stu-id="4a467-175">An array of byte values in little-endian order.</span></span></param>
        <summary><span data-ttu-id="4a467-176">Inicializa una nueva instancia de la estructura <see cref="T:System.Numerics.BigInteger" /> utilizando los valores de una matriz de bytes.</span><span class="sxs-lookup"><span data-stu-id="4a467-176">Initializes a new instance of the <see cref="T:System.Numerics.BigInteger" /> structure using the values in a byte array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a467-177">Los bytes individuales en el `value` matriz debe estar en orden little-endian, de menor orden byte a byte de orden superior.</span><span class="sxs-lookup"><span data-stu-id="4a467-177">The individual bytes in the `value` array should be in little-endian order, from lowest-order byte to highest-order byte.</span></span> <span data-ttu-id="4a467-178">Por ejemplo, el valor numérico 1.000.000.000.000 se representa como se muestra en la tabla siguiente:</span><span class="sxs-lookup"><span data-stu-id="4a467-178">For example, the numeric value 1,000,000,000,000 is represented as shown in the following table:</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="4a467-179">Cadena hexadecimal</span><span class="sxs-lookup"><span data-stu-id="4a467-179">Hexadecimal string</span></span>|<span data-ttu-id="4a467-180">E8D4A51000</span><span class="sxs-lookup"><span data-stu-id="4a467-180">E8D4A51000</span></span>|  
|<span data-ttu-id="4a467-181">Matriz de bytes (el índice inferior en primer lugar)</span><span class="sxs-lookup"><span data-stu-id="4a467-181">Byte array (lowest index first)</span></span>|<span data-ttu-id="4a467-182">00 10 A5 D4 E8 00</span><span class="sxs-lookup"><span data-stu-id="4a467-182">00 10 A5 D4 E8 00</span></span>|  
  
 <span data-ttu-id="4a467-183">La mayoría de los métodos que convierten los valores numéricos en matrices de bytes, como <xref:System.Numerics.BigInteger.ToByteArray%2A?displayProperty=nameWithType> y <xref:System.BitConverter.GetBytes%2A?displayProperty=nameWithType>, devolver matrices de bytes en orden little-endian.</span><span class="sxs-lookup"><span data-stu-id="4a467-183">Most methods that convert numeric values to byte arrays, such as <xref:System.Numerics.BigInteger.ToByteArray%2A?displayProperty=nameWithType> and <xref:System.BitConverter.GetBytes%2A?displayProperty=nameWithType>, return byte arrays in little-endian order.</span></span>  
  
 <span data-ttu-id="4a467-184">El constructor espera valores positivos en la matriz de bytes para usar la representación de signo y magnitud y los valores negativos para utilizar dos representación del complemento.</span><span class="sxs-lookup"><span data-stu-id="4a467-184">The constructor expects positive values in the byte array to use sign-and-magnitude representation, and negative values to use two's complement representation.</span></span> <span data-ttu-id="4a467-185">En otras palabras, si el orden más alto de bits del byte de orden superior `value` se establece, el resultado <xref:System.Numerics.BigInteger> valor es negativo.</span><span class="sxs-lookup"><span data-stu-id="4a467-185">In other words, if the highest-order bit of the highest-order byte in `value` is set, the resulting <xref:System.Numerics.BigInteger> value is negative.</span></span> <span data-ttu-id="4a467-186">Dependiendo del origen de la matriz de bytes, esto puede provocar un valor positivo se interpreten correctamente como un valor negativo.</span><span class="sxs-lookup"><span data-stu-id="4a467-186">Depending on the source of the byte array, this may cause a positive value to be misinterpreted as a negative value.</span></span> <span data-ttu-id="4a467-187">Las matrices de bytes se generan normalmente de las maneras siguientes:</span><span class="sxs-lookup"><span data-stu-id="4a467-187">Byte arrays are typically generated in the following ways:</span></span>  
  
-   <span data-ttu-id="4a467-188">Mediante una llamada a la <xref:System.Numerics.BigInteger.ToByteArray%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="4a467-188">By calling the <xref:System.Numerics.BigInteger.ToByteArray%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="4a467-189">Dado que este método devuelve una matriz de bytes con el bit de orden superior del byte de orden superior en la matriz establecida en cero para los valores positivos, no hay ninguna posibilidad de interpretar un valor positivo como negativo.</span><span class="sxs-lookup"><span data-stu-id="4a467-189">Because this method returns a byte array with the highest-order bit of the highest-order byte in the array set to zero for positive values, there is no chance of misinterpreting a positive value as negative.</span></span> <span data-ttu-id="4a467-190">Sin modificar matrices de bytes creadas por el <xref:System.Numerics.BigInteger.ToByteArray%2A> siempre correctamente ida y vuelta cuando se pasan al método el <xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29> constructor.</span><span class="sxs-lookup"><span data-stu-id="4a467-190">Unmodified byte arrays created by the <xref:System.Numerics.BigInteger.ToByteArray%2A> method always successfully round-trip when they are passed to the <xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29> constructor.</span></span>  
  
-   <span data-ttu-id="4a467-191">Mediante una llamada a la <xref:System.BitConverter.GetBytes%2A?displayProperty=nameWithType> método y pasando un entero con signo como un parámetro.</span><span class="sxs-lookup"><span data-stu-id="4a467-191">By calling the <xref:System.BitConverter.GetBytes%2A?displayProperty=nameWithType> method and passing it a signed integer as a parameter.</span></span> <span data-ttu-id="4a467-192">Como enteros con signo controlan la representación de signo y magnitud y dos representación del complemento, no hay ninguna posibilidad de interpretar un valor positivo como negativo.</span><span class="sxs-lookup"><span data-stu-id="4a467-192">Because signed integers handle both sign-and-magnitude representation and two's complement representation, there is no chance of misinterpreting a positive value as negative.</span></span>  
  
-   <span data-ttu-id="4a467-193">Mediante una llamada a la <xref:System.BitConverter.GetBytes%2A?displayProperty=nameWithType> método y pasando un entero sin signo como un parámetro.</span><span class="sxs-lookup"><span data-stu-id="4a467-193">By calling the <xref:System.BitConverter.GetBytes%2A?displayProperty=nameWithType> method and passing it an unsigned integer as a parameter.</span></span> <span data-ttu-id="4a467-194">Como enteros sin signo se representan mediante su magnitud únicamente, los valores positivos se pueden interpretar como valores negativos.</span><span class="sxs-lookup"><span data-stu-id="4a467-194">Because unsigned integers are represented by their magnitude only, positive values can be misinterpreted as negative values.</span></span> <span data-ttu-id="4a467-195">Para evitar esta interpretación incorrecta, puede agregar un valor de cero bytes al final de la matriz.</span><span class="sxs-lookup"><span data-stu-id="4a467-195">To prevent this misinterpretation, you can add a zero-byte value to the end of the array.</span></span> <span data-ttu-id="4a467-196">El ejemplo en la sección siguiente proporciona una ilustración.</span><span class="sxs-lookup"><span data-stu-id="4a467-196">The example in the next section provides an illustration.</span></span>  
  
-   <span data-ttu-id="4a467-197">Mediante la creación de una matriz de bytes ya sea estáticamente o dinámicamente sin necesariamente al llamar a cualquiera de los métodos anteriores, o mediante la modificación de una matriz de bytes existentes.</span><span class="sxs-lookup"><span data-stu-id="4a467-197">By creating a byte array either dynamically or statically without necessarily calling any of the previous methods, or by modifying an existing byte array.</span></span> <span data-ttu-id="4a467-198">Para evitar que los valores positivos erróneamente como valores negativos, puede agregar un valor de cero bytes al final de la matriz.</span><span class="sxs-lookup"><span data-stu-id="4a467-198">To prevent positive values from being misinterpreted as negative values, you can add a zero-byte value to the end of the array.</span></span>  
  
 <span data-ttu-id="4a467-199">Si `value` está vacío <xref:System.Byte> matriz, el nuevo <xref:System.Numerics.BigInteger> objeto se inicializa en un valor de <xref:System.Numerics.BigInteger.Zero%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4a467-199">If `value` is an empty <xref:System.Byte> array, the new <xref:System.Numerics.BigInteger> object is initialized to a value of <xref:System.Numerics.BigInteger.Zero%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="4a467-200">Si `value` es `null`, el constructor produce una <xref:System.ArgumentNullException>.</span><span class="sxs-lookup"><span data-stu-id="4a467-200">If `value` is `null`, the constructor throws an <xref:System.ArgumentNullException>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a467-201">El ejemplo siguiente crea un <xref:System.Numerics.BigInteger> objeto a partir de una matriz de bytes de 5 elementos cuyo valor es {5, 4, 3, 2, 1}.</span><span class="sxs-lookup"><span data-stu-id="4a467-201">The following example instantiates a <xref:System.Numerics.BigInteger> object from a 5-element byte array whose value is {5, 4, 3, 2, 1}.</span></span> <span data-ttu-id="4a467-202">A continuación, muestra el <xref:System.Numerics.BigInteger> valor, representado como números decimal y hexadecimales, en la consola.</span><span class="sxs-lookup"><span data-stu-id="4a467-202">It then displays the <xref:System.Numerics.BigInteger> value, represented as both decimal and hexadecimal numbers, to the console.</span></span> <span data-ttu-id="4a467-203">Una comparación de la matriz de entrada con la salida de texto deja claro por qué esta sobrecarga de la <xref:System.Numerics.BigInteger> el constructor de clase crea un <xref:System.Numerics.BigInteger> objeto cuyo valor es 4328719365 (o 0 x 102030405).</span><span class="sxs-lookup"><span data-stu-id="4a467-203">A comparison of the input array with the text output makes it clear why this overload of the <xref:System.Numerics.BigInteger> class constructor creates a <xref:System.Numerics.BigInteger> object whose value is 4328719365 (or 0x102030405).</span></span> <span data-ttu-id="4a467-204">El primer elemento de la matriz de bytes, cuyo valor es 5, define el valor del byte de orden inferior de la <xref:System.Numerics.BigInteger> objeto, que es 0 x 05.</span><span class="sxs-lookup"><span data-stu-id="4a467-204">The first element of the byte array, whose value is 5, defines the value of the lowest-order byte of the <xref:System.Numerics.BigInteger> object, which is 0x05.</span></span> <span data-ttu-id="4a467-205">El segundo elemento de la matriz de bytes, cuyo valor es 4, define el valor del segundo byte de la <xref:System.Numerics.BigInteger> objeto, que es 0 x 04 y así sucesivamente.</span><span class="sxs-lookup"><span data-stu-id="4a467-205">The second element of the byte array, whose value is 4, defines the value of the second byte of the <xref:System.Numerics.BigInteger> object, which is 0x04, and so on.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.ctors#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/cs/Example1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.ctors#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/vb/Example1.vb#1)]  
  
 <span data-ttu-id="4a467-206">El ejemplo siguiente crea un positivo y negativo <xref:System.Numerics.BigInteger> de valor, los pasa a la <xref:System.Numerics.BigInteger.ToByteArray%2A> método y, a continuación, se restaura el original <xref:System.Numerics.BigInteger> los valores de la matriz de bytes resultante.</span><span class="sxs-lookup"><span data-stu-id="4a467-206">The following example instantiates a positive and a negative <xref:System.Numerics.BigInteger> value, passes them to the <xref:System.Numerics.BigInteger.ToByteArray%2A> method, and then restores the original <xref:System.Numerics.BigInteger> values from the resulting byte array.</span></span> <span data-ttu-id="4a467-207">Tenga en cuenta que los dos valores se representan mediante las matrices de bytes idéntica.</span><span class="sxs-lookup"><span data-stu-id="4a467-207">Note that the two values are represented by identical byte arrays.</span></span> <span data-ttu-id="4a467-208">La única diferencia entre ellos es en el bit más significativo del último elemento en la matriz de bytes.</span><span class="sxs-lookup"><span data-stu-id="4a467-208">The only difference between them is in the most significant bit of the last element in the byte array.</span></span> <span data-ttu-id="4a467-209">Este bit está establecido (el valor del byte es 0xFF) si la matriz se crea a partir de un negativo <xref:System.Numerics.BigInteger> valor.</span><span class="sxs-lookup"><span data-stu-id="4a467-209">This bit is set (the value of the byte is 0xFF) if the array is created from a negative <xref:System.Numerics.BigInteger> value.</span></span> <span data-ttu-id="4a467-210">El bit no está establecido (el valor del byte es cero), si la matriz se crea a partir de un positivo <xref:System.Numerics.BigInteger> valor.</span><span class="sxs-lookup"><span data-stu-id="4a467-210">The bit is not set (the value of the byte is zero), if the array is created from a positive <xref:System.Numerics.BigInteger> value.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.ctors#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/cs/Example1.cs#2)]
 [!code-vb[System.Numerics.BigInteger.ctors#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/vb/Example1.vb#2)]  
  
 <span data-ttu-id="4a467-211">El ejemplo siguiente muestra cómo asegurarse de que un valor positivo no se incorrectamente crea una instancia como un valor negativo mediante la adición de un byte cuyo valor es cero al final de la matriz.</span><span class="sxs-lookup"><span data-stu-id="4a467-211">The following example illustrates how to make sure that a positive value is not incorrectly instantiated as a negative value by adding a byte whose value is zero to the end of the array.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.ctors#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/cs/Example1.cs#3)]
 [!code-vb[System.Numerics.BigInteger.ctors#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/vb/Example1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4a467-212"><paramref name="value" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-212"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Numerics.BigInteger.ToByteArray" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BigInteger (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.#ctor(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As Decimal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BigInteger(System::Decimal value);" />
      <MemberSignature Language="F#" Value="new System.Numerics.BigInteger : decimal -&gt; System.Numerics.BigInteger" Usage="new System.Numerics.BigInteger value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4a467-213">Número decimal.</span><span class="sxs-lookup"><span data-stu-id="4a467-213">A decimal number.</span></span></param>
        <summary><span data-ttu-id="4a467-214">Inicializa una nueva instancia de la estructura <see cref="T:System.Numerics.BigInteger" /> utilizando un valor <see cref="T:System.Decimal" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-214">Initializes a new instance of the <see cref="T:System.Numerics.BigInteger" /> structure using a <see cref="T:System.Decimal" /> value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a467-215">El resultado de llamar a este constructor es idéntico a asignar explícitamente un <xref:System.Decimal> valor a un <xref:System.Numerics.BigInteger> variable.</span><span class="sxs-lookup"><span data-stu-id="4a467-215">The result of calling this constructor is identical to explicitly assigning a <xref:System.Decimal> value to a <xref:System.Numerics.BigInteger> variable.</span></span>  
  
 <span data-ttu-id="4a467-216">Llamar a este constructor puede provocar la pérdida de datos; la parte fraccionaria del `value` se truncan al crear instancias de un <xref:System.Numerics.BigInteger> objeto.</span><span class="sxs-lookup"><span data-stu-id="4a467-216">Calling this constructor can cause data loss; any fractional part of `value` is truncated when instantiating a <xref:System.Numerics.BigInteger> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a467-217">El ejemplo siguiente muestra el uso de la <xref:System.Numerics.BigInteger.%23ctor%28System.Decimal%29> constructor para crear instancias de un <xref:System.Numerics.BigInteger> objeto.</span><span class="sxs-lookup"><span data-stu-id="4a467-217">The following example illustrates the use of the <xref:System.Numerics.BigInteger.%23ctor%28System.Decimal%29> constructor to instantiate a <xref:System.Numerics.BigInteger> object.</span></span> <span data-ttu-id="4a467-218">Define una matriz de <xref:System.Decimal> valores y, a continuación, pasa cada valor a la <xref:System.Numerics.BigInteger.%23ctor%28System.Decimal%29> constructor.</span><span class="sxs-lookup"><span data-stu-id="4a467-218">It defines an array of <xref:System.Decimal> values, and then passes each value to the <xref:System.Numerics.BigInteger.%23ctor%28System.Decimal%29> constructor.</span></span> <span data-ttu-id="4a467-219">Tenga en cuenta que el <xref:System.Decimal> valor se trunca en lugar de redondea cuando se asigna a la <xref:System.Numerics.BigInteger> objeto.</span><span class="sxs-lookup"><span data-stu-id="4a467-219">Note that the <xref:System.Decimal> value is truncated instead of rounded when it is assigned to the <xref:System.Numerics.BigInteger> object.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.ctors#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/cs/Example2.cs#4)]
 [!code-vb[System.Numerics.BigInteger.ctors#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/vb/Example2.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BigInteger (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.#ctor(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BigInteger(double value);" />
      <MemberSignature Language="F#" Value="new System.Numerics.BigInteger : double -&gt; System.Numerics.BigInteger" Usage="new System.Numerics.BigInteger value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4a467-220">Valor de punto flotante de precisión doble.</span><span class="sxs-lookup"><span data-stu-id="4a467-220">A double-precision floating-point value.</span></span></param>
        <summary><span data-ttu-id="4a467-221">Inicializa una nueva instancia de la estructura <see cref="T:System.Numerics.BigInteger" /> utilizando un valor de punto flotante de precisión doble.</span><span class="sxs-lookup"><span data-stu-id="4a467-221">Initializes a new instance of the <see cref="T:System.Numerics.BigInteger" /> structure using a double-precision floating-point value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a467-222">La parte fraccionaria de los `value` se trunca el parámetro al crear una instancia un <xref:System.Numerics.BigInteger> objeto.</span><span class="sxs-lookup"><span data-stu-id="4a467-222">Any fractional part of the `value` parameter is truncated when instantiating a <xref:System.Numerics.BigInteger> object.</span></span>  
  
 <span data-ttu-id="4a467-223">Debido a la falta de precisión de la <xref:System.Double> tipo de datos, llamar a este constructor puede provocar la pérdida de datos.</span><span class="sxs-lookup"><span data-stu-id="4a467-223">Because of the lack of precision of the <xref:System.Double> data type, calling this constructor can cause data loss.</span></span>  
  
 <span data-ttu-id="4a467-224">El <xref:System.Numerics.BigInteger> valor que es el resultado de llamar a este constructor es idéntico al valor que es el resultado de asignar explícitamente un <xref:System.Double> valor a un <xref:System.Numerics.BigInteger>.</span><span class="sxs-lookup"><span data-stu-id="4a467-224">The <xref:System.Numerics.BigInteger> value that results from calling this constructor is identical to the value that results from explicitly assigning a <xref:System.Double> value to a <xref:System.Numerics.BigInteger>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a467-225">El ejemplo siguiente muestra el uso de la <xref:System.Numerics.BigInteger.%23ctor%28System.Double%29> constructor para crear instancias de un <xref:System.Numerics.BigInteger> objeto.</span><span class="sxs-lookup"><span data-stu-id="4a467-225">The following example illustrates the use of the <xref:System.Numerics.BigInteger.%23ctor%28System.Double%29> constructor to instantiate a <xref:System.Numerics.BigInteger> object.</span></span> <span data-ttu-id="4a467-226">También ilustra la pérdida de precisión que puede producirse cuando se usa el <xref:System.Double> tipo de datos.</span><span class="sxs-lookup"><span data-stu-id="4a467-226">It also illustrates the loss of precision that may occur when you use the <xref:System.Double> data type.</span></span> <span data-ttu-id="4a467-227">Un <xref:System.Double> se asigna un valor grande, que, a continuación, se asigna a un <xref:System.Numerics.BigInteger> objeto.</span><span class="sxs-lookup"><span data-stu-id="4a467-227">A <xref:System.Double> is assigned a large value, which is then assigned to a <xref:System.Numerics.BigInteger> object.</span></span> <span data-ttu-id="4a467-228">Como muestra el resultado, esta asignación implica una pérdida de precisión.</span><span class="sxs-lookup"><span data-stu-id="4a467-228">As the output shows, this assignment involves a loss of precision.</span></span> <span data-ttu-id="4a467-229">Ambos valores, a continuación, se incrementan en uno.</span><span class="sxs-lookup"><span data-stu-id="4a467-229">Both values are then incremented by one.</span></span> <span data-ttu-id="4a467-230">El resultado muestra que el <xref:System.Numerics.BigInteger> objeto refleja el valor cambiado, mientras que la <xref:System.Double> objeto no es así.</span><span class="sxs-lookup"><span data-stu-id="4a467-230">The output shows that the <xref:System.Numerics.BigInteger> object reflects the changed value, whereas the <xref:System.Double> object does not.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.ctors#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/cs/Example2.cs#5)]
 [!code-vb[System.Numerics.BigInteger.ctors#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/vb/Example2.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="4a467-231"><paramref name="value" /> es <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" /> o <see cref="F:System.Double.PositiveInfinity" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-231"><paramref name="value" /> is <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" />, or <see cref="F:System.Double.PositiveInfinity" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BigInteger (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BigInteger(int value);" />
      <MemberSignature Language="F#" Value="new System.Numerics.BigInteger : int -&gt; System.Numerics.BigInteger" Usage="new System.Numerics.BigInteger value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4a467-232">Entero de 32 bits con signo.</span><span class="sxs-lookup"><span data-stu-id="4a467-232">A 32-bit signed integer.</span></span></param>
        <summary><span data-ttu-id="4a467-233">Inicializa una nueva instancia de la estructura <see cref="T:System.Numerics.BigInteger" /> usando un valor entero de 32 bits con signo.</span><span class="sxs-lookup"><span data-stu-id="4a467-233">Initializes a new instance of the <see cref="T:System.Numerics.BigInteger" /> structure using a 32-bit signed integer value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a467-234">No hay ninguna pérdida de precisión al crear instancias de un <xref:System.Numerics.BigInteger> objeto mediante el uso de este constructor.</span><span class="sxs-lookup"><span data-stu-id="4a467-234">There is no loss of precision when instantiating a <xref:System.Numerics.BigInteger> object by using this constructor.</span></span>  
  
 <span data-ttu-id="4a467-235">El <xref:System.Numerics.BigInteger> valor que es el resultado de llamar a este constructor es idéntico al valor que se origina la asignación de un <xref:System.Int32> valor a un <xref:System.Numerics.BigInteger>.</span><span class="sxs-lookup"><span data-stu-id="4a467-235">The <xref:System.Numerics.BigInteger> value that results from calling this constructor is identical to the value that results from assigning an <xref:System.Int32> value to a <xref:System.Numerics.BigInteger>.</span></span>  
  
 <span data-ttu-id="4a467-236">El <xref:System.Numerics.BigInteger> estructura no tiene constructores con un parámetro de tipo <xref:System.Byte>, <xref:System.Int16>, <xref:System.SByte>, o <xref:System.UInt16>.</span><span class="sxs-lookup"><span data-stu-id="4a467-236">The <xref:System.Numerics.BigInteger> structure does not include constructors with a parameter of type <xref:System.Byte>, <xref:System.Int16>, <xref:System.SByte>, or <xref:System.UInt16>.</span></span> <span data-ttu-id="4a467-237">Sin embargo, el <xref:System.Int32> tipo admite la conversión implícita de enteros de 8 y 16 bits con signo y sin signo a enteros de 32 bits con signo.</span><span class="sxs-lookup"><span data-stu-id="4a467-237">However, the <xref:System.Int32> type supports the implicit conversion of 8-bit and 16-bit signed and unsigned integers to signed 32-bit integers.</span></span> <span data-ttu-id="4a467-238">Como resultado, se llama a este constructor si `value` es cualquiera de estos cuatro tipos enteros.</span><span class="sxs-lookup"><span data-stu-id="4a467-238">As a result, this constructor is called if `value` is any one of these four integral types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a467-239">El ejemplo siguiente se llama el <xref:System.Numerics.BigInteger.%23ctor%28System.Int32%29> constructor para crear instancias de <xref:System.Numerics.BigInteger> valores desde una matriz de enteros de 32 bits.</span><span class="sxs-lookup"><span data-stu-id="4a467-239">The following example calls the <xref:System.Numerics.BigInteger.%23ctor%28System.Int32%29> constructor to instantiate <xref:System.Numerics.BigInteger> values from an array of 32-bit integers.</span></span> <span data-ttu-id="4a467-240">También usa la conversión implícita para asignar cada valor entero de 32 bits a un <xref:System.Numerics.BigInteger> variable.</span><span class="sxs-lookup"><span data-stu-id="4a467-240">It also uses implicit conversion to assign each 32-bit integer value to a <xref:System.Numerics.BigInteger> variable.</span></span> <span data-ttu-id="4a467-241">A continuación, compara los dos valores para establecer que resultante <xref:System.Numerics.BigInteger> valores son iguales.</span><span class="sxs-lookup"><span data-stu-id="4a467-241">It then compares the two values to establish that the resulting <xref:System.Numerics.BigInteger> values are the same.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.ctors#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/cs/Example2.cs#6)]
 [!code-vb[System.Numerics.BigInteger.ctors#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/vb/Example2.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BigInteger (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.#ctor(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BigInteger(long value);" />
      <MemberSignature Language="F#" Value="new System.Numerics.BigInteger : int64 -&gt; System.Numerics.BigInteger" Usage="new System.Numerics.BigInteger value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4a467-242">Entero de 64 bits con signo.</span><span class="sxs-lookup"><span data-stu-id="4a467-242">A 64-bit signed integer.</span></span></param>
        <summary><span data-ttu-id="4a467-243">Inicializa una nueva instancia de la estructura <see cref="T:System.Numerics.BigInteger" /> usando un valor entero de 64 bits con signo.</span><span class="sxs-lookup"><span data-stu-id="4a467-243">Initializes a new instance of the <see cref="T:System.Numerics.BigInteger" /> structure using a 64-bit signed integer value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a467-244">No hay ninguna pérdida de precisión al crear instancias de un <xref:System.Numerics.BigInteger> objeto mediante el uso de este constructor.</span><span class="sxs-lookup"><span data-stu-id="4a467-244">There is no loss of precision when instantiating a <xref:System.Numerics.BigInteger> object by using this constructor.</span></span>  
  
 <span data-ttu-id="4a467-245">El <xref:System.Numerics.BigInteger> valor que es el resultado de llamar a este constructor es idéntico al valor que se origina la asignación de un <xref:System.Int64> valor a un <xref:System.Numerics.BigInteger>.</span><span class="sxs-lookup"><span data-stu-id="4a467-245">The <xref:System.Numerics.BigInteger> value that results from calling this constructor is identical to the value that results from assigning an <xref:System.Int64> value to a <xref:System.Numerics.BigInteger>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a467-246">El ejemplo siguiente se llama el <xref:System.Numerics.BigInteger.%23ctor%28System.Int64%29> constructor para crear instancias de <xref:System.Numerics.BigInteger> valores desde una matriz de enteros de 64 bits.</span><span class="sxs-lookup"><span data-stu-id="4a467-246">The following example calls the <xref:System.Numerics.BigInteger.%23ctor%28System.Int64%29> constructor to instantiate <xref:System.Numerics.BigInteger> values from an array of 64-bit integers.</span></span> <span data-ttu-id="4a467-247">También usa la conversión implícita para asignar cada valor entero de 64 bits para un <xref:System.Numerics.BigInteger> variable.</span><span class="sxs-lookup"><span data-stu-id="4a467-247">It also uses implicit conversion to assign each 64-bit integer value to a <xref:System.Numerics.BigInteger> variable.</span></span> <span data-ttu-id="4a467-248">A continuación, compara los dos valores para establecer que resultante <xref:System.Numerics.BigInteger> valores son iguales.</span><span class="sxs-lookup"><span data-stu-id="4a467-248">It then compares the two values to establish that the resulting <xref:System.Numerics.BigInteger> values are the same.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.ctors#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/cs/Example2.cs#7)]
 [!code-vb[System.Numerics.BigInteger.ctors#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/vb/Example2.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BigInteger (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.#ctor(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BigInteger(float value);" />
      <MemberSignature Language="F#" Value="new System.Numerics.BigInteger : single -&gt; System.Numerics.BigInteger" Usage="new System.Numerics.BigInteger value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4a467-249">Valor de punto flotante de precisión sencilla.</span><span class="sxs-lookup"><span data-stu-id="4a467-249">A single-precision floating-point value.</span></span></param>
        <summary><span data-ttu-id="4a467-250">Inicializa una nueva instancia de la estructura <see cref="T:System.Numerics.BigInteger" /> utilizando un valor de punto flotante de precisión sencilla.</span><span class="sxs-lookup"><span data-stu-id="4a467-250">Initializes a new instance of the <see cref="T:System.Numerics.BigInteger" /> structure using a single-precision floating-point value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a467-251">La parte fraccionaria de los `value` se trunca el parámetro al crear una instancia un <xref:System.Numerics.BigInteger> objeto.</span><span class="sxs-lookup"><span data-stu-id="4a467-251">Any fractional part of the `value` parameter is truncated when instantiating a <xref:System.Numerics.BigInteger> object.</span></span>  
  
 <span data-ttu-id="4a467-252">Debido a la falta de precisión de la <xref:System.Single> tipo de datos, llamar a este constructor puede dar lugar a pérdida de datos.</span><span class="sxs-lookup"><span data-stu-id="4a467-252">Because of the lack of precision of the <xref:System.Single> data type, calling this constructor can result in data loss.</span></span>  
  
 <span data-ttu-id="4a467-253">El <xref:System.Numerics.BigInteger> valor que es el resultado de llamar a este constructor es idéntico al valor que es el resultado de asignar explícitamente un <xref:System.Single> valor a un <xref:System.Numerics.BigInteger>.</span><span class="sxs-lookup"><span data-stu-id="4a467-253">The <xref:System.Numerics.BigInteger> value that results from calling this constructor is identical to the value that results from explicitly assigning a <xref:System.Single> value to a <xref:System.Numerics.BigInteger>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a467-254">El ejemplo siguiente muestra el uso de la <xref:System.Numerics.BigInteger.%23ctor%28System.Single%29> constructor para crear instancias de un <xref:System.Numerics.BigInteger> objeto.</span><span class="sxs-lookup"><span data-stu-id="4a467-254">The following example illustrates the use of the <xref:System.Numerics.BigInteger.%23ctor%28System.Single%29> constructor to instantiate a <xref:System.Numerics.BigInteger> object.</span></span> <span data-ttu-id="4a467-255">También ilustra la pérdida de precisión que puede producirse cuando se usa el <xref:System.Single> tipo de datos.</span><span class="sxs-lookup"><span data-stu-id="4a467-255">It also illustrates the loss of precision that may occur when you use the <xref:System.Single> data type.</span></span> <span data-ttu-id="4a467-256">Un <xref:System.Single> se asigna un valor negativo grande, que, a continuación, se asigna a un <xref:System.Numerics.BigInteger> objeto.</span><span class="sxs-lookup"><span data-stu-id="4a467-256">A <xref:System.Single> is assigned a large negative value, which is then assigned to a <xref:System.Numerics.BigInteger> object.</span></span> <span data-ttu-id="4a467-257">Como muestra el resultado, esta asignación implica una pérdida de precisión.</span><span class="sxs-lookup"><span data-stu-id="4a467-257">As the output shows, this assignment involves a loss of precision.</span></span> <span data-ttu-id="4a467-258">Ambos valores, a continuación, se incrementan en uno.</span><span class="sxs-lookup"><span data-stu-id="4a467-258">Both values are then incremented by one.</span></span> <span data-ttu-id="4a467-259">El resultado muestra que el <xref:System.Numerics.BigInteger> objeto refleja el valor cambiado, mientras que la <xref:System.Single> objeto no es así.</span><span class="sxs-lookup"><span data-stu-id="4a467-259">The output shows that the <xref:System.Numerics.BigInteger> object reflects the changed value, whereas the <xref:System.Single> object does not.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.ctors#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/cs/Example2.cs#8)]
 [!code-vb[System.Numerics.BigInteger.ctors#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/vb/Example2.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="4a467-260"><paramref name="value" /> es <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.NegativeInfinity" /> o <see cref="F:System.Single.PositiveInfinity" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-260"><paramref name="value" /> is <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.NegativeInfinity" />, or <see cref="F:System.Single.PositiveInfinity" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BigInteger (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.#ctor(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BigInteger(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="new System.Numerics.BigInteger : uint32 -&gt; System.Numerics.BigInteger" Usage="new System.Numerics.BigInteger value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4a467-261">Valor entero de 32 bits sin signo.</span><span class="sxs-lookup"><span data-stu-id="4a467-261">An unsigned 32-bit integer value.</span></span></param>
        <summary><span data-ttu-id="4a467-262">Inicializa una nueva instancia de la estructura <see cref="T:System.Numerics.BigInteger" /> utilizando un valor entero de 32 bits sin signo.</span><span class="sxs-lookup"><span data-stu-id="4a467-262">Initializes a new instance of the <see cref="T:System.Numerics.BigInteger" /> structure using an unsigned 32-bit integer value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a467-263">No hay ninguna pérdida de precisión al crear instancias de un <xref:System.Numerics.BigInteger> utilizando este constructor.</span><span class="sxs-lookup"><span data-stu-id="4a467-263">There is no loss of precision when instantiating a <xref:System.Numerics.BigInteger> using this constructor.</span></span>  
  
 <span data-ttu-id="4a467-264">El <xref:System.Numerics.BigInteger> valor que es el resultado de llamar a este constructor es idéntico al valor que se origina la asignación de un <xref:System.UInt32> valor a un <xref:System.Numerics.BigInteger>.</span><span class="sxs-lookup"><span data-stu-id="4a467-264">The <xref:System.Numerics.BigInteger> value that results from calling this constructor is identical to the value that results from assigning a <xref:System.UInt32> value to a <xref:System.Numerics.BigInteger>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a467-265">En el ejemplo siguiente se usa el <xref:System.Numerics.BigInteger.%23ctor%28System.UInt32%29> constructor y una instrucción de asignación para inicializar <xref:System.Numerics.BigInteger> valores desde una matriz de enteros de 32 bits sin signo.</span><span class="sxs-lookup"><span data-stu-id="4a467-265">The following example uses the <xref:System.Numerics.BigInteger.%23ctor%28System.UInt32%29> constructor and an assignment statement to initialize <xref:System.Numerics.BigInteger> values from an array of unsigned 32-bit integers.</span></span> <span data-ttu-id="4a467-266">A continuación, compara los dos valores para demostrar que los dos métodos para inicializar un <xref:System.Numerics.BigInteger> valor producen resultados idénticos.</span><span class="sxs-lookup"><span data-stu-id="4a467-266">It then compares the two values to demonstrate that the two methods of initializing a <xref:System.Numerics.BigInteger> value produce identical results.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.ctors#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/cs/Example2.cs#9)]
 [!code-vb[System.Numerics.BigInteger.ctors#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/vb/Example2.vb#9)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Numerics.BigInteger.#ctor(System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BigInteger (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.#ctor(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As ULong)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BigInteger(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="new System.Numerics.BigInteger : uint64 -&gt; System.Numerics.BigInteger" Usage="new System.Numerics.BigInteger value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4a467-267">Entero de 64 bits sin signo.</span><span class="sxs-lookup"><span data-stu-id="4a467-267">An unsigned 64-bit integer.</span></span></param>
        <summary><span data-ttu-id="4a467-268">Inicializa una nueva instancia de la estructura <see cref="T:System.Numerics.BigInteger" /> con un valor entero de 64 bits sin signo.</span><span class="sxs-lookup"><span data-stu-id="4a467-268">Initializes a new instance of the <see cref="T:System.Numerics.BigInteger" /> structure with an unsigned 64-bit integer value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a467-269">No hay ninguna pérdida de precisión al crear instancias de un <xref:System.Numerics.BigInteger> utilizando este constructor.</span><span class="sxs-lookup"><span data-stu-id="4a467-269">There is no loss of precision when instantiating a <xref:System.Numerics.BigInteger> using this constructor.</span></span>  
  
 <span data-ttu-id="4a467-270">El <xref:System.Numerics.BigInteger> valor que es el resultado de llamar a este constructor es idéntico al valor que se origina la asignación de un <xref:System.UInt64> valor a un <xref:System.Numerics.BigInteger>.</span><span class="sxs-lookup"><span data-stu-id="4a467-270">The <xref:System.Numerics.BigInteger> value that results from calling this constructor is identical to the value that results from assigning a <xref:System.UInt64> value to a <xref:System.Numerics.BigInteger>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a467-271">En el ejemplo siguiente se usa el <xref:System.Numerics.BigInteger.%23ctor%28System.UInt64%29> constructor para crear instancias de un <xref:System.Numerics.BigInteger> objeto cuyo valor es igual a <xref:System.UInt64.MaxValue>.</span><span class="sxs-lookup"><span data-stu-id="4a467-271">The following example uses the <xref:System.Numerics.BigInteger.%23ctor%28System.UInt64%29> constructor to instantiate a <xref:System.Numerics.BigInteger> object whose value is equal to <xref:System.UInt64.MaxValue>.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.ctors#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/cs/Example2.cs#10)]
 [!code-vb[System.Numerics.BigInteger.ctors#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/vb/Example2.vb#10)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Numerics.BigInteger.#ctor(System.Double)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BigInteger (ReadOnlySpan&lt;byte&gt; value, bool isUnsigned = false, bool isBigEndian = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; value, bool isUnsigned, bool isBigEndian) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.#ctor(System.ReadOnlySpan{System.Byte},System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As ReadOnlySpan(Of Byte), Optional isUnsigned As Boolean = false, Optional isBigEndian As Boolean = false)" />
      <MemberSignature Language="F#" Value="new System.Numerics.BigInteger : ReadOnlySpan&lt;byte&gt; * bool * bool -&gt; System.Numerics.BigInteger" Usage="new System.Numerics.BigInteger (value, isUnsigned, isBigEndian)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="isUnsigned" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="isBigEndian" Type="System.Boolean" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="isUnsigned">To be added.</param>
        <param name="isBigEndian">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Abs">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger Abs (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger Abs(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Abs(System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Abs (value As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger Abs(System::Numerics::BigInteger value);" />
      <MemberSignature Language="F#" Value="static member Abs : System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.Abs value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4a467-272">Un número.</span><span class="sxs-lookup"><span data-stu-id="4a467-272">A number.</span></span></param>
        <summary><span data-ttu-id="4a467-273">Obtiene el valor absoluto de un objeto <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-273">Gets the absolute value of a <see cref="T:System.Numerics.BigInteger" /> object.</span></span></summary>
        <returns><span data-ttu-id="4a467-274">Valor absoluto de <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-274">The absolute value of <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a467-275">El valor absoluto de un número es ese número sin signo, como se muestra en la tabla siguiente.</span><span class="sxs-lookup"><span data-stu-id="4a467-275">The absolute value of a number is that number without its sign, as shown in the following table.</span></span>  
  
|<span data-ttu-id="4a467-276">Parámetro `value`</span><span class="sxs-lookup"><span data-stu-id="4a467-276">`value` parameter</span></span>|<span data-ttu-id="4a467-277">Valor devuelto</span><span class="sxs-lookup"><span data-stu-id="4a467-277">Return value</span></span>|  
|-----------------------|------------------|  
|<span data-ttu-id="4a467-278">`value` >= 0</span><span class="sxs-lookup"><span data-stu-id="4a467-278">`value` >= 0</span></span>|`value`|  
|<span data-ttu-id="4a467-279">`value` < 0</span><span class="sxs-lookup"><span data-stu-id="4a467-279">`value` < 0</span></span>|<span data-ttu-id="4a467-280">`value` \* -1</span><span class="sxs-lookup"><span data-stu-id="4a467-280">`value` \* -1</span></span>|  
  
 <span data-ttu-id="4a467-281">El <xref:System.Numerics.BigInteger.Abs%2A> método es equivalente a la <xref:System.Math.Abs%2A?displayProperty=nameWithType> método para los tipos numéricos primitivos.</span><span class="sxs-lookup"><span data-stu-id="4a467-281">The <xref:System.Numerics.BigInteger.Abs%2A> method is equivalent to the <xref:System.Math.Abs%2A?displayProperty=nameWithType> method for the primitive numeric types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a467-282">En el ejemplo siguiente se usa el <xref:System.Numerics.BigInteger.Abs%2A> método para convertir un <xref:System.Numerics.BigInteger> valor comprendido entre dos representación del complemento y la representación de signo y magnitud antes de serializarlo en un archivo.</span><span class="sxs-lookup"><span data-stu-id="4a467-282">The following example uses the <xref:System.Numerics.BigInteger.Abs%2A> method to convert a <xref:System.Numerics.BigInteger> value from two's complement representation to sign-and-magnitude representation before serializing it to a file.</span></span> <span data-ttu-id="4a467-283">Datos en el archivo, a continuación, se deserializa y se asigna a un nuevo <xref:System.Numerics.BigInteger> objeto.</span><span class="sxs-lookup"><span data-stu-id="4a467-283">Data in the file is then deserialized and assigned to a new <xref:System.Numerics.BigInteger> object.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Abs#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Abs/cs/Abs1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.Abs#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Abs/vb/Abs1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Math.Abs(System.SByte)" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger Add (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger Add(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Add(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Add (left As BigInteger, right As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger Add(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member Add : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.Add (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="4a467-284">Primer valor que se va a sumar.</span><span class="sxs-lookup"><span data-stu-id="4a467-284">The first value to add.</span></span></param>
        <param name="right"><span data-ttu-id="4a467-285">Segundo valor que se va a sumar.</span><span class="sxs-lookup"><span data-stu-id="4a467-285">The second value to add.</span></span></param>
        <summary><span data-ttu-id="4a467-286">Suma dos valores <see cref="T:System.Numerics.BigInteger" /> y devuelve el resultado.</span><span class="sxs-lookup"><span data-stu-id="4a467-286">Adds two <see cref="T:System.Numerics.BigInteger" /> values and returns the result.</span></span></summary>
        <returns><span data-ttu-id="4a467-287">La suma de <paramref name="left" /> y <paramref name="right" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-287">The sum of <paramref name="left" /> and <paramref name="right" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a467-288">Pueden usar los lenguajes que no admiten la sobrecarga de operadores personalizados ni el <xref:System.Numerics.BigInteger.Add%2A> método para realizar mediante la adición <xref:System.Numerics.BigInteger> valores.</span><span class="sxs-lookup"><span data-stu-id="4a467-288">Languages that do not support operator overloading or custom operators can use the <xref:System.Numerics.BigInteger.Add%2A> method to perform addition using <xref:System.Numerics.BigInteger> values.</span></span>  
  
 <span data-ttu-id="4a467-289">El <xref:System.Numerics.BigInteger.Add%2A> método es un suplente útil para el operador de suma al crear instancias de un <xref:System.Numerics.BigInteger> variable asignándole una suma que da como resultado de la suma, como se muestra en el ejemplo siguiente.</span><span class="sxs-lookup"><span data-stu-id="4a467-289">The <xref:System.Numerics.BigInteger.Add%2A> method is a useful substitute for the addition operator when instantiating a <xref:System.Numerics.BigInteger> variable by assigning it a sum that results from addition, as shown in the following example.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.OperationMethods#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.OperationMethods/cs/Multiply1.cs#2)]
 [!code-vb[System.Numerics.BigInteger.OperationMethods#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.OperationMethods/vb/Multiply1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Numerics.BigInteger.op_Addition(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public static int Compare (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Compare(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Compare(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compare (left As BigInteger, right As BigInteger) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Compare(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member Compare : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; int" Usage="System.Numerics.BigInteger.Compare (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="4a467-290">Primer valor que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="4a467-290">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="4a467-291">Segundo valor que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="4a467-291">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="4a467-292">Compara dos valores <see cref="T:System.Numerics.BigInteger" /> y devuelve un entero que indica si el primer valor es menor, igual o mayor que el segundo.</span><span class="sxs-lookup"><span data-stu-id="4a467-292">Compares two <see cref="T:System.Numerics.BigInteger" /> values and returns an integer that indicates whether the first value is less than, equal to, or greater than the second value.</span></span></summary>
        <returns><span data-ttu-id="4a467-293">Entero con signo que indica los valores relativos de <paramref name="left" /> y <paramref name="right" />, como se muestra en la tabla siguiente.</span><span class="sxs-lookup"><span data-stu-id="4a467-293">A signed integer that indicates the relative values of <paramref name="left" /> and <paramref name="right" />, as shown in the following table.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="4a467-294">Valor</span><span class="sxs-lookup"><span data-stu-id="4a467-294">Value</span></span> 
 </term><description> <span data-ttu-id="4a467-295">Condición</span><span class="sxs-lookup"><span data-stu-id="4a467-295">Condition</span></span> 
 </description></listheader><item><term> <span data-ttu-id="4a467-296">Menor que cero</span><span class="sxs-lookup"><span data-stu-id="4a467-296">Less than zero</span></span> 
 </term><description><span data-ttu-id="4a467-297"><paramref name="left" /> es menor que <paramref name="right" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-297"><paramref name="left" /> is less than <paramref name="right" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="4a467-298">Cero</span><span class="sxs-lookup"><span data-stu-id="4a467-298">Zero</span></span> 
 </term><description><span data-ttu-id="4a467-299"><paramref name="left" /> es igual que <paramref name="right" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-299"><paramref name="left" /> equals <paramref name="right" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="4a467-300">Mayor que cero</span><span class="sxs-lookup"><span data-stu-id="4a467-300">Greater than zero</span></span> 
 </term><description><span data-ttu-id="4a467-301"><paramref name="left" /> es mayor que <paramref name="right" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-301"><paramref name="left" /> is greater than <paramref name="right" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a467-302">Aunque el <xref:System.Numerics.BigInteger> tipo no tiene ningún intervalo fijo, las comparaciones de <xref:System.Numerics.BigInteger> valores no se caracterizan por la falta de precisión que caracteriza la comparación de números de punto flotante.</span><span class="sxs-lookup"><span data-stu-id="4a467-302">Although the <xref:System.Numerics.BigInteger> type has no fixed range, comparisons of <xref:System.Numerics.BigInteger> values are not characterized by the lack of precision that characterizes the comparison of floating-point numbers.</span></span> <span data-ttu-id="4a467-303">En el ejemplo siguiente se comparan dos <xref:System.Numerics.BigInteger> valores que difieren por uno y que cada uno tienen 1.896 dígitos.</span><span class="sxs-lookup"><span data-stu-id="4a467-303">The following example compares two <xref:System.Numerics.BigInteger> values that differ by one and that each have 1,896 digits.</span></span> <span data-ttu-id="4a467-304">El <xref:System.Numerics.BigInteger.Compare%2A> método informa correctamente que los dos valores no son iguales.</span><span class="sxs-lookup"><span data-stu-id="4a467-304">The <xref:System.Numerics.BigInteger.Compare%2A> method correctly reports that the two values are not equal.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Compare#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Compare/cs/Compare1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.Compare#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Compare/vb/Compare1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.CompareTo" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CompareTo">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4a467-305">Compara el valor de esta instancia con otro valor y devuelve un entero que indica si el valor de esta instancia es menor, igual o mayor que el otro valor.</span><span class="sxs-lookup"><span data-stu-id="4a467-305">Compares the value of this instance with another value and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the other value.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (long other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 CompareTo(int64 other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.CompareTo(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (other As Long) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int CompareTo(long other);" />
      <MemberSignature Language="F#" Value="member this.CompareTo : int64 -&gt; int" Usage="bigInteger.CompareTo other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="4a467-306">Entero de 64 bits con signo que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="4a467-306">The signed 64-bit integer to compare.</span></span></param>
        <summary><span data-ttu-id="4a467-307">Compara esta instancia con un entero de 64 bits con signo y devuelve un entero que indica si el valor de esta instancia es menor, igual o mayor que el valor del entero de 64 bits con signo.</span><span class="sxs-lookup"><span data-stu-id="4a467-307">Compares this instance to a signed 64-bit integer and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the value of the signed 64-bit integer.</span></span></summary>
        <returns><span data-ttu-id="4a467-308">Valor entero con signo que indica la relación de esta instancia con <paramref name="other" />, como se muestra en la tabla siguiente.</span><span class="sxs-lookup"><span data-stu-id="4a467-308">A signed integer value that indicates the relationship of this instance to <paramref name="other" />, as shown in the following table.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="4a467-309">Valor devuelto</span><span class="sxs-lookup"><span data-stu-id="4a467-309">Return value</span></span> 
 </term><description> <span data-ttu-id="4a467-310">Descripción</span><span class="sxs-lookup"><span data-stu-id="4a467-310">Description</span></span> 
 </description></listheader><item><term> <span data-ttu-id="4a467-311">Menor que cero</span><span class="sxs-lookup"><span data-stu-id="4a467-311">Less than zero</span></span> 
 </term><description> <span data-ttu-id="4a467-312">La instancia actual es menor que <paramref name="other" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-312">The current instance is less than <paramref name="other" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="4a467-313">Cero</span><span class="sxs-lookup"><span data-stu-id="4a467-313">Zero</span></span> 
 </term><description> <span data-ttu-id="4a467-314">La instancia actual es igual que <paramref name="other" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-314">The current instance equals <paramref name="other" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="4a467-315">Mayor que cero</span><span class="sxs-lookup"><span data-stu-id="4a467-315">Greater than zero</span></span> 
 </term><description> <span data-ttu-id="4a467-316">La instancia actual es mayor que <paramref name="other" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-316">The current instance is greater than <paramref name="other" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a467-317">Si `other` es un <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, o <xref:System.UInt32> valor, se convierte implícitamente en un <xref:System.Int64> valor cuando el <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29> se llama al método.</span><span class="sxs-lookup"><span data-stu-id="4a467-317">If `other` is a <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, or <xref:System.UInt32> value, it is implicitly converted to an <xref:System.Int64> value when the <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29> method is called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a467-318">El ejemplo siguiente muestra el resultado de llamar a la <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29> método con valores enteros.</span><span class="sxs-lookup"><span data-stu-id="4a467-318">The following example illustrates the result of calling the <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29> method with integral values.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.CompareTo#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.CompareTo/cs/Example2.cs#3)]
 [!code-vb[System.Numerics.BigInteger.CompareTo#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.CompareTo/vb/Example2.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (System.Numerics.BigInteger other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(valuetype System.Numerics.BigInteger other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.CompareTo(System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (other As BigInteger) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Numerics::BigInteger other);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : System.Numerics.BigInteger -&gt; int&#xA;override this.CompareTo : System.Numerics.BigInteger -&gt; int" Usage="bigInteger.CompareTo other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable`1.CompareTo(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="4a467-319">Objeto que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="4a467-319">The object to compare.</span></span></param>
        <summary><span data-ttu-id="4a467-320">Compara esta instancia con un segundo <see cref="T:System.Numerics.BigInteger" /> y devuelve un entero que indica si el valor de esta instancia es menor, igual o mayor que el valor del objeto especificado.</span><span class="sxs-lookup"><span data-stu-id="4a467-320">Compares this instance to a second <see cref="T:System.Numerics.BigInteger" /> and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the value of the specified object.</span></span></summary>
        <returns><span data-ttu-id="4a467-321">Valor entero con signo que indica la relación de esta instancia con <paramref name="other" />, como se muestra en la tabla siguiente.</span><span class="sxs-lookup"><span data-stu-id="4a467-321">A signed integer value that indicates the relationship of this instance to <paramref name="other" />, as shown in the following table.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="4a467-322">Valor devuelto</span><span class="sxs-lookup"><span data-stu-id="4a467-322">Return value</span></span> 
 </term><description> <span data-ttu-id="4a467-323">Descripción</span><span class="sxs-lookup"><span data-stu-id="4a467-323">Description</span></span> 
 </description></listheader><item><term> <span data-ttu-id="4a467-324">Menor que cero</span><span class="sxs-lookup"><span data-stu-id="4a467-324">Less than zero</span></span> 
 </term><description> <span data-ttu-id="4a467-325">La instancia actual es menor que <paramref name="other" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-325">The current instance is less than <paramref name="other" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="4a467-326">Cero</span><span class="sxs-lookup"><span data-stu-id="4a467-326">Zero</span></span> 
 </term><description> <span data-ttu-id="4a467-327">La instancia actual es igual que <paramref name="other" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-327">The current instance equals <paramref name="other" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="4a467-328">Mayor que cero</span><span class="sxs-lookup"><span data-stu-id="4a467-328">Greater than zero</span></span> 
 </term><description> <span data-ttu-id="4a467-329">La instancia actual es mayor que <paramref name="other" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-329">The current instance is greater than <paramref name="other" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a467-330">Esta sobrecarga de la <xref:System.Numerics.BigInteger.CompareTo%2A> método implementa el <xref:System.IComparable%601.CompareTo%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="4a467-330">This overload of the <xref:System.Numerics.BigInteger.CompareTo%2A> method implements the <xref:System.IComparable%601.CompareTo%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="4a467-331">Es utilizado por los objetos de colección genérica para ordenar los elementos de la colección.</span><span class="sxs-lookup"><span data-stu-id="4a467-331">It is used by generic collection objects to order the items in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a467-332">El ejemplo siguiente muestra el uso de la <xref:System.Numerics.BigInteger.CompareTo%28System.Numerics.BigInteger%29> para ordenar una lista de `StarInfo` objetos.</span><span class="sxs-lookup"><span data-stu-id="4a467-332">The following example illustrates the use of the <xref:System.Numerics.BigInteger.CompareTo%28System.Numerics.BigInteger%29> method to order a list of `StarInfo` objects.</span></span> <span data-ttu-id="4a467-333">Cada `StarInfo` objeto proporciona información sobre el nombre de una estrella y su distancia desde la tierra en millas.</span><span class="sxs-lookup"><span data-stu-id="4a467-333">Each `StarInfo` object provides information about a star's name and its distance from the Earth in miles.</span></span> <span data-ttu-id="4a467-334">`StarInfo` implementa el <xref:System.IComparable%601> interfaz, lo que permite `StarInfo` objetos se ordene por clases de colección genéricas.</span><span class="sxs-lookup"><span data-stu-id="4a467-334">`StarInfo` implements the <xref:System.IComparable%601> interface, which enables `StarInfo` objects to be sorted by generic collection classes.</span></span> <span data-ttu-id="4a467-335">Su <xref:System.IComparable%601.CompareTo%2A?displayProperty=nameWithType> implementación simplemente encapsula una llamada a <xref:System.Numerics.BigInteger.CompareTo%28System.Numerics.BigInteger%29>.</span><span class="sxs-lookup"><span data-stu-id="4a467-335">Its <xref:System.IComparable%601.CompareTo%2A?displayProperty=nameWithType> implementation just wraps a call to <xref:System.Numerics.BigInteger.CompareTo%28System.Numerics.BigInteger%29>.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.CompareTo/cs/Example1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.CompareTo/vb/Example1.vb#1)]  
  
 <span data-ttu-id="4a467-336">El código siguiente, a continuación, crea una instancia de cuatro `StarInfo` objetos y los almacena en un tipo genérico <xref:System.Collections.Generic.List%601> objeto.</span><span class="sxs-lookup"><span data-stu-id="4a467-336">The following code then instantiates four `StarInfo` objects and stores them in a generic <xref:System.Collections.Generic.List%601> object.</span></span> <span data-ttu-id="4a467-337">Después de la <xref:System.Collections.Generic.List%601.Sort%2A?displayProperty=nameWithType> método se llama, `StarInfo` objetos se muestran en orden de su distancia desde la tierra.</span><span class="sxs-lookup"><span data-stu-id="4a467-337">After the <xref:System.Collections.Generic.List%601.Sort%2A?displayProperty=nameWithType> method is called, `StarInfo` objects are displayed in order of their distance from the Earth.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.CompareTo#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.CompareTo/cs/Example1.cs#2)]
 [!code-vb[System.Numerics.BigInteger.CompareTo#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.CompareTo/vb/Example1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Numerics.BigInteger.Compare(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="M:System.Numerics.BigInteger.Equals(System.Numerics.BigInteger)" />
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (obj As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : obj -&gt; int&#xA;override this.CompareTo : obj -&gt; int" Usage="bigInteger.CompareTo obj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="4a467-338">Objeto que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="4a467-338">The object to compare.</span></span></param>
        <summary><span data-ttu-id="4a467-339">Compara esta instancia con un objeto especificado y devuelve un entero que indica si el valor de esta instancia es mayor, igual o menor que el valor del objeto especificado.</span><span class="sxs-lookup"><span data-stu-id="4a467-339">Compares this instance to a specified object and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the value of the specified object.</span></span></summary>
        <returns><span data-ttu-id="4a467-340">Entero con signo que indica la relación de la instancia actual con el parámetro <paramref name="obj" />, como se muestra en la tabla siguiente.</span><span class="sxs-lookup"><span data-stu-id="4a467-340">A signed integer that indicates the relationship of the current instance to the <paramref name="obj" /> parameter, as shown in the following table.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="4a467-341">Valor devuelto</span><span class="sxs-lookup"><span data-stu-id="4a467-341">Return value</span></span> 
 </term><description> <span data-ttu-id="4a467-342">Descripción</span><span class="sxs-lookup"><span data-stu-id="4a467-342">Description</span></span> 
 </description></listheader><item><term> <span data-ttu-id="4a467-343">Menor que cero</span><span class="sxs-lookup"><span data-stu-id="4a467-343">Less than zero</span></span> 
 </term><description> <span data-ttu-id="4a467-344">La instancia actual es menor que <paramref name="obj" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-344">The current instance is less than <paramref name="obj" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="4a467-345">Cero</span><span class="sxs-lookup"><span data-stu-id="4a467-345">Zero</span></span> 
 </term><description> <span data-ttu-id="4a467-346">La instancia actual es igual que <paramref name="obj" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-346">The current instance equals <paramref name="obj" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="4a467-347">Mayor que cero</span><span class="sxs-lookup"><span data-stu-id="4a467-347">Greater than zero</span></span> 
 </term><description> <span data-ttu-id="4a467-348">La instancia actual es mayor que <paramref name="obj" /> o el parámetro <paramref name="obj" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-348">The current instance is greater than <paramref name="obj" />, or the <paramref name="obj" /> parameter is <see langword="null" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a467-349">Esta sobrecarga de la <xref:System.Numerics.BigInteger.CompareTo%2A> método implementa el <xref:System.IComparable.CompareTo%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="4a467-349">This overload of the <xref:System.Numerics.BigInteger.CompareTo%2A> method implements the <xref:System.IComparable.CompareTo%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="4a467-350">Es utilizado por los objetos de colección no genérica para ordenar los elementos de la colección.</span><span class="sxs-lookup"><span data-stu-id="4a467-350">It is used by non-generic collection objects to order the items in the collection.</span></span>  
  
 <span data-ttu-id="4a467-351">El `obj` parámetro debe ser uno de los siguientes:</span><span class="sxs-lookup"><span data-stu-id="4a467-351">The `obj` parameter must be one of the following:</span></span>  
  
-   <span data-ttu-id="4a467-352">Un objeto cuyo tipo de tiempo de ejecución es <xref:System.Numerics.BigInteger>.</span><span class="sxs-lookup"><span data-stu-id="4a467-352">An object whose run-time type is <xref:System.Numerics.BigInteger>.</span></span>  
  
-   <span data-ttu-id="4a467-353">Un <xref:System.Object> variable cuyo valor es `null`.</span><span class="sxs-lookup"><span data-stu-id="4a467-353">An <xref:System.Object> variable whose value is `null`.</span></span> <span data-ttu-id="4a467-354">Si el valor de la `obj` parámetro es `null`, el método devuelve 1, lo que indica que la instancia actual es mayor que `obj`.</span><span class="sxs-lookup"><span data-stu-id="4a467-354">If the value of the `obj` parameter is `null`, the method returns 1, which indicates that the current instance is greater than `obj`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a467-355">El ejemplo siguiente se llama el <xref:System.Numerics.BigInteger.CompareTo%28System.Object%29> método para comparar un <xref:System.Numerics.BigInteger> valor con cada elemento de una matriz de objetos</span><span class="sxs-lookup"><span data-stu-id="4a467-355">The following example calls the <xref:System.Numerics.BigInteger.CompareTo%28System.Object%29> method to compare a <xref:System.Numerics.BigInteger> value with each element in an object array</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.CompareTo#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.CompareTo/cs/Example2.cs#4)]
 [!code-vb[System.Numerics.BigInteger.CompareTo#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.CompareTo/vb/Example2.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4a467-356"><paramref name="obj" /> no es un <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-356"><paramref name="obj" /> is not a <see cref="T:System.Numerics.BigInteger" />.</span></span></exception>
        <altmember cref="T:System.IComparable" />
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (ulong other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 CompareTo(unsigned int64 other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.CompareTo(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (other As ULong) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int CompareTo(System::UInt64 other);" />
      <MemberSignature Language="F#" Value="member this.CompareTo : uint64 -&gt; int" Usage="bigInteger.CompareTo other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="4a467-357">Entero de 64 bits sin signo que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="4a467-357">The unsigned 64-bit integer to compare.</span></span></param>
        <summary><span data-ttu-id="4a467-358">Compara esta instancia con un entero de 64 bits sin signo y devuelve un entero que indica si el valor de esta instancia es menor, igual o mayor que el valor del entero de 64 bits sin signo.</span><span class="sxs-lookup"><span data-stu-id="4a467-358">Compares this instance to an unsigned 64-bit integer and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the value of the unsigned 64-bit integer.</span></span></summary>
        <returns><span data-ttu-id="4a467-359">Entero con signo que indica el valor relativo de esta instancia y <paramref name="other" />, como se muestra en la tabla siguiente.</span><span class="sxs-lookup"><span data-stu-id="4a467-359">A signed integer that indicates the relative value of this instance and <paramref name="other" />, as shown in the following table.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="4a467-360">Valor devuelto</span><span class="sxs-lookup"><span data-stu-id="4a467-360">Return value</span></span> 
 </term><description> <span data-ttu-id="4a467-361">Descripción</span><span class="sxs-lookup"><span data-stu-id="4a467-361">Description</span></span> 
 </description></listheader><item><term> <span data-ttu-id="4a467-362">Menor que cero</span><span class="sxs-lookup"><span data-stu-id="4a467-362">Less than zero</span></span> 
 </term><description> <span data-ttu-id="4a467-363">La instancia actual es menor que <paramref name="other" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-363">The current instance is less than <paramref name="other" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="4a467-364">Cero</span><span class="sxs-lookup"><span data-stu-id="4a467-364">Zero</span></span> 
 </term><description> <span data-ttu-id="4a467-365">La instancia actual es igual que <paramref name="other" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-365">The current instance equals <paramref name="other" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="4a467-366">Mayor que cero</span><span class="sxs-lookup"><span data-stu-id="4a467-366">Greater than zero</span></span> 
 </term><description> <span data-ttu-id="4a467-367">La instancia actual es mayor que <paramref name="other" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-367">The current instance is greater than <paramref name="other" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Divide">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger Divide (System.Numerics.BigInteger dividend, System.Numerics.BigInteger divisor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger Divide(valuetype System.Numerics.BigInteger dividend, valuetype System.Numerics.BigInteger divisor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Divide(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Divide (dividend As BigInteger, divisor As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger Divide(System::Numerics::BigInteger dividend, System::Numerics::BigInteger divisor);" />
      <MemberSignature Language="F#" Value="static member Divide : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.Divide (dividend, divisor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dividend" Type="System.Numerics.BigInteger" />
        <Parameter Name="divisor" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="dividend"><span data-ttu-id="4a467-368">Valor que se va a dividir.</span><span class="sxs-lookup"><span data-stu-id="4a467-368">The value to be divided.</span></span></param>
        <param name="divisor"><span data-ttu-id="4a467-369">Valor por el que se va a dividir.</span><span class="sxs-lookup"><span data-stu-id="4a467-369">The value to divide by.</span></span></param>
        <summary><span data-ttu-id="4a467-370">Divide un valor <see cref="T:System.Numerics.BigInteger" /> por otro y devuelve el resultado.</span><span class="sxs-lookup"><span data-stu-id="4a467-370">Divides one <see cref="T:System.Numerics.BigInteger" /> value by another and returns the result.</span></span></summary>
        <returns><span data-ttu-id="4a467-371">Cociente de la división.</span><span class="sxs-lookup"><span data-stu-id="4a467-371">The quotient of the division.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a467-372">El <xref:System.Numerics.BigInteger.Divide%2A> método realiza la división de enteros; se descarta cualquier resto resultante de la división.</span><span class="sxs-lookup"><span data-stu-id="4a467-372">The <xref:System.Numerics.BigInteger.Divide%2A> method performs integer division; any remainder that results from the division is discarded.</span></span> <span data-ttu-id="4a467-373">Para llevar a cabo la división de enteros conservando el resto, llame a la <xref:System.Numerics.BigInteger.DivRem%2A> método.</span><span class="sxs-lookup"><span data-stu-id="4a467-373">To perform integer division while preserving the remainder, call the <xref:System.Numerics.BigInteger.DivRem%2A> method.</span></span> <span data-ttu-id="4a467-374">Para recuperar solo el resto, llame el <xref:System.Numerics.BigInteger.Remainder%2A> método.</span><span class="sxs-lookup"><span data-stu-id="4a467-374">To retrieve only the remainder, call the <xref:System.Numerics.BigInteger.Remainder%2A> method.</span></span>  
  
 <span data-ttu-id="4a467-375">El <xref:System.Numerics.BigInteger.Divide%2A> método puede usarse por los lenguajes que no admiten la sobrecarga de operadores.</span><span class="sxs-lookup"><span data-stu-id="4a467-375">The <xref:System.Numerics.BigInteger.Divide%2A> method can be used by languages that do not support operator overloading.</span></span> <span data-ttu-id="4a467-376">Su comportamiento es idéntico a la división utilizando el operador de división.</span><span class="sxs-lookup"><span data-stu-id="4a467-376">Its behavior is identical to division using the division operator.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a467-377">En el ejemplo siguiente se crea una matriz de <xref:System.Numerics.BigInteger> valores.</span><span class="sxs-lookup"><span data-stu-id="4a467-377">The following example creates an array of <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="4a467-378">Cada elemento, a continuación, usa el cociente en una operación de división que usa el <xref:System.Numerics.BigInteger.Divide%2A> método, el operador de división (/) y el <xref:System.Numerics.BigInteger.DivRem%2A> método.</span><span class="sxs-lookup"><span data-stu-id="4a467-378">It then uses each element as the quotient in a division operation that uses the <xref:System.Numerics.BigInteger.Divide%2A> method, the division operator (/), and the <xref:System.Numerics.BigInteger.DivRem%2A> method.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Divide#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Divide/cs/Divide1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.Divide#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Divide/vb/Divide1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DivideByZeroException"><span data-ttu-id="4a467-379">El valor de <paramref name="divisor" /> es 0 (cero).</span><span class="sxs-lookup"><span data-stu-id="4a467-379"><paramref name="divisor" /> is 0 (zero).</span></span></exception>
        <altmember cref="M:System.Numerics.BigInteger.op_Division(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
        <altmember cref="M:System.Numerics.BigInteger.DivRem(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger@)" />
        <altmember cref="M:System.Numerics.BigInteger.Remainder(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      </Docs>
    </Member>
    <Member MemberName="DivRem">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger DivRem (System.Numerics.BigInteger dividend, System.Numerics.BigInteger divisor, out System.Numerics.BigInteger remainder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger DivRem(valuetype System.Numerics.BigInteger dividend, valuetype System.Numerics.BigInteger divisor, [out] valuetype System.Numerics.BigInteger&amp; remainder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.DivRem(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DivRem (dividend As BigInteger, divisor As BigInteger, ByRef remainder As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger DivRem(System::Numerics::BigInteger dividend, System::Numerics::BigInteger divisor, [Runtime::InteropServices::Out] System::Numerics::BigInteger % remainder);" />
      <MemberSignature Language="F#" Value="static member DivRem : System.Numerics.BigInteger * System.Numerics.BigInteger *  -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.DivRem (dividend, divisor, remainder)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dividend" Type="System.Numerics.BigInteger" />
        <Parameter Name="divisor" Type="System.Numerics.BigInteger" />
        <Parameter Name="remainder" Type="System.Numerics.BigInteger" RefType="out" />
      </Parameters>
      <Docs>
        <param name="dividend"><span data-ttu-id="4a467-380">Valor que se va a dividir.</span><span class="sxs-lookup"><span data-stu-id="4a467-380">The value to be divided.</span></span></param>
        <param name="divisor"><span data-ttu-id="4a467-381">Valor por el que se va a dividir.</span><span class="sxs-lookup"><span data-stu-id="4a467-381">The value to divide by.</span></span></param>
        <param name="remainder"><span data-ttu-id="4a467-382">Cuando este método devuelve un valor, contiene <see cref="T:System.Numerics.BigInteger" />, que representa el resto de la división.</span><span class="sxs-lookup"><span data-stu-id="4a467-382">When this method returns, contains a <see cref="T:System.Numerics.BigInteger" /> value that represents the remainder from the division.</span></span> <span data-ttu-id="4a467-383">Este parámetro se pasa sin inicializar.</span><span class="sxs-lookup"><span data-stu-id="4a467-383">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="4a467-384">Divide un valor <see cref="T:System.Numerics.BigInteger" /> por otro, devuelve el resultado y devuelve el resto en un parámetro de salida.</span><span class="sxs-lookup"><span data-stu-id="4a467-384">Divides one <see cref="T:System.Numerics.BigInteger" /> value by another, returns the result, and returns the remainder in an output parameter.</span></span></summary>
        <returns><span data-ttu-id="4a467-385">Cociente de la división.</span><span class="sxs-lookup"><span data-stu-id="4a467-385">The quotient of the division.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a467-386">Este método conserva el cociente y el resto resultante de la división de enteros.</span><span class="sxs-lookup"><span data-stu-id="4a467-386">This method preserves both the quotient and the remainder that results from integer division.</span></span> <span data-ttu-id="4a467-387">Si no está interesado en el resto, utilice el <xref:System.Numerics.BigInteger.Divide%2A> método o el operador de división; si no está solo está interesado en el resto, use el <xref:System.Numerics.BigInteger.Remainder%2A> método.</span><span class="sxs-lookup"><span data-stu-id="4a467-387">If you are not interested in the remainder, use the <xref:System.Numerics.BigInteger.Divide%2A> method or the division operator; if you are only interested in the remainder, use the <xref:System.Numerics.BigInteger.Remainder%2A> method.</span></span>  
  
 <span data-ttu-id="4a467-388">El inicio de sesión devuelto del `remainder` valor es el mismo que el inicio de sesión de la `dividend` parámetro.</span><span class="sxs-lookup"><span data-stu-id="4a467-388">The sign of the returned `remainder` value is the same as the sign of the `dividend` parameter.</span></span>  
  
 <span data-ttu-id="4a467-389">El comportamiento de la <xref:System.Numerics.BigInteger.DivRem%2A> método es idéntico de la <xref:System.Math.DivRem%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="4a467-389">The behavior of the <xref:System.Numerics.BigInteger.DivRem%2A> method is identical to that of the <xref:System.Math.DivRem%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a467-390">En el ejemplo siguiente se crea una matriz de <xref:System.Numerics.BigInteger> valores.</span><span class="sxs-lookup"><span data-stu-id="4a467-390">The following example creates an array of <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="4a467-391">Cada elemento, a continuación, usa el cociente en una operación de división que usa el <xref:System.Numerics.BigInteger.Divide%2A> método, el operador de división (/) y el <xref:System.Numerics.BigInteger.DivRem%2A> método.</span><span class="sxs-lookup"><span data-stu-id="4a467-391">It then uses each element as the quotient in a division operation that uses the <xref:System.Numerics.BigInteger.Divide%2A> method, the division operator (/), and the <xref:System.Numerics.BigInteger.DivRem%2A> method.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Divide#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Divide/cs/Divide1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.Divide#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Divide/vb/Divide1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DivideByZeroException"><span data-ttu-id="4a467-392">El valor de <paramref name="divisor" /> es 0 (cero).</span><span class="sxs-lookup"><span data-stu-id="4a467-392"><paramref name="divisor" /> is 0 (zero).</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4a467-393">Devuelve un valor que indica si dos valores numéricos son iguales.</span><span class="sxs-lookup"><span data-stu-id="4a467-393">Returns a value that indicates whether two numeric values are equal.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (long other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Equals(int64 other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Equals(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(long other);" />
      <MemberSignature Language="F#" Value="override this.Equals : int64 -&gt; bool" Usage="bigInteger.Equals other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="4a467-394">Valor entero de 64 bits con signo que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="4a467-394">The signed 64-bit integer value to compare.</span></span></param>
        <summary><span data-ttu-id="4a467-395">Devuelve un valor que indica si la instancia actual y un entero de 64 bits con signo tienen el mismo valor.</span><span class="sxs-lookup"><span data-stu-id="4a467-395">Returns a value that indicates whether the current instance and a signed 64-bit integer have the same value.</span></span></summary>
        <returns><span data-ttu-id="4a467-396">Es <see langword="true" /> si el entero de 64 bits con signo y la instancia actual tienen el mismo valor; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-396"><see langword="true" /> if the signed 64-bit integer and the current instance have the same value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a467-397">Si `other` es un <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, o <xref:System.UInt32> valor, se convierte implícitamente en un <xref:System.Int64> valor cuando se llama al método.</span><span class="sxs-lookup"><span data-stu-id="4a467-397">If `other` is a <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, or <xref:System.UInt32> value, it is implicitly converted to an <xref:System.Int64> value when the method is called.</span></span>  
  
 <span data-ttu-id="4a467-398">Para determinar la relación entre los dos objetos en lugar de simplemente comprobar la igualdad, llame a la <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="4a467-398">To determine the relationship between the two objects instead of just testing for equality, call the <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a467-399">El ejemplo siguiente crea un <xref:System.Numerics.BigInteger> objeto de cada tipo integral excepto <xref:System.UInt64>.</span><span class="sxs-lookup"><span data-stu-id="4a467-399">The following example instantiates a <xref:System.Numerics.BigInteger> object from each integral type except <xref:System.UInt64>.</span></span> <span data-ttu-id="4a467-400">A continuación, llama el <xref:System.Numerics.BigInteger.Equals%28System.Int64%29> método para comparar la <xref:System.Numerics.BigInteger> con el valor entero original que se pasó a la <xref:System.Numerics.BigInteger> constructor.</span><span class="sxs-lookup"><span data-stu-id="4a467-400">It then calls the <xref:System.Numerics.BigInteger.Equals%28System.Int64%29> method to compare the <xref:System.Numerics.BigInteger> value with the original integer value that was passed to the <xref:System.Numerics.BigInteger> constructor.</span></span> <span data-ttu-id="4a467-401">Como se muestra en la salida, los valores son iguales en cada caso.</span><span class="sxs-lookup"><span data-stu-id="4a467-401">As the output shows, the values are equal in each case.</span></span>  
  
 [!code-cpp[System.Numerics.BigInteger.Equals#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Equals/cpp/equals.cpp#1)]
 [!code-csharp[System.Numerics.BigInteger.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Equals/cs/EqualsExample1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Equals/vb/EqualsExample1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Numerics.BigInteger other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype System.Numerics.BigInteger other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Equals(System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Numerics::BigInteger other);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Numerics.BigInteger -&gt; bool" Usage="bigInteger.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="4a467-402">Objeto que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="4a467-402">The object to compare.</span></span></param>
        <summary><span data-ttu-id="4a467-403">Devuelve un valor que indica si la instancia actual y un objeto <see cref="T:System.Numerics.BigInteger" /> especificado tienen el mismo valor.</span><span class="sxs-lookup"><span data-stu-id="4a467-403">Returns a value that indicates whether the current instance and a specified <see cref="T:System.Numerics.BigInteger" /> object have the same value.</span></span></summary>
        <returns><span data-ttu-id="4a467-404">Es <see langword="true" /> si este objeto <see cref="T:System.Numerics.BigInteger" /> y <paramref name="other" /> tienen el mismo valor; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-404"><see langword="true" /> if this <see cref="T:System.Numerics.BigInteger" /> object and <paramref name="other" /> have the same value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a467-405">Este método implementa el <xref:System.IEquatable%601> interfaz y realiza un poco mejor que <xref:System.Numerics.BigInteger.Equals%28System.Object%29> porque no tiene que convertir el `other` parámetro a un <xref:System.Numerics.BigInteger> objeto.</span><span class="sxs-lookup"><span data-stu-id="4a467-405">This method implements the <xref:System.IEquatable%601> interface and performs slightly better than <xref:System.Numerics.BigInteger.Equals%28System.Object%29> because it does not have to convert the `other` parameter to a <xref:System.Numerics.BigInteger> object.</span></span>  
  
 <span data-ttu-id="4a467-406">Para determinar la relación entre los dos <xref:System.Numerics.BigInteger> objetos en lugar de simplemente comprobar la igualdad, llame a la <xref:System.Numerics.BigInteger.CompareTo%28System.Numerics.BigInteger%29?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="4a467-406">To determine the relationship between the two <xref:System.Numerics.BigInteger> objects instead of just testing for equality, call the <xref:System.Numerics.BigInteger.CompareTo%28System.Numerics.BigInteger%29?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a467-407">El ejemplo siguiente compara la distancia aproximada de varias estrellas desde la tierra con la distancia de Épsilon Indi a tierra para determinar si son iguales.</span><span class="sxs-lookup"><span data-stu-id="4a467-407">The following example compares the approximate distance of several stars from Earth with the distance of Epsilon Indi from Earth to determine whether they are equal.</span></span> <span data-ttu-id="4a467-408">El ejemplo usa cada sobrecarga de la <xref:System.Numerics.BigInteger.Equals%2A> método para comprobar la igualdad.</span><span class="sxs-lookup"><span data-stu-id="4a467-408">The example uses each overload of the <xref:System.Numerics.BigInteger.Equals%2A> method to test for equality.</span></span>  
  
 [!code-cpp[System.Numerics.BigInteger.Equals#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Equals/cpp/equals2.cpp#2)]
 [!code-csharp[System.Numerics.BigInteger.Equals#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Equals/cs/EqualsExample1.cs#2)]
 [!code-vb[System.Numerics.BigInteger.Equals#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Equals/vb/EqualsExample1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="bigInteger.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="4a467-409">Objeto que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="4a467-409">The object to compare.</span></span></param>
        <summary><span data-ttu-id="4a467-410">Devuelve un valor que indica si la instancia actual y un objeto especificado tienen el mismo valor.</span><span class="sxs-lookup"><span data-stu-id="4a467-410">Returns a value that indicates whether the current instance and a specified object have the same value.</span></span></summary>
        <returns><span data-ttu-id="4a467-411"><see langword="true" /> si el argumento <paramref name="obj" /> es un objeto <see cref="T:System.Numerics.BigInteger" /> y su valor es igual al valor de la instancia <see cref="T:System.Numerics.BigInteger" /> actual; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-411"><see langword="true" /> if the <paramref name="obj" /> argument is a <see cref="T:System.Numerics.BigInteger" /> object, and its value is equal to the value of the current <see cref="T:System.Numerics.BigInteger" /> instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a467-412">Si el `obj` argumento no es un <xref:System.Numerics.BigInteger> valor, el método devuelve `false`.</span><span class="sxs-lookup"><span data-stu-id="4a467-412">If the `obj` argument is not a <xref:System.Numerics.BigInteger> value, the method returns `false`.</span></span> <span data-ttu-id="4a467-413">El método devuelve `true` solo si `obj` es un <xref:System.Numerics.BigInteger> instancia cuyo valor es igual a la instancia actual.</span><span class="sxs-lookup"><span data-stu-id="4a467-413">The method returns `true` only if `obj` is a <xref:System.Numerics.BigInteger> instance whose value is equal to the current instance.</span></span>  
  
 <span data-ttu-id="4a467-414">Para determinar la relación entre los dos objetos en lugar de simplemente comprobar la igualdad, llame a la <xref:System.Numerics.BigInteger.CompareTo%28System.Object%29> método.</span><span class="sxs-lookup"><span data-stu-id="4a467-414">To determine the relationship between the two objects instead of just testing for equality, call the <xref:System.Numerics.BigInteger.CompareTo%28System.Object%29> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a467-415">En el ejemplo siguiente se define paralelo <xref:System.Object> y <xref:System.Numerics.BigInteger> matrices.</span><span class="sxs-lookup"><span data-stu-id="4a467-415">The following example defines parallel <xref:System.Object> and <xref:System.Numerics.BigInteger> arrays.</span></span> <span data-ttu-id="4a467-416">Cada elemento de una matriz tiene el mismo valor que el elemento correspondiente de la segunda matriz.</span><span class="sxs-lookup"><span data-stu-id="4a467-416">Each element of one array has the same value as the corresponding element of the second array.</span></span> <span data-ttu-id="4a467-417">Como la salida muestra el ejemplo, la instancia en el <xref:System.Numerics.BigInteger> matriz se considera igual a la instancia en el <xref:System.Object> matriz solo si el último es un <xref:System.Numerics.BigInteger> y sus valores son iguales.</span><span class="sxs-lookup"><span data-stu-id="4a467-417">As the output from the example shows, the instance in the <xref:System.Numerics.BigInteger> array is considered to be equal to the instance in the <xref:System.Object> array only if the latter is a <xref:System.Numerics.BigInteger> and their values are equal.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Equals#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Equals/cs/Equals_Obj1.cs#3)]
 [!code-vb[System.Numerics.BigInteger.Equals#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Equals/vb/Equals_Obj1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (ulong other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Equals(unsigned int64 other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Equals(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As ULong) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(System::UInt64 other);" />
      <MemberSignature Language="F#" Value="override this.Equals : uint64 -&gt; bool" Usage="bigInteger.Equals other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="4a467-418">Entero de 64 bits sin signo que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="4a467-418">The unsigned 64-bit integer to compare.</span></span></param>
        <summary><span data-ttu-id="4a467-419">Devuelve un valor que indica si la instancia actual y un entero de 64 bits sin signo tienen el mismo valor.</span><span class="sxs-lookup"><span data-stu-id="4a467-419">Returns a value that indicates whether the current instance and an unsigned 64-bit integer have the same value.</span></span></summary>
        <returns><span data-ttu-id="4a467-420">Es <see langword="true" /> si la instancia actual y el entero de 64 bits sin signo tienen el mismo valor; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-420"><see langword="true" /> if the current instance and the unsigned 64-bit integer have the same value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a467-421">Para determinar la relación entre los dos objetos en lugar de simplemente comprobar la igualdad, llame a la <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="4a467-421">To determine the relationship between the two objects instead of just testing for equality, call the <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a467-422">El ejemplo siguiente compara la distancia aproximada de varias estrellas desde la tierra con la distancia de Épsilon Indi a tierra para determinar si son iguales.</span><span class="sxs-lookup"><span data-stu-id="4a467-422">The following example compares the approximate distance of several stars from Earth with the distance of Epsilon Indi from Earth to determine whether they are equal.</span></span> <span data-ttu-id="4a467-423">El ejemplo usa cada sobrecarga de la <xref:System.Numerics.BigInteger.Equals%2A> método para comprobar la igualdad.</span><span class="sxs-lookup"><span data-stu-id="4a467-423">The example uses each overload of the <xref:System.Numerics.BigInteger.Equals%2A> method to test for equality.</span></span>  
  
 [!code-cpp[System.Numerics.BigInteger.Equals#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Equals/cpp/equals2.cpp#2)]
 [!code-csharp[System.Numerics.BigInteger.Equals#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Equals/cs/EqualsExample1.cs#2)]
 [!code-vb[System.Numerics.BigInteger.Equals#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Equals/vb/EqualsExample1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public int GetByteCount (bool isUnsigned = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetByteCount(bool isUnsigned) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.GetByteCount(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetByteCount (Optional isUnsigned As Boolean = false) As Integer" />
      <MemberSignature Language="F#" Value="member this.GetByteCount : bool -&gt; int" Usage="bigInteger.GetByteCount isUnsigned" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isUnsigned" Type="System.Boolean" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="isUnsigned">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="bigInteger.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4a467-424">Devuelve el código hash del objeto <see cref="T:System.Numerics.BigInteger" /> actual.</span><span class="sxs-lookup"><span data-stu-id="4a467-424">Returns the hash code for the current <see cref="T:System.Numerics.BigInteger" /> object.</span></span></summary>
        <returns><span data-ttu-id="4a467-425">Código hash de un entero de 32 bits con signo.</span><span class="sxs-lookup"><span data-stu-id="4a467-425">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GreatestCommonDivisor">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger GreatestCommonDivisor (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger GreatestCommonDivisor(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.GreatestCommonDivisor(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GreatestCommonDivisor (left As BigInteger, right As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger GreatestCommonDivisor(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member GreatestCommonDivisor : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.GreatestCommonDivisor (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="4a467-426">Primer valor.</span><span class="sxs-lookup"><span data-stu-id="4a467-426">The first value.</span></span></param>
        <param name="right"><span data-ttu-id="4a467-427">Segundo valor.</span><span class="sxs-lookup"><span data-stu-id="4a467-427">The second value.</span></span></param>
        <summary><span data-ttu-id="4a467-428">Busca el máximo común divisor de dos valores <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-428">Finds the greatest common divisor of two <see cref="T:System.Numerics.BigInteger" /> values.</span></span></summary>
        <returns><span data-ttu-id="4a467-429">Máximo común divisor de <paramref name="left" /> y <paramref name="right" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-429">The greatest common divisor of <paramref name="left" /> and <paramref name="right" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a467-430">El máximo común divisor es el número más grande en la que los dos <xref:System.Numerics.BigInteger> se pueden dividir los valores sin devolver un resto.</span><span class="sxs-lookup"><span data-stu-id="4a467-430">The greatest common divisor is the largest number into which the two <xref:System.Numerics.BigInteger> values can be divided without returning a remainder.</span></span>  
  
 <span data-ttu-id="4a467-431">Si el `left` y `right` parámetros son números distinto de cero, el método devuelve siempre al menos un valor de 1, porque todos los números se pueden dividir en 1.</span><span class="sxs-lookup"><span data-stu-id="4a467-431">If the `left` and `right` parameters are non-zero numbers, the method always returns at least a value of 1 because all numbers can be divided by 1.</span></span> <span data-ttu-id="4a467-432">Si cualquiera de los parámetros es cero, el método devuelve el valor absoluto del parámetro distinto de cero.</span><span class="sxs-lookup"><span data-stu-id="4a467-432">If either parameter is zero, the method returns the absolute value of the non-zero parameter.</span></span> <span data-ttu-id="4a467-433">Si ambos valores son cero, el método devuelve cero.</span><span class="sxs-lookup"><span data-stu-id="4a467-433">If both values are zero, the method returns zero.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4a467-434">Calcular el máximo común divisor de valores muy grandes de `left` y `right` puede ser una operación muy lenta.</span><span class="sxs-lookup"><span data-stu-id="4a467-434">Computing the greatest common divisor of very large values of `left` and `right` can be a very time-consuming operation.</span></span>  
  
 <span data-ttu-id="4a467-435">El valor devuelto por la <xref:System.Numerics.BigInteger.GreatestCommonDivisor%2A> método siempre es positivo, independientemente del signo de la `left` y `right` parámetros.</span><span class="sxs-lookup"><span data-stu-id="4a467-435">The value returned by the <xref:System.Numerics.BigInteger.GreatestCommonDivisor%2A> method is always positive regardless of the sign of the `left` and `right` parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a467-436">El ejemplo siguiente muestra una llamada a la <xref:System.Numerics.BigInteger.GreatestCommonDivisor%2A> método y el control necesarios para proporcionar información útil acerca de excepciones una <xref:System.ArgumentOutOfRangeException>.</span><span class="sxs-lookup"><span data-stu-id="4a467-436">The following example illustrates a call to the <xref:System.Numerics.BigInteger.GreatestCommonDivisor%2A> method and the exception handling necessary to provide useful information about an <xref:System.ArgumentOutOfRangeException>.</span></span> <span data-ttu-id="4a467-437">El resultado indica que el máximo común divisor de estos dos números es 1.</span><span class="sxs-lookup"><span data-stu-id="4a467-437">The result indicates that the greatest common divisor of these two numbers is 1.</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#10)]
 [!code-vb[System.Numeric.BigInteger.Class#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEven">
      <MemberSignature Language="C#" Value="public bool IsEven { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEven" />
      <MemberSignature Language="DocId" Value="P:System.Numerics.BigInteger.IsEven" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsEven As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEven { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEven : bool" Usage="System.Numerics.BigInteger.IsEven" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4a467-438">Indica si el valor del objeto <see cref="T:System.Numerics.BigInteger" /> actual es un número par.</span><span class="sxs-lookup"><span data-stu-id="4a467-438">Indicates whether the value of the current <see cref="T:System.Numerics.BigInteger" /> object is an even number.</span></span></summary>
        <value><span data-ttu-id="4a467-439">Es <see langword="true" /> si el valor del objeto <see cref="T:System.Numerics.BigInteger" /> es un número par; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-439"><see langword="true" /> if the value of the <see cref="T:System.Numerics.BigInteger" /> object is an even number; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a467-440">Esta propiedad es una característica de conveniencia que indica si un <xref:System.Numerics.BigInteger> valor es divisible por dos.</span><span class="sxs-lookup"><span data-stu-id="4a467-440">This property is a convenience feature that indicates whether a <xref:System.Numerics.BigInteger> value is evenly divisible by two.</span></span> <span data-ttu-id="4a467-441">Es equivalente a la siguiente expresión:</span><span class="sxs-lookup"><span data-stu-id="4a467-441">It is equivalent to the following expression:</span></span>  
  
```csharp   
value % 2 == 0;  
```  
  
```vb  
value Mod 2 = 0  
```  
  
 <span data-ttu-id="4a467-442">Si el valor del elemento actual <xref:System.Numerics.BigInteger> objeto es <xref:System.Numerics.BigInteger.Zero%2A?displayProperty=nameWithType>, la propiedad devuelve `true`.</span><span class="sxs-lookup"><span data-stu-id="4a467-442">If the value of the current <xref:System.Numerics.BigInteger> object is <xref:System.Numerics.BigInteger.Zero%2A?displayProperty=nameWithType>, the property returns `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOne">
      <MemberSignature Language="C#" Value="public bool IsOne { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsOne" />
      <MemberSignature Language="DocId" Value="P:System.Numerics.BigInteger.IsOne" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsOne As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsOne { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsOne : bool" Usage="System.Numerics.BigInteger.IsOne" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4a467-443">Indica si el valor del objeto <see cref="T:System.Numerics.BigInteger" /> actual es <see cref="P:System.Numerics.BigInteger.One" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-443">Indicates whether the value of the current <see cref="T:System.Numerics.BigInteger" /> object is <see cref="P:System.Numerics.BigInteger.One" />.</span></span></summary>
        <value><span data-ttu-id="4a467-444">Es <see langword="true" /> si el valor del objeto <see cref="T:System.Numerics.BigInteger" /> es <see cref="P:System.Numerics.BigInteger.One" />; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-444"><see langword="true" /> if the value of the <see cref="T:System.Numerics.BigInteger" /> object is <see cref="P:System.Numerics.BigInteger.One" />; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a467-445">Esta propiedad ofrece un rendimiento significativamente mejor que otras comparaciones con uno, como `thisBigInteger.Equals(BigInteger.One)`.</span><span class="sxs-lookup"><span data-stu-id="4a467-445">This property offers significantly better performance than other comparisons with one, such as `thisBigInteger.Equals(BigInteger.One)`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Numerics.BigInteger.One" />
      </Docs>
    </Member>
    <Member MemberName="IsPowerOfTwo">
      <MemberSignature Language="C#" Value="public bool IsPowerOfTwo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPowerOfTwo" />
      <MemberSignature Language="DocId" Value="P:System.Numerics.BigInteger.IsPowerOfTwo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPowerOfTwo As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPowerOfTwo { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsPowerOfTwo : bool" Usage="System.Numerics.BigInteger.IsPowerOfTwo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4a467-446">Indica si el valor del objeto <see cref="T:System.Numerics.BigInteger" /> actual es una potencia de dos.</span><span class="sxs-lookup"><span data-stu-id="4a467-446">Indicates whether the value of the current <see cref="T:System.Numerics.BigInteger" /> object is a power of two.</span></span></summary>
        <value><span data-ttu-id="4a467-447">Es <see langword="true" /> si el valor del objeto <see cref="T:System.Numerics.BigInteger" /> es una potencia de dos; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-447"><see langword="true" /> if the value of the <see cref="T:System.Numerics.BigInteger" /> object is a power of two; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a467-448">Esta propiedad determina si un <xref:System.Numerics.BigInteger> valor tiene un solo bit distinto de cero establecido.</span><span class="sxs-lookup"><span data-stu-id="4a467-448">This property determines whether a <xref:System.Numerics.BigInteger> value has a single non-zero bit set.</span></span> <span data-ttu-id="4a467-449">Esto significa que devuelve `true` si el valor del elemento actual <xref:System.Numerics.BigInteger> objeto es 1 (es decir, 2<sup>0</sup>) o cualquier mayor potencia de dos.</span><span class="sxs-lookup"><span data-stu-id="4a467-449">This means that it returns `true` if the value of the current <xref:System.Numerics.BigInteger> object is 1 (that is, 2<sup>0</sup>) or any greater power of two.</span></span> <span data-ttu-id="4a467-450">Devuelve `false` si el valor del elemento actual <xref:System.Numerics.BigInteger> objeto es 0.</span><span class="sxs-lookup"><span data-stu-id="4a467-450">It returns `false` if the value of the current <xref:System.Numerics.BigInteger> object is 0.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsZero">
      <MemberSignature Language="C#" Value="public bool IsZero { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsZero" />
      <MemberSignature Language="DocId" Value="P:System.Numerics.BigInteger.IsZero" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsZero As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsZero { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsZero : bool" Usage="System.Numerics.BigInteger.IsZero" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4a467-451">Indica si el valor del objeto <see cref="T:System.Numerics.BigInteger" /> actual es <see cref="P:System.Numerics.BigInteger.Zero" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-451">Indicates whether the value of the current <see cref="T:System.Numerics.BigInteger" /> object is <see cref="P:System.Numerics.BigInteger.Zero" />.</span></span></summary>
        <value><span data-ttu-id="4a467-452">Es <see langword="true" /> si el valor del objeto <see cref="T:System.Numerics.BigInteger" /> es <see cref="P:System.Numerics.BigInteger.Zero" />; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-452"><see langword="true" /> if the value of the <see cref="T:System.Numerics.BigInteger" /> object is <see cref="P:System.Numerics.BigInteger.Zero" />; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a467-453">Esta propiedad ofrece un rendimiento significativamente mejor que `BigInteger.Equals(BigInteger.Zero)`.</span><span class="sxs-lookup"><span data-stu-id="4a467-453">This property offers significantly better performance than `BigInteger.Equals(BigInteger.Zero)`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Numerics.BigInteger.Zero" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Log">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4a467-454">Devuelve el logaritmo de un número especificado.</span><span class="sxs-lookup"><span data-stu-id="4a467-454">Returns the logarithm of a specified number.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Log">
      <MemberSignature Language="C#" Value="public static double Log (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Log(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Log (value As BigInteger) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Log(System::Numerics::BigInteger value);" />
      <MemberSignature Language="F#" Value="static member Log : System.Numerics.BigInteger -&gt; double" Usage="System.Numerics.BigInteger.Log value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4a467-455">Número cuyo logaritmo se va a calcular.</span><span class="sxs-lookup"><span data-stu-id="4a467-455">The number whose logarithm is to be found.</span></span></param>
        <summary><span data-ttu-id="4a467-456">Devuelve el logaritmo natural (en base <see langword="e" />) de un número especificado.</span><span class="sxs-lookup"><span data-stu-id="4a467-456">Returns the natural (base <see langword="e" />) logarithm of a specified number.</span></span></summary>
        <returns><span data-ttu-id="4a467-457">Logaritmo natural (base <see langword="e" />) de <paramref name="value" />, como se muestra en la tabla de la sección Comentarios.</span><span class="sxs-lookup"><span data-stu-id="4a467-457">The natural (base <see langword="e" />) logarithm of <paramref name="value" />, as shown in the table in the Remarks section.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a467-458">El `value` parámetro se especifica como un número en base 10.</span><span class="sxs-lookup"><span data-stu-id="4a467-458">The `value` parameter is specified as a base 10 number.</span></span>  
  
 <span data-ttu-id="4a467-459">Devolver la precisión depende de valor de este método en el signo de `value`, tal y como se muestra en la tabla siguiente.</span><span class="sxs-lookup"><span data-stu-id="4a467-459">The precise return value of this method depends on the sign of `value`, as the following table shows.</span></span>  
  
|<span data-ttu-id="4a467-460">La sesión de `value` parámetro</span><span class="sxs-lookup"><span data-stu-id="4a467-460">Sign of `value` parameter</span></span>|<span data-ttu-id="4a467-461">Valor devuelto</span><span class="sxs-lookup"><span data-stu-id="4a467-461">Return value</span></span>|  
|-------------------------------|------------------|  
|<span data-ttu-id="4a467-462">Positivo</span><span class="sxs-lookup"><span data-stu-id="4a467-462">Positive</span></span>|<span data-ttu-id="4a467-463">El logaritmo natural de `value`; es decir, ln `value`, o log e`value`.</span><span class="sxs-lookup"><span data-stu-id="4a467-463">The natural logarithm of `value`; that is, ln `value`, or log e`value`.</span></span>|  
|<span data-ttu-id="4a467-464">Cero</span><span class="sxs-lookup"><span data-stu-id="4a467-464">Zero</span></span>|<span data-ttu-id="4a467-465"><xref:System.Double.NegativeInfinity>.</span><span class="sxs-lookup"><span data-stu-id="4a467-465"><xref:System.Double.NegativeInfinity>.</span></span>|  
|<span data-ttu-id="4a467-466">Negativo</span><span class="sxs-lookup"><span data-stu-id="4a467-466">Negative</span></span>|<span data-ttu-id="4a467-467"><xref:System.Double.NaN>.</span><span class="sxs-lookup"><span data-stu-id="4a467-467"><xref:System.Double.NaN>.</span></span>|  
  
 <span data-ttu-id="4a467-468">Para calcular el logaritmo en base 10 de un <xref:System.Numerics.BigInteger> valor, llame a la <xref:System.Numerics.BigInteger.Log10%2A> método.</span><span class="sxs-lookup"><span data-stu-id="4a467-468">To calculate the base 10 logarithm of a <xref:System.Numerics.BigInteger> value, call the <xref:System.Numerics.BigInteger.Log10%2A> method.</span></span> <span data-ttu-id="4a467-469">Para calcular el logaritmo de un número en otra base, llame a la <xref:System.Numerics.BigInteger.Log%28System.Numerics.BigInteger%2CSystem.Double%29> método.</span><span class="sxs-lookup"><span data-stu-id="4a467-469">To calculate the logarithm of a number in another base, call the <xref:System.Numerics.BigInteger.Log%28System.Numerics.BigInteger%2CSystem.Double%29> method.</span></span>  
  
 <span data-ttu-id="4a467-470">Puede encontrar la raíz cuadrada de un número mediante una llamada a la <xref:System.Numerics.BigInteger.Log%2A> método junto con el <xref:System.Math.Exp%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="4a467-470">You can find the square root of a number by calling the <xref:System.Numerics.BigInteger.Log%2A> method along with the <xref:System.Math.Exp%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="4a467-471">Tenga en cuenta que el resultado es <xref:System.Double.PositiveInfinity?displayProperty=nameWithType> si el resultado es mayor que <xref:System.Double.MaxValue?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4a467-471">Note that the result is <xref:System.Double.PositiveInfinity?displayProperty=nameWithType> if the result is greater than <xref:System.Double.MaxValue?displayProperty=nameWithType>.</span></span> <span data-ttu-id="4a467-472">En el ejemplo siguiente se calcula la raíz cuadrada de cada elemento en una matriz de <xref:System.Numerics.BigInteger> valores.</span><span class="sxs-lookup"><span data-stu-id="4a467-472">The following example calculates the square root of each element in an array of <xref:System.Numerics.BigInteger> values.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Log#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.numerics.biginteger.log/cs/log1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.Log#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.numerics.biginteger.log/vb/log1.vb#1)]
  
 <span data-ttu-id="4a467-473">Este método corresponde a la <xref:System.Math.Log%28System.Double%29?displayProperty=nameWithType> método para los tipos numéricos primitivos.</span><span class="sxs-lookup"><span data-stu-id="4a467-473">This method corresponds to the <xref:System.Math.Log%28System.Double%29?displayProperty=nameWithType> method for the primitive numeric types.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="4a467-474">El logaritmo natural de <paramref name="value" /> está fuera del intervalo del tipo de datos <see cref="T:System.Double" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-474">The natural log of <paramref name="value" /> is out of range of the <see cref="T:System.Double" /> data type.</span></span></exception>
        <altmember cref="M:System.Numerics.BigInteger.Log10(System.Numerics.BigInteger)" />
      </Docs>
    </Member>
    <Member MemberName="Log">
      <MemberSignature Language="C#" Value="public static double Log (System.Numerics.BigInteger value, double baseValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Log(valuetype System.Numerics.BigInteger value, float64 baseValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Log (value As BigInteger, baseValue As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Log(System::Numerics::BigInteger value, double baseValue);" />
      <MemberSignature Language="F#" Value="static member Log : System.Numerics.BigInteger * double -&gt; double" Usage="System.Numerics.BigInteger.Log (value, baseValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
        <Parameter Name="baseValue" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4a467-475">Número cuyo logaritmo hay que calcular.</span><span class="sxs-lookup"><span data-stu-id="4a467-475">A number whose logarithm is to be found.</span></span></param>
        <param name="baseValue"><span data-ttu-id="4a467-476">Base del logaritmo.</span><span class="sxs-lookup"><span data-stu-id="4a467-476">The base of the logarithm.</span></span></param>
        <summary><span data-ttu-id="4a467-477">Devuelve el logaritmo de un número especificado en una base determinada.</span><span class="sxs-lookup"><span data-stu-id="4a467-477">Returns the logarithm of a specified number in a specified base.</span></span></summary>
        <returns><span data-ttu-id="4a467-478">Logaritmo en base <paramref name="baseValue" /> de <paramref name="value" />, como se muestra en la tabla de la sección Comentarios.</span><span class="sxs-lookup"><span data-stu-id="4a467-478">The base <paramref name="baseValue" /> logarithm of <paramref name="value" />, as shown in the table in the Remarks section.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a467-479">El `value` y `baseValue` parámetros se especifican como números en base 10.</span><span class="sxs-lookup"><span data-stu-id="4a467-479">The `value` and `baseValue` parameters are specified as base 10 numbers.</span></span>  
  
 <span data-ttu-id="4a467-480">Devolver la precisión el valor del método depende del signo de `value` y en el inicio de sesión y el valor de `baseValue`, tal y como se muestra en la tabla siguiente.</span><span class="sxs-lookup"><span data-stu-id="4a467-480">The precise return value of the method depends on the sign of `value` and on the sign and value of `baseValue`, as the following table shows.</span></span>  
  
|<span data-ttu-id="4a467-481">Parámetro `value`</span><span class="sxs-lookup"><span data-stu-id="4a467-481">`value` parameter</span></span>|<span data-ttu-id="4a467-482">Parámetro `baseValue`</span><span class="sxs-lookup"><span data-stu-id="4a467-482">`baseValue` parameter</span></span>|<span data-ttu-id="4a467-483">Valor devuelto</span><span class="sxs-lookup"><span data-stu-id="4a467-483">Return value</span></span>|  
|-----------------------|---------------------------|------------------|  
|<span data-ttu-id="4a467-484">`value` > 0</span><span class="sxs-lookup"><span data-stu-id="4a467-484">`value` > 0</span></span>|<span data-ttu-id="4a467-485">(0 < `baseValue` < 1) - o bien -(`baseValue` > 1)</span><span class="sxs-lookup"><span data-stu-id="4a467-485">(0 < `baseValue` < 1) -or-(`baseValue` > 1)</span></span>|<span data-ttu-id="4a467-486">logbaseValue(`value`)</span><span class="sxs-lookup"><span data-stu-id="4a467-486">logbaseValue(`value`)</span></span>|  
|<span data-ttu-id="4a467-487">`value` < 0</span><span class="sxs-lookup"><span data-stu-id="4a467-487">`value` < 0</span></span>|<span data-ttu-id="4a467-488">(cualquier valor)</span><span class="sxs-lookup"><span data-stu-id="4a467-488">(any value)</span></span>|<xref:System.Double.NaN?displayProperty=nameWithType>|  
|<span data-ttu-id="4a467-489">(cualquier valor)</span><span class="sxs-lookup"><span data-stu-id="4a467-489">(any value)</span></span>|<span data-ttu-id="4a467-490">`baseValue` < 0</span><span class="sxs-lookup"><span data-stu-id="4a467-490">`baseValue` < 0</span></span>|<xref:System.Double.NaN?displayProperty=nameWithType>|  
|<span data-ttu-id="4a467-491">`value` != 1</span><span class="sxs-lookup"><span data-stu-id="4a467-491">`value` != 1</span></span>|<span data-ttu-id="4a467-492">`baseValue` = 0</span><span class="sxs-lookup"><span data-stu-id="4a467-492">`baseValue` = 0</span></span>|<xref:System.Double.NaN?displayProperty=nameWithType>|  
|<span data-ttu-id="4a467-493">`value` != 1</span><span class="sxs-lookup"><span data-stu-id="4a467-493">`value` != 1</span></span>|`baseValue` = <xref:System.Double.PositiveInfinity?displayProperty=nameWithType>|<xref:System.Double.NaN?displayProperty=nameWithType>|  
|<span data-ttu-id="4a467-494">(cualquier valor)</span><span class="sxs-lookup"><span data-stu-id="4a467-494">(any value)</span></span>|`baseValue` = <xref:System.Double.NaN?displayProperty=nameWithType>|<xref:System.Double.NaN?displayProperty=nameWithType>|  
|<span data-ttu-id="4a467-495">(cualquier valor)</span><span class="sxs-lookup"><span data-stu-id="4a467-495">(any value)</span></span>|<span data-ttu-id="4a467-496">`baseValue` = 1</span><span class="sxs-lookup"><span data-stu-id="4a467-496">`baseValue` = 1</span></span>|<xref:System.Double.NaN?displayProperty=nameWithType>|  
|<span data-ttu-id="4a467-497">`value` = 0</span><span class="sxs-lookup"><span data-stu-id="4a467-497">`value` = 0</span></span>|<span data-ttu-id="4a467-498">0 < `baseValue` < 1</span><span class="sxs-lookup"><span data-stu-id="4a467-498">0 < `baseValue` < 1</span></span>|<xref:System.Double.PositiveInfinity?displayProperty=nameWithType>|  
|<span data-ttu-id="4a467-499">`value` = 0</span><span class="sxs-lookup"><span data-stu-id="4a467-499">`value` = 0</span></span>|<span data-ttu-id="4a467-500">`baseValue` > 1</span><span class="sxs-lookup"><span data-stu-id="4a467-500">`baseValue` > 1</span></span>|<xref:System.Double.PositiveInfinity?displayProperty=nameWithType>|  
|<span data-ttu-id="4a467-501">`value` = 1</span><span class="sxs-lookup"><span data-stu-id="4a467-501">`value` = 1</span></span>|<span data-ttu-id="4a467-502">`baseValue` = 0</span><span class="sxs-lookup"><span data-stu-id="4a467-502">`baseValue` = 0</span></span>|<span data-ttu-id="4a467-503">0</span><span class="sxs-lookup"><span data-stu-id="4a467-503">0</span></span>|  
|<span data-ttu-id="4a467-504">`value` = 1</span><span class="sxs-lookup"><span data-stu-id="4a467-504">`value` = 1</span></span>|`baseValue` = <xref:System.Double.PositiveInfinity?displayProperty=nameWithType>|<span data-ttu-id="4a467-505">0</span><span class="sxs-lookup"><span data-stu-id="4a467-505">0</span></span>|  
  
 <span data-ttu-id="4a467-506">Para calcular el logaritmo en base 10 de un <xref:System.Numerics.BigInteger> valor, llame a la <xref:System.Numerics.BigInteger.Log10%2A> método.</span><span class="sxs-lookup"><span data-stu-id="4a467-506">To calculate the base 10 logarithm of a <xref:System.Numerics.BigInteger> value, call the <xref:System.Numerics.BigInteger.Log10%2A> method.</span></span> <span data-ttu-id="4a467-507">Para calcular el logaritmo natural de un número, llame a la <xref:System.Numerics.BigInteger.Log%28System.Numerics.BigInteger%29> método.</span><span class="sxs-lookup"><span data-stu-id="4a467-507">To calculate the natural logarithm of a number, call the <xref:System.Numerics.BigInteger.Log%28System.Numerics.BigInteger%29> method.</span></span>  
  
 <span data-ttu-id="4a467-508">Este método corresponde a la <xref:System.Math.Log%2A?displayProperty=nameWithType> método para los tipos numéricos primitivos.</span><span class="sxs-lookup"><span data-stu-id="4a467-508">This method corresponds to the <xref:System.Math.Log%2A?displayProperty=nameWithType> method for the primitive numeric types.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="4a467-509">El logaritmo de <paramref name="value" /> está fuera del intervalo del tipo de datos <see cref="T:System.Double" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-509">The log of <paramref name="value" /> is out of range of the <see cref="T:System.Double" /> data type.</span></span></exception>
        <altmember cref="M:System.Numerics.BigInteger.Log10(System.Numerics.BigInteger)" />
      </Docs>
    </Member>
    <Member MemberName="Log10">
      <MemberSignature Language="C#" Value="public static double Log10 (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Log10(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Log10(System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Log10 (value As BigInteger) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Log10(System::Numerics::BigInteger value);" />
      <MemberSignature Language="F#" Value="static member Log10 : System.Numerics.BigInteger -&gt; double" Usage="System.Numerics.BigInteger.Log10 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4a467-510">Número cuyo logaritmo hay que calcular.</span><span class="sxs-lookup"><span data-stu-id="4a467-510">A number whose logarithm is to be found.</span></span></param>
        <summary><span data-ttu-id="4a467-511">Devuelve el logaritmo en base 10 de un número especificado.</span><span class="sxs-lookup"><span data-stu-id="4a467-511">Returns the base 10 logarithm of a specified number.</span></span></summary>
        <returns><span data-ttu-id="4a467-512">Logaritmo en base 10 de <paramref name="value" />, como se muestra en la tabla de la sección Comentarios.</span><span class="sxs-lookup"><span data-stu-id="4a467-512">The base 10 logarithm of <paramref name="value" />, as shown in the table in the Remarks section.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a467-513">El `value` parámetro se especifica como un número en base 10.</span><span class="sxs-lookup"><span data-stu-id="4a467-513">The `value` parameter is specified as a base 10 number.</span></span>  
  
 <span data-ttu-id="4a467-514">Devolver la precisión el valor del método depende del signo de `value`, tal y como se muestra en la tabla siguiente.</span><span class="sxs-lookup"><span data-stu-id="4a467-514">The precise return value of the method depends on the sign of `value`, as the following table shows.</span></span>  
  
|<span data-ttu-id="4a467-515">Signo del valor del parámetro</span><span class="sxs-lookup"><span data-stu-id="4a467-515">Sign of value parameter</span></span>|<span data-ttu-id="4a467-516">Valor devuelto</span><span class="sxs-lookup"><span data-stu-id="4a467-516">Return value</span></span>|  
|-----------------------------|------------------|  
|<span data-ttu-id="4a467-517">Positivo</span><span class="sxs-lookup"><span data-stu-id="4a467-517">Positive</span></span>|<span data-ttu-id="4a467-518">Logaritmo en base 10 de `value`; es decir, log10`value`.</span><span class="sxs-lookup"><span data-stu-id="4a467-518">The base 10 log of `value`; that is, log10`value`.</span></span>|  
|<span data-ttu-id="4a467-519">Cero</span><span class="sxs-lookup"><span data-stu-id="4a467-519">Zero</span></span>|<span data-ttu-id="4a467-520"><xref:System.Double.NegativeInfinity?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4a467-520"><xref:System.Double.NegativeInfinity?displayProperty=nameWithType>.</span></span>|  
|<span data-ttu-id="4a467-521">Negativo</span><span class="sxs-lookup"><span data-stu-id="4a467-521">Negative</span></span>|<span data-ttu-id="4a467-522"><xref:System.Double.NaN?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4a467-522"><xref:System.Double.NaN?displayProperty=nameWithType>.</span></span>|  
  
 <span data-ttu-id="4a467-523">Para calcular el logaritmo natural de un <xref:System.Numerics.BigInteger> valor, llame a la <xref:System.Numerics.BigInteger.Log%28System.Numerics.BigInteger%29?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="4a467-523">To calculate the natural logarithm of a <xref:System.Numerics.BigInteger> value, call the <xref:System.Numerics.BigInteger.Log%28System.Numerics.BigInteger%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="4a467-524">Para calcular el logaritmo de un número en otra base, llame a la <xref:System.Numerics.BigInteger.Log%28System.Numerics.BigInteger%2CSystem.Double%29?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="4a467-524">To calculate the logarithm of a number in another base, call the <xref:System.Numerics.BigInteger.Log%28System.Numerics.BigInteger%2CSystem.Double%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="4a467-525">Este método corresponde a la <xref:System.Math.Log10%2A?displayProperty=nameWithType> método para los tipos numéricos primitivos.</span><span class="sxs-lookup"><span data-stu-id="4a467-525">This method corresponds to the <xref:System.Math.Log10%2A?displayProperty=nameWithType> method for the primitive numeric types.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="4a467-526">El logaritmo en base 10 de <paramref name="value" /> está fuera del intervalo del tipo de datos <see cref="T:System.Double" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-526">The base 10 log of <paramref name="value" /> is out of range of the <see cref="T:System.Double" /> data type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger Max (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger Max(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Max(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (left As BigInteger, right As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger Max(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member Max : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.Max (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="4a467-527">Primer valor que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="4a467-527">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="4a467-528">Segundo valor que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="4a467-528">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="4a467-529">Devuelve el mayor de dos valores <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-529">Returns the larger of two <see cref="T:System.Numerics.BigInteger" /> values.</span></span></summary>
        <returns><span data-ttu-id="4a467-530">Parámetro <paramref name="left" /> o <paramref name="right" />, el que sea mayor.</span><span class="sxs-lookup"><span data-stu-id="4a467-530">The <paramref name="left" /> or <paramref name="right" /> parameter, whichever is larger.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a467-531">Este método corresponde a la <xref:System.Math.Max%2A?displayProperty=nameWithType> método para tipos numéricos primitivos.</span><span class="sxs-lookup"><span data-stu-id="4a467-531">This method corresponds to the <xref:System.Math.Max%2A?displayProperty=nameWithType> method for primitive numeric types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a467-532">En el ejemplo siguiente se usa el <xref:System.Numerics.BigInteger.Max%2A> método para seleccionar el número más grande en una matriz de <xref:System.Numerics.BigInteger> valores.</span><span class="sxs-lookup"><span data-stu-id="4a467-532">The following example uses the <xref:System.Numerics.BigInteger.Max%2A> method to select the largest number in an array of <xref:System.Numerics.BigInteger> values.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Max/cs/Max1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Max/vb/Max1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Numerics.BigInteger.Min(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger Min (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger Min(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Min(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (left As BigInteger, right As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger Min(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member Min : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.Min (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="4a467-533">Primer valor que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="4a467-533">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="4a467-534">Segundo valor que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="4a467-534">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="4a467-535">Devuelve el menor de dos valores <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-535">Returns the smaller of two <see cref="T:System.Numerics.BigInteger" /> values.</span></span></summary>
        <returns><span data-ttu-id="4a467-536">Parámetro <paramref name="left" /> o <paramref name="right" />, el que sea menor.</span><span class="sxs-lookup"><span data-stu-id="4a467-536">The <paramref name="left" /> or <paramref name="right" /> parameter, whichever is smaller.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a467-537">Este método corresponde a la <xref:System.Math.Min%2A?displayProperty=nameWithType> método para tipos numéricos primitivos.</span><span class="sxs-lookup"><span data-stu-id="4a467-537">This method corresponds to the <xref:System.Math.Min%2A?displayProperty=nameWithType> method for primitive numeric types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a467-538">En el ejemplo siguiente se usa el <xref:System.Numerics.BigInteger.Min%2A> método para seleccionar el número más pequeño en una matriz de <xref:System.Numerics.BigInteger> valores.</span><span class="sxs-lookup"><span data-stu-id="4a467-538">The following example uses the <xref:System.Numerics.BigInteger.Min%2A> method to select the smallest number in an array of <xref:System.Numerics.BigInteger> values.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Min/cs/Min1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Min/vb/Min1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Numerics.BigInteger.Max(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      </Docs>
    </Member>
    <Member MemberName="MinusOne">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger MinusOne { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Numerics.BigInteger MinusOne" />
      <MemberSignature Language="DocId" Value="P:System.Numerics.BigInteger.MinusOne" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MinusOne As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Numerics::BigInteger MinusOne { System::Numerics::BigInteger get(); };" />
      <MemberSignature Language="F#" Value="member this.MinusOne : System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.MinusOne" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4a467-539">Obtiene un valor que representa menos uno (-1).</span><span class="sxs-lookup"><span data-stu-id="4a467-539">Gets a value that represents the number negative one (-1).</span></span></summary>
        <value><span data-ttu-id="4a467-540">Entero cuyo valor es menos uno (-1).</span><span class="sxs-lookup"><span data-stu-id="4a467-540">An integer whose value is negative one (-1).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a467-541">El <xref:System.Numerics.BigInteger.MinusOne%2A> propiedad se utiliza para comparar un <xref:System.Numerics.BigInteger> valor -1 o -1 para asignar un <xref:System.Numerics.BigInteger> objeto.</span><span class="sxs-lookup"><span data-stu-id="4a467-541">The <xref:System.Numerics.BigInteger.MinusOne%2A> property is used to compare a <xref:System.Numerics.BigInteger> value to -1 or to assign -1 to a <xref:System.Numerics.BigInteger> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Numerics.BigInteger.One" />
        <altmember cref="P:System.Numerics.BigInteger.IsOne" />
      </Docs>
    </Member>
    <Member MemberName="ModPow">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger ModPow (System.Numerics.BigInteger value, System.Numerics.BigInteger exponent, System.Numerics.BigInteger modulus);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger ModPow(valuetype System.Numerics.BigInteger value, valuetype System.Numerics.BigInteger exponent, valuetype System.Numerics.BigInteger modulus) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.ModPow(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ModPow (value As BigInteger, exponent As BigInteger, modulus As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger ModPow(System::Numerics::BigInteger value, System::Numerics::BigInteger exponent, System::Numerics::BigInteger modulus);" />
      <MemberSignature Language="F#" Value="static member ModPow : System.Numerics.BigInteger * System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.ModPow (value, exponent, modulus)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
        <Parameter Name="exponent" Type="System.Numerics.BigInteger" />
        <Parameter Name="modulus" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4a467-542">Número que se va a elevar a la potencia especificada por <paramref name="exponent" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-542">The number to raise to the <paramref name="exponent" /> power.</span></span></param>
        <param name="exponent"><span data-ttu-id="4a467-543">Exponente al que se va a elevar <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-543">The exponent to raise <paramref name="value" /> by.</span></span></param>
        <param name="modulus"><span data-ttu-id="4a467-544">Especifica el número por el que dividir <paramref name="value" /> elevado a la potencia <paramref name="exponent" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-544">The number by which to divide <paramref name="value" /> raised to the <paramref name="exponent" /> power.</span></span></param>
        <summary><span data-ttu-id="4a467-545">Realiza una división de módulo en un número elevado a la potencia de otro número.</span><span class="sxs-lookup"><span data-stu-id="4a467-545">Performs modulus division on a number raised to the power of another number.</span></span></summary>
        <returns><span data-ttu-id="4a467-546">Resto después de dividir <paramref name="value" /><sup>exponent</sup> por <paramref name="modulus" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-546">The remainder after dividing <paramref name="value" /><sup>exponent</sup> by <paramref name="modulus" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a467-547">El <xref:System.Numerics.BigInteger.ModPow%2A> método evalúa la expresión siguiente:</span><span class="sxs-lookup"><span data-stu-id="4a467-547">The <xref:System.Numerics.BigInteger.ModPow%2A> method evaluates the following expression:</span></span>  
  
 <span data-ttu-id="4a467-548">(baseValue ^ exponente) Módulo Mod</span><span class="sxs-lookup"><span data-stu-id="4a467-548">(baseValue ^ exponent) Mod modulus</span></span>  
  
 <span data-ttu-id="4a467-549">Para realizar la exponenciación en <xref:System.Numerics.BigInteger> valores sin división de módulos, utilice la <xref:System.Numerics.BigInteger.Pow%2A> método.</span><span class="sxs-lookup"><span data-stu-id="4a467-549">To perform exponentiation on <xref:System.Numerics.BigInteger> values without modulus division, use the <xref:System.Numerics.BigInteger.Pow%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a467-550">En el ejemplo siguiente se proporciona una ilustración simple de llamar a la <xref:System.Numerics.BigInteger.ModPow%2A> método.</span><span class="sxs-lookup"><span data-stu-id="4a467-550">The following example provides a simple illustration of calling the <xref:System.Numerics.BigInteger.ModPow%2A> method.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.ModPow#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.ModPow/cs/ModPow1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.ModPow#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.ModPow/vb/ModPow1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DivideByZeroException"><span data-ttu-id="4a467-551"><paramref name="modulus" /> es cero.</span><span class="sxs-lookup"><span data-stu-id="4a467-551"><paramref name="modulus" /> is zero.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="4a467-552"><paramref name="exponent" /> es negativo.</span><span class="sxs-lookup"><span data-stu-id="4a467-552"><paramref name="exponent" /> is negative.</span></span></exception>
        <altmember cref="M:System.Numerics.BigInteger.Pow(System.Numerics.BigInteger,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Multiply">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger Multiply (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger Multiply(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Multiply (left As BigInteger, right As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger Multiply(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member Multiply : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.Multiply (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="4a467-553">El primer número que se va a multiplicar.</span><span class="sxs-lookup"><span data-stu-id="4a467-553">The first number to multiply.</span></span></param>
        <param name="right"><span data-ttu-id="4a467-554">El segundo número que se va a multiplicar.</span><span class="sxs-lookup"><span data-stu-id="4a467-554">The second number to multiply.</span></span></param>
        <summary><span data-ttu-id="4a467-555">Devuelve el producto de dos valores <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-555">Returns the product of two <see cref="T:System.Numerics.BigInteger" /> values.</span></span></summary>
        <returns><span data-ttu-id="4a467-556">Producto de los parámetros <paramref name="left" /> y <paramref name="right" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-556">The product of the <paramref name="left" /> and <paramref name="right" /> parameters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a467-557">El <xref:System.Numerics.BigInteger.Multiply%2A> método se implementa para los idiomas que no admiten la sobrecarga de operadores.</span><span class="sxs-lookup"><span data-stu-id="4a467-557">The <xref:System.Numerics.BigInteger.Multiply%2A> method is implemented for languages that do not support operator overloading.</span></span> <span data-ttu-id="4a467-558">Su comportamiento es idéntico a la multiplicación utilizando el operador de multiplicación.</span><span class="sxs-lookup"><span data-stu-id="4a467-558">Its behavior is identical to multiplication using the multiplication operator.</span></span> <span data-ttu-id="4a467-559">Además, el <xref:System.Numerics.BigInteger.Multiply%2A> método es un suplente útil para el operador de multiplicación al crear instancias de un <xref:System.Numerics.BigInteger> variable asignándole un producto que da como resultado de la multiplicación, como se muestra en el ejemplo siguiente.</span><span class="sxs-lookup"><span data-stu-id="4a467-559">In addition, the <xref:System.Numerics.BigInteger.Multiply%2A> method is a useful substitute for the multiplication operator when instantiating a <xref:System.Numerics.BigInteger> variable by assigning it a product that results from multiplication, as shown in the following example.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.OperationMethods#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.OperationMethods/cs/Multiply1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.OperationMethods#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.OperationMethods/vb/Multiply1.vb#1)]  
  
 <span data-ttu-id="4a467-560">Si es necesario, este método realiza automáticamente la conversión implícita de otros tipos integrales para <xref:System.Numerics.BigInteger> objetos.</span><span class="sxs-lookup"><span data-stu-id="4a467-560">If necessary, this method automatically performs implicit conversion of other integral types to <xref:System.Numerics.BigInteger> objects.</span></span> <span data-ttu-id="4a467-561">Esto se muestra en el ejemplo en la sección siguiente, donde el <xref:System.Numerics.BigInteger.Multiply%2A> se pasa al método dos <xref:System.Int64> valores.</span><span class="sxs-lookup"><span data-stu-id="4a467-561">This is illustrated in the example in the next section, where the <xref:System.Numerics.BigInteger.Multiply%2A> method is passed two <xref:System.Int64> values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a467-562">El ejemplo siguiente se intenta realizar la multiplicación de dos enteros largos.</span><span class="sxs-lookup"><span data-stu-id="4a467-562">The following example tries to perform multiplication with two long integers.</span></span> <span data-ttu-id="4a467-563">Dado que el resultado supera el intervalo de un entero largo, un <xref:System.OverflowException> se inicia y el <xref:System.Numerics.BigInteger.Multiply%2A> método se llama para controlar la multiplicación.</span><span class="sxs-lookup"><span data-stu-id="4a467-563">Because the result exceeds the range of a long integer, an <xref:System.OverflowException> is thrown, and the <xref:System.Numerics.BigInteger.Multiply%2A> method is called to handle the multiplication.</span></span> <span data-ttu-id="4a467-564">Tenga en cuenta que C# requiere que se utilice el `checked` palabra clave (como en este ejemplo) o el `/checked+` opción del compilador para asegurarse de que se produce una excepción en un desbordamiento numérico.</span><span class="sxs-lookup"><span data-stu-id="4a467-564">Note that C# requires that you use either the `checked` keyword (as in this example) or the `/checked+` compiler option to make sure an exception is thrown on a numeric overflow.</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#7)]
 [!code-vb[System.Numeric.BigInteger.Class#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Numerics.BigInteger.op_Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      </Docs>
    </Member>
    <Member MemberName="Negate">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger Negate (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger Negate(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Negate(System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Negate (value As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger Negate(System::Numerics::BigInteger value);" />
      <MemberSignature Language="F#" Value="static member Negate : System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.Negate value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4a467-565">Valor que se va a negar.</span><span class="sxs-lookup"><span data-stu-id="4a467-565">The value to negate.</span></span></param>
        <summary><span data-ttu-id="4a467-566">Crea el negativo de un valor <see cref="T:System.Numerics.BigInteger" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="4a467-566">Negates a specified <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns><span data-ttu-id="4a467-567">Resultado del parámetro <paramref name="value" /> multiplicado por menos uno (-1).</span><span class="sxs-lookup"><span data-stu-id="4a467-567">The result of the <paramref name="value" /> parameter multiplied by negative one (-1).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a467-568">La negación Obtiene el inverso aditivo de un número.</span><span class="sxs-lookup"><span data-stu-id="4a467-568">Negation obtains the additive inverse of a number.</span></span> <span data-ttu-id="4a467-569">El inverso aditivo de un número es un número que se genera un valor de cero cuando se agrega al número original.</span><span class="sxs-lookup"><span data-stu-id="4a467-569">The additive inverse of a number is a number that produces a value of zero when it is added to the original number.</span></span>  
  
 <span data-ttu-id="4a467-570">El <xref:System.Numerics.BigInteger.Negate%2A> método se implementa para los idiomas que no admiten operadores personalizados.</span><span class="sxs-lookup"><span data-stu-id="4a467-570">The <xref:System.Numerics.BigInteger.Negate%2A> method is implemented for languages that do not support custom operators.</span></span> <span data-ttu-id="4a467-571">Su comportamiento es idéntico al usar el operador de negación unario de negación.</span><span class="sxs-lookup"><span data-stu-id="4a467-571">Its behavior is identical to negation using the unary negation operator.</span></span> <span data-ttu-id="4a467-572">Además, el <xref:System.Numerics.BigInteger.Negate%2A> método es un suplente útil para el operador de negación al crear instancias de un <xref:System.Numerics.BigInteger> variable, como se muestra en el ejemplo siguiente.</span><span class="sxs-lookup"><span data-stu-id="4a467-572">In addition, the <xref:System.Numerics.BigInteger.Negate%2A> method is a useful substitute for the negation operator when instantiating a <xref:System.Numerics.BigInteger> variable, as shown in the following example.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.OperationMethods#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.OperationMethods/cs/Multiply1.cs#4)]
 [!code-vb[System.Numerics.BigInteger.OperationMethods#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.OperationMethods/vb/Multiply1.vb#4)]  
  
   
  
## Examples  
 <span data-ttu-id="4a467-573">El ejemplo siguiente muestra tres maneras para invalidar el valor de un <xref:System.Numerics.BigInteger> objeto.</span><span class="sxs-lookup"><span data-stu-id="4a467-573">The following example illustrates three ways to negate the value of a <xref:System.Numerics.BigInteger> object.</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#16)]
 [!code-vb[System.Numeric.BigInteger.Class#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#16)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Numerics.BigInteger.op_UnaryNegation(System.Numerics.BigInteger)" />
      </Docs>
    </Member>
    <Member MemberName="One">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger One { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Numerics.BigInteger One" />
      <MemberSignature Language="DocId" Value="P:System.Numerics.BigInteger.One" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property One As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Numerics::BigInteger One { System::Numerics::BigInteger get(); };" />
      <MemberSignature Language="F#" Value="member this.One : System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.One" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4a467-574">Obtiene un valor que representa el número uno (1).</span><span class="sxs-lookup"><span data-stu-id="4a467-574">Gets a value that represents the number one (1).</span></span></summary>
        <value><span data-ttu-id="4a467-575">Objeto cuyo valor es uno (1).</span><span class="sxs-lookup"><span data-stu-id="4a467-575">An object whose value is one (1).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a467-576">El <xref:System.Numerics.BigInteger.One%2A> propiedad normalmente se usa para comparar un <xref:System.Numerics.BigInteger> valor en 1 o para asignar 1 para un <xref:System.Numerics.BigInteger> objeto.</span><span class="sxs-lookup"><span data-stu-id="4a467-576">The <xref:System.Numerics.BigInteger.One%2A> property is usually used to compare a <xref:System.Numerics.BigInteger> value to 1 or to assign 1 to a <xref:System.Numerics.BigInteger> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Numerics.BigInteger.IsOne" />
        <altmember cref="P:System.Numerics.BigInteger.MinusOne" />
      </Docs>
    </Member>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger operator + (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Addition(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Addition(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator + (left As BigInteger, right As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger operator +(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( + ) : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="left + right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="4a467-577">Primer valor que se va a sumar.</span><span class="sxs-lookup"><span data-stu-id="4a467-577">The first value to add.</span></span></param>
        <param name="right"><span data-ttu-id="4a467-578">Segundo valor que se va a sumar.</span><span class="sxs-lookup"><span data-stu-id="4a467-578">The second value to add.</span></span></param>
        <summary><span data-ttu-id="4a467-579">Suma los valores de dos objetos <see cref="T:System.Numerics.BigInteger" /> especificados.</span><span class="sxs-lookup"><span data-stu-id="4a467-579">Adds the values of two specified <see cref="T:System.Numerics.BigInteger" /> objects.</span></span></summary>
        <returns><span data-ttu-id="4a467-580">La suma de <paramref name="left" /> y <paramref name="right" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-580">The sum of <paramref name="left" /> and <paramref name="right" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a467-581">El <xref:System.Numerics.BigInteger.op_Addition%2A> método define la operación de suma para <xref:System.Numerics.BigInteger> valores.</span><span class="sxs-lookup"><span data-stu-id="4a467-581">The <xref:System.Numerics.BigInteger.op_Addition%2A> method defines the addition operation for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="4a467-582">Permite código como el siguiente:</span><span class="sxs-lookup"><span data-stu-id="4a467-582">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#12)]
 [!code-vb[System.Numeric.BigInteger.Class#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#12)]  
  
 <span data-ttu-id="4a467-583">Los lenguajes que no admiten operadores personalizados pueden llamar los <xref:System.Numerics.BigInteger.Add%2A> método en su lugar.</span><span class="sxs-lookup"><span data-stu-id="4a467-583">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.Add%2A> method instead.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Numerics.BigInteger.Add(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      </Docs>
    </Member>
    <Member MemberName="op_BitwiseAnd">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger operator &amp; (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_BitwiseAnd(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_BitwiseAnd(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator And (left As BigInteger, right As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger operator &amp;(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( &amp;&amp;&amp; ) : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="left &amp;&amp;&amp; right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="4a467-584">Primer valor.</span><span class="sxs-lookup"><span data-stu-id="4a467-584">The first value.</span></span></param>
        <param name="right"><span data-ttu-id="4a467-585">Segundo valor.</span><span class="sxs-lookup"><span data-stu-id="4a467-585">The second value.</span></span></param>
        <summary><span data-ttu-id="4a467-586">Realiza una operación <see langword="And" /> bit a bit en dos valores <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-586">Performs a bitwise <see langword="And" /> operation on two <see cref="T:System.Numerics.BigInteger" /> values.</span></span></summary>
        <returns><span data-ttu-id="4a467-587">Resultado de la operación <see langword="And" /> bit a bit.</span><span class="sxs-lookup"><span data-stu-id="4a467-587">The result of the bitwise <see langword="And" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a467-588">El <xref:System.Numerics.BigInteger.op_BitwiseAnd%2A> método define bit a bit `And` operación para <xref:System.Numerics.BigInteger> valores.</span><span class="sxs-lookup"><span data-stu-id="4a467-588">The <xref:System.Numerics.BigInteger.op_BitwiseAnd%2A> method defines the bitwise `And` operation for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="4a467-589">Bit a bit `And` operación establece un bit sólo si de resultados los bits correspondientes `left` y `right` también se establecen como se muestra en la tabla siguiente.</span><span class="sxs-lookup"><span data-stu-id="4a467-589">The bitwise `And` operation sets a result bit only if the corresponding bits in `left` and `right` are also set, as shown in the following table.</span></span>  
  
|<span data-ttu-id="4a467-590">Bit en `left`</span><span class="sxs-lookup"><span data-stu-id="4a467-590">Bit in `left`</span></span>|<span data-ttu-id="4a467-591">Bit en `right`</span><span class="sxs-lookup"><span data-stu-id="4a467-591">Bit in `right`</span></span>|<span data-ttu-id="4a467-592">Bit de resultado</span><span class="sxs-lookup"><span data-stu-id="4a467-592">Bit in result</span></span>|  
|-------------------|--------------------|-------------------|  
|<span data-ttu-id="4a467-593">0</span><span class="sxs-lookup"><span data-stu-id="4a467-593">0</span></span>|<span data-ttu-id="4a467-594">0</span><span class="sxs-lookup"><span data-stu-id="4a467-594">0</span></span>|<span data-ttu-id="4a467-595">0</span><span class="sxs-lookup"><span data-stu-id="4a467-595">0</span></span>|  
|<span data-ttu-id="4a467-596">1</span><span class="sxs-lookup"><span data-stu-id="4a467-596">1</span></span>|<span data-ttu-id="4a467-597">0</span><span class="sxs-lookup"><span data-stu-id="4a467-597">0</span></span>|<span data-ttu-id="4a467-598">0</span><span class="sxs-lookup"><span data-stu-id="4a467-598">0</span></span>|  
|<span data-ttu-id="4a467-599">1</span><span class="sxs-lookup"><span data-stu-id="4a467-599">1</span></span>|<span data-ttu-id="4a467-600">1</span><span class="sxs-lookup"><span data-stu-id="4a467-600">1</span></span>|<span data-ttu-id="4a467-601">1</span><span class="sxs-lookup"><span data-stu-id="4a467-601">1</span></span>|  
|<span data-ttu-id="4a467-602">0</span><span class="sxs-lookup"><span data-stu-id="4a467-602">0</span></span>|<span data-ttu-id="4a467-603">1</span><span class="sxs-lookup"><span data-stu-id="4a467-603">1</span></span>|<span data-ttu-id="4a467-604">0</span><span class="sxs-lookup"><span data-stu-id="4a467-604">0</span></span>|  
  
 <span data-ttu-id="4a467-605">El <xref:System.Numerics.BigInteger.op_BitwiseAnd%2A> método permite código como el siguiente:</span><span class="sxs-lookup"><span data-stu-id="4a467-605">The <xref:System.Numerics.BigInteger.op_BitwiseAnd%2A> method enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.Operators#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#1)]  
  
 <span data-ttu-id="4a467-606">El <xref:System.Numerics.BigInteger.op_BitwiseAnd%2A> método realiza el bit a bit `And` operación con dos <xref:System.Numerics.BigInteger> valores como si fueran dos en la representación del complemento de dos con extensión de signo virtual.</span><span class="sxs-lookup"><span data-stu-id="4a467-606">The <xref:System.Numerics.BigInteger.op_BitwiseAnd%2A> method performs the bitwise `And` operation on two <xref:System.Numerics.BigInteger> values as if they were both in two's complement representation with virtual sign extension.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_BitwiseOr">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger operator | (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_BitwiseOr(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_BitwiseOr(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator Or (left As BigInteger, right As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger operator |(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( ||| ) : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="left ||| right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="4a467-607">Primer valor.</span><span class="sxs-lookup"><span data-stu-id="4a467-607">The first value.</span></span></param>
        <param name="right"><span data-ttu-id="4a467-608">Segundo valor.</span><span class="sxs-lookup"><span data-stu-id="4a467-608">The second value.</span></span></param>
        <summary><span data-ttu-id="4a467-609">Realiza una operación <see langword="Or" /> bit a bit en dos valores <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-609">Performs a bitwise <see langword="Or" /> operation on two <see cref="T:System.Numerics.BigInteger" /> values.</span></span></summary>
        <returns><span data-ttu-id="4a467-610">Resultado de la operación <see langword="Or" /> bit a bit.</span><span class="sxs-lookup"><span data-stu-id="4a467-610">The result of the bitwise <see langword="Or" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a467-611">El <xref:System.Numerics.BigInteger.op_BitwiseOr%2A> método define bit a bit `Or` operación para <xref:System.Numerics.BigInteger> valores.</span><span class="sxs-lookup"><span data-stu-id="4a467-611">The <xref:System.Numerics.BigInteger.op_BitwiseOr%2A> method defines the bitwise `Or` operation for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="4a467-612">Bit a bit `Or` operación establece un bit sólo si de resultado de uno o ambos bits correspondientes de `left` y `right` se establecen, como se muestra en la tabla siguiente.</span><span class="sxs-lookup"><span data-stu-id="4a467-612">The bitwise `Or` operation sets a result bit only if either or both of the corresponding bits in `left` and `right` are set, as shown in the following table.</span></span>  
  
|<span data-ttu-id="4a467-613">Bit en `left`</span><span class="sxs-lookup"><span data-stu-id="4a467-613">Bit in `left`</span></span>|<span data-ttu-id="4a467-614">Bit en `right`</span><span class="sxs-lookup"><span data-stu-id="4a467-614">Bit in `right`</span></span>|<span data-ttu-id="4a467-615">Bit de resultado</span><span class="sxs-lookup"><span data-stu-id="4a467-615">Bit in result</span></span>|  
|-------------------|--------------------|-------------------|  
|<span data-ttu-id="4a467-616">0</span><span class="sxs-lookup"><span data-stu-id="4a467-616">0</span></span>|<span data-ttu-id="4a467-617">0</span><span class="sxs-lookup"><span data-stu-id="4a467-617">0</span></span>|<span data-ttu-id="4a467-618">0</span><span class="sxs-lookup"><span data-stu-id="4a467-618">0</span></span>|  
|<span data-ttu-id="4a467-619">1</span><span class="sxs-lookup"><span data-stu-id="4a467-619">1</span></span>|<span data-ttu-id="4a467-620">0</span><span class="sxs-lookup"><span data-stu-id="4a467-620">0</span></span>|<span data-ttu-id="4a467-621">1</span><span class="sxs-lookup"><span data-stu-id="4a467-621">1</span></span>|  
|<span data-ttu-id="4a467-622">1</span><span class="sxs-lookup"><span data-stu-id="4a467-622">1</span></span>|<span data-ttu-id="4a467-623">1</span><span class="sxs-lookup"><span data-stu-id="4a467-623">1</span></span>|<span data-ttu-id="4a467-624">1</span><span class="sxs-lookup"><span data-stu-id="4a467-624">1</span></span>|  
|<span data-ttu-id="4a467-625">0</span><span class="sxs-lookup"><span data-stu-id="4a467-625">0</span></span>|<span data-ttu-id="4a467-626">1</span><span class="sxs-lookup"><span data-stu-id="4a467-626">1</span></span>|<span data-ttu-id="4a467-627">1</span><span class="sxs-lookup"><span data-stu-id="4a467-627">1</span></span>|  
  
 <span data-ttu-id="4a467-628">El <xref:System.Numerics.BigInteger.op_BitwiseOr%2A> método permite código como el siguiente:</span><span class="sxs-lookup"><span data-stu-id="4a467-628">The <xref:System.Numerics.BigInteger.op_BitwiseOr%2A> method enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#2)]
 [!code-vb[System.Numerics.BigInteger.Operators#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#2)]  
  
 <span data-ttu-id="4a467-629">El <xref:System.Numerics.BigInteger.op_BitwiseOr%2A> método realiza el bit a bit `Or` operación con dos <xref:System.Numerics.BigInteger> valores como si fueran dos en la representación del complemento de dos con extensión de signo virtual.</span><span class="sxs-lookup"><span data-stu-id="4a467-629">The <xref:System.Numerics.BigInteger.op_BitwiseOr%2A> method performs the bitwise `Or` operation on two <xref:System.Numerics.BigInteger> values as if they were both in two's complement representation with virtual sign extension.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Decrement">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger operator -- (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Decrement(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Decrement(System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared op_Decrement (value As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger operator --(System::Numerics::BigInteger value);" />
      <MemberSignature Language="F#" Value="static member op_Decrement : System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.op_Decrement value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4a467-630">Valor que se va a disminuir.</span><span class="sxs-lookup"><span data-stu-id="4a467-630">The value to decrement.</span></span></param>
        <summary><span data-ttu-id="4a467-631">Disminuye un valor <see cref="T:System.Numerics.BigInteger" /> en 1.</span><span class="sxs-lookup"><span data-stu-id="4a467-631">Decrements a <see cref="T:System.Numerics.BigInteger" /> value by 1.</span></span></summary>
        <returns><span data-ttu-id="4a467-632">Valor del parámetro <paramref name="value" /> disminuido en 1.</span><span class="sxs-lookup"><span data-stu-id="4a467-632">The value of the <paramref name="value" /> parameter decremented by 1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a467-633">El <xref:System.Numerics.BigInteger.op_Decrement%2A> método define la operación de decremento para <xref:System.Numerics.BigInteger> valores.</span><span class="sxs-lookup"><span data-stu-id="4a467-633">The <xref:System.Numerics.BigInteger.op_Decrement%2A> method defines the decrement operation for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="4a467-634">Permite código como el siguiente:</span><span class="sxs-lookup"><span data-stu-id="4a467-634">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#17)]  
  
 <span data-ttu-id="4a467-635">Los lenguajes que no admiten operadores personalizados pueden llamar los <xref:System.Numerics.BigInteger.Subtract%2A> método en su lugar.</span><span class="sxs-lookup"><span data-stu-id="4a467-635">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.Subtract%2A> method instead.</span></span> <span data-ttu-id="4a467-636">Por ejemplo:</span><span class="sxs-lookup"><span data-stu-id="4a467-636">For example:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#3)]
 [!code-vb[System.Numerics.BigInteger.Operators#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#3)]  
  
 <span data-ttu-id="4a467-637">Dado que <xref:System.Numerics.BigInteger> los objetos son inmutables, el <xref:System.Numerics.BigInteger.op_Decrement%2A> crea un nuevo operador <xref:System.Numerics.BigInteger> objeto cuyo valor es uno menor que el <xref:System.Numerics.BigInteger> objeto representado por `value`.</span><span class="sxs-lookup"><span data-stu-id="4a467-637">Because <xref:System.Numerics.BigInteger> objects are immutable, the <xref:System.Numerics.BigInteger.op_Decrement%2A> operator creates a new <xref:System.Numerics.BigInteger> object whose value is one less than the <xref:System.Numerics.BigInteger> object represented by `value`.</span></span> <span data-ttu-id="4a467-638">Esto significa que las llamadas repetidas a <xref:System.Numerics.BigInteger.op_Decrement%2A> puede ser costoso.</span><span class="sxs-lookup"><span data-stu-id="4a467-638">This means that repeated calls to <xref:System.Numerics.BigInteger.op_Decrement%2A> may be expensive.</span></span>  
  
 <span data-ttu-id="4a467-639">El método equivalente para este operador es <xref:System.Numerics.BigInteger.Subtract%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4a467-639">The equivalent method for this operator is <xref:System.Numerics.BigInteger.Subtract%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Numerics.BigInteger.op_Increment(System.Numerics.BigInteger)" />
      </Docs>
    </Member>
    <Member MemberName="op_Division">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger operator / (System.Numerics.BigInteger dividend, System.Numerics.BigInteger divisor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Division(valuetype System.Numerics.BigInteger dividend, valuetype System.Numerics.BigInteger divisor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Division(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator / (dividend As BigInteger, divisor As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger operator /(System::Numerics::BigInteger dividend, System::Numerics::BigInteger divisor);" />
      <MemberSignature Language="F#" Value="static member ( / ) : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="dividend / divisor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dividend" Type="System.Numerics.BigInteger" />
        <Parameter Name="divisor" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="dividend"><span data-ttu-id="4a467-640">Valor que se va a dividir.</span><span class="sxs-lookup"><span data-stu-id="4a467-640">The value to be divided.</span></span></param>
        <param name="divisor"><span data-ttu-id="4a467-641">Valor por el que se va a dividir.</span><span class="sxs-lookup"><span data-stu-id="4a467-641">The value to divide by.</span></span></param>
        <summary><span data-ttu-id="4a467-642">Divide un valor <see cref="T:System.Numerics.BigInteger" /> especificado por otro valor <see cref="T:System.Numerics.BigInteger" /> indicado utilizando división de enteros.</span><span class="sxs-lookup"><span data-stu-id="4a467-642">Divides a specified <see cref="T:System.Numerics.BigInteger" /> value by another specified <see cref="T:System.Numerics.BigInteger" /> value by using integer division.</span></span></summary>
        <returns><span data-ttu-id="4a467-643">Resultado entero de la división.</span><span class="sxs-lookup"><span data-stu-id="4a467-643">The integral result of the division.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a467-644">El <xref:System.Numerics.BigInteger.op_Division%2A> método define la operación de división para <xref:System.Numerics.BigInteger> valores.</span><span class="sxs-lookup"><span data-stu-id="4a467-644">The <xref:System.Numerics.BigInteger.op_Division%2A> method defines the division operation for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="4a467-645">Permite código como el siguiente:</span><span class="sxs-lookup"><span data-stu-id="4a467-645">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#13)]
 [!code-vb[System.Numeric.BigInteger.Class#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#13)]  
  
 <span data-ttu-id="4a467-646">Los lenguajes que no admiten la sobrecarga de operadores y los operadores personalizados pueden llamar los <xref:System.Numerics.BigInteger.Divide%2A> método en su lugar.</span><span class="sxs-lookup"><span data-stu-id="4a467-646">Languages that do not support custom operators and operator overloading can call the <xref:System.Numerics.BigInteger.Divide%2A> method instead.</span></span>  
  
 <span data-ttu-id="4a467-647">Es el método equivalente para este operador <xref:System.Numerics.BigInteger.Divide%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="4a467-647">The equivalent method for this operator is <xref:System.Numerics.BigInteger.Divide%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="4a467-648">En el ejemplo siguiente se crea una matriz de <xref:System.Numerics.BigInteger> valores.</span><span class="sxs-lookup"><span data-stu-id="4a467-648">The following example creates an array of <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="4a467-649">Cada elemento, a continuación, usa el cociente en una operación de división que usa el <xref:System.Numerics.BigInteger.Divide%2A> método, el operador de división (/) y el <xref:System.Numerics.BigInteger.DivRem%2A> método.</span><span class="sxs-lookup"><span data-stu-id="4a467-649">It then uses each element as the quotient in a division operation that uses the <xref:System.Numerics.BigInteger.Divide%2A> method, the division operator (/), and the <xref:System.Numerics.BigInteger.DivRem%2A> method.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Divide#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Divide/cs/Divide1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.Divide#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Divide/vb/Divide1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DivideByZeroException"><span data-ttu-id="4a467-650">El valor de <paramref name="divisor" /> es 0 (cero).</span><span class="sxs-lookup"><span data-stu-id="4a467-650"><paramref name="divisor" /> is 0 (zero).</span></span></exception>
        <altmember cref="M:System.Numerics.BigInteger.Divide(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="op_Equality">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4a467-651">Devuelve un valor que indica si dos valores son iguales.</span><span class="sxs-lookup"><span data-stu-id="4a467-651">Returns a value that indicates whether two values are equal.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (long left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(int64 left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Equality(System.Int64,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As Long, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(long left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( = ) : int64 * System.Numerics.BigInteger -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Int64" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="4a467-652">Primer valor que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="4a467-652">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="4a467-653">Segundo valor que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="4a467-653">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="4a467-654">Devuelve un valor que indica si un valor entero long con signo y un valor <see cref="T:System.Numerics.BigInteger" /> son iguales.</span><span class="sxs-lookup"><span data-stu-id="4a467-654">Returns a value that indicates whether a signed long integer value and a <see cref="T:System.Numerics.BigInteger" /> value are equal.</span></span></summary>
        <returns><span data-ttu-id="4a467-655">Es <see langword="true" /> si los parámetros <paramref name="left" /> y <paramref name="right" /> tienen el mismo valor; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-655"><see langword="true" /> if the <paramref name="left" /> and <paramref name="right" /> parameters have the same value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a467-656">El <xref:System.Numerics.BigInteger.op_Equality%28System.Int64%2CSystem.Numerics.BigInteger%29> método define la operación de comparación de igualdad para <xref:System.Numerics.BigInteger> valores.</span><span class="sxs-lookup"><span data-stu-id="4a467-656">The <xref:System.Numerics.BigInteger.op_Equality%28System.Int64%2CSystem.Numerics.BigInteger%29> method defines the equality comparison operation for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="4a467-657">Permite código como el siguiente:</span><span class="sxs-lookup"><span data-stu-id="4a467-657">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#4)]
 [!code-vb[System.Numerics.BigInteger.Operators#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#4)]  
  
 <span data-ttu-id="4a467-658">Los lenguajes que no admiten operadores personalizados pueden llamar los <xref:System.Numerics.BigInteger.Equals%28System.Int64%29?displayProperty=nameWithType> en su lugar, el método de instancia.</span><span class="sxs-lookup"><span data-stu-id="4a467-658">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.Equals%28System.Int64%29?displayProperty=nameWithType> instance method instead.</span></span>  
  
 <span data-ttu-id="4a467-659">Si `left` es un <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, o <xref:System.UInt32> valor, se convierte implícitamente en un <xref:System.Int64> valor cuando se realiza la operación.</span><span class="sxs-lookup"><span data-stu-id="4a467-659">If `left` is a <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, or <xref:System.UInt32> value, it is implicitly converted to an <xref:System.Int64> value when the operation is performed.</span></span>  
  
 <span data-ttu-id="4a467-660">El método equivalente para este operador es <xref:System.Numerics.BigInteger.Equals%28System.Int64%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4a467-660">The equivalent method for this operator is <xref:System.Numerics.BigInteger.Equals%28System.Int64%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_Inequality" />
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Numerics.BigInteger left, long right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Numerics.BigInteger left, int64 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As BigInteger, right As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Numerics::BigInteger left, long right);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Numerics.BigInteger * int64 -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="4a467-661">Primer valor que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="4a467-661">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="4a467-662">Segundo valor que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="4a467-662">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="4a467-663">Devuelve un valor que indica si un valor <see cref="T:System.Numerics.BigInteger" /> y un valor entero long con signo son iguales.</span><span class="sxs-lookup"><span data-stu-id="4a467-663">Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value and a signed long integer value are equal.</span></span></summary>
        <returns><span data-ttu-id="4a467-664">Es <see langword="true" /> si los parámetros <paramref name="left" /> y <paramref name="right" /> tienen el mismo valor; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-664"><see langword="true" /> if the <paramref name="left" /> and <paramref name="right" /> parameters have the same value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a467-665">El <xref:System.Numerics.BigInteger.op_Equality%28System.Numerics.BigInteger%2CSystem.Int64%29> método define la operación de comparación de igualdad para <xref:System.Numerics.BigInteger> valores.</span><span class="sxs-lookup"><span data-stu-id="4a467-665">The <xref:System.Numerics.BigInteger.op_Equality%28System.Numerics.BigInteger%2CSystem.Int64%29> method defines the equality comparison operation for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="4a467-666">Permite código como el siguiente:</span><span class="sxs-lookup"><span data-stu-id="4a467-666">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#5)]
 [!code-vb[System.Numerics.BigInteger.Operators#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#5)]  
  
 <span data-ttu-id="4a467-667">Los lenguajes que no admiten operadores personalizados pueden llamar los <xref:System.Numerics.BigInteger.Equals%28System.Int64%29?displayProperty=nameWithType> en su lugar, el método de instancia.</span><span class="sxs-lookup"><span data-stu-id="4a467-667">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.Equals%28System.Int64%29?displayProperty=nameWithType> instance method instead.</span></span>  
  
 <span data-ttu-id="4a467-668">Si `right` es un <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, o <xref:System.UInt32> valor, se convierte implícitamente en un <xref:System.Int64> valor cuando se realiza la operación.</span><span class="sxs-lookup"><span data-stu-id="4a467-668">If `right` is a <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, or <xref:System.UInt32> value, it is implicitly converted to an <xref:System.Int64> value when the operation is performed.</span></span>  
  
 <span data-ttu-id="4a467-669">El método equivalente para este operador es <xref:System.Numerics.BigInteger.Equals%28System.Int64%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4a467-669">The equivalent method for this operator is <xref:System.Numerics.BigInteger.Equals%28System.Int64%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_Inequality" />
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As BigInteger, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="4a467-670">Primer valor que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="4a467-670">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="4a467-671">Segundo valor que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="4a467-671">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="4a467-672">Devuelve un valor que indica si los valores de dos objetos <see cref="T:System.Numerics.BigInteger" /> son iguales.</span><span class="sxs-lookup"><span data-stu-id="4a467-672">Returns a value that indicates whether the values of two <see cref="T:System.Numerics.BigInteger" /> objects are equal.</span></span></summary>
        <returns><span data-ttu-id="4a467-673">Es <see langword="true" /> si los parámetros <paramref name="left" /> y <paramref name="right" /> tienen el mismo valor; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-673"><see langword="true" /> if the <paramref name="left" /> and <paramref name="right" /> parameters have the same value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a467-674">El <xref:System.Numerics.BigInteger.op_Equality%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29> método define la operación del operador de igualdad para <xref:System.Numerics.BigInteger> valores.</span><span class="sxs-lookup"><span data-stu-id="4a467-674">The <xref:System.Numerics.BigInteger.op_Equality%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29> method defines the operation of the equality operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="4a467-675">Permite código como el siguiente:</span><span class="sxs-lookup"><span data-stu-id="4a467-675">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#19](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#19)]
 [!code-vb[System.Numeric.BigInteger.Class#19](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#19)]  
  
 <span data-ttu-id="4a467-676">Los lenguajes que no admiten operadores personalizados pueden llamar los <xref:System.Numerics.BigInteger.Equals%28System.Numerics.BigInteger%29?displayProperty=nameWithType> en su lugar, el método de instancia.</span><span class="sxs-lookup"><span data-stu-id="4a467-676">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.Equals%28System.Numerics.BigInteger%29?displayProperty=nameWithType> instance method instead.</span></span>  
  
 <span data-ttu-id="4a467-677">El método equivalente para este operador es <xref:System.Numerics.BigInteger.Equals%28System.Numerics.BigInteger%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4a467-677">The equivalent method for this operator is <xref:System.Numerics.BigInteger.Equals%28System.Numerics.BigInteger%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.Equals" />
        <altmember cref="Overload:System.Numerics.BigInteger.op_Inequality" />
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Numerics.BigInteger left, ulong right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Numerics.BigInteger left, unsigned int64 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As BigInteger, right As ULong) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Numerics::BigInteger left, System::UInt64 right);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Numerics.BigInteger * uint64 -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="4a467-678">Primer valor que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="4a467-678">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="4a467-679">Segundo valor que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="4a467-679">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="4a467-680">Devuelve un valor que indica si un valor <see cref="T:System.Numerics.BigInteger" /> y un valor entero long sin signo son iguales.</span><span class="sxs-lookup"><span data-stu-id="4a467-680">Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value and an unsigned long integer value are equal.</span></span></summary>
        <returns><span data-ttu-id="4a467-681">Es <see langword="true" /> si los parámetros <paramref name="left" /> y <paramref name="right" /> tienen el mismo valor; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-681"><see langword="true" /> if the <paramref name="left" /> and <paramref name="right" /> parameters have the same value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a467-682">El <xref:System.Numerics.BigInteger.op_Equality%28System.Numerics.BigInteger%2CSystem.UInt64%29> método define la operación de comparación de igualdad para <xref:System.Numerics.BigInteger> valores.</span><span class="sxs-lookup"><span data-stu-id="4a467-682">The <xref:System.Numerics.BigInteger.op_Equality%28System.Numerics.BigInteger%2CSystem.UInt64%29> method defines the equality comparison operation for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="4a467-683">Permite código como el siguiente:</span><span class="sxs-lookup"><span data-stu-id="4a467-683">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#6)]
 [!code-vb[System.Numerics.BigInteger.Operators#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#6)]  
  
 <span data-ttu-id="4a467-684">Los lenguajes que no admiten operadores personalizados pueden llamar los <xref:System.Numerics.BigInteger.Equals%28System.UInt64%29?displayProperty=nameWithType> en su lugar, el método de instancia.</span><span class="sxs-lookup"><span data-stu-id="4a467-684">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.Equals%28System.UInt64%29?displayProperty=nameWithType> instance method instead.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_Inequality" />
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (ulong left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(unsigned int64 left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Equality(System.UInt64,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As ULong, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::UInt64 left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( = ) : uint64 * System.Numerics.BigInteger -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.UInt64" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="4a467-685">Primer valor que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="4a467-685">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="4a467-686">Segundo valor que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="4a467-686">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="4a467-687">Devuelve un valor que indica si un valor entero long sin signo y un valor <see cref="T:System.Numerics.BigInteger" /> son iguales.</span><span class="sxs-lookup"><span data-stu-id="4a467-687">Returns a value that indicates whether an unsigned long integer value and a <see cref="T:System.Numerics.BigInteger" /> value are equal.</span></span></summary>
        <returns><span data-ttu-id="4a467-688">Es <see langword="true" /> si los parámetros <paramref name="left" /> y <paramref name="right" /> tienen el mismo valor; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-688"><see langword="true" /> if the <paramref name="left" /> and <paramref name="right" /> parameters have the same value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a467-689">El <xref:System.Numerics.BigInteger.op_Equality%28System.UInt64%2CSystem.Numerics.BigInteger%29> método define la operación de comparación de igualdad para <xref:System.Numerics.BigInteger> valores.</span><span class="sxs-lookup"><span data-stu-id="4a467-689">The <xref:System.Numerics.BigInteger.op_Equality%28System.UInt64%2CSystem.Numerics.BigInteger%29> method defines the equality comparison operation for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="4a467-690">Permite código como el siguiente:</span><span class="sxs-lookup"><span data-stu-id="4a467-690">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#7)]
 [!code-vb[System.Numerics.BigInteger.Operators#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#7)]  
  
 <span data-ttu-id="4a467-691">Los lenguajes que no admiten operadores personalizados pueden llamar los <xref:System.Numerics.BigInteger.Equals%28System.UInt64%29?displayProperty=nameWithType> en su lugar, el método de instancia.</span><span class="sxs-lookup"><span data-stu-id="4a467-691">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.Equals%28System.UInt64%29?displayProperty=nameWithType> instance method instead.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_Inequality" />
      </Docs>
    </Member>
    <Member MemberName="op_ExclusiveOr">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger operator ^ (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_ExclusiveOr(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_ExclusiveOr(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator Xor (left As BigInteger, right As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger operator ^(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( ^^^ ) : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="left ^^^ right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="4a467-692">Primer valor.</span><span class="sxs-lookup"><span data-stu-id="4a467-692">The first value.</span></span></param>
        <param name="right"><span data-ttu-id="4a467-693">Segundo valor.</span><span class="sxs-lookup"><span data-stu-id="4a467-693">The second value.</span></span></param>
        <summary><span data-ttu-id="4a467-694">Realiza una operación exclusiva <see langword="Or" /> (<see langword="XOr" />) bit a bit en dos valores <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-694">Performs a bitwise exclusive <see langword="Or" /> (<see langword="XOr" />) operation on two <see cref="T:System.Numerics.BigInteger" /> values.</span></span></summary>
        <returns><span data-ttu-id="4a467-695">Resultado de la operación <see langword="Or" /> bit a bit.</span><span class="sxs-lookup"><span data-stu-id="4a467-695">The result of the bitwise <see langword="Or" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a467-696">El resultado de un exclusivo bit a bit `Or` operación es `true` si los valores de los dos bits son diferentes; de lo contrario, es `false`.</span><span class="sxs-lookup"><span data-stu-id="4a467-696">The result of a bitwise exclusive `Or` operation is `true` if the values of the two bits are different; otherwise, it is `false`.</span></span> <span data-ttu-id="4a467-697">En la tabla siguiente se muestra exclusiva `Or` operación.</span><span class="sxs-lookup"><span data-stu-id="4a467-697">The following table illustrates the exclusive `Or` operation.</span></span>  
  
|<span data-ttu-id="4a467-698">Bit x `left`</span><span class="sxs-lookup"><span data-stu-id="4a467-698">Bit x in `left`</span></span>|<span data-ttu-id="4a467-699">Bit x `right`</span><span class="sxs-lookup"><span data-stu-id="4a467-699">Bit x in `right`</span></span>|<span data-ttu-id="4a467-700">Valor devuelto</span><span class="sxs-lookup"><span data-stu-id="4a467-700">Return value</span></span>|  
|---------------------|----------------------|------------------|  
|<span data-ttu-id="4a467-701">0</span><span class="sxs-lookup"><span data-stu-id="4a467-701">0</span></span>|<span data-ttu-id="4a467-702">0</span><span class="sxs-lookup"><span data-stu-id="4a467-702">0</span></span>|<span data-ttu-id="4a467-703">0</span><span class="sxs-lookup"><span data-stu-id="4a467-703">0</span></span>|  
|<span data-ttu-id="4a467-704">0</span><span class="sxs-lookup"><span data-stu-id="4a467-704">0</span></span>|<span data-ttu-id="4a467-705">1</span><span class="sxs-lookup"><span data-stu-id="4a467-705">1</span></span>|<span data-ttu-id="4a467-706">1</span><span class="sxs-lookup"><span data-stu-id="4a467-706">1</span></span>|  
|<span data-ttu-id="4a467-707">1</span><span class="sxs-lookup"><span data-stu-id="4a467-707">1</span></span>|<span data-ttu-id="4a467-708">0</span><span class="sxs-lookup"><span data-stu-id="4a467-708">0</span></span>|<span data-ttu-id="4a467-709">1</span><span class="sxs-lookup"><span data-stu-id="4a467-709">1</span></span>|  
|<span data-ttu-id="4a467-710">1</span><span class="sxs-lookup"><span data-stu-id="4a467-710">1</span></span>|<span data-ttu-id="4a467-711">1</span><span class="sxs-lookup"><span data-stu-id="4a467-711">1</span></span>|<span data-ttu-id="4a467-712">0</span><span class="sxs-lookup"><span data-stu-id="4a467-712">0</span></span>|  
  
 <span data-ttu-id="4a467-713">El <xref:System.Numerics.BigInteger.op_ExclusiveOr%2A> método permite código como el siguiente:</span><span class="sxs-lookup"><span data-stu-id="4a467-713">The <xref:System.Numerics.BigInteger.op_ExclusiveOr%2A> method enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#8)]
 [!code-vb[System.Numerics.BigInteger.Operators#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#8)]  
  
 <span data-ttu-id="4a467-714">El <xref:System.Numerics.BigInteger.op_ExclusiveOr%2A> método realiza la exclusiva bit a bit `Or` operación con dos <xref:System.Numerics.BigInteger> valores como si fueran dos en la representación del complemento de dos con extensión de signo virtual.</span><span class="sxs-lookup"><span data-stu-id="4a467-714">The <xref:System.Numerics.BigInteger.op_ExclusiveOr%2A> method performs the bitwise exclusive `Or` operation on two <xref:System.Numerics.BigInteger> values as if they were both in two's complement representation with virtual sign extension.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="op_Explicit">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4a467-715">Define una conversión explícita entre un objeto <see cref="T:System.Numerics.BigInteger" /> y otro tipo.</span><span class="sxs-lookup"><span data-stu-id="4a467-715">Defines an explicit conversion between a <see cref="T:System.Numerics.BigInteger" /> object and another type.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator System.Numerics.BigInteger (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Explicit(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Decimal) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Numerics::BigInteger(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : decimal -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4a467-716">Valor que se va a convertir en un tipo <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-716">The value to convert to a <see cref="T:System.Numerics.BigInteger" />.</span></span></param>
        <summary><span data-ttu-id="4a467-717">Define una conversión explícita de un objeto <see cref="T:System.Decimal" /> en un valor <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-717">Defines an explicit conversion of a <see cref="T:System.Decimal" /> object to a <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns><span data-ttu-id="4a467-718">Objeto que contiene el valor del parámetro <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-718">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a467-719">La parte fraccionaria de los `value` se trunca el parámetro antes de la conversión.</span><span class="sxs-lookup"><span data-stu-id="4a467-719">Any fractional part of the `value` parameter is truncated before conversion.</span></span>

 <span data-ttu-id="4a467-720">Las sobrecargas de los <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> método definen los tipos a la que o desde el que un <xref:System.Numerics.BigInteger> se puede convertir el objeto.</span><span class="sxs-lookup"><span data-stu-id="4a467-720">The overloads of the <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> method define the types to which or from which a <xref:System.Numerics.BigInteger> object can be converted.</span></span> <span data-ttu-id="4a467-721">Dado que la conversión de <xref:System.Decimal> a <xref:System.Numerics.BigInteger> puede implicar el truncamiento de cualquier parte fraccionaria de `value`, los compiladores de lenguaje no realizan esta conversión automáticamente.</span><span class="sxs-lookup"><span data-stu-id="4a467-721">Because the conversion from <xref:System.Decimal> to <xref:System.Numerics.BigInteger> can involve truncating any fractional part of `value`, language compilers do not perform this conversion automatically.</span></span> <span data-ttu-id="4a467-722">En su lugar, realizan la conversión solo si un operador de conversión (en C#) o una función de conversión (como `CType` en Visual Basic) se utiliza.</span><span class="sxs-lookup"><span data-stu-id="4a467-722">Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as `CType` in Visual Basic) is used.</span></span> <span data-ttu-id="4a467-723">En caso contrario, muestra un error del compilador.</span><span class="sxs-lookup"><span data-stu-id="4a467-723">Otherwise, they display a compiler error.</span></span>   

 <span data-ttu-id="4a467-724">Los lenguajes que no admiten operadores personalizados, el método alternativo es <xref:System.Numerics.BigInteger.%23ctor%28System.Decimal%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4a467-724">For languages that do not support custom operators, the alternative method is <xref:System.Numerics.BigInteger.%23ctor%28System.Decimal%29?displayProperty=nameWithType>.</span></span>


## Examples
 <span data-ttu-id="4a467-725">El ejemplo siguiente convierte los elementos individuales en una matriz de <xref:System.Decimal> valores <xref:System.Numerics.BigInteger> objetos y, a continuación, muestra el resultado de cada conversión.</span><span class="sxs-lookup"><span data-stu-id="4a467-725">The following example converts the individual elements in an array of <xref:System.Decimal> values to <xref:System.Numerics.BigInteger> objects, and then displays the result of each conversion.</span></span> <span data-ttu-id="4a467-726">Tenga en cuenta que cualquier fraccionarios forma parte de un <xref:System.Decimal> valor se trunca durante la conversión.</span><span class="sxs-lookup"><span data-stu-id="4a467-726">Note that any fractional part of a <xref:System.Decimal> value is truncated during the conversion.</span></span>   

 [!code-csharp[System.Numerics.BigInteger.Explicit#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Explicit/cs/Explicit1.cs#1)]   
 [!code-vb[System.Numerics.BigInteger.Explicit#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Explicit/vb/Explicit1.vb#1)]   

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator System.Numerics.BigInteger (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Explicit(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Explicit(System.Double)~System.Numerics.BigInteger" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Double) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Numerics::BigInteger(double value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : double -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4a467-727">Valor que se va a convertir en un tipo <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-727">The value to convert to a <see cref="T:System.Numerics.BigInteger" />.</span></span></param>
        <summary><span data-ttu-id="4a467-728">Define una conversión explícita de un valor <see cref="T:System.Double" /> en un valor <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-728">Defines an explicit conversion of a <see cref="T:System.Double" /> value to a <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns><span data-ttu-id="4a467-729">Objeto que contiene el valor del parámetro <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-729">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a467-730">La parte fraccionaria de los `value` se trunca el parámetro antes de la conversión.</span><span class="sxs-lookup"><span data-stu-id="4a467-730">Any fractional part of the `value` parameter is truncated before conversion.</span></span>

 <span data-ttu-id="4a467-731">Las sobrecargas de los <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> método definen los tipos a la que o desde el que un <xref:System.Numerics.BigInteger> se puede convertir el objeto.</span><span class="sxs-lookup"><span data-stu-id="4a467-731">The overloads of the <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> method define the types to which or from which a <xref:System.Numerics.BigInteger> object can be converted.</span></span> <span data-ttu-id="4a467-732">Dado que la conversión de <xref:System.Double> a <xref:System.Numerics.BigInteger> puede implicar el truncamiento de cualquier parte fraccionaria de `value`, los compiladores de lenguaje no realizan esta conversión automáticamente.</span><span class="sxs-lookup"><span data-stu-id="4a467-732">Because the conversion from <xref:System.Double> to <xref:System.Numerics.BigInteger> can involve truncating any fractional part of `value`, language compilers do not perform this conversion automatically.</span></span> <span data-ttu-id="4a467-733">En su lugar, realizan la conversión solo si un operador de conversión (en C#) o una función de conversión (como `CType` en Visual Basic) se utiliza.</span><span class="sxs-lookup"><span data-stu-id="4a467-733">Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as `CType` in Visual Basic) is used.</span></span> <span data-ttu-id="4a467-734">En caso contrario, muestra un error del compilador.</span><span class="sxs-lookup"><span data-stu-id="4a467-734">Otherwise, they display a compiler error.</span></span>

 <span data-ttu-id="4a467-735">Los lenguajes que no admiten operadores personalizados, el método alternativo es <xref:System.Numerics.BigInteger.%23ctor%28System.Double%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4a467-735">For languages that do not support custom operators, the alternative method is <xref:System.Numerics.BigInteger.%23ctor%28System.Double%29?displayProperty=nameWithType>.</span></span>


## Examples
 <span data-ttu-id="4a467-736">El ejemplo siguiente convierte los elementos individuales en una matriz de <xref:System.Double> valores <xref:System.Numerics.BigInteger> objetos y, a continuación, muestra el resultado de cada conversión.</span><span class="sxs-lookup"><span data-stu-id="4a467-736">The following example converts the individual elements in an array of <xref:System.Double> values to <xref:System.Numerics.BigInteger> objects, and then displays the result of each conversion.</span></span> <span data-ttu-id="4a467-737">Tenga en cuenta que cualquier fraccionarios forma parte de un <xref:System.Double> valor se trunca durante la conversión.</span><span class="sxs-lookup"><span data-stu-id="4a467-737">Note that any fractional part of a <xref:System.Double> value is truncated during the conversion.</span></span>   
    
 [!code-csharp[System.Numerics.BigInteger.Explicit#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Explicit/cs/Explicit1.cs#2)]   
 [!code-vb[System.Numerics.BigInteger.Explicit#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Explicit/vb/Explicit1.vb#2)]   

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="4a467-738"><paramref name="value" /> es <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.PositiveInfinity" /> o <see cref="F:System.Double.NegativeInfinity" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-738"><paramref name="value" /> is <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.PositiveInfinity" />, or <see cref="F:System.Double.NegativeInfinity" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator byte (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname unsigned int8 op_Explicit(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Byte" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As BigInteger) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Byte(System::Numerics::BigInteger value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Numerics.BigInteger -&gt; byte" Usage="System.Numerics.BigInteger.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4a467-739">Valor que se va a convertir en un tipo <see cref="T:System.Byte" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-739">The value to convert to a <see cref="T:System.Byte" />.</span></span></param>
        <summary><span data-ttu-id="4a467-740">Define una conversión explícita de un objeto <see cref="T:System.Numerics.BigInteger" /> en un valor de byte sin signo.</span><span class="sxs-lookup"><span data-stu-id="4a467-740">Defines an explicit conversion of a <see cref="T:System.Numerics.BigInteger" /> object to an unsigned byte value.</span></span></summary>
        <returns><span data-ttu-id="4a467-741">Objeto que contiene el valor del parámetro <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-741">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a467-742">Las sobrecargas de los <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> método definen los tipos a la que o desde el que un <xref:System.Numerics.BigInteger> se puede convertir el objeto.</span><span class="sxs-lookup"><span data-stu-id="4a467-742">The overloads of the <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> method define the types to which or from which a <xref:System.Numerics.BigInteger> object can be converted.</span></span> <span data-ttu-id="4a467-743">Los compiladores de lenguaje no realizan esta conversión automáticamente porque puede implicar pérdida de datos.</span><span class="sxs-lookup"><span data-stu-id="4a467-743">Language compilers do not perform this conversion automatically because it can involve data loss.</span></span> <span data-ttu-id="4a467-744">En su lugar, realizan la conversión solo si un operador de conversión (en C#) o una función de conversión (como `CType` o `CByte` en Visual Basic) se utiliza.</span><span class="sxs-lookup"><span data-stu-id="4a467-744">Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as `CType` or `CByte` in Visual Basic) is used.</span></span> <span data-ttu-id="4a467-745">En caso contrario, muestra un error del compilador.</span><span class="sxs-lookup"><span data-stu-id="4a467-745">Otherwise, they display a compiler error.</span></span>   

 <span data-ttu-id="4a467-746">Dado que esta operación define una conversión de restricción, puede producir un <xref:System.OverflowException> en tiempo de ejecución si el <xref:System.Numerics.BigInteger> valor está fuera del intervalo de la <xref:System.Byte> tipo de datos.</span><span class="sxs-lookup"><span data-stu-id="4a467-746">Because this operation defines a narrowing conversion, it can throw an <xref:System.OverflowException> at run time if the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.Byte> data type.</span></span> <span data-ttu-id="4a467-747">No hay ninguna pérdida de precisión en el cuadro <xref:System.Byte> valor si la conversión es correcta.</span><span class="sxs-lookup"><span data-stu-id="4a467-747">There is no loss of precision in the resulting <xref:System.Byte> value if the conversion is successful.</span></span>

## Examples
 <span data-ttu-id="4a467-748">El ejemplo siguiente muestra la conversión de <xref:System.Numerics.BigInteger> a <xref:System.Byte> valores.</span><span class="sxs-lookup"><span data-stu-id="4a467-748">The following example illustrates the conversion of <xref:System.Numerics.BigInteger> to <xref:System.Byte> values.</span></span> <span data-ttu-id="4a467-749">También controla un <xref:System.OverflowException> que se produce porque el <xref:System.Numerics.BigInteger> valor está fuera del intervalo de la <xref:System.Byte> tipo de datos.</span><span class="sxs-lookup"><span data-stu-id="4a467-749">It also handles an <xref:System.OverflowException> that is thrown because the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.Byte> data type.</span></span>   
    
 [!code-csharp[System.Numeric.BigInteger.Explicit#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/cs/System.Numeric.BigInteger.Explicit.cs#1)]   
 [!code-vb[System.Numeric.BigInteger.Explicit#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/vb/System.Numeric.BigInteger.Explicit.vb#1)]   

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="4a467-750"><paramref name="value" /> es menor que <see cref="F:System.Byte.MinValue" /> o mayor que <see cref="F:System.Byte.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-750"><paramref name="value" /> is less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator decimal (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Explicit(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Decimal" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As BigInteger) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Decimal(System::Numerics::BigInteger value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Numerics.BigInteger -&gt; decimal" Usage="System.Numerics.BigInteger.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4a467-751">Valor que se va a convertir en un tipo <see cref="T:System.Decimal" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-751">The value to convert to a <see cref="T:System.Decimal" />.</span></span></param>
        <summary><span data-ttu-id="4a467-752">Define una conversión explícita de un objeto <see cref="T:System.Numerics.BigInteger" /> en un valor <see cref="T:System.Decimal" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-752">Defines an explicit conversion of a <see cref="T:System.Numerics.BigInteger" /> object to a <see cref="T:System.Decimal" /> value.</span></span></summary>
        <returns><span data-ttu-id="4a467-753">Objeto que contiene el valor del parámetro <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-753">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a467-754">Las sobrecargas de los <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> método definen los tipos a la que o desde el que un <xref:System.Numerics.BigInteger> se puede convertir el objeto.</span><span class="sxs-lookup"><span data-stu-id="4a467-754">The overloads of the <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> method define the types to which or from which a <xref:System.Numerics.BigInteger> object can be converted.</span></span> <span data-ttu-id="4a467-755">Los compiladores de lenguaje no realizan esta conversión automáticamente porque puede implicar pérdida de datos.</span><span class="sxs-lookup"><span data-stu-id="4a467-755">Language compilers do not perform this conversion automatically because it can involve data loss.</span></span> <span data-ttu-id="4a467-756">En su lugar, realizan la conversión solo si un operador de conversión (en C#) o una función de conversión (como `CType` o `CDec` en Visual Basic) se utiliza.</span><span class="sxs-lookup"><span data-stu-id="4a467-756">Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as `CType` or `CDec` in Visual Basic) is used.</span></span>   

 <span data-ttu-id="4a467-757">Dado que esta operación define una conversión de restricción, puede producir un <xref:System.OverflowException> en tiempo de ejecución si el <xref:System.Numerics.BigInteger> valor está fuera del intervalo de la <xref:System.Decimal> tipo de datos.</span><span class="sxs-lookup"><span data-stu-id="4a467-757">Because this operation defines a narrowing conversion, it can throw an <xref:System.OverflowException> at run time if the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.Decimal> data type.</span></span> 

## Examples
 <span data-ttu-id="4a467-758">El ejemplo siguiente muestra la conversión de <xref:System.Numerics.BigInteger> a <xref:System.Decimal> valores.</span><span class="sxs-lookup"><span data-stu-id="4a467-758">The following example illustrates the conversion of <xref:System.Numerics.BigInteger> to <xref:System.Decimal> values.</span></span> <span data-ttu-id="4a467-759">También controla un <xref:System.OverflowException> que se produce porque el <xref:System.Numerics.BigInteger> valor está fuera del intervalo de la <xref:System.Decimal> tipo de datos.</span><span class="sxs-lookup"><span data-stu-id="4a467-759">It also handles an <xref:System.OverflowException> that is thrown because the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.Decimal> data type.</span></span>   
    
 [!code-csharp[System.Numeric.BigInteger.Explicit#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/cs/System.Numeric.BigInteger.Explicit.cs#2)]
 [!code-vb[System.Numeric.BigInteger.Explicit#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/vb/System.Numeric.BigInteger.Explicit.vb#2)]  

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="4a467-760"><paramref name="value" /> es menor que <see cref="F:System.Decimal.MinValue" /> o mayor que <see cref="F:System.Decimal.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-760"><paramref name="value" /> is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator double (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname float64 op_Explicit(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Double" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As BigInteger) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator double(System::Numerics::BigInteger value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Numerics.BigInteger -&gt; double" Usage="System.Numerics.BigInteger.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4a467-761">Valor que se va a convertir en un tipo <see cref="T:System.Double" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-761">The value to convert to a <see cref="T:System.Double" />.</span></span></param>
        <summary><span data-ttu-id="4a467-762">Define una conversión explícita de un objeto <see cref="T:System.Numerics.BigInteger" /> en un valor <see cref="T:System.Double" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-762">Defines an explicit conversion of a <see cref="T:System.Numerics.BigInteger" /> object to a <see cref="T:System.Double" /> value.</span></span></summary>
        <returns><span data-ttu-id="4a467-763">Objeto que contiene el valor del parámetro <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-763">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a467-764">Las sobrecargas de los <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> método definen los tipos a la que o desde el que un <xref:System.Numerics.BigInteger> se puede convertir el objeto.</span><span class="sxs-lookup"><span data-stu-id="4a467-764">The overloads of the <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> method define the types to which or from which a <xref:System.Numerics.BigInteger> object can be converted.</span></span> <span data-ttu-id="4a467-765">Los compiladores de lenguaje no realizan esta conversión automáticamente porque puede implicar pérdida de datos.</span><span class="sxs-lookup"><span data-stu-id="4a467-765">Language compilers do not perform this conversion automatically because it can involve data loss.</span></span> <span data-ttu-id="4a467-766">En su lugar, realizan la conversión solo si un operador de conversión (en C#) o una función de conversión (como `CType` o `CDbl` en Visual Basic) se utiliza.</span><span class="sxs-lookup"><span data-stu-id="4a467-766">Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as `CType` or `CDbl` in Visual Basic) is used.</span></span>   

 <span data-ttu-id="4a467-767">Dado que el <xref:System.Numerics.BigInteger> valor puede estar fuera del intervalo de la <xref:System.Double> tipo de datos, esta operación es una conversión de restricción.</span><span class="sxs-lookup"><span data-stu-id="4a467-767">Because the <xref:System.Numerics.BigInteger> value can be outside the range of the <xref:System.Double> data type, this operation is a narrowing conversion.</span></span> <span data-ttu-id="4a467-768">Si la conversión se realiza correctamente, no se produce un <xref:System.OverflowException>.</span><span class="sxs-lookup"><span data-stu-id="4a467-768">If the conversion is unsuccessful, it does not throw an <xref:System.OverflowException>.</span></span> <span data-ttu-id="4a467-769">En su lugar, si la <xref:System.Numerics.BigInteger> valor es menor que <xref:System.Double.MinValue?displayProperty=nameWithType>, resultante <xref:System.Double> valor es <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4a467-769">Instead, if the <xref:System.Numerics.BigInteger> value is less than <xref:System.Double.MinValue?displayProperty=nameWithType>, the resulting <xref:System.Double> value is <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>.</span></span> <span data-ttu-id="4a467-770">Si el <xref:System.Numerics.BigInteger> valor es mayor que <xref:System.Double.MaxValue?displayProperty=nameWithType>, resultante <xref:System.Double> valor es <xref:System.Double.PositiveInfinity?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4a467-770">If the <xref:System.Numerics.BigInteger> value is greater than <xref:System.Double.MaxValue?displayProperty=nameWithType>, the resulting <xref:System.Double> value is <xref:System.Double.PositiveInfinity?displayProperty=nameWithType>.</span></span>
 
 <span data-ttu-id="4a467-771">La conversión de un <xref:System.Numerics.BigInteger> a un <xref:System.Double> puede conllevar una pérdida de precisión.</span><span class="sxs-lookup"><span data-stu-id="4a467-771">The conversion of a <xref:System.Numerics.BigInteger> to a <xref:System.Double> may involve a loss of precision.</span></span> <span data-ttu-id="4a467-772">En algunos casos, la pérdida de precisión puede provocar la operación de conversión o se realice correctamente incluso si la <xref:System.Numerics.BigInteger> valor está fuera del intervalo de la <xref:System.Double> tipo de datos.</span><span class="sxs-lookup"><span data-stu-id="4a467-772">In some cases, the loss of precision may cause the casting or conversion operation to succeed even if the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.Double> data type.</span></span> <span data-ttu-id="4a467-773">Esto se muestra en el ejemplo siguiente.</span><span class="sxs-lookup"><span data-stu-id="4a467-773">The following example provides an illustration.</span></span> <span data-ttu-id="4a467-774">Asigna el valor máximo de un <xref:System.Double> a dos <xref:System.Numerics.BigInteger> variables, se incrementa una <xref:System.Numerics.BigInteger> variable 9.999e291 y comprueba las dos variables de la igualdad.</span><span class="sxs-lookup"><span data-stu-id="4a467-774">It assigns the maximum value of a <xref:System.Double> to two <xref:System.Numerics.BigInteger> variables, increments one <xref:System.Numerics.BigInteger> variable by 9.999e291, and tests the two variables for equality.</span></span> <span data-ttu-id="4a467-775">Según lo previsto, la llamada a la <xref:System.Numerics.BigInteger.Equals%28System.Numerics.BigInteger%29?displayProperty=nameWithType> método muestra que son iguales.</span><span class="sxs-lookup"><span data-stu-id="4a467-775">As expected, the call to the <xref:System.Numerics.BigInteger.Equals%28System.Numerics.BigInteger%29?displayProperty=nameWithType> method shows that they are unequal.</span></span> <span data-ttu-id="4a467-776">Sin embargo, la conversión del mayor <xref:System.Numerics.BigInteger> valor nuevo a un <xref:System.Double> se realiza correctamente, aunque el <xref:System.Numerics.BigInteger> ahora supera el valor <xref:System.Double.MaxValue?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4a467-776">However, the conversion of the larger <xref:System.Numerics.BigInteger> value back to a <xref:System.Double> succeeds, although the <xref:System.Numerics.BigInteger> value now exceeds <xref:System.Double.MaxValue?displayProperty=nameWithType>.</span></span>   
    
 [!code-csharp[System.Numerics.BigInteger.Explicit#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Explicit/cs/Explicit1.cs#4)]   
 [!code-vb[System.Numerics.BigInteger.Explicit#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Explicit/vb/Explicit1.vb#4)]   



## Examples
 <span data-ttu-id="4a467-777">El ejemplo siguiente muestra la conversión de <xref:System.Numerics.BigInteger> a <xref:System.Double> valores.</span><span class="sxs-lookup"><span data-stu-id="4a467-777">The following example illustrates the conversion of <xref:System.Numerics.BigInteger> to <xref:System.Double> values.</span></span>   
    
 [!code-csharp[System.Numeric.BigInteger.Explicit#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/cs/System.Numeric.BigInteger.Explicit.cs#3)]   
 [!code-vb[System.Numeric.BigInteger.Explicit#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/vb/System.Numeric.BigInteger.Explicit.vb#3)]   

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator short (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname int16 op_Explicit(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int16" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As BigInteger) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator short(System::Numerics::BigInteger value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Numerics.BigInteger -&gt; int16" Usage="System.Numerics.BigInteger.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4a467-778">Valor que se va a convertir en un entero de 16 bits con signo.</span><span class="sxs-lookup"><span data-stu-id="4a467-778">The value to convert to a 16-bit signed integer.</span></span></param>
        <summary><span data-ttu-id="4a467-779">Define una conversión explícita de un objeto <see cref="T:System.Numerics.BigInteger" /> en un valor entero de 16 bits con signo.</span><span class="sxs-lookup"><span data-stu-id="4a467-779">Defines an explicit conversion of a <see cref="T:System.Numerics.BigInteger" /> object to a 16-bit signed integer value.</span></span></summary>
        <returns><span data-ttu-id="4a467-780">Objeto que contiene el valor del parámetro <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-780">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a467-781">Las sobrecargas de los <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> método definen los tipos a la que o desde el que un <xref:System.Numerics.BigInteger> se puede convertir el objeto.</span><span class="sxs-lookup"><span data-stu-id="4a467-781">The overloads of the <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> method define the types to which or from which a <xref:System.Numerics.BigInteger> object can be converted.</span></span> <span data-ttu-id="4a467-782">Los compiladores de lenguaje no realizan esta conversión automáticamente porque puede implicar pérdida de datos.</span><span class="sxs-lookup"><span data-stu-id="4a467-782">Language compilers do not perform this conversion automatically because it can involve data loss.</span></span> <span data-ttu-id="4a467-783">En su lugar, realizan la conversión solo si un operador de conversión (en C#) o una función de conversión (como `CType` o `CShort` en Visual Basic) se utiliza.</span><span class="sxs-lookup"><span data-stu-id="4a467-783">Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as `CType` or `CShort` in Visual Basic) is used.</span></span> <span data-ttu-id="4a467-784">En caso contrario, muestra un error del compilador.</span><span class="sxs-lookup"><span data-stu-id="4a467-784">Otherwise, they display a compiler error.</span></span>   

 <span data-ttu-id="4a467-785">Dado que esta operación define una conversión de restricción, puede producir un <xref:System.OverflowException> en tiempo de ejecución si el <xref:System.Numerics.BigInteger> valor está fuera del intervalo de la <xref:System.Int16> tipo de datos.</span><span class="sxs-lookup"><span data-stu-id="4a467-785">Because this operation defines a narrowing conversion, it can throw an <xref:System.OverflowException> at run time if the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.Int16> data type.</span></span> <span data-ttu-id="4a467-786">No hay ninguna pérdida de precisión en el cuadro <xref:System.Int16> valor si la conversión es correcta.</span><span class="sxs-lookup"><span data-stu-id="4a467-786">There is no loss of precision in the resulting <xref:System.Int16> value if the conversion is successful.</span></span>

## Examples
 <span data-ttu-id="4a467-787">El ejemplo siguiente muestra la conversión de <xref:System.Numerics.BigInteger> a <xref:System.Int16> valores.</span><span class="sxs-lookup"><span data-stu-id="4a467-787">The following example illustrates the conversion of <xref:System.Numerics.BigInteger> to <xref:System.Int16> values.</span></span> <span data-ttu-id="4a467-788">También controla un <xref:System.OverflowException> que se produce porque el <xref:System.Numerics.BigInteger> valor está fuera del intervalo de la <xref:System.Int16> tipo de datos.</span><span class="sxs-lookup"><span data-stu-id="4a467-788">It also handles an <xref:System.OverflowException> that is thrown because the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.Int16> data type.</span></span>   
    
 [!code-csharp[System.Numeric.BigInteger.Explicit#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/cs/System.Numeric.BigInteger.Explicit.cs#4)]   
 [!code-vb[System.Numeric.BigInteger.Explicit#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/vb/System.Numeric.BigInteger.Explicit.vb#4)]   

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="4a467-789"><paramref name="value" /> es mayor que <see cref="F:System.Int16.MinValue" /> o menor que <see cref="F:System.Int16.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-789"><paramref name="value" /> is less than <see cref="F:System.Int16.MinValue" /> or is greater than <see cref="F:System.Int16.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator int (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname int32 op_Explicit(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int32" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As BigInteger) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator int(System::Numerics::BigInteger value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Numerics.BigInteger -&gt; int" Usage="System.Numerics.BigInteger.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4a467-790">Valor que se va a convertir en un entero de 32 bits con signo.</span><span class="sxs-lookup"><span data-stu-id="4a467-790">The value to convert to a 32-bit signed integer.</span></span></param>
        <summary><span data-ttu-id="4a467-791">Define una conversión explícita de un objeto <see cref="T:System.Numerics.BigInteger" /> en un valor entero de 32 bits con signo.</span><span class="sxs-lookup"><span data-stu-id="4a467-791">Defines an explicit conversion of a <see cref="T:System.Numerics.BigInteger" /> object to a 32-bit signed integer value.</span></span></summary>
        <returns><span data-ttu-id="4a467-792">Objeto que contiene el valor del parámetro <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-792">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a467-793">Las sobrecargas de los <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> método definen los tipos a la que o desde el que un <xref:System.Numerics.BigInteger> se puede convertir el objeto.</span><span class="sxs-lookup"><span data-stu-id="4a467-793">The overloads of the <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> method define the types to which or from which a <xref:System.Numerics.BigInteger> object can be converted.</span></span> <span data-ttu-id="4a467-794">Los compiladores de lenguaje no realizan esta conversión automáticamente porque puede implicar pérdida de datos.</span><span class="sxs-lookup"><span data-stu-id="4a467-794">Language compilers do not perform this conversion automatically because it can involve data loss.</span></span> <span data-ttu-id="4a467-795">En su lugar, realizan la conversión solo si un operador de conversión (en C#) o una función de conversión (como `CType` o `CInt` en Visual Basic) se utiliza.</span><span class="sxs-lookup"><span data-stu-id="4a467-795">Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as `CType` or `CInt` in Visual Basic) is used.</span></span> <span data-ttu-id="4a467-796">En caso contrario, muestra un error del compilador.</span><span class="sxs-lookup"><span data-stu-id="4a467-796">Otherwise, they display a compiler error.</span></span>   

 <span data-ttu-id="4a467-797">Dado que esta operación define una conversión de restricción, puede producir un <xref:System.OverflowException> en tiempo de ejecución si el <xref:System.Numerics.BigInteger> valor está fuera del intervalo de la <xref:System.Int32> tipo de datos.</span><span class="sxs-lookup"><span data-stu-id="4a467-797">Because this operation defines a narrowing conversion, it can throw an <xref:System.OverflowException> at run time if the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.Int32> data type.</span></span> <span data-ttu-id="4a467-798">No hay ninguna pérdida de precisión en el cuadro <xref:System.Int16> valor si la conversión es correcta.</span><span class="sxs-lookup"><span data-stu-id="4a467-798">There is no loss of precision in the resulting <xref:System.Int16> value if the conversion is successful.</span></span>

## Examples
 <span data-ttu-id="4a467-799">El ejemplo siguiente muestra la conversión de <xref:System.Numerics.BigInteger> a <xref:System.Int32> valores.</span><span class="sxs-lookup"><span data-stu-id="4a467-799">The following example illustrates the conversion of <xref:System.Numerics.BigInteger> to <xref:System.Int32> values.</span></span> <span data-ttu-id="4a467-800">También controla un <xref:System.OverflowException> que se produce porque el <xref:System.Numerics.BigInteger> valor está fuera del intervalo de la <xref:System.Int32> tipo de datos.</span><span class="sxs-lookup"><span data-stu-id="4a467-800">It also handles an <xref:System.OverflowException> that is thrown because the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.Int32> data type.</span></span>   
    
 [!code-csharp[System.Numeric.BigInteger.Explicit#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/cs/System.Numeric.BigInteger.Explicit.cs#5)]   
 [!code-vb[System.Numeric.BigInteger.Explicit#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/vb/System.Numeric.BigInteger.Explicit.vb#5)]   

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="4a467-801"><paramref name="value" /> es mayor que <see cref="F:System.Int32.MinValue" /> o menor que <see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-801"><paramref name="value" /> is less than <see cref="F:System.Int32.MinValue" /> or is greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator long (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname int64 op_Explicit(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int64" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As BigInteger) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator long(System::Numerics::BigInteger value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Numerics.BigInteger -&gt; int64" Usage="System.Numerics.BigInteger.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4a467-802">Valor que se va a convertir en un entero de 64 bits con signo.</span><span class="sxs-lookup"><span data-stu-id="4a467-802">The value to convert to a 64-bit signed integer.</span></span></param>
        <summary><span data-ttu-id="4a467-803">Define una conversión explícita de un objeto <see cref="T:System.Numerics.BigInteger" /> en un valor entero de 64 bits con signo.</span><span class="sxs-lookup"><span data-stu-id="4a467-803">Defines an explicit conversion of a <see cref="T:System.Numerics.BigInteger" /> object to a 64-bit signed integer value.</span></span></summary>
        <returns><span data-ttu-id="4a467-804">Objeto que contiene el valor del parámetro <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-804">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a467-805">Las sobrecargas de los <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> método definen los tipos a la que o desde el que un <xref:System.Numerics.BigInteger> se puede convertir el objeto.</span><span class="sxs-lookup"><span data-stu-id="4a467-805">The overloads of the <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> method define the types to which or from which a <xref:System.Numerics.BigInteger> object can be converted.</span></span> <span data-ttu-id="4a467-806">Los compiladores de lenguaje no realizan esta conversión automáticamente porque puede implicar pérdida de datos.</span><span class="sxs-lookup"><span data-stu-id="4a467-806">Language compilers do not perform this conversion automatically because it can involve data loss.</span></span> <span data-ttu-id="4a467-807">En su lugar, realizan la conversión solo si un operador de conversión (en C#) o una función de conversión (como `CType` o `CLng` en Visual Basic) se utiliza.</span><span class="sxs-lookup"><span data-stu-id="4a467-807">Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as `CType` or `CLng` in Visual Basic) is used.</span></span> <span data-ttu-id="4a467-808">En caso contrario, muestra un error del compilador.</span><span class="sxs-lookup"><span data-stu-id="4a467-808">Otherwise, they display a compiler error.</span></span>  

 <span data-ttu-id="4a467-809">Dado que esta operación define una conversión de restricción, puede producir un <xref:System.OverflowException> en tiempo de ejecución si el <xref:System.Numerics.BigInteger> valor está fuera del intervalo de la <xref:System.Int64> tipo de datos.</span><span class="sxs-lookup"><span data-stu-id="4a467-809">Because this operation defines a narrowing conversion, it can throw an <xref:System.OverflowException> at run time if the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.Int64> data type.</span></span> 

## Examples
 <span data-ttu-id="4a467-810">El ejemplo siguiente muestra la conversión de <xref:System.Numerics.BigInteger> a <xref:System.Int64> valores.</span><span class="sxs-lookup"><span data-stu-id="4a467-810">The following example illustrates the conversion of <xref:System.Numerics.BigInteger> to <xref:System.Int64> values.</span></span> <span data-ttu-id="4a467-811">También controla un <xref:System.OverflowException> que se produce porque el <xref:System.Numerics.BigInteger> valor está fuera del intervalo de la <xref:System.Int64> tipo de datos.</span><span class="sxs-lookup"><span data-stu-id="4a467-811">It also handles an <xref:System.OverflowException> that is thrown because the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.Int64> data type.</span></span>   
    
 [!code-csharp[System.Numeric.BigInteger.Explicit#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/cs/System.Numeric.BigInteger.Explicit.cs#6)]   
 [!code-vb[System.Numeric.BigInteger.Explicit#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/vb/System.Numeric.BigInteger.Explicit.vb#6)]   

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="4a467-812"><paramref name="value" /> es mayor que <see cref="F:System.Int64.MinValue" /> o menor que <see cref="F:System.Int64.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-812"><paramref name="value" /> is less than <see cref="F:System.Int64.MinValue" /> or is greater than <see cref="F:System.Int64.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator sbyte (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname int8 op_Explicit(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.SByte" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As BigInteger) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::SByte(System::Numerics::BigInteger value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Numerics.BigInteger -&gt; sbyte" Usage="System.Numerics.BigInteger.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4a467-813">Valor que se va a convertir en un valor de 8 bits con signo.</span><span class="sxs-lookup"><span data-stu-id="4a467-813">The value to convert to a signed 8-bit value.</span></span></param>
        <summary><span data-ttu-id="4a467-814">Define una conversión explícita de un objeto <see cref="T:System.Numerics.BigInteger" /> en un valor de 8 bits con signo.</span><span class="sxs-lookup"><span data-stu-id="4a467-814">Defines an explicit conversion of a <see cref="T:System.Numerics.BigInteger" /> object to a signed 8-bit value.</span></span>  
  
<span data-ttu-id="4a467-815">Esta API no es conforme a CLS.</span><span class="sxs-lookup"><span data-stu-id="4a467-815">This API is not CLS-compliant.</span></span> <span data-ttu-id="4a467-816">La alternativa conforme es <see cref="T:System.Int16" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-816">The compliant alternative is <see cref="T:System.Int16" />.</span></span></summary>
        <returns><span data-ttu-id="4a467-817">Objeto que contiene el valor del parámetro <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-817">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a467-818">Las sobrecargas de los <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> método definen los tipos a la que o desde el que un <xref:System.Numerics.BigInteger> se puede convertir el objeto.</span><span class="sxs-lookup"><span data-stu-id="4a467-818">The overloads of the <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> method define the types to which or from which a <xref:System.Numerics.BigInteger> object can be converted.</span></span> <span data-ttu-id="4a467-819">Los compiladores de lenguaje no realizan esta conversión automáticamente porque puede implicar pérdida de datos.</span><span class="sxs-lookup"><span data-stu-id="4a467-819">Language compilers do not perform this conversion automatically because it can involve data loss.</span></span> <span data-ttu-id="4a467-820">En su lugar, realizan la conversión solo si un operador de conversión (en C#) o una función de conversión (como `CType` o `CSByte` en Visual Basic) se utiliza.</span><span class="sxs-lookup"><span data-stu-id="4a467-820">Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as `CType` or `CSByte` in Visual Basic) is used.</span></span> <span data-ttu-id="4a467-821">En caso contrario, muestra un error del compilador.</span><span class="sxs-lookup"><span data-stu-id="4a467-821">Otherwise, they display a compiler error.</span></span>  

 <span data-ttu-id="4a467-822">Dado que esta operación define una conversión de restricción, puede producir un <xref:System.OverflowException> en tiempo de ejecución si el <xref:System.Numerics.BigInteger> valor está fuera del intervalo de la <xref:System.SByte> tipo de datos.</span><span class="sxs-lookup"><span data-stu-id="4a467-822">Because this operation defines a narrowing conversion, it can throw an <xref:System.OverflowException> at run time if the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.SByte> data type.</span></span> <span data-ttu-id="4a467-823">No hay ninguna pérdida de precisión en el cuadro <xref:System.SByte> valor si la conversión es correcta.</span><span class="sxs-lookup"><span data-stu-id="4a467-823">There is no loss of precision in the resulting <xref:System.SByte> value if the conversion is successful.</span></span>

## Examples
 <span data-ttu-id="4a467-824">El ejemplo siguiente muestra la conversión de <xref:System.Numerics.BigInteger> a <xref:System.SByte> valores.</span><span class="sxs-lookup"><span data-stu-id="4a467-824">The following example illustrates the conversion of <xref:System.Numerics.BigInteger> to <xref:System.SByte> values.</span></span> <span data-ttu-id="4a467-825">También controla un <xref:System.OverflowException> que se produce porque el <xref:System.Numerics.BigInteger> valor está fuera del intervalo de la <xref:System.SByte> tipo de datos.</span><span class="sxs-lookup"><span data-stu-id="4a467-825">It also handles an <xref:System.OverflowException> that is thrown because the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.SByte> data type.</span></span>   
    
 [!code-csharp[System.Numeric.BigInteger.Explicit#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/cs/System.Numeric.BigInteger.Explicit.cs#7)]   
 [!code-vb[System.Numeric.BigInteger.Explicit#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/vb/System.Numeric.BigInteger.Explicit.vb#7)]   

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="4a467-826"><paramref name="value" /> es mayor que <see cref="F:System.SByte.MinValue" /> o menor que <see cref="F:System.SByte.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-826"><paramref name="value" /> is less than <see cref="F:System.SByte.MinValue" /> or is greater than <see cref="F:System.SByte.MaxValue" />.</span></span></exception>
        <altCompliant cref="T:System.Int16" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator float (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname float32 op_Explicit(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Single" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As BigInteger) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator float(System::Numerics::BigInteger value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Numerics.BigInteger -&gt; single" Usage="System.Numerics.BigInteger.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4a467-827">Valor que se va a convertir en un valor de punto flotante de precisión sencilla.</span><span class="sxs-lookup"><span data-stu-id="4a467-827">The value to convert to a single-precision floating-point value.</span></span></param>
        <summary><span data-ttu-id="4a467-828">Define una conversión explícita de un objeto <see cref="T:System.Numerics.BigInteger" /> en un valor de punto flotante de precisión sencilla.</span><span class="sxs-lookup"><span data-stu-id="4a467-828">Defines an explicit conversion of a <see cref="T:System.Numerics.BigInteger" /> object to a single-precision floating-point value.</span></span></summary>
        <returns><span data-ttu-id="4a467-829">Objeto que contiene la representación más cercana del parámetro <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-829">An object that contains the closest possible representation of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a467-830">Las sobrecargas de los <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> método definen los tipos a la que o desde el que un <xref:System.Numerics.BigInteger> se puede convertir el objeto.</span><span class="sxs-lookup"><span data-stu-id="4a467-830">The overloads of the <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> method define the types to which or from which a <xref:System.Numerics.BigInteger> object can be converted.</span></span> <span data-ttu-id="4a467-831">Los compiladores de lenguaje no realizan esta conversión automáticamente porque puede implicar pérdida de datos o una pérdida de precisión.</span><span class="sxs-lookup"><span data-stu-id="4a467-831">Language compilers do not perform this conversion automatically because it can involve data loss or a loss of precision.</span></span> <span data-ttu-id="4a467-832">En su lugar, realizan la conversión solo si un operador de conversión (en C#) o una función de conversión (como `CType` o `CSng` en Visual Basic) se utiliza.</span><span class="sxs-lookup"><span data-stu-id="4a467-832">Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as `CType` or `CSng` in Visual Basic) is used.</span></span> <span data-ttu-id="4a467-833">En caso contrario, muestra un error del compilador.</span><span class="sxs-lookup"><span data-stu-id="4a467-833">Otherwise, they display a compiler error.</span></span>    

 <span data-ttu-id="4a467-834">Dado que el <xref:System.Numerics.BigInteger> valor puede estar fuera del intervalo de la <xref:System.Single> tipo de datos, esta operación es una conversión de restricción.</span><span class="sxs-lookup"><span data-stu-id="4a467-834">Because the <xref:System.Numerics.BigInteger> value can be outside the range of the <xref:System.Single> data type, this operation is a narrowing conversion.</span></span> <span data-ttu-id="4a467-835">Si la conversión se realiza correctamente, no se produce un <xref:System.OverflowException>.</span><span class="sxs-lookup"><span data-stu-id="4a467-835">If the conversion is unsuccessful, it does not throw an <xref:System.OverflowException>.</span></span> <span data-ttu-id="4a467-836">En su lugar, si la <xref:System.Numerics.BigInteger> valor es menor que <xref:System.Single.MinValue?displayProperty=nameWithType>, resultante <xref:System.Single> valor es <xref:System.Single.NegativeInfinity?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4a467-836">Instead, if the <xref:System.Numerics.BigInteger> value is less than <xref:System.Single.MinValue?displayProperty=nameWithType>, the resulting <xref:System.Single> value is <xref:System.Single.NegativeInfinity?displayProperty=nameWithType>.</span></span> <span data-ttu-id="4a467-837">Si el <xref:System.Numerics.BigInteger> valor es mayor que <xref:System.Single.MaxValue?displayProperty=nameWithType>, resultante <xref:System.Single> valor es <xref:System.Single.PositiveInfinity?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4a467-837">If the <xref:System.Numerics.BigInteger> value is greater than <xref:System.Single.MaxValue?displayProperty=nameWithType>, the resulting <xref:System.Single> value is <xref:System.Single.PositiveInfinity?displayProperty=nameWithType>.</span></span>

 <span data-ttu-id="4a467-838">La conversión de un <xref:System.Numerics.BigInteger> a un <xref:System.Single> puede conllevar una pérdida de precisión.</span><span class="sxs-lookup"><span data-stu-id="4a467-838">The conversion of a <xref:System.Numerics.BigInteger> to a <xref:System.Single> may involve a loss of precision.</span></span> <span data-ttu-id="4a467-839">En algunos casos, la pérdida de precisión puede provocar la operación de conversión o se realice correctamente incluso si la <xref:System.Numerics.BigInteger> valor está fuera del intervalo de la <xref:System.Single> tipo de datos.</span><span class="sxs-lookup"><span data-stu-id="4a467-839">In some cases, the loss of precision may cause the casting or conversion operation to succeed even if the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.Single> data type.</span></span> <span data-ttu-id="4a467-840">Esto se muestra en el ejemplo siguiente.</span><span class="sxs-lookup"><span data-stu-id="4a467-840">The following example provides an illustration.</span></span> <span data-ttu-id="4a467-841">Asigna el valor máximo de un <xref:System.Single> a dos <xref:System.Numerics.BigInteger> variables, se incrementa una <xref:System.Numerics.BigInteger> variable 9.999e291 y comprueba las dos variables de la igualdad.</span><span class="sxs-lookup"><span data-stu-id="4a467-841">It assigns the maximum value of a <xref:System.Single> to two <xref:System.Numerics.BigInteger> variables, increments one <xref:System.Numerics.BigInteger> variable by 9.999e291, and tests the two variables for equality.</span></span> <span data-ttu-id="4a467-842">Según lo previsto, la llamada a la <xref:System.Numerics.BigInteger.Equals%28System.Numerics.BigInteger%29?displayProperty=nameWithType> método muestra que son iguales.</span><span class="sxs-lookup"><span data-stu-id="4a467-842">As expected, the call to the <xref:System.Numerics.BigInteger.Equals%28System.Numerics.BigInteger%29?displayProperty=nameWithType> method shows that they are unequal.</span></span> <span data-ttu-id="4a467-843">Sin embargo, la conversión del mayor <xref:System.Numerics.BigInteger> valor nuevo a un <xref:System.Single> se realiza correctamente, aunque el <xref:System.Numerics.BigInteger> ahora supera el valor <xref:System.Single.MaxValue?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4a467-843">However, the conversion of the larger <xref:System.Numerics.BigInteger> value back to a <xref:System.Single> succeeds, although the <xref:System.Numerics.BigInteger> value now exceeds <xref:System.Single.MaxValue?displayProperty=nameWithType>.</span></span>   
    
 [!code-csharp[System.Numerics.BigInteger.Explicit#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Explicit/cs/Explicit1.cs#5)]   
 [!code-vb[System.Numerics.BigInteger.Explicit#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Explicit/vb/Explicit1.vb#5)]   



## Examples
 <span data-ttu-id="4a467-844">El ejemplo siguiente muestra la conversión de <xref:System.Numerics.BigInteger> a <xref:System.Single> valores.</span><span class="sxs-lookup"><span data-stu-id="4a467-844">The following example illustrates the conversion of <xref:System.Numerics.BigInteger> to <xref:System.Single> values.</span></span>   
     
 [!code-csharp[System.Numeric.BigInteger.Explicit#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/cs/System.Numeric.BigInteger.Explicit.cs#8)]   
 [!code-vb[System.Numeric.BigInteger.Explicit#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/vb/System.Numeric.BigInteger.Explicit.vb#8)]   

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator ushort (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname unsigned int16 op_Explicit(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt16" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As BigInteger) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::UInt16(System::Numerics::BigInteger value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Numerics.BigInteger -&gt; uint16" Usage="System.Numerics.BigInteger.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4a467-845">Valor que se va a convertir en un entero de 16 bits sin signo.</span><span class="sxs-lookup"><span data-stu-id="4a467-845">The value to convert to an unsigned 16-bit integer.</span></span></param>
        <summary><span data-ttu-id="4a467-846">Define una conversión explícita de un objeto <see cref="T:System.Numerics.BigInteger" /> en un valor entero de 16 bits sin signo.</span><span class="sxs-lookup"><span data-stu-id="4a467-846">Defines an explicit conversion of a <see cref="T:System.Numerics.BigInteger" /> object to an unsigned 16-bit integer value.</span></span>  
  
<span data-ttu-id="4a467-847">Esta API no es conforme a CLS.</span><span class="sxs-lookup"><span data-stu-id="4a467-847">This API is not CLS-compliant.</span></span> <span data-ttu-id="4a467-848">La alternativa conforme es <see cref="T:System.Int32" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-848">The compliant alternative is <see cref="T:System.Int32" />.</span></span></summary>
        <returns><span data-ttu-id="4a467-849">Objeto que contiene el valor del parámetro <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-849">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a467-850">Las sobrecargas de los <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> método definen los tipos a la que o desde el que un <xref:System.Numerics.BigInteger> se puede convertir el objeto.</span><span class="sxs-lookup"><span data-stu-id="4a467-850">The overloads of the <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> method define the types to which or from which a <xref:System.Numerics.BigInteger> object can be converted.</span></span> <span data-ttu-id="4a467-851">Los compiladores de lenguaje no realizan esta conversión automáticamente porque puede implicar pérdida de datos.</span><span class="sxs-lookup"><span data-stu-id="4a467-851">Language compilers do not perform this conversion automatically because it can involve data loss.</span></span> <span data-ttu-id="4a467-852">En su lugar, realizan la conversión solo si un operador de conversión (en C#) o una función de conversión (como `CType` o `CUShort` en Visual Basic) se utiliza.</span><span class="sxs-lookup"><span data-stu-id="4a467-852">Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as `CType` or `CUShort` in Visual Basic) is used.</span></span> <span data-ttu-id="4a467-853">En caso contrario, muestra un error del compilador.</span><span class="sxs-lookup"><span data-stu-id="4a467-853">Otherwise, they display a compiler error.</span></span>    

 <span data-ttu-id="4a467-854">Dado que esta operación define una conversión de restricción, puede producir un <xref:System.OverflowException> en tiempo de ejecución si el <xref:System.Numerics.BigInteger> valor está fuera del intervalo de la <xref:System.UInt16> tipo de datos.</span><span class="sxs-lookup"><span data-stu-id="4a467-854">Because this operation defines a narrowing conversion, it can throw an <xref:System.OverflowException> at run time if the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.UInt16> data type.</span></span> <span data-ttu-id="4a467-855">No hay ninguna pérdida de precisión en el cuadro <xref:System.UInt16> valor si la conversión es correcta.</span><span class="sxs-lookup"><span data-stu-id="4a467-855">There is no loss of precision in the resulting <xref:System.UInt16> value if the conversion is successful.</span></span>

## Examples
 <span data-ttu-id="4a467-856">El ejemplo siguiente muestra la conversión de <xref:System.Numerics.BigInteger> a <xref:System.UInt16> valores.</span><span class="sxs-lookup"><span data-stu-id="4a467-856">The following example illustrates the conversion of <xref:System.Numerics.BigInteger> to <xref:System.UInt16> values.</span></span> <span data-ttu-id="4a467-857">También controla un <xref:System.OverflowException> que se produce porque el <xref:System.Numerics.BigInteger> valor está fuera del intervalo de la <xref:System.UInt16> tipo de datos.</span><span class="sxs-lookup"><span data-stu-id="4a467-857">It also handles an <xref:System.OverflowException> that is thrown because the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.UInt16> data type.</span></span>   
    
 [!code-csharp[System.Numeric.BigInteger.Explicit#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/cs/System.Numeric.BigInteger.Explicit.cs#9)]   
 [!code-vb[System.Numeric.BigInteger.Explicit#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/vb/System.Numeric.BigInteger.Explicit.vb#9)]   

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="4a467-858"><paramref name="value" /> es mayor que <see cref="F:System.UInt16.MinValue" /> o menor que <see cref="F:System.UInt16.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-858"><paramref name="value" /> is less than <see cref="F:System.UInt16.MinValue" /> or is greater than <see cref="F:System.UInt16.MaxValue" />.</span></span></exception>
        <altCompliant cref="T:System.Int32" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator uint (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname unsigned int32 op_Explicit(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt32" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As BigInteger) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::UInt32(System::Numerics::BigInteger value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Numerics.BigInteger -&gt; uint32" Usage="System.Numerics.BigInteger.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4a467-859">Valor que se va a convertir en un entero de 32 bits sin signo.</span><span class="sxs-lookup"><span data-stu-id="4a467-859">The value to convert to an unsigned 32-bit integer.</span></span></param>
        <summary><span data-ttu-id="4a467-860">Define una conversión explícita de un objeto <see cref="T:System.Numerics.BigInteger" /> en un valor entero de 32 bits sin signo.</span><span class="sxs-lookup"><span data-stu-id="4a467-860">Defines an explicit conversion of a <see cref="T:System.Numerics.BigInteger" /> object to an unsigned 32-bit integer value.</span></span>  
  
<span data-ttu-id="4a467-861">Esta API no es conforme a CLS.</span><span class="sxs-lookup"><span data-stu-id="4a467-861">This API is not CLS-compliant.</span></span> <span data-ttu-id="4a467-862">La alternativa conforme es <see cref="T:System.Int64" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-862">The compliant alternative is <see cref="T:System.Int64" />.</span></span></summary>
        <returns><span data-ttu-id="4a467-863">Objeto que contiene el valor del parámetro <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-863">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a467-864">Las sobrecargas de los <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> método definen los tipos a la que o desde el que un <xref:System.Numerics.BigInteger> se puede convertir el objeto.</span><span class="sxs-lookup"><span data-stu-id="4a467-864">The overloads of the <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> method define the types to which or from which a <xref:System.Numerics.BigInteger> object can be converted.</span></span> <span data-ttu-id="4a467-865">Los compiladores de lenguaje no realizan esta conversión automáticamente porque puede implicar pérdida de datos.</span><span class="sxs-lookup"><span data-stu-id="4a467-865">Language compilers do not perform this conversion automatically because it can involve data loss.</span></span> <span data-ttu-id="4a467-866">En su lugar, realizan la conversión solo si un operador de conversión (en C#) o una función de conversión (como `CType` o `CUInt` en Visual Basic) se utiliza.</span><span class="sxs-lookup"><span data-stu-id="4a467-866">Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as `CType` or `CUInt` in Visual Basic) is used.</span></span> <span data-ttu-id="4a467-867">En caso contrario, muestra un error del compilador.</span><span class="sxs-lookup"><span data-stu-id="4a467-867">Otherwise, they display a compiler error.</span></span>    

 <span data-ttu-id="4a467-868">Dado que esta operación define una conversión de restricción, puede producir un <xref:System.OverflowException> en tiempo de ejecución si el <xref:System.Numerics.BigInteger> valor está fuera del intervalo de la <xref:System.UInt32> tipo de datos.</span><span class="sxs-lookup"><span data-stu-id="4a467-868">Because this operation defines a narrowing conversion, it can throw an <xref:System.OverflowException> at run time if the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.UInt32> data type.</span></span> <span data-ttu-id="4a467-869">No hay ninguna pérdida de precisión en el cuadro <xref:System.UInt32> valor si la conversión es correcta.</span><span class="sxs-lookup"><span data-stu-id="4a467-869">There is no loss of precision in the resulting <xref:System.UInt32> value if the conversion is successful.</span></span>

## Examples
 <span data-ttu-id="4a467-870">El ejemplo siguiente muestra la conversión de <xref:System.Numerics.BigInteger> a <xref:System.UInt32> valores.</span><span class="sxs-lookup"><span data-stu-id="4a467-870">The following example illustrates the conversion of <xref:System.Numerics.BigInteger> to <xref:System.UInt32> values.</span></span> <span data-ttu-id="4a467-871">También controla un <xref:System.OverflowException> que se produce porque el <xref:System.Numerics.BigInteger> valor está fuera del intervalo de la <xref:System.UInt32> tipo de datos.</span><span class="sxs-lookup"><span data-stu-id="4a467-871">It also handles an <xref:System.OverflowException> that is thrown because the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.UInt32> data type.</span></span>   
    
 [!code-csharp[System.Numeric.BigInteger.Explicit#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/cs/System.Numeric.BigInteger.Explicit.cs#10)]   
 [!code-vb[System.Numeric.BigInteger.Explicit#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/vb/System.Numeric.BigInteger.Explicit.vb#10)]   

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="4a467-872"><paramref name="value" /> es mayor que <see cref="F:System.UInt32.MinValue" /> o menor que <see cref="F:System.UInt32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-872"><paramref name="value" /> is less than <see cref="F:System.UInt32.MinValue" /> or is greater than <see cref="F:System.UInt32.MaxValue" />.</span></span></exception>
        <altCompliant cref="T:System.Int64" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator ulong (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname unsigned int64 op_Explicit(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt64" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As BigInteger) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::UInt64(System::Numerics::BigInteger value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Numerics.BigInteger -&gt; uint64" Usage="System.Numerics.BigInteger.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4a467-873">Valor que se va a convertir en un entero de 64 bits sin signo.</span><span class="sxs-lookup"><span data-stu-id="4a467-873">The value to convert to an unsigned 64-bit integer.</span></span></param>
        <summary><span data-ttu-id="4a467-874">Define una conversión explícita de un objeto <see cref="T:System.Numerics.BigInteger" /> en un valor entero de 64 bits sin signo.</span><span class="sxs-lookup"><span data-stu-id="4a467-874">Defines an explicit conversion of a <see cref="T:System.Numerics.BigInteger" /> object to an unsigned 64-bit integer value.</span></span>  
  
<span data-ttu-id="4a467-875">Esta API no es conforme a CLS.</span><span class="sxs-lookup"><span data-stu-id="4a467-875">This API is not CLS-compliant.</span></span> <span data-ttu-id="4a467-876">La alternativa conforme es <see cref="T:System.Double" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-876">The compliant alternative is <see cref="T:System.Double" />.</span></span></summary>
        <returns><span data-ttu-id="4a467-877">Objeto que contiene el valor del parámetro <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-877">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a467-878">Las sobrecargas de los <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> método definen los tipos a la que o desde el que un <xref:System.Numerics.BigInteger> se puede convertir el objeto.</span><span class="sxs-lookup"><span data-stu-id="4a467-878">The overloads of the <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> method define the types to which or from which a <xref:System.Numerics.BigInteger> object can be converted.</span></span> <span data-ttu-id="4a467-879">Los compiladores de lenguaje no realizan esta conversión automáticamente porque puede implicar pérdida de datos.</span><span class="sxs-lookup"><span data-stu-id="4a467-879">Language compilers do not perform this conversion automatically because it can involve data loss.</span></span> <span data-ttu-id="4a467-880">En su lugar, realizan la conversión solo si un operador de conversión (en C#) o una función de conversión (como `CType` o `CULng` en Visual Basic) se utiliza.</span><span class="sxs-lookup"><span data-stu-id="4a467-880">Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as `CType` or `CULng` in Visual Basic) is used.</span></span> <span data-ttu-id="4a467-881">En caso contrario, muestra un error del compilador.</span><span class="sxs-lookup"><span data-stu-id="4a467-881">Otherwise, they display a compiler error.</span></span>    

 <span data-ttu-id="4a467-882">Dado que esta operación define una conversión de restricción, puede producir un <xref:System.OverflowException> en tiempo de ejecución si el <xref:System.Numerics.BigInteger> valor está fuera del intervalo de la <xref:System.UInt64> tipo de datos.</span><span class="sxs-lookup"><span data-stu-id="4a467-882">Because this operation defines a narrowing conversion, it can throw an <xref:System.OverflowException> at run time if the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.UInt64> data type.</span></span> <span data-ttu-id="4a467-883">No hay ninguna pérdida de precisión en el cuadro <xref:System.UInt64> valor si la conversión es correcta.</span><span class="sxs-lookup"><span data-stu-id="4a467-883">There is no loss of precision in the resulting <xref:System.UInt64> value if the conversion is successful.</span></span>

## Examples
 <span data-ttu-id="4a467-884">El ejemplo siguiente muestra la conversión de <xref:System.Numerics.BigInteger> a <xref:System.UInt64> valores.</span><span class="sxs-lookup"><span data-stu-id="4a467-884">The following example illustrates the conversion of <xref:System.Numerics.BigInteger> to <xref:System.UInt64> values.</span></span> <span data-ttu-id="4a467-885">También controla un <xref:System.OverflowException> que se produce porque el <xref:System.Numerics.BigInteger> valor está fuera del intervalo de la <xref:System.UInt64> tipo de datos.</span><span class="sxs-lookup"><span data-stu-id="4a467-885">It also handles an <xref:System.OverflowException> that is thrown because the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.UInt64> data type.</span></span>   
    
 [!code-csharp[System.Numeric.BigInteger.Explicit#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/cs/System.Numeric.BigInteger.Explicit.cs#11)]   
 [!code-vb[System.Numeric.BigInteger.Explicit#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/vb/System.Numeric.BigInteger.Explicit.vb#11)]   

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="4a467-886"><paramref name="value" /> es mayor que <see cref="F:System.UInt64.MinValue" /> o menor que <see cref="F:System.UInt64.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-886"><paramref name="value" /> is less than <see cref="F:System.UInt64.MinValue" /> or is greater than <see cref="F:System.UInt64.MaxValue" />.</span></span></exception>
        <altCompliant cref="T:System.Double" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator System.Numerics.BigInteger (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Explicit(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Explicit(System.Single)~System.Numerics.BigInteger" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Single) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Numerics::BigInteger(float value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : single -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4a467-887">Valor que se va a convertir en un tipo <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-887">The value to convert to a <see cref="T:System.Numerics.BigInteger" />.</span></span></param>
        <summary><span data-ttu-id="4a467-888">Define una conversión explícita de un valor <see cref="T:System.Single" /> en un valor <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-888">Defines an explicit conversion of a <see cref="T:System.Single" /> value to a <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns><span data-ttu-id="4a467-889">Objeto que contiene el valor del parámetro <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-889">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a467-890">La parte fraccionaria de los `value` se trunca el parámetro antes de la conversión.</span><span class="sxs-lookup"><span data-stu-id="4a467-890">Any fractional part of the `value` parameter is truncated before conversion.</span></span>
 
 <span data-ttu-id="4a467-891">Las sobrecargas de los <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> método definen los tipos a la que o desde el que un <xref:System.Numerics.BigInteger> se puede convertir el objeto.</span><span class="sxs-lookup"><span data-stu-id="4a467-891">The overloads of the <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> method define the types to which or from which a <xref:System.Numerics.BigInteger> object can be converted.</span></span> <span data-ttu-id="4a467-892">Dado que la conversión de <xref:System.Single> a <xref:System.Numerics.BigInteger> puede implicar el truncamiento de cualquier parte fraccionaria de `value`, los compiladores de lenguaje no realizan esta conversión automáticamente.</span><span class="sxs-lookup"><span data-stu-id="4a467-892">Because the conversion from <xref:System.Single> to <xref:System.Numerics.BigInteger> can involve truncating any fractional part of `value`, language compilers do not perform this conversion automatically.</span></span> <span data-ttu-id="4a467-893">En su lugar, realizan la conversión solo si un operador de conversión (en C#) o una función de conversión (como `CType` en Visual Basic) se utiliza.</span><span class="sxs-lookup"><span data-stu-id="4a467-893">Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as `CType` in Visual Basic) is used.</span></span> <span data-ttu-id="4a467-894">En caso contrario, muestra un error del compilador.</span><span class="sxs-lookup"><span data-stu-id="4a467-894">Otherwise, they display a compiler error.</span></span>

 <span data-ttu-id="4a467-895">Los lenguajes que no admiten operadores personalizados, el método alternativo es <xref:System.Numerics.BigInteger.%23ctor%28System.Single%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4a467-895">For languages that do not support custom operators, the alternative method is <xref:System.Numerics.BigInteger.%23ctor%28System.Single%29?displayProperty=nameWithType>.</span></span>


## Examples
 <span data-ttu-id="4a467-896">El ejemplo siguiente convierte los elementos individuales en una matriz de <xref:System.Single> valores <xref:System.Numerics.BigInteger> objetos y, a continuación, muestra el resultado de cada conversión.</span><span class="sxs-lookup"><span data-stu-id="4a467-896">The following example converts the individual elements in an array of <xref:System.Single> values to <xref:System.Numerics.BigInteger> objects, and then displays the result of each conversion.</span></span> <span data-ttu-id="4a467-897">Tenga en cuenta que cualquier fraccionarios forma parte de un <xref:System.Single> valor se trunca durante la conversión.</span><span class="sxs-lookup"><span data-stu-id="4a467-897">Note that any fractional part of a <xref:System.Single> value is truncated during the conversion.</span></span>
 
 [!code-csharp[System.Numerics.BigInteger.Explicit#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Explicit/cs/Explicit1.cs#3)]   
 [!code-vb[System.Numerics.BigInteger.Explicit#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Explicit/vb/Explicit1.vb#3)]   

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="4a467-898"><paramref name="value" /> es <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.PositiveInfinity" /> o <see cref="F:System.Single.NegativeInfinity" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-898"><paramref name="value" /> is <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.PositiveInfinity" />, or <see cref="F:System.Single.NegativeInfinity" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="op_GreaterThan">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4a467-899">Devuelve un valor que indica si un valor especificado es mayor que otro valor especificado.</span><span class="sxs-lookup"><span data-stu-id="4a467-899">Returns a value that indicates whether a specified value is greater than another specified value.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="op_GreaterThan">
      <MemberSignature Language="C#" Value="public static bool operator &gt; (long left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThan(int64 left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_GreaterThan(System.Int64,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt; (left As Long, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;(long left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( &gt; ) : int64 * System.Numerics.BigInteger -&gt; bool" Usage="left &gt; right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Int64" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="4a467-900">Primer valor que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="4a467-900">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="4a467-901">Segundo valor que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="4a467-901">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="4a467-902">Devuelve un valor que indica si un entero de 64 bits con signo es mayor que un valor <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-902">Returns a value that indicates whether a 64-bit signed integer is greater than a <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns><span data-ttu-id="4a467-903">Es <see langword="true" /> si <paramref name="left" /> es mayor que <paramref name="right" />; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-903"><see langword="true" /> if <paramref name="left" /> is greater than <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a467-904">El <xref:System.Numerics.BigInteger.op_GreaterThan%2A> método define la operación del mayor que el operador para <xref:System.Numerics.BigInteger> valores.</span><span class="sxs-lookup"><span data-stu-id="4a467-904">The <xref:System.Numerics.BigInteger.op_GreaterThan%2A> method defines the operation of the greater than operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="4a467-905">Permite código como el siguiente:</span><span class="sxs-lookup"><span data-stu-id="4a467-905">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#9)]
 [!code-vb[System.Numerics.BigInteger.Operators#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#9)]  
  
 <span data-ttu-id="4a467-906">Los lenguajes que no admiten operadores personalizados pueden llamar los <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> en su lugar, el método de instancia.</span><span class="sxs-lookup"><span data-stu-id="4a467-906">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> instance method instead.</span></span> <span data-ttu-id="4a467-907">También pueden llamar algunos lenguajes el <xref:System.Numerics.BigInteger.op_GreaterThan%28System.Int64%2CSystem.Numerics.BigInteger%29> método directamente, como en el ejemplo siguiente se muestra.</span><span class="sxs-lookup"><span data-stu-id="4a467-907">Some languages can also call the <xref:System.Numerics.BigInteger.op_GreaterThan%28System.Int64%2CSystem.Numerics.BigInteger%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numerics.BigInteger.Operators#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#10)]  
  
 <span data-ttu-id="4a467-908">Si `left` es un <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, o <xref:System.UInt32> valor, se convierte implícitamente en un <xref:System.Int64> valor cuando se realiza la operación.</span><span class="sxs-lookup"><span data-stu-id="4a467-908">If `left` is a <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, or <xref:System.UInt32> value, it is implicitly converted to an <xref:System.Int64> value when the operation is performed.</span></span>  
  
 <span data-ttu-id="4a467-909">El método equivalente para este operador es <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4a467-909">The equivalent method for this operator is <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_GreaterThanOrEqual" />
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThan">
      <MemberSignature Language="C#" Value="public static bool operator &gt; (System.Numerics.BigInteger left, long right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThan(valuetype System.Numerics.BigInteger left, int64 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt; (left As BigInteger, right As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;(System::Numerics::BigInteger left, long right);" />
      <MemberSignature Language="F#" Value="static member ( &gt; ) : System.Numerics.BigInteger * int64 -&gt; bool" Usage="left &gt; right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="4a467-910">Primer valor que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="4a467-910">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="4a467-911">Segundo valor que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="4a467-911">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="4a467-912">Devuelve un valor que indica si un valor <see cref="T:System.Numerics.BigInteger" /> es mayor que un valor entero de 64 bits con signo.</span><span class="sxs-lookup"><span data-stu-id="4a467-912">Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> is greater than a 64-bit signed integer value.</span></span></summary>
        <returns><span data-ttu-id="4a467-913">Es <see langword="true" /> si <paramref name="left" /> es mayor que <paramref name="right" />; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-913"><see langword="true" /> if <paramref name="left" /> is greater than <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a467-914">El <xref:System.Numerics.BigInteger.op_GreaterThan%2A> método define la operación del mayor que el operador para <xref:System.Numerics.BigInteger> valores.</span><span class="sxs-lookup"><span data-stu-id="4a467-914">The <xref:System.Numerics.BigInteger.op_GreaterThan%2A> method defines the operation of the greater than operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="4a467-915">Permite código como el siguiente:</span><span class="sxs-lookup"><span data-stu-id="4a467-915">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#11)]
 [!code-vb[System.Numerics.BigInteger.Operators#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#11)]  
  
 <span data-ttu-id="4a467-916">Los lenguajes que no admiten operadores personalizados pueden llamar los <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> método en su lugar.</span><span class="sxs-lookup"><span data-stu-id="4a467-916">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="4a467-917">También pueden llamar algunos lenguajes el <xref:System.Numerics.BigInteger.op_GreaterThan%28System.Numerics.BigInteger%2CSystem.Int64%29> método directamente, como en el ejemplo siguiente se muestra.</span><span class="sxs-lookup"><span data-stu-id="4a467-917">Some languages can also call the <xref:System.Numerics.BigInteger.op_GreaterThan%28System.Numerics.BigInteger%2CSystem.Int64%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numerics.BigInteger.Operators#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#12)]  
  
 <span data-ttu-id="4a467-918">Si `right` es un <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, o <xref:System.UInt32> valor, se convierte implícitamente en un <xref:System.Int64> valor cuando se realiza la operación.</span><span class="sxs-lookup"><span data-stu-id="4a467-918">If `right` is a <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, or <xref:System.UInt32> value, it is implicitly converted to an <xref:System.Int64> value when the operation is performed.</span></span>  
  
 <span data-ttu-id="4a467-919">El método equivalente para este operador es <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4a467-919">The equivalent method for this operator is <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_GreaterThanOrEqual" />
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThan">
      <MemberSignature Language="C#" Value="public static bool operator &gt; (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThan(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt; (left As BigInteger, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( &gt; ) : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; bool" Usage="left &gt; right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="4a467-920">Primer valor que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="4a467-920">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="4a467-921">Segundo valor que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="4a467-921">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="4a467-922">Devuelve un valor que indica si un valor <see cref="T:System.Numerics.BigInteger" /> es mayor que otro valor <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-922">Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value is greater than another <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns><span data-ttu-id="4a467-923">Es <see langword="true" /> si <paramref name="left" /> es mayor que <paramref name="right" />; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-923"><see langword="true" /> if <paramref name="left" /> is greater than <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a467-924">El <xref:System.Numerics.BigInteger.op_GreaterThan%2A> método define la operación del mayor que el operador para <xref:System.Numerics.BigInteger> valores.</span><span class="sxs-lookup"><span data-stu-id="4a467-924">The <xref:System.Numerics.BigInteger.op_GreaterThan%2A> method defines the operation of the greater than operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="4a467-925">Permite código como el siguiente:</span><span class="sxs-lookup"><span data-stu-id="4a467-925">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#20](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#20)]
 [!code-vb[System.Numeric.BigInteger.Class#20](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#20)]  
  
 <span data-ttu-id="4a467-926">Los lenguajes que no admiten operadores personalizados pueden llamar los <xref:System.Numerics.BigInteger.Compare%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType> método en su lugar.</span><span class="sxs-lookup"><span data-stu-id="4a467-926">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.Compare%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="4a467-927">También puede llamar a la <xref:System.Numerics.BigInteger.op_GreaterThan%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29> método directamente, como en el ejemplo siguiente se muestra.</span><span class="sxs-lookup"><span data-stu-id="4a467-927">They can also call the <xref:System.Numerics.BigInteger.op_GreaterThan%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numeric.BigInteger.Class#21](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#21)]  
  
 <span data-ttu-id="4a467-928">El método equivalente para este operador es <xref:System.Numerics.BigInteger.CompareTo(System.Numerics.BigInteger)?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4a467-928">The equivalent method for this operator is <xref:System.Numerics.BigInteger.CompareTo(System.Numerics.BigInteger)?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_GreaterThanOrEqual" />
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThan">
      <MemberSignature Language="C#" Value="public static bool operator &gt; (System.Numerics.BigInteger left, ulong right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThan(valuetype System.Numerics.BigInteger left, unsigned int64 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt; (left As BigInteger, right As ULong) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;(System::Numerics::BigInteger left, System::UInt64 right);" />
      <MemberSignature Language="F#" Value="static member ( &gt; ) : System.Numerics.BigInteger * uint64 -&gt; bool" Usage="left &gt; right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="4a467-929">Primer valor que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="4a467-929">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="4a467-930">Segundo valor que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="4a467-930">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="4a467-931">Devuelve un valor que indica si un valor <see cref="T:System.Numerics.BigInteger" /> es mayor que un entero de 64 bits sin signo.</span><span class="sxs-lookup"><span data-stu-id="4a467-931">Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value is greater than a 64-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="4a467-932">Es <see langword="true" /> si <paramref name="left" /> es mayor que <paramref name="right" />; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-932"><see langword="true" /> if <paramref name="left" /> is greater than <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a467-933">El <xref:System.Numerics.BigInteger.op_GreaterThan%2A> método define la operación del mayor que el operador para <xref:System.Numerics.BigInteger> valores.</span><span class="sxs-lookup"><span data-stu-id="4a467-933">The <xref:System.Numerics.BigInteger.op_GreaterThan%2A> method defines the operation of the greater than operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="4a467-934">Permite código como el siguiente:</span><span class="sxs-lookup"><span data-stu-id="4a467-934">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#13)]
 [!code-vb[System.Numerics.BigInteger.Operators#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#13)]  
  
 <span data-ttu-id="4a467-935">Los lenguajes que no admiten operadores personalizados pueden llamar los <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> método en su lugar.</span><span class="sxs-lookup"><span data-stu-id="4a467-935">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="4a467-936">También pueden llamar algunos lenguajes el <xref:System.Numerics.BigInteger.op_GreaterThan%28System.Numerics.BigInteger%2CSystem.UInt64%29> método directamente, como en el ejemplo siguiente se muestra.</span><span class="sxs-lookup"><span data-stu-id="4a467-936">Some languages can also call the <xref:System.Numerics.BigInteger.op_GreaterThan%28System.Numerics.BigInteger%2CSystem.UInt64%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numerics.BigInteger.Operators#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThan">
      <MemberSignature Language="C#" Value="public static bool operator &gt; (ulong left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThan(unsigned int64 left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_GreaterThan(System.UInt64,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt; (left As ULong, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;(System::UInt64 left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( &gt; ) : uint64 * System.Numerics.BigInteger -&gt; bool" Usage="left &gt; right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.UInt64" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="4a467-937">Primer valor que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="4a467-937">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="4a467-938">Segundo valor que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="4a467-938">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="4a467-939">Devuelve un valor que indica si un valor <see cref="T:System.Numerics.BigInteger" /> es mayor que un entero de 64 bits sin signo.</span><span class="sxs-lookup"><span data-stu-id="4a467-939">Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value is greater than a 64-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="4a467-940">Es <see langword="true" /> si <paramref name="left" /> es mayor que <paramref name="right" />; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-940"><see langword="true" /> if <paramref name="left" /> is greater than <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a467-941">El <xref:System.Numerics.BigInteger.op_GreaterThan%2A> método define la operación del mayor que el operador para <xref:System.Numerics.BigInteger> valores.</span><span class="sxs-lookup"><span data-stu-id="4a467-941">The <xref:System.Numerics.BigInteger.op_GreaterThan%2A> method defines the operation of the greater than operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="4a467-942">Permite código como el siguiente:</span><span class="sxs-lookup"><span data-stu-id="4a467-942">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#15)]
 [!code-vb[System.Numerics.BigInteger.Operators#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#15)]  
  
 <span data-ttu-id="4a467-943">Los lenguajes que no admiten operadores personalizados pueden llamar los <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> método en su lugar.</span><span class="sxs-lookup"><span data-stu-id="4a467-943">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="4a467-944">También pueden llamar algunos lenguajes el <xref:System.Numerics.BigInteger.op_GreaterThan%28System.UInt64%2CSystem.Numerics.BigInteger%29> método directamente, como en el ejemplo siguiente se muestra.</span><span class="sxs-lookup"><span data-stu-id="4a467-944">Some languages can also call the <xref:System.Numerics.BigInteger.op_GreaterThan%28System.UInt64%2CSystem.Numerics.BigInteger%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numerics.BigInteger.Operators#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#16)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_GreaterThanOrEqual" />
      </Docs>
    </Member>
    <MemberGroup MemberName="op_GreaterThanOrEqual">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4a467-945">Devuelve un valor que indica si un valor especificado es mayor o igual que otro valor especificado.</span><span class="sxs-lookup"><span data-stu-id="4a467-945">Returns a value that indicates whether a specified value is greater than or equal to another specified value.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="op_GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &gt;= (long left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThanOrEqual(int64 left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Int64,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt;= (left As Long, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;=(long left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( &gt;= ) : int64 * System.Numerics.BigInteger -&gt; bool" Usage="left &gt;= right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Int64" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="4a467-946">Primer valor que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="4a467-946">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="4a467-947">Segundo valor que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="4a467-947">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="4a467-948">Devuelve un valor que indica si un entero de 64 bits con signo es mayor o igual que un valor <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-948">Returns a value that indicates whether a 64-bit signed integer is greater than or equal to a <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns><span data-ttu-id="4a467-949">Es <see langword="true" /> si <paramref name="left" /> es mayor que <paramref name="right" />; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-949"><see langword="true" /> if <paramref name="left" /> is greater than <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a467-950">El <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%2A> método define la operación del mayor o igual al operador para <xref:System.Numerics.BigInteger> valores.</span><span class="sxs-lookup"><span data-stu-id="4a467-950">The <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%2A> method defines the operation of the greater than or equal to operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="4a467-951">Permite código como el siguiente:</span><span class="sxs-lookup"><span data-stu-id="4a467-951">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#17)]
 [!code-vb[System.Numerics.BigInteger.Operators#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#17)]  
  
 <span data-ttu-id="4a467-952">Los lenguajes que no admiten operadores personalizados pueden llamar los <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> método en su lugar.</span><span class="sxs-lookup"><span data-stu-id="4a467-952">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="4a467-953">También pueden llamar algunos lenguajes el <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%28System.Int64%2CSystem.Numerics.BigInteger%29> método directamente, como en el ejemplo siguiente se muestra.</span><span class="sxs-lookup"><span data-stu-id="4a467-953">Some languages can also call the <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%28System.Int64%2CSystem.Numerics.BigInteger%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numerics.BigInteger.Operators#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#18)]  
  
 <span data-ttu-id="4a467-954">Si `left` es un <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, o <xref:System.UInt32> valor, se convierte implícitamente en un <xref:System.Int64> valor cuando se realiza la operación.</span><span class="sxs-lookup"><span data-stu-id="4a467-954">If `left` is a <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, or <xref:System.UInt32> value, it is implicitly converted to an <xref:System.Int64> value when the operation is performed.</span></span>  
  
 <span data-ttu-id="4a467-955">El método equivalente para este operador es <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4a467-955">The equivalent method for this operator is <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_GreaterThan" />
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &gt;= (System.Numerics.BigInteger left, long right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThanOrEqual(valuetype System.Numerics.BigInteger left, int64 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt;= (left As BigInteger, right As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;=(System::Numerics::BigInteger left, long right);" />
      <MemberSignature Language="F#" Value="static member ( &gt;= ) : System.Numerics.BigInteger * int64 -&gt; bool" Usage="left &gt;= right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="4a467-956">Primer valor que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="4a467-956">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="4a467-957">Segundo valor que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="4a467-957">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="4a467-958">Devuelve un valor que indica si un valor <see cref="T:System.Numerics.BigInteger" /> es mayor o igual que un valor entero de 64 bits con signo.</span><span class="sxs-lookup"><span data-stu-id="4a467-958">Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value is greater than or equal to a 64-bit signed integer value.</span></span></summary>
        <returns><span data-ttu-id="4a467-959">Es <see langword="true" /> si <paramref name="left" /> es mayor que <paramref name="right" />; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-959"><see langword="true" /> if <paramref name="left" /> is greater than <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a467-960">El <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%2A> método define la operación del mayor o igual al operador para <xref:System.Numerics.BigInteger> valores.</span><span class="sxs-lookup"><span data-stu-id="4a467-960">The <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%2A> method defines the operation of the greater than or equal to operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="4a467-961">Permite código como el siguiente:</span><span class="sxs-lookup"><span data-stu-id="4a467-961">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#19](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#19)]
 [!code-vb[System.Numerics.BigInteger.Operators#19](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#19)]  
  
 <span data-ttu-id="4a467-962">Los lenguajes que no admiten operadores personalizados pueden llamar los <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> método en su lugar.</span><span class="sxs-lookup"><span data-stu-id="4a467-962">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="4a467-963">También pueden llamar algunos lenguajes el <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%28System.Numerics.BigInteger%2CSystem.Int64%29> método directamente, como en el ejemplo siguiente se muestra.</span><span class="sxs-lookup"><span data-stu-id="4a467-963">Some languages can also call the <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%28System.Numerics.BigInteger%2CSystem.Int64%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numerics.BigInteger.Operators#20](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#20)]  
  
 <span data-ttu-id="4a467-964">Si `right` es un <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, o <xref:System.UInt32> valor, se convierte implícitamente en un <xref:System.Int64> valor cuando se realiza la operación.</span><span class="sxs-lookup"><span data-stu-id="4a467-964">If `right` is a <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, or <xref:System.UInt32> value, it is implicitly converted to an <xref:System.Int64> value when the operation is performed.</span></span>  
  
 <span data-ttu-id="4a467-965">El método equivalente para este operador es <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4a467-965">The equivalent method for this operator is <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_GreaterThan" />
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &gt;= (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThanOrEqual(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt;= (left As BigInteger, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;=(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( &gt;= ) : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; bool" Usage="left &gt;= right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="4a467-966">Primer valor que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="4a467-966">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="4a467-967">Segundo valor que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="4a467-967">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="4a467-968">Devuelve un valor que indica si un valor <see cref="T:System.Numerics.BigInteger" /> es mayor o igual que otro valor <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-968">Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value is greater than or equal to another <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns><span data-ttu-id="4a467-969">Es <see langword="true" /> si <paramref name="left" /> es mayor que <paramref name="right" />; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-969"><see langword="true" /> if <paramref name="left" /> is greater than <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a467-970">El <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%2A> método define la operación del mayor o igual al operador para <xref:System.Numerics.BigInteger> valores.</span><span class="sxs-lookup"><span data-stu-id="4a467-970">The <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%2A> method defines the operation of the greater than or equal to operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="4a467-971">Permite código como el siguiente:</span><span class="sxs-lookup"><span data-stu-id="4a467-971">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#22](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#22)]
 [!code-vb[System.Numeric.BigInteger.Class#22](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#22)]  
  
 <span data-ttu-id="4a467-972">Los lenguajes que no admiten operadores personalizados pueden llamar los <xref:System.Numerics.BigInteger.Compare%2A?displayProperty=nameWithType> método en su lugar.</span><span class="sxs-lookup"><span data-stu-id="4a467-972">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.Compare%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="4a467-973">También pueden llamar algunos lenguajes el <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29> método directamente, como en el ejemplo siguiente se muestra.</span><span class="sxs-lookup"><span data-stu-id="4a467-973">Some languages can also call the <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numeric.BigInteger.Class#23](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#23)]  
  
 <span data-ttu-id="4a467-974">El método equivalente para este operador es <xref:System.Numerics.BigInteger.CompareTo(System.Numerics.BigInteger)?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4a467-974">The equivalent method for this operator is <xref:System.Numerics.BigInteger.CompareTo(System.Numerics.BigInteger)?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_GreaterThan" />
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &gt;= (System.Numerics.BigInteger left, ulong right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThanOrEqual(valuetype System.Numerics.BigInteger left, unsigned int64 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt;= (left As BigInteger, right As ULong) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;=(System::Numerics::BigInteger left, System::UInt64 right);" />
      <MemberSignature Language="F#" Value="static member ( &gt;= ) : System.Numerics.BigInteger * uint64 -&gt; bool" Usage="left &gt;= right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="4a467-975">Primer valor que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="4a467-975">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="4a467-976">Segundo valor que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="4a467-976">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="4a467-977">Devuelve un valor que indica si un valor <see cref="T:System.Numerics.BigInteger" /> es mayor o igual que un valor entero de 64 bits sin signo.</span><span class="sxs-lookup"><span data-stu-id="4a467-977">Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value is greater than or equal to a 64-bit unsigned integer value.</span></span></summary>
        <returns><span data-ttu-id="4a467-978">Es <see langword="true" /> si <paramref name="left" /> es mayor que <paramref name="right" />; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-978"><see langword="true" /> if <paramref name="left" /> is greater than <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a467-979">El <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%2A> método define la operación del mayor o igual al operador para <xref:System.Numerics.BigInteger> valores.</span><span class="sxs-lookup"><span data-stu-id="4a467-979">The <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%2A> method defines the operation of the greater than or equal to operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="4a467-980">Permite código como el siguiente:</span><span class="sxs-lookup"><span data-stu-id="4a467-980">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#21](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#21)]
 [!code-vb[System.Numerics.BigInteger.Operators#21](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#21)]  
  
 <span data-ttu-id="4a467-981">Los lenguajes que no admiten operadores personalizados pueden llamar los <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> método en su lugar.</span><span class="sxs-lookup"><span data-stu-id="4a467-981">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="4a467-982">También pueden llamar algunos lenguajes el <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%28System.Numerics.BigInteger%2CSystem.UInt64%29> método directamente, como en el ejemplo siguiente se muestra.</span><span class="sxs-lookup"><span data-stu-id="4a467-982">Some languages can also call the <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%28System.Numerics.BigInteger%2CSystem.UInt64%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numerics.BigInteger.Operators#22](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#22)]  
  
 <span data-ttu-id="4a467-983">El método equivalente para este operador es <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4a467-983">The equivalent method for this operator is <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_GreaterThan" />
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &gt;= (ulong left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThanOrEqual(unsigned int64 left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.UInt64,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt;= (left As ULong, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;=(System::UInt64 left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( &gt;= ) : uint64 * System.Numerics.BigInteger -&gt; bool" Usage="left &gt;= right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.UInt64" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="4a467-984">Primer valor que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="4a467-984">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="4a467-985">Segundo valor que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="4a467-985">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="4a467-986">Devuelve un valor que indica si un entero de 64 bits sin signo es mayor o igual que un valor <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-986">Returns a value that indicates whether a 64-bit unsigned integer is greater than or equal to a <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns><span data-ttu-id="4a467-987">Es <see langword="true" /> si <paramref name="left" /> es mayor que <paramref name="right" />; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-987"><see langword="true" /> if <paramref name="left" /> is greater than <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a467-988">El <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%2A> método define la operación del mayor o igual al operador para <xref:System.Numerics.BigInteger> valores.</span><span class="sxs-lookup"><span data-stu-id="4a467-988">The <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%2A> method defines the operation of the greater than or equal to operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="4a467-989">Permite código como el siguiente:</span><span class="sxs-lookup"><span data-stu-id="4a467-989">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#23](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#23)]
 [!code-vb[System.Numerics.BigInteger.Operators#23](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#23)]  
  
 <span data-ttu-id="4a467-990">Los lenguajes que no admiten operadores personalizados pueden llamar los <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> método en su lugar.</span><span class="sxs-lookup"><span data-stu-id="4a467-990">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="4a467-991">También pueden llamar algunos lenguajes el <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%28System.UInt64%2CSystem.Numerics.BigInteger%29> método directamente, como en el ejemplo siguiente se muestra.</span><span class="sxs-lookup"><span data-stu-id="4a467-991">Some languages can also call the <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%28System.UInt64%2CSystem.Numerics.BigInteger%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numerics.BigInteger.Operators#24](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#24)]  
  
 <span data-ttu-id="4a467-992">El método equivalente para este operador es <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4a467-992">The equivalent method for this operator is <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_GreaterThan" />
      </Docs>
    </Member>
    <MemberGroup MemberName="op_Implicit">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4a467-993">Define una conversión implícita entre un objeto <see cref="T:System.Numerics.BigInteger" /> y otro tipo.</span><span class="sxs-lookup"><span data-stu-id="4a467-993">Defines an implicit conversion between a <see cref="T:System.Numerics.BigInteger" /> object and another type.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Numerics.BigInteger (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Implicit(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As Byte) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Numerics::BigInteger(System::Byte value);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : byte -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.op_Implicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4a467-994">Valor que se va a convertir en un tipo <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-994">The value to convert to a <see cref="T:System.Numerics.BigInteger" />.</span></span></param>
        <summary><span data-ttu-id="4a467-995">Define una conversión implícita de un byte sin signo en un valor <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-995">Defines an implicit conversion of an unsigned byte to a <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns><span data-ttu-id="4a467-996">Objeto que contiene el valor del parámetro <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-996">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a467-997">La parte fraccionaria de los `value` se trunca el parámetro antes de la conversión.</span><span class="sxs-lookup"><span data-stu-id="4a467-997">Any fractional part of the `value` parameter is truncated before conversion.</span></span>

 <span data-ttu-id="4a467-998">Lenguajes que no admiten operadores implícitos, el método alternativo es <xref:System.Numerics.BigInteger.%23ctor%28System.Int32%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4a467-998">For languages that do not support implicit operators, the alternative method is <xref:System.Numerics.BigInteger.%23ctor%28System.Int32%29?displayProperty=nameWithType>.</span></span>   

 <span data-ttu-id="4a467-999">Las sobrecargas de los <xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger> método definen los tipos a la que o de que un compilador puede convertir automáticamente un <xref:System.Numerics.BigInteger> valor sin un operador de conversión explícita (en C#) o una llamada a una función de conversión (en Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="4a467-999">The overloads of the <xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger> method define the types to which or from which a compiler can automatically convert a <xref:System.Numerics.BigInteger> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="4a467-1000">Son conversiones de ampliación que implican la pérdida de datos y no producen un <xref:System.OverflowException>.</span><span class="sxs-lookup"><span data-stu-id="4a467-1000">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException>.</span></span> <span data-ttu-id="4a467-1001">Esta sobrecarga permite al compilador administrar las conversiones de un <xref:System.Byte> valor a un <xref:System.Numerics.BigInteger> valor, como se muestra en el ejemplo siguiente.</span><span class="sxs-lookup"><span data-stu-id="4a467-1001">This overload lets the compiler handle conversions from a <xref:System.Byte> value to a <xref:System.Numerics.BigInteger> value, as the following example shows.</span></span>   
   
 [!code-csharp[System.Numeric.BigInteger.Implicit#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Implicit/cs/Implicit1.cs#1)]   
 [!code-vb[System.Numeric.BigInteger.Implicit#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Implicit/vb/Implicit1.vb#1)]   

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Numerics.BigInteger (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Implicit(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Implicit(System.Int16)~System.Numerics.BigInteger" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As Short) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Numerics::BigInteger(short value);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : int16 -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.op_Implicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4a467-1002">Valor que se va a convertir en un tipo <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-1002">The value to convert to a <see cref="T:System.Numerics.BigInteger" />.</span></span></param>
        <summary><span data-ttu-id="4a467-1003">Define una conversión implícita de un entero de 16 bits con signo en un valor <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-1003">Defines an implicit conversion of a signed 16-bit integer to a <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns><span data-ttu-id="4a467-1004">Objeto que contiene el valor del parámetro <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-1004">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a467-1005">Lenguajes que no admiten operadores implícitos, el método alternativo es <xref:System.Numerics.BigInteger.%23ctor%28System.Int32%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4a467-1005">For languages that do not support implicit operators, the alternative method is <xref:System.Numerics.BigInteger.%23ctor%28System.Int32%29?displayProperty=nameWithType>.</span></span>   

 <span data-ttu-id="4a467-1006">Las sobrecargas de los <xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger> método definen los tipos a la que o de que un compilador puede convertir automáticamente un <xref:System.Numerics.BigInteger> valor sin un operador de conversión explícita (en C#) o una llamada a una función de conversión (en Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="4a467-1006">The overloads of the <xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger> method define the types to which or from which a compiler can automatically convert a <xref:System.Numerics.BigInteger> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="4a467-1007">Son conversiones de ampliación que implican la pérdida de datos y no producen un <xref:System.OverflowException>.</span><span class="sxs-lookup"><span data-stu-id="4a467-1007">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException>.</span></span> <span data-ttu-id="4a467-1008">Esta sobrecarga permite al compilador administrar las conversiones de un <xref:System.Int16> valor a un <xref:System.Numerics.BigInteger> valor, como se muestra en el ejemplo siguiente.</span><span class="sxs-lookup"><span data-stu-id="4a467-1008">This overload lets the compiler handle conversions from a <xref:System.Int16> value to a <xref:System.Numerics.BigInteger> value, as the following example shows.</span></span>   
   
 [!code-csharp[System.Numeric.BigInteger.Implicit#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Implicit/cs/Implicit1.cs#2)]   
 [!code-vb[System.Numeric.BigInteger.Implicit#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Implicit/vb/Implicit1.vb#2)]   

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Numerics.BigInteger (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Implicit(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Implicit(System.Int32)~System.Numerics.BigInteger" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As Integer) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Numerics::BigInteger(int value);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : int -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.op_Implicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4a467-1009">Valor que se va a convertir en un tipo <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-1009">The value to convert to a <see cref="T:System.Numerics.BigInteger" />.</span></span></param>
        <summary><span data-ttu-id="4a467-1010">Define una conversión implícita de un entero de 32 bits con signo en un valor <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-1010">Defines an implicit conversion of a signed 32-bit integer to a <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns><span data-ttu-id="4a467-1011">Objeto que contiene el valor del parámetro <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-1011">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a467-1012">Lenguajes que no admiten operadores implícitos, el método alternativo es <xref:System.Numerics.BigInteger.%23ctor%28System.Int32%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4a467-1012">For languages that do not support implicit operators, the alternative method is <xref:System.Numerics.BigInteger.%23ctor%28System.Int32%29?displayProperty=nameWithType>.</span></span>  

 <span data-ttu-id="4a467-1013">Las sobrecargas de los <xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger> método definen los tipos a la que o de que un compilador puede convertir automáticamente un <xref:System.Numerics.BigInteger> valor sin un operador de conversión explícita (en C#) o una llamada a una función de conversión (en Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="4a467-1013">The overloads of the <xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger> method define the types to which or from which a compiler can automatically convert a <xref:System.Numerics.BigInteger> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="4a467-1014">Son conversiones de ampliación que implican la pérdida de datos y no producen un <xref:System.OverflowException>.</span><span class="sxs-lookup"><span data-stu-id="4a467-1014">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException>.</span></span> <span data-ttu-id="4a467-1015">Esta sobrecarga permite al compilador administrar las conversiones de un <xref:System.Int32> valor a un <xref:System.Numerics.BigInteger> valor, como se muestra en el ejemplo siguiente.</span><span class="sxs-lookup"><span data-stu-id="4a467-1015">This overload lets the compiler handle conversions from a <xref:System.Int32> value to a <xref:System.Numerics.BigInteger> value, as the following example shows.</span></span>   
   
 [!code-csharp[System.Numeric.BigInteger.Implicit#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Implicit/cs/Implicit1.cs#3)]   
 [!code-vb[System.Numeric.BigInteger.Implicit#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Implicit/vb/Implicit1.vb#3)]   

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Numerics.BigInteger (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Implicit(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Implicit(System.Int64)~System.Numerics.BigInteger" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As Long) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Numerics::BigInteger(long value);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : int64 -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.op_Implicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4a467-1016">Valor que se va a convertir en un tipo <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-1016">The value to convert to a <see cref="T:System.Numerics.BigInteger" />.</span></span></param>
        <summary><span data-ttu-id="4a467-1017">Define una conversión implícita de un entero de 64 bits con signo en un valor <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-1017">Defines an implicit conversion of a signed 64-bit integer to a <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns><span data-ttu-id="4a467-1018">Objeto que contiene el valor del parámetro <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-1018">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a467-1019">Lenguajes que no admiten operadores implícitos, el método alternativo es <xref:System.Numerics.BigInteger.%23ctor%28System.Int64%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4a467-1019">For languages that do not support implicit operators, the alternative method is <xref:System.Numerics.BigInteger.%23ctor%28System.Int64%29?displayProperty=nameWithType>.</span></span>   
 
 <span data-ttu-id="4a467-1020">Las sobrecargas de los <xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger> método definen los tipos a la que o de que un compilador puede convertir automáticamente un <xref:System.Numerics.BigInteger> valor sin un operador de conversión explícita (en C#) o una llamada a una función de conversión (en Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="4a467-1020">The overloads of the <xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger> method define the types to which or from which a compiler can automatically convert a <xref:System.Numerics.BigInteger> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="4a467-1021">Son conversiones de ampliación que implican la pérdida de datos y no producen un <xref:System.OverflowException>.</span><span class="sxs-lookup"><span data-stu-id="4a467-1021">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException>.</span></span> <span data-ttu-id="4a467-1022">Esta sobrecarga permite al compilador administrar las conversiones de un <xref:System.Int64> valor a un <xref:System.Numerics.BigInteger> valor, como se muestra en el ejemplo siguiente.</span><span class="sxs-lookup"><span data-stu-id="4a467-1022">This overload lets the compiler handle conversions from a <xref:System.Int64> value to a <xref:System.Numerics.BigInteger> value, as the following example shows.</span></span>   
   
 [!code-csharp[System.Numeric.BigInteger.Implicit#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Implicit/cs/Implicit1.cs#4)]   
 [!code-vb[System.Numeric.BigInteger.Implicit#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Implicit/vb/Implicit1.vb#4)]   

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Numerics.BigInteger (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Implicit(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Implicit(System.SByte)~System.Numerics.BigInteger" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As SByte) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Numerics::BigInteger(System::SByte value);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : sbyte -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.op_Implicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4a467-1023">Valor que se va a convertir en un tipo <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-1023">The value to convert to a <see cref="T:System.Numerics.BigInteger" />.</span></span></param>
        <summary><span data-ttu-id="4a467-1024">Define una conversión implícita de un entero de 8 bits con signo en un valor <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-1024">Defines an implicit conversion of an 8-bit signed integer to a <see cref="T:System.Numerics.BigInteger" /> value.</span></span>  
  
<span data-ttu-id="4a467-1025">Esta API no es conforme a CLS.</span><span class="sxs-lookup"><span data-stu-id="4a467-1025">This API is not CLS-compliant.</span></span> <span data-ttu-id="4a467-1026">La alternativa conforme es <see cref="M:System.Numerics.BigInteger.#ctor(System.Int32)" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-1026">The compliant alternative is <see cref="M:System.Numerics.BigInteger.#ctor(System.Int32)" />.</span></span></summary>
        <returns><span data-ttu-id="4a467-1027">Objeto que contiene el valor del parámetro <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-1027">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a467-1028">Lenguajes que no admiten operadores implícitos, el método alternativo es <xref:System.Numerics.BigInteger.%23ctor%28System.Int32%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4a467-1028">For languages that do not support implicit operators, the alternative method is <xref:System.Numerics.BigInteger.%23ctor%28System.Int32%29?displayProperty=nameWithType>.</span></span>   

 <span data-ttu-id="4a467-1029">Las sobrecargas de los <xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger> método definen los tipos a la que o de que un compilador puede convertir automáticamente un <xref:System.Numerics.BigInteger> valor sin un operador de conversión explícita (en C#) o una llamada a una función de conversión (en Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="4a467-1029">The overloads of the <xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger> method define the types to which or from which a compiler can automatically convert a <xref:System.Numerics.BigInteger> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="4a467-1030">Son conversiones de ampliación que implican la pérdida de datos y no producen un <xref:System.OverflowException>.</span><span class="sxs-lookup"><span data-stu-id="4a467-1030">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException>.</span></span> <span data-ttu-id="4a467-1031">Esta sobrecarga permite al compilador administrar las conversiones de un <xref:System.SByte> valor a un <xref:System.Numerics.BigInteger> valor, como se muestra en el ejemplo siguiente.</span><span class="sxs-lookup"><span data-stu-id="4a467-1031">This overload lets the compiler handle conversions from a <xref:System.SByte> value to a <xref:System.Numerics.BigInteger> value, as the following example shows.</span></span>   
   
 [!code-csharp[System.Numeric.BigInteger.Implicit#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Implicit/cs/Implicit1.cs#5)]   
 [!code-vb[System.Numeric.BigInteger.Implicit#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Implicit/vb/Implicit1.vb#5)]   

 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Numerics.BigInteger.#ctor(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Numerics.BigInteger (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Implicit(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Implicit(System.UInt16)~System.Numerics.BigInteger" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As UShort) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Numerics::BigInteger(System::UInt16 value);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : uint16 -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.op_Implicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4a467-1032">Valor que se va a convertir en un tipo <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-1032">The value to convert to a <see cref="T:System.Numerics.BigInteger" />.</span></span></param>
        <summary><span data-ttu-id="4a467-1033">Define una conversión implícita de un entero de 16 bits sin signo en un valor <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-1033">Defines an implicit conversion of a 16-bit unsigned integer to a <see cref="T:System.Numerics.BigInteger" /> value.</span></span>  
  
<span data-ttu-id="4a467-1034">Esta API no es conforme a CLS.</span><span class="sxs-lookup"><span data-stu-id="4a467-1034">This API is not CLS-compliant.</span></span> <span data-ttu-id="4a467-1035">La alternativa conforme es <see cref="M:System.Numerics.BigInteger.op_Implicit(System.Int32)~System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-1035">The compliant alternative is <see cref="M:System.Numerics.BigInteger.op_Implicit(System.Int32)~System.Numerics.BigInteger" />.</span></span></summary>
        <returns><span data-ttu-id="4a467-1036">Objeto que contiene el valor del parámetro <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-1036">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a467-1037">Lenguajes que no admiten operadores implícitos, el método alternativo es <xref:System.Numerics.BigInteger.%23ctor%28System.UInt32%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4a467-1037">For languages that do not support implicit operators, the alternative method is <xref:System.Numerics.BigInteger.%23ctor%28System.UInt32%29?displayProperty=nameWithType>.</span></span>   

 <span data-ttu-id="4a467-1038">Las sobrecargas de los <xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger> método definen los tipos a la que o de que un compilador puede convertir automáticamente un <xref:System.Numerics.BigInteger> valor sin un operador de conversión explícita (en C#) o una llamada a una función de conversión (en Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="4a467-1038">The overloads of the <xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger> method define the types to which or from which a compiler can automatically convert a <xref:System.Numerics.BigInteger> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="4a467-1039">Son conversiones de ampliación que implican la pérdida de datos y no producen un <xref:System.OverflowException>.</span><span class="sxs-lookup"><span data-stu-id="4a467-1039">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException>.</span></span> <span data-ttu-id="4a467-1040">Esta sobrecarga permite al compilador administrar las conversiones de un <xref:System.UInt16> valor a un <xref:System.Numerics.BigInteger> valor, como se muestra en el ejemplo siguiente.</span><span class="sxs-lookup"><span data-stu-id="4a467-1040">This overload lets the compiler handle conversions from a <xref:System.UInt16> value to a <xref:System.Numerics.BigInteger> value, as the following example shows.</span></span>   
   
 [!code-csharp[System.Numeric.BigInteger.Implicit#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Implicit/cs/Implicit1.cs#6)]   
 [!code-vb[System.Numeric.BigInteger.Implicit#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Implicit/vb/Implicit1.vb#6)]   

 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Numerics.BigInteger.op_Implicit(System.Int32)~System.Numerics.BigInteger" />
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Numerics.BigInteger (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Implicit(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Implicit(System.UInt32)~System.Numerics.BigInteger" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As UInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Numerics::BigInteger(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : uint32 -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.op_Implicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4a467-1041">Valor que se va a convertir en un tipo <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-1041">The value to convert to a <see cref="T:System.Numerics.BigInteger" />.</span></span></param>
        <summary><span data-ttu-id="4a467-1042">Define una conversión implícita de un entero de 32 bits sin signo en un valor <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-1042">Defines an implicit conversion of a 32-bit unsigned integer to a <see cref="T:System.Numerics.BigInteger" /> value.</span></span>  
  
<span data-ttu-id="4a467-1043">Esta API no es conforme a CLS.</span><span class="sxs-lookup"><span data-stu-id="4a467-1043">This API is not CLS-compliant.</span></span> <span data-ttu-id="4a467-1044">La alternativa conforme es <see cref="M:System.Numerics.BigInteger.op_Implicit(System.Int64)~System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-1044">The compliant alternative is <see cref="M:System.Numerics.BigInteger.op_Implicit(System.Int64)~System.Numerics.BigInteger" />.</span></span></summary>
        <returns><span data-ttu-id="4a467-1045">Objeto que contiene el valor del parámetro <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-1045">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a467-1046">Lenguajes que no admiten operadores implícitos, el método alternativo es <xref:System.Numerics.BigInteger.%23ctor%28System.UInt32%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4a467-1046">For languages that do not support implicit operators, the alternative method is <xref:System.Numerics.BigInteger.%23ctor%28System.UInt32%29?displayProperty=nameWithType>.</span></span>   

 <span data-ttu-id="4a467-1047">Las sobrecargas de los <xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger> método definen los tipos a la que o de que un compilador puede convertir automáticamente un <xref:System.Numerics.BigInteger> valor sin un operador de conversión explícita (en C#) o una llamada a una función de conversión (en Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="4a467-1047">The overloads of the <xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger> method define the types to which or from which a compiler can automatically convert a <xref:System.Numerics.BigInteger> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="4a467-1048">Son conversiones de ampliación que implican la pérdida de datos y no producen un <xref:System.OverflowException>.</span><span class="sxs-lookup"><span data-stu-id="4a467-1048">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException>.</span></span> <span data-ttu-id="4a467-1049">Esta sobrecarga permite al compilador administrar las conversiones de un <xref:System.UInt32> valor a un <xref:System.Numerics.BigInteger> valor, como se muestra en el ejemplo siguiente.</span><span class="sxs-lookup"><span data-stu-id="4a467-1049">This overload lets the compiler handle conversions from a <xref:System.UInt32> value to a <xref:System.Numerics.BigInteger> value, as the following example shows.</span></span>   
   
 [!code-csharp[System.Numeric.BigInteger.Implicit#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Implicit/cs/Implicit1.cs#7)]   
 [!code-vb[System.Numeric.BigInteger.Implicit#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Implicit/vb/Implicit1.vb#7)]   

 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Numerics.BigInteger.op_Implicit(System.Int64)~System.Numerics.BigInteger" />
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Numerics.BigInteger (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Implicit(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Implicit(System.UInt64)~System.Numerics.BigInteger" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As ULong) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Numerics::BigInteger(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : uint64 -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.op_Implicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4a467-1050">Valor que se va a convertir en un tipo <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-1050">The value to convert to a <see cref="T:System.Numerics.BigInteger" />.</span></span></param>
        <summary><span data-ttu-id="4a467-1051">Define una conversión implícita de un entero de 64 bits sin signo en un valor <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-1051">Defines an implicit conversion of a 64-bit unsigned integer to a <see cref="T:System.Numerics.BigInteger" /> value.</span></span>  
  
<span data-ttu-id="4a467-1052">Esta API no es conforme a CLS.</span><span class="sxs-lookup"><span data-stu-id="4a467-1052">This API is not CLS-compliant.</span></span> <span data-ttu-id="4a467-1053">La alternativa conforme es <see cref="T:System.Double" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-1053">The compliant alternative is <see cref="T:System.Double" />.</span></span></summary>
        <returns><span data-ttu-id="4a467-1054">Objeto que contiene el valor del parámetro <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-1054">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a467-1055">Lenguajes que no admiten operadores implícitos, el método alternativo es <xref:System.Numerics.BigInteger.%23ctor%28System.UInt64%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4a467-1055">For languages that do not support implicit operators, the alternative method is <xref:System.Numerics.BigInteger.%23ctor%28System.UInt64%29?displayProperty=nameWithType>.</span></span>   

 <span data-ttu-id="4a467-1056">Las sobrecargas de los <xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger> método definen los tipos a la que o de que un compilador puede convertir automáticamente un <xref:System.Numerics.BigInteger> valor sin un operador de conversión explícita (en C#) o una llamada a una función de conversión (en Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="4a467-1056">The overloads of the <xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger> method define the types to which or from which a compiler can automatically convert a <xref:System.Numerics.BigInteger> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="4a467-1057">Son conversiones de ampliación que implican la pérdida de datos y no producen un <xref:System.OverflowException>.</span><span class="sxs-lookup"><span data-stu-id="4a467-1057">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException>.</span></span> <span data-ttu-id="4a467-1058">Esta sobrecarga permite al compilador administrar las conversiones de un <xref:System.UInt64> valor a un <xref:System.Numerics.BigInteger> valor, como se muestra en el ejemplo siguiente.</span><span class="sxs-lookup"><span data-stu-id="4a467-1058">This overload lets the compiler handle conversions from a <xref:System.UInt64> value to a <xref:System.Numerics.BigInteger> value, as the following example shows.</span></span>   
   
 [!code-csharp[System.Numeric.BigInteger.Implicit#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Implicit/cs/Implicit1.cs#8)]   
 [!code-vb[System.Numeric.BigInteger.Implicit#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Implicit/vb/Implicit1.vb#8)]   

 ]]></format>
        </remarks>
        <altCompliant cref="T:System.Double" />
      </Docs>
    </Member>
    <Member MemberName="op_Increment">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger operator ++ (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Increment(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Increment(System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared op_Increment (value As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger operator ++(System::Numerics::BigInteger value);" />
      <MemberSignature Language="F#" Value="static member op_Increment : System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.op_Increment value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4a467-1059">Valor que se va a aumentar.</span><span class="sxs-lookup"><span data-stu-id="4a467-1059">The value to increment.</span></span></param>
        <summary><span data-ttu-id="4a467-1060">Aumenta un valor <see cref="T:System.Numerics.BigInteger" /> en 1.</span><span class="sxs-lookup"><span data-stu-id="4a467-1060">Increments a <see cref="T:System.Numerics.BigInteger" /> value by 1.</span></span></summary>
        <returns><span data-ttu-id="4a467-1061">Valor del parámetro <paramref name="value" /> aumentado en 1.</span><span class="sxs-lookup"><span data-stu-id="4a467-1061">The value of the <paramref name="value" /> parameter incremented by 1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a467-1062">El <xref:System.Numerics.BigInteger.op_Increment%2A> método define la operación de incremento para <xref:System.Numerics.BigInteger> valores.</span><span class="sxs-lookup"><span data-stu-id="4a467-1062">The <xref:System.Numerics.BigInteger.op_Increment%2A> method defines the increment operation for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="4a467-1063">Permite código como el siguiente:</span><span class="sxs-lookup"><span data-stu-id="4a467-1063">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#24](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#24)]  
  
 <span data-ttu-id="4a467-1064">Algunos lenguajes (como Visual Basic) que carecen de un operador de incremento o no admiten la sobrecarga de operadores pueden llamar a la <xref:System.Numerics.BigInteger.op_Increment%2A> método directamente, como en el ejemplo siguiente se muestra.</span><span class="sxs-lookup"><span data-stu-id="4a467-1064">Some languages (such as Visual Basic) that lack an increment operator or do not support operator overloading can call the <xref:System.Numerics.BigInteger.op_Increment%2A> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numeric.BigInteger.Class#25](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#25)]  
  
 <span data-ttu-id="4a467-1065">Dado que <xref:System.Numerics.BigInteger> los objetos son inmutables, el <xref:System.Numerics.BigInteger.op_Increment%2A> crea un nuevo operador <xref:System.Numerics.BigInteger> objeto cuyo valor es uno más que la <xref:System.Numerics.BigInteger> objeto representado por `value`.</span><span class="sxs-lookup"><span data-stu-id="4a467-1065">Because <xref:System.Numerics.BigInteger> objects are immutable, the <xref:System.Numerics.BigInteger.op_Increment%2A> operator creates a new <xref:System.Numerics.BigInteger> object whose value is one more than the <xref:System.Numerics.BigInteger> object represented by `value`.</span></span> <span data-ttu-id="4a467-1066">Por lo tanto, las llamadas repetidas a <xref:System.Numerics.BigInteger.op_Increment%2A> puede ser costoso.</span><span class="sxs-lookup"><span data-stu-id="4a467-1066">Therefore, repeated calls to <xref:System.Numerics.BigInteger.op_Increment%2A> may be expensive.</span></span>  
  
 <span data-ttu-id="4a467-1067">El método equivalente para este operador es <xref:System.Numerics.BigInteger.Add%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4a467-1067">The equivalent method for this operator is <xref:System.Numerics.BigInteger.Add%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Numerics.BigInteger.op_Decrement(System.Numerics.BigInteger)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="op_Inequality">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4a467-1068">Devuelve un valor que indica si dos valores numéricos no son iguales.</span><span class="sxs-lookup"><span data-stu-id="4a467-1068">Returns a value that indicates whether two numeric values are not equal.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (long left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(int64 left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Inequality(System.Int64,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As Long, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(long left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : int64 * System.Numerics.BigInteger -&gt; bool" Usage="System.Numerics.BigInteger.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Int64" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="4a467-1069">Primer valor que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="4a467-1069">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="4a467-1070">Segundo valor que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="4a467-1070">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="4a467-1071">Devuelve un valor que indica si un entero de 64 bits con signo y un valor <see cref="T:System.Numerics.BigInteger" /> no son iguales.</span><span class="sxs-lookup"><span data-stu-id="4a467-1071">Returns a value that indicates whether a 64-bit signed integer and a <see cref="T:System.Numerics.BigInteger" /> value are not equal.</span></span></summary>
        <returns><span data-ttu-id="4a467-1072"><see langword="true" /> si <paramref name="left" /> y <paramref name="right" /> no son iguales; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-1072"><see langword="true" /> if <paramref name="left" /> and <paramref name="right" /> are not equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a467-1073">El <xref:System.Numerics.BigInteger.op_Inequality%2A> método define la operación del operador de desigualdad para <xref:System.Numerics.BigInteger> valores.</span><span class="sxs-lookup"><span data-stu-id="4a467-1073">The <xref:System.Numerics.BigInteger.op_Inequality%2A> method defines the operation of the inequality operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="4a467-1074">Permite código como el siguiente:</span><span class="sxs-lookup"><span data-stu-id="4a467-1074">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#25](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#25)]
 [!code-vb[System.Numerics.BigInteger.Operators#25](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#25)]  
  
 <span data-ttu-id="4a467-1075">Los lenguajes que no admiten operadores personalizados pueden probar la desigualdad utilizando una de las técnicas siguientes:</span><span class="sxs-lookup"><span data-stu-id="4a467-1075">Languages that do not support custom operators can test for inequality by using one of the following techniques:</span></span>  
  
-   <span data-ttu-id="4a467-1076">Una llamada a la <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> la instancia de método, que indica la relación entre un <xref:System.Numerics.BigInteger> y un valor entero long con signo.</span><span class="sxs-lookup"><span data-stu-id="4a467-1076">Calling the <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> instance method, which indicates the relationship between a <xref:System.Numerics.BigInteger> and a signed long integer value.</span></span>  
  
-   <span data-ttu-id="4a467-1077">Una llamada a la <xref:System.Numerics.BigInteger.Equals%28System.Int64%29?displayProperty=nameWithType> la instancia de método e invertir su valor.</span><span class="sxs-lookup"><span data-stu-id="4a467-1077">Calling the <xref:System.Numerics.BigInteger.Equals%28System.Int64%29?displayProperty=nameWithType> instance method and reversing its value.</span></span>  
  
 <span data-ttu-id="4a467-1078">Si `left` es un <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, o <xref:System.UInt32> valor, se convierte implícitamente en un <xref:System.Int64> valor cuando se realiza la operación.</span><span class="sxs-lookup"><span data-stu-id="4a467-1078">If `left` is a <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, or <xref:System.UInt32> value, it is implicitly converted to an <xref:System.Int64> value when the operation is performed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_Equality" />
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Numerics.BigInteger left, long right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Numerics.BigInteger left, int64 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As BigInteger, right As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Numerics::BigInteger left, long right);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Numerics.BigInteger * int64 -&gt; bool" Usage="System.Numerics.BigInteger.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="4a467-1079">Primer valor que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="4a467-1079">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="4a467-1080">Segundo valor que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="4a467-1080">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="4a467-1081">Devuelve un valor que indica si un valor <see cref="T:System.Numerics.BigInteger" /> y un valor de 64 bits con signo no son iguales.</span><span class="sxs-lookup"><span data-stu-id="4a467-1081">Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value and a 64-bit signed integer are not equal.</span></span></summary>
        <returns><span data-ttu-id="4a467-1082"><see langword="true" /> si <paramref name="left" /> y <paramref name="right" /> no son iguales; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-1082"><see langword="true" /> if <paramref name="left" /> and <paramref name="right" /> are not equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a467-1083">El <xref:System.Numerics.BigInteger.op_Inequality%2A> método define la operación del operador de desigualdad para <xref:System.Numerics.BigInteger> valores.</span><span class="sxs-lookup"><span data-stu-id="4a467-1083">The <xref:System.Numerics.BigInteger.op_Inequality%2A> method defines the operation of the inequality operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="4a467-1084">Permite código como el siguiente:</span><span class="sxs-lookup"><span data-stu-id="4a467-1084">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#26](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#26)]
 [!code-vb[System.Numerics.BigInteger.Operators#26](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#26)]  
  
 <span data-ttu-id="4a467-1085">Los lenguajes que no admiten operadores personalizados pueden probar la desigualdad utilizando una de las técnicas siguientes:</span><span class="sxs-lookup"><span data-stu-id="4a467-1085">Languages that do not support custom operators can test for inequality by using one of the following techniques:</span></span>  
  
-   <span data-ttu-id="4a467-1086">Una llamada a la <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> método, que indica la relación entre un <xref:System.Numerics.BigInteger> y un valor entero long con signo.</span><span class="sxs-lookup"><span data-stu-id="4a467-1086">Calling the <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> method, which indicates the relationship between a <xref:System.Numerics.BigInteger> and a signed long integer value.</span></span>  
  
-   <span data-ttu-id="4a467-1087">Una llamada a la <xref:System.Numerics.BigInteger.Equals%28System.Int64%29?displayProperty=nameWithType> método e invertir su valor.</span><span class="sxs-lookup"><span data-stu-id="4a467-1087">Calling the <xref:System.Numerics.BigInteger.Equals%28System.Int64%29?displayProperty=nameWithType> method and reversing its value.</span></span>  
  
 <span data-ttu-id="4a467-1088">Si `right` es un <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, o <xref:System.UInt32> valor, se convierte implícitamente en un <xref:System.Int64> valor cuando se realiza la operación.</span><span class="sxs-lookup"><span data-stu-id="4a467-1088">If `right` is a <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, or <xref:System.UInt32> value, it is implicitly converted to an <xref:System.Int64> value when the operation is performed.</span></span>  
  
 <span data-ttu-id="4a467-1089">El método equivalente para este operador es <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4a467-1089">The equivalent method for this operator is <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_Equality" />
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As BigInteger, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; bool" Usage="System.Numerics.BigInteger.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="4a467-1090">Primer valor que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="4a467-1090">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="4a467-1091">Segundo valor que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="4a467-1091">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="4a467-1092">Devuelve un valor que indica si dos objetos <see cref="T:System.Numerics.BigInteger" /> tienen valores diferentes.</span><span class="sxs-lookup"><span data-stu-id="4a467-1092">Returns a value that indicates whether two <see cref="T:System.Numerics.BigInteger" /> objects have different values.</span></span></summary>
        <returns><span data-ttu-id="4a467-1093"><see langword="true" /> si <paramref name="left" /> y <paramref name="right" /> no son iguales; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-1093"><see langword="true" /> if <paramref name="left" /> and <paramref name="right" /> are not equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a467-1094">El <xref:System.Numerics.BigInteger.op_Inequality%2A> método define la operación del operador de desigualdad para <xref:System.Numerics.BigInteger> valores.</span><span class="sxs-lookup"><span data-stu-id="4a467-1094">The <xref:System.Numerics.BigInteger.op_Inequality%2A> method defines the operation of the inequality operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="4a467-1095">Permite código como el siguiente:</span><span class="sxs-lookup"><span data-stu-id="4a467-1095">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#26](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#26)]
 [!code-vb[System.Numeric.BigInteger.Class#26](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#26)]  
  
 <span data-ttu-id="4a467-1096">Los lenguajes que no admiten operadores personalizados pueden probar la desigualdad utilizando una de las técnicas siguientes:</span><span class="sxs-lookup"><span data-stu-id="4a467-1096">Languages that do not support custom operators can test for inequality by using one of the following techniques:</span></span>  
  
-   <span data-ttu-id="4a467-1097">Una llamada a la <xref:System.Numerics.BigInteger.Compare%2A?displayProperty=nameWithType> método, que indica la relación entre dos <xref:System.Numerics.BigInteger> objetos.</span><span class="sxs-lookup"><span data-stu-id="4a467-1097">Calling the <xref:System.Numerics.BigInteger.Compare%2A?displayProperty=nameWithType> method, which indicates the relationship between two <xref:System.Numerics.BigInteger> objects.</span></span>  
  
-   <span data-ttu-id="4a467-1098">Una llamada a la <xref:System.Numerics.BigInteger.Equals%28System.Numerics.BigInteger%29?displayProperty=nameWithType> método e invertir su valor.</span><span class="sxs-lookup"><span data-stu-id="4a467-1098">Calling the <xref:System.Numerics.BigInteger.Equals%28System.Numerics.BigInteger%29?displayProperty=nameWithType> method and reversing its value.</span></span>  
  
 <span data-ttu-id="4a467-1099">El método equivalente para este operador es <xref:System.Numerics.BigInteger.Compare%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4a467-1099">The equivalent method for this operator is <xref:System.Numerics.BigInteger.Compare%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_Equality" />
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Numerics.BigInteger left, ulong right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Numerics.BigInteger left, unsigned int64 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As BigInteger, right As ULong) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Numerics::BigInteger left, System::UInt64 right);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Numerics.BigInteger * uint64 -&gt; bool" Usage="System.Numerics.BigInteger.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="4a467-1100">Primer valor que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="4a467-1100">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="4a467-1101">Segundo valor que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="4a467-1101">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="4a467-1102">Devuelve un valor que indica si un valor <see cref="T:System.Numerics.BigInteger" /> y un valor de 64 bits sin signo no son iguales.</span><span class="sxs-lookup"><span data-stu-id="4a467-1102">Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value and a 64-bit unsigned integer are not equal.</span></span></summary>
        <returns><span data-ttu-id="4a467-1103"><see langword="true" /> si <paramref name="left" /> y <paramref name="right" /> no son iguales; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-1103"><see langword="true" /> if <paramref name="left" /> and <paramref name="right" /> are not equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a467-1104">El <xref:System.Numerics.BigInteger.op_Inequality%2A> método define la operación del operador de desigualdad para <xref:System.Numerics.BigInteger> valores.</span><span class="sxs-lookup"><span data-stu-id="4a467-1104">The <xref:System.Numerics.BigInteger.op_Inequality%2A> method defines the operation of the inequality operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="4a467-1105">Permite código como el siguiente:</span><span class="sxs-lookup"><span data-stu-id="4a467-1105">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#27](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#27)]
 [!code-vb[System.Numerics.BigInteger.Operators#27](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#27)]  
  
 <span data-ttu-id="4a467-1106">Los lenguajes que no admiten operadores personalizados pueden probar la desigualdad utilizando una de las técnicas siguientes:</span><span class="sxs-lookup"><span data-stu-id="4a467-1106">Languages that do not support custom operators can test for inequality by using one of the following techniques:</span></span>  
  
-   <span data-ttu-id="4a467-1107">Una llamada a la <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> método, que indica la relación entre un <xref:System.Numerics.BigInteger> y un valor entero long sin signo.</span><span class="sxs-lookup"><span data-stu-id="4a467-1107">Calling the <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> method, which indicates the relationship between a <xref:System.Numerics.BigInteger> and an unsigned long integer value.</span></span>  
  
-   <span data-ttu-id="4a467-1108">Una llamada a la <xref:System.Numerics.BigInteger.Equals%28System.UInt64%29?displayProperty=nameWithType> método e invertir su valor.</span><span class="sxs-lookup"><span data-stu-id="4a467-1108">Calling the <xref:System.Numerics.BigInteger.Equals%28System.UInt64%29?displayProperty=nameWithType> method and reversing its value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_Equality" />
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (ulong left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(unsigned int64 left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Inequality(System.UInt64,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As ULong, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::UInt64 left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : uint64 * System.Numerics.BigInteger -&gt; bool" Usage="System.Numerics.BigInteger.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.UInt64" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="4a467-1109">Primer valor que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="4a467-1109">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="4a467-1110">Segundo valor que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="4a467-1110">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="4a467-1111">Devuelve un valor que indica si un entero de 64 bits sin signo y un valor <see cref="T:System.Numerics.BigInteger" /> no son iguales.</span><span class="sxs-lookup"><span data-stu-id="4a467-1111">Returns a value that indicates whether a 64-bit unsigned integer and a <see cref="T:System.Numerics.BigInteger" /> value are not equal.</span></span></summary>
        <returns><span data-ttu-id="4a467-1112"><see langword="true" /> si <paramref name="left" /> y <paramref name="right" /> no son iguales; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-1112"><see langword="true" /> if <paramref name="left" /> and <paramref name="right" /> are not equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a467-1113">El <xref:System.Numerics.BigInteger.op_Inequality%2A> método define la operación del operador de desigualdad para <xref:System.Numerics.BigInteger> valores.</span><span class="sxs-lookup"><span data-stu-id="4a467-1113">The <xref:System.Numerics.BigInteger.op_Inequality%2A> method defines the operation of the inequality operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="4a467-1114">Permite código como el siguiente:</span><span class="sxs-lookup"><span data-stu-id="4a467-1114">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#28](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#28)]
 [!code-vb[System.Numerics.BigInteger.Operators#28](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#28)]  
  
 <span data-ttu-id="4a467-1115">Los lenguajes que no admiten operadores personalizados pueden probar la desigualdad utilizando una de las técnicas siguientes:</span><span class="sxs-lookup"><span data-stu-id="4a467-1115">Languages that do not support custom operators can test for inequality by using one of the following techniques:</span></span>  
  
-   <span data-ttu-id="4a467-1116">Una llamada a la <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> método, que indica la relación entre un <xref:System.Numerics.BigInteger> y un valor entero long sin signo.</span><span class="sxs-lookup"><span data-stu-id="4a467-1116">Calling the <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> method, which indicates the relationship between a <xref:System.Numerics.BigInteger> and an unsigned long integer value.</span></span>  
  
-   <span data-ttu-id="4a467-1117">Una llamada a la <xref:System.Numerics.BigInteger.Equals%28System.UInt64%29?displayProperty=nameWithType> método e invertir su valor.</span><span class="sxs-lookup"><span data-stu-id="4a467-1117">Calling the <xref:System.Numerics.BigInteger.Equals%28System.UInt64%29?displayProperty=nameWithType> method and reversing its value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_Equality" />
      </Docs>
    </Member>
    <Member MemberName="op_LeftShift">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger operator &lt;&lt; (System.Numerics.BigInteger value, int shift);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_LeftShift(valuetype System.Numerics.BigInteger value, int32 shift) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_LeftShift(System.Numerics.BigInteger,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt;&lt; (value As BigInteger, shift As Integer) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger operator &lt;&lt;(System::Numerics::BigInteger value, int shift);" />
      <MemberSignature Language="F#" Value="static member ( &lt;&lt;&lt; ) : System.Numerics.BigInteger * int -&gt; System.Numerics.BigInteger" Usage="value &lt;&lt;&lt; shift" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
        <Parameter Name="shift" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4a467-1118">Valor cuyos bits se van a desplazar.</span><span class="sxs-lookup"><span data-stu-id="4a467-1118">The value whose bits are to be shifted.</span></span></param>
        <param name="shift"><span data-ttu-id="4a467-1119">Número de bits que se va a desplazar <paramref name="value" /> a la izquierda.</span><span class="sxs-lookup"><span data-stu-id="4a467-1119">The number of bits to shift <paramref name="value" /> to the left.</span></span></param>
        <summary><span data-ttu-id="4a467-1120">Desplaza un valor <see cref="T:System.Numerics.BigInteger" /> un número especificado de bits a la izquierda.</span><span class="sxs-lookup"><span data-stu-id="4a467-1120">Shifts a <see cref="T:System.Numerics.BigInteger" /> value a specified number of bits to the left.</span></span></summary>
        <returns><span data-ttu-id="4a467-1121">Valor que se ha desplazado a la izquierda el número especificado de bits.</span><span class="sxs-lookup"><span data-stu-id="4a467-1121">A value that has been shifted to the left by the specified number of bits.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a467-1122">El <xref:System.Numerics.BigInteger.op_LeftShift%2A> método define la operación del operador de desplazamiento a la izquierda bit a bit para <xref:System.Numerics.BigInteger> valores.</span><span class="sxs-lookup"><span data-stu-id="4a467-1122">The <xref:System.Numerics.BigInteger.op_LeftShift%2A> method defines the operation of the bitwise left-shift operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="4a467-1123">Permite código como el siguiente:</span><span class="sxs-lookup"><span data-stu-id="4a467-1123">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#29](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#29)]
 [!code-vb[System.Numerics.BigInteger.Operators#29](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#29)]  
  
> [!NOTE]
>  <span data-ttu-id="4a467-1124">A diferencia de la operación de desplazamiento a la izquierda bit a bit con las primitivas de entero, el <xref:System.Numerics.BigInteger.op_LeftShift%2A> método conserva el signo del original <xref:System.Numerics.BigInteger> valor.</span><span class="sxs-lookup"><span data-stu-id="4a467-1124">Unlike the bitwise left-shift operation with integer primitives, the <xref:System.Numerics.BigInteger.op_LeftShift%2A> method preserves the sign of the original <xref:System.Numerics.BigInteger> value.</span></span>  
  
 <span data-ttu-id="4a467-1125">Los lenguajes que no admiten operadores personalizados pueden realizar una operación de desplazamiento a la izquierda bit a bit multiplicando `value` por `BigInteger.Pow(2, shift)`.</span><span class="sxs-lookup"><span data-stu-id="4a467-1125">Languages that do not support custom operators can perform a bitwise left-shift operation by multiplying `value` by `BigInteger.Pow(2, shift)`.</span></span> <span data-ttu-id="4a467-1126">El ejemplo siguiente se muestra que los resultados son idénticos a los resultados del uso de este operador.</span><span class="sxs-lookup"><span data-stu-id="4a467-1126">The following example shows that the results are identical to the results of using this operator.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#30](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#30)]
 [!code-vb[System.Numerics.BigInteger.Operators#30](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#30)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Numerics.BigInteger.op_RightShift(System.Numerics.BigInteger,System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="op_LessThan">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4a467-1127">Devuelve un valor que indica si un valor especificado es menor que un segundo valor especificado.</span><span class="sxs-lookup"><span data-stu-id="4a467-1127">Returns a value that indicates whether a specified value is less than a second specified value.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="op_LessThan">
      <MemberSignature Language="C#" Value="public static bool operator &lt; (long left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThan(int64 left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_LessThan(System.Int64,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt; (left As Long, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;(long left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( &lt; ) : int64 * System.Numerics.BigInteger -&gt; bool" Usage="left &lt; right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Int64" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="4a467-1128">Primer valor que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="4a467-1128">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="4a467-1129">Segundo valor que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="4a467-1129">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="4a467-1130">Devuelve un valor que indica si un entero de 64 bits con signo es menor que un valor <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-1130">Returns a value that indicates whether a 64-bit signed integer is less than a <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns><span data-ttu-id="4a467-1131">Es <see langword="true" /> si <paramref name="left" /> es menor que <paramref name="right" />; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-1131"><see langword="true" /> if <paramref name="left" /> is less than <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a467-1132">El <xref:System.Numerics.BigInteger.op_LessThan%2A> método define el funcionamiento del operador para menor que <xref:System.Numerics.BigInteger> valores.</span><span class="sxs-lookup"><span data-stu-id="4a467-1132">The <xref:System.Numerics.BigInteger.op_LessThan%2A> method defines the operation of the less than operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="4a467-1133">Permite código como el siguiente:</span><span class="sxs-lookup"><span data-stu-id="4a467-1133">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#31](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#31)]
 [!code-vb[System.Numerics.BigInteger.Operators#31](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#31)]  
  
 <span data-ttu-id="4a467-1134">Los lenguajes que no admiten operadores personalizados pueden llamar los <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> método en su lugar.</span><span class="sxs-lookup"><span data-stu-id="4a467-1134">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="4a467-1135">También pueden llamar algunos lenguajes el <xref:System.Numerics.BigInteger.op_LessThan%28System.Int64%2CSystem.Numerics.BigInteger%29> método directamente, como en el ejemplo siguiente se muestra.</span><span class="sxs-lookup"><span data-stu-id="4a467-1135">Some languages can also call the <xref:System.Numerics.BigInteger.op_LessThan%28System.Int64%2CSystem.Numerics.BigInteger%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numerics.BigInteger.Operators#32](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#32)]  
  
 <span data-ttu-id="4a467-1136">Si `left` es un <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, o <xref:System.UInt32> valor, se convierte implícitamente en un <xref:System.Int64> valor cuando se realiza la operación.</span><span class="sxs-lookup"><span data-stu-id="4a467-1136">If `left` is a <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, or <xref:System.UInt32> value, it is implicitly converted to an <xref:System.Int64> value when the operation is performed.</span></span>  
  
 <span data-ttu-id="4a467-1137">El método equivalente para este operador es <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4a467-1137">The equivalent method for this operator is <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_LessThanOrEqual" />
      </Docs>
    </Member>
    <Member MemberName="op_LessThan">
      <MemberSignature Language="C#" Value="public static bool operator &lt; (System.Numerics.BigInteger left, long right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThan(valuetype System.Numerics.BigInteger left, int64 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt; (left As BigInteger, right As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;(System::Numerics::BigInteger left, long right);" />
      <MemberSignature Language="F#" Value="static member ( &lt; ) : System.Numerics.BigInteger * int64 -&gt; bool" Usage="left &lt; right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="4a467-1138">Primer valor que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="4a467-1138">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="4a467-1139">Segundo valor que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="4a467-1139">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="4a467-1140">Devuelve un valor que indica si un valor <see cref="T:System.Numerics.BigInteger" /> es menor que un entero de 64 bits con signo.</span><span class="sxs-lookup"><span data-stu-id="4a467-1140">Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value is less than a 64-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="4a467-1141">Es <see langword="true" /> si <paramref name="left" /> es menor que <paramref name="right" />; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-1141"><see langword="true" /> if <paramref name="left" /> is less than <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a467-1142">El <xref:System.Numerics.BigInteger.op_LessThan%2A> método define el funcionamiento del operador para menor que <xref:System.Numerics.BigInteger> valores.</span><span class="sxs-lookup"><span data-stu-id="4a467-1142">The <xref:System.Numerics.BigInteger.op_LessThan%2A> method defines the operation of the less than operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="4a467-1143">Permite código como el siguiente:</span><span class="sxs-lookup"><span data-stu-id="4a467-1143">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#33](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#33)]
 [!code-vb[System.Numerics.BigInteger.Operators#33](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#33)]  
  
 <span data-ttu-id="4a467-1144">Los lenguajes que no admiten operadores personalizados pueden llamar los <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> método en su lugar.</span><span class="sxs-lookup"><span data-stu-id="4a467-1144">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="4a467-1145">También pueden llamar algunos lenguajes el <xref:System.Numerics.BigInteger.op_LessThan%28System.Numerics.BigInteger%2CSystem.Int64%29> método directamente, como en el ejemplo siguiente se muestra.</span><span class="sxs-lookup"><span data-stu-id="4a467-1145">Some languages can also call the <xref:System.Numerics.BigInteger.op_LessThan%28System.Numerics.BigInteger%2CSystem.Int64%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numerics.BigInteger.Operators#34](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#34)]  
  
 <span data-ttu-id="4a467-1146">Si `right` es un <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, o <xref:System.UInt32> valor, se convierte implícitamente en un <xref:System.Int64> valor cuando se realiza la operación.</span><span class="sxs-lookup"><span data-stu-id="4a467-1146">If `right` is a <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, or <xref:System.UInt32> value, it is implicitly converted to an <xref:System.Int64> value when the operation is performed.</span></span>  
  
 <span data-ttu-id="4a467-1147">El método equivalente para este operador es <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4a467-1147">The equivalent method for this operator is <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_LessThanOrEqual" />
      </Docs>
    </Member>
    <Member MemberName="op_LessThan">
      <MemberSignature Language="C#" Value="public static bool operator &lt; (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThan(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt; (left As BigInteger, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( &lt; ) : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; bool" Usage="left &lt; right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="4a467-1148">Primer valor que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="4a467-1148">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="4a467-1149">Segundo valor que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="4a467-1149">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="4a467-1150">Devuelve un valor que indica si un valor <see cref="T:System.Numerics.BigInteger" /> es menor que otro valor <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-1150">Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value is less than another <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns><span data-ttu-id="4a467-1151">Es <see langword="true" /> si <paramref name="left" /> es menor que <paramref name="right" />; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-1151"><see langword="true" /> if <paramref name="left" /> is less than <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a467-1152">El <xref:System.Numerics.BigInteger.op_LessThan%2A> método define el funcionamiento del operador para menor que <xref:System.Numerics.BigInteger> valores.</span><span class="sxs-lookup"><span data-stu-id="4a467-1152">The <xref:System.Numerics.BigInteger.op_LessThan%2A> method defines the operation of the less than operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="4a467-1153">Permite código como el siguiente:</span><span class="sxs-lookup"><span data-stu-id="4a467-1153">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#27](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#27)]
 [!code-vb[System.Numeric.BigInteger.Class#27](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#27)]  
  
 <span data-ttu-id="4a467-1154">Los lenguajes que no admiten operadores personalizados pueden llamar los <xref:System.Numerics.BigInteger.Compare%2A?displayProperty=nameWithType> método en su lugar.</span><span class="sxs-lookup"><span data-stu-id="4a467-1154">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.Compare%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="4a467-1155">También pueden llamar algunos lenguajes el <xref:System.Numerics.BigInteger.op_LessThan%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29> método directamente, como en el ejemplo siguiente se muestra.</span><span class="sxs-lookup"><span data-stu-id="4a467-1155">Some languages can also call the <xref:System.Numerics.BigInteger.op_LessThan%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numeric.BigInteger.Class#28](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#28)]  
  
 <span data-ttu-id="4a467-1156">El método equivalente para este operador es <xref:System.Numerics.BigInteger.Compare%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4a467-1156">The equivalent method for this operator is <xref:System.Numerics.BigInteger.Compare%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_LessThanOrEqual" />
      </Docs>
    </Member>
    <Member MemberName="op_LessThan">
      <MemberSignature Language="C#" Value="public static bool operator &lt; (System.Numerics.BigInteger left, ulong right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThan(valuetype System.Numerics.BigInteger left, unsigned int64 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt; (left As BigInteger, right As ULong) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;(System::Numerics::BigInteger left, System::UInt64 right);" />
      <MemberSignature Language="F#" Value="static member ( &lt; ) : System.Numerics.BigInteger * uint64 -&gt; bool" Usage="left &lt; right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="4a467-1157">Primer valor que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="4a467-1157">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="4a467-1158">Segundo valor que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="4a467-1158">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="4a467-1159">Devuelve un valor que indica si un valor <see cref="T:System.Numerics.BigInteger" /> es menor que un entero de 64 bits sin signo.</span><span class="sxs-lookup"><span data-stu-id="4a467-1159">Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value is less than a 64-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="4a467-1160">Es <see langword="true" /> si <paramref name="left" /> es menor que <paramref name="right" />; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-1160"><see langword="true" /> if <paramref name="left" /> is less than <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a467-1161">El <xref:System.Numerics.BigInteger.op_LessThan%2A> método define el funcionamiento del operador para menor que <xref:System.Numerics.BigInteger> valores.</span><span class="sxs-lookup"><span data-stu-id="4a467-1161">The <xref:System.Numerics.BigInteger.op_LessThan%2A> method defines the operation of the less than operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="4a467-1162">Permite código como el siguiente:</span><span class="sxs-lookup"><span data-stu-id="4a467-1162">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#35](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#35)]
 [!code-vb[System.Numerics.BigInteger.Operators#35](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#35)]  
  
 <span data-ttu-id="4a467-1163">Los lenguajes que no admiten operadores personalizados pueden llamar los <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> método en su lugar.</span><span class="sxs-lookup"><span data-stu-id="4a467-1163">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="4a467-1164">También puede llamar a la <xref:System.Numerics.BigInteger.op_LessThan%28System.Numerics.BigInteger%2CSystem.UInt64%29> método directamente, como en el ejemplo siguiente se muestra.</span><span class="sxs-lookup"><span data-stu-id="4a467-1164">They can also call the <xref:System.Numerics.BigInteger.op_LessThan%28System.Numerics.BigInteger%2CSystem.UInt64%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numerics.BigInteger.Operators#36](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#36)]  
  
 <span data-ttu-id="4a467-1165">El método equivalente para este operador es <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4a467-1165">The equivalent method for this operator is <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_LessThanOrEqual" />
      </Docs>
    </Member>
    <Member MemberName="op_LessThan">
      <MemberSignature Language="C#" Value="public static bool operator &lt; (ulong left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThan(unsigned int64 left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_LessThan(System.UInt64,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt; (left As ULong, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;(System::UInt64 left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( &lt; ) : uint64 * System.Numerics.BigInteger -&gt; bool" Usage="left &lt; right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.UInt64" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="4a467-1166">Primer valor que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="4a467-1166">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="4a467-1167">Segundo valor que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="4a467-1167">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="4a467-1168">Devuelve un valor que indica si un entero de 64 bits sin signo es menor que un valor <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-1168">Returns a value that indicates whether a 64-bit unsigned integer is less than a <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns><span data-ttu-id="4a467-1169">Es <see langword="true" /> si <paramref name="left" /> es menor que <paramref name="right" />; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-1169"><see langword="true" /> if <paramref name="left" /> is less than <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a467-1170">El <xref:System.Numerics.BigInteger.op_LessThan%2A> método define el funcionamiento del operador para menor que <xref:System.Numerics.BigInteger> valores.</span><span class="sxs-lookup"><span data-stu-id="4a467-1170">The <xref:System.Numerics.BigInteger.op_LessThan%2A> method defines the operation of the less than operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="4a467-1171">Permite código como el siguiente:</span><span class="sxs-lookup"><span data-stu-id="4a467-1171">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#37](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#37)]
 [!code-vb[System.Numerics.BigInteger.Operators#37](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#37)]  
  
 <span data-ttu-id="4a467-1172">Los lenguajes que no admiten operadores personalizados pueden llamar los <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> método en su lugar.</span><span class="sxs-lookup"><span data-stu-id="4a467-1172">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="4a467-1173">También puede llamar a la <xref:System.Numerics.BigInteger.op_LessThan%28System.UInt64%2CSystem.Numerics.BigInteger%29> método directamente, como en el ejemplo siguiente se muestra.</span><span class="sxs-lookup"><span data-stu-id="4a467-1173">They can also call the <xref:System.Numerics.BigInteger.op_LessThan%28System.UInt64%2CSystem.Numerics.BigInteger%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numerics.BigInteger.Operators#38](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#38)]  
  
 <span data-ttu-id="4a467-1174">El método equivalente para este operador es <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4a467-1174">The equivalent method for this operator is <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_LessThanOrEqual" />
      </Docs>
    </Member>
    <MemberGroup MemberName="op_LessThanOrEqual">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4a467-1175">Devuelve un valor que indica si un valor especificado es menor o igual que otro valor especificado.</span><span class="sxs-lookup"><span data-stu-id="4a467-1175">Returns a value that indicates whether a specified value is less than or equal to another specified value.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="op_LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &lt;= (long left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThanOrEqual(int64 left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Int64,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt;= (left As Long, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;=(long left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( &lt;= ) : int64 * System.Numerics.BigInteger -&gt; bool" Usage="left &lt;= right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Int64" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="4a467-1176">Primer valor que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="4a467-1176">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="4a467-1177">Segundo valor que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="4a467-1177">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="4a467-1178">Devuelve un valor que indica si un entero de 64 bits con signo es menor o igual que un valor <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-1178">Returns a value that indicates whether a 64-bit signed integer is less than or equal to a <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns><span data-ttu-id="4a467-1179">Es <see langword="true" /> si <paramref name="left" /> es menor o igual que <paramref name="right" />; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-1179"><see langword="true" /> if <paramref name="left" /> is less than or equal to <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a467-1180">El <xref:System.Numerics.BigInteger.op_LessThanOrEqual%2A> método define la operación de menor o igual al operador para <xref:System.Numerics.BigInteger> valores.</span><span class="sxs-lookup"><span data-stu-id="4a467-1180">The <xref:System.Numerics.BigInteger.op_LessThanOrEqual%2A> method defines the operation of the less than or equal to operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="4a467-1181">Permite código como el siguiente:</span><span class="sxs-lookup"><span data-stu-id="4a467-1181">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#39](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#39)]
 [!code-vb[System.Numerics.BigInteger.Operators#39](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#39)]  
  
 <span data-ttu-id="4a467-1182">Los lenguajes que no admiten operadores personalizados pueden llamar los <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> método en su lugar.</span><span class="sxs-lookup"><span data-stu-id="4a467-1182">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="4a467-1183">También puede llamar a la <xref:System.Numerics.BigInteger.op_LessThanOrEqual%28System.Int64%2CSystem.Numerics.BigInteger%29> método directamente, como en el ejemplo siguiente se muestra.</span><span class="sxs-lookup"><span data-stu-id="4a467-1183">They can also call the <xref:System.Numerics.BigInteger.op_LessThanOrEqual%28System.Int64%2CSystem.Numerics.BigInteger%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numerics.BigInteger.Operators#40](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#40)]  
  
 <span data-ttu-id="4a467-1184">Si `left` es un <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, o <xref:System.UInt32> valor, se convierte implícitamente en un <xref:System.Int64> valor cuando se realiza la operación.</span><span class="sxs-lookup"><span data-stu-id="4a467-1184">If `left` is a <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, or <xref:System.UInt32> value, it is implicitly converted to an <xref:System.Int64> value when the operation is performed.</span></span>  
  
 <span data-ttu-id="4a467-1185">El método equivalente para este operador es <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4a467-1185">The equivalent method for this operator is <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_LessThan" />
      </Docs>
    </Member>
    <Member MemberName="op_LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &lt;= (System.Numerics.BigInteger left, long right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThanOrEqual(valuetype System.Numerics.BigInteger left, int64 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt;= (left As BigInteger, right As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;=(System::Numerics::BigInteger left, long right);" />
      <MemberSignature Language="F#" Value="static member ( &lt;= ) : System.Numerics.BigInteger * int64 -&gt; bool" Usage="left &lt;= right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="4a467-1186">Primer valor que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="4a467-1186">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="4a467-1187">Segundo valor que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="4a467-1187">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="4a467-1188">Devuelve un valor que indica si un valor <see cref="T:System.Numerics.BigInteger" /> es menor o igual que un entero de 64 bits con signo.</span><span class="sxs-lookup"><span data-stu-id="4a467-1188">Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value is less than or equal to a 64-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="4a467-1189">Es <see langword="true" /> si <paramref name="left" /> es menor o igual que <paramref name="right" />; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-1189"><see langword="true" /> if <paramref name="left" /> is less than or equal to <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a467-1190">El <xref:System.Numerics.BigInteger.op_LessThanOrEqual%2A> método define la operación de menor o igual al operador para <xref:System.Numerics.BigInteger> valores.</span><span class="sxs-lookup"><span data-stu-id="4a467-1190">The <xref:System.Numerics.BigInteger.op_LessThanOrEqual%2A> method defines the operation of the less than or equal to operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="4a467-1191">Permite código como el siguiente:</span><span class="sxs-lookup"><span data-stu-id="4a467-1191">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#41](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#41)]
 [!code-vb[System.Numerics.BigInteger.Operators#41](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#41)]  
  
 <span data-ttu-id="4a467-1192">Los lenguajes que no admiten operadores personalizados pueden llamar los <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> método en su lugar.</span><span class="sxs-lookup"><span data-stu-id="4a467-1192">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="4a467-1193">También puede llamar a la <xref:System.Numerics.BigInteger.op_LessThanOrEqual%28System.Numerics.BigInteger%2CSystem.Int64%29> método directamente, como en el ejemplo siguiente se muestra.</span><span class="sxs-lookup"><span data-stu-id="4a467-1193">They can also call the <xref:System.Numerics.BigInteger.op_LessThanOrEqual%28System.Numerics.BigInteger%2CSystem.Int64%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numerics.BigInteger.Operators#42](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#42)]  
  
 <span data-ttu-id="4a467-1194">Si `right` es un <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, o <xref:System.UInt32> valor, se convierte implícitamente en un <xref:System.Int64> valor cuando se realiza la operación.</span><span class="sxs-lookup"><span data-stu-id="4a467-1194">If `right` is a <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, or <xref:System.UInt32> value, it is implicitly converted to an <xref:System.Int64> value when the operation is performed.</span></span>  
  
 <span data-ttu-id="4a467-1195">El método equivalente para este operador es <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4a467-1195">The equivalent method for this operator is <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_LessThan" />
      </Docs>
    </Member>
    <Member MemberName="op_LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &lt;= (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThanOrEqual(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt;= (left As BigInteger, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;=(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( &lt;= ) : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; bool" Usage="left &lt;= right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="4a467-1196">Primer valor que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="4a467-1196">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="4a467-1197">Segundo valor que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="4a467-1197">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="4a467-1198">Devuelve un valor que indica si un valor <see cref="T:System.Numerics.BigInteger" /> es menor o igual que otro valor <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-1198">Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value is less than or equal to another <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns><span data-ttu-id="4a467-1199">Es <see langword="true" /> si <paramref name="left" /> es menor o igual que <paramref name="right" />; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-1199"><see langword="true" /> if <paramref name="left" /> is less than or equal to <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a467-1200">El <xref:System.Numerics.BigInteger.op_LessThanOrEqual%2A> método define la operación de menor o igual al operador para <xref:System.Numerics.BigInteger> valores.</span><span class="sxs-lookup"><span data-stu-id="4a467-1200">The <xref:System.Numerics.BigInteger.op_LessThanOrEqual%2A> method defines the operation of the less than or equal to operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="4a467-1201">Permite código como el siguiente:</span><span class="sxs-lookup"><span data-stu-id="4a467-1201">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#29](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#29)]
 [!code-vb[System.Numeric.BigInteger.Class#29](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#29)]  
  
 <span data-ttu-id="4a467-1202">Los lenguajes que no admiten operadores personalizados pueden llamar los <xref:System.Numerics.BigInteger.Compare%2A> método en su lugar.</span><span class="sxs-lookup"><span data-stu-id="4a467-1202">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.Compare%2A> method instead.</span></span> <span data-ttu-id="4a467-1203">También puede llamar a la <xref:System.Numerics.BigInteger.op_LessThanOrEqual%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29> método directamente, como en el ejemplo siguiente se muestra.</span><span class="sxs-lookup"><span data-stu-id="4a467-1203">They can also call the <xref:System.Numerics.BigInteger.op_LessThanOrEqual%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numeric.BigInteger.Class#30](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#30)]  
  
 <span data-ttu-id="4a467-1204">El método equivalente para este operador es <xref:System.Numerics.BigInteger.Compare%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4a467-1204">The equivalent method for this operator is <xref:System.Numerics.BigInteger.Compare%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_LessThan" />
      </Docs>
    </Member>
    <Member MemberName="op_LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &lt;= (System.Numerics.BigInteger left, ulong right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThanOrEqual(valuetype System.Numerics.BigInteger left, unsigned int64 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt;= (left As BigInteger, right As ULong) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;=(System::Numerics::BigInteger left, System::UInt64 right);" />
      <MemberSignature Language="F#" Value="static member ( &lt;= ) : System.Numerics.BigInteger * uint64 -&gt; bool" Usage="left &lt;= right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="4a467-1205">Primer valor que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="4a467-1205">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="4a467-1206">Segundo valor que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="4a467-1206">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="4a467-1207">Devuelve un valor que indica si un valor <see cref="T:System.Numerics.BigInteger" /> es menor o igual que un entero de 64 bits sin signo.</span><span class="sxs-lookup"><span data-stu-id="4a467-1207">Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value is less than or equal to a 64-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="4a467-1208">Es <see langword="true" /> si <paramref name="left" /> es menor o igual que <paramref name="right" />; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-1208"><see langword="true" /> if <paramref name="left" /> is less than or equal to <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a467-1209">El <xref:System.Numerics.BigInteger.op_LessThanOrEqual%2A> método define la operación de menor o igual al operador para <xref:System.Numerics.BigInteger> valores.</span><span class="sxs-lookup"><span data-stu-id="4a467-1209">The <xref:System.Numerics.BigInteger.op_LessThanOrEqual%2A> method defines the operation of the less than or equal to operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="4a467-1210">Permite código como el siguiente:</span><span class="sxs-lookup"><span data-stu-id="4a467-1210">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#43](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#43)]
 [!code-vb[System.Numerics.BigInteger.Operators#43](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#43)]  
  
 <span data-ttu-id="4a467-1211">Los lenguajes que no admiten operadores personalizados pueden llamar los <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> método en su lugar.</span><span class="sxs-lookup"><span data-stu-id="4a467-1211">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="4a467-1212">También puede llamar a la <xref:System.Numerics.BigInteger.op_LessThanOrEqual%28System.Numerics.BigInteger%2CSystem.UInt64%29> método directamente, como en el ejemplo siguiente se muestra.</span><span class="sxs-lookup"><span data-stu-id="4a467-1212">They can also call the <xref:System.Numerics.BigInteger.op_LessThanOrEqual%28System.Numerics.BigInteger%2CSystem.UInt64%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numerics.BigInteger.Operators#44](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#44)]  
  
 <span data-ttu-id="4a467-1213">El método equivalente para este operador es <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4a467-1213">The equivalent method for this operator is <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_LessThan" />
      </Docs>
    </Member>
    <Member MemberName="op_LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &lt;= (ulong left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThanOrEqual(unsigned int64 left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.UInt64,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt;= (left As ULong, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;=(System::UInt64 left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( &lt;= ) : uint64 * System.Numerics.BigInteger -&gt; bool" Usage="left &lt;= right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.UInt64" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="4a467-1214">Primer valor que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="4a467-1214">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="4a467-1215">Segundo valor que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="4a467-1215">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="4a467-1216">Devuelve un valor que indica si un entero de 64 bits sin signo es menor o igual que un valor <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-1216">Returns a value that indicates whether a 64-bit unsigned integer is less than or equal to a <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns><span data-ttu-id="4a467-1217">Es <see langword="true" /> si <paramref name="left" /> es menor o igual que <paramref name="right" />; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-1217"><see langword="true" /> if <paramref name="left" /> is less than or equal to <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a467-1218">El <xref:System.Numerics.BigInteger.op_LessThanOrEqual%2A> método define la operación de menor o igual al operador para <xref:System.Numerics.BigInteger> valores.</span><span class="sxs-lookup"><span data-stu-id="4a467-1218">The <xref:System.Numerics.BigInteger.op_LessThanOrEqual%2A> method defines the operation of the less than or equal to operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="4a467-1219">Permite código como el siguiente:</span><span class="sxs-lookup"><span data-stu-id="4a467-1219">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#45](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#45)]
 [!code-vb[System.Numerics.BigInteger.Operators#45](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#45)]  
  
 <span data-ttu-id="4a467-1220">Los lenguajes que no admiten operadores personalizados pueden llamar los <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> método en su lugar.</span><span class="sxs-lookup"><span data-stu-id="4a467-1220">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="4a467-1221">También puede llamar a la <xref:System.Numerics.BigInteger.op_LessThanOrEqual%28System.UInt64%2CSystem.Numerics.BigInteger%29> método directamente, como en el ejemplo siguiente se muestra.</span><span class="sxs-lookup"><span data-stu-id="4a467-1221">They can also call the <xref:System.Numerics.BigInteger.op_LessThanOrEqual%28System.UInt64%2CSystem.Numerics.BigInteger%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numerics.BigInteger.Operators#46](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#46)]  
  
 <span data-ttu-id="4a467-1222">El método equivalente para este operador es <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4a467-1222">The equivalent method for this operator is <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_LessThan" />
      </Docs>
    </Member>
    <Member MemberName="op_Modulus">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger operator % (System.Numerics.BigInteger dividend, System.Numerics.BigInteger divisor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Modulus(valuetype System.Numerics.BigInteger dividend, valuetype System.Numerics.BigInteger divisor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Modulus(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator Mod (dividend As BigInteger, divisor As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger operator %(System::Numerics::BigInteger dividend, System::Numerics::BigInteger divisor);" />
      <MemberSignature Language="F#" Value="static member ( % ) : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="dividend % divisor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dividend" Type="System.Numerics.BigInteger" />
        <Parameter Name="divisor" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="dividend"><span data-ttu-id="4a467-1223">Valor que se va a dividir.</span><span class="sxs-lookup"><span data-stu-id="4a467-1223">The value to be divided.</span></span></param>
        <param name="divisor"><span data-ttu-id="4a467-1224">Valor por el que se va a dividir.</span><span class="sxs-lookup"><span data-stu-id="4a467-1224">The value to divide by.</span></span></param>
        <summary><span data-ttu-id="4a467-1225">Devuelve el resto que se obtiene al dividir dos valores <see cref="T:System.Numerics.BigInteger" /> especificados.</span><span class="sxs-lookup"><span data-stu-id="4a467-1225">Returns the remainder that results from division with two specified <see cref="T:System.Numerics.BigInteger" /> values.</span></span></summary>
        <returns><span data-ttu-id="4a467-1226">Resto que es el resultado de la división.</span><span class="sxs-lookup"><span data-stu-id="4a467-1226">The remainder that results from the division.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a467-1227">El <xref:System.Numerics.BigInteger.op_Modulus%2A> método define la operación del operador de módulo para <xref:System.Numerics.BigInteger> valores.</span><span class="sxs-lookup"><span data-stu-id="4a467-1227">The <xref:System.Numerics.BigInteger.op_Modulus%2A> method defines the operation of the modulus operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="4a467-1228">Permite código como el siguiente:</span><span class="sxs-lookup"><span data-stu-id="4a467-1228">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#31](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#31)]
 [!code-vb[System.Numeric.BigInteger.Class#31](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#31)]  
  
 <span data-ttu-id="4a467-1229">Los lenguajes que no admiten operadores personalizados pueden llamar los <xref:System.Numerics.BigInteger.Remainder%2A?displayProperty=nameWithType> método en su lugar.</span><span class="sxs-lookup"><span data-stu-id="4a467-1229">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.Remainder%2A?displayProperty=nameWithType> method instead.</span></span>  
  
 <span data-ttu-id="4a467-1230">El signo del valor devuelto por la operación de módulo depende del signo de `dividend`: Si `dividend` es positivo, la operación de módulo devuelve un resultado positivo; si es negativo, la operación de módulo devuelve un resultado negativo.</span><span class="sxs-lookup"><span data-stu-id="4a467-1230">The sign of the value returned by the modulus operation depends on the sign of `dividend`: If `dividend` is positive, the modulus operation returns a positive result; if it is negative, the modulus operation returns a negative result.</span></span> <span data-ttu-id="4a467-1231">El comportamiento de la operación de módulo con <xref:System.Numerics.BigInteger> valores es idéntica a la operación de módulo con otros tipos integrales.</span><span class="sxs-lookup"><span data-stu-id="4a467-1231">The behavior of the modulus operation with <xref:System.Numerics.BigInteger> values is identical to the modulus operation with other integral types.</span></span>  
  
 <span data-ttu-id="4a467-1232">El método equivalente para este operador es <xref:System.Numerics.BigInteger.Remainder%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4a467-1232">The equivalent method for this operator is <xref:System.Numerics.BigInteger.Remainder%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <exception cref="T:System.DivideByZeroException"><span data-ttu-id="4a467-1233">El valor de <paramref name="divisor" /> es 0 (cero).</span><span class="sxs-lookup"><span data-stu-id="4a467-1233"><paramref name="divisor" /> is 0 (zero).</span></span></exception>
        <altmember cref="M:System.Numerics.BigInteger.op_Division(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
        <altmember cref="M:System.Numerics.BigInteger.DivRem(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger@)" />
      </Docs>
    </Member>
    <Member MemberName="op_Multiply">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger operator * (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Multiply(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator * (left As BigInteger, right As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger operator *(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( * ) : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="left * right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="4a467-1234">Primer valor que se va a multiplicar.</span><span class="sxs-lookup"><span data-stu-id="4a467-1234">The first value to multiply.</span></span></param>
        <param name="right"><span data-ttu-id="4a467-1235">Segundo valor que se va a multiplicar.</span><span class="sxs-lookup"><span data-stu-id="4a467-1235">The second value to multiply.</span></span></param>
        <summary><span data-ttu-id="4a467-1236">Multiplica dos valores <see cref="T:System.Numerics.BigInteger" /> especificados.</span><span class="sxs-lookup"><span data-stu-id="4a467-1236">Multiplies two specified <see cref="T:System.Numerics.BigInteger" /> values.</span></span></summary>
        <returns><span data-ttu-id="4a467-1237">Producto de <paramref name="left" /> y <paramref name="right" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-1237">The product of <paramref name="left" /> and <paramref name="right" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a467-1238">El <xref:System.Numerics.BigInteger.op_Multiply%2A> método define el funcionamiento del operador de multiplicación para <xref:System.Numerics.BigInteger> valores.</span><span class="sxs-lookup"><span data-stu-id="4a467-1238">The <xref:System.Numerics.BigInteger.op_Multiply%2A> method defines the operation of the multiplication operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="4a467-1239">Permite código como el siguiente:</span><span class="sxs-lookup"><span data-stu-id="4a467-1239">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#11)]
 [!code-vb[System.Numeric.BigInteger.Class#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#11)]  
  
 <span data-ttu-id="4a467-1240">El método equivalente para este operador es <xref:System.Numerics.BigInteger.Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4a467-1240">The equivalent method for this operator is <xref:System.Numerics.BigInteger.Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Numerics.BigInteger.Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      </Docs>
    </Member>
    <Member MemberName="op_OnesComplement">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger operator ~ (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_OnesComplement(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_OnesComplement(System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator Not (value As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger operator ~(System::Numerics::BigInteger value);" />
      <MemberSignature Language="F#" Value="static member op_OnesComplement : System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.op_OnesComplement value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4a467-1241">Valor de entero.</span><span class="sxs-lookup"><span data-stu-id="4a467-1241">An integer value.</span></span></param>
        <summary><span data-ttu-id="4a467-1242">Devuelve el complemento de uno bit a bit de un valor <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-1242">Returns the bitwise one's complement of a <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns><span data-ttu-id="4a467-1243">Complemento de uno bit a bit de <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-1243">The bitwise one's complement of <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a467-1244">El <xref:System.Numerics.BigInteger.op_OnesComplement%2A> método define la operación bit a bit operador complementario para <xref:System.Numerics.BigInteger> valores.</span><span class="sxs-lookup"><span data-stu-id="4a467-1244">The <xref:System.Numerics.BigInteger.op_OnesComplement%2A> method defines the operation of the bitwise one's complement operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="4a467-1245">Bit a bit operador complementario invierte cada bit en un valor numérico.</span><span class="sxs-lookup"><span data-stu-id="4a467-1245">The bitwise one's complement operator reverses each bit in a numeric value.</span></span> <span data-ttu-id="4a467-1246">Es decir, bits en `value` que son 0 se establecen en 1 en el resultado y bits que son 1 se establecen en 0 en el resultado.</span><span class="sxs-lookup"><span data-stu-id="4a467-1246">That is, bits in `value` that are 0 are set to 1 in the result, and bits that are 1 are set to 0 in the result.</span></span> <span data-ttu-id="4a467-1247">El <xref:System.Numerics.BigInteger.op_OnesComplement%2A> método permite código como el siguiente:</span><span class="sxs-lookup"><span data-stu-id="4a467-1247">The <xref:System.Numerics.BigInteger.op_OnesComplement%2A> method enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.OnesComplement#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.OnesComplement/cs/OnesComplement1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.OnesComplement#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.OnesComplement/vb/OnesComplement1.vb#1)]  
  
 <span data-ttu-id="4a467-1248">Lenguajes que no admiten operadores personalizados es posible que pueda llamar a la <xref:System.Numerics.BigInteger.op_OnesComplement%2A> método directamente para realizar un bit a bit de una operación de complemento.</span><span class="sxs-lookup"><span data-stu-id="4a467-1248">Languages that do not support custom operators may be able to call the <xref:System.Numerics.BigInteger.op_OnesComplement%2A> method directly to perform a bitwise one's complement operation.</span></span> <span data-ttu-id="4a467-1249">Por ejemplo:</span><span class="sxs-lookup"><span data-stu-id="4a467-1249">For example:</span></span>  
  
 [!code-vb[System.Numerics.BigInteger.OnesComplement#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.OnesComplement/vb/onescomplement2.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_RightShift">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger operator &gt;&gt; (System.Numerics.BigInteger value, int shift);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_RightShift(valuetype System.Numerics.BigInteger value, int32 shift) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_RightShift(System.Numerics.BigInteger,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt;&gt; (value As BigInteger, shift As Integer) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger operator &gt;&gt;(System::Numerics::BigInteger value, int shift);" />
      <MemberSignature Language="F#" Value="static member ( &gt;&gt;&gt; ) : System.Numerics.BigInteger * int -&gt; System.Numerics.BigInteger" Usage="value &gt;&gt;&gt; shift" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
        <Parameter Name="shift" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4a467-1250">Valor cuyos bits se van a desplazar.</span><span class="sxs-lookup"><span data-stu-id="4a467-1250">The value whose bits are to be shifted.</span></span></param>
        <param name="shift"><span data-ttu-id="4a467-1251">Número de bits que se va a desplazar <paramref name="value" /> a la derecha.</span><span class="sxs-lookup"><span data-stu-id="4a467-1251">The number of bits to shift <paramref name="value" /> to the right.</span></span></param>
        <summary><span data-ttu-id="4a467-1252">Desplaza un valor <see cref="T:System.Numerics.BigInteger" /> un número especificado de bits a la derecha.</span><span class="sxs-lookup"><span data-stu-id="4a467-1252">Shifts a <see cref="T:System.Numerics.BigInteger" /> value a specified number of bits to the right.</span></span></summary>
        <returns><span data-ttu-id="4a467-1253">Valor que se ha desplazado a la derecha el número especificado de bits.</span><span class="sxs-lookup"><span data-stu-id="4a467-1253">A value that has been shifted to the right by the specified number of bits.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a467-1254">El <xref:System.Numerics.BigInteger.op_RightShift%2A> método define la operación del operador de desplazamiento a la derecha bit a bit para <xref:System.Numerics.BigInteger> valores.</span><span class="sxs-lookup"><span data-stu-id="4a467-1254">The <xref:System.Numerics.BigInteger.op_RightShift%2A> method defines the operation of the bitwise right-shift operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="4a467-1255">Permite código como el siguiente:</span><span class="sxs-lookup"><span data-stu-id="4a467-1255">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#47](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/RightShift1.cs#47)]
 [!code-vb[System.Numerics.BigInteger.Operators#47](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#47)]  
  
 <span data-ttu-id="4a467-1256">Los lenguajes que no admiten operadores personalizados pueden realizar una operación de desplazamiento a la derecha bit a bit dividiendo `value` por `BigInteger.Pow(2, shift)` y restar 1 veces `shift` para los valores negativos.</span><span class="sxs-lookup"><span data-stu-id="4a467-1256">Languages that do not support custom operators can perform a bitwise right-shift operation by dividing `value` by `BigInteger.Pow(2, shift)` and subtracting 1 times `shift` for negative values.</span></span> <span data-ttu-id="4a467-1257">El ejemplo siguiente se muestra que los resultados son idénticos a los resultados del uso de este operador.</span><span class="sxs-lookup"><span data-stu-id="4a467-1257">The following example shows that the results are identical to the results of using this operator.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#48](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/RightShift1.cs#48)]
 [!code-vb[System.Numerics.BigInteger.Operators#48](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#48)]  
  
 <span data-ttu-id="4a467-1258">Si `shift` es mayor o igual que el número de bits de un positivo <xref:System.Numerics.BigInteger> valor, el resultado de la operación de desplazamiento a la derecha es <xref:System.Numerics.BigInteger.Zero%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4a467-1258">If `shift` is greater than or equal to the number of bits in a positive <xref:System.Numerics.BigInteger> value, the result of the right-shift operation is <xref:System.Numerics.BigInteger.Zero%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="4a467-1259">Si `shift` es mayor que el número de bits de un negativo <xref:System.Numerics.BigInteger> valor, el resultado de la operación de desplazamiento a la derecha es <xref:System.Numerics.BigInteger.MinusOne%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4a467-1259">If `shift` is greater than the number of bits in a negative <xref:System.Numerics.BigInteger> value, the result of the right-shift operation is <xref:System.Numerics.BigInteger.MinusOne%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Numerics.BigInteger.op_LeftShift(System.Numerics.BigInteger,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="op_Subtraction">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger operator - (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Subtraction(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Subtraction(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator - (left As BigInteger, right As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger operator -(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( - ) : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="left - right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="4a467-1260">Valor del que se va a restar (minuendo).</span><span class="sxs-lookup"><span data-stu-id="4a467-1260">The value to subtract from (the minuend).</span></span></param>
        <param name="right"><span data-ttu-id="4a467-1261">Valor que se va a restar (sustraendo).</span><span class="sxs-lookup"><span data-stu-id="4a467-1261">The value to subtract (the subtrahend).</span></span></param>
        <summary><span data-ttu-id="4a467-1262">Resta un valor <see cref="T:System.Numerics.BigInteger" /> de otro valor <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-1262">Subtracts a <see cref="T:System.Numerics.BigInteger" /> value from another <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns><span data-ttu-id="4a467-1263">Resultado de restar <paramref name="right" /> de <paramref name="left" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-1263">The result of subtracting <paramref name="right" /> from <paramref name="left" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a467-1264">El <xref:System.Numerics.BigInteger.op_Subtraction%2A> método define la operación para el operador de resta <xref:System.Numerics.BigInteger> valores.</span><span class="sxs-lookup"><span data-stu-id="4a467-1264">The <xref:System.Numerics.BigInteger.op_Subtraction%2A> method defines the operation of the subtraction operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="4a467-1265">Permite código como el siguiente:</span><span class="sxs-lookup"><span data-stu-id="4a467-1265">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#14)]
 [!code-vb[System.Numeric.BigInteger.Class#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#14)]  
  
 <span data-ttu-id="4a467-1266">Los lenguajes que no admiten operadores personalizados pueden llamar los <xref:System.Numerics.BigInteger.Subtract%2A?displayProperty=nameWithType> método en su lugar.</span><span class="sxs-lookup"><span data-stu-id="4a467-1266">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.Subtract%2A?displayProperty=nameWithType> method instead.</span></span>  
  
 <span data-ttu-id="4a467-1267">El método equivalente para este operador es <xref:System.Numerics.BigInteger.Subtract%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4a467-1267">The equivalent method for this operator is <xref:System.Numerics.BigInteger.Subtract%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Numerics.BigInteger.Subtract(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      </Docs>
    </Member>
    <Member MemberName="op_UnaryNegation">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger operator - (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_UnaryNegation(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_UnaryNegation(System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator - (value As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger operator -(System::Numerics::BigInteger value);" />
      <MemberSignature Language="F#" Value="static member ( ~- ) : System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="- value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4a467-1268">Valor que se va a negar.</span><span class="sxs-lookup"><span data-stu-id="4a467-1268">The value to negate.</span></span></param>
        <summary><span data-ttu-id="4a467-1269">Crea el negativo de un valor BigInteger especificado.</span><span class="sxs-lookup"><span data-stu-id="4a467-1269">Negates a specified BigInteger value.</span></span></summary>
        <returns><span data-ttu-id="4a467-1270">Resultado del parámetro <paramref name="value" /> multiplicado por menos uno (-1).</span><span class="sxs-lookup"><span data-stu-id="4a467-1270">The result of the <paramref name="value" /> parameter multiplied by negative one (-1).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a467-1271">El <xref:System.Numerics.BigInteger.op_UnaryNegation%2A> método define la operación de operador unario de negación (o el operador inverso aditivo) para <xref:System.Numerics.BigInteger> valores.</span><span class="sxs-lookup"><span data-stu-id="4a467-1271">The <xref:System.Numerics.BigInteger.op_UnaryNegation%2A> method defines the operation of the unary negation operator (or the additive inverse operator) for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="4a467-1272">La operación genera un valor que da como resultado 0 (cero) cuando se agrega al número original.</span><span class="sxs-lookup"><span data-stu-id="4a467-1272">The operation produces a value that results in 0 (zero) when it is added to the original number.</span></span> <span data-ttu-id="4a467-1273">Los lenguajes que no admiten operadores personalizados pueden llamar los <xref:System.Numerics.BigInteger.Negate%2A> método en su lugar.</span><span class="sxs-lookup"><span data-stu-id="4a467-1273">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.Negate%2A> method instead.</span></span>  
  
 <span data-ttu-id="4a467-1274">Es el método equivalente para este operador <xref:System.Numerics.BigInteger.Negate%28System.Numerics.BigInteger%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="4a467-1274">The equivalent method for this operator is <xref:System.Numerics.BigInteger.Negate%28System.Numerics.BigInteger%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="4a467-1275">El ejemplo siguiente muestra tres formas diferentes para negar el valor de un <xref:System.Numerics.BigInteger> objeto.</span><span class="sxs-lookup"><span data-stu-id="4a467-1275">The following example illustrates three different ways to negate the value of a <xref:System.Numerics.BigInteger> object.</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#16)]
 [!code-vb[System.Numeric.BigInteger.Class#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_UnaryPlus">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger operator + (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_UnaryPlus(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_UnaryPlus(System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator + (value As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger operator +(System::Numerics::BigInteger value);" />
      <MemberSignature Language="F#" Value="static member ( ~+ ) : System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="+ value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4a467-1276">Valor de entero.</span><span class="sxs-lookup"><span data-stu-id="4a467-1276">An integer value.</span></span></param>
        <summary><span data-ttu-id="4a467-1277">Devuelve el valor del operando <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-1277">Returns the value of the <see cref="T:System.Numerics.BigInteger" /> operand.</span></span> <span data-ttu-id="4a467-1278">(El signo del operando no cambia).</span><span class="sxs-lookup"><span data-stu-id="4a467-1278">(The sign of the operand is unchanged.)</span></span></summary>
        <returns><span data-ttu-id="4a467-1279">Valor del operando <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-1279">The value of the <paramref name="value" /> operand.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a467-1280">El <xref:System.Numerics.BigInteger.op_UnaryPlus%2A> método define la operación del operador unario positivo para <xref:System.Numerics.BigInteger> valores.</span><span class="sxs-lookup"><span data-stu-id="4a467-1280">The <xref:System.Numerics.BigInteger.op_UnaryPlus%2A> method defines the operation of the unary positive operator for <xref:System.Numerics.BigInteger> values.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Parse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4a467-1281">Convierte la representación en forma de cadena de un número en su <see cref="T:System.Numerics.BigInteger" /> equivalente.</span><span class="sxs-lookup"><span data-stu-id="4a467-1281">Converts the string representation of a number to its <see cref="T:System.Numerics.BigInteger" /> equivalent.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger Parse (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger Parse(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (value As String) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger Parse(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member Parse : string -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.Parse value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4a467-1282">Cadena que contiene el número que se va a convertir.</span><span class="sxs-lookup"><span data-stu-id="4a467-1282">A string that contains the number to convert.</span></span></param>
        <summary><span data-ttu-id="4a467-1283">Convierte la representación en forma de cadena de un número en su <see cref="T:System.Numerics.BigInteger" /> equivalente.</span><span class="sxs-lookup"><span data-stu-id="4a467-1283">Converts the string representation of a number to its <see cref="T:System.Numerics.BigInteger" /> equivalent.</span></span></summary>
        <returns><span data-ttu-id="4a467-1284">Valor equivalente al número especificado en el parámetro <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-1284">A value that is equivalent to the number specified in the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a467-1285">El `value` parámetro debe ser la representación de cadena de un número en el formato siguiente.</span><span class="sxs-lookup"><span data-stu-id="4a467-1285">The `value` parameter should be the string representation of a number in the following form.</span></span>  
  
 <span data-ttu-id="4a467-1286">[*ws*][*sign*]*digits*[*ws*]</span><span class="sxs-lookup"><span data-stu-id="4a467-1286">[*ws*][*sign*]*digits*[*ws*]</span></span>  
  
 <span data-ttu-id="4a467-1287">Los elementos de los corchetes ([ y ]) son opcionales.</span><span class="sxs-lookup"><span data-stu-id="4a467-1287">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="4a467-1288">En esta tabla se describe cada elemento.</span><span class="sxs-lookup"><span data-stu-id="4a467-1288">The following table describes each element.</span></span>  
  
|<span data-ttu-id="4a467-1289">Elemento</span><span class="sxs-lookup"><span data-stu-id="4a467-1289">Element</span></span>|<span data-ttu-id="4a467-1290">Descripción</span><span class="sxs-lookup"><span data-stu-id="4a467-1290">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="4a467-1291">*ws*</span><span class="sxs-lookup"><span data-stu-id="4a467-1291">*ws*</span></span>|<span data-ttu-id="4a467-1292">Espacio en blanco opcional.</span><span class="sxs-lookup"><span data-stu-id="4a467-1292">Optional white space.</span></span>|  
|<span data-ttu-id="4a467-1293">*sign*</span><span class="sxs-lookup"><span data-stu-id="4a467-1293">*sign*</span></span>|<span data-ttu-id="4a467-1294">Un signo opcional.</span><span class="sxs-lookup"><span data-stu-id="4a467-1294">An optional sign.</span></span> <span data-ttu-id="4a467-1295">Caracteres de inicio de sesión válidos se determinan mediante la <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType> y <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType> propiedades de la referencia cultural actual.</span><span class="sxs-lookup"><span data-stu-id="4a467-1295">Valid sign characters are determined by the <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType> properties of the current culture.</span></span>|  
|<span data-ttu-id="4a467-1296">*digits*</span><span class="sxs-lookup"><span data-stu-id="4a467-1296">*digits*</span></span>|<span data-ttu-id="4a467-1297">Una secuencia de dígitos que comprende del 0 al 9.</span><span class="sxs-lookup"><span data-stu-id="4a467-1297">A sequence of digits ranging from 0 to 9.</span></span> <span data-ttu-id="4a467-1298">Se omiten los ceros iniciales.</span><span class="sxs-lookup"><span data-stu-id="4a467-1298">Any leading zeros are ignored.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="4a467-1299">La cadena especificada por el `value` parámetro se interpreta usando el <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> estilo.</span><span class="sxs-lookup"><span data-stu-id="4a467-1299">The string specified by the `value` parameter is interpreted by using the <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="4a467-1300">No puede contener cualquier separador de grupo o un separador decimal y no puede tener una parte decimal.</span><span class="sxs-lookup"><span data-stu-id="4a467-1300">It cannot contain any group separators or decimal separator, and it cannot have a decimal portion.</span></span>  
  
 <span data-ttu-id="4a467-1301">El `value` parámetro se analiza mediante el uso de la información de formato en un <xref:System.Globalization.NumberFormatInfo?displayProperty=nameWithType> objeto que se inicializa para la referencia cultural actual del sistema.</span><span class="sxs-lookup"><span data-stu-id="4a467-1301">The `value` parameter is parsed by using the formatting information in a <xref:System.Globalization.NumberFormatInfo?displayProperty=nameWithType> object that is initialized for the current system culture.</span></span> <span data-ttu-id="4a467-1302">Para obtener más información, vea <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4a467-1302">For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="4a467-1303">Para analizar una cadena mediante el uso de la información de formato de una referencia cultural concreta, use el <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.IFormatProvider%29> método.</span><span class="sxs-lookup"><span data-stu-id="4a467-1303">To parse a string by using the formatting information of a specific culture, use the <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.IFormatProvider%29> method.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="4a467-1304">Si usas el <xref:System.Numerics.BigInteger.Parse%2A> método a la representación de cadena de ida y vuelta de un <xref:System.Numerics.BigInteger> valor que se generan mediante la <xref:System.Numerics.BigInteger.ToString%2A> método, debe usar el <xref:System.Numerics.BigInteger.ToString%28System.String%29?displayProperty=nameWithType> método con el especificador de formato "R" para generar la representación de cadena de la <xref:System.Numerics.BigInteger> valor.</span><span class="sxs-lookup"><span data-stu-id="4a467-1304">If you use the <xref:System.Numerics.BigInteger.Parse%2A> method to round-trip the string representation of a <xref:System.Numerics.BigInteger> value that was output by the <xref:System.Numerics.BigInteger.ToString%2A> method, you should use the <xref:System.Numerics.BigInteger.ToString%28System.String%29?displayProperty=nameWithType> method with the "R" format specifier to generate the string representation of the <xref:System.Numerics.BigInteger> value.</span></span> <span data-ttu-id="4a467-1305">En caso contrario, la representación de cadena de la <xref:System.Numerics.BigInteger> conserva solo los 50 dígitos más significativos del valor original y los datos se pueden perder al usar el <xref:System.Numerics.BigInteger.Parse%2A> método para restaurar el <xref:System.Numerics.BigInteger> valor.</span><span class="sxs-lookup"><span data-stu-id="4a467-1305">Otherwise, the string representation of the <xref:System.Numerics.BigInteger> preserves only the 50 most significant digits of the original value, and data may be lost when you use the <xref:System.Numerics.BigInteger.Parse%2A> method to restore the <xref:System.Numerics.BigInteger> value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a467-1306">En el ejemplo siguiente se usa el <xref:System.Numerics.BigInteger.Parse%28System.String%29> método para crear instancias de dos <xref:System.Numerics.BigInteger> objetos.</span><span class="sxs-lookup"><span data-stu-id="4a467-1306">The following example uses the <xref:System.Numerics.BigInteger.Parse%28System.String%29> method to instantiate two <xref:System.Numerics.BigInteger> objects.</span></span> <span data-ttu-id="4a467-1307">Multiplica cada objeto por otro número y, a continuación, llama a la <xref:System.Numerics.BigInteger.Compare%2A> método para determinar la relación entre los dos valores.</span><span class="sxs-lookup"><span data-stu-id="4a467-1307">It multiplies each object by another number and then calls the <xref:System.Numerics.BigInteger.Compare%2A> method to determine the relationship between the two values.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Parse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Parse/cs/Parse1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.Parse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Parse/vb/Parse1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4a467-1308"><paramref name="value" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-1308"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="4a467-1309"><paramref name="value" /> no tiene el formato correcto.</span><span class="sxs-lookup"><span data-stu-id="4a467-1309"><paramref name="value" /> is not in the correct format.</span></span></exception>
        <altmember cref="Overload:System.Numerics.BigInteger.TryParse" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger Parse (string value, System.Globalization.NumberStyles style);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger Parse(string value, valuetype System.Globalization.NumberStyles style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (value As String, style As NumberStyles) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger Parse(System::String ^ value, System::Globalization::NumberStyles style);" />
      <MemberSignature Language="F#" Value="static member Parse : string * System.Globalization.NumberStyles -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.Parse (value, style)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4a467-1310">Cadena que contiene un número que se va a convertir.</span><span class="sxs-lookup"><span data-stu-id="4a467-1310">A string that contains a number to convert.</span></span></param>
        <param name="style"><span data-ttu-id="4a467-1311">Combinación bit a bit de los valores de enumeración que especifican el formato permitido de <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-1311">A bitwise combination of the enumeration values that specify the permitted format of <paramref name="value" />.</span></span></param>
        <summary><span data-ttu-id="4a467-1312">Convierte la representación de cadena de un número con un estilo especificado en su <see cref="T:System.Numerics.BigInteger" /> equivalente.</span><span class="sxs-lookup"><span data-stu-id="4a467-1312">Converts the string representation of a number in a specified style to its <see cref="T:System.Numerics.BigInteger" /> equivalent.</span></span></summary>
        <returns><span data-ttu-id="4a467-1313">Valor equivalente al número especificado en el parámetro <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-1313">A value that is equivalent to the number specified in the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a467-1314">El `style` parámetro define los elementos de estilo (como espacios en blanco, el símbolo de signo positivo o negativo, el símbolo del separador de grupo o el símbolo de separador decimal) que se permiten en el `value` parámetro para la operación de análisis se realice correctamente.</span><span class="sxs-lookup"><span data-stu-id="4a467-1314">The `style` parameter defines the style elements (such as white space, the positive or negative sign symbol, the group separator symbol, or the decimal point symbol) that are allowed in the `value` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="4a467-1315">`styles` debe ser una combinación de marcas de bits de la <xref:System.Globalization.NumberStyles> enumeración.</span><span class="sxs-lookup"><span data-stu-id="4a467-1315">`styles` must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="4a467-1316">El `style` parámetro hace que este método de sobrecarga útil cuando `value` contiene la representación de cadena de un valor hexadecimal, cuando el sistema numérico (decimal o hexadecimal) representado por `value` se conoce en tiempo de ejecución, o cuando se desea permitir que el espacio en blanco o un signo de símbolos en `value`.</span><span class="sxs-lookup"><span data-stu-id="4a467-1316">The `style` parameter makes this method overload useful when `value` contains the string representation of a hexadecimal value, when the number system (decimal or hexadecimal) represented by `value` is known only at run time, or when you want to disallow white space or a sign symbol in `value`.</span></span>  
  
 <span data-ttu-id="4a467-1317">Dependiendo del valor de `style`, el `value` parámetro puede incluir los siguientes elementos:</span><span class="sxs-lookup"><span data-stu-id="4a467-1317">Depending on the value of `style`, the `value` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="4a467-1318">[*ws*][*$*][*sign*][*digits*,]*digits*[.*fractional_digits*][E[*sign*]*exponential_digits*][*ws*]</span><span class="sxs-lookup"><span data-stu-id="4a467-1318">[*ws*][*$*][*sign*][*digits*,]*digits*[.*fractional_digits*][E[*sign*]*exponential_digits*][*ws*]</span></span>  
  
 <span data-ttu-id="4a467-1319">Si `style` incluye <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>, el `value` parámetro puede contener los siguientes elementos:</span><span class="sxs-lookup"><span data-stu-id="4a467-1319">If `style` includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>, the `value` parameter may contain the following elements:</span></span>  
  
 <span data-ttu-id="4a467-1320">[*ws*]*hexdigits*[*ws*]</span><span class="sxs-lookup"><span data-stu-id="4a467-1320">[*ws*]*hexdigits*[*ws*]</span></span>  
  
 <span data-ttu-id="4a467-1321">Los elementos de los corchetes ([ y ]) son opcionales.</span><span class="sxs-lookup"><span data-stu-id="4a467-1321">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="4a467-1322">En esta tabla se describe cada elemento.</span><span class="sxs-lookup"><span data-stu-id="4a467-1322">The following table describes each element.</span></span>  
  
|<span data-ttu-id="4a467-1323">Elemento</span><span class="sxs-lookup"><span data-stu-id="4a467-1323">Element</span></span>|<span data-ttu-id="4a467-1324">Descripción</span><span class="sxs-lookup"><span data-stu-id="4a467-1324">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="4a467-1325">*ws*</span><span class="sxs-lookup"><span data-stu-id="4a467-1325">*ws*</span></span>|<span data-ttu-id="4a467-1326">Espacio en blanco opcional.</span><span class="sxs-lookup"><span data-stu-id="4a467-1326">Optional white space.</span></span> <span data-ttu-id="4a467-1327">Pueden aparecer espacios en blanco del principio de `value` si `style` incluye la <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> marca y puede aparecer al final de `value` si `style` incluye la <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> marca.</span><span class="sxs-lookup"><span data-stu-id="4a467-1327">White space can appear at the start of `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, and it can appear at the end of `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="4a467-1328">Un símbolo de moneda de la referencia cultural específica.</span><span class="sxs-lookup"><span data-stu-id="4a467-1328">A culture-specific currency symbol.</span></span> <span data-ttu-id="4a467-1329">Su posición en la cadena viene definida por el <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType> y <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> propiedades de la referencia cultural actual.</span><span class="sxs-lookup"><span data-stu-id="4a467-1329">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> properties of the current culture.</span></span> <span data-ttu-id="4a467-1330">Símbolo de divisa de la referencia cultural actual puede aparecer en `value` si `style` incluye la <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> marca.</span><span class="sxs-lookup"><span data-stu-id="4a467-1330">The current culture's currency symbol can appear in `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="4a467-1331">*sign*</span><span class="sxs-lookup"><span data-stu-id="4a467-1331">*sign*</span></span>|<span data-ttu-id="4a467-1332">Un signo opcional.</span><span class="sxs-lookup"><span data-stu-id="4a467-1332">An optional sign.</span></span> <span data-ttu-id="4a467-1333">El inicio de sesión puede aparecer al principio de `value` si `style` incluye la <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> marca y puede aparecer al final de `value` si `style` incluye la <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> marca.</span><span class="sxs-lookup"><span data-stu-id="4a467-1333">The sign can appear at the start of `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag, and it can appear at the end of `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="4a467-1334">Se pueden utilizar paréntesis en `value` para indicar un valor negativo si `style` incluye la <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> marca.</span><span class="sxs-lookup"><span data-stu-id="4a467-1334">Parentheses can be used in `value` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="4a467-1335">*digits*</span><span class="sxs-lookup"><span data-stu-id="4a467-1335">*digits*</span></span><br /><br /> <span data-ttu-id="4a467-1336">*fractional_digits*</span><span class="sxs-lookup"><span data-stu-id="4a467-1336">*fractional_digits*</span></span><br /><br /> <span data-ttu-id="4a467-1337">*exponential_digits*</span><span class="sxs-lookup"><span data-stu-id="4a467-1337">*exponential_digits*</span></span>|<span data-ttu-id="4a467-1338">Una secuencia de dígitos del 0 al 9.</span><span class="sxs-lookup"><span data-stu-id="4a467-1338">A sequence of digits from 0 through 9.</span></span> <span data-ttu-id="4a467-1339">Para *dígitos fraccionarios*, solo es válido el dígito 0.</span><span class="sxs-lookup"><span data-stu-id="4a467-1339">For *fractional_digits*, only the digit 0 is valid.</span></span>|  
|<span data-ttu-id="4a467-1340">*,*</span><span class="sxs-lookup"><span data-stu-id="4a467-1340">*,*</span></span>|<span data-ttu-id="4a467-1341">Un símbolo de separador de grupo específicas de referencias culturales.</span><span class="sxs-lookup"><span data-stu-id="4a467-1341">A culture-specific group separator symbol.</span></span> <span data-ttu-id="4a467-1342">Separador de grupos de la referencia cultural actual puede aparecer en `value` si `style` incluye la <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> marca.</span><span class="sxs-lookup"><span data-stu-id="4a467-1342">The current culture's group separator can appear in `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="4a467-1343">*.*</span><span class="sxs-lookup"><span data-stu-id="4a467-1343">*.*</span></span>|<span data-ttu-id="4a467-1344">Un símbolo de separador de decimales de referencia cultural específica.</span><span class="sxs-lookup"><span data-stu-id="4a467-1344">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="4a467-1345">Símbolo de separador decimal de la referencia cultural actual puede aparecer en `value` si `style` incluye la <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> marca.</span><span class="sxs-lookup"><span data-stu-id="4a467-1345">The current culture's decimal point symbol can appear in `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="4a467-1346">El dígito 0 puede aparecer como un dígito fraccionario para la operación de análisis se realice correctamente; Si *dígitos fraccionarios* incluye cualquier otro dígito, un <xref:System.FormatException> se produce.</span><span class="sxs-lookup"><span data-stu-id="4a467-1346">Only the digit 0 can appear as a fractional digit for the parse operation to succeed; if *fractional_digits* includes any other digit, a <xref:System.FormatException> is thrown.</span></span>|  
|<span data-ttu-id="4a467-1347">E</span><span class="sxs-lookup"><span data-stu-id="4a467-1347">E</span></span>|<span data-ttu-id="4a467-1348">La "e" o el carácter "E", lo que indica que el valor se representa en una notación exponencial (científica).</span><span class="sxs-lookup"><span data-stu-id="4a467-1348">The "e" or "E" character, which indicates that the value is represented in exponential (scientific) notation.</span></span> <span data-ttu-id="4a467-1349">El `value` parámetro puede representar un número en notación exponencial si `style` incluye la <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> marca.</span><span class="sxs-lookup"><span data-stu-id="4a467-1349">The `value` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="4a467-1350">*hexdigits*</span><span class="sxs-lookup"><span data-stu-id="4a467-1350">*hexdigits*</span></span>|<span data-ttu-id="4a467-1351">Una secuencia de dígitos hexadecimales de 0 a f o 0 hasta la f el.</span><span class="sxs-lookup"><span data-stu-id="4a467-1351">A sequence of hexadecimal digits from 0 through f, or 0 through F.</span></span>|  
  
> [!NOTE]
> <span data-ttu-id="4a467-1352">Terminación NUL (u+0000) caracteres en `s` son ignoradas por la operación de análisis, independientemente del valor de la `style` argumento.</span><span class="sxs-lookup"><span data-stu-id="4a467-1352">Any terminating NUL (U+0000) characters in `s` are ignored by the parsing operation, regardless of the value of the `style` argument.</span></span>

 <span data-ttu-id="4a467-1353">Una cadena formada únicamente por dígitos (que corresponde a la <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> estilo) siempre se analiza correctamente.</span><span class="sxs-lookup"><span data-stu-id="4a467-1353">A string with digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> style) always parses successfully.</span></span> <span data-ttu-id="4a467-1354">La mayoría de los restantes <xref:System.Globalization.NumberStyles> miembros controlan los elementos que pueden estar presentes, pero no tienen que estar presente en la cadena de entrada.</span><span class="sxs-lookup"><span data-stu-id="4a467-1354">Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be present, but are not required to be present, in the input string.</span></span> <span data-ttu-id="4a467-1355">La tabla siguiente se indica cómo individuales <xref:System.Globalization.NumberStyles> miembros afectan a los elementos que pueden estar presentes en `value`.</span><span class="sxs-lookup"><span data-stu-id="4a467-1355">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `value`.</span></span>  
  
|<span data-ttu-id="4a467-1356">Valor de`NumberStyles` </span><span class="sxs-lookup"><span data-stu-id="4a467-1356">`NumberStyles` value</span></span>|<span data-ttu-id="4a467-1357">Elementos permitidos en `value` además de dígitos</span><span class="sxs-lookup"><span data-stu-id="4a467-1357">Elements permitted in `value` in addition to digits</span></span>|  
|--------------------------|---------------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None>|<span data-ttu-id="4a467-1358">El *dígitos* sólo elemento.</span><span class="sxs-lookup"><span data-stu-id="4a467-1358">The *digits* element only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint>|<span data-ttu-id="4a467-1359">El punto decimal (.) y *dígitos fraccionarios* elementos.</span><span class="sxs-lookup"><span data-stu-id="4a467-1359">The decimal point (.) and *fractional-digits* elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent>|<span data-ttu-id="4a467-1360">La "e" o el carácter "E", lo que indica una notación exponencial, junto con *dígitos exponenciales*.</span><span class="sxs-lookup"><span data-stu-id="4a467-1360">The "e" or "E" character, which indicates exponential notation, along with *exponential_digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite>|<span data-ttu-id="4a467-1361">El *ws* elemento situado al principio de `value`.</span><span class="sxs-lookup"><span data-stu-id="4a467-1361">The *ws* element at the start of `value`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite>|<span data-ttu-id="4a467-1362">El *ws* elemento al final de `value`.</span><span class="sxs-lookup"><span data-stu-id="4a467-1362">The *ws* element at the end of `value`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign>|<span data-ttu-id="4a467-1363">El *sesión* elemento situado al principio de `value`.</span><span class="sxs-lookup"><span data-stu-id="4a467-1363">The *sign* element at the start of `value`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign>|<span data-ttu-id="4a467-1364">El *sesión* elemento al final de `value`.</span><span class="sxs-lookup"><span data-stu-id="4a467-1364">The *sign* element at the end of `value`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses>|<span data-ttu-id="4a467-1365">El *sesión* elemento con la forma de paréntesis para delimitar el valor numérico.</span><span class="sxs-lookup"><span data-stu-id="4a467-1365">The *sign* element in the form of parentheses enclosing the numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands>|<span data-ttu-id="4a467-1366">El elemento separador (,) de grupo.</span><span class="sxs-lookup"><span data-stu-id="4a467-1366">The group separator (,) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol>|<span data-ttu-id="4a467-1367">El elemento de moneda ($).</span><span class="sxs-lookup"><span data-stu-id="4a467-1367">The currency ($) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.Currency>|<span data-ttu-id="4a467-1368">Todos los elementos.</span><span class="sxs-lookup"><span data-stu-id="4a467-1368">All elements.</span></span> <span data-ttu-id="4a467-1369">Sin embargo, `value` no puede representar un número hexadecimal o un número en notación exponencial.</span><span class="sxs-lookup"><span data-stu-id="4a467-1369">However, `value` cannot represent a hexadecimal number or a number in exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Float>|<span data-ttu-id="4a467-1370">El *ws* elemento al principio o al final de `value`, *sesión* al principio de `value`y el separador decimal (*.*) símbolos.</span><span class="sxs-lookup"><span data-stu-id="4a467-1370">The *ws* element at the start or end of `value`, *sign* at the start of `value`, and the decimal point (*.*) symbol.</span></span> <span data-ttu-id="4a467-1371">El `value` parámetro también puede utilizar la notación exponencial.</span><span class="sxs-lookup"><span data-stu-id="4a467-1371">The `value` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Number>|<span data-ttu-id="4a467-1372">El `ws`, `sign`, separador de grupos (*,*) y el separador decimal (*.*) elementos.</span><span class="sxs-lookup"><span data-stu-id="4a467-1372">The `ws`, `sign`, group separator (*,*), and decimal point (*.*) elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.Any>|<span data-ttu-id="4a467-1373">Todos los elementos.</span><span class="sxs-lookup"><span data-stu-id="4a467-1373">All elements.</span></span> <span data-ttu-id="4a467-1374">Sin embargo, `value` no se puede representar un número hexadecimal.</span><span class="sxs-lookup"><span data-stu-id="4a467-1374">However, `value` cannot represent a hexadecimal number.</span></span>|  
  
> [!IMPORTANT]
>  <span data-ttu-id="4a467-1375">Si usas el <xref:System.Numerics.BigInteger.Parse%2A> método a la representación de cadena de ida y vuelta de un <xref:System.Numerics.BigInteger> valor que se generan mediante la <xref:System.Numerics.BigInteger.ToString%2A> método, debe usar el <xref:System.Numerics.BigInteger.ToString%28System.String%29?displayProperty=nameWithType> método con el especificador de formato "R" para generar la representación de cadena de la <xref:System.Numerics.BigInteger> valor.</span><span class="sxs-lookup"><span data-stu-id="4a467-1375">If you use the <xref:System.Numerics.BigInteger.Parse%2A> method to round-trip the string representation of a <xref:System.Numerics.BigInteger> value that was output by the <xref:System.Numerics.BigInteger.ToString%2A> method, you should use the <xref:System.Numerics.BigInteger.ToString%28System.String%29?displayProperty=nameWithType> method with the "R" format specifier to generate the string representation of the <xref:System.Numerics.BigInteger> value.</span></span> <span data-ttu-id="4a467-1376">En caso contrario, la representación de cadena de la <xref:System.Numerics.BigInteger> conserva solo los 50 dígitos más significativos del valor original y los datos se pueden perder al usar el <xref:System.Numerics.BigInteger.Parse%2A> método para restaurar el <xref:System.Numerics.BigInteger> valor.</span><span class="sxs-lookup"><span data-stu-id="4a467-1376">Otherwise, the string representation of the <xref:System.Numerics.BigInteger> preserves only the 50 most significant digits of the original value, and data may be lost when you use the <xref:System.Numerics.BigInteger.Parse%2A> method to restore the <xref:System.Numerics.BigInteger> value.</span></span>  
  
 <span data-ttu-id="4a467-1377">A diferencia de otros <xref:System.Globalization.NumberStyles> valores, que permiten, pero no requieren la presencia de elementos de estilo determinado de `value`, el <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> valor de estilo significa que los caracteres individuales en `value` siempre se interpretan como caracteres hexadecimales.</span><span class="sxs-lookup"><span data-stu-id="4a467-1377">Unlike the other <xref:System.Globalization.NumberStyles> values, which allow for, but do not require, the presence of particular style elements in `value`, the <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> style value means that the individual numeric characters in `value` are always interpreted as hexadecimal characters.</span></span> <span data-ttu-id="4a467-1378">Los caracteres hexadecimales válidos son 0-9, A-f y a-f.</span><span class="sxs-lookup"><span data-stu-id="4a467-1378">Valid hexadecimal characters are 0-9, A-F, and a-f.</span></span> <span data-ttu-id="4a467-1379">Los únicos otros marcadores que se pueden combinar con el `style` parámetro son <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> y <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4a467-1379">The only other flags that can be combined with the `style` parameter are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="4a467-1380">(El <xref:System.Globalization.NumberStyles> enumeración incluye un estilo de número compuesto <xref:System.Globalization.NumberStyles.HexNumber>, que incluye ambos marcadores de espacio en blanco.)</span><span class="sxs-lookup"><span data-stu-id="4a467-1380">(The <xref:System.Globalization.NumberStyles> enumeration includes a composite number style, <xref:System.Globalization.NumberStyles.HexNumber>, that includes both white-space flags.)</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4a467-1381">Si `value` es la representación de cadena de un número hexadecimal, no puede ir precedido por ninguna decoración (como `0x` o `&h`) que lo diferencie como un número hexadecimal.</span><span class="sxs-lookup"><span data-stu-id="4a467-1381">If `value` is the string representation of a hexadecimal number, it cannot be preceded by any decoration (such as `0x` or `&h`) that differentiates it as a hexadecimal number.</span></span> <span data-ttu-id="4a467-1382">Esto hace que un error de conversión.</span><span class="sxs-lookup"><span data-stu-id="4a467-1382">This causes the conversion to fail.</span></span>  
  
 <span data-ttu-id="4a467-1383">Si `value` es una cadena hexadecimal y la <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%29> método interpreta `value` como un número negativo que se almacenan utilizando dos representación del complemento si sus dos primeros dígitos hexadecimales son mayores o iguales a `0x80`.</span><span class="sxs-lookup"><span data-stu-id="4a467-1383">If `value` is a hexadecimal string, the <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%29> method interprets `value` as a negative number stored by using two's complement representation if its first two hexadecimal digits are greater than or equal to `0x80`.</span></span> <span data-ttu-id="4a467-1384">En otras palabras, el método interpreta el bit de orden superior del primer byte de `value` como el bit de signo.</span><span class="sxs-lookup"><span data-stu-id="4a467-1384">In other words, the method interprets the highest-order bit of the first byte in `value` as the sign bit.</span></span> <span data-ttu-id="4a467-1385">Para asegurarse de que una cadena hexadecimal se interpreta correctamente como un número positivo, el primer dígito de `value` debe tener un valor de cero.</span><span class="sxs-lookup"><span data-stu-id="4a467-1385">To make sure that a hexadecimal string is correctly interpreted as a positive number, the first digit in `value` must have a value of zero.</span></span> <span data-ttu-id="4a467-1386">Por ejemplo, el método interpreta `0x80` como un valor negativo, pero lo interpreta bien `0x080` o `0x0080` como un valor positivo.</span><span class="sxs-lookup"><span data-stu-id="4a467-1386">For example, the method interprets `0x80` as a negative value, but it interprets either `0x080` or `0x0080` as a positive value.</span></span> <span data-ttu-id="4a467-1387">El ejemplo siguiente muestra la diferencia entre las cadenas hexadecimales que representan valores positivos y negativos.</span><span class="sxs-lookup"><span data-stu-id="4a467-1387">The following example illustrates the difference between hexadecimal strings that represent negative and positive values.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Parse#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Parse/cs/ParseHex1.cs#3)]
 [!code-vb[System.Numerics.BigInteger.Parse#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Parse/vb/ParseHex1.vb#3)]  
  
 <span data-ttu-id="4a467-1388">El `value` parámetro se analiza mediante el uso de la información de formato en un <xref:System.Globalization.NumberFormatInfo> objeto que se inicializa para la referencia cultural actual del sistema.</span><span class="sxs-lookup"><span data-stu-id="4a467-1388">The `value` parameter is parsed by using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object that is initialized for the current system culture.</span></span> <span data-ttu-id="4a467-1389">Para especificar la referencia cultural cuya información de formato se usa para la operación de análisis, llame a la <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> de sobrecarga.</span><span class="sxs-lookup"><span data-stu-id="4a467-1389">To specify the culture whose formatting information is used for the parse operation, call the <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> overload.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a467-1390">El ejemplo siguiente muestra llamadas a la <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%29> método con varios valores posibles para el `style` parámetro.</span><span class="sxs-lookup"><span data-stu-id="4a467-1390">The following example illustrates calls to the <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%29> method with several possible values for the `style` parameter.</span></span> <span data-ttu-id="4a467-1391">Muestra cómo se interpreta una cadena como un valor hexadecimal y cómo denegar los espacios y firmar los símbolos.</span><span class="sxs-lookup"><span data-stu-id="4a467-1391">It illustrates how to interpret a string as a hexadecimal value, and how to disallow spaces and sign symbols.</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Parse#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Parse/cs/System.Numeric.BigInteger.Parse.cs#5)]
 [!code-vb[System.Numeric.BigInteger.Parse#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Parse/vb/System.Numeric.BigInteger.Parse.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4a467-1392"><paramref name="style" /> no es un valor <see cref="T:System.Globalization.NumberStyles" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-1392"><paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span></span>  
  
<span data-ttu-id="4a467-1393">O bien</span><span class="sxs-lookup"><span data-stu-id="4a467-1393">-or-</span></span> 
 <span data-ttu-id="4a467-1394"><paramref name="style" /> incluye la marca <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> o <see cref="F:System.Globalization.NumberStyles.HexNumber" /> junto con otro valor.</span><span class="sxs-lookup"><span data-stu-id="4a467-1394"><paramref name="style" /> includes the <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> or <see cref="F:System.Globalization.NumberStyles.HexNumber" /> flag along with another value.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4a467-1395"><paramref name="value" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-1395"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="4a467-1396"><paramref name="value" /> no cumple el modelo de entrada especificado por <see cref="T:System.Globalization.NumberStyles" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-1396"><paramref name="value" /> does not comply with the input pattern specified by <see cref="T:System.Globalization.NumberStyles" />.</span></span></exception>
        <altmember cref="Overload:System.Numerics.BigInteger.TryParse" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger Parse (string value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger Parse(string value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (value As String, provider As IFormatProvider) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger Parse(System::String ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member Parse : string * IFormatProvider -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.Parse (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4a467-1397">Cadena que contiene un número que se va a convertir.</span><span class="sxs-lookup"><span data-stu-id="4a467-1397">A string that contains a number to convert.</span></span></param>
        <param name="provider"><span data-ttu-id="4a467-1398">Un objeto que proporciona información de formato específica de la referencia cultural sobre <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-1398">An object that provides culture-specific formatting information about <paramref name="value" />.</span></span></param>
        <summary><span data-ttu-id="4a467-1399">Convierte la representación en forma de cadena de un número con el formato específico de la referencia cultural indicada en su <see cref="T:System.Numerics.BigInteger" /> equivalente.</span><span class="sxs-lookup"><span data-stu-id="4a467-1399">Converts the string representation of a number in a specified culture-specific format to its <see cref="T:System.Numerics.BigInteger" /> equivalent.</span></span></summary>
        <returns><span data-ttu-id="4a467-1400">Valor equivalente al número especificado en el parámetro <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-1400">A value that is equivalent to the number specified in the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a467-1401">El `value` parámetro debe ser la representación de cadena de un número de la forma siguiente:</span><span class="sxs-lookup"><span data-stu-id="4a467-1401">The `value` parameter should be the string representation of a number in the following form:</span></span>  
  
 <span data-ttu-id="4a467-1402">[*ws*][*sign*]*digits*[*ws*]</span><span class="sxs-lookup"><span data-stu-id="4a467-1402">[*ws*][*sign*]*digits*[*ws*]</span></span>  
  
 <span data-ttu-id="4a467-1403">Los elementos de los corchetes ([ y ]) son opcionales.</span><span class="sxs-lookup"><span data-stu-id="4a467-1403">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="4a467-1404">En esta tabla se describe cada elemento.</span><span class="sxs-lookup"><span data-stu-id="4a467-1404">The following table describes each element.</span></span>  
  
|<span data-ttu-id="4a467-1405">Elemento</span><span class="sxs-lookup"><span data-stu-id="4a467-1405">Element</span></span>|<span data-ttu-id="4a467-1406">Descripción</span><span class="sxs-lookup"><span data-stu-id="4a467-1406">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="4a467-1407">*ws*</span><span class="sxs-lookup"><span data-stu-id="4a467-1407">*ws*</span></span>|<span data-ttu-id="4a467-1408">Espacio en blanco opcional.</span><span class="sxs-lookup"><span data-stu-id="4a467-1408">Optional white space.</span></span>|  
|<span data-ttu-id="4a467-1409">*sign*</span><span class="sxs-lookup"><span data-stu-id="4a467-1409">*sign*</span></span>|<span data-ttu-id="4a467-1410">Un signo opcional.</span><span class="sxs-lookup"><span data-stu-id="4a467-1410">An optional sign.</span></span> <span data-ttu-id="4a467-1411">Caracteres de inicio de sesión válidos se determinan mediante la <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType> y <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType> propiedades de la <xref:System.Globalization.NumberFormatInfo> objeto devuelto por la `provider` del objeto <xref:System.IFormatProvider.GetFormat%2A> método.</span><span class="sxs-lookup"><span data-stu-id="4a467-1411">Valid sign characters are determined by the <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType> properties of the <xref:System.Globalization.NumberFormatInfo> object that is returned by the `provider` object's <xref:System.IFormatProvider.GetFormat%2A> method.</span></span>|  
|<span data-ttu-id="4a467-1412">*digits*</span><span class="sxs-lookup"><span data-stu-id="4a467-1412">*digits*</span></span>|<span data-ttu-id="4a467-1413">Una secuencia de dígitos que comprende del 0 al 9.</span><span class="sxs-lookup"><span data-stu-id="4a467-1413">A sequence of digits ranging from 0 to 9.</span></span> <span data-ttu-id="4a467-1414">Se omiten los ceros iniciales.</span><span class="sxs-lookup"><span data-stu-id="4a467-1414">Any leading zeros are ignored.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="4a467-1415">La cadena especificada por el `value` parámetro se interpreta usando el <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> estilo.</span><span class="sxs-lookup"><span data-stu-id="4a467-1415">The string specified by the `value` parameter is interpreted using the <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="4a467-1416">No puede contener cualquier separador de grupo o un separador decimal y no puede tener una parte decimal.</span><span class="sxs-lookup"><span data-stu-id="4a467-1416">It cannot contain any group separators or decimal separator, and it cannot have a decimal portion.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="4a467-1417">Si usas el <xref:System.Numerics.BigInteger.Parse%2A> método a la representación de cadena de ida y vuelta de un <xref:System.Numerics.BigInteger> valor que se generan mediante la <xref:System.Numerics.BigInteger.ToString%2A> método, debe usar el <xref:System.Numerics.BigInteger.ToString%28System.String%29?displayProperty=nameWithType> método con el especificador de formato "R" para generar la representación de cadena de la <xref:System.Numerics.BigInteger> valor.</span><span class="sxs-lookup"><span data-stu-id="4a467-1417">If you use the <xref:System.Numerics.BigInteger.Parse%2A> method to round-trip the string representation of a <xref:System.Numerics.BigInteger> value that was output by the <xref:System.Numerics.BigInteger.ToString%2A> method, you should use the <xref:System.Numerics.BigInteger.ToString%28System.String%29?displayProperty=nameWithType> method with the "R" format specifier to generate the string representation of the <xref:System.Numerics.BigInteger> value.</span></span> <span data-ttu-id="4a467-1418">En caso contrario, la representación de cadena de la <xref:System.Numerics.BigInteger> conserva solo los 50 dígitos más significativos del valor original y los datos se pueden perder al usar el <xref:System.Numerics.BigInteger.Parse%2A> método para restaurar el <xref:System.Numerics.BigInteger> valor.</span><span class="sxs-lookup"><span data-stu-id="4a467-1418">Otherwise, the string representation of the <xref:System.Numerics.BigInteger> preserves only the 50 most significant digits of the original value, and data may be lost when you use the <xref:System.Numerics.BigInteger.Parse%2A> method to restore the <xref:System.Numerics.BigInteger> value.</span></span>  
  
 <span data-ttu-id="4a467-1419">El `provider` parámetro es un <xref:System.IFormatProvider> implementación cuyo <xref:System.IFormatProvider.GetFormat%2A> método devuelve un <xref:System.Globalization.NumberFormatInfo> objeto que proporciona información de formato específica de la referencia cultural.</span><span class="sxs-lookup"><span data-stu-id="4a467-1419">The `provider` parameter is an <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific formatting information.</span></span> <span data-ttu-id="4a467-1420">Cuando el <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.IFormatProvider%29> se invoca el método, llama a la `provider` del parámetro <xref:System.IFormatProvider.GetFormat%2A> método y le pasa un <xref:System.Type> objeto que representa el <xref:System.Globalization.NumberFormatInfo> tipo.</span><span class="sxs-lookup"><span data-stu-id="4a467-1420">When the <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.IFormatProvider%29> method is invoked, it calls the `provider` parameter's <xref:System.IFormatProvider.GetFormat%2A> method and passes it a <xref:System.Type> object that represents the <xref:System.Globalization.NumberFormatInfo> type.</span></span> <span data-ttu-id="4a467-1421">El <xref:System.IFormatProvider.GetFormat%2A> método, a continuación, devuelve el <xref:System.Globalization.NumberFormatInfo> objeto que proporciona información sobre el formato de la `value` parámetro.</span><span class="sxs-lookup"><span data-stu-id="4a467-1421">The <xref:System.IFormatProvider.GetFormat%2A> method then returns the <xref:System.Globalization.NumberFormatInfo> object that provides information about the format of the `value` parameter.</span></span> <span data-ttu-id="4a467-1422">Hay tres formas de usar el `provider` parámetro para proporcionar información de formato personalizado para la operación de análisis:</span><span class="sxs-lookup"><span data-stu-id="4a467-1422">There are three ways to use the `provider` parameter to supply custom formatting information to the parse operation:</span></span>  
  
-   <span data-ttu-id="4a467-1423">Puede pasar un <xref:System.Globalization.CultureInfo> objeto que representa la referencia cultural que proporciona información de formato.</span><span class="sxs-lookup"><span data-stu-id="4a467-1423">You can pass a <xref:System.Globalization.CultureInfo> object that represents the culture that supplies formatting information.</span></span> <span data-ttu-id="4a467-1424">Su <xref:System.Globalization.CultureInfo.GetFormat%2A> método devuelve el <xref:System.Globalization.NumberFormatInfo> objeto que proporciona información de formato numérico para esa referencia cultural.</span><span class="sxs-lookup"><span data-stu-id="4a467-1424">Its <xref:System.Globalization.CultureInfo.GetFormat%2A> method returns the <xref:System.Globalization.NumberFormatInfo> object that provides numeric formatting information for that culture.</span></span>  
  
-   <span data-ttu-id="4a467-1425">Puede pasar los datos reales <xref:System.Globalization.NumberFormatInfo> objeto que proporciona información de formato numérico.</span><span class="sxs-lookup"><span data-stu-id="4a467-1425">You can pass the actual <xref:System.Globalization.NumberFormatInfo> object that provides numeric formatting information.</span></span> <span data-ttu-id="4a467-1426">(Su implementación de <xref:System.Globalization.NumberFormatInfo.GetFormat%2A> simplemente devuelve a sí mismo.)</span><span class="sxs-lookup"><span data-stu-id="4a467-1426">(Its implementation of <xref:System.Globalization.NumberFormatInfo.GetFormat%2A> just returns itself.)</span></span>  
  
-   <span data-ttu-id="4a467-1427">Puede pasar un objeto personalizado que implementa <xref:System.IFormatProvider>.</span><span class="sxs-lookup"><span data-stu-id="4a467-1427">You can pass a custom object that implements <xref:System.IFormatProvider>.</span></span> <span data-ttu-id="4a467-1428">Su <xref:System.IFormatProvider.GetFormat%2A> crea una instancia de método y devuelve el <xref:System.Globalization.NumberFormatInfo> objeto que proporciona información de formato.</span><span class="sxs-lookup"><span data-stu-id="4a467-1428">Its <xref:System.IFormatProvider.GetFormat%2A> method instantiates and returns the <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="4a467-1429">Si `provider` es `null`, el formato de `value` se interpreta basándose en la <xref:System.Globalization.NumberFormatInfo> objeto de la referencia cultural actual.</span><span class="sxs-lookup"><span data-stu-id="4a467-1429">If `provider` is `null`, the formatting of `value` is interpreted based on the <xref:System.Globalization.NumberFormatInfo> object of the current culture.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a467-1430">Los ejemplos siguientes muestran dos maneras de definir la tilde (~) como un signo negativo para dar formato a <xref:System.Numerics.BigInteger> valores.</span><span class="sxs-lookup"><span data-stu-id="4a467-1430">The following examples show two ways to define the tilde (~) as a negative sign for formatting <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="4a467-1431">Tenga en cuenta que para mostrar el <xref:System.Numerics.BigInteger> valores en el mismo formato que las cadenas originales, el código debe llamar a la <xref:System.Numerics.BigInteger.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> método y pásele el <xref:System.Globalization.NumberFormatInfo> objeto que proporciona información de formato.</span><span class="sxs-lookup"><span data-stu-id="4a467-1431">Note that to display the <xref:System.Numerics.BigInteger> values in the same format as the original strings, your code must call the <xref:System.Numerics.BigInteger.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> method and pass it the <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="4a467-1432">El primer ejemplo define una clase que implementa <xref:System.IFormatProvider> y usa el <xref:System.IFormatProvider.GetFormat%2A> método para devolver el <xref:System.Globalization.NumberFormatInfo> objeto que proporciona información de formato.</span><span class="sxs-lookup"><span data-stu-id="4a467-1432">The first example defines a class that implements <xref:System.IFormatProvider> and uses the <xref:System.IFormatProvider.GetFormat%2A> method to return the <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Parse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Parse/cs/System.Numeric.BigInteger.Parse.cs#2)]
 [!code-vb[System.Numeric.BigInteger.Parse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Parse/vb/System.Numeric.BigInteger.Parse.vb#2)]  
  
 <span data-ttu-id="4a467-1433">Un <xref:System.Numerics.BigInteger> , a continuación, se puede crear instancias de objeto con el código siguiente:</span><span class="sxs-lookup"><span data-stu-id="4a467-1433">A <xref:System.Numerics.BigInteger> object can then be instantiated with the following code:</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Parse#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Parse/cs/System.Numeric.BigInteger.Parse.cs#3)]
 [!code-vb[System.Numeric.BigInteger.Parse#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Parse/vb/System.Numeric.BigInteger.Parse.vb#3)]  
  
 <span data-ttu-id="4a467-1434">El segundo ejemplo es más sencillo.</span><span class="sxs-lookup"><span data-stu-id="4a467-1434">The second example is more straightforward.</span></span> <span data-ttu-id="4a467-1435">Pasa el <xref:System.Globalization.NumberFormatInfo> objeto que proporciona información de formato a la `provider` parámetro.</span><span class="sxs-lookup"><span data-stu-id="4a467-1435">It passes the <xref:System.Globalization.NumberFormatInfo> object that provides formatting information to the `provider` parameter.</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Parse#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Parse/cs/System.Numeric.BigInteger.Parse.cs#4)]
 [!code-vb[System.Numeric.BigInteger.Parse#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Parse/vb/System.Numeric.BigInteger.Parse.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4a467-1436"><paramref name="value" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-1436"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="4a467-1437"><paramref name="value" /> no tiene el formato correcto.</span><span class="sxs-lookup"><span data-stu-id="4a467-1437"><paramref name="value" /> is not in the correct format.</span></span></exception>
        <altmember cref="Overload:System.Numerics.BigInteger.TryParse" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger Parse (ReadOnlySpan&lt;char&gt; value, System.Globalization.NumberStyles style = System.Globalization.NumberStyles.Integer, IFormatProvider provider = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger Parse(valuetype System.ReadOnlySpan`1&lt;char&gt; value, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Parse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (value As ReadOnlySpan(Of Char), Optional style As NumberStyles = System.Globalization.NumberStyles.Integer, Optional provider As IFormatProvider = null) As BigInteger" />
      <MemberSignature Language="F#" Value="static member Parse : ReadOnlySpan&lt;char&gt; * System.Globalization.NumberStyles * IFormatProvider -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.Parse (value, style, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="style">To be added.</param>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger Parse (string value, System.Globalization.NumberStyles style, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger Parse(string value, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (value As String, style As NumberStyles, provider As IFormatProvider) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger Parse(System::String ^ value, System::Globalization::NumberStyles style, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member Parse : string * System.Globalization.NumberStyles * IFormatProvider -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.Parse (value, style, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4a467-1438">Cadena que contiene un número que se va a convertir.</span><span class="sxs-lookup"><span data-stu-id="4a467-1438">A string that contains a number to convert.</span></span></param>
        <param name="style"><span data-ttu-id="4a467-1439">Combinación bit a bit de los valores de enumeración que especifican el formato permitido de <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-1439">A bitwise combination of the enumeration values that specify the permitted format of <paramref name="value" />.</span></span></param>
        <param name="provider"><span data-ttu-id="4a467-1440">Un objeto que proporciona información de formato específica de la referencia cultural sobre <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-1440">An object that provides culture-specific formatting information about <paramref name="value" />.</span></span></param>
        <summary><span data-ttu-id="4a467-1441">Convierte la representación de cadena de un número con el estilo y el formato específico de la referencia cultural que se hayan especificado en su equivalente de <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-1441">Converts the string representation of a number in a specified style and culture-specific format to its <see cref="T:System.Numerics.BigInteger" /> equivalent.</span></span></summary>
        <returns><span data-ttu-id="4a467-1442">Valor equivalente al número especificado en el parámetro <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-1442">A value that is equivalent to the number specified in the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a467-1443">El `style` parámetro define los elementos de estilo (como espacios en blanco, el símbolo de signo positivo o negativo, el símbolo del separador de grupo o el símbolo de separador decimal) que se permiten en el `value` parámetro para la operación de análisis se realice correctamente.</span><span class="sxs-lookup"><span data-stu-id="4a467-1443">The `style` parameter defines the style elements (such as white space, the positive or negative sign symbol, the group separator symbol, or the decimal point symbol) that are allowed in the `value` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="4a467-1444">`styles` debe ser una combinación de marcas de bits de la <xref:System.Globalization.NumberStyles> enumeración.</span><span class="sxs-lookup"><span data-stu-id="4a467-1444">`styles` must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="4a467-1445">El `style` parámetro hace que este método de sobrecarga útil cuando `value` contiene la representación de cadena de un valor hexadecimal, cuando el sistema numérico (decimal o hexadecimal) representado por `value` se conoce en tiempo de ejecución, o cuando se desea permitir que el espacio en blanco o un signo de símbolos en `value`.</span><span class="sxs-lookup"><span data-stu-id="4a467-1445">The `style` parameter makes this method overload useful when `value` contains the string representation of a hexadecimal value, when the number system (decimal or hexadecimal) represented by `value` is known only at run time, or when you want to disallow white space or a sign symbol in `value`.</span></span>  
  
 <span data-ttu-id="4a467-1446">Dependiendo del valor de `style`, el `value` parámetro puede incluir los siguientes elementos:</span><span class="sxs-lookup"><span data-stu-id="4a467-1446">Depending on the value of `style`, the `value` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="4a467-1447">[*ws*][*$*][*sign*][*digits*,]*digits*[*.fractional_digits*][E[*sign*]*exponential_digits*][*ws*]</span><span class="sxs-lookup"><span data-stu-id="4a467-1447">[*ws*][*$*][*sign*][*digits*,]*digits*[*.fractional_digits*][E[*sign*]*exponential_digits*][*ws*]</span></span>  
  
 <span data-ttu-id="4a467-1448">Si `style` incluye <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>, el `value` parámetro puede incluir los siguientes elementos:</span><span class="sxs-lookup"><span data-stu-id="4a467-1448">If `style` includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>, the `value` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="4a467-1449">[*ws*]*hexdigits*[*ws*]</span><span class="sxs-lookup"><span data-stu-id="4a467-1449">[*ws*]*hexdigits*[*ws*]</span></span>  
  
 <span data-ttu-id="4a467-1450">Los elementos de los corchetes ([ y ]) son opcionales.</span><span class="sxs-lookup"><span data-stu-id="4a467-1450">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="4a467-1451">En esta tabla se describe cada elemento.</span><span class="sxs-lookup"><span data-stu-id="4a467-1451">The following table describes each element.</span></span>  
  
|<span data-ttu-id="4a467-1452">Elemento</span><span class="sxs-lookup"><span data-stu-id="4a467-1452">Element</span></span>|<span data-ttu-id="4a467-1453">Descripción</span><span class="sxs-lookup"><span data-stu-id="4a467-1453">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="4a467-1454">*ws*</span><span class="sxs-lookup"><span data-stu-id="4a467-1454">*ws*</span></span>|<span data-ttu-id="4a467-1455">Espacio en blanco opcional.</span><span class="sxs-lookup"><span data-stu-id="4a467-1455">Optional white space.</span></span> <span data-ttu-id="4a467-1456">Pueden aparecer espacios en blanco del principio de `value` si `style` incluye la <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> marca y puede aparecer al final de `value` si `style` incluye la <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> marca.</span><span class="sxs-lookup"><span data-stu-id="4a467-1456">White space can appear at the start of `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, and it can appear at the end of `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="4a467-1457">Un símbolo de moneda de la referencia cultural específica.</span><span class="sxs-lookup"><span data-stu-id="4a467-1457">A culture-specific currency symbol.</span></span> <span data-ttu-id="4a467-1458">Su posición en la cadena viene definida por el <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType> y <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> propiedades de la referencia cultural indican por el `provider` parámetro.</span><span class="sxs-lookup"><span data-stu-id="4a467-1458">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> properties of the culture indicated by the `provider` parameter.</span></span> <span data-ttu-id="4a467-1459">Símbolo de divisa de la referencia cultural actual puede aparecer en `value` si `style` incluye la <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> marca.</span><span class="sxs-lookup"><span data-stu-id="4a467-1459">The current culture's currency symbol can appear in `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="4a467-1460">*sign*</span><span class="sxs-lookup"><span data-stu-id="4a467-1460">*sign*</span></span>|<span data-ttu-id="4a467-1461">Un signo opcional.</span><span class="sxs-lookup"><span data-stu-id="4a467-1461">An optional sign.</span></span> <span data-ttu-id="4a467-1462">El inicio de sesión puede aparecer al principio de `value` si `style` incluye la <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> marca y puede aparecer al final de `value` si `style` incluye la <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> marca.</span><span class="sxs-lookup"><span data-stu-id="4a467-1462">The sign can appear at the start of `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag, and it can appear at the end of `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="4a467-1463">Se pueden utilizar paréntesis en `value` para indicar un valor negativo si `style` incluye la <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> marca.</span><span class="sxs-lookup"><span data-stu-id="4a467-1463">Parentheses can be used in `value` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="4a467-1464">*digits*</span><span class="sxs-lookup"><span data-stu-id="4a467-1464">*digits*</span></span><br /><br /> <span data-ttu-id="4a467-1465">*fractional_digits*</span><span class="sxs-lookup"><span data-stu-id="4a467-1465">*fractional_digits*</span></span><br /><br /> <span data-ttu-id="4a467-1466">*exponential_digits*</span><span class="sxs-lookup"><span data-stu-id="4a467-1466">*exponential_digits*</span></span>|<span data-ttu-id="4a467-1467">Una secuencia de dígitos del 0 al 9.</span><span class="sxs-lookup"><span data-stu-id="4a467-1467">A sequence of digits from 0 through 9.</span></span> <span data-ttu-id="4a467-1468">Para *dígitos fraccionarios*, solo es válido el dígito 0.</span><span class="sxs-lookup"><span data-stu-id="4a467-1468">For *fractional_digits*, only the digit 0 is valid.</span></span>|  
|<span data-ttu-id="4a467-1469">*,*</span><span class="sxs-lookup"><span data-stu-id="4a467-1469">*,*</span></span>|<span data-ttu-id="4a467-1470">Un símbolo de separador de grupo específicas de referencias culturales.</span><span class="sxs-lookup"><span data-stu-id="4a467-1470">A culture-specific group separator symbol.</span></span> <span data-ttu-id="4a467-1471">El símbolo de separador de grupos de la referencia cultural especificada por `provider` pueden aparecer en `value` si `style` incluye la <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> marca.</span><span class="sxs-lookup"><span data-stu-id="4a467-1471">The group separator symbol of the culture specified by `provider` can appear in `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="4a467-1472">*.*</span><span class="sxs-lookup"><span data-stu-id="4a467-1472">*.*</span></span>|<span data-ttu-id="4a467-1473">Un símbolo de separador de decimales de referencia cultural específica.</span><span class="sxs-lookup"><span data-stu-id="4a467-1473">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="4a467-1474">El símbolo de separador decimal de la referencia cultural designada por `provider` pueden aparecer en `value` si `style` incluye la <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> marca.</span><span class="sxs-lookup"><span data-stu-id="4a467-1474">The decimal point symbol of the culture designated by `provider` can appear in `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="4a467-1475">El dígito 0 puede aparecer como un dígito fraccionario para la operación de análisis se realice correctamente; Si *dígitos fraccionarios* incluye cualquier otro dígito, un <xref:System.FormatException> se produce.</span><span class="sxs-lookup"><span data-stu-id="4a467-1475">Only the digit 0 can appear as a fractional digit for the parse operation to succeed; if *fractional_digits* includes any other digit, a <xref:System.FormatException> is thrown.</span></span>|  
|<span data-ttu-id="4a467-1476">E</span><span class="sxs-lookup"><span data-stu-id="4a467-1476">E</span></span>|<span data-ttu-id="4a467-1477">La "e" o el carácter "E", lo que indica que el valor se representa en una notación exponencial (científica).</span><span class="sxs-lookup"><span data-stu-id="4a467-1477">The "e" or "E" character, which indicates that the value is represented in exponential (scientific) notation.</span></span> <span data-ttu-id="4a467-1478">El `value` parámetro puede representar un número en notación exponencial si `style` incluye la <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> marca.</span><span class="sxs-lookup"><span data-stu-id="4a467-1478">The `value` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="4a467-1479">*hexdigits*</span><span class="sxs-lookup"><span data-stu-id="4a467-1479">*hexdigits*</span></span>|<span data-ttu-id="4a467-1480">Una secuencia de dígitos hexadecimales de 0 a f o 0 hasta la f el.</span><span class="sxs-lookup"><span data-stu-id="4a467-1480">A sequence of hexadecimal digits from 0 through f, or 0 through F.</span></span>|  
  
> [!NOTE]
> <span data-ttu-id="4a467-1481">Terminación NUL (u+0000) caracteres en `s` son ignoradas por la operación de análisis, independientemente del valor de la `style` argumento.</span><span class="sxs-lookup"><span data-stu-id="4a467-1481">Any terminating NUL (U+0000) characters in `s` are ignored by the parsing operation, regardless of the value of the `style` argument.</span></span>

 <span data-ttu-id="4a467-1482">Una cadena formada únicamente por dígitos (que corresponde a la <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> estilo) siempre se analiza correctamente.</span><span class="sxs-lookup"><span data-stu-id="4a467-1482">A string with digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> style) always parses successfully.</span></span> <span data-ttu-id="4a467-1483">La mayoría de los restantes <xref:System.Globalization.NumberStyles> miembros controlan los elementos que pueden estar presentes, pero no tienen que estar presente en la cadena de entrada.</span><span class="sxs-lookup"><span data-stu-id="4a467-1483">Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be present, but are not required to be present, in the input string.</span></span> <span data-ttu-id="4a467-1484">La tabla siguiente se indica cómo individuales <xref:System.Globalization.NumberStyles> miembros afectan a los elementos que pueden estar presentes en `value`.</span><span class="sxs-lookup"><span data-stu-id="4a467-1484">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `value`.</span></span>  
  
|<span data-ttu-id="4a467-1485">Valor NumberStyles</span><span class="sxs-lookup"><span data-stu-id="4a467-1485">NumberStyles value</span></span>|<span data-ttu-id="4a467-1486">Elementos permitidos en valor además de dígitos</span><span class="sxs-lookup"><span data-stu-id="4a467-1486">Elements permitted in value in addition to digits</span></span>|  
|------------------------|-------------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None>|<span data-ttu-id="4a467-1487">El *dígitos* sólo elemento.</span><span class="sxs-lookup"><span data-stu-id="4a467-1487">The *digits* element only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint>|<span data-ttu-id="4a467-1488">El punto decimal (.) y *dígitos fraccionarios* elementos.</span><span class="sxs-lookup"><span data-stu-id="4a467-1488">The decimal point (.) and *fractional-digits* elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent>|<span data-ttu-id="4a467-1489">La "e" o el carácter "E", lo que indica una notación exponencial.</span><span class="sxs-lookup"><span data-stu-id="4a467-1489">The "e" or "E" character, which indicates exponential notation.</span></span> <span data-ttu-id="4a467-1490">junto con *dígitos exponenciales*.</span><span class="sxs-lookup"><span data-stu-id="4a467-1490">along with *exponential_digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite>|<span data-ttu-id="4a467-1491">El *ws* elemento situado al principio de `value`.</span><span class="sxs-lookup"><span data-stu-id="4a467-1491">The *ws* element at the start of `value`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite>|<span data-ttu-id="4a467-1492">El *ws* elemento al final de `value`.</span><span class="sxs-lookup"><span data-stu-id="4a467-1492">The *ws* element at the end of `value`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign>|<span data-ttu-id="4a467-1493">El *sesión* elemento situado al principio de `value`.</span><span class="sxs-lookup"><span data-stu-id="4a467-1493">The *sign* element at the start of `value`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign>|<span data-ttu-id="4a467-1494">El *sesión* elemento al final de `value`.</span><span class="sxs-lookup"><span data-stu-id="4a467-1494">The *sign* element at the end of `value`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses>|<span data-ttu-id="4a467-1495">El *sesión* elemento con la forma de paréntesis para delimitar el valor numérico.</span><span class="sxs-lookup"><span data-stu-id="4a467-1495">The *sign* element in the form of parentheses enclosing the numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands>|<span data-ttu-id="4a467-1496">El elemento separador (,) de grupo.</span><span class="sxs-lookup"><span data-stu-id="4a467-1496">The group separator (,) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol>|<span data-ttu-id="4a467-1497">El elemento de moneda ($).</span><span class="sxs-lookup"><span data-stu-id="4a467-1497">The currency ($) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.Currency>|<span data-ttu-id="4a467-1498">Todos los elementos.</span><span class="sxs-lookup"><span data-stu-id="4a467-1498">All elements.</span></span> <span data-ttu-id="4a467-1499">Sin embargo, `value` no puede representar un número hexadecimal o un número en notación exponencial.</span><span class="sxs-lookup"><span data-stu-id="4a467-1499">However, `value` cannot represent a hexadecimal number or a number in exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Float>|<span data-ttu-id="4a467-1500">El *ws* elemento al principio o al final de `value`, *sesión* al principio de `value`y el símbolo de separador decimal (.).</span><span class="sxs-lookup"><span data-stu-id="4a467-1500">The *ws* element at the start or end of `value`, *sign* at the start of `value`, and the decimal point (.) symbol.</span></span> <span data-ttu-id="4a467-1501">El `value` parámetro también puede utilizar la notación exponencial.</span><span class="sxs-lookup"><span data-stu-id="4a467-1501">The `value` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Number>|<span data-ttu-id="4a467-1502">El `ws`, `sign`, separador de grupos (,) y elementos de separador decimal (.).</span><span class="sxs-lookup"><span data-stu-id="4a467-1502">The `ws`, `sign`, group separator (,), and decimal point (.) elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.Any>|<span data-ttu-id="4a467-1503">Todos los elementos.</span><span class="sxs-lookup"><span data-stu-id="4a467-1503">All elements.</span></span> <span data-ttu-id="4a467-1504">Sin embargo, `value` no se puede representar un número hexadecimal.</span><span class="sxs-lookup"><span data-stu-id="4a467-1504">However, `value` cannot represent a hexadecimal number.</span></span>|  
  
> [!IMPORTANT]
>  <span data-ttu-id="4a467-1505">Si usas el <xref:System.Numerics.BigInteger.Parse%2A> método a la representación de cadena de ida y vuelta de un <xref:System.Numerics.BigInteger> valor que se generan mediante la <xref:System.Numerics.BigInteger.ToString%2A> método, debe usar el <xref:System.Numerics.BigInteger.ToString%28System.String%29?displayProperty=nameWithType> método con el especificador de formato "R" para generar la representación de cadena de la <xref:System.Numerics.BigInteger> valor.</span><span class="sxs-lookup"><span data-stu-id="4a467-1505">If you use the <xref:System.Numerics.BigInteger.Parse%2A> method to round-trip the string representation of a <xref:System.Numerics.BigInteger> value that was output by the <xref:System.Numerics.BigInteger.ToString%2A> method, you should use the <xref:System.Numerics.BigInteger.ToString%28System.String%29?displayProperty=nameWithType> method with the "R" format specifier to generate the string representation of the <xref:System.Numerics.BigInteger> value.</span></span> <span data-ttu-id="4a467-1506">En caso contrario, la representación de cadena de la <xref:System.Numerics.BigInteger> conserva solo los 50 dígitos más significativos del valor original y los datos se pueden perder al usar el <xref:System.Numerics.BigInteger.Parse%2A> método para restaurar el <xref:System.Numerics.BigInteger> valor.</span><span class="sxs-lookup"><span data-stu-id="4a467-1506">Otherwise, the string representation of the <xref:System.Numerics.BigInteger> preserves only the 50 most significant digits of the original value, and data may be lost when you use the <xref:System.Numerics.BigInteger.Parse%2A> method to restore the <xref:System.Numerics.BigInteger> value.</span></span>  
  
 <span data-ttu-id="4a467-1507">A diferencia de otros <xref:System.Globalization.NumberStyles> valores, que permiten pero no requieren la presencia de elementos de estilo determinado de `value`, el <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> valor de estilo significa que los caracteres individuales en `value` siempre se interpretan como caracteres hexadecimales.</span><span class="sxs-lookup"><span data-stu-id="4a467-1507">Unlike the other <xref:System.Globalization.NumberStyles> values, which allow for but do not require the presence of particular style elements in `value`, the <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> style value means that the individual numeric characters in `value` are always interpreted as hexadecimal characters.</span></span> <span data-ttu-id="4a467-1508">Los caracteres hexadecimales válidos son 0-9, A-f y a-f.</span><span class="sxs-lookup"><span data-stu-id="4a467-1508">Valid hexadecimal characters are 0-9, A-F, and a-f.</span></span> <span data-ttu-id="4a467-1509">Los únicos otros marcadores que se pueden combinar con el `style` parámetro son <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> y <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4a467-1509">The only other flags that can be combined with the `style` parameter are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="4a467-1510">(El <xref:System.Globalization.NumberStyles> enumeración incluye un estilo de número compuesto <xref:System.Globalization.NumberStyles.HexNumber>, que incluye ambos marcadores de espacio en blanco.)</span><span class="sxs-lookup"><span data-stu-id="4a467-1510">(The <xref:System.Globalization.NumberStyles> enumeration includes a composite number style, <xref:System.Globalization.NumberStyles.HexNumber>, that includes both white-space flags.)</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4a467-1511">Si `value` es la representación de cadena de un número hexadecimal, no puede ir precedido por ninguna decoración (como `0x` o `&h`) que lo diferencie como un número hexadecimal.</span><span class="sxs-lookup"><span data-stu-id="4a467-1511">If `value` is the string representation of a hexadecimal number, it cannot be preceded by any decoration (such as `0x` or `&h`) that differentiates it as a hexadecimal number.</span></span> <span data-ttu-id="4a467-1512">Esto hace que un error de conversión.</span><span class="sxs-lookup"><span data-stu-id="4a467-1512">This causes the conversion to fail.</span></span>  
  
 <span data-ttu-id="4a467-1513">Si `value` es una cadena hexadecimal y la <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%29> método interpreta `value` como un número negativo que se almacenan utilizando dos representación del complemento si sus dos primeros dígitos hexadecimales son mayores o iguales a `0x80`.</span><span class="sxs-lookup"><span data-stu-id="4a467-1513">If `value` is a hexadecimal string, the <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%29> method interprets `value` as a negative number stored by using two's complement representation if its first two hexadecimal digits are greater than or equal to `0x80`.</span></span> <span data-ttu-id="4a467-1514">En otras palabras, el método interpreta el bit de orden superior del primer byte de `value` como el bit de signo.</span><span class="sxs-lookup"><span data-stu-id="4a467-1514">In other words, the method interprets the highest-order bit of the first byte in `value` as the sign bit.</span></span> <span data-ttu-id="4a467-1515">Para asegurarse de que una cadena hexadecimal se interpreta correctamente como un número positivo, el primer dígito de `value` debe tener un valor de cero.</span><span class="sxs-lookup"><span data-stu-id="4a467-1515">To make sure that a hexadecimal string is correctly interpreted as a positive number, the first digit in `value` must have a value of zero.</span></span> <span data-ttu-id="4a467-1516">Por ejemplo, el método interpreta `0x80` como un valor negativo, pero lo interpreta bien `0x080` o `0x0080` como un valor positivo.</span><span class="sxs-lookup"><span data-stu-id="4a467-1516">For example, the method interprets `0x80` as a negative value, but it interprets either `0x080` or `0x0080` as a positive value.</span></span> <span data-ttu-id="4a467-1517">El ejemplo siguiente muestra la diferencia entre las cadenas hexadecimales que representan valores positivos y negativos.</span><span class="sxs-lookup"><span data-stu-id="4a467-1517">The following example illustrates the difference between hexadecimal strings that represent negative and positive values.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Parse#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Parse/cs/ParseHex1.cs#3)]
 [!code-vb[System.Numerics.BigInteger.Parse#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Parse/vb/ParseHex1.vb#3)]  
  
 <span data-ttu-id="4a467-1518">El `provider` parámetro es un <xref:System.IFormatProvider> implementación.</span><span class="sxs-lookup"><span data-stu-id="4a467-1518">The `provider` parameter is an <xref:System.IFormatProvider> implementation.</span></span> <span data-ttu-id="4a467-1519">Su <xref:System.IFormatProvider.GetFormat%2A> método devuelve un <xref:System.Globalization.NumberFormatInfo> objeto que proporciona información específica de la referencia cultural sobre el formato de `value`.</span><span class="sxs-lookup"><span data-stu-id="4a467-1519">Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific information about the format of `value`.</span></span> <span data-ttu-id="4a467-1520">Por lo general, `provider` puede ser cualquiera de las siguientes acciones:</span><span class="sxs-lookup"><span data-stu-id="4a467-1520">Typically, `provider` can be any one of the following:</span></span>  
  
-   <span data-ttu-id="4a467-1521">Un <xref:System.Globalization.CultureInfo> objeto que representa la referencia cultural que proporciona información de formato numérico.</span><span class="sxs-lookup"><span data-stu-id="4a467-1521">A <xref:System.Globalization.CultureInfo> object that represents the culture that provides numeric formatting information.</span></span> <span data-ttu-id="4a467-1522">Su <xref:System.Globalization.CultureInfo.GetFormat%2A> método devuelve el <xref:System.Globalization.NumberFormatInfo> objeto que proporciona información de formato numérico.</span><span class="sxs-lookup"><span data-stu-id="4a467-1522">Its <xref:System.Globalization.CultureInfo.GetFormat%2A> method returns the <xref:System.Globalization.NumberFormatInfo> object that provides numeric formatting information.</span></span>  
  
-   <span data-ttu-id="4a467-1523">Un <xref:System.Globalization.NumberFormatInfo> objeto que proporciona información de formato.</span><span class="sxs-lookup"><span data-stu-id="4a467-1523">A <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span> <span data-ttu-id="4a467-1524">(Su implementación de <xref:System.Globalization.NumberFormatInfo.GetFormat%2A> simplemente devuelve a sí mismo.)</span><span class="sxs-lookup"><span data-stu-id="4a467-1524">(Its implementation of <xref:System.Globalization.NumberFormatInfo.GetFormat%2A> just returns itself.)</span></span>  
  
-   <span data-ttu-id="4a467-1525">Un objeto personalizado que implementa <xref:System.IFormatProvider> y usa el <xref:System.Globalization.NumberFormatInfo.GetFormat%2A> método para crear instancias y devolver el <xref:System.Globalization.NumberFormatInfo> objeto que proporciona información de formato.</span><span class="sxs-lookup"><span data-stu-id="4a467-1525">A custom object that implements <xref:System.IFormatProvider> and uses the <xref:System.Globalization.NumberFormatInfo.GetFormat%2A> method to instantiate and return the <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="4a467-1526">Si `provider` es `null`, el <xref:System.Globalization.NumberFormatInfo> objeto se usa la referencia cultural actual.</span><span class="sxs-lookup"><span data-stu-id="4a467-1526">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> object for the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a467-1527">El ejemplo siguiente realiza varias llamadas a la <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> método con diferentes combinaciones de valores para el `style` y `provider` parámetros.</span><span class="sxs-lookup"><span data-stu-id="4a467-1527">The following example makes several calls to the <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> method using various combinations of values for the `style` and `provider` parameters.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Parse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Parse/cs/Parse1.cs#2)]
 [!code-vb[System.Numerics.BigInteger.Parse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Parse/vb/Parse1.vb#2)]  
  
 <span data-ttu-id="4a467-1528">Un número de las llamadas individuales para el <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> método pasa una instancia de la siguiente `BigIntegerFormatProvider` (clase), que define una tilde (~) como el signo negativo.</span><span class="sxs-lookup"><span data-stu-id="4a467-1528">A number of the individual calls to the <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> method pass an instance of the following `BigIntegerFormatProvider` class, which defines a tilde (~) as the negative sign.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Parse#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Parse/cs/Parse1.cs#4)]
 [!code-vb[System.Numerics.BigInteger.Parse#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Parse/vb/Parse1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4a467-1529"><paramref name="style" /> no es un valor <see cref="T:System.Globalization.NumberStyles" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-1529"><paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span></span>  
  
<span data-ttu-id="4a467-1530">O bien</span><span class="sxs-lookup"><span data-stu-id="4a467-1530">-or-</span></span> 
 <span data-ttu-id="4a467-1531"><paramref name="style" /> incluye la marca <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> o <see cref="F:System.Globalization.NumberStyles.HexNumber" /> junto con otro valor.</span><span class="sxs-lookup"><span data-stu-id="4a467-1531"><paramref name="style" /> includes the <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> or <see cref="F:System.Globalization.NumberStyles.HexNumber" /> flag along with another value.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4a467-1532"><paramref name="value" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-1532"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="4a467-1533"><paramref name="value" /> no cumple el modelo de entrada especificado por <paramref name="style" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-1533"><paramref name="value" /> does not comply with the input pattern specified by <paramref name="style" />.</span></span></exception>
        <altmember cref="Overload:System.Numerics.BigInteger.TryParse" />
      </Docs>
    </Member>
    <Member MemberName="Pow">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger Pow (System.Numerics.BigInteger value, int exponent);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger Pow(valuetype System.Numerics.BigInteger value, int32 exponent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Pow(System.Numerics.BigInteger,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Pow (value As BigInteger, exponent As Integer) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger Pow(System::Numerics::BigInteger value, int exponent);" />
      <MemberSignature Language="F#" Value="static member Pow : System.Numerics.BigInteger * int -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.Pow (value, exponent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
        <Parameter Name="exponent" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4a467-1534">Número que se va a elevar a la potencia especificada por <paramref name="exponent" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-1534">The number to raise to the <paramref name="exponent" /> power.</span></span></param>
        <param name="exponent"><span data-ttu-id="4a467-1535">Exponente al que se va a elevar <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-1535">The exponent to raise <paramref name="value" /> by.</span></span></param>
        <summary><span data-ttu-id="4a467-1536">Eleva un valor <see cref="T:System.Numerics.BigInteger" /> a la potencia del valor especificado.</span><span class="sxs-lookup"><span data-stu-id="4a467-1536">Raises a <see cref="T:System.Numerics.BigInteger" /> value to the power of a specified value.</span></span></summary>
        <returns><span data-ttu-id="4a467-1537">Resultado de elevar <paramref name="value" /> a la potencia <paramref name="exponent" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-1537">The result of raising <paramref name="value" /> to the <paramref name="exponent" /> power.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a467-1538">El <xref:System.Numerics.BigInteger.Pow%2A> método devuelve 1 si el valor del parámetro exponente es 0, o si los valores de la `value` y `exponent` parámetros son 0.</span><span class="sxs-lookup"><span data-stu-id="4a467-1538">The <xref:System.Numerics.BigInteger.Pow%2A> method returns 1 if the value of the exponent parameter is 0, or if the values of both the `value` and `exponent` parameters are 0.</span></span> <span data-ttu-id="4a467-1539">Si `exponent` es 1, el <xref:System.Numerics.BigInteger.Pow%2A> devuelve del método `value`.</span><span class="sxs-lookup"><span data-stu-id="4a467-1539">If `exponent` is 1, the <xref:System.Numerics.BigInteger.Pow%2A> method returns `value`.</span></span> <span data-ttu-id="4a467-1540">Si `value` es negativo, el método devuelve un resultado negativo.</span><span class="sxs-lookup"><span data-stu-id="4a467-1540">If `value` is negative, the method returns a negative result.</span></span>  
  
 <span data-ttu-id="4a467-1541">Este método corresponde a la <xref:System.Math.Pow%2A?displayProperty=nameWithType> método para tipos numéricos primitivos.</span><span class="sxs-lookup"><span data-stu-id="4a467-1541">This method corresponds to the <xref:System.Math.Pow%2A?displayProperty=nameWithType> method for primitive numeric types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a467-1542">El ejemplo siguiente ilustra el uso de exponenciación un <xref:System.Numerics.BigInteger> valor y un exponente cuyo valor comprendido entre 0 y 10.</span><span class="sxs-lookup"><span data-stu-id="4a467-1542">The following example illustrates exponentiation using a <xref:System.Numerics.BigInteger> value and an exponent whose value ranges from 0 to 10.</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#32](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#32)]
 [!code-vb[System.Numeric.BigInteger.Class#32](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#32)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="4a467-1543"><paramref name="exponent" /> es negativo.</span><span class="sxs-lookup"><span data-stu-id="4a467-1543"><paramref name="exponent" /> is negative.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Remainder">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger Remainder (System.Numerics.BigInteger dividend, System.Numerics.BigInteger divisor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger Remainder(valuetype System.Numerics.BigInteger dividend, valuetype System.Numerics.BigInteger divisor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Remainder(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Remainder (dividend As BigInteger, divisor As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger Remainder(System::Numerics::BigInteger dividend, System::Numerics::BigInteger divisor);" />
      <MemberSignature Language="F#" Value="static member Remainder : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.Remainder (dividend, divisor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dividend" Type="System.Numerics.BigInteger" />
        <Parameter Name="divisor" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="dividend"><span data-ttu-id="4a467-1544">Valor que se va a dividir.</span><span class="sxs-lookup"><span data-stu-id="4a467-1544">The value to be divided.</span></span></param>
        <param name="divisor"><span data-ttu-id="4a467-1545">Valor por el que se va a dividir.</span><span class="sxs-lookup"><span data-stu-id="4a467-1545">The value to divide by.</span></span></param>
        <summary><span data-ttu-id="4a467-1546">Realiza la división entera en dos valores <see cref="T:System.Numerics.BigInteger" /> y devuelve el resto.</span><span class="sxs-lookup"><span data-stu-id="4a467-1546">Performs integer division on two <see cref="T:System.Numerics.BigInteger" /> values and returns the remainder.</span></span></summary>
        <returns><span data-ttu-id="4a467-1547">Resto después de dividir <paramref name="dividend" /> por <paramref name="divisor" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-1547">The remainder after dividing <paramref name="dividend" /> by <paramref name="divisor" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a467-1548">El signo del resto es el signo de la `dividend` parámetro.</span><span class="sxs-lookup"><span data-stu-id="4a467-1548">The sign of the remainder is the sign of the `dividend` parameter.</span></span>  
  
 <span data-ttu-id="4a467-1549">El <xref:System.Numerics.BigInteger.Remainder%2A> método se implementa para los idiomas que no admiten operadores personalizados.</span><span class="sxs-lookup"><span data-stu-id="4a467-1549">The <xref:System.Numerics.BigInteger.Remainder%2A> method is implemented for languages that do not support custom operators.</span></span> <span data-ttu-id="4a467-1550">Su comportamiento es idéntico a la división utilizando el operador de módulo.</span><span class="sxs-lookup"><span data-stu-id="4a467-1550">Its behavior is identical to division using the modulus operator.</span></span>  
  
 <span data-ttu-id="4a467-1551">Si es necesario, el método realiza automáticamente la conversión implícita de otros tipos integrales para <xref:System.Numerics.BigInteger> objetos antes de realizar la operación de módulo.</span><span class="sxs-lookup"><span data-stu-id="4a467-1551">If necessary, the method automatically performs implicit conversion of other integral types to <xref:System.Numerics.BigInteger> objects before it performs the modulus operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a467-1552">En el ejemplo siguiente se compara el resto de la <xref:System.Numerics.BigInteger.DivRem%2A> método con el resto devuelto por la <xref:System.Numerics.BigInteger.Remainder%2A> método para establecer que los dos métodos calculan restos idénticos.</span><span class="sxs-lookup"><span data-stu-id="4a467-1552">The following example compares the remainder from the <xref:System.Numerics.BigInteger.DivRem%2A> method with the remainder returned by the <xref:System.Numerics.BigInteger.Remainder%2A> method to establish that the two methods calculate identical remainders.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Remainder#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Remainder/cs/Remainder1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.Remainder#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Remainder/vb/Remainder1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DivideByZeroException"><span data-ttu-id="4a467-1553">El valor de <paramref name="divisor" /> es 0 (cero).</span><span class="sxs-lookup"><span data-stu-id="4a467-1553"><paramref name="divisor" /> is 0 (zero).</span></span></exception>
        <altmember cref="M:System.Numerics.BigInteger.DivRem(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger@)" />
        <altmember cref="M:System.Numerics.BigInteger.op_Modulus(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public int Sign { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Sign" />
      <MemberSignature Language="DocId" Value="P:System.Numerics.BigInteger.Sign" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Sign As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Sign { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Sign : int" Usage="System.Numerics.BigInteger.Sign" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4a467-1554">Obtiene un número que indica el signo (negativo, positivo o cero) del objeto <see cref="T:System.Numerics.BigInteger" /> actual.</span><span class="sxs-lookup"><span data-stu-id="4a467-1554">Gets a number that indicates the sign (negative, positive, or zero) of the current <see cref="T:System.Numerics.BigInteger" /> object.</span></span></summary>
        <value><span data-ttu-id="4a467-1555">Número que indica el signo del objeto <see cref="T:System.Numerics.BigInteger" />, como se muestra en la tabla siguiente.</span><span class="sxs-lookup"><span data-stu-id="4a467-1555">A number that indicates the sign of the <see cref="T:System.Numerics.BigInteger" /> object, as shown in the following table.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="4a467-1556">número</span><span class="sxs-lookup"><span data-stu-id="4a467-1556">Number</span></span> 
 </term><description> <span data-ttu-id="4a467-1557">Descripción</span><span class="sxs-lookup"><span data-stu-id="4a467-1557">Description</span></span> 
 </description></listheader><item><term> <span data-ttu-id="4a467-1558">-1</span><span class="sxs-lookup"><span data-stu-id="4a467-1558">-1</span></span> 
 </term><description> <span data-ttu-id="4a467-1559">El valor de este objeto es negativo.</span><span class="sxs-lookup"><span data-stu-id="4a467-1559">The value of this object is negative.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="4a467-1560">0</span><span class="sxs-lookup"><span data-stu-id="4a467-1560">0</span></span> 
 </term><description> <span data-ttu-id="4a467-1561">El valor de este objeto es 0 (cero).</span><span class="sxs-lookup"><span data-stu-id="4a467-1561">The value of this object is 0 (zero).</span></span>  
  
 </description></item><item><term> <span data-ttu-id="4a467-1562">1</span><span class="sxs-lookup"><span data-stu-id="4a467-1562">1</span></span> 
 </term><description> <span data-ttu-id="4a467-1563">El valor de este objeto es positivo.</span><span class="sxs-lookup"><span data-stu-id="4a467-1563">The value of this object is positive.</span></span>  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a467-1564">El <xref:System.Numerics.BigInteger.Sign%2A> propiedad es equivalente a la <xref:System.Math.Sign%2A?displayProperty=nameWithType> método para los tipos numéricos primitivos.</span><span class="sxs-lookup"><span data-stu-id="4a467-1564">The <xref:System.Numerics.BigInteger.Sign%2A> property is equivalent to the <xref:System.Math.Sign%2A?displayProperty=nameWithType> method for the primitive numeric types.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Subtract">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger Subtract (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger Subtract(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Subtract(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Subtract (left As BigInteger, right As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger Subtract(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member Subtract : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.Subtract (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="4a467-1565">Valor del que se va a restar (minuendo).</span><span class="sxs-lookup"><span data-stu-id="4a467-1565">The value to subtract from (the minuend).</span></span></param>
        <param name="right"><span data-ttu-id="4a467-1566">Valor que se va a restar (sustraendo).</span><span class="sxs-lookup"><span data-stu-id="4a467-1566">The value to subtract (the subtrahend).</span></span></param>
        <summary><span data-ttu-id="4a467-1567">Resta un valor <see cref="T:System.Numerics.BigInteger" /> de otro y devuelve el resultado.</span><span class="sxs-lookup"><span data-stu-id="4a467-1567">Subtracts one <see cref="T:System.Numerics.BigInteger" /> value from another and returns the result.</span></span></summary>
        <returns><span data-ttu-id="4a467-1568">Resultado de restar <paramref name="right" /> de <paramref name="left" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-1568">The result of subtracting <paramref name="right" /> from <paramref name="left" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a467-1569">Los lenguajes que no admiten operadores personalizados pueden usar el <xref:System.Numerics.BigInteger.Subtract%2A> método para realizar la resta utilizando <xref:System.Numerics.BigInteger> valores.</span><span class="sxs-lookup"><span data-stu-id="4a467-1569">Languages that do not support custom operators can use the <xref:System.Numerics.BigInteger.Subtract%2A> method to perform subtraction using <xref:System.Numerics.BigInteger> values.</span></span>  
  
 <span data-ttu-id="4a467-1570">El <xref:System.Numerics.BigInteger.Subtract%2A> método es un suplente útil para el operador de resta al crear instancias de un <xref:System.Numerics.BigInteger> variable mediante la asignación la diferencia que da como resultado de la resta, como se muestra en el ejemplo siguiente.</span><span class="sxs-lookup"><span data-stu-id="4a467-1570">The <xref:System.Numerics.BigInteger.Subtract%2A> method is a useful substitute for the subtraction operator when instantiating a <xref:System.Numerics.BigInteger> variable by assigning it the difference that results from subtraction, as shown in the following example.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.OperationMethods#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.OperationMethods/cs/Multiply1.cs#3)]
 [!code-vb[System.Numerics.BigInteger.OperationMethods#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.OperationMethods/vb/Multiply1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Numerics.BigInteger.op_Subtraction(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (obj As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ obj) = IComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToByteArray">
      <MemberSignature Language="C#" Value="public byte[] ToByteArray ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] ToByteArray() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.ToByteArray" />
      <MemberSignature Language="VB.NET" Value="Public Function ToByteArray () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ ToByteArray();" />
      <MemberSignature Language="F#" Value="member this.ToByteArray : unit -&gt; byte[]" Usage="bigInteger.ToByteArray " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4a467-1571">Convierte un valor <see cref="T:System.Numerics.BigInteger" /> en una matriz de bytes.</span><span class="sxs-lookup"><span data-stu-id="4a467-1571">Converts a <see cref="T:System.Numerics.BigInteger" /> value to a byte array.</span></span></summary>
        <returns><span data-ttu-id="4a467-1572">Valor del objeto <see cref="T:System.Numerics.BigInteger" /> actual convertido en una matriz de bytes.</span><span class="sxs-lookup"><span data-stu-id="4a467-1572">The value of the current <see cref="T:System.Numerics.BigInteger" /> object converted to an array of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a467-1573">Los bytes individuales en la matriz devuelta por este método aparecen en orden little-endian.</span><span class="sxs-lookup"><span data-stu-id="4a467-1573">The individual bytes in the array returned by this method appear in little-endian order.</span></span> <span data-ttu-id="4a467-1574">Es decir, los bytes de orden inferior del valor preceden a los bytes de orden superior.</span><span class="sxs-lookup"><span data-stu-id="4a467-1574">That is, the lower-order bytes of the value precede the higher-order bytes.</span></span> <span data-ttu-id="4a467-1575">El primer byte de la matriz refleja los primeros ocho bits de la <xref:System.Numerics.BigInteger> valor, el segundo byte refleja la siguientes ocho bits y así sucesivamente.</span><span class="sxs-lookup"><span data-stu-id="4a467-1575">The first byte of the array reflects the first eight bits of the <xref:System.Numerics.BigInteger> value, the second byte reflects the next eight bits, and so on.</span></span> <span data-ttu-id="4a467-1576">Por ejemplo, el valor 1024 o 0 x 0400, se almacena como la siguiente matriz de dos bytes:</span><span class="sxs-lookup"><span data-stu-id="4a467-1576">For example, the value 1024, or 0x0400, is stored as the following array of two bytes:</span></span>  
  
|<span data-ttu-id="4a467-1577">Elemento</span><span class="sxs-lookup"><span data-stu-id="4a467-1577">Element</span></span>|<span data-ttu-id="4a467-1578">Valor de byte</span><span class="sxs-lookup"><span data-stu-id="4a467-1578">Byte value</span></span>|  
|-------------|----------------|  
|<span data-ttu-id="4a467-1579">0</span><span class="sxs-lookup"><span data-stu-id="4a467-1579">0</span></span>|<span data-ttu-id="4a467-1580">0x00</span><span class="sxs-lookup"><span data-stu-id="4a467-1580">0x00</span></span>|  
|<span data-ttu-id="4a467-1581">1</span><span class="sxs-lookup"><span data-stu-id="4a467-1581">1</span></span>|<span data-ttu-id="4a467-1582">0x04</span><span class="sxs-lookup"><span data-stu-id="4a467-1582">0x04</span></span>|  
  
 <span data-ttu-id="4a467-1583">Los valores negativos se escriben en la matriz utilizando dos representación del complemento en el formulario más compacto posible.</span><span class="sxs-lookup"><span data-stu-id="4a467-1583">Negative values are written to the array using two's complement representation in the most compact form possible.</span></span> <span data-ttu-id="4a467-1584">Por ejemplo, -1 se representa como un único byte cuyo valor es `0xFF` en lugar de como una matriz con varios elementos, tales como `0xFF`, `0xFF` o `0xFF`, `0xFF`, `0xFF`, `0xFF`.</span><span class="sxs-lookup"><span data-stu-id="4a467-1584">For example, -1 is represented as a single byte whose value is `0xFF` instead of as an array with multiple elements, such as `0xFF`, `0xFF` or `0xFF`, `0xFF`, `0xFF`, `0xFF`.</span></span>  
  
 <span data-ttu-id="4a467-1585">Dado que del complemento a dos representación siempre interpreta el bit de orden superior del último byte de la matriz (el byte en la posición <xref:System.Array.Length%2A?displayProperty=nameWithType> `- 1`) como el bit de signo, el método devuelve una matriz de bytes con un elemento adicional cuyo valor es cero para eliminar la ambigüedad de los valores positivos en caso contrario, se puede interpretar como la necesidad de sus bits de inicio de sesión.</span><span class="sxs-lookup"><span data-stu-id="4a467-1585">Because two's complement representation always interprets the highest-order bit of the last byte in the array (the byte at position <xref:System.Array.Length%2A?displayProperty=nameWithType>`- 1`) as the sign bit, the method returns a byte array with an extra element whose value is zero to disambiguate positive values that could otherwise be interpreted as having their sign bits set.</span></span> <span data-ttu-id="4a467-1586">Por ejemplo, el valor 120 o `0x78` se representa como una matriz de byte único: `0x78`.</span><span class="sxs-lookup"><span data-stu-id="4a467-1586">For example, the value 120 or `0x78` is represented as a single-byte array: `0x78`.</span></span> <span data-ttu-id="4a467-1587">Sin embargo, 128, o `0x80`, se representa como una matriz de bytes de dos: `0x80`, `0x00`.</span><span class="sxs-lookup"><span data-stu-id="4a467-1587">However, 128, or `0x80`, is represented as a two-byte array: `0x80`, `0x00`.</span></span>  
  
 <span data-ttu-id="4a467-1588">Puede devolver un <xref:System.Numerics.BigInteger> valor almacenarlo en una matriz de bytes y, a continuación, restaurarlo mediante el <xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29> constructor.</span><span class="sxs-lookup"><span data-stu-id="4a467-1588">You can round-trip a <xref:System.Numerics.BigInteger> value by storing it to a byte array and then restoring it using the <xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29> constructor.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="4a467-1589">Si el código modifica el valor de bytes individuales en la matriz devuelta por este método antes de restaurar el valor, debe asegurarse de que no cambian involuntariamente el bit de signo.</span><span class="sxs-lookup"><span data-stu-id="4a467-1589">If your code modifies the value of individual bytes in the array returned by this method before it restores the value, you must make sure that you do not unintentionally change the sign bit.</span></span> <span data-ttu-id="4a467-1590">Por ejemplo, si las modificaciones aumentan un valor positivo para que el orden más alto de bits en el último elemento de la matriz de bytes se establece, que puede agregar un nuevo byte cuyo valor es cero al final de la matriz.</span><span class="sxs-lookup"><span data-stu-id="4a467-1590">For example, if your modifications increase a positive value so that the highest-order bit in the last element of the byte array becomes set, you can add a new byte whose value is zero to the end of the array.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a467-1591">El ejemplo siguiente se muestra cómo algunas <xref:System.Numerics.BigInteger> valores se representan en matrices de bytes.</span><span class="sxs-lookup"><span data-stu-id="4a467-1591">The following example illustrates how some <xref:System.Numerics.BigInteger> values are represented in byte arrays.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.ToByteArray#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.ToByteArray/cs/ToByteArray1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.ToByteArray#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.ToByteArray/vb/ToByteArray1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToByteArray">
      <MemberSignature Language="C#" Value="public byte[] ToByteArray (bool isUnsigned = false, bool isBigEndian = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] ToByteArray(bool isUnsigned, bool isBigEndian) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.ToByteArray(System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToByteArray (Optional isUnsigned As Boolean = false, Optional isBigEndian As Boolean = false) As Byte()" />
      <MemberSignature Language="F#" Value="member this.ToByteArray : bool * bool -&gt; byte[]" Usage="bigInteger.ToByteArray (isUnsigned, isBigEndian)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isUnsigned" Type="System.Boolean" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="isBigEndian" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="isUnsigned">To be added.</param>
        <param name="isBigEndian">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4a467-1592">Convierte el valor numérico del objeto <see cref="T:System.Numerics.BigInteger" /> actual en su representación de cadena equivalente.</span><span class="sxs-lookup"><span data-stu-id="4a467-1592">Converts the numeric value of the current <see cref="T:System.Numerics.BigInteger" /> object to its equivalent string representation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="bigInteger.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4a467-1593">Convierte el valor numérico del objeto <see cref="T:System.Numerics.BigInteger" /> actual en su representación de cadena equivalente.</span><span class="sxs-lookup"><span data-stu-id="4a467-1593">Converts the numeric value of the current <see cref="T:System.Numerics.BigInteger" /> object to its equivalent string representation.</span></span></summary>
        <returns><span data-ttu-id="4a467-1594">Representación de cadena del valor <see cref="T:System.Numerics.BigInteger" /> actual.</span><span class="sxs-lookup"><span data-stu-id="4a467-1594">The string representation of the current <see cref="T:System.Numerics.BigInteger" /> value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a467-1595">El <xref:System.Numerics.BigInteger.ToString> método formatos un <xref:System.Numerics.BigInteger> valor en la "R" o de ida y vuelta, formato de la referencia cultural actual.</span><span class="sxs-lookup"><span data-stu-id="4a467-1595">The <xref:System.Numerics.BigInteger.ToString> method formats a <xref:System.Numerics.BigInteger> value in the "R", or round-trip, format of the current culture.</span></span> <span data-ttu-id="4a467-1596">Si desea especificar un formato diferente o la referencia cultural, use las otras sobrecargas de los <xref:System.Numerics.BigInteger.ToString%2A> método, como se indica a continuación:</span><span class="sxs-lookup"><span data-stu-id="4a467-1596">If you want to specify a different format or culture, use the other overloads of the <xref:System.Numerics.BigInteger.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="4a467-1597">Para usar el formato</span><span class="sxs-lookup"><span data-stu-id="4a467-1597">To use format</span></span>|<span data-ttu-id="4a467-1598">Para la referencia cultural</span><span class="sxs-lookup"><span data-stu-id="4a467-1598">For culture</span></span>|<span data-ttu-id="4a467-1599">Use la sobrecarga</span><span class="sxs-lookup"><span data-stu-id="4a467-1599">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="4a467-1600">Formato Round-Trip ("R")</span><span class="sxs-lookup"><span data-stu-id="4a467-1600">Round-trip ("R") format</span></span>|<span data-ttu-id="4a467-1601">Una referencia cultural específica</span><span class="sxs-lookup"><span data-stu-id="4a467-1601">A specific culture</span></span>|<xref:System.Numerics.BigInteger.ToString%2A>|  
|<span data-ttu-id="4a467-1602">Un formato concreto</span><span class="sxs-lookup"><span data-stu-id="4a467-1602">A specific format</span></span>|<span data-ttu-id="4a467-1603">Referencia cultural de forma predeterminada (actual)</span><span class="sxs-lookup"><span data-stu-id="4a467-1603">Default (current) culture</span></span>|<xref:System.Numerics.BigInteger.ToString%28System.String%29>|  
|<span data-ttu-id="4a467-1604">Un formato concreto</span><span class="sxs-lookup"><span data-stu-id="4a467-1604">A specific format</span></span>|<span data-ttu-id="4a467-1605">Una referencia cultural específica</span><span class="sxs-lookup"><span data-stu-id="4a467-1605">A specific culture</span></span>|<xref:System.Numerics.BigInteger.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="4a467-1606">La representación de cadena de la <xref:System.Numerics.BigInteger> valor incluye un signo negativo si su valor es negativo y una secuencia de dígitos comprendidos del 0 al 9 sin ceros iniciales.</span><span class="sxs-lookup"><span data-stu-id="4a467-1606">The string representation of the <xref:System.Numerics.BigInteger> value includes a negative sign if its value is negative, and a sequence of digits ranging from 0 to 9 without leading zeros.</span></span> <span data-ttu-id="4a467-1607">El signo negativo está definido por el <xref:System.Globalization.NumberFormatInfo> objeto para la referencia cultural actual.</span><span class="sxs-lookup"><span data-stu-id="4a467-1607">The negative sign is defined by the <xref:System.Globalization.NumberFormatInfo> object for the current culture.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a467-1608">El ejemplo siguiente se muestra un <xref:System.Numerics.BigInteger> valor utilizando el valor predeterminado <xref:System.Numerics.BigInteger.ToString> método.</span><span class="sxs-lookup"><span data-stu-id="4a467-1608">The following example displays a <xref:System.Numerics.BigInteger> value by using the default <xref:System.Numerics.BigInteger.ToString> method.</span></span> <span data-ttu-id="4a467-1609">También muestra las representaciones de cadena de la <xref:System.Numerics.BigInteger> valor que resulta de usar algunos especificadores de formato estándar.</span><span class="sxs-lookup"><span data-stu-id="4a467-1609">It also displays the string representations of the <xref:System.Numerics.BigInteger> value that results from using some standard format specifiers.</span></span> <span data-ttu-id="4a467-1610">Los ejemplos se muestran utilizando las convenciones de formato de la referencia cultural en-US.</span><span class="sxs-lookup"><span data-stu-id="4a467-1610">The examples are displayed using the formatting conventions of the en-US culture.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.ToString/cs/ToString1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.ToString/vb/ToString1.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/base-types/standard-numeric-format-strings.md"><span data-ttu-id="4a467-1611">Cadenas con formato numérico estándar</span><span class="sxs-lookup"><span data-stu-id="4a467-1611">Standard Numeric Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-numeric-format-strings.md"><span data-ttu-id="4a467-1612">Cadenas con formato numérico personalizado</span><span class="sxs-lookup"><span data-stu-id="4a467-1612">Custom Numeric Format Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.ToString : IFormatProvider -&gt; string" Usage="bigInteger.ToString provider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="4a467-1613">Objeto que proporciona información de formato específica de la referencia cultural.</span><span class="sxs-lookup"><span data-stu-id="4a467-1613">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="4a467-1614">Convierte el valor numérico del objeto <see cref="T:System.Numerics.BigInteger" /> actual en su representación de cadena equivalente usando la información de formato específica de la referencia cultural indicada.</span><span class="sxs-lookup"><span data-stu-id="4a467-1614">Converts the numeric value of the current <see cref="T:System.Numerics.BigInteger" /> object to its equivalent string representation by using the specified culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="4a467-1615">Representación de cadena del valor <see cref="T:System.Numerics.BigInteger" /> actual en el formato especificado por el parámetro <paramref name="provider" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-1615">The string representation of the current <see cref="T:System.Numerics.BigInteger" /> value in the format specified by the <paramref name="provider" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a467-1616">El <xref:System.Numerics.BigInteger.ToString%28System.IFormatProvider%29> método formatos un <xref:System.Numerics.BigInteger> valor en la "R" o de ida y vuelta, dar formato mediante la <xref:System.Globalization.NumberFormatInfo> objeto de una referencia cultural especificada.</span><span class="sxs-lookup"><span data-stu-id="4a467-1616">The <xref:System.Numerics.BigInteger.ToString%28System.IFormatProvider%29> method formats a <xref:System.Numerics.BigInteger> value in the "R", or round-trip, format by using the <xref:System.Globalization.NumberFormatInfo> object of a specified culture.</span></span> <span data-ttu-id="4a467-1617">Si desea especificar un formato diferente o la referencia cultural actual, use las otras sobrecargas de los <xref:System.Numerics.BigInteger.ToString%2A> método, como se indica a continuación:</span><span class="sxs-lookup"><span data-stu-id="4a467-1617">If you want to specify a different format or the current culture, use the other overloads of the <xref:System.Numerics.BigInteger.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="4a467-1618">Para usar el formato</span><span class="sxs-lookup"><span data-stu-id="4a467-1618">To use format</span></span>|<span data-ttu-id="4a467-1619">Para la referencia cultural</span><span class="sxs-lookup"><span data-stu-id="4a467-1619">For culture</span></span>|<span data-ttu-id="4a467-1620">Use la sobrecarga</span><span class="sxs-lookup"><span data-stu-id="4a467-1620">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="4a467-1621">Formato Round-Trip ("R")</span><span class="sxs-lookup"><span data-stu-id="4a467-1621">Round-trip ("R") format</span></span>|<span data-ttu-id="4a467-1622">Referencia cultural de forma predeterminada (actual)</span><span class="sxs-lookup"><span data-stu-id="4a467-1622">Default (current) culture</span></span>|<xref:System.Numerics.BigInteger.ToString>|  
|<span data-ttu-id="4a467-1623">Un formato concreto</span><span class="sxs-lookup"><span data-stu-id="4a467-1623">A specific format</span></span>|<span data-ttu-id="4a467-1624">Referencia cultural de forma predeterminada (actual)</span><span class="sxs-lookup"><span data-stu-id="4a467-1624">Default (current) culture</span></span>|<xref:System.Numerics.BigInteger.ToString%28System.String%29>|  
|<span data-ttu-id="4a467-1625">Un formato concreto</span><span class="sxs-lookup"><span data-stu-id="4a467-1625">A specific format</span></span>|<span data-ttu-id="4a467-1626">Una referencia cultural específica</span><span class="sxs-lookup"><span data-stu-id="4a467-1626">A specific culture</span></span>|<xref:System.Numerics.BigInteger.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="4a467-1627">El `provider` parámetro es un <xref:System.IFormatProvider> implementación.</span><span class="sxs-lookup"><span data-stu-id="4a467-1627">The `provider` parameter is an <xref:System.IFormatProvider> implementation.</span></span> <span data-ttu-id="4a467-1628">Su <xref:System.IFormatProvider.GetFormat%2A> método devuelve un <xref:System.Globalization.NumberFormatInfo> objeto que proporciona información específica de la referencia cultural sobre el formato de la cadena devuelta por este método.</span><span class="sxs-lookup"><span data-stu-id="4a467-1628">Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific information about the format of the string returned by this method.</span></span> <span data-ttu-id="4a467-1629">Si `provider` es `null`, <xref:System.Numerics.BigInteger> valor se representa con la <xref:System.Globalization.NumberFormatInfo> objeto de la referencia cultural actual.</span><span class="sxs-lookup"><span data-stu-id="4a467-1629">If `provider` is `null`, the <xref:System.Numerics.BigInteger> value is formatted using the <xref:System.Globalization.NumberFormatInfo> object of the current culture.</span></span> <span data-ttu-id="4a467-1630">La única propiedad de la <xref:System.Globalization.NumberFormatInfo> objeto que controla la representación de cadena de la <xref:System.Numerics.BigInteger> valor mediante el especificador de formato general es <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType>, que define el carácter que representa el signo negativo.</span><span class="sxs-lookup"><span data-stu-id="4a467-1630">The only property of the <xref:System.Globalization.NumberFormatInfo> object that controls the string representation of the <xref:System.Numerics.BigInteger> value using the general format specifier is <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType>, which defines the character that represents the negative sign.</span></span>  
  
 <span data-ttu-id="4a467-1631">El `provider` parámetro puede ser uno de los siguientes:</span><span class="sxs-lookup"><span data-stu-id="4a467-1631">The `provider` parameter can be one of the following:</span></span>  
  
-   <span data-ttu-id="4a467-1632">Un <xref:System.Globalization.CultureInfo> objeto que representa la referencia cultural que proporciona información de formato.</span><span class="sxs-lookup"><span data-stu-id="4a467-1632">A <xref:System.Globalization.CultureInfo> object that represents the culture that supplies formatting information.</span></span>  
  
-   <span data-ttu-id="4a467-1633">La <xref:System.Globalization.NumberFormatInfo> objeto que proporciona información de formato.</span><span class="sxs-lookup"><span data-stu-id="4a467-1633">The <xref:System.Globalization.NumberFormatInfo> object that supplies formatting information.</span></span>  
  
-   <span data-ttu-id="4a467-1634">Un objeto personalizado que implementa <xref:System.IFormatProvider>.</span><span class="sxs-lookup"><span data-stu-id="4a467-1634">A custom object that implements <xref:System.IFormatProvider>.</span></span> <span data-ttu-id="4a467-1635">Su <xref:System.IFormatProvider.GetFormat%2A> método devuelve el <xref:System.Globalization.NumberFormatInfo> objeto que proporciona información de formato.</span><span class="sxs-lookup"><span data-stu-id="4a467-1635">Its <xref:System.IFormatProvider.GetFormat%2A> method returns the <xref:System.Globalization.NumberFormatInfo> object that supplies formatting information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a467-1636">El ejemplo siguiente se crea una instancia personalizada <xref:System.Globalization.NumberFormatInfo> objeto que define la tilde (~) como un signo negativo.</span><span class="sxs-lookup"><span data-stu-id="4a467-1636">The following example instantiates a custom <xref:System.Globalization.NumberFormatInfo> object that defines the tilde (~) as a negative sign.</span></span> <span data-ttu-id="4a467-1637">El <xref:System.Numerics.BigInteger.ToString%28System.IFormatProvider%29> método, a continuación, usa personalizado <xref:System.Globalization.NumberFormatInfo> objeto para mostrar un valor negativo <xref:System.Numerics.BigInteger> valor.</span><span class="sxs-lookup"><span data-stu-id="4a467-1637">The <xref:System.Numerics.BigInteger.ToString%28System.IFormatProvider%29> method then uses the custom <xref:System.Globalization.NumberFormatInfo> object to display a negative <xref:System.Numerics.BigInteger> value.</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.ToString/cs/System.Numeric.BigInteger.ToString.cs#1)]
 [!code-vb[System.Numeric.BigInteger.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.ToString/vb/System.Numeric.BigInteger.ToString.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.ToString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(System::String ^ format);" />
      <MemberSignature Language="F#" Value="override this.ToString : string -&gt; string" Usage="bigInteger.ToString format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="4a467-1638">Cadena de formato numérico estándar o personalizada.</span><span class="sxs-lookup"><span data-stu-id="4a467-1638">A standard or custom numeric format string.</span></span></param>
        <summary><span data-ttu-id="4a467-1639">Convierte el valor numérico del objeto <see cref="T:System.Numerics.BigInteger" /> actual en su representación de cadena equivalente con el formato especificado.</span><span class="sxs-lookup"><span data-stu-id="4a467-1639">Converts the numeric value of the current <see cref="T:System.Numerics.BigInteger" /> object to its equivalent string representation by using the specified format.</span></span></summary>
        <returns><span data-ttu-id="4a467-1640">Representación de cadena del valor <see cref="T:System.Numerics.BigInteger" /> actual en el formato especificado por el parámetro <paramref name="format" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-1640">The string representation of the current <see cref="T:System.Numerics.BigInteger" /> value in the format specified by the <paramref name="format" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a467-1641">El <xref:System.Numerics.BigInteger.ToString%28System.String%29> método formatos un <xref:System.Numerics.BigInteger> valor en un formato especificado mediante el uso de un <xref:System.Globalization.NumberFormatInfo> objeto que representa las convenciones de la referencia cultural actual.</span><span class="sxs-lookup"><span data-stu-id="4a467-1641">The <xref:System.Numerics.BigInteger.ToString%28System.String%29> method formats a <xref:System.Numerics.BigInteger> value in a specified format by using a <xref:System.Globalization.NumberFormatInfo> object that represents the conventions of the current culture.</span></span> <span data-ttu-id="4a467-1642">Si desea usar la "R" o el envío y recepción, dar formato o especificar una referencia cultural diferente, use las otras sobrecargas de los <xref:System.Numerics.BigInteger.ToString%2A> método, como se indica a continuación:</span><span class="sxs-lookup"><span data-stu-id="4a467-1642">If you want to use the "R", or round-trip, format or specify a different culture, use the other overloads of the <xref:System.Numerics.BigInteger.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="4a467-1643">Para usar el formato</span><span class="sxs-lookup"><span data-stu-id="4a467-1643">To use format</span></span>|<span data-ttu-id="4a467-1644">Para la referencia cultural</span><span class="sxs-lookup"><span data-stu-id="4a467-1644">For culture</span></span>|<span data-ttu-id="4a467-1645">Use la sobrecarga</span><span class="sxs-lookup"><span data-stu-id="4a467-1645">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="4a467-1646">Formato Round-Trip ("R")</span><span class="sxs-lookup"><span data-stu-id="4a467-1646">Round-trip ("R") format</span></span>|<span data-ttu-id="4a467-1647">Referencia cultural de forma predeterminada (actual)</span><span class="sxs-lookup"><span data-stu-id="4a467-1647">Default (current) culture</span></span>|<xref:System.Numerics.BigInteger.ToString>|  
|<span data-ttu-id="4a467-1648">Formato Round-Trip ("R")</span><span class="sxs-lookup"><span data-stu-id="4a467-1648">Round-trip ("R") format</span></span>|<span data-ttu-id="4a467-1649">Una referencia cultural específica</span><span class="sxs-lookup"><span data-stu-id="4a467-1649">A specific culture</span></span>|<xref:System.Numerics.BigInteger.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="4a467-1650">Un formato concreto</span><span class="sxs-lookup"><span data-stu-id="4a467-1650">A specific format</span></span>|<span data-ttu-id="4a467-1651">Una referencia cultural específica</span><span class="sxs-lookup"><span data-stu-id="4a467-1651">A specific culture</span></span>|<xref:System.Numerics.BigInteger.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="4a467-1652">El `format` parámetro puede ser cualquier tipo válido [cadena numérica estándar](~/docs/standard/base-types/standard-numeric-format-strings.md), o cualquier combinación de [cadenas de formato numérico personalizado](~/docs/standard/base-types/custom-numeric-format-strings.md).</span><span class="sxs-lookup"><span data-stu-id="4a467-1652">The `format` parameter can be any valid [standard numeric string](~/docs/standard/base-types/standard-numeric-format-strings.md), or any combination of [custom numeric format strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span> <span data-ttu-id="4a467-1653">Si `format` es igual a <xref:System.String.Empty?displayProperty=nameWithType> o es `null`, el valor devuelto del actual <xref:System.Numerics.BigInteger> objeto tiene formato con el especificador de formato de ida y vuelta ("R").</span><span class="sxs-lookup"><span data-stu-id="4a467-1653">If `format` is equal to <xref:System.String.Empty?displayProperty=nameWithType> or is `null`, the return value of the current <xref:System.Numerics.BigInteger> object is formatted with the round-trip format specifier ("R").</span></span> <span data-ttu-id="4a467-1654">Si `format` es cualquier otro valor, el método inicia una <xref:System.FormatException>.</span><span class="sxs-lookup"><span data-stu-id="4a467-1654">If `format` is any other value, the method throws a <xref:System.FormatException>.</span></span>  
  
 <span data-ttu-id="4a467-1655">.NET Framework proporciona una amplia compatibilidad de formato, que se describe con más detalle en los temas de formato siguientes:</span><span class="sxs-lookup"><span data-stu-id="4a467-1655">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="4a467-1656">Para obtener más información sobre los especificadores de formato numérico, vea [cadenas de formato numérico estándar](~/docs/standard/base-types/standard-numeric-format-strings.md) y [cadenas con formato numérico personalizado](~/docs/standard/base-types/custom-numeric-format-strings.md).</span><span class="sxs-lookup"><span data-stu-id="4a467-1656">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="4a467-1657">Para obtener más información sobre la compatibilidad con formato en .NET Framework, vea [aplicar formato a tipos](~/docs/standard/base-types/formatting-types.md).</span><span class="sxs-lookup"><span data-stu-id="4a467-1657">For more information about support for formatting in the .NET Framework, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="4a467-1658">El formato de la cadena devuelta viene determinada por la <xref:System.Globalization.NumberFormatInfo> objeto para la referencia cultural actual.</span><span class="sxs-lookup"><span data-stu-id="4a467-1658">The format of the returned string is determined by the <xref:System.Globalization.NumberFormatInfo> object for the current culture.</span></span> <span data-ttu-id="4a467-1659">En función de la `format` parámetro, este objeto controla símbolos como el signo negativo, el separador de grupos y el símbolo de separador decimal en la cadena de salida.</span><span class="sxs-lookup"><span data-stu-id="4a467-1659">Depending on the `format` parameter, this object controls symbols such as the negative sign, the group separator, and the decimal point symbol in the output string.</span></span> <span data-ttu-id="4a467-1660">Para proporcionar información de formato para las referencias culturales distintas de la referencia cultural actual, llame a la <xref:System.Numerics.BigInteger.ToString%28System.String%2CSystem.IFormatProvider%29> de sobrecarga.</span><span class="sxs-lookup"><span data-stu-id="4a467-1660">To provide formatting information for cultures other than the current culture, call the <xref:System.Numerics.BigInteger.ToString%28System.String%2CSystem.IFormatProvider%29> overload.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a467-1661">En el ejemplo siguiente se inicializa un <xref:System.Numerics.BigInteger> valor y lo muestra mediante el uso de las cadenas de formato estándar y algunas cadenas de formato personalizado.</span><span class="sxs-lookup"><span data-stu-id="4a467-1661">The following example initializes a <xref:System.Numerics.BigInteger> value and displays it by using each standard format string and some custom format strings.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.ToString#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.ToString/cs/ToString1.cs#3)]
 [!code-vb[System.Numerics.BigInteger.ToString#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.ToString/vb/ToString1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="4a467-1662"><paramref name="format" /> no es una cadena de formato válido.</span><span class="sxs-lookup"><span data-stu-id="4a467-1662"><paramref name="format" /> is not a valid format string.</span></span></exception>
        <related type="Article" href="~/docs/standard/base-types/standard-numeric-format-strings.md"><span data-ttu-id="4a467-1663">Cadenas con formato numérico estándar</span><span class="sxs-lookup"><span data-stu-id="4a467-1663">Standard Numeric Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-numeric-format-strings.md"><span data-ttu-id="4a467-1664">Cadenas con formato numérico personalizado</span><span class="sxs-lookup"><span data-stu-id="4a467-1664">Custom Numeric Format Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(string format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(System::String ^ format, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.ToString : string * IFormatProvider -&gt; string" Usage="bigInteger.ToString (format, provider)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormattable.ToString(System.String,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="4a467-1665">Cadena de formato numérico estándar o personalizada.</span><span class="sxs-lookup"><span data-stu-id="4a467-1665">A standard or custom numeric format string.</span></span></param>
        <param name="provider"><span data-ttu-id="4a467-1666">Objeto que proporciona información de formato específica de la referencia cultural.</span><span class="sxs-lookup"><span data-stu-id="4a467-1666">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="4a467-1667">Convierte el valor numérico del objeto <see cref="T:System.Numerics.BigInteger" /> actual en su representación de cadena equivalente usando el formato especificado y la información de formato específica de la referencia cultural.</span><span class="sxs-lookup"><span data-stu-id="4a467-1667">Converts the numeric value of the current <see cref="T:System.Numerics.BigInteger" /> object to its equivalent string representation by using the specified format and culture-specific format information.</span></span></summary>
        <returns><span data-ttu-id="4a467-1668">Representación de cadena del valor <see cref="T:System.Numerics.BigInteger" /> actual, tal como la especifican los parámetros <paramref name="format" /> y <paramref name="provider" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-1668">The string representation of the current <see cref="T:System.Numerics.BigInteger" /> value as specified by the <paramref name="format" /> and <paramref name="provider" /> parameters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a467-1669">El <xref:System.Numerics.BigInteger.ToString%28System.String%2CSystem.IFormatProvider%29> método formatos un <xref:System.Numerics.BigInteger> valor en un formato especificado mediante el uso de la <xref:System.Globalization.NumberFormatInfo> objeto de una referencia cultural especificada.</span><span class="sxs-lookup"><span data-stu-id="4a467-1669">The <xref:System.Numerics.BigInteger.ToString%28System.String%2CSystem.IFormatProvider%29> method formats a <xref:System.Numerics.BigInteger> value in a specified format by using the <xref:System.Globalization.NumberFormatInfo> object of a specified culture.</span></span> <span data-ttu-id="4a467-1670">Si desea utilizar el formato de ida y vuelta o la configuración de referencia cultural predeterminada, use las otras sobrecargas de los <xref:System.Numerics.BigInteger.ToString%2A> método, como se indica a continuación:</span><span class="sxs-lookup"><span data-stu-id="4a467-1670">If you want to use the round-trip format or default culture settings, use the other overloads of the <xref:System.Numerics.BigInteger.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="4a467-1671">Para usar el formato</span><span class="sxs-lookup"><span data-stu-id="4a467-1671">To use format</span></span>|<span data-ttu-id="4a467-1672">Para la referencia cultural</span><span class="sxs-lookup"><span data-stu-id="4a467-1672">For culture</span></span>|<span data-ttu-id="4a467-1673">Use la sobrecarga</span><span class="sxs-lookup"><span data-stu-id="4a467-1673">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="4a467-1674">Formato Round-Trip ("R")</span><span class="sxs-lookup"><span data-stu-id="4a467-1674">Round-trip ("R") format</span></span>|<span data-ttu-id="4a467-1675">Referencia cultural de forma predeterminada (actual)</span><span class="sxs-lookup"><span data-stu-id="4a467-1675">Default (current) culture</span></span>|<xref:System.Numerics.BigInteger.ToString>|  
|<span data-ttu-id="4a467-1676">Formato Round-Trip ("R")</span><span class="sxs-lookup"><span data-stu-id="4a467-1676">Round-trip ("R") format</span></span>|<span data-ttu-id="4a467-1677">Una referencia cultural específica</span><span class="sxs-lookup"><span data-stu-id="4a467-1677">A specific culture</span></span>|<xref:System.Numerics.BigInteger.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="4a467-1678">Un formato concreto</span><span class="sxs-lookup"><span data-stu-id="4a467-1678">A specific format</span></span>|<span data-ttu-id="4a467-1679">Referencia cultural de forma predeterminada (actual)</span><span class="sxs-lookup"><span data-stu-id="4a467-1679">Default (current) culture</span></span>|<xref:System.Numerics.BigInteger.ToString%28System.String%29>|  
  
 <span data-ttu-id="4a467-1680">El `format` parámetro puede ser cualquier tipo válido [cadena numérica estándar](~/docs/standard/base-types/standard-numeric-format-strings.md), o cualquier combinación de [cadenas de formato numérico personalizado](~/docs/standard/base-types/custom-numeric-format-strings.md).</span><span class="sxs-lookup"><span data-stu-id="4a467-1680">The `format` parameter can be any valid  [standard numeric string](~/docs/standard/base-types/standard-numeric-format-strings.md), or any combination of [custom numeric format strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span> <span data-ttu-id="4a467-1681">Si `format` es igual a <xref:System.String.Empty?displayProperty=nameWithType> o es `null`, el valor devuelto del actual <xref:System.Numerics.BigInteger> objeto tiene formato con el especificador de formato de ida y vuelta ("R").</span><span class="sxs-lookup"><span data-stu-id="4a467-1681">If `format` is equal to <xref:System.String.Empty?displayProperty=nameWithType> or is `null`, the return value of the current <xref:System.Numerics.BigInteger> object is formatted with the round-trip format specifier ("R").</span></span> <span data-ttu-id="4a467-1682">Si `format` es cualquier otro valor, el método inicia una <xref:System.FormatException>.</span><span class="sxs-lookup"><span data-stu-id="4a467-1682">If `format` is any other value, the method throws a <xref:System.FormatException>.</span></span>  
  
 <span data-ttu-id="4a467-1683">.NET Framework proporciona una amplia compatibilidad de formato, que se describe con más detalle en los temas de formato siguientes:</span><span class="sxs-lookup"><span data-stu-id="4a467-1683">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="4a467-1684">Para obtener más información sobre los especificadores de formato numérico, vea [cadenas de formato numérico estándar](~/docs/standard/base-types/standard-numeric-format-strings.md) y [cadenas con formato numérico personalizado](~/docs/standard/base-types/custom-numeric-format-strings.md).</span><span class="sxs-lookup"><span data-stu-id="4a467-1684">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="4a467-1685">Para obtener más información sobre la compatibilidad con formato en .NET Framework, vea [aplicar formato a tipos](~/docs/standard/base-types/formatting-types.md).</span><span class="sxs-lookup"><span data-stu-id="4a467-1685">For more information about support for formatting in the .NET Framework, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="4a467-1686">El `provider` parámetro es un <xref:System.IFormatProvider> implementación.</span><span class="sxs-lookup"><span data-stu-id="4a467-1686">The `provider` parameter is an <xref:System.IFormatProvider> implementation.</span></span> <span data-ttu-id="4a467-1687">Su <xref:System.IFormatProvider.GetFormat%2A> método devuelve un <xref:System.Globalization.NumberFormatInfo> objeto que proporciona información específica de la referencia cultural sobre el formato de la cadena devuelta por este método.</span><span class="sxs-lookup"><span data-stu-id="4a467-1687">Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific information about the format of the string returned by this method.</span></span> <span data-ttu-id="4a467-1688">Cuando el <xref:System.Numerics.BigInteger.ToString%28System.String%2CSystem.IFormatProvider%29> se invoca el método, llama a la `provider` del parámetro <xref:System.IFormatProvider.GetFormat%2A> método y le pasa un <xref:System.Type> objeto que representa el <xref:System.Globalization.NumberFormatInfo> tipo.</span><span class="sxs-lookup"><span data-stu-id="4a467-1688">When the <xref:System.Numerics.BigInteger.ToString%28System.String%2CSystem.IFormatProvider%29> method is invoked, it calls the `provider` parameter's <xref:System.IFormatProvider.GetFormat%2A> method and passes it a <xref:System.Type> object that represents the <xref:System.Globalization.NumberFormatInfo> type.</span></span> <span data-ttu-id="4a467-1689">El <xref:System.IFormatProvider.GetFormat%2A> método, a continuación, devuelve el <xref:System.Globalization.NumberFormatInfo> objeto que proporciona información para dar formato a la `value` parámetro, como el símbolo de signo negativo, el símbolo del separador de grupo o el símbolo de separador decimal.</span><span class="sxs-lookup"><span data-stu-id="4a467-1689">The <xref:System.IFormatProvider.GetFormat%2A> method then returns the <xref:System.Globalization.NumberFormatInfo> object that provides information for formatting the `value` parameter, such as the negative sign symbol, the group separator symbol, or the decimal point symbol.</span></span> <span data-ttu-id="4a467-1690">Hay tres formas de usar el `provider` parámetro para proporcionar información de formato para el <xref:System.Numerics.BigInteger.ToString%28System.String%2CSystem.IFormatProvider%29> método:</span><span class="sxs-lookup"><span data-stu-id="4a467-1690">There are three ways to use the `provider` parameter to supply formatting information to the <xref:System.Numerics.BigInteger.ToString%28System.String%2CSystem.IFormatProvider%29> method:</span></span>  
  
-   <span data-ttu-id="4a467-1691">Puede pasar un <xref:System.Globalization.CultureInfo> objeto que representa la referencia cultural que proporciona información de formato.</span><span class="sxs-lookup"><span data-stu-id="4a467-1691">You can pass a <xref:System.Globalization.CultureInfo> object that represents the culture that supplies formatting information.</span></span> <span data-ttu-id="4a467-1692">Su <xref:System.Globalization.CultureInfo.GetFormat%2A> método devuelve el <xref:System.Globalization.NumberFormatInfo> objeto que proporciona información de formato numérico para esa referencia cultural.</span><span class="sxs-lookup"><span data-stu-id="4a467-1692">Its <xref:System.Globalization.CultureInfo.GetFormat%2A> method returns the <xref:System.Globalization.NumberFormatInfo> object that provides numeric formatting information for that culture.</span></span>  
  
-   <span data-ttu-id="4a467-1693">Puede pasar los datos reales <xref:System.Globalization.NumberFormatInfo> objeto que proporciona información de formato numérico.</span><span class="sxs-lookup"><span data-stu-id="4a467-1693">You can pass the actual <xref:System.Globalization.NumberFormatInfo> object that provides numeric formatting information.</span></span> <span data-ttu-id="4a467-1694">(Su implementación de <xref:System.Globalization.NumberFormatInfo.GetFormat%2A> simplemente devuelve a sí mismo.)</span><span class="sxs-lookup"><span data-stu-id="4a467-1694">(Its implementation of <xref:System.Globalization.NumberFormatInfo.GetFormat%2A> just returns itself.)</span></span>  
  
-   <span data-ttu-id="4a467-1695">Puede pasar un objeto personalizado que implementa <xref:System.IFormatProvider>.</span><span class="sxs-lookup"><span data-stu-id="4a467-1695">You can pass a custom object that implements <xref:System.IFormatProvider>.</span></span> <span data-ttu-id="4a467-1696">Su <xref:System.IFormatProvider.GetFormat%2A> crea una instancia de método y devuelve el <xref:System.Globalization.NumberFormatInfo> objeto que proporciona información de formato.</span><span class="sxs-lookup"><span data-stu-id="4a467-1696">Its <xref:System.IFormatProvider.GetFormat%2A> method instantiates and returns the <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="4a467-1697">Si `provider` es `null`, el formato de la cadena devuelta se basa en el <xref:System.Globalization.NumberFormatInfo> objeto de la referencia cultural actual.</span><span class="sxs-lookup"><span data-stu-id="4a467-1697">If `provider` is `null`, the formatting of the returned string is based on the <xref:System.Globalization.NumberFormatInfo> object of the current culture.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a467-1698">En el ejemplo siguiente se inicializa un <xref:System.Numerics.BigInteger> valor y se muestra en la consola mediante una cadena de formato estándar y un <xref:System.Globalization.NumberFormatInfo> objeto que define la tilde (~) como un signo negativo.</span><span class="sxs-lookup"><span data-stu-id="4a467-1698">The following example initializes a <xref:System.Numerics.BigInteger> value, and displays it to the console using a standard format string and a <xref:System.Globalization.NumberFormatInfo> object that defines the tilde (~) as a negative sign.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.ToString#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.ToString/cs/ToString1.cs#4)]
 [!code-vb[System.Numerics.BigInteger.ToString#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.ToString/vb/ToString1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="4a467-1699"><paramref name="format" /> no es una cadena de formato válido.</span><span class="sxs-lookup"><span data-stu-id="4a467-1699"><paramref name="format" /> is not a valid format string.</span></span></exception>
        <related type="Article" href="~/docs/standard/base-types/standard-numeric-format-strings.md"><span data-ttu-id="4a467-1700">Cadenas con formato numérico estándar</span><span class="sxs-lookup"><span data-stu-id="4a467-1700">Standard Numeric Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-numeric-format-strings.md"><span data-ttu-id="4a467-1701">Cadenas con formato numérico personalizado</span><span class="sxs-lookup"><span data-stu-id="4a467-1701">Custom Numeric Format Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public bool TryFormat (Span&lt;char&gt; destination, out int charsWritten, ReadOnlySpan&lt;char&gt; format = null, IFormatProvider provider = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryFormat(valuetype System.Span`1&lt;char&gt; destination, [out] int32&amp; charsWritten, valuetype System.ReadOnlySpan`1&lt;char&gt; format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.TryFormat(System.Span{System.Char},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryFormat (destination As Span(Of Char), ByRef charsWritten As Integer, Optional format As ReadOnlySpan(Of Char) = null, Optional provider As IFormatProvider = null) As Boolean" />
      <MemberSignature Language="F#" Value="member this.TryFormat : Span&lt;char&gt; *  * ReadOnlySpan&lt;char&gt; * IFormatProvider -&gt; bool" Usage="bigInteger.TryFormat (destination, charsWritten, format, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="charsWritten" Type="System.Int32" RefType="out" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="format" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="3" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <param name="charsWritten">To be added.</param>
        <param name="format">To be added.</param>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryParse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4a467-1702">Intenta convertir la representación en forma de cadena de un número en su equivalente <see cref="T:System.Numerics.BigInteger" /> y devuelve un valor que indica si la conversión tuvo éxito.</span><span class="sxs-lookup"><span data-stu-id="4a467-1702">Tries to convert the string representation of a number to its <see cref="T:System.Numerics.BigInteger" /> equivalent, and returns a value that indicates whether the conversion succeeded.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; value, out System.Numerics.BigInteger result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; value, [out] valuetype System.Numerics.BigInteger&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.TryParse(System.ReadOnlySpan{System.Char},System.Numerics.BigInteger@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (value As ReadOnlySpan(Of Char), ByRef result As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; value, [Runtime::InteropServices::Out] System::Numerics::BigInteger % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;char&gt; *  -&gt; bool" Usage="System.Numerics.BigInteger.TryParse (value, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="result" Type="System.Numerics.BigInteger" RefType="out" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string value, out System.Numerics.BigInteger result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string value, [out] valuetype System.Numerics.BigInteger&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.TryParse(System.String,System.Numerics.BigInteger@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (value As String, ByRef result As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ value, [Runtime::InteropServices::Out] System::Numerics::BigInteger % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string *  -&gt; bool" Usage="System.Numerics.BigInteger.TryParse (value, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="result" Type="System.Numerics.BigInteger" RefType="out" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4a467-1703">Representación de cadena de un número.</span><span class="sxs-lookup"><span data-stu-id="4a467-1703">The string representation of a number.</span></span></param>
        <param name="result"><span data-ttu-id="4a467-1704">Cuando este método vuelve, contiene el equivalente <see cref="T:System.Numerics.BigInteger" /> al número contenido en <paramref name="value" />, o cero (0) si se produce un error en la conversión.</span><span class="sxs-lookup"><span data-stu-id="4a467-1704">When this method returns, contains the <see cref="T:System.Numerics.BigInteger" /> equivalent to the number that is contained in <paramref name="value" />, or zero (0) if the conversion fails.</span></span> <span data-ttu-id="4a467-1705">Se produce un error en la conversión si el parámetro <paramref name="value" /> es <see langword="null" /> o no tiene el formato correcto.</span><span class="sxs-lookup"><span data-stu-id="4a467-1705">The conversion fails if the <paramref name="value" /> parameter is <see langword="null" /> or is not of the correct format.</span></span> <span data-ttu-id="4a467-1706">Este parámetro se pasa sin inicializar.</span><span class="sxs-lookup"><span data-stu-id="4a467-1706">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="4a467-1707">Intenta convertir la representación en forma de cadena de un número en su equivalente <see cref="T:System.Numerics.BigInteger" /> y devuelve un valor que indica si la conversión tuvo éxito.</span><span class="sxs-lookup"><span data-stu-id="4a467-1707">Tries to convert the string representation of a number to its <see cref="T:System.Numerics.BigInteger" /> equivalent, and returns a value that indicates whether the conversion succeeded.</span></span></summary>
        <returns><span data-ttu-id="4a467-1708"><see langword="true" /> si <paramref name="value" /> se convirtió correctamente; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-1708"><see langword="true" /> if <paramref name="value" /> was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a467-1709">El <xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Numerics.BigInteger%40%29> método es similar a la <xref:System.Numerics.BigInteger.Parse%28System.String%29> método, salvo que TI no produce una excepción si se produce un error en la conversión.</span><span class="sxs-lookup"><span data-stu-id="4a467-1709">The <xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Numerics.BigInteger%40%29> method is like the <xref:System.Numerics.BigInteger.Parse%28System.String%29> method, except that it does not throw an exception if the conversion fails.</span></span> <span data-ttu-id="4a467-1710">Este método elimina la necesidad de usar el control de excepciones para probar una <xref:System.FormatException> si `value` no es válido y no puede analizarse correctamente.</span><span class="sxs-lookup"><span data-stu-id="4a467-1710">This method eliminates the need to use exception handling to test for a <xref:System.FormatException> if `value` is invalid and cannot be successfully parsed.</span></span>  
  
 <span data-ttu-id="4a467-1711">El `value` parámetro debe ser la representación de cadena de un número decimal de la forma siguiente:</span><span class="sxs-lookup"><span data-stu-id="4a467-1711">The `value` parameter should be the string representation of a decimal number in the following form:</span></span>  
  
 <span data-ttu-id="4a467-1712">[*ws*][*sign*]*digits*[*ws*]</span><span class="sxs-lookup"><span data-stu-id="4a467-1712">[*ws*][*sign*]*digits*[*ws*]</span></span>  
  
 <span data-ttu-id="4a467-1713">Los elementos de los corchetes ([ y ]) son opcionales.</span><span class="sxs-lookup"><span data-stu-id="4a467-1713">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="4a467-1714">En esta tabla se describe cada elemento.</span><span class="sxs-lookup"><span data-stu-id="4a467-1714">The following table describes each element.</span></span>  
  
|<span data-ttu-id="4a467-1715">Elemento</span><span class="sxs-lookup"><span data-stu-id="4a467-1715">Element</span></span>|<span data-ttu-id="4a467-1716">Descripción</span><span class="sxs-lookup"><span data-stu-id="4a467-1716">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="4a467-1717">*ws*</span><span class="sxs-lookup"><span data-stu-id="4a467-1717">*ws*</span></span>|<span data-ttu-id="4a467-1718">Espacio en blanco opcional.</span><span class="sxs-lookup"><span data-stu-id="4a467-1718">Optional white space.</span></span>|  
|<span data-ttu-id="4a467-1719">*sign*</span><span class="sxs-lookup"><span data-stu-id="4a467-1719">*sign*</span></span>|<span data-ttu-id="4a467-1720">Un signo opcional.</span><span class="sxs-lookup"><span data-stu-id="4a467-1720">An optional sign.</span></span> <span data-ttu-id="4a467-1721">Caracteres de inicio de sesión válidos se determinan mediante la <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType> y <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType> propiedades de la referencia cultural actual.</span><span class="sxs-lookup"><span data-stu-id="4a467-1721">Valid sign characters are determined by the <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType> properties of the current culture.</span></span>|  
|<span data-ttu-id="4a467-1722">*digits*</span><span class="sxs-lookup"><span data-stu-id="4a467-1722">*digits*</span></span>|<span data-ttu-id="4a467-1723">Una secuencia de dígitos decimales comprendidos entre 0 y 9.</span><span class="sxs-lookup"><span data-stu-id="4a467-1723">A sequence of decimal digits ranging from 0 to 9.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="4a467-1724">La cadena especificada por el `value` parámetro no puede contener cualquier separador de grupo o un separador decimal y no puede tener una parte decimal.</span><span class="sxs-lookup"><span data-stu-id="4a467-1724">The string specified by the `value` parameter cannot contain any group separators or decimal separator, and it cannot have a decimal portion.</span></span>  
  
 <span data-ttu-id="4a467-1725">El `value` parámetro se interpreta usando el <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> estilo.</span><span class="sxs-lookup"><span data-stu-id="4a467-1725">The `value` parameter is interpreted by using the <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="4a467-1726">Además de los dígitos decimales, se permiten solo espacios iniciales y finales con un signo inicial.</span><span class="sxs-lookup"><span data-stu-id="4a467-1726">In addition to the decimal digits, only leading and trailing spaces with a leading sign are allowed.</span></span> <span data-ttu-id="4a467-1727">Para definir explícitamente los elementos de estilo con la información de formato específica de la referencia cultural que pueden estar presentes en `value`, llame a la <xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29> método.</span><span class="sxs-lookup"><span data-stu-id="4a467-1727">To explicitly define the style elements with the culture-specific formatting information that can be present in `value`, call the <xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29> method.</span></span>  
  
 <span data-ttu-id="4a467-1728">El `value` parámetro se analiza mediante el uso de la información de formato en un <xref:System.Globalization.NumberFormatInfo> objeto para la referencia cultural actual.</span><span class="sxs-lookup"><span data-stu-id="4a467-1728">The `value` parameter is parsed by using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object for the current culture.</span></span> <span data-ttu-id="4a467-1729">Para obtener más información, vea <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4a467-1729">For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="4a467-1730">Esta sobrecarga interpreta todos los dígitos en el `value` parámetro como dígitos decimales.</span><span class="sxs-lookup"><span data-stu-id="4a467-1730">This overload interprets all digits in the `value` parameter as decimal digits.</span></span> <span data-ttu-id="4a467-1731">Para analizar la representación de cadena de un número hexadecimal, llame a la <xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29> sobrecargar en su lugar.</span><span class="sxs-lookup"><span data-stu-id="4a467-1731">To parse the string representation of a hexadecimal number, call the <xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29> overload instead.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a467-1732">En el ejemplo siguiente se usa el <xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Numerics.BigInteger%40%29> método para crear instancias de dos <xref:System.Numerics.BigInteger> objetos.</span><span class="sxs-lookup"><span data-stu-id="4a467-1732">The following example uses the <xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Numerics.BigInteger%40%29> method to instantiate two <xref:System.Numerics.BigInteger> objects.</span></span> <span data-ttu-id="4a467-1733">Si las conversiones se realizan correctamente, multiplica cada objeto por otro número y, a continuación, llama a la <xref:System.Numerics.BigInteger.Compare%2A> método para determinar la relación entre los dos objetos.</span><span class="sxs-lookup"><span data-stu-id="4a467-1733">If the conversions succeed, it multiplies each object by another number and then calls the <xref:System.Numerics.BigInteger.Compare%2A> method to determine the relationship between the two objects.</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.TryParse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.TryParse/cs/System.Numeric.BigInteger.TryParse.cs#1)]
 [!code-vb[System.Numeric.BigInteger.TryParse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.TryParse/vb/System.Numeric.BigInteger.TryParse.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4a467-1734"><paramref name="value" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-1734"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Numerics.BigInteger.ToString(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; value, System.Globalization.NumberStyles style, IFormatProvider provider, out System.Numerics.BigInteger result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; value, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider, [out] valuetype System.Numerics.BigInteger&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (value As ReadOnlySpan(Of Char), style As NumberStyles, provider As IFormatProvider, ByRef result As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; value, System::Globalization::NumberStyles style, IFormatProvider ^ provider, [Runtime::InteropServices::Out] System::Numerics::BigInteger % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;char&gt; * System.Globalization.NumberStyles * IFormatProvider *  -&gt; bool" Usage="System.Numerics.BigInteger.TryParse (value, style, provider, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="result" Type="System.Numerics.BigInteger" RefType="out" Index="3" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="style">To be added.</param>
        <param name="provider">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string value, System.Globalization.NumberStyles style, IFormatProvider provider, out System.Numerics.BigInteger result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string value, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider, [out] valuetype System.Numerics.BigInteger&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (value As String, style As NumberStyles, provider As IFormatProvider, ByRef result As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ value, System::Globalization::NumberStyles style, IFormatProvider ^ provider, [Runtime::InteropServices::Out] System::Numerics::BigInteger % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string * System.Globalization.NumberStyles * IFormatProvider *  -&gt; bool" Usage="System.Numerics.BigInteger.TryParse (value, style, provider, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
        <Parameter Name="result" Type="System.Numerics.BigInteger" RefType="out" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4a467-1735">Representación de cadena de un número.</span><span class="sxs-lookup"><span data-stu-id="4a467-1735">The string representation of a number.</span></span> <span data-ttu-id="4a467-1736">La cadena se interpreta usando el estilo especificado por <paramref name="style" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-1736">The string is interpreted using the style specified by <paramref name="style" />.</span></span></param>
        <param name="style"><span data-ttu-id="4a467-1737">Combinación bit a bit de los valores de enumeración que indica los elementos de estilo que pueden estar presentes en <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-1737">A bitwise combination of enumeration values that indicates the style elements that can be present in <paramref name="value" />.</span></span> <span data-ttu-id="4a467-1738">Un valor que se especifica de forma habitual es <see cref="F:System.Globalization.NumberStyles.Integer" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-1738">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</span></span></param>
        <param name="provider"><span data-ttu-id="4a467-1739">Objeto que proporciona información de formato específica de la referencia cultural acerca de <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-1739">An object that supplies culture-specific formatting information about <paramref name="value" />.</span></span></param>
        <param name="result"><span data-ttu-id="4a467-1740">Cuando este método vuelve, contiene el equivalente <see cref="T:System.Numerics.BigInteger" /> al número contenido en <paramref name="value" />, o <see cref="P:System.Numerics.BigInteger.Zero" /> si se produjo un error en la conversión.</span><span class="sxs-lookup"><span data-stu-id="4a467-1740">When this method returns, contains the <see cref="T:System.Numerics.BigInteger" /> equivalent to the number that is contained in <paramref name="value" />, or <see cref="P:System.Numerics.BigInteger.Zero" /> if the conversion failed.</span></span> <span data-ttu-id="4a467-1741">Se produce un error en la conversión si el parámetro <paramref name="value" /> es <see langword="null" /> o no tiene un formato conforme a <paramref name="style" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-1741">The conversion fails if the <paramref name="value" /> parameter is <see langword="null" /> or is not in a format that is compliant with <paramref name="style" />.</span></span> <span data-ttu-id="4a467-1742">Este parámetro se pasa sin inicializar.</span><span class="sxs-lookup"><span data-stu-id="4a467-1742">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="4a467-1743">Intenta convertir la representación de cadena de un número con un estilo específico y un formato específico de la referencia cultural en su equivalente de <see cref="T:System.Numerics.BigInteger" /> y devuelve un valor que indica si la conversión fue correcta.</span><span class="sxs-lookup"><span data-stu-id="4a467-1743">Tries to convert the string representation of a number in a specified style and culture-specific format to its <see cref="T:System.Numerics.BigInteger" /> equivalent, and returns a value that indicates whether the conversion succeeded.</span></span></summary>
        <returns><span data-ttu-id="4a467-1744"><see langword="true" /> si el parámetro <paramref name="value" /> se convierte correctamente; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-1744"><see langword="true" /> if the <paramref name="value" /> parameter was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a467-1745">El <xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29> método es similar a la <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> método, salvo que TI no produce una excepción si se produce un error en la conversión.</span><span class="sxs-lookup"><span data-stu-id="4a467-1745">The <xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29> method is like the <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> method, except that it does not throw an exception if the conversion fails.</span></span> <span data-ttu-id="4a467-1746">Este método elimina la necesidad de usar el control de excepciones para probar una <xref:System.FormatException> si `value` no es válido y no puede analizarse correctamente.</span><span class="sxs-lookup"><span data-stu-id="4a467-1746">This method eliminates the need to use exception handling to test for a <xref:System.FormatException> if `value` is invalid and cannot be parsed successfully.</span></span>  
  
 <span data-ttu-id="4a467-1747">El `style` parámetro define los elementos de estilo (como espacios en blanco o un signo positivo o negativo) que se permiten en el `value` parámetro para la operación de análisis se realice correctamente.</span><span class="sxs-lookup"><span data-stu-id="4a467-1747">The `style` parameter defines the style elements (such as white space or a positive or negative sign) that are allowed in the `value` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="4a467-1748">Debe ser una combinación de marcas de bits de la <xref:System.Globalization.NumberStyles> enumeración.</span><span class="sxs-lookup"><span data-stu-id="4a467-1748">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="4a467-1749">Dependiendo del valor de `style`, el `value` parámetro puede incluir los siguientes elementos:</span><span class="sxs-lookup"><span data-stu-id="4a467-1749">Depending on the value of `style`, the `value` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="4a467-1750">[*ws*][*$*][*sign*][*digits*,]*digits*[.*fractional_digits*][E[*sign*]*exponential_digits*][*ws*]</span><span class="sxs-lookup"><span data-stu-id="4a467-1750">[*ws*][*$*][*sign*][*digits*,]*digits*[.*fractional_digits*][E[*sign*]*exponential_digits*][*ws*]</span></span>  
  
 <span data-ttu-id="4a467-1751">Si el `style` parámetro incluye <xref:System.Globalization.NumberStyles.AllowHexSpecifier>, el `value` parámetro puede incluir los siguientes elementos:</span><span class="sxs-lookup"><span data-stu-id="4a467-1751">If the `style` parameter includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier>, the `value` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="4a467-1752">[*ws*]*hexdigits*[*ws*]</span><span class="sxs-lookup"><span data-stu-id="4a467-1752">[*ws*]*hexdigits*[*ws*]</span></span>  
  
 <span data-ttu-id="4a467-1753">Los elementos de los corchetes ([ y ]) son opcionales.</span><span class="sxs-lookup"><span data-stu-id="4a467-1753">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="4a467-1754">En esta tabla se describe cada elemento.</span><span class="sxs-lookup"><span data-stu-id="4a467-1754">The following table describes each element.</span></span>  
  
|<span data-ttu-id="4a467-1755">Elemento</span><span class="sxs-lookup"><span data-stu-id="4a467-1755">Element</span></span>|<span data-ttu-id="4a467-1756">Descripción</span><span class="sxs-lookup"><span data-stu-id="4a467-1756">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="4a467-1757">*ws*</span><span class="sxs-lookup"><span data-stu-id="4a467-1757">*ws*</span></span>|<span data-ttu-id="4a467-1758">Espacio en blanco opcional.</span><span class="sxs-lookup"><span data-stu-id="4a467-1758">Optional white space.</span></span> <span data-ttu-id="4a467-1759">Pueden aparecer espacios en blanco del principio de `value` si `style` incluye la <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> marca, o al final de `value` si `style` incluye la <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> marca.</span><span class="sxs-lookup"><span data-stu-id="4a467-1759">White space can appear at the start of `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, or at the end of `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="4a467-1760">Un símbolo de moneda de la referencia cultural específica.</span><span class="sxs-lookup"><span data-stu-id="4a467-1760">A culture-specific currency symbol.</span></span> <span data-ttu-id="4a467-1761">Su posición en la cadena viene definida por el <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A> propiedad de la <xref:System.Globalization.NumberFormatInfo> objeto devuelto por la <xref:System.IFormatProvider.GetFormat%2A> método de la `provider` parámetro.</span><span class="sxs-lookup"><span data-stu-id="4a467-1761">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A> property of the <xref:System.Globalization.NumberFormatInfo> object returned by the <xref:System.IFormatProvider.GetFormat%2A> method of the `provider` parameter.</span></span> <span data-ttu-id="4a467-1762">Puede aparecer el símbolo de moneda en `value` si `style` incluye la <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> marca.</span><span class="sxs-lookup"><span data-stu-id="4a467-1762">The currency symbol can appear in `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="4a467-1763">*sign*</span><span class="sxs-lookup"><span data-stu-id="4a467-1763">*sign*</span></span>|<span data-ttu-id="4a467-1764">Un signo opcional.</span><span class="sxs-lookup"><span data-stu-id="4a467-1764">An optional sign.</span></span> <span data-ttu-id="4a467-1765">El inicio de sesión puede aparecer al principio de `value` si `style` incluye la <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> marca y puede aparecer al final de `value` si `style` incluye la <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> marca.</span><span class="sxs-lookup"><span data-stu-id="4a467-1765">The sign can appear at the start of `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag, and it can appear at the end of `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="4a467-1766">Se pueden utilizar paréntesis en `value` para indicar un valor negativo si `style` incluye la <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> marca.</span><span class="sxs-lookup"><span data-stu-id="4a467-1766">Parentheses can be used in `value` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="4a467-1767">*digits*</span><span class="sxs-lookup"><span data-stu-id="4a467-1767">*digits*</span></span>|<span data-ttu-id="4a467-1768">Una secuencia de dígitos del 0 al 9.</span><span class="sxs-lookup"><span data-stu-id="4a467-1768">A sequence of digits from 0 through 9.</span></span>|  
|<span data-ttu-id="4a467-1769">*,*</span><span class="sxs-lookup"><span data-stu-id="4a467-1769">*,*</span></span>|<span data-ttu-id="4a467-1770">Un separador de grupo específicas de referencias culturales.</span><span class="sxs-lookup"><span data-stu-id="4a467-1770">A culture-specific group separator.</span></span> <span data-ttu-id="4a467-1771">El separador de grupos de la referencia cultural especificada por `provider` pueden aparecer en `value` si `style` incluye la <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> marca.</span><span class="sxs-lookup"><span data-stu-id="4a467-1771">The group separator of the culture specified by `provider` can appear in `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="4a467-1772">*.*</span><span class="sxs-lookup"><span data-stu-id="4a467-1772">*.*</span></span>|<span data-ttu-id="4a467-1773">Un símbolo de separador de decimales de referencia cultural específica.</span><span class="sxs-lookup"><span data-stu-id="4a467-1773">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="4a467-1774">El símbolo de separador decimal de la referencia cultural especificada por `provider` pueden aparecer en `value` si `style` incluye la <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> marca.</span><span class="sxs-lookup"><span data-stu-id="4a467-1774">The decimal point symbol of the culture specified by `provider` can appear in `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="4a467-1775">*fractional_digits*</span><span class="sxs-lookup"><span data-stu-id="4a467-1775">*fractional_digits*</span></span>|<span data-ttu-id="4a467-1776">Una o más apariciones del dígito 0.</span><span class="sxs-lookup"><span data-stu-id="4a467-1776">One or more occurrences of the digit 0.</span></span> <span data-ttu-id="4a467-1777">Pueden aparecer dígitos fraccionarios en `value` solo si `style` incluye la <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> marca.</span><span class="sxs-lookup"><span data-stu-id="4a467-1777">Fractional digits can appear in `value` only if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="4a467-1778">E</span><span class="sxs-lookup"><span data-stu-id="4a467-1778">E</span></span>|<span data-ttu-id="4a467-1779">La "e" o el carácter "E", lo que indica que el valor se representa en una notación exponencial (científica).</span><span class="sxs-lookup"><span data-stu-id="4a467-1779">The "e" or "E" character, which indicates that the value is represented in exponential (scientific) notation.</span></span> <span data-ttu-id="4a467-1780">El `value` parámetro puede representar un número en notación exponencial si `style` incluye la <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> marca.</span><span class="sxs-lookup"><span data-stu-id="4a467-1780">The `value` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="4a467-1781">*exponential_digits*</span><span class="sxs-lookup"><span data-stu-id="4a467-1781">*exponential_digits*</span></span>|<span data-ttu-id="4a467-1782">Una secuencia de dígitos del 0 al 9.</span><span class="sxs-lookup"><span data-stu-id="4a467-1782">A sequence of digits from 0 through 9.</span></span> <span data-ttu-id="4a467-1783">El `value` parámetro puede representar un número en notación exponencial si `style` incluye la <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> marca.</span><span class="sxs-lookup"><span data-stu-id="4a467-1783">The `value` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="4a467-1784">*hexdigits*</span><span class="sxs-lookup"><span data-stu-id="4a467-1784">*hexdigits*</span></span>|<span data-ttu-id="4a467-1785">Una secuencia de dígitos hexadecimales de 0 a f o 0 hasta la f el.</span><span class="sxs-lookup"><span data-stu-id="4a467-1785">A sequence of hexadecimal digits from 0 through f, or 0 through F.</span></span>|  
  
> [!NOTE]
> <span data-ttu-id="4a467-1786">Terminación NUL (u+0000) caracteres en `s` son ignoradas por la operación de análisis, independientemente del valor de la `style` argumento.</span><span class="sxs-lookup"><span data-stu-id="4a467-1786">Any terminating NUL (U+0000) characters in `s` are ignored by the parsing operation, regardless of the value of the `style` argument.</span></span>

 <span data-ttu-id="4a467-1787">Una cadena con solo dígitos decimales (que corresponde a la <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> marca) siempre se analiza correctamente.</span><span class="sxs-lookup"><span data-stu-id="4a467-1787">A string with decimal digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> flag) always parses successfully.</span></span> <span data-ttu-id="4a467-1788">La mayoría de los restantes <xref:System.Globalization.NumberStyles> miembros controlan los elementos que pueden estar presentes, pero no tienen que estar presentes en esta cadena de entrada.</span><span class="sxs-lookup"><span data-stu-id="4a467-1788">Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be present, but are not required to be present, in this input string.</span></span> <span data-ttu-id="4a467-1789">La tabla siguiente se indica cómo individuales <xref:System.Globalization.NumberStyles> miembros afectan a los elementos que pueden estar presentes en `value`.</span><span class="sxs-lookup"><span data-stu-id="4a467-1789">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `value`.</span></span>  
  
|<span data-ttu-id="4a467-1790">No compuestos `NumberStyles` valores</span><span class="sxs-lookup"><span data-stu-id="4a467-1790">Non-composite `NumberStyles` values</span></span>|<span data-ttu-id="4a467-1791">Elementos permitidos en valor además de dígitos</span><span class="sxs-lookup"><span data-stu-id="4a467-1791">Elements permitted in value in addition to digits</span></span>|  
|------------------------------------------|-------------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None>|<span data-ttu-id="4a467-1792">Dígitos decimales.</span><span class="sxs-lookup"><span data-stu-id="4a467-1792">Decimal digits only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint>|<span data-ttu-id="4a467-1793">El separador decimal (*.*) y *dígitos fraccionarios* elementos.</span><span class="sxs-lookup"><span data-stu-id="4a467-1793">The decimal point (*.*) and *fractional_digits* elements.</span></span> <span data-ttu-id="4a467-1794">Sin embargo, *dígitos fraccionarios* debe constar de uno o más dígitos de 0 o el método devuelve `false`.</span><span class="sxs-lookup"><span data-stu-id="4a467-1794">However, *fractional_digits* must consist of only one or more 0 digits, or the method returns `false`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent>|<span data-ttu-id="4a467-1795">La "e" o el carácter "E", lo que indica una notación exponencial, junto con *dígitos exponenciales*.</span><span class="sxs-lookup"><span data-stu-id="4a467-1795">The "e" or "E" character, which indicates exponential notation, along with *exponential_digits*.</span></span> <span data-ttu-id="4a467-1796">Si `value` representa un número en notación exponencial, no puede tener un componente fraccionario distinto de cero.</span><span class="sxs-lookup"><span data-stu-id="4a467-1796">If `value` represents a number in exponential notation, it cannot have a non-zero, fractional component.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite>|<span data-ttu-id="4a467-1797">El *ws* elemento situado al principio de `value`.</span><span class="sxs-lookup"><span data-stu-id="4a467-1797">The *ws* element at the start of `value`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite>|<span data-ttu-id="4a467-1798">El *ws* elemento al final de `value`.</span><span class="sxs-lookup"><span data-stu-id="4a467-1798">The *ws* element at the end of `value`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign>|<span data-ttu-id="4a467-1799">El *sesión* elemento antes de *dígitos*.</span><span class="sxs-lookup"><span data-stu-id="4a467-1799">The *sign* element before *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign>|<span data-ttu-id="4a467-1800">El *sesión* elemento tras el *dígitos*.</span><span class="sxs-lookup"><span data-stu-id="4a467-1800">The *sign* element after *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses>|<span data-ttu-id="4a467-1801">El *sesión* elemento con la forma de paréntesis para delimitar el valor numérico.</span><span class="sxs-lookup"><span data-stu-id="4a467-1801">The *sign* element in the form of parentheses enclosing the numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands>|<span data-ttu-id="4a467-1802">El separador de grupos (*,*) elemento.</span><span class="sxs-lookup"><span data-stu-id="4a467-1802">The group separator (*,*) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol>|<span data-ttu-id="4a467-1803">La moneda (*$*) elemento.</span><span class="sxs-lookup"><span data-stu-id="4a467-1803">The currency (*$*) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.Currency>|<span data-ttu-id="4a467-1804">Todos los elementos.</span><span class="sxs-lookup"><span data-stu-id="4a467-1804">All elements.</span></span> <span data-ttu-id="4a467-1805">Sin embargo, `value` no puede representar un número hexadecimal o un número en notación exponencial.</span><span class="sxs-lookup"><span data-stu-id="4a467-1805">However, `value` cannot represent a hexadecimal number or a number in exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Float>|<span data-ttu-id="4a467-1806">El *ws* elemento al principio o al final de `value`, *sesión* al principio de `value`y el separador decimal (*.*) símbolos.</span><span class="sxs-lookup"><span data-stu-id="4a467-1806">The *ws* element at the start or end of `value`, *sign* at the start of `value`, and the decimal point (*.*) symbol.</span></span> <span data-ttu-id="4a467-1807">El `value` parámetro también puede utilizar la notación exponencial.</span><span class="sxs-lookup"><span data-stu-id="4a467-1807">The `value` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Number>|<span data-ttu-id="4a467-1808">El *ws*, *sesión*, separador de grupos (*,*) y el separador decimal (*.*) elementos.</span><span class="sxs-lookup"><span data-stu-id="4a467-1808">The *ws*, *sign*, group separator (*,*), and decimal point (*.*) elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.Any>|<span data-ttu-id="4a467-1809">Todos los elementos.</span><span class="sxs-lookup"><span data-stu-id="4a467-1809">All elements.</span></span> <span data-ttu-id="4a467-1810">Sin embargo, `value` no se puede representar un número hexadecimal.</span><span class="sxs-lookup"><span data-stu-id="4a467-1810">However, `value` cannot represent a hexadecimal number.</span></span>|  
  
> [!IMPORTANT]
>  <span data-ttu-id="4a467-1811">Si usas el <xref:System.Numerics.BigInteger.TryParse%2A> método a la representación de cadena de ida y vuelta de un <xref:System.Numerics.BigInteger> valor que se generan mediante la <xref:System.Numerics.BigInteger.ToString%2A> método, debe usar el <xref:System.Numerics.BigInteger.ToString%28System.String%29?displayProperty=nameWithType> método con el especificador de formato "R" para generar la representación de cadena de la <xref:System.Numerics.BigInteger> valor.</span><span class="sxs-lookup"><span data-stu-id="4a467-1811">If you use the <xref:System.Numerics.BigInteger.TryParse%2A> method to round-trip the string representation of a <xref:System.Numerics.BigInteger> value that was output by the <xref:System.Numerics.BigInteger.ToString%2A> method, you should use the <xref:System.Numerics.BigInteger.ToString%28System.String%29?displayProperty=nameWithType> method with the "R" format specifier to generate the string representation of the <xref:System.Numerics.BigInteger> value.</span></span> <span data-ttu-id="4a467-1812">En caso contrario, la representación de cadena de la <xref:System.Numerics.BigInteger> conserva solo los 50 dígitos más significativos del valor original y los datos se pueden perder al usar el <xref:System.Numerics.BigInteger.TryParse%2A> método para restaurar el <xref:System.Numerics.BigInteger> valor.</span><span class="sxs-lookup"><span data-stu-id="4a467-1812">Otherwise, the string representation of the <xref:System.Numerics.BigInteger> preserves only the 50 most significant digits of the original value, and data may be lost when you use the <xref:System.Numerics.BigInteger.TryParse%2A> method to restore the <xref:System.Numerics.BigInteger> value.</span></span>  
  
 <span data-ttu-id="4a467-1813">Si el <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> se utiliza marca, `value` debe ser un valor hexadecimal.</span><span class="sxs-lookup"><span data-stu-id="4a467-1813">If the <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> flag is used, `value` must be a hexadecimal value.</span></span> <span data-ttu-id="4a467-1814">Los únicos otros marcadores que pueden estar presentes en `style` son <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> y <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4a467-1814">The only other flags that can be present in `style` are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="4a467-1815">(El <xref:System.Globalization.NumberStyles> enumeración tiene un estilo compuesto, <xref:System.Globalization.NumberStyles.HexNumber>, que incluye ambos marcadores de espacio en blanco.)</span><span class="sxs-lookup"><span data-stu-id="4a467-1815">(The <xref:System.Globalization.NumberStyles> enumeration has a composite style, <xref:System.Globalization.NumberStyles.HexNumber>, that includes both white-space flags.)</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4a467-1816">Si `value` es la representación de cadena de un número hexadecimal, no puede ir precedido por ninguna decoración (como `0x` o `&h`) que lo diferencie como un número hexadecimal.</span><span class="sxs-lookup"><span data-stu-id="4a467-1816">If `value` is the string representation of a hexadecimal number, it cannot be preceded by any decoration (such as `0x` or `&h`) that differentiates it as a hexadecimal number.</span></span> <span data-ttu-id="4a467-1817">Esto hace que un error de conversión.</span><span class="sxs-lookup"><span data-stu-id="4a467-1817">This causes the conversion to fail.</span></span>  
  
 <span data-ttu-id="4a467-1818">Si `value` es una cadena hexadecimal y la <xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29> método interpreta `value` como un número negativo que se almacenan utilizando dos representación del complemento si sus dos primeros dígitos hexadecimales son mayores o iguales a `0x80`.</span><span class="sxs-lookup"><span data-stu-id="4a467-1818">If `value` is a hexadecimal string, the <xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29> method interprets `value` as a negative number stored by using two's complement representation if its first two hexadecimal digits are greater than or equal to `0x80`.</span></span> <span data-ttu-id="4a467-1819">En otras palabras, el método interpreta el bit de orden superior del primer byte de `value` como el bit de signo.</span><span class="sxs-lookup"><span data-stu-id="4a467-1819">In other words, the method interprets the highest-order bit of the first byte in `value` as the sign bit.</span></span> <span data-ttu-id="4a467-1820">Para asegurarse de que una cadena hexadecimal se interpreta correctamente como un número positivo, el primer dígito de `value` debe tener un valor de cero.</span><span class="sxs-lookup"><span data-stu-id="4a467-1820">To make sure that a hexadecimal string is correctly interpreted as a positive number, the first digit in `value` must have a value of zero.</span></span> <span data-ttu-id="4a467-1821">Por ejemplo, el método interpreta `0x80` como un valor negativo, pero lo interpreta bien `0x080` o `0x0080` como un valor positivo.</span><span class="sxs-lookup"><span data-stu-id="4a467-1821">For example, the method interprets `0x80` as a negative value, but it interprets either `0x080` or `0x0080` as a positive value.</span></span> <span data-ttu-id="4a467-1822">El ejemplo siguiente muestra la diferencia entre las cadenas hexadecimales que representan valores positivos y negativos.</span><span class="sxs-lookup"><span data-stu-id="4a467-1822">The following example illustrates the difference between hexadecimal strings that represent negative and positive values.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.TryParse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.TryParse/cs/TryParseHex1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.TryParse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.TryParse/vb/TryParseHex1.vb#1)]  
  
 <span data-ttu-id="4a467-1823">El `provider` parámetro es un <xref:System.IFormatProvider> implementación.</span><span class="sxs-lookup"><span data-stu-id="4a467-1823">The `provider` parameter is an <xref:System.IFormatProvider> implementation.</span></span> <span data-ttu-id="4a467-1824">Su <xref:System.IFormatProvider.GetFormat%2A> método devuelve un <xref:System.Globalization.NumberFormatInfo> objeto que proporciona información específica de la referencia cultural sobre el formato de `value`.</span><span class="sxs-lookup"><span data-stu-id="4a467-1824">Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific information about the format of `value`.</span></span> <span data-ttu-id="4a467-1825">El `provider` parámetro puede ser cualquiera de las siguientes acciones:</span><span class="sxs-lookup"><span data-stu-id="4a467-1825">The `provider` parameter can be any one of the following:</span></span>  
  
-   <span data-ttu-id="4a467-1826">Un <xref:System.Globalization.CultureInfo> objeto que representa la referencia cultural que proporciona información de formato.</span><span class="sxs-lookup"><span data-stu-id="4a467-1826">A <xref:System.Globalization.CultureInfo> object that represents the culture that supplies formatting information.</span></span> <span data-ttu-id="4a467-1827">Su <xref:System.Globalization.CultureInfo.GetFormat%2A> método devuelve el <xref:System.Globalization.NumberFormatInfo> objeto que proporciona información de formato numérico para esa referencia cultural.</span><span class="sxs-lookup"><span data-stu-id="4a467-1827">Its <xref:System.Globalization.CultureInfo.GetFormat%2A> method returns the <xref:System.Globalization.NumberFormatInfo> object that provides numeric formatting information for that culture.</span></span>  
  
-   <span data-ttu-id="4a467-1828">Un <xref:System.Globalization.NumberFormatInfo> objeto que proporciona información de formato numérico.</span><span class="sxs-lookup"><span data-stu-id="4a467-1828">A <xref:System.Globalization.NumberFormatInfo> object that provides numeric formatting information.</span></span> <span data-ttu-id="4a467-1829">(Su implementación de <xref:System.Globalization.NumberFormatInfo.GetFormat%2A> simplemente devuelve a sí mismo.)</span><span class="sxs-lookup"><span data-stu-id="4a467-1829">(Its implementation of <xref:System.Globalization.NumberFormatInfo.GetFormat%2A> just returns itself.)</span></span>  
  
-   <span data-ttu-id="4a467-1830">Un objeto personalizado que implementa <xref:System.IFormatProvider>.</span><span class="sxs-lookup"><span data-stu-id="4a467-1830">A custom object that implements <xref:System.IFormatProvider>.</span></span> <span data-ttu-id="4a467-1831">Su <xref:System.IFormatProvider.GetFormat%2A> crea una instancia de método y devuelve el <xref:System.Globalization.NumberFormatInfo> objeto que proporciona información de formato.</span><span class="sxs-lookup"><span data-stu-id="4a467-1831">Its <xref:System.IFormatProvider.GetFormat%2A> method instantiates and returns the <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="4a467-1832">Si `provider` es `null`, el <xref:System.Globalization.NumberFormatInfo> objeto se usa la referencia cultural actual.</span><span class="sxs-lookup"><span data-stu-id="4a467-1832">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> object for the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a467-1833">En el siguiente ejemplo se realiza algunas llamadas a la <xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29> método con diferentes combinaciones de valores para el `style` y `provider` parámetros.</span><span class="sxs-lookup"><span data-stu-id="4a467-1833">The following example makes some calls to the <xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29> method using various combinations of values for the `style` and `provider` parameters.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.TryParse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.TryParse/cs/TryParse1.cs#2)]
 [!code-vb[System.Numerics.BigInteger.TryParse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.TryParse/vb/TryParse1.vb#2)]  
  
 <span data-ttu-id="4a467-1834">Un número de las llamadas individuales para el <xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29> método pasa una instancia de la siguiente `BigIntegerFormatProvider` (clase), que define una tilde (~) como el signo negativo.</span><span class="sxs-lookup"><span data-stu-id="4a467-1834">A number of the individual calls to the <xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29> method pass an instance of the following `BigIntegerFormatProvider` class, which defines a tilde (~) as the negative sign.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.TryParse#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.TryParse/cs/TryParse1.cs#3)]
 [!code-vb[System.Numerics.BigInteger.TryParse#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.TryParse/vb/TryParse1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4a467-1835"><paramref name="style" /> no es un valor <see cref="T:System.Globalization.NumberStyles" />.</span><span class="sxs-lookup"><span data-stu-id="4a467-1835"><paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span></span>  
  
<span data-ttu-id="4a467-1836">O bien</span><span class="sxs-lookup"><span data-stu-id="4a467-1836">-or-</span></span> 
 <span data-ttu-id="4a467-1837"><paramref name="style" /> incluye la marca <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> o <see cref="F:System.Globalization.NumberStyles.HexNumber" /> junto con otro valor.</span><span class="sxs-lookup"><span data-stu-id="4a467-1837"><paramref name="style" /> includes the <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> or <see cref="F:System.Globalization.NumberStyles.HexNumber" /> flag along with another value.</span></span></exception>
        <altmember cref="Overload:System.Numerics.BigInteger.ToString" />
      </Docs>
    </Member>
    <Member MemberName="TryWriteBytes">
      <MemberSignature Language="C#" Value="public bool TryWriteBytes (Span&lt;byte&gt; destination, out int bytesWritten, bool isUnsigned = false, bool isBigEndian = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryWriteBytes(valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten, bool isUnsigned, bool isBigEndian) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.TryWriteBytes(System.Span{System.Byte},System.Int32@,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryWriteBytes (destination As Span(Of Byte), ByRef bytesWritten As Integer, Optional isUnsigned As Boolean = false, Optional isBigEndian As Boolean = false) As Boolean" />
      <MemberSignature Language="F#" Value="member this.TryWriteBytes : Span&lt;byte&gt; *  * bool * bool -&gt; bool" Usage="bigInteger.TryWriteBytes (destination, bytesWritten, isUnsigned, isBigEndian)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="isUnsigned" Type="System.Boolean" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="isBigEndian" Type="System.Boolean" Index="3" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <param name="bytesWritten">To be added.</param>
        <param name="isUnsigned">To be added.</param>
        <param name="isBigEndian">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Zero">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger Zero { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Numerics.BigInteger Zero" />
      <MemberSignature Language="DocId" Value="P:System.Numerics.BigInteger.Zero" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Zero As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Numerics::BigInteger Zero { System::Numerics::BigInteger get(); };" />
      <MemberSignature Language="F#" Value="member this.Zero : System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.Zero" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4a467-1838">Obtiene un valor que representa el número 0 (cero).</span><span class="sxs-lookup"><span data-stu-id="4a467-1838">Gets a value that represents the number 0 (zero).</span></span></summary>
        <value><span data-ttu-id="4a467-1839">Entero cuyo valor es 0 (cero).</span><span class="sxs-lookup"><span data-stu-id="4a467-1839">An integer whose value is 0 (zero).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a467-1840">La <xref:System.Numerics.BigInteger> objeto devuelto por esta propiedad proporciona un origen de un valor de cero conveniente para su uso en las asignaciones y comparaciones.</span><span class="sxs-lookup"><span data-stu-id="4a467-1840">The <xref:System.Numerics.BigInteger> object returned by this property provides a convenient source of a zero value for use in assignments and comparisons.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Numerics.BigInteger.IsZero" />
      </Docs>
    </Member>
  </Members>
</Type>
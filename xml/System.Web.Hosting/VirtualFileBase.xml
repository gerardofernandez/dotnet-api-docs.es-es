<Type Name="VirtualFileBase" FullName="System.Web.Hosting.VirtualFileBase">
  <Metadata><Meta Name="ms.openlocfilehash" Value="44bcaae1402ca2e6f83b025b597ba4e5a8a0425c" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39734856" /></Metadata><TypeSignature Language="C#" Value="public abstract class VirtualFileBase : MarshalByRefObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit VirtualFileBase extends System.MarshalByRefObject" />
  <TypeSignature Language="DocId" Value="T:System.Web.Hosting.VirtualFileBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class VirtualFileBase&#xA;Inherits MarshalByRefObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class VirtualFileBase abstract : MarshalByRefObject" />
  <TypeSignature Language="F#" Value="type VirtualFileBase = class&#xA;    inherit MarshalByRefObject" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="d74fd-101">Proporciona la implementation básica para los objetos <see cref="T:System.Web.Hosting.VirtualFile" /> y <see cref="T:System.Web.Hosting.VirtualDirectory" />.</span><span class="sxs-lookup"><span data-stu-id="d74fd-101">Provides the core implementation for the <see cref="T:System.Web.Hosting.VirtualFile" /> and <see cref="T:System.Web.Hosting.VirtualDirectory" /> objects.</span></span> <span data-ttu-id="d74fd-102">Como clase abstracta, no se pueden crear instancias.</span><span class="sxs-lookup"><span data-stu-id="d74fd-102">An abstract class, it cannot be instantiated.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d74fd-103">El <xref:System.Web.Hosting.VirtualFileBase> clase abstracta proporciona los métodos comunes y propiedades que se comparten entre el <xref:System.Web.Hosting.VirtualFile> y <xref:System.Web.Hosting.VirtualDirectory> objetos.</span><span class="sxs-lookup"><span data-stu-id="d74fd-103">The <xref:System.Web.Hosting.VirtualFileBase> abstract class provides the common methods and properties shared between the <xref:System.Web.Hosting.VirtualFile> and <xref:System.Web.Hosting.VirtualDirectory> objects.</span></span> <span data-ttu-id="d74fd-104">Las implementaciones de estas clases proporcionan el tiempo de ejecución ASP.NET con acceso a archivos y rutas de acceso utilizadas para la compilación.</span><span class="sxs-lookup"><span data-stu-id="d74fd-104">Implementations of these classes provide the ASP.NET runtime with access to files and paths used for compilation.</span></span> <span data-ttu-id="d74fd-105">Para obtener más información sobre el uso de archivos virtuales y las rutas de acceso, consulte el <xref:System.Web.Hosting.VirtualPathProvider> clase.</span><span class="sxs-lookup"><span data-stu-id="d74fd-105">For more information on using virtual files and paths, see the <xref:System.Web.Hosting.VirtualPathProvider> class.</span></span>  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><span data-ttu-id="d74fd-106"><para>Al heredar de la <see cref="T:System.Web.Hosting.VirtualFileBase" /> (clase), debe invalidar el <see cref="P:System.Web.Hosting.VirtualFileBase.IsDirectory" /> propiedad para indicar si el objeto derivado es un directorio virtual o un archivo virtual. Si derivan de la <see cref="T:System.Web.Hosting.VirtualFile" /> o <see cref="T:System.Web.Hosting.VirtualDirectory" /> (clase), el <see cref="P:System.Web.Hosting.VirtualFileBase.IsDirectory" /> ya está establecida la propiedad.</para></span><span class="sxs-lookup"><span data-stu-id="d74fd-106"><para>When you inherit from the <see cref="T:System.Web.Hosting.VirtualFileBase" /> class, you must override the <see cref="P:System.Web.Hosting.VirtualFileBase.IsDirectory" /> property to indicate whether the derived object is a virtual directory or a virtual file. If you derive from either the <see cref="T:System.Web.Hosting.VirtualFile" /> or the <see cref="T:System.Web.Hosting.VirtualDirectory" /> class, the <see cref="P:System.Web.Hosting.VirtualFileBase.IsDirectory" /> property is already set.</para></span></span></block>
    <altmember cref="T:System.Web.Hosting.VirtualFile" />
    <altmember cref="T:System.Web.Hosting.VirtualDirectory" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected VirtualFileBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualFileBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; VirtualFileBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d74fd-107">Inicializa la clase para que la use una instancia de la clase heredada.</span><span class="sxs-lookup"><span data-stu-id="d74fd-107">Initializes the class for use by an inherited class instance.</span></span> <span data-ttu-id="d74fd-108">A este constructor sólo lo puede llamar una clase heredada.</span><span class="sxs-lookup"><span data-stu-id="d74fd-108">This constructor can be called only by an inherited class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d74fd-109">Aunque no se puede crear directamente una instancia de la <xref:System.Web.Hosting.VirtualFileBase> (clase), puede llamar a este constructor desde el constructor de una clase heredera.</span><span class="sxs-lookup"><span data-stu-id="d74fd-109">Although you cannot directly construct an instance of the <xref:System.Web.Hosting.VirtualFileBase> class, you can call this constructor from the constructor of an inheriting class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Hosting.VirtualFile" />
        <altmember cref="T:System.Web.Hosting.VirtualDirectory" />
      </Docs>
    </Member>
    <Member MemberName="InitializeLifetimeService">
      <MemberSignature Language="C#" Value="public override object InitializeLifetimeService ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object InitializeLifetimeService() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualFileBase.InitializeLifetimeService" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function InitializeLifetimeService () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ InitializeLifetimeService();" />
      <MemberSignature Language="F#" Value="override this.InitializeLifetimeService : unit -&gt; obj" Usage="virtualFileBase.InitializeLifetimeService " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d74fd-110">Concede a una instancia de <see cref="T:System.Web.Hosting.VirtualFileBase" /> un período de duración infinito ya que impide que se genere una concesión.</span><span class="sxs-lookup"><span data-stu-id="d74fd-110">Gives a <see cref="T:System.Web.Hosting.VirtualFileBase" /> instance an infinite lifetime by preventing a lease from being created.</span></span></summary>
        <returns><span data-ttu-id="d74fd-111">Siempre es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d74fd-111">Always <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d74fd-112">Este método invalida el <xref:System.MarshalByRefObject.InitializeLifetimeService%2A> método en su clase base.</span><span class="sxs-lookup"><span data-stu-id="d74fd-112">This method overrides the <xref:System.MarshalByRefObject.InitializeLifetimeService%2A> method on its base class.</span></span> <span data-ttu-id="d74fd-113">Siempre devuelve `null` y así evita que se cree una concesión que limite la duración del directorio o archivo virtual.</span><span class="sxs-lookup"><span data-stu-id="d74fd-113">It always returns `null` and thereby prevents a lease from being created that would limit the lifetime of the virtual file or directory.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Hosting.VirtualFile" />
        <altmember cref="T:System.Web.Hosting.VirtualDirectory" />
      </Docs>
    </Member>
    <Member MemberName="IsDirectory">
      <MemberSignature Language="C#" Value="public abstract bool IsDirectory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDirectory" />
      <MemberSignature Language="DocId" Value="P:System.Web.Hosting.VirtualFileBase.IsDirectory" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsDirectory As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsDirectory { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDirectory : bool" Usage="System.Web.Hosting.VirtualFileBase.IsDirectory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d74fd-114">Cuando se reemplaza en una clase derivada, obtiene un valor que indica si la instancia de <see cref="T:System.Web.Hosting.VirtualFileBase" /> representa un archivo virtual o un directorio virtual.</span><span class="sxs-lookup"><span data-stu-id="d74fd-114">When overridden in a derived class, gets a value indicating whether the <see cref="T:System.Web.Hosting.VirtualFileBase" /> instance represents a virtual file or a virtual directory.</span></span></summary>
        <value><span data-ttu-id="d74fd-115"><see langword="true" /> si la instancia de <see cref="T:System.Web.Hosting.VirtualFileBase" /> es un directorio virtual; de lo contrario, <see langword="false" /> si la instancia de <see cref="T:System.Web.Hosting.VirtualFileBase" /> es un archivo virtual.</span><span class="sxs-lookup"><span data-stu-id="d74fd-115"><see langword="true" /> if the <see cref="T:System.Web.Hosting.VirtualFileBase" /> instance is a virtual directory; otherwise, <see langword="false" /> if the <see cref="T:System.Web.Hosting.VirtualFileBase" /> instance is a virtual file.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.Hosting.VirtualFile" />
        <altmember cref="T:System.Web.Hosting.VirtualDirectory" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.Hosting.VirtualFileBase.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Web.Hosting.VirtualFileBase.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d74fd-116">Obtiene el nombre de presentación del recurso virtual.</span><span class="sxs-lookup"><span data-stu-id="d74fd-116">Gets the display name of the virtual resource.</span></span></summary>
        <value><span data-ttu-id="d74fd-117">Nombre de presentación del archivo virtual.</span><span class="sxs-lookup"><span data-stu-id="d74fd-117">The display name of the virtual file.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d74fd-118">El <xref:System.Web.Hosting.VirtualFileBase.Name%2A> propiedad suele ser el nombre de archivo y la extensión asociada con el recurso, aunque los recursos virtuales pueden utilizar nombres arbitrarios.</span><span class="sxs-lookup"><span data-stu-id="d74fd-118">The <xref:System.Web.Hosting.VirtualFileBase.Name%2A> property is typically the file name and extension associated with the resource, although virtual resources may use arbitrary names.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="d74fd-119"><para>El <see cref="P:System.Web.Hosting.VirtualFileBase.Name" /> propiedad debe devolver la grafía correcta del recurso virtual para el proveedor de ruta de acceso virtual. La grafía correcta puede ser diferente de las mayúsculas y minúsculas en la ruta de acceso original.</para></span><span class="sxs-lookup"><span data-stu-id="d74fd-119"><para>The <see cref="P:System.Web.Hosting.VirtualFileBase.Name" /> property should return the correct casing of the virtual resource for the virtual path provider. The correct casing may be different from the casing in the original path.</para></span></span></block>
        <altmember cref="T:System.Web.Hosting.VirtualFile" />
        <altmember cref="T:System.Web.Hosting.VirtualDirectory" />
      </Docs>
    </Member>
    <Member MemberName="VirtualPath">
      <MemberSignature Language="C#" Value="public string VirtualPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string VirtualPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.Hosting.VirtualFileBase.VirtualPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VirtualPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ VirtualPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.VirtualPath : string" Usage="System.Web.Hosting.VirtualFileBase.VirtualPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d74fd-120">Obtiene la ruta de acceso del archivo virtual.</span><span class="sxs-lookup"><span data-stu-id="d74fd-120">Gets the virtual file path.</span></span></summary>
        <value><span data-ttu-id="d74fd-121">Ruta de acceso al archivo virtual.</span><span class="sxs-lookup"><span data-stu-id="d74fd-121">The path to the virtual file.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d74fd-122">El <xref:System.Web.Hosting.VirtualFileBase.VirtualPath%2A> propiedad devuelve la ruta de acceso al archivo o directorio representado por este objeto.</span><span class="sxs-lookup"><span data-stu-id="d74fd-122">The <xref:System.Web.Hosting.VirtualFileBase.VirtualPath%2A> property returns the path to the file or directory represented by this object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Hosting.VirtualFile" />
        <altmember cref="T:System.Web.Hosting.VirtualDirectory" />
      </Docs>
    </Member>
  </Members>
</Type>
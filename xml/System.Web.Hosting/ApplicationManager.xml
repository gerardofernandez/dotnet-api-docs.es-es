<Type Name="ApplicationManager" FullName="System.Web.Hosting.ApplicationManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f707beb8a89da95aee97edce8e516a22b60703dc" /><Meta Name="ms.sourcegitcommit" Value="adc8598fd19d91438cacaa8fa7ce613e28c8218e" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="12/11/2018" /><Meta Name="ms.locfileid" Value="53225572" /></Metadata><TypeSignature Language="C#" Value="public sealed class ApplicationManager : MarshalByRefObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ApplicationManager extends System.MarshalByRefObject" />
  <TypeSignature Language="DocId" Value="T:System.Web.Hosting.ApplicationManager" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ApplicationManager&#xA;Inherits MarshalByRefObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class ApplicationManager sealed : MarshalByRefObject" />
  <TypeSignature Language="F#" Value="type ApplicationManager = class&#xA;    inherit MarshalByRefObject" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="f449a-101">Administra dominios de la aplicación ASP.NET para aplicaciones host ASP.NET.</span><span class="sxs-lookup"><span data-stu-id="f449a-101">Manages ASP.NET application domains for an ASP.NET hosting application.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f449a-102">La <xref:System.Web.Hosting.ApplicationManager> objeto proporciona administración de la duración de objetos en el entorno de hospedaje de una aplicación ASP.NET.</span><span class="sxs-lookup"><span data-stu-id="f449a-102">The <xref:System.Web.Hosting.ApplicationManager> object provides lifetime management of objects in the hosting environment for an ASP.NET application.</span></span> <span data-ttu-id="f449a-103">Es responsable de:</span><span class="sxs-lookup"><span data-stu-id="f449a-103">It is responsible for:</span></span>  
  
-   <span data-ttu-id="f449a-104">Activar e inicializar las aplicaciones ASP.NET.</span><span class="sxs-lookup"><span data-stu-id="f449a-104">Activating and initializing ASP.NET applications.</span></span>  
  
-   <span data-ttu-id="f449a-105">Administrar la duración de la aplicación y la duración de objetos registrados en la aplicación.</span><span class="sxs-lookup"><span data-stu-id="f449a-105">Managing the application lifetime and the lifetime of objects registered in the application.</span></span>  
  
-   <span data-ttu-id="f449a-106">Exponer objetos utilizados por el entorno de hospedaje para procesar solicitudes de aplicación de ASP.NET.</span><span class="sxs-lookup"><span data-stu-id="f449a-106">Exposing objects used by the hosting environment to process ASP.NET application requests.</span></span>  
  
-   <span data-ttu-id="f449a-107">Proporcionar una lista de aplicaciones que se ejecutan en el proceso de hospedaje en un momento dado.</span><span class="sxs-lookup"><span data-stu-id="f449a-107">Providing a list of applications running in the hosting process at any given moment.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="applicationManager.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f449a-108">Cierra todos los dominios de aplicación.</span><span class="sxs-lookup"><span data-stu-id="f449a-108">Shuts down all application domains.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f449a-109">Si una llamada a la <xref:System.Web.Hosting.ApplicationManager.Close%2A> método reduce el recuento de referencias de aplicaciones mediante el Administrador de aplicaciones en 0, el <xref:System.Web.Hosting.ApplicationManager.Close%2A> llamadas al método el <xref:System.Web.Hosting.ApplicationManager.ShutdownAll%2A> método.</span><span class="sxs-lookup"><span data-stu-id="f449a-109">If a call to the <xref:System.Web.Hosting.ApplicationManager.Close%2A> method reduces the reference count of applications using the application manager to 0, the <xref:System.Web.Hosting.ApplicationManager.Close%2A> method calls the <xref:System.Web.Hosting.ApplicationManager.ShutdownAll%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateObject">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f449a-110">Crea un objeto para el dominio de aplicación y el tipo de objeto especificados.</span><span class="sxs-lookup"><span data-stu-id="f449a-110">Creates an object for the specified application domain and object type.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateObject">
      <MemberSignature Language="C#" Value="public System.Web.Hosting.IRegisteredObject CreateObject (System.Web.Hosting.IApplicationHost appHost, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Hosting.IRegisteredObject CreateObject(class System.Web.Hosting.IApplicationHost appHost, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.CreateObject(System.Web.Hosting.IApplicationHost,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::Hosting::IRegisteredObject ^ CreateObject(System::Web::Hosting::IApplicationHost ^ appHost, Type ^ type);" />
      <MemberSignature Language="F#" Value="member this.CreateObject : System.Web.Hosting.IApplicationHost * Type -&gt; System.Web.Hosting.IRegisteredObject" Usage="applicationManager.CreateObject (appHost, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Hosting.IRegisteredObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appHost" Type="System.Web.Hosting.IApplicationHost" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="appHost"><span data-ttu-id="f449a-111">Un objeto <see cref="T:System.Web.Hosting.IApplicationHost" />.</span><span class="sxs-lookup"><span data-stu-id="f449a-111">An <see cref="T:System.Web.Hosting.IApplicationHost" /> object.</span></span></param>
        <param name="type"><span data-ttu-id="f449a-112">Tipo del objeto que se va a crear.</span><span class="sxs-lookup"><span data-stu-id="f449a-112">The type of the object to create.</span></span></param>
        <summary><span data-ttu-id="f449a-113">Crea un objeto para el dominio de aplicación especificado, basado en el tipo.</span><span class="sxs-lookup"><span data-stu-id="f449a-113">Creates an object for the specified application domain, based on type.</span></span></summary>
        <returns><span data-ttu-id="f449a-114">Un nuevo objeto del tipo especificado en <paramref name="type" />.</span><span class="sxs-lookup"><span data-stu-id="f449a-114">A new object of the type specified in <paramref name="type" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f449a-115"><xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> se introdujo en .NET Framework versión 3.5.</span><span class="sxs-lookup"><span data-stu-id="f449a-115"><xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="f449a-116">Para más información, vea [Versiones y dependencias](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="f449a-116">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f449a-117">No existe una ruta de acceso física de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="f449a-117">A physical path for the application does not exist.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f449a-118">El valor de <paramref name="appHost" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f449a-118"><paramref name="appHost" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="f449a-119">\- o -</span><span class="sxs-lookup"><span data-stu-id="f449a-119">\- or -</span></span> 
 <span data-ttu-id="f449a-120">El valor de <paramref name="type" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f449a-120"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateObject">
      <MemberSignature Language="C#" Value="public System.Web.Hosting.IRegisteredObject CreateObject (string appId, Type type, string virtualPath, string physicalPath, bool failIfExists);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Hosting.IRegisteredObject CreateObject(string appId, class System.Type type, string virtualPath, string physicalPath, bool failIfExists) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.CreateObject(System.String,System.Type,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::Hosting::IRegisteredObject ^ CreateObject(System::String ^ appId, Type ^ type, System::String ^ virtualPath, System::String ^ physicalPath, bool failIfExists);" />
      <MemberSignature Language="F#" Value="member this.CreateObject : string * Type * string * string * bool -&gt; System.Web.Hosting.IRegisteredObject" Usage="applicationManager.CreateObject (appId, type, virtualPath, physicalPath, failIfExists)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Hosting.IRegisteredObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appId" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="physicalPath" Type="System.String" />
        <Parameter Name="failIfExists" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="appId"><span data-ttu-id="f449a-121">El identificador único para la aplicación que posee el objeto.</span><span class="sxs-lookup"><span data-stu-id="f449a-121">The unique identifier for the application that owns the object.</span></span></param>
        <param name="type"><span data-ttu-id="f449a-122">Tipo del objeto que se va a crear.</span><span class="sxs-lookup"><span data-stu-id="f449a-122">The type of the object to create.</span></span></param>
        <param name="virtualPath"><span data-ttu-id="f449a-123">Ruta de acceso virtual a la aplicación.</span><span class="sxs-lookup"><span data-stu-id="f449a-123">The virtual path to the application.</span></span></param>
        <param name="physicalPath"><span data-ttu-id="f449a-124">Ruta de acceso física a la aplicación.</span><span class="sxs-lookup"><span data-stu-id="f449a-124">The physical path to the application.</span></span></param>
        <param name="failIfExists"><span data-ttu-id="f449a-125"><see langword="true" /> para producir una excepción si hay actualmente registrado un objeto del tipo especificado; <see langword="false" /> para devolver el objeto registrado existente del tipo especificado.</span><span class="sxs-lookup"><span data-stu-id="f449a-125"><see langword="true" /> to throw an exception if an object of the specified type is currently registered; <see langword="false" /> to return the existing registered object of the specified type.</span></span></param>
        <summary><span data-ttu-id="f449a-126">Crea un objeto para el dominio de aplicación especificado basado en el tipo, las rutas de acceso virtual y física, y un valor booleano que indica el comportamiento del error si ya existe un objeto del tipo especificado.</span><span class="sxs-lookup"><span data-stu-id="f449a-126">Creates an object for the specified application domain based on type, virtual and physical paths, and a Boolean value indicating failure behavior when an object of the specified type already exists.</span></span></summary>
        <returns><span data-ttu-id="f449a-127">Nuevo objeto del <paramref name="type" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="f449a-127">A new object of the specified <paramref name="type" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f449a-128">El <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> método se utiliza para crear y registrar los objetos de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="f449a-128">The <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> method is used to create and register objects in the application.</span></span> <span data-ttu-id="f449a-129">Se puede crear solo un objeto de cada tipo.</span><span class="sxs-lookup"><span data-stu-id="f449a-129">Only one object of each type can be created.</span></span> <span data-ttu-id="f449a-130">Si necesita crear varios objetos del mismo tipo, debe implementar un generador de objetos.</span><span class="sxs-lookup"><span data-stu-id="f449a-130">If you need to create multiple objects of the same type, you must implement an object factory.</span></span> <span data-ttu-id="f449a-131">Para obtener más información, vea el ejemplo de código en este tema.</span><span class="sxs-lookup"><span data-stu-id="f449a-131">For more information, see the code example in this topic.</span></span>  
  
 <span data-ttu-id="f449a-132">Cada aplicación, identificada por un identificador único de la aplicación, se ejecuta en su propio dominio de aplicación.</span><span class="sxs-lookup"><span data-stu-id="f449a-132">Each application, identified by a unique application identifier, runs in its own application domain.</span></span> <span data-ttu-id="f449a-133">El <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> método crea un objeto del tipo especificado en el dominio de aplicación de la aplicación especificada en el `appID` parámetro.</span><span class="sxs-lookup"><span data-stu-id="f449a-133">The <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> method creates an object of the specified type in the application domain of the application specified in the `appID` parameter.</span></span> <span data-ttu-id="f449a-134">Si no existe un dominio de aplicación para la aplicación especificada, se crea uno antes de crear el objeto.</span><span class="sxs-lookup"><span data-stu-id="f449a-134">If an application domain does not exist for the specified application, one is created before the object is created.</span></span>  
  
 <span data-ttu-id="f449a-135">El `failIfExists` parámetro controla el comportamiento de la <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> método cuando ya existe un objeto del tipo especificado en la aplicación.</span><span class="sxs-lookup"><span data-stu-id="f449a-135">The `failIfExists` parameter controls the behavior of the <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> method when an object of the specified type already exists in the application.</span></span> <span data-ttu-id="f449a-136">Cuando `failIfExists` es `true`, <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> método produce una <xref:System.InvalidOperationException> excepción.</span><span class="sxs-lookup"><span data-stu-id="f449a-136">When `failIfExists` is `true`, the <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> method throws an <xref:System.InvalidOperationException> exception.</span></span>  
  
 <span data-ttu-id="f449a-137">Cuando `failIfExists` es `false`, el <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> método devuelve el objeto registrado existente del tipo especificado.</span><span class="sxs-lookup"><span data-stu-id="f449a-137">When `failIfExists` is `false`, the <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> method returns the existing registered object of the specified type.</span></span>  
  
 <span data-ttu-id="f449a-138">El <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> método llama a la sobrecarga que toma un adicionales `throwOnError` parámetro con `throwOnError` establecido en `false`.</span><span class="sxs-lookup"><span data-stu-id="f449a-138">The <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> method calls the overload that takes an additional `throwOnError` parameter with `throwOnError` set to `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f449a-139">El ejemplo de código siguiente es una implementación del patrón de diseño de generador de objetos para los objetos registrados.</span><span class="sxs-lookup"><span data-stu-id="f449a-139">The following code example is an implementation of the object-factory design pattern for registered objects.</span></span> <span data-ttu-id="f449a-140">Con el patrón de fábrica le permite registrar varias instancias de un objeto.</span><span class="sxs-lookup"><span data-stu-id="f449a-140">Using the factory pattern enables you to register multiple instances of an object.</span></span> <span data-ttu-id="f449a-141">El ejemplo contiene dos objetos: `SampleComponent`, que es el objeto de la aplicación usará varias instancias de, y `SampleComponentFactory`, que administra una lista de `SampleComponent` instancias.</span><span class="sxs-lookup"><span data-stu-id="f449a-141">The example contains two objects: `SampleComponent`, which is the object the application will use multiple instances of, and `SampleComponentFactory`, which manages a list of `SampleComponent` instances.</span></span>  
  
 [!code-csharp[System.Web.Hosting.ApplicationManager#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Hosting.ApplicationManager/CS/appManagercs.aspx.cs#1)]
 [!code-vb[System.Web.Hosting.ApplicationManager#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Hosting.ApplicationManager/VB/appManagervb.aspx.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f449a-142"><paramref name="physicalPath" /> es <see langword="null" /></span><span class="sxs-lookup"><span data-stu-id="f449a-142"><paramref name="physicalPath" /> is <see langword="null" /></span></span>  
  
<span data-ttu-id="f449a-143">\- o -</span><span class="sxs-lookup"><span data-stu-id="f449a-143">\- or -</span></span> 
 <span data-ttu-id="f449a-144"><paramref name="physicalPath" /> no es una ruta de acceso a la aplicación válida</span><span class="sxs-lookup"><span data-stu-id="f449a-144"><paramref name="physicalPath" /> is not a valid application path.</span></span>  
  
<span data-ttu-id="f449a-145">\- o -</span><span class="sxs-lookup"><span data-stu-id="f449a-145">\- or -</span></span> 
 <span data-ttu-id="f449a-146"><paramref name="type" /> no implementa la interfaz <see cref="T:System.Web.Hosting.IRegisteredObject" />.</span><span class="sxs-lookup"><span data-stu-id="f449a-146"><paramref name="type" /> does not implement the <see cref="T:System.Web.Hosting.IRegisteredObject" /> interface.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f449a-147">El valor de <paramref name="appID" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f449a-147"><paramref name="appID" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="f449a-148">\- o -</span><span class="sxs-lookup"><span data-stu-id="f449a-148">\- or -</span></span> 
 <span data-ttu-id="f449a-149">El valor de <paramref name="type" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f449a-149"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f449a-150"><paramref name="failIfExists" /> es <see langword="true" /> y ya hay registrado un objeto del tipo especificado.</span><span class="sxs-lookup"><span data-stu-id="f449a-150"><paramref name="failIfExists" /> is <see langword="true" /> and an object of the specified type is already registered.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateObject">
      <MemberSignature Language="C#" Value="public System.Web.Hosting.IRegisteredObject CreateObject (string appId, Type type, string virtualPath, string physicalPath, bool failIfExists, bool throwOnError);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Hosting.IRegisteredObject CreateObject(string appId, class System.Type type, string virtualPath, string physicalPath, bool failIfExists, bool throwOnError) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.CreateObject(System.String,System.Type,System.String,System.String,System.Boolean,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::Hosting::IRegisteredObject ^ CreateObject(System::String ^ appId, Type ^ type, System::String ^ virtualPath, System::String ^ physicalPath, bool failIfExists, bool throwOnError);" />
      <MemberSignature Language="F#" Value="member this.CreateObject : string * Type * string * string * bool * bool -&gt; System.Web.Hosting.IRegisteredObject" Usage="applicationManager.CreateObject (appId, type, virtualPath, physicalPath, failIfExists, throwOnError)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Hosting.IRegisteredObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appId" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="physicalPath" Type="System.String" />
        <Parameter Name="failIfExists" Type="System.Boolean" />
        <Parameter Name="throwOnError" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="appId"><span data-ttu-id="f449a-151">El identificador único para la aplicación que posee el objeto.</span><span class="sxs-lookup"><span data-stu-id="f449a-151">The unique identifier for the application that owns the object.</span></span></param>
        <param name="type"><span data-ttu-id="f449a-152">Tipo del objeto que se va a crear.</span><span class="sxs-lookup"><span data-stu-id="f449a-152">The type of the object to create.</span></span></param>
        <param name="virtualPath"><span data-ttu-id="f449a-153">Ruta de acceso virtual a la aplicación.</span><span class="sxs-lookup"><span data-stu-id="f449a-153">The virtual path to the application.</span></span></param>
        <param name="physicalPath"><span data-ttu-id="f449a-154">Ruta de acceso física a la aplicación.</span><span class="sxs-lookup"><span data-stu-id="f449a-154">The physical path to the application.</span></span></param>
        <param name="failIfExists"><span data-ttu-id="f449a-155"><see langword="true" /> para producir una excepción si hay actualmente registrado un objeto del tipo especificado; <see langword="false" /> para devolver el objeto registrado existente del tipo especificado.</span><span class="sxs-lookup"><span data-stu-id="f449a-155"><see langword="true" /> to throw an exception if an object of the specified type is currently registered; <see langword="false" /> to return the existing registered object of the specified type.</span></span></param>
        <param name="throwOnError"><span data-ttu-id="f449a-156"><see langword="true" /> para iniciar excepciones de error de inicialización del host; <see langword="false" /> para no iniciar excepciones de inicialización del host.</span><span class="sxs-lookup"><span data-stu-id="f449a-156"><see langword="true" /> to throw exceptions for hosting initialization errors; <see langword="false" /> to not throw hosting initialization exceptions.</span></span></param>
        <summary><span data-ttu-id="f449a-157">Crea un objeto para el dominio de aplicación especificado, basado en el tipo, las rutas de acceso virtual y física, un valor booleano que indica el comportamiento de error si ya existe un objeto del tipo especificado, y un valor booleano que indica si se inician excepciones de error de inicialización del host.</span><span class="sxs-lookup"><span data-stu-id="f449a-157">Creates an object for the specified application domain based on type, virtual and physical paths, a Boolean value indicating failure behavior when an object of the specified type already exists, and a Boolean value indicating whether hosting initialization error exceptions are thrown.</span></span></summary>
        <returns><span data-ttu-id="f449a-158">Nuevo objeto del <paramref name="type" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="f449a-158">A new object of the specified <paramref name="type" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f449a-159">Esta sobrecarga de la <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> método proporciona la `throwOnError` parámetro, que le permite controlar si se producen excepciones de inicialización del host.</span><span class="sxs-lookup"><span data-stu-id="f449a-159">This overload of the <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> method provides the `throwOnError` parameter, which allows you to control whether hosting initialization exceptions are thrown.</span></span> <span data-ttu-id="f449a-160">La sobrecarga de la <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> método que no proporciona `throwOnError` llama a esta sobrecarga con el parámetro establecido en `false`.</span><span class="sxs-lookup"><span data-stu-id="f449a-160">The overload of the <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> method that does not provide `throwOnError` calls this overload with the parameter set to `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f449a-161"><paramref name="physicalPath" /> es <see langword="null" /></span><span class="sxs-lookup"><span data-stu-id="f449a-161"><paramref name="physicalPath" /> is <see langword="null" /></span></span>  
  
<span data-ttu-id="f449a-162">\- o -</span><span class="sxs-lookup"><span data-stu-id="f449a-162">\- or -</span></span> 
 <span data-ttu-id="f449a-163"><paramref name="physicalPath" /> no es una ruta de acceso a la aplicación válida</span><span class="sxs-lookup"><span data-stu-id="f449a-163"><paramref name="physicalPath" /> is not a valid application path.</span></span>  
  
<span data-ttu-id="f449a-164">\- o -</span><span class="sxs-lookup"><span data-stu-id="f449a-164">\- or -</span></span> 
 <span data-ttu-id="f449a-165"><paramref name="type" /> no implementa la interfaz <see cref="T:System.Web.Hosting.IRegisteredObject" />.</span><span class="sxs-lookup"><span data-stu-id="f449a-165"><paramref name="type" /> does not implement the <see cref="T:System.Web.Hosting.IRegisteredObject" /> interface.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f449a-166">El valor de <paramref name="appID" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f449a-166"><paramref name="appID" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="f449a-167">\- o -</span><span class="sxs-lookup"><span data-stu-id="f449a-167">\- or -</span></span> 
 <span data-ttu-id="f449a-168">El valor de <paramref name="type" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f449a-168"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f449a-169"><paramref name="failIfExists" /> es <see langword="true" /> y ya hay registrado un objeto del tipo especificado.</span><span class="sxs-lookup"><span data-stu-id="f449a-169"><paramref name="failIfExists" /> is <see langword="true" /> and an object of the specified type is already registered.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAppDomain">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f449a-170">Obtiene el dominio de aplicación de una aplicación especificada.</span><span class="sxs-lookup"><span data-stu-id="f449a-170">Gets the application domain of a specified application.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAppDomain">
      <MemberSignature Language="C#" Value="public AppDomain GetAppDomain (string appId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.AppDomain GetAppDomain(string appId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.GetAppDomain(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAppDomain (appId As String) As AppDomain" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AppDomain ^ GetAppDomain(System::String ^ appId);" />
      <MemberSignature Language="F#" Value="member this.GetAppDomain : string -&gt; AppDomain" Usage="applicationManager.GetAppDomain appId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AppDomain</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="appId"><span data-ttu-id="f449a-171">Identificador único de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="f449a-171">The unique identifier for the application.</span></span></param>
        <summary><span data-ttu-id="f449a-172">Obtiene el dominio de aplicación de la aplicación especificada.</span><span class="sxs-lookup"><span data-stu-id="f449a-172">Gets the application domain of the specified application.</span></span></summary>
        <returns><span data-ttu-id="f449a-173">Dominio de aplicación de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="f449a-173">The application domain of the application.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAppDomain">
      <MemberSignature Language="C#" Value="public AppDomain GetAppDomain (System.Web.Hosting.IApplicationHost appHost);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.AppDomain GetAppDomain(class System.Web.Hosting.IApplicationHost appHost) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.GetAppDomain(System.Web.Hosting.IApplicationHost)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAppDomain (appHost As IApplicationHost) As AppDomain" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AppDomain ^ GetAppDomain(System::Web::Hosting::IApplicationHost ^ appHost);" />
      <MemberSignature Language="F#" Value="member this.GetAppDomain : System.Web.Hosting.IApplicationHost -&gt; AppDomain" Usage="applicationManager.GetAppDomain appHost" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AppDomain</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appHost" Type="System.Web.Hosting.IApplicationHost" />
      </Parameters>
      <Docs>
        <param name="appHost"><span data-ttu-id="f449a-174">Host para el que se va a obtener el dominio de aplicación.</span><span class="sxs-lookup"><span data-stu-id="f449a-174">The host to get the application domain for.</span></span></param>
        <summary><span data-ttu-id="f449a-175">Obtiene el dominio de aplicación de una aplicación con el host especificado.</span><span class="sxs-lookup"><span data-stu-id="f449a-175">Gets the application domain of an application using the specified host.</span></span></summary>
        <returns><span data-ttu-id="f449a-176">Dominio de aplicación de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="f449a-176">The application domain of the application.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApplicationManager">
      <MemberSignature Language="C#" Value="public static System.Web.Hosting.ApplicationManager GetApplicationManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Hosting.ApplicationManager GetApplicationManager() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.GetApplicationManager" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetApplicationManager () As ApplicationManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Hosting::ApplicationManager ^ GetApplicationManager();" />
      <MemberSignature Language="F#" Value="static member GetApplicationManager : unit -&gt; System.Web.Hosting.ApplicationManager" Usage="System.Web.Hosting.ApplicationManager.GetApplicationManager " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Hosting.ApplicationManager</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f449a-177">Devuelve la instancia única del objeto <see cref="T:System.Web.Hosting.ApplicationManager" /> asociado a este proceso host ASP.NET.</span><span class="sxs-lookup"><span data-stu-id="f449a-177">Returns the single instance of the <see cref="T:System.Web.Hosting.ApplicationManager" /> object associated with this ASP.NET host process.</span></span></summary>
        <returns><span data-ttu-id="f449a-178">La instancia única del objeto <see cref="T:System.Web.Hosting.ApplicationManager" /> asociada al proceso host ASP.NET que está en ejecución.</span><span class="sxs-lookup"><span data-stu-id="f449a-178">The single instance of the <see cref="T:System.Web.Hosting.ApplicationManager" /> object associated with the ASP.NET host process that is running.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f449a-179">Solo una instancia de la <xref:System.Web.Hosting.ApplicationManager> un proceso de host ASP.NET en el dominio de aplicación predeterminado crea el objeto.</span><span class="sxs-lookup"><span data-stu-id="f449a-179">Only one instance of the <xref:System.Web.Hosting.ApplicationManager> object is created by an ASP.NET host process in the default application domain.</span></span> <span data-ttu-id="f449a-180">Si una instancia de la <xref:System.Web.Hosting.ApplicationManager> clase no está disponible, el <xref:System.Web.Hosting.ApplicationManager.GetApplicationManager%2A> método primero crea una instancia de la <xref:System.Web.Hosting.ApplicationManager> clase y, a continuación, devuelve el objeto recién creado.</span><span class="sxs-lookup"><span data-stu-id="f449a-180">If an instance of the <xref:System.Web.Hosting.ApplicationManager> class is not available, the <xref:System.Web.Hosting.ApplicationManager.GetApplicationManager%2A> method first creates an instance of the <xref:System.Web.Hosting.ApplicationManager> class and then returns the newly created object.</span></span> <span data-ttu-id="f449a-181">Si una instancia de la <xref:System.Web.Hosting.ApplicationManager> clase se creó anteriormente, el <xref:System.Web.Hosting.ApplicationManager.GetApplicationManager%2A> método devuelve el objeto existente.</span><span class="sxs-lookup"><span data-stu-id="f449a-181">If an instance of the <xref:System.Web.Hosting.ApplicationManager> class was previously created, the <xref:System.Web.Hosting.ApplicationManager.GetApplicationManager%2A> method returns the existing object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f449a-182">El siguiente ejemplo de código utiliza el <xref:System.Web.Hosting.ApplicationManager.GetApplicationManager%2A> método para recuperar el <xref:System.Web.Hosting.ApplicationManager> instancia para una aplicación Web.</span><span class="sxs-lookup"><span data-stu-id="f449a-182">The following code example uses the <xref:System.Web.Hosting.ApplicationManager.GetApplicationManager%2A> method to retrieve the <xref:System.Web.Hosting.ApplicationManager> instance for a Web application.</span></span>  
  
 [!code-aspx-csharp[System.Web.Hosting.ApplicationInfo#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Hosting.ApplicationInfo/CS/applicationInfocs.aspx#1)]
 [!code-aspx-vb[System.Web.Hosting.ApplicationInfo#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Hosting.ApplicationInfo/VB/applicationInfovb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetObject">
      <MemberSignature Language="C#" Value="public System.Web.Hosting.IRegisteredObject GetObject (string appId, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Hosting.IRegisteredObject GetObject(string appId, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.GetObject(System.String,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::Hosting::IRegisteredObject ^ GetObject(System::String ^ appId, Type ^ type);" />
      <MemberSignature Language="F#" Value="member this.GetObject : string * Type -&gt; System.Web.Hosting.IRegisteredObject" Usage="applicationManager.GetObject (appId, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Hosting.IRegisteredObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appId" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="appId"><span data-ttu-id="f449a-183">El identificador único para la aplicación que posee el objeto.</span><span class="sxs-lookup"><span data-stu-id="f449a-183">The unique identifier for the application that owns the object.</span></span></param>
        <param name="type"><span data-ttu-id="f449a-184">El tipo de objeto que se va a devolver.</span><span class="sxs-lookup"><span data-stu-id="f449a-184">The type of the object to return.</span></span></param>
        <summary><span data-ttu-id="f449a-185">Devuelve el objeto registrado del tipo especificado de la aplicación especificada.</span><span class="sxs-lookup"><span data-stu-id="f449a-185">Returns the registered object of the specified type from the specified application.</span></span></summary>
        <returns><span data-ttu-id="f449a-186">Objeto registrado del tipo especificado; o <see langword="null" /> si el tipo no se ha registrado mediante una llamada al método <see cref="M:System.Web.Hosting.ApplicationManager.CreateObject(System.String,System.Type,System.String,System.String,System.Boolean)" />.</span><span class="sxs-lookup"><span data-stu-id="f449a-186">The registered object of the specified type; or <see langword="null" /> if the type has not been registered through a call to the <see cref="M:System.Web.Hosting.ApplicationManager.CreateObject(System.String,System.Type,System.String,System.String,System.Boolean)" /> method.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f449a-187">El valor de <paramref name="appId" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f449a-187"><paramref name="appId" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="f449a-188">O bien</span><span class="sxs-lookup"><span data-stu-id="f449a-188">-or-</span></span> 
 <span data-ttu-id="f449a-189">El valor de <paramref name="type" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f449a-189"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetRunningApplications">
      <MemberSignature Language="C#" Value="public System.Web.Hosting.ApplicationInfo[] GetRunningApplications ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Hosting.ApplicationInfo[] GetRunningApplications() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.GetRunningApplications" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRunningApplications () As ApplicationInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Web::Hosting::ApplicationInfo ^&gt; ^ GetRunningApplications();" />
      <MemberSignature Language="F#" Value="member this.GetRunningApplications : unit -&gt; System.Web.Hosting.ApplicationInfo[]" Usage="applicationManager.GetRunningApplications " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Hosting.ApplicationInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f449a-190">Devuelve una instantánea de aplicaciones en ejecución.</span><span class="sxs-lookup"><span data-stu-id="f449a-190">Returns a snapshot of running applications.</span></span></summary>
        <returns><span data-ttu-id="f449a-191">Matriz de objetos <see cref="T:System.Web.Hosting.ApplicationInfo" /> que contiene información sobre las aplicaciones administradas por esta instancia de <see cref="T:System.Web.Hosting.ApplicationManager" />.</span><span class="sxs-lookup"><span data-stu-id="f449a-191">An array of <see cref="T:System.Web.Hosting.ApplicationInfo" /> objects that contain information about the applications managed by this <see cref="T:System.Web.Hosting.ApplicationManager" /> instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f449a-192">El siguiente ejemplo de código utiliza el <xref:System.Web.Hosting.ApplicationManager.GetRunningApplications%2A> método para mostrar información sobre las aplicaciones administradas por un <xref:System.Web.Hosting.ApplicationManager> instancia.</span><span class="sxs-lookup"><span data-stu-id="f449a-192">The following code example uses the <xref:System.Web.Hosting.ApplicationManager.GetRunningApplications%2A> method to display information about the applications managed by an <xref:System.Web.Hosting.ApplicationManager> instance.</span></span>  
  
 [!code-aspx-csharp[System.Web.Hosting.ApplicationInfo#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Hosting.ApplicationInfo/CS/applicationInfocs.aspx#1)]
 [!code-aspx-vb[System.Web.Hosting.ApplicationInfo#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Hosting.ApplicationInfo/VB/applicationInfovb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeLifetimeService">
      <MemberSignature Language="C#" Value="public override object InitializeLifetimeService ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object InitializeLifetimeService() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.InitializeLifetimeService" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function InitializeLifetimeService () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ InitializeLifetimeService();" />
      <MemberSignature Language="F#" Value="override this.InitializeLifetimeService : unit -&gt; obj" Usage="applicationManager.InitializeLifetimeService " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f449a-193">Proporciona al dominio de aplicación una duración infinita al impedir que se cree una concesión.</span><span class="sxs-lookup"><span data-stu-id="f449a-193">Gives the application domain an infinite lifetime by preventing a lease from being created.</span></span></summary>
        <returns><span data-ttu-id="f449a-194">Siempre es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f449a-194">Always <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f449a-195">Este método invalida el <xref:System.MarshalByRefObject.InitializeLifetimeService%2A> método en su clase base.</span><span class="sxs-lookup"><span data-stu-id="f449a-195">This method overrides the <xref:System.MarshalByRefObject.InitializeLifetimeService%2A> method in its base class.</span></span> <span data-ttu-id="f449a-196">Siempre devuelve `null` y así evita que se cree una concesión que limitaría la duración del dominio de aplicación.</span><span class="sxs-lookup"><span data-stu-id="f449a-196">It always returns `null` and thereby prevents a lease from being created that would limit the application domain's lifetime.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsIdle">
      <MemberSignature Language="C#" Value="public bool IsIdle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsIdle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.IsIdle" />
      <MemberSignature Language="VB.NET" Value="Public Function IsIdle () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsIdle();" />
      <MemberSignature Language="F#" Value="member this.IsIdle : unit -&gt; bool" Usage="applicationManager.IsIdle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f449a-197">Devuelve un valor que indica si todas las aplicaciones alojadas por el proceso están inactivas y no procesan las solicitudes.</span><span class="sxs-lookup"><span data-stu-id="f449a-197">Returns a value indicating whether all applications hosted by the process are idle and not processing requests.</span></span></summary>
        <returns><span data-ttu-id="f449a-198"><see langword="true" /> si todas las aplicaciones del proceso están inactivas; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f449a-198"><see langword="true" /> if all applications in the process are idle; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f449a-199">El <xref:System.Web.Hosting.ApplicationManager.IsIdle%2A> devuelve del método `true` si todas las aplicaciones alojadas por el proceso están inactivas.</span><span class="sxs-lookup"><span data-stu-id="f449a-199">The <xref:System.Web.Hosting.ApplicationManager.IsIdle%2A> method returns `true` if all applications hosted by the process are idle.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public void Open ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Open() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.Open" />
      <MemberSignature Language="VB.NET" Value="Public Sub Open ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Open();" />
      <MemberSignature Language="F#" Value="member this.Open : unit -&gt; unit" Usage="applicationManager.Open " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f449a-200">Realiza un incremento seguro para subprocesos del recuento de referencias de usuario de la instancia del administrador de aplicación.</span><span class="sxs-lookup"><span data-stu-id="f449a-200">Makes a thread-safe increment to the user reference count of the application manager instance.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShutdownAll">
      <MemberSignature Language="C#" Value="public void ShutdownAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ShutdownAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.ShutdownAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub ShutdownAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ShutdownAll();" />
      <MemberSignature Language="F#" Value="member this.ShutdownAll : unit -&gt; unit" Usage="applicationManager.ShutdownAll " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f449a-201">Descarga todos los recursos de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="f449a-201">Unloads all application resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f449a-202">Una llamada a la <xref:System.Web.Hosting.ApplicationManager.ShutdownAll%2A> es equivalente a llamar al método el <xref:System.Web.Hosting.HostingEnvironment.InitiateShutdown%2A?displayProperty=nameWithType> todos los dominios de aplicación administrados por este método <xref:System.Web.Hosting.ApplicationManager> ejemplo; sin embargo, el <xref:System.Web.Hosting.ApplicationManager.ShutdownAll%2A> método se puede llamar desde fuera de los dominios de aplicación administrada.</span><span class="sxs-lookup"><span data-stu-id="f449a-202">Calling the <xref:System.Web.Hosting.ApplicationManager.ShutdownAll%2A> method is equivalent to calling the <xref:System.Web.Hosting.HostingEnvironment.InitiateShutdown%2A?displayProperty=nameWithType> method in all application domains managed by this <xref:System.Web.Hosting.ApplicationManager> instance; however, the <xref:System.Web.Hosting.ApplicationManager.ShutdownAll%2A> method can be called from outside the managed application domains.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShutdownApplication">
      <MemberSignature Language="C#" Value="public void ShutdownApplication (string appId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ShutdownApplication(string appId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.ShutdownApplication(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ShutdownApplication (appId As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ShutdownApplication(System::String ^ appId);" />
      <MemberSignature Language="F#" Value="member this.ShutdownApplication : string -&gt; unit" Usage="applicationManager.ShutdownApplication appId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="appId"><span data-ttu-id="f449a-203">El identificador único de la aplicación que se va a descargar.</span><span class="sxs-lookup"><span data-stu-id="f449a-203">The unique identifier of the application to unload.</span></span></param>
        <summary><span data-ttu-id="f449a-204">Descarga la aplicación especificada.</span><span class="sxs-lookup"><span data-stu-id="f449a-204">Unloads the specified application.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f449a-205">Una llamada a la <xref:System.Web.Hosting.ApplicationManager.ShutdownApplication%2A> es equivalente a llamar al método el <xref:System.Web.Hosting.HostingEnvironment.InitiateShutdown%2A?displayProperty=nameWithType> método para un dominio de aplicación concreto; sin embargo, el <xref:System.Web.Hosting.ApplicationManager.ShutdownApplication%2A> método puede llamarse desde dominios de aplicación administrada externa.</span><span class="sxs-lookup"><span data-stu-id="f449a-205">Calling the <xref:System.Web.Hosting.ApplicationManager.ShutdownApplication%2A> method is equivalent to calling the <xref:System.Web.Hosting.HostingEnvironment.InitiateShutdown%2A?displayProperty=nameWithType> method for a specific application domain; however, the <xref:System.Web.Hosting.ApplicationManager.ShutdownApplication%2A> method can be called from outside managed application domains.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f449a-206">El valor de <paramref name="appId" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f449a-206"><paramref name="appId" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="StopObject">
      <MemberSignature Language="C#" Value="public void StopObject (string appId, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StopObject(string appId, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.StopObject(System.String,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StopObject(System::String ^ appId, Type ^ type);" />
      <MemberSignature Language="F#" Value="member this.StopObject : string * Type -&gt; unit" Usage="applicationManager.StopObject (appId, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appId" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="appId"><span data-ttu-id="f449a-207">El identificador único para la aplicación que posee el objeto.</span><span class="sxs-lookup"><span data-stu-id="f449a-207">The unique identifier for the application that owns the object.</span></span></param>
        <param name="type"><span data-ttu-id="f449a-208">Tipo del objeto que se va a descargar.</span><span class="sxs-lookup"><span data-stu-id="f449a-208">The type of the object to unload.</span></span></param>
        <summary><span data-ttu-id="f449a-209">Quita el objeto especificado de la lista de objetos registrados de una aplicación.</span><span class="sxs-lookup"><span data-stu-id="f449a-209">Removes the specified object from the list of registered objects in an application.</span></span> <span data-ttu-id="f449a-210">Si el objeto que se va a quitar es el último objeto restante en la lista de objetos registrados de una aplicación, entonces se descarga la aplicación.</span><span class="sxs-lookup"><span data-stu-id="f449a-210">If the object to be removed is the last remaining object in the list of registered objects in an application, the application is unloaded.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f449a-211">El valor de <paramref name="appId" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f449a-211"><paramref name="appId" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="f449a-212">\- o -</span><span class="sxs-lookup"><span data-stu-id="f449a-212">\- or -</span></span> 
 <span data-ttu-id="f449a-213">El valor de <paramref name="type" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f449a-213"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
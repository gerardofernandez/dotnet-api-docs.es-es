<Type Name="Base64" FullName="System.Buffers.Text.Base64">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ccdcbb33753dfa1bd9ba714a6c438e823c9f8a0f" /><Meta Name="ms.sourcegitcommit" Value="8e213bb5e6801f6e29861ba72664978ad00e34fa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="02/18/2019" /><Meta Name="ms.locfileid" Value="56354759" /></Metadata><TypeSignature Language="C#" Value="public static class Base64" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Base64 extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Buffers.Text.Base64" />
  <TypeSignature Language="VB.NET" Value="Public Class Base64" />
  <TypeSignature Language="C++ CLI" Value="public ref class Base64 abstract sealed" />
  <TypeSignature Language="F#" Value="type Base64 = class" />
  <AssemblyInfo>
    <AssemblyName>System.Memory</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="5fc25-101">Convierte entre los datos binarios y texto codificado UTF-8 que se representa en base 64.</span><span class="sxs-lookup"><span data-stu-id="5fc25-101">Converts between binary data and UTF-8 encoded text that is represented in base 64.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="DecodeFromUtf8">
      <MemberSignature Language="C#" Value="public static System.Buffers.OperationStatus DecodeFromUtf8 (ReadOnlySpan&lt;byte&gt; utf8, Span&lt;byte&gt; bytes, out int bytesConsumed, out int bytesWritten, bool isFinalBlock = true);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Buffers.OperationStatus DecodeFromUtf8(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8, valuetype System.Span`1&lt;unsigned int8&gt; bytes, [out] int32&amp; bytesConsumed, [out] int32&amp; bytesWritten, bool isFinalBlock) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Base64.DecodeFromUtf8(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Int32@,System.Int32@,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DecodeFromUtf8 (utf8 As ReadOnlySpan(Of Byte), bytes As Span(Of Byte), ByRef bytesConsumed As Integer, ByRef bytesWritten As Integer, Optional isFinalBlock As Boolean = true) As OperationStatus" />
      <MemberSignature Language="F#" Value="static member DecodeFromUtf8 : ReadOnlySpan&lt;byte&gt; * Span&lt;byte&gt; *  *  * bool -&gt; System.Buffers.OperationStatus" Usage="System.Buffers.Text.Base64.DecodeFromUtf8 (utf8, bytes, bytesConsumed, bytesWritten, isFinalBlock)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Buffers.OperationStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="bytes" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="isFinalBlock" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="utf8"><span data-ttu-id="5fc25-102">El intervalo de entrada que contiene texto codificado UTF-8 en base 64 que tiene que descodificar.</span><span class="sxs-lookup"><span data-stu-id="5fc25-102">The input span that contains UTF-8 encoded text in base 64 that needs to be decoded.</span></span></param>
        <param name="bytes"><span data-ttu-id="5fc25-103">El intervalo de salida que contiene el resultado de la operación, es decir, los datos binarios descodificados.</span><span class="sxs-lookup"><span data-stu-id="5fc25-103">The output span that contains the result of the operation, that is, the decoded binary data.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="5fc25-104">El número de bytes de entrada utilizados durante la operación.</span><span class="sxs-lookup"><span data-stu-id="5fc25-104">The number of input bytes consumed during the operation.</span></span> <span data-ttu-id="5fc25-105">Esto puede usarse para segmentar la entrada en llamadas posteriores, si es necesario.</span><span class="sxs-lookup"><span data-stu-id="5fc25-105">This can be used to slice the input for subsequent calls, if necessary.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="5fc25-106">El número de bytes escritos en el intervalo de salida.</span><span class="sxs-lookup"><span data-stu-id="5fc25-106">The number of bytes written into the output span.</span></span> <span data-ttu-id="5fc25-107">Esto puede usarse para segmentar la salida en llamadas posteriores, si es necesario.</span><span class="sxs-lookup"><span data-stu-id="5fc25-107">This can be used to slice the output for subsequent calls, if necessary.</span></span></param>
        <param name="isFinalBlock"><span data-ttu-id="5fc25-108"><see langword="true" /> (predeterminado) si el intervalo de entrada contiene todos los datos para descodificar.</span><span class="sxs-lookup"><span data-stu-id="5fc25-108"><see langword="true" /> (default) if the input span contains the entire data to decode.</span></span> <span data-ttu-id="5fc25-109"><see langword="false" /> si el intervalo de entrada contiene datos parciales con más datos para seguir.</span><span class="sxs-lookup"><span data-stu-id="5fc25-109"><see langword="false" /> if the input span contains partial data with more data to follow.</span></span></param>
        <summary><span data-ttu-id="5fc25-110">Descodifica el intervalo de texto codificado UTF-8 representado como base 64 en datos binarios.</span><span class="sxs-lookup"><span data-stu-id="5fc25-110">Decodes the span of UTF-8 encoded text represented as base 64 into binary data.</span></span> <span data-ttu-id="5fc25-111">Si la entrada no es un múltiplo de 4, descodificará tanto como sea posible, al múltiplo más cercano de 4.</span><span class="sxs-lookup"><span data-stu-id="5fc25-111">If the input is not a multiple of 4, it will decode as much as it can, to the closest multiple of 4.</span></span></summary>
        <returns><span data-ttu-id="5fc25-112">Uno de los valores de enumeración que indica el estado de la operación de descodificación.</span><span class="sxs-lookup"><span data-stu-id="5fc25-112">One of the enumeration values that indicates the status of the decoding operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="5fc25-113">El valor devuelto puede ser como sigue:</span><span class="sxs-lookup"><span data-stu-id="5fc25-113">The return value can be as follows:</span></span>

- <span data-ttu-id="5fc25-114"><xref:System.Buffers.OperationStatus.Done?displayProperty=nameWithType>: Procesamiento de todo el intervalo de entrada se realizó correctamente.</span><span class="sxs-lookup"><span data-stu-id="5fc25-114"><xref:System.Buffers.OperationStatus.Done?displayProperty=nameWithType>: Processing of the entire input span succeeded.</span></span>
- <span data-ttu-id="5fc25-115"><xref:System.Buffers.OperationStatus.DestinationTooSmall?displayProperty=nameWithType>: No hay suficiente espacio en el intervalo de salida para escribir la entrada descodificada.</span><span class="sxs-lookup"><span data-stu-id="5fc25-115"><xref:System.Buffers.OperationStatus.DestinationTooSmall?displayProperty=nameWithType>: There is not enough space in the output span to write the decoded input.</span></span>
- <span data-ttu-id="5fc25-116"><xref:System.Buffers.OperationStatus.NeedMoreData?displayProperty=nameWithType>: `isFinalBlock` es `false` y la entrada no es un múltiplo de 4.</span><span class="sxs-lookup"><span data-stu-id="5fc25-116"><xref:System.Buffers.OperationStatus.NeedMoreData?displayProperty=nameWithType>: `isFinalBlock` is `false` and the input is not a multiple of 4.</span></span> <span data-ttu-id="5fc25-117">En caso contrario, se considera la entrada parcial <xref:System.Buffers.OperationStatus.InvalidData>.</span><span class="sxs-lookup"><span data-stu-id="5fc25-117">Otherwise, the partial input is considered <xref:System.Buffers.OperationStatus.InvalidData>.</span></span>
- <span data-ttu-id="5fc25-118"><xref:System.Buffers.OperationStatus.InvalidData?displayProperty=nameWithType>: La entrada contiene los bytes fuera del intervalo esperado de base 64, tiene más de dos caracteres de relleno o no es válido o está incompleta (es decir, no es múltiplo de 4) y `isFinalBlock` es `true`.</span><span class="sxs-lookup"><span data-stu-id="5fc25-118"><xref:System.Buffers.OperationStatus.InvalidData?displayProperty=nameWithType>: The input contains bytes outside of the expected base 64 range, has invalid or more than two padding characters, or is incomplete (that is, not a multiple of 4) and `isFinalBlock` is `true`.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DecodeFromUtf8InPlace">
      <MemberSignature Language="C#" Value="public static System.Buffers.OperationStatus DecodeFromUtf8InPlace (Span&lt;byte&gt; buffer, out int bytesWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Buffers.OperationStatus DecodeFromUtf8InPlace(valuetype System.Span`1&lt;unsigned int8&gt; buffer, [out] int32&amp; bytesWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Base64.DecodeFromUtf8InPlace(System.Span{System.Byte},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DecodeFromUtf8InPlace (buffer As Span(Of Byte), ByRef bytesWritten As Integer) As OperationStatus" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Buffers::OperationStatus DecodeFromUtf8InPlace(Span&lt;System::Byte&gt; buffer, [Runtime::InteropServices::Out] int % bytesWritten);" />
      <MemberSignature Language="F#" Value="static member DecodeFromUtf8InPlace : Span&lt;byte&gt; *  -&gt; System.Buffers.OperationStatus" Usage="System.Buffers.Text.Base64.DecodeFromUtf8InPlace (buffer, bytesWritten)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Buffers.OperationStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="5fc25-119">El intervalo de entrada que contiene los datos de texto en base 64 que se deben descodificar.</span><span class="sxs-lookup"><span data-stu-id="5fc25-119">The input span that contains the base-64 text data that needs to be decoded.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="5fc25-120">El número de bytes escritos en el búfer.</span><span class="sxs-lookup"><span data-stu-id="5fc25-120">The number of bytes written into the buffer.</span></span></param>
        <summary><span data-ttu-id="5fc25-121">Descodifica el intervalo de texto codificado UTF-8 en base 64 (en contexto) en datos binarios.</span><span class="sxs-lookup"><span data-stu-id="5fc25-121">Decodes the span of UTF-8 encoded text in base 64 (in-place) into binary data.</span></span> <span data-ttu-id="5fc25-122">La salida binaria descodificada es menor que los datos de texto contenidos en la entrada (la operación comprime los datos).</span><span class="sxs-lookup"><span data-stu-id="5fc25-122">The decoded binary output is smaller than the text data contained in the input (the operation deflates the data).</span></span> <span data-ttu-id="5fc25-123">Si la entrada no es un múltiplo de 4, el método no descodificará los datos.</span><span class="sxs-lookup"><span data-stu-id="5fc25-123">If the input is not a multiple of 4, the method will not decode any data.</span></span></summary>
        <returns><span data-ttu-id="5fc25-124">Uno de los valores de enumeración que indica el estado de la operación de descodificación.</span><span class="sxs-lookup"><span data-stu-id="5fc25-124">One of the enumeration values that indicates the status of the decoding operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="5fc25-125">El valor devuelto puede ser como sigue:</span><span class="sxs-lookup"><span data-stu-id="5fc25-125">The return value can be as follows:</span></span>

- <span data-ttu-id="5fc25-126"><xref:System.Buffers.OperationStatus.Done?displayProperty=nameWithType>: Procesamiento de todo el intervalo de entrada se realizó correctamente.</span><span class="sxs-lookup"><span data-stu-id="5fc25-126"><xref:System.Buffers.OperationStatus.Done?displayProperty=nameWithType>: Processing of the entire input span succeeded.</span></span>
- <span data-ttu-id="5fc25-127"><xref:System.Buffers.OperationStatus.InvalidData?displayProperty=nameWithType>: La entrada contiene los bytes fuera del intervalo esperado de base 64, tiene más de dos caracteres de relleno o no es válido o está incompleta (es decir, no es múltiplo de 4).</span><span class="sxs-lookup"><span data-stu-id="5fc25-127"><xref:System.Buffers.OperationStatus.InvalidData?displayProperty=nameWithType>: The input contains bytes outside of the expected base 64 range, has invalid or more than two padding characters, or is incomplete (that is, not a multiple of 4).</span></span>

<span data-ttu-id="5fc25-128">Este método no puede devolver el <xref:System.Buffers.OperationStatus.DestinationTooSmall?displayProperty=nameWithType> y <xref:System.Buffers.OperationStatus.NeedMoreData?displayProperty=nameWithType> valores.</span><span class="sxs-lookup"><span data-stu-id="5fc25-128">This method cannot return the <xref:System.Buffers.OperationStatus.DestinationTooSmall?displayProperty=nameWithType> and <xref:System.Buffers.OperationStatus.NeedMoreData?displayProperty=nameWithType> values.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EncodeToUtf8">
      <MemberSignature Language="C#" Value="public static System.Buffers.OperationStatus EncodeToUtf8 (ReadOnlySpan&lt;byte&gt; bytes, Span&lt;byte&gt; utf8, out int bytesConsumed, out int bytesWritten, bool isFinalBlock = true);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Buffers.OperationStatus EncodeToUtf8(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; bytes, valuetype System.Span`1&lt;unsigned int8&gt; utf8, [out] int32&amp; bytesConsumed, [out] int32&amp; bytesWritten, bool isFinalBlock) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Base64.EncodeToUtf8(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Int32@,System.Int32@,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EncodeToUtf8 (bytes As ReadOnlySpan(Of Byte), utf8 As Span(Of Byte), ByRef bytesConsumed As Integer, ByRef bytesWritten As Integer, Optional isFinalBlock As Boolean = true) As OperationStatus" />
      <MemberSignature Language="F#" Value="static member EncodeToUtf8 : ReadOnlySpan&lt;byte&gt; * Span&lt;byte&gt; *  *  * bool -&gt; System.Buffers.OperationStatus" Usage="System.Buffers.Text.Base64.EncodeToUtf8 (bytes, utf8, bytesConsumed, bytesWritten, isFinalBlock)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Buffers.OperationStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="utf8" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="isFinalBlock" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="5fc25-129">El intervalo de entrada que contiene los datos binarios que se deben codificar.</span><span class="sxs-lookup"><span data-stu-id="5fc25-129">The input span that contains binary data that needs to be encoded.</span></span></param>
        <param name="utf8"><span data-ttu-id="5fc25-130">El intervalo de salida que contiene el resultado de la operación, es decir, el texto codificado UTF-8 en base 64.</span><span class="sxs-lookup"><span data-stu-id="5fc25-130">The output span that contains the result of the operation, that is, the UTF-8 encoded text in base 64.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="5fc25-131">El número de bytes de entrada utilizados durante la operación.</span><span class="sxs-lookup"><span data-stu-id="5fc25-131">The number of input bytes consumed during the operation.</span></span> <span data-ttu-id="5fc25-132">Esto puede usarse para segmentar la entrada en llamadas posteriores, si es necesario.</span><span class="sxs-lookup"><span data-stu-id="5fc25-132">This can be used to slice the input for subsequent calls, if necessary.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="5fc25-133">El número de bytes escritos en el intervalo de salida.</span><span class="sxs-lookup"><span data-stu-id="5fc25-133">The number of bytes written into the output span.</span></span> <span data-ttu-id="5fc25-134">Esto puede usarse para segmentar la salida en llamadas posteriores, si es necesario.</span><span class="sxs-lookup"><span data-stu-id="5fc25-134">This can be used to slice the output for subsequent calls, if necessary.</span></span></param>
        <param name="isFinalBlock"><span data-ttu-id="5fc25-135"><see langword="true" /> (predeterminado) si el intervalo de entrada contiene todos los datos para codificar.</span><span class="sxs-lookup"><span data-stu-id="5fc25-135"><see langword="true" /> (the default) if the input span contains the entire data to encode.</span></span> <span data-ttu-id="5fc25-136"><see langword="false" /> si el intervalo de entrada contiene datos parciales con más datos para seguir.</span><span class="sxs-lookup"><span data-stu-id="5fc25-136"><see langword="false" /> if the input span contains partial data with more data to follow.</span></span></param>
        <summary><span data-ttu-id="5fc25-137">Codifica el intervalo de datos binarios en texto codificado UTF-8 representado como base 64.</span><span class="sxs-lookup"><span data-stu-id="5fc25-137">Encodes the span of binary data into UTF-8 encoded text represented as base 64.</span></span></summary>
        <returns><span data-ttu-id="5fc25-138">Uno de los valores de enumeración que indica el estado de la operación de codificación.</span><span class="sxs-lookup"><span data-stu-id="5fc25-138">One of the enumeration values that indicates the status of the encoding operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="5fc25-139">El valor devuelto puede ser como sigue:</span><span class="sxs-lookup"><span data-stu-id="5fc25-139">The return value can be as follows:</span></span>

- <span data-ttu-id="5fc25-140"><xref:System.Buffers.OperationStatus.Done?displayProperty=nameWithType>: Procesamiento de todo el intervalo de entrada se realizó correctamente.</span><span class="sxs-lookup"><span data-stu-id="5fc25-140"><xref:System.Buffers.OperationStatus.Done?displayProperty=nameWithType>: Processing of the entire input span succeeded.</span></span>
- <span data-ttu-id="5fc25-141"><xref:System.Buffers.OperationStatus.DestinationTooSmall?displayProperty=nameWithType>: No hay suficiente espacio en el intervalo de salida para ajustarse a la entrada codificada.</span><span class="sxs-lookup"><span data-stu-id="5fc25-141"><xref:System.Buffers.OperationStatus.DestinationTooSmall?displayProperty=nameWithType>: There isn't enough space in the output span to fit the encoded input.</span></span>
- <span data-ttu-id="5fc25-142"><xref:System.Buffers.OperationStatus.NeedMoreData?displayProperty=nameWithType>: `isFinalBlock` es `false`.</span><span class="sxs-lookup"><span data-stu-id="5fc25-142"><xref:System.Buffers.OperationStatus.NeedMoreData?displayProperty=nameWithType>: `isFinalBlock` is `false`.</span></span> <span data-ttu-id="5fc25-143">De lo contrario, si `isFinalBlock` es `true`, la salida se rellena si la entrada no es un múltiplo de 3.</span><span class="sxs-lookup"><span data-stu-id="5fc25-143">Otherwise, if `isFinalBlock` is `true`, the output is padded if the input is not a multiple of 3.</span></span>

<span data-ttu-id="5fc25-144">Este método no puede devolver <xref:System.Buffers.OperationStatus.InvalidData?displayProperty=nameWithType> ya que no es posible para la codificación base 64.</span><span class="sxs-lookup"><span data-stu-id="5fc25-144">This method cannot return <xref:System.Buffers.OperationStatus.InvalidData?displayProperty=nameWithType> since that is not possible for base-64 encoding.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EncodeToUtf8InPlace">
      <MemberSignature Language="C#" Value="public static System.Buffers.OperationStatus EncodeToUtf8InPlace (Span&lt;byte&gt; buffer, int dataLength, out int bytesWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Buffers.OperationStatus EncodeToUtf8InPlace(valuetype System.Span`1&lt;unsigned int8&gt; buffer, int32 dataLength, [out] int32&amp; bytesWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Base64.EncodeToUtf8InPlace(System.Span{System.Byte},System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EncodeToUtf8InPlace (buffer As Span(Of Byte), dataLength As Integer, ByRef bytesWritten As Integer) As OperationStatus" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Buffers::OperationStatus EncodeToUtf8InPlace(Span&lt;System::Byte&gt; buffer, int dataLength, [Runtime::InteropServices::Out] int % bytesWritten);" />
      <MemberSignature Language="F#" Value="static member EncodeToUtf8InPlace : Span&lt;byte&gt; * int *  -&gt; System.Buffers.OperationStatus" Usage="System.Buffers.Text.Base64.EncodeToUtf8InPlace (buffer, dataLength, bytesWritten)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Buffers.OperationStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="dataLength" Type="System.Int32" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="5fc25-145">El intervalo de entrada que contiene los datos binarios que se deben codificar.</span><span class="sxs-lookup"><span data-stu-id="5fc25-145">The input span that contains binary data that needs to be encoded.</span></span> <span data-ttu-id="5fc25-146">Dado que el método realiza una conversión en contexto, debe ser lo suficientemente grande como para almacenar el resultado de la operación.</span><span class="sxs-lookup"><span data-stu-id="5fc25-146">Because the method performs an in-place conversion, it needs to be large enough to store the result of the operation.</span></span></param>
        <param name="dataLength"><span data-ttu-id="5fc25-147">El número de bytes de datos binarios contenidos en el búfer que debe codificarse.</span><span class="sxs-lookup"><span data-stu-id="5fc25-147">The number of bytes of binary data contained within the buffer that needs to be encoded.</span></span> <span data-ttu-id="5fc25-148">Este valor debe ser menor que el tamaño del búfer.</span><span class="sxs-lookup"><span data-stu-id="5fc25-148">This value must be smaller than the buffer length.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="5fc25-149">El número de bytes escritos en el búfer.</span><span class="sxs-lookup"><span data-stu-id="5fc25-149">The number of bytes written into the buffer.</span></span></param>
        <summary><span data-ttu-id="5fc25-150">Codifica el intervalo de datos binarios (en contexto) en texto codificado UTF-8 representado como base 64.</span><span class="sxs-lookup"><span data-stu-id="5fc25-150">Encodes the span of binary data (in-place) into UTF-8 encoded text represented as base 64.</span></span> <span data-ttu-id="5fc25-151">La salida de texto codificado es mayor que los datos binarios contenidos en la entrada (la operación expande los datos).</span><span class="sxs-lookup"><span data-stu-id="5fc25-151">The encoded text output is larger than the binary data contained in the input (the operation inflates the data).</span></span></summary>
        <returns><span data-ttu-id="5fc25-152">Uno de los valores de enumeración que indica el estado de la operación de codificación.</span><span class="sxs-lookup"><span data-stu-id="5fc25-152">One of the enumeration values that indicates the status of the encoding operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="5fc25-153">El valor devuelto puede ser como sigue:</span><span class="sxs-lookup"><span data-stu-id="5fc25-153">The return value can be as follows:</span></span>

- <span data-ttu-id="5fc25-154"><xref:System.Buffers.OperationStatus.Done?displayProperty=nameWithType>: Procesamiento de todo el búfer se realizó correctamente.</span><span class="sxs-lookup"><span data-stu-id="5fc25-154"><xref:System.Buffers.OperationStatus.Done?displayProperty=nameWithType>: Processing of the entire buffer succeeded.</span></span>
- <span data-ttu-id="5fc25-155"><xref:System.Buffers.OperationStatus.DestinationTooSmall?displayProperty=nameWithType>: No hay suficiente espacio en el búfer más allá de `dataLength` para ajustar el resultado de la entrada de codificación.</span><span class="sxs-lookup"><span data-stu-id="5fc25-155"><xref:System.Buffers.OperationStatus.DestinationTooSmall?displayProperty=nameWithType>: There isn't enough space in the buffer beyond `dataLength` to fit the result of encoding the input.</span></span>

<span data-ttu-id="5fc25-156">Este método no puede devolver <xref:System.Buffers.OperationStatus.NeedMoreData?displayProperty=nameWithType> y <xref:System.Buffers.OperationStatus.InvalidData?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="5fc25-156">This method cannot return <xref:System.Buffers.OperationStatus.NeedMoreData?displayProperty=nameWithType> and <xref:System.Buffers.OperationStatus.InvalidData?displayProperty=nameWithType>.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMaxDecodedFromUtf8Length">
      <MemberSignature Language="C#" Value="public static int GetMaxDecodedFromUtf8Length (int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetMaxDecodedFromUtf8Length(int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Base64.GetMaxDecodedFromUtf8Length(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMaxDecodedFromUtf8Length (length As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetMaxDecodedFromUtf8Length(int length);" />
      <MemberSignature Language="F#" Value="static member GetMaxDecodedFromUtf8Length : int -&gt; int" Usage="System.Buffers.Text.Base64.GetMaxDecodedFromUtf8Length length" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="length">To be added.</param>
        <summary><span data-ttu-id="5fc25-157">Devuelve la longitud máxima (en bytes) del resultado si fuera a descodificar el texto codificado en base 64 en un intervalo de bytes de tamaño <paramref name="length" />.</span><span class="sxs-lookup"><span data-stu-id="5fc25-157">Returns the maximum length (in bytes) of the result if you were to decode base-64 encoded text within a byte span of size <paramref name="length" />.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="5fc25-158"><paramref name="length" /> es menor que 0.</span><span class="sxs-lookup"><span data-stu-id="5fc25-158"><paramref name="length" /> is less than 0.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetMaxEncodedToUtf8Length">
      <MemberSignature Language="C#" Value="public static int GetMaxEncodedToUtf8Length (int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetMaxEncodedToUtf8Length(int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Base64.GetMaxEncodedToUtf8Length(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMaxEncodedToUtf8Length (length As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetMaxEncodedToUtf8Length(int length);" />
      <MemberSignature Language="F#" Value="static member GetMaxEncodedToUtf8Length : int -&gt; int" Usage="System.Buffers.Text.Base64.GetMaxEncodedToUtf8Length length" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="length">To be added.</param>
        <summary><span data-ttu-id="5fc25-159">Devuelve la longitud máxima (en bytes) del resultado si fuera a codificar datos binarios en un intervalo de bytes de tamaño <paramref name="length" />.</span><span class="sxs-lookup"><span data-stu-id="5fc25-159">Returns the maximum length (in bytes) of the result if you were to encode binary data within a byte span of size <paramref name="length" />.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="5fc25-160"><paramref name="length" /> es menor que 0 o mayor que 1610612733 (ya que la codificación expande los datos en 4/3).</span><span class="sxs-lookup"><span data-stu-id="5fc25-160"><paramref name="length" /> is less than 0 or larger than 1610612733 (since encode inflates the data by 4/3).</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
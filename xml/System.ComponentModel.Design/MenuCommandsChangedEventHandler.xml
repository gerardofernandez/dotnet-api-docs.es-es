<Type Name="MenuCommandsChangedEventHandler" FullName="System.ComponentModel.Design.MenuCommandsChangedEventHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="edef8c6a147f9f12efac4ef0b0fe49525c57613d" /><Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="10/04/2018" /><Meta Name="ms.locfileid" Value="48747719" /></Metadata><TypeSignature Language="C#" Value="public delegate void MenuCommandsChangedEventHandler(object sender, MenuCommandsChangedEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed MenuCommandsChangedEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.MenuCommandsChangedEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub MenuCommandsChangedEventHandler(sender As Object, e As MenuCommandsChangedEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void MenuCommandsChangedEventHandler(System::Object ^ sender, MenuCommandsChangedEventArgs ^ e);" />
  <TypeSignature Language="F#" Value="type MenuCommandsChangedEventHandler = delegate of obj * MenuCommandsChangedEventArgs -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.ComponentModel.Design.MenuCommandsChangedEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender"><span data-ttu-id="071de-101">Origen del evento.</span><span class="sxs-lookup"><span data-stu-id="071de-101">The source of the event.</span></span></param>
    <param name="e"><span data-ttu-id="071de-102">Objeto <see cref="T:System.ComponentModel.Design.MenuCommandsChangedEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="071de-102">A <see cref="T:System.ComponentModel.Design.MenuCommandsChangedEventArgs" /> that contains the event data.</span></span></param>
    <summary><span data-ttu-id="071de-103">Representa el método que controlará el evento <see cref="E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged" /> de <see cref="T:System.ComponentModel.Design.MenuCommandService" />.</span><span class="sxs-lookup"><span data-stu-id="071de-103">Represents the method that will handle the <see cref="E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged" /> event of a <see cref="T:System.ComponentModel.Design.MenuCommandService" />.</span></span> <span data-ttu-id="071de-104">Esta clase no puede heredarse.</span><span class="sxs-lookup"><span data-stu-id="071de-104">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="071de-105">Cuando creas un <xref:System.ComponentModel.Design.MenuCommandsChangedEventHandler> delegado, identifica un método para controlar el evento.</span><span class="sxs-lookup"><span data-stu-id="071de-105">When you create a <xref:System.ComponentModel.Design.MenuCommandsChangedEventHandler> delegate, you identify a method to handle the event.</span></span> <span data-ttu-id="071de-106">Para asociar el evento al controlador, se debe agregar una instancia del delegado al evento.</span><span class="sxs-lookup"><span data-stu-id="071de-106">To associate the event with your event handler, add an instance of the delegate to the event.</span></span> <span data-ttu-id="071de-107">Siempre que se produce el evento, se llama a su controlador, a menos que se quite el delegado.</span><span class="sxs-lookup"><span data-stu-id="071de-107">The event handler is called whenever the event occurs, unless you remove the delegate.</span></span> <span data-ttu-id="071de-108">Para obtener más información sobre los delegados de controlador de eventos, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="071de-108">For more information about event handler delegates, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
</Type>
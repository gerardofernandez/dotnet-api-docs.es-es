<Type Name="UndoEngine+UndoUnit" FullName="System.ComponentModel.Design.UndoEngine+UndoUnit">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6059af23968a795f32b98b50f910606dbe2c2461" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39837485" /></Metadata><TypeSignature Language="C#" Value="protected class UndoEngine.UndoUnit" />
  <TypeSignature Language="ILAsm" Value=".class nested protected auto ansi beforefieldinit UndoEngine/UndoUnit extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />
  <TypeSignature Language="VB.NET" Value="Protected Class UndoEngine.UndoUnit" />
  <TypeSignature Language="C++ CLI" Value="protected: ref class UndoEngine::UndoUnit" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="51441-101">Encapsula una unidad de trabajo que cualquier usuario puede deshacer.</span><span class="sxs-lookup"><span data-stu-id="51441-101">Encapsulates a unit of work that a user can undo.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51441-102">El <xref:System.ComponentModel.Design.UndoEngine.UndoUnit> es una clase anidada dentro de <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine%2A> que encapsula una acción que un usuario puede deshacer.</span><span class="sxs-lookup"><span data-stu-id="51441-102">The <xref:System.ComponentModel.Design.UndoEngine.UndoUnit> class is a nested class within <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine%2A> that encapsulates an action that a user can undo.</span></span> <span data-ttu-id="51441-103">El valor predeterminado <xref:System.ComponentModel.Design.UndoEngine.UndoUnit> implementación supervisa las notificaciones de cambio y genera una lista de eventos para cada cambio.</span><span class="sxs-lookup"><span data-stu-id="51441-103">The default <xref:System.ComponentModel.Design.UndoEngine.UndoUnit> implementation monitors change notifications and builds up a list of events for each change.</span></span> <span data-ttu-id="51441-104">Guarda estos eventos mediante <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationService>.</span><span class="sxs-lookup"><span data-stu-id="51441-104">It saves these events using <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationService>.</span></span> <span data-ttu-id="51441-105">Un <xref:System.ComponentModel.Design.UndoEngine.UndoUnit> recibe notificaciones de eventos para los cambios directamente desde <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine%2A> a través de varias `public virtual` métodos.</span><span class="sxs-lookup"><span data-stu-id="51441-105">An <xref:System.ComponentModel.Design.UndoEngine.UndoUnit> receives event notifications for changes directly from <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine%2A> through several `public virtual` methods.</span></span> <span data-ttu-id="51441-106">Puede derivar de <xref:System.ComponentModel.Design.UndoEngine.UndoUnit> y realizar cualquier lógica adicional.</span><span class="sxs-lookup"><span data-stu-id="51441-106">You can derive from <xref:System.ComponentModel.Design.UndoEngine.UndoUnit> and perform any additional logic.</span></span> <span data-ttu-id="51441-107">Si lo desea, puede omitir completamente el valor predeterminado <xref:System.ComponentModel.Design.UndoEngine.UndoUnit> implementación.</span><span class="sxs-lookup"><span data-stu-id="51441-107">If desired, you can completely bypass the default <xref:System.ComponentModel.Design.UndoEngine.UndoUnit> implementation.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.UndoEngine" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationService" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UndoUnit (System.ComponentModel.Design.UndoEngine engine, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.Design.UndoEngine engine, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.UndoEngine.UndoUnit.#ctor(System.ComponentModel.Design.UndoEngine,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (engine As UndoEngine, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UndoUnit(System::ComponentModel::Design::UndoEngine ^ engine, System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Design.UndoEngine.UndoUnit : System.ComponentModel.Design.UndoEngine * string -&gt; System.ComponentModel.Design.UndoEngine.UndoUnit" Usage="new System.ComponentModel.Design.UndoEngine.UndoUnit (engine, name)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="engine" Type="System.ComponentModel.Design.UndoEngine" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="engine"><span data-ttu-id="51441-108">Motor para deshacer propietario de esta unidad para deshacer.</span><span class="sxs-lookup"><span data-stu-id="51441-108">The undo engine that owns this undo unit.</span></span></param>
        <param name="name"><span data-ttu-id="51441-109">Nombre de esta unidad para deshacer.</span><span class="sxs-lookup"><span data-stu-id="51441-109">The name for this undo unit.</span></span></param>
        <summary><span data-ttu-id="51441-110">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />.</span><span class="sxs-lookup"><span data-stu-id="51441-110">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="51441-111"><paramref name="engine" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="51441-111"><paramref name="engine" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.UndoEngine" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public virtual void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Close();" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit&#xA;override this.Close : unit -&gt; unit" Usage="undoUnit.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="51441-112">Recibe una llamada del motor para deshacer con el fin de cerrar esta unidad.</span><span class="sxs-lookup"><span data-stu-id="51441-112">Receives a call from the undo engine to close this unit.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51441-113">Cuando se cierra una unidad, no hay más eventos pueden proceder en sus distintos métodos de evento.</span><span class="sxs-lookup"><span data-stu-id="51441-113">When a unit is closed, no more events can come into its various event methods.</span></span> <span data-ttu-id="51441-114">El <xref:System.ComponentModel.Design.UndoEngine.UndoUnit> propio puede adoptar medidas aquí para asegurarse de que los eventos que están actualmente abiertos se cierran.</span><span class="sxs-lookup"><span data-stu-id="51441-114">The <xref:System.ComponentModel.Design.UndoEngine.UndoUnit> itself may take action here to ensure that any events that are currently open are closed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ComponentAdded">
      <MemberSignature Language="C#" Value="public virtual void ComponentAdded (System.ComponentModel.Design.ComponentEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ComponentAdded(class System.ComponentModel.Design.ComponentEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentAdded(System.ComponentModel.Design.ComponentEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ComponentAdded (e As ComponentEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ComponentAdded(System::ComponentModel::Design::ComponentEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member ComponentAdded : System.ComponentModel.Design.ComponentEventArgs -&gt; unit&#xA;override this.ComponentAdded : System.ComponentModel.Design.ComponentEventArgs -&gt; unit" Usage="undoUnit.ComponentAdded e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.Design.ComponentEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="51441-115">Objeto <see cref="T:System.ComponentModel.Design.ComponentEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="51441-115">A <see cref="T:System.ComponentModel.Design.ComponentEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="51441-116">Recibe una llamada desde el objeto <see cref="T:System.ComponentModel.Design.UndoEngine" /> en respuesta a un evento <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentAdded" />.</span><span class="sxs-lookup"><span data-stu-id="51441-116">Receives a call from the <see cref="T:System.ComponentModel.Design.UndoEngine" /> in response to a <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentAdded" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.Design.UndoEngine" />
        <altmember cref="T:System.ComponentModel.Design.IComponentChangeService" />
      </Docs>
    </Member>
    <Member MemberName="ComponentAdding">
      <MemberSignature Language="C#" Value="public virtual void ComponentAdding (System.ComponentModel.Design.ComponentEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ComponentAdding(class System.ComponentModel.Design.ComponentEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentAdding(System.ComponentModel.Design.ComponentEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ComponentAdding (e As ComponentEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ComponentAdding(System::ComponentModel::Design::ComponentEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member ComponentAdding : System.ComponentModel.Design.ComponentEventArgs -&gt; unit&#xA;override this.ComponentAdding : System.ComponentModel.Design.ComponentEventArgs -&gt; unit" Usage="undoUnit.ComponentAdding e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.Design.ComponentEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="51441-117">Objeto <see cref="T:System.ComponentModel.Design.ComponentEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="51441-117">A <see cref="T:System.ComponentModel.Design.ComponentEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="51441-118">Recibe una llamada desde el objeto <see cref="T:System.ComponentModel.Design.UndoEngine" /> en respuesta a un evento <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentAdding" />.</span><span class="sxs-lookup"><span data-stu-id="51441-118">Receives a call from the <see cref="T:System.ComponentModel.Design.UndoEngine" /> in response to a <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentAdding" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.Design.UndoEngine" />
        <altmember cref="T:System.ComponentModel.Design.IComponentChangeService" />
      </Docs>
    </Member>
    <Member MemberName="ComponentChanged">
      <MemberSignature Language="C#" Value="public virtual void ComponentChanged (System.ComponentModel.Design.ComponentChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ComponentChanged(class System.ComponentModel.Design.ComponentChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentChanged(System.ComponentModel.Design.ComponentChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ComponentChanged (e As ComponentChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ComponentChanged(System::ComponentModel::Design::ComponentChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member ComponentChanged : System.ComponentModel.Design.ComponentChangedEventArgs -&gt; unit&#xA;override this.ComponentChanged : System.ComponentModel.Design.ComponentChangedEventArgs -&gt; unit" Usage="undoUnit.ComponentChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.Design.ComponentChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="51441-119">Objeto <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="51441-119">A <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="51441-120">Recibe una llamada desde el objeto <see cref="T:System.ComponentModel.Design.UndoEngine" /> en respuesta a un evento <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged" />.</span><span class="sxs-lookup"><span data-stu-id="51441-120">Receives a call from the <see cref="T:System.ComponentModel.Design.UndoEngine" /> in response to a <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.Design.UndoEngine" />
        <altmember cref="T:System.ComponentModel.Design.IComponentChangeService" />
      </Docs>
    </Member>
    <Member MemberName="ComponentChanging">
      <MemberSignature Language="C#" Value="public virtual void ComponentChanging (System.ComponentModel.Design.ComponentChangingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ComponentChanging(class System.ComponentModel.Design.ComponentChangingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentChanging(System.ComponentModel.Design.ComponentChangingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ComponentChanging (e As ComponentChangingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ComponentChanging(System::ComponentModel::Design::ComponentChangingEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member ComponentChanging : System.ComponentModel.Design.ComponentChangingEventArgs -&gt; unit&#xA;override this.ComponentChanging : System.ComponentModel.Design.ComponentChangingEventArgs -&gt; unit" Usage="undoUnit.ComponentChanging e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.Design.ComponentChangingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="51441-121">Objeto <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="51441-121">A <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="51441-122">Recibe una llamada desde el objeto <see cref="T:System.ComponentModel.Design.UndoEngine" /> en respuesta a un evento <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanging" />.</span><span class="sxs-lookup"><span data-stu-id="51441-122">Receives a call from the <see cref="T:System.ComponentModel.Design.UndoEngine" /> in response to a <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanging" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.Design.UndoEngine" />
        <altmember cref="T:System.ComponentModel.Design.IComponentChangeService" />
      </Docs>
    </Member>
    <Member MemberName="ComponentRemoved">
      <MemberSignature Language="C#" Value="public virtual void ComponentRemoved (System.ComponentModel.Design.ComponentEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ComponentRemoved(class System.ComponentModel.Design.ComponentEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentRemoved(System.ComponentModel.Design.ComponentEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ComponentRemoved (e As ComponentEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ComponentRemoved(System::ComponentModel::Design::ComponentEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member ComponentRemoved : System.ComponentModel.Design.ComponentEventArgs -&gt; unit&#xA;override this.ComponentRemoved : System.ComponentModel.Design.ComponentEventArgs -&gt; unit" Usage="undoUnit.ComponentRemoved e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.Design.ComponentEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="51441-123">Objeto <see cref="T:System.ComponentModel.Design.ComponentEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="51441-123">A <see cref="T:System.ComponentModel.Design.ComponentEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="51441-124">Recibe una llamada desde el objeto <see cref="T:System.ComponentModel.Design.UndoEngine" /> en respuesta a un evento <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoved" />.</span><span class="sxs-lookup"><span data-stu-id="51441-124">Receives a call from the <see cref="T:System.ComponentModel.Design.UndoEngine" /> in response to a <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoved" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.Design.UndoEngine" />
        <altmember cref="T:System.ComponentModel.Design.IComponentChangeService" />
      </Docs>
    </Member>
    <Member MemberName="ComponentRemoving">
      <MemberSignature Language="C#" Value="public virtual void ComponentRemoving (System.ComponentModel.Design.ComponentEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ComponentRemoving(class System.ComponentModel.Design.ComponentEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentRemoving(System.ComponentModel.Design.ComponentEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ComponentRemoving (e As ComponentEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ComponentRemoving(System::ComponentModel::Design::ComponentEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member ComponentRemoving : System.ComponentModel.Design.ComponentEventArgs -&gt; unit&#xA;override this.ComponentRemoving : System.ComponentModel.Design.ComponentEventArgs -&gt; unit" Usage="undoUnit.ComponentRemoving e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.Design.ComponentEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="51441-125">Objeto <see cref="T:System.ComponentModel.Design.ComponentEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="51441-125">A <see cref="T:System.ComponentModel.Design.ComponentEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="51441-126">Recibe una llamada desde el objeto <see cref="T:System.ComponentModel.Design.UndoEngine" /> en respuesta a un evento <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoving" />.</span><span class="sxs-lookup"><span data-stu-id="51441-126">Receives a call from the <see cref="T:System.ComponentModel.Design.UndoEngine" /> in response to a <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoving" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.Design.UndoEngine" />
        <altmember cref="T:System.ComponentModel.Design.IComponentChangeService" />
      </Docs>
    </Member>
    <Member MemberName="ComponentRename">
      <MemberSignature Language="C#" Value="public virtual void ComponentRename (System.ComponentModel.Design.ComponentRenameEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ComponentRename(class System.ComponentModel.Design.ComponentRenameEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentRename(System.ComponentModel.Design.ComponentRenameEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ComponentRename (e As ComponentRenameEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ComponentRename(System::ComponentModel::Design::ComponentRenameEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member ComponentRename : System.ComponentModel.Design.ComponentRenameEventArgs -&gt; unit&#xA;override this.ComponentRename : System.ComponentModel.Design.ComponentRenameEventArgs -&gt; unit" Usage="undoUnit.ComponentRename e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.Design.ComponentRenameEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="51441-127">Objeto <see cref="T:System.ComponentModel.Design.ComponentRenameEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="51441-127">A <see cref="T:System.ComponentModel.Design.ComponentRenameEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="51441-128">Recibe una llamada desde el objeto <see cref="T:System.ComponentModel.Design.UndoEngine" /> en respuesta a un evento <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRename" />.</span><span class="sxs-lookup"><span data-stu-id="51441-128">Receives a call from the <see cref="T:System.ComponentModel.Design.UndoEngine" /> in response to a <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRename" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.Design.UndoEngine" />
        <altmember cref="T:System.ComponentModel.Design.IComponentChangeService" />
      </Docs>
    </Member>
    <Member MemberName="GetService">
      <MemberSignature Language="C#" Value="protected object GetService (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance object GetService(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.UndoEngine.UndoUnit.GetService(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetService (serviceType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Object ^ GetService(Type ^ serviceType);" />
      <MemberSignature Language="F#" Value="member this.GetService : Type -&gt; obj" Usage="undoUnit.GetService serviceType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType"><span data-ttu-id="51441-129">Tipo de servicio que se va a recuperar.</span><span class="sxs-lookup"><span data-stu-id="51441-129">The type of service to retrieve.</span></span></param>
        <summary><span data-ttu-id="51441-130">Obtiene una instancia del servicio solicitado.</span><span class="sxs-lookup"><span data-stu-id="51441-130">Gets an instance of the requested service.</span></span></summary>
        <returns><span data-ttu-id="51441-131">Instancia del servicio especificado o <see langword="null" /> si no se puede resolver dicho servicio.</span><span class="sxs-lookup"><span data-stu-id="51441-131">An instance of the given service, or <see langword="null" /> if the service cannot be resolved.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEmpty">
      <MemberSignature Language="C#" Value="public virtual bool IsEmpty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmpty" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.UndoEngine.UndoUnit.IsEmpty" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsEmpty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsEmpty { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEmpty : bool" Usage="System.ComponentModel.Design.UndoEngine.UndoUnit.IsEmpty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="51441-132">Obtiene un valor que indica si el objeto <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> no contiene ningún evento.</span><span class="sxs-lookup"><span data-stu-id="51441-132">Gets a value indicating whether the <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> contains no events.</span></span></summary>
        <value><span data-ttu-id="51441-133"><see langword="true" /> si el objeto <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> no contiene ningún evento; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="51441-133"><see langword="true" /> if the <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> contains no events; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51441-134">El motor para deshacer puede descartar las unidades vacías.</span><span class="sxs-lookup"><span data-stu-id="51441-134">The undo engine may discard empty units.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.UndoEngine.UndoUnit.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.ComponentModel.Design.UndoEngine.UndoUnit.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="51441-135">Obtiene el nombre de <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />.</span><span class="sxs-lookup"><span data-stu-id="51441-135">Gets the name of the <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />.</span></span></summary>
        <value><span data-ttu-id="51441-136">Nombre del objeto <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />.</span><span class="sxs-lookup"><span data-stu-id="51441-136">The name of the <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="undoUnit.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="51441-137">Devuelve un objeto <see cref="T:System.String" /> que representa el nombre actual de la unidad.</span><span class="sxs-lookup"><span data-stu-id="51441-137">Returns a <see cref="T:System.String" /> that represents the current name of the unit.</span></span></summary>
        <returns><span data-ttu-id="51441-138"><see cref="T:System.String" /> que representa el nombre actual de la unidad.</span><span class="sxs-lookup"><span data-stu-id="51441-138">A <see cref="T:System.String" /> that represents the current name of the unit.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Undo">
      <MemberSignature Language="C#" Value="public void Undo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Undo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo" />
      <MemberSignature Language="VB.NET" Value="Public Sub Undo ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Undo();" />
      <MemberSignature Language="F#" Value="member this.Undo : unit -&gt; unit" Usage="undoUnit.Undo " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="51441-139">Lleva a cabo una acción de deshacer o rehacer.</span><span class="sxs-lookup"><span data-stu-id="51441-139">Performs an undo or redo action.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51441-140">Acciones de deshacer a sí mismos alternar entre deshacer y rehacer Estados, por lo que una llamada a <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo%2A> establece dos veces el objeto a su estado original.</span><span class="sxs-lookup"><span data-stu-id="51441-140">Undo actions toggle themselves between undo and redo states, so calling <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo%2A> twice sets the object back to its original state.</span></span>  
  
 <span data-ttu-id="51441-141">El <xref:System.ComponentModel.Design.UndoEngine.UndoUnit> clase inicialmente, se supone que ya ha realizado el trabajo que se puede deshacer, por lo que la primera llamada a <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo%2A> deshace el trabajo.</span><span class="sxs-lookup"><span data-stu-id="51441-141">The <xref:System.ComponentModel.Design.UndoEngine.UndoUnit> class initially assumes that the undoable work has already been done, so the first call to <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo%2A> undoes the work.</span></span> <span data-ttu-id="51441-142">La siguiente llamada deshace la operación de deshacer anterior, realizando una operación de rehacer.</span><span class="sxs-lookup"><span data-stu-id="51441-142">The next call undoes the previous undo operation, performing a redo.</span></span>  
  
 <span data-ttu-id="51441-143">El <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo%2A> llamadas al método el <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoCore%2A> método para realizar una operación de deshacer.</span><span class="sxs-lookup"><span data-stu-id="51441-143">The <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo%2A> method calls the <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoCore%2A> method to perform an undo operation.</span></span> <span data-ttu-id="51441-144">El <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo%2A> propio método funciona para mantener un estado coherente dentro de la <xref:System.ComponentModel.Design.UndoEngine.UndoUnit>, incluso si se produce una excepción producida por <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoCore%2A>.</span><span class="sxs-lookup"><span data-stu-id="51441-144">The <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo%2A> method itself works to maintain consistent state within the <xref:System.ComponentModel.Design.UndoEngine.UndoUnit>, even in the event of an exception thrown by <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoCore%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="51441-145"><para>No llame a la <see cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoCore" /> método invalidarlo directamente; si lo desea, pero llame siempre a la <see langword="public" /> <see cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo" /> método para realizar tareas de deshacer. El <see cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo" /> método notifica al motor para deshacer en suspensión hasta que se complete la operación de deshacer actual de la recopilación de datos de deshacer. Esto evita que nuevas unidades de deshacer que se crean en respuesta a esta unidad de trabajo.</para></span><span class="sxs-lookup"><span data-stu-id="51441-145"><para>Do not call the <see cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoCore" /> method directly; override it if you want, but always call the <see langword="public" /><see cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo" /> method to perform undo work. The <see cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo" /> method notifies the undo engine to suspend undo data gathering until the current undo operation is completed. This prevents new undo units from being created in response to this unit doing work.</para></span></span></block>
        <altmember cref="T:System.ComponentModel.Design.UndoEngine" />
        <altmember cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoCore" />
        <altmember cref="T:System.ComponentModel.Design.IComponentChangeService" />
      </Docs>
    </Member>
    <Member MemberName="UndoCore">
      <MemberSignature Language="C#" Value="protected virtual void UndoCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void UndoCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub UndoCore ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void UndoCore();" />
      <MemberSignature Language="F#" Value="abstract member UndoCore : unit -&gt; unit&#xA;override this.UndoCore : unit -&gt; unit" Usage="undoUnit.UndoCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="51441-146"><see cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo" /> llama a este método para llevar a cabo una acción de deshacer.</span><span class="sxs-lookup"><span data-stu-id="51441-146">Called by <see cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo" /> to perform an undo action.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51441-147">El <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo%2A> llamadas al método el <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoCore%2A> método para realizar una operación de deshacer.</span><span class="sxs-lookup"><span data-stu-id="51441-147">The <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo%2A> method calls the <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoCore%2A> method to perform an undo operation.</span></span> <span data-ttu-id="51441-148">El <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo%2A> propio método funciona para mantener un estado coherente dentro de la <xref:System.ComponentModel.Design.UndoEngine.UndoUnit>, incluso si se produce una excepción producida por <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoCore%2A>.</span><span class="sxs-lookup"><span data-stu-id="51441-148">The <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo%2A> method itself works to maintain consistent state within the <xref:System.ComponentModel.Design.UndoEngine.UndoUnit>, even in the event of an exception thrown by <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoCore%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="51441-149"><para>No llame a la <see cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoCore" /> método invalidarlo directamente; si lo desea, pero llame siempre a la <see langword="public" /> <see cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo" /> método para realizar tareas de deshacer. El <see cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo" /> método notifica al motor para deshacer en suspensión hasta que se complete la operación de deshacer actual de la recopilación de datos de operación de deshacer. Esto evita que nuevas unidades de deshacer que se crean en respuesta a esta unidad de trabajo.</para></span><span class="sxs-lookup"><span data-stu-id="51441-149"><para>Do not call the <see cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoCore" /> method directly; override it if you want, but always call the <see langword="public" /><see cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo" /> method to perform undo work. The <see cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo" /> method notifies the undo engine to suspend undo-operation data gathering until the current undo operation is completed. This prevents new undo units from being created in response to this unit doing work.</para></span></span></block>
        <altmember cref="T:System.ComponentModel.Design.UndoEngine" />
        <altmember cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo" />
        <altmember cref="T:System.ComponentModel.Design.IComponentChangeService" />
      </Docs>
    </Member>
    <Member MemberName="UndoEngine">
      <MemberSignature Language="C#" Value="protected System.ComponentModel.Design.UndoEngine UndoEngine { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.UndoEngine UndoEngine" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property UndoEngine As UndoEngine" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::ComponentModel::Design::UndoEngine ^ UndoEngine { System::ComponentModel::Design::UndoEngine ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UndoEngine : System.ComponentModel.Design.UndoEngine" Usage="System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.UndoEngine</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="51441-150">Obtiene el objeto <see cref="P:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine" /> primario.</span><span class="sxs-lookup"><span data-stu-id="51441-150">Gets the parent <see cref="P:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine" />.</span></span></summary>
        <value><span data-ttu-id="51441-151">Propiedad <see cref="P:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine" /> a la que está asociado el objeto <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />.</span><span class="sxs-lookup"><span data-stu-id="51441-151">The <see cref="P:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine" /> to which this <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> is attached.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
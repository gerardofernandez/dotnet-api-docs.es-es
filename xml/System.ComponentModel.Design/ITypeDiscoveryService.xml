<Type Name="ITypeDiscoveryService" FullName="System.ComponentModel.Design.ITypeDiscoveryService">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e5e0caa064c433c14692c0738839572b7abed391" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37695569" /></Metadata><TypeSignature Language="C#" Value="public interface ITypeDiscoveryService" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ITypeDiscoveryService" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.ITypeDiscoveryService" />
  <TypeSignature Language="VB.NET" Value="Public Interface ITypeDiscoveryService" />
  <TypeSignature Language="C++ CLI" Value="public interface class ITypeDiscoveryService" />
  <TypeSignature Language="F#" Value="type ITypeDiscoveryService = interface" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="c19b8-101">Detecta los tipos disponibles en tiempo de diseño.</span><span class="sxs-lookup"><span data-stu-id="c19b8-101">Discovers available types at design time.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19b8-102">El <xref:System.ComponentModel.Design.ITypeDiscoveryService> se usa para detectar tipos disponibles en tiempo de diseño, cuando un cliente del servicio no conoce los nombres de los tipos existentes o ensamblados de referencia.</span><span class="sxs-lookup"><span data-stu-id="c19b8-102">The <xref:System.ComponentModel.Design.ITypeDiscoveryService> is used to discover available types at design time, when a client of the service does not know the names of existing types or referenced assemblies.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IServiceProvider" />
  </Docs>
  <Members>
    <Member MemberName="GetTypes">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection GetTypes (Type baseType, bool excludeGlobalTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ICollection GetTypes(class System.Type baseType, bool excludeGlobalTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ITypeDiscoveryService.GetTypes(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypes (baseType As Type, excludeGlobalTypes As Boolean) As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ICollection ^ GetTypes(Type ^ baseType, bool excludeGlobalTypes);" />
      <MemberSignature Language="F#" Value="abstract member GetTypes : Type * bool -&gt; System.Collections.ICollection" Usage="iTypeDiscoveryService.GetTypes (baseType, excludeGlobalTypes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseType" Type="System.Type" />
        <Parameter Name="excludeGlobalTypes" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="baseType"><span data-ttu-id="c19b8-103">Tipo base con el que deben coincidir.</span><span class="sxs-lookup"><span data-stu-id="c19b8-103">The base type to match.</span></span> <span data-ttu-id="c19b8-104">Puede ser <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c19b8-104">Can be <see langword="null" />.</span></span></param>
        <param name="excludeGlobalTypes"><span data-ttu-id="c19b8-105">Indica si se deben comprobar los tipos procedentes de todos los ensamblados de referencia.</span><span class="sxs-lookup"><span data-stu-id="c19b8-105">Indicates whether types from all referenced assemblies should be checked.</span></span></param>
        <summary><span data-ttu-id="c19b8-106">Recupera la lista de tipos disponibles.</span><span class="sxs-lookup"><span data-stu-id="c19b8-106">Retrieves the list of available types.</span></span></summary>
        <returns><span data-ttu-id="c19b8-107">Colección de tipos que coinciden con los criterios especificados por <paramref name="baseType" /> y <paramref name="excludeGlobalTypes" />.</span><span class="sxs-lookup"><span data-stu-id="c19b8-107">A collection of types that match the criteria specified by <paramref name="baseType" /> and <paramref name="excludeGlobalTypes" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c19b8-108">Si `baseType` es `null`, se devuelven todos los tipos.</span><span class="sxs-lookup"><span data-stu-id="c19b8-108">If `baseType` is `null`, all types are returned.</span></span> <span data-ttu-id="c19b8-109">En caso contrario, se devuelven solo los tipos derivados del tipo base especificado.</span><span class="sxs-lookup"><span data-stu-id="c19b8-109">Otherwise, only types derived from the specified base type are returned.</span></span> <span data-ttu-id="c19b8-110">Si `excludeGlobalTypes` es `false`, se comprueban los tipos de todos los ensamblados referenciados.</span><span class="sxs-lookup"><span data-stu-id="c19b8-110">If `excludeGlobalTypes` is `false`, types from all referenced assemblies are checked.</span></span> <span data-ttu-id="c19b8-111">En caso contrario, se comprueban los tipos solo de los ensamblados no - Global Assembly Cache GAC al que hace referencia.</span><span class="sxs-lookup"><span data-stu-id="c19b8-111">Otherwise, only types from non-Global Assembly Cache (GAC) referenced assemblies are checked.</span></span> <span data-ttu-id="c19b8-112">Para obtener más información, consulte [trabajar con ensamblados y caché Global de ensamblados](~/docs/framework/app-domains/working-with-assemblies-and-the-gac.md).</span><span class="sxs-lookup"><span data-stu-id="c19b8-112">For more information, see [Working with Assemblies and the Global Assembly Cache](~/docs/framework/app-domains/working-with-assemblies-and-the-gac.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IServiceProvider" />
      </Docs>
    </Member>
  </Members>
</Type>
<Type Name="DesignSurface" FullName="System.ComponentModel.Design.DesignSurface">
  <Metadata><Meta Name="ms.openlocfilehash" Value="91c1c9208c715341f7cfdcfb2625788e76d20af2" /><Meta Name="ms.sourcegitcommit" Value="42a3c35677e9d87eeb503607ae50c9d39827d414" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="12/17/2018" /><Meta Name="ms.locfileid" Value="53471166" /></Metadata><TypeSignature Language="C#" Value="public class DesignSurface : IDisposable, IServiceProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DesignSurface extends System.Object implements class System.IDisposable, class System.IServiceProvider" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.DesignSurface" />
  <TypeSignature Language="VB.NET" Value="Public Class DesignSurface&#xA;Implements IDisposable, IServiceProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class DesignSurface : IDisposable, IServiceProvider" />
  <TypeSignature Language="F#" Value="type DesignSurface = class&#xA;    interface IDisposable&#xA;    interface IServiceProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IServiceProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="05ab2-101">Presenta una interfaz de usuario para el diseño de componentes.</span><span class="sxs-lookup"><span data-stu-id="05ab2-101">Presents a user interface for designing components.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05ab2-102">La <xref:System.ComponentModel.Design.DesignSurface> clase implementa lo que el usuario percibe como un diseñador.</span><span class="sxs-lookup"><span data-stu-id="05ab2-102">The <xref:System.ComponentModel.Design.DesignSurface> class implements what the user perceives as a designer.</span></span> <span data-ttu-id="05ab2-103"><xref:System.ComponentModel.Design.DesignSurface> es que la interfaz de usuario, el usuario manipula para cambiar las características en tiempo de diseño.</span><span class="sxs-lookup"><span data-stu-id="05ab2-103"><xref:System.ComponentModel.Design.DesignSurface> is the user interface the user manipulates to change design-time features.</span></span> <span data-ttu-id="05ab2-104"><xref:System.ComponentModel.Design.DesignSurface> Proporciona una superficie de diseño completamente autónoma.</span><span class="sxs-lookup"><span data-stu-id="05ab2-104"><xref:System.ComponentModel.Design.DesignSurface> provides a completely self-contained design surface.</span></span>  
  
 <span data-ttu-id="05ab2-105">El <xref:System.ComponentModel.Design.DesignSurface> clase puede usarse como un diseñador independiente, o puede conllevar la <xref:System.ComponentModel.Design.DesignSurfaceManager> clase para proporcionar una implementación común para una aplicación que hospeda varios <xref:System.ComponentModel.Design.DesignSurface> objetos.</span><span class="sxs-lookup"><span data-stu-id="05ab2-105">The <xref:System.ComponentModel.Design.DesignSurface> class may be used as a stand-alone designer, or it may be coupled with the <xref:System.ComponentModel.Design.DesignSurfaceManager> class to provide a common implementation for an application that hosts multiple <xref:System.ComponentModel.Design.DesignSurface> objects.</span></span>  
  
 <span data-ttu-id="05ab2-106">La <xref:System.ComponentModel.Design.DesignSurface> clase puede utilizarse por sí mismo, o el usuario puede derivar una clase nueva y ampliar su comportamiento.</span><span class="sxs-lookup"><span data-stu-id="05ab2-106">The <xref:System.ComponentModel.Design.DesignSurface> class can be used by itself, or the user can derive a new class from it and augment the behavior.</span></span>  
  
 <span data-ttu-id="05ab2-107">La <xref:System.ComponentModel.Design.DesignSurface> clase proporciona varios servicios en tiempo de diseño automáticamente.</span><span class="sxs-lookup"><span data-stu-id="05ab2-107">The <xref:System.ComponentModel.Design.DesignSurface> class provides several design-time services automatically.</span></span> <span data-ttu-id="05ab2-108">La <xref:System.ComponentModel.Design.DesignSurface> clase agrega todos sus servicios en su constructor.</span><span class="sxs-lookup"><span data-stu-id="05ab2-108">The <xref:System.ComponentModel.Design.DesignSurface> class adds all of its services in its constructor.</span></span> <span data-ttu-id="05ab2-109">La mayoría de estos servicios puede reemplazarse por reemplazarlos en protegido <xref:System.ComponentModel.Design.DesignSurface.ServiceContainer%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="05ab2-109">Most of these services can be overridden by replacing them in the protected <xref:System.ComponentModel.Design.DesignSurface.ServiceContainer%2A> property.</span></span> <span data-ttu-id="05ab2-110">Para reemplazar un servicio, reemplace el constructor, llame a la base y realice los cambios a través de protegido <xref:System.ComponentModel.Design.DesignSurface.ServiceContainer%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="05ab2-110">To replace a service, override the constructor, call base, and make any changes through the protected <xref:System.ComponentModel.Design.DesignSurface.ServiceContainer%2A> property.</span></span> <span data-ttu-id="05ab2-111">Todos los servicios que se agregan al contenedor de servicios y que implementan <xref:System.IDisposable> se eliminan cuando se desecha la superficie de diseño.</span><span class="sxs-lookup"><span data-stu-id="05ab2-111">All services that are added to the service container and that implement <xref:System.IDisposable> are disposed when the design surface is disposed.</span></span> <span data-ttu-id="05ab2-112">El conjunto predeterminado de reemplazable de servicios que la <xref:System.ComponentModel.Design.DesignSurface> clase proporciona se muestra en la tabla siguiente.</span><span class="sxs-lookup"><span data-stu-id="05ab2-112">The default set of replaceable services that the <xref:System.ComponentModel.Design.DesignSurface> class provides is shown in the following table.</span></span>  
  
|<span data-ttu-id="05ab2-113">web de Office</span><span class="sxs-lookup"><span data-stu-id="05ab2-113">Service</span></span>|<span data-ttu-id="05ab2-114">Descripción</span><span class="sxs-lookup"><span data-stu-id="05ab2-114">Description</span></span>|  
|-------------|-----------------|  
|<xref:System.ComponentModel.Design.IExtenderProviderService>|<span data-ttu-id="05ab2-115">Permite que los objetos que no forman parte de la colección de componentes del contenedor para proporcionar sus propios proveedores extensores.</span><span class="sxs-lookup"><span data-stu-id="05ab2-115">Enables objects that are not part of the container's components collection to provide their own extender providers.</span></span>|  
|<xref:System.ComponentModel.Design.IExtenderListService>|<span data-ttu-id="05ab2-116">Utilizado por <xref:System.ComponentModel.TypeDescriptor> para obtener una lista de proveedores extensores.</span><span class="sxs-lookup"><span data-stu-id="05ab2-116">Used by <xref:System.ComponentModel.TypeDescriptor> to get a list of extender providers.</span></span> <span data-ttu-id="05ab2-117">Con este servicio, los proveedores extensores pueden residir fuera del contenedor.</span><span class="sxs-lookup"><span data-stu-id="05ab2-117">With this service, extender providers can live outside of the container.</span></span>|  
|<xref:System.ComponentModel.Design.ITypeDescriptorFilterService>|<span data-ttu-id="05ab2-118">Proporciona enlaces de metadatos del diseñador.</span><span class="sxs-lookup"><span data-stu-id="05ab2-118">Provides designer metadata hooks.</span></span> <span data-ttu-id="05ab2-119">Se trata de la interfaz principal para el filtrado de metadatos.</span><span class="sxs-lookup"><span data-stu-id="05ab2-119">This is the primary interface for metadata filtering.</span></span>|  
|<xref:System.ComponentModel.Design.ISelectionService>|<span data-ttu-id="05ab2-120">Proporciona una manera de seleccionar los componentes en el diseñador.</span><span class="sxs-lookup"><span data-stu-id="05ab2-120">Provides a way to select components in the designer.</span></span>|  
|<xref:System.ComponentModel.Design.IReferenceService>|<span data-ttu-id="05ab2-121">Proporciona una manera de obtener un nombre para los objetos, incluso cuando no están ubicados esos objetos.</span><span class="sxs-lookup"><span data-stu-id="05ab2-121">Provides a way to get a name for objects, even when those objects are not sited.</span></span>|  
|<xref:System.ComponentModel.Design.DesignSurface>|<span data-ttu-id="05ab2-122">Ofrece la superficie de diseño como un servicio.</span><span class="sxs-lookup"><span data-stu-id="05ab2-122">Offers the design surface itself as a service.</span></span>|  
|<xref:System.ComponentModel.Design.DesignerOptionService>|<span data-ttu-id="05ab2-123">Proporciona una clase base para obtener y establecer valores de opciones de un diseñador.</span><span class="sxs-lookup"><span data-stu-id="05ab2-123">Provides a base class for getting and setting option values for a designer.</span></span>|  
  
 <span data-ttu-id="05ab2-124">La siguiente tabla muestra los servicios que no sean reemplazables proporcionados de forma predeterminada.</span><span class="sxs-lookup"><span data-stu-id="05ab2-124">The following table shows the non-replaceable services provided by default.</span></span>  
  
|<span data-ttu-id="05ab2-125">web de Office</span><span class="sxs-lookup"><span data-stu-id="05ab2-125">Service</span></span>|<span data-ttu-id="05ab2-126">Descripción</span><span class="sxs-lookup"><span data-stu-id="05ab2-126">Description</span></span>|  
|-------------|-----------------|  
|<xref:System.ComponentModel.Design.IComponentChangeService>|<span data-ttu-id="05ab2-127">Provoca eventos cuando se realizan cambios en los componentes.</span><span class="sxs-lookup"><span data-stu-id="05ab2-127">Raises events as changes are made to components.</span></span>|  
|<xref:System.ComponentModel.Design.IDesignerHost>|<span data-ttu-id="05ab2-128">Controla el acceso a tipos, servicios y transacciones.</span><span class="sxs-lookup"><span data-stu-id="05ab2-128">Controls access to types, services, and transactions.</span></span> <span data-ttu-id="05ab2-129">Interfaz principal para los diseñadores.</span><span class="sxs-lookup"><span data-stu-id="05ab2-129">Master interface for designers.</span></span>|  
|<xref:System.ComponentModel.IContainer>|<span data-ttu-id="05ab2-130">Posee el conjunto de componentes que se está diseñando.</span><span class="sxs-lookup"><span data-stu-id="05ab2-130">Owns the set of components that are being designed.</span></span> <span data-ttu-id="05ab2-131">Cada diseñador tiene una <xref:System.ComponentModel.IContainer> que posee los componentes.</span><span class="sxs-lookup"><span data-stu-id="05ab2-131">Each designer has an <xref:System.ComponentModel.IContainer> that owns the components.</span></span>|  
|<xref:System.ComponentModel.Design.IServiceContainer>|<span data-ttu-id="05ab2-132">Se deriva de <xref:System.IServiceProvider> y proporciona una manera de agregar y quitar servicios del diseñador.</span><span class="sxs-lookup"><span data-stu-id="05ab2-132">Derives from <xref:System.IServiceProvider> and provides a way to add and remove services from the designer.</span></span>|  
  
 <span data-ttu-id="05ab2-133">Además de estos servicios, el <xref:System.ComponentModel.Design.DesignSurface> clase también proporciona un único servicio que está disponible a través del sitio de un componente.</span><span class="sxs-lookup"><span data-stu-id="05ab2-133">In addition to these services, the <xref:System.ComponentModel.Design.DesignSurface> class also provides a single service that is available through a component's site.</span></span> <span data-ttu-id="05ab2-134">Este servicio es único para cada componente.</span><span class="sxs-lookup"><span data-stu-id="05ab2-134">This service is unique for each component.</span></span> <span data-ttu-id="05ab2-135">La siguiente tabla muestra los servicios que no se puede reemplazar.</span><span class="sxs-lookup"><span data-stu-id="05ab2-135">The following table shows the services that cannot be replaced.</span></span>  
  
|<span data-ttu-id="05ab2-136">web de Office</span><span class="sxs-lookup"><span data-stu-id="05ab2-136">Service</span></span>|<span data-ttu-id="05ab2-137">Descripción</span><span class="sxs-lookup"><span data-stu-id="05ab2-137">Description</span></span>|  
|-------------|-----------------|  
|<xref:System.ComponentModel.Design.IDictionaryService>|<span data-ttu-id="05ab2-138">Un diccionario genérico de pares clave/valor que se puede usar para almacenar datos arbitrarios sobre un componente.</span><span class="sxs-lookup"><span data-stu-id="05ab2-138">A generic dictionary of key/value pairs that can be used to store arbitrary data about a component.</span></span>|  
|<xref:System.ComponentModel.INestedContainer>|<span data-ttu-id="05ab2-139">Un contenedor que permite que un componente agregar los componentes secundarios adicionales al diseñador.</span><span class="sxs-lookup"><span data-stu-id="05ab2-139">A container that enables a component to add additional child components to the designer.</span></span> <span data-ttu-id="05ab2-140">Estos componentes se va a formar parte de la superficie de diseño, pero no participará en la serialización.</span><span class="sxs-lookup"><span data-stu-id="05ab2-140">These components will be part of the design surface, but will not participate in serialization.</span></span> <span data-ttu-id="05ab2-141">Esto es útil cuando desea diseñar un control que es capaz de exponer una región de sí mismo en un diseñador, pero no desea que la región para participar en la serialización.</span><span class="sxs-lookup"><span data-stu-id="05ab2-141">This is useful when you want to design a control that is capable of exposing a region of itself in a designer, but you do not want the region to participate in serialization.</span></span>|  
  
 <span data-ttu-id="05ab2-142">Además <xref:System.ComponentModel.ISite>, el sitio también implementa las interfaces siguientes.</span><span class="sxs-lookup"><span data-stu-id="05ab2-142">In addition to <xref:System.ComponentModel.ISite>, the site also implements the following interfaces.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="05ab2-143">Comprobar la existencia de estas interfaces, en lugar de recurrir a una conversión, porque otras implementaciones del sitio no pueden implementar.</span><span class="sxs-lookup"><span data-stu-id="05ab2-143">Check for the existence of these interfaces, rather than use indiscriminate casting, because other site implementations may not implement them.</span></span>  
  
|<span data-ttu-id="05ab2-144">web de Office</span><span class="sxs-lookup"><span data-stu-id="05ab2-144">Service</span></span>|<span data-ttu-id="05ab2-145">Descripción</span><span class="sxs-lookup"><span data-stu-id="05ab2-145">Description</span></span>|  
|-------------|-----------------|  
|<xref:System.ComponentModel.Design.IServiceContainer>|<span data-ttu-id="05ab2-146">Proporciona una manera de llegar al contenedor de servicios específicos del sitio.</span><span class="sxs-lookup"><span data-stu-id="05ab2-146">Provides a way to get to the container of site-specific services.</span></span> <span data-ttu-id="05ab2-147">Por ejemplo, <xref:System.ComponentModel.Design.IDictionaryService> es un servicio específico del sitio.</span><span class="sxs-lookup"><span data-stu-id="05ab2-147">For example, <xref:System.ComponentModel.Design.IDictionaryService> is a site-specific service.</span></span> <span data-ttu-id="05ab2-148">Con este servicio, puede agregar servicios específicos de sitio adicionales.</span><span class="sxs-lookup"><span data-stu-id="05ab2-148">With this service, you can add additional site-specific services.</span></span>|  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.NamedPermissionSet"><span data-ttu-id="05ab2-149">Para obtener acceso completo a los recursos del sistema.</span><span class="sxs-lookup"><span data-stu-id="05ab2-149">for full access to system resources.</span></span> <span data-ttu-id="05ab2-150">Valores de petición: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />, <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span><span class="sxs-lookup"><span data-stu-id="05ab2-150">Demand values: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />, <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span></span> <span data-ttu-id="05ab2-151">Estado asociado:</span><span class="sxs-lookup"><span data-stu-id="05ab2-151">Associated state:</span></span></permission>
    <altmember cref="T:System.ComponentModel.Design.IDesignerHost" />
    <altmember cref="T:System.IServiceProvider" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.DesignerLoader" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderService" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="05ab2-152">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.DesignSurface" />.</span><span class="sxs-lookup"><span data-stu-id="05ab2-152">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignSurface" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignSurface ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DesignSurface();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="05ab2-153">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.DesignSurface" />.</span><span class="sxs-lookup"><span data-stu-id="05ab2-153">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignSurface" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="05ab2-154">La interfaz <see cref="T:System.ComponentModel.Design.IDesignerHost" /> asociada al objeto <see cref="T:System.ComponentModel.Design.DesignSurface" /> se ha desechado.</span><span class="sxs-lookup"><span data-stu-id="05ab2-154">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignSurface (IServiceProvider parentProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IServiceProvider parentProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.#ctor(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parentProvider As IServiceProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DesignSurface(IServiceProvider ^ parentProvider);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Design.DesignSurface : IServiceProvider -&gt; System.ComponentModel.Design.DesignSurface" Usage="new System.ComponentModel.Design.DesignSurface parentProvider" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parentProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="parentProvider"><span data-ttu-id="05ab2-155">Proveedor de servicios primario o <see langword="null" /> si no se usa ningún elemento primario para resolver servicios.</span><span class="sxs-lookup"><span data-stu-id="05ab2-155">The parent service provider, or <see langword="null" /> if there is no parent used to resolve services.</span></span></param>
        <summary><span data-ttu-id="05ab2-156">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.DesignSurface" />.</span><span class="sxs-lookup"><span data-stu-id="05ab2-156">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignSurface" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05ab2-157">Cuando `parentProvide` está presente, los diseñadores contenidos dentro de la superficie pueden recuperar servicios de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="05ab2-157">When `parentProvide` is present, designers contained within the surface can retrieve services from the application.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="05ab2-158">La interfaz <see cref="T:System.ComponentModel.Design.IDesignerHost" /> asociada al objeto <see cref="T:System.ComponentModel.Design.DesignSurface" /> se ha desechado.</span><span class="sxs-lookup"><span data-stu-id="05ab2-158">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" /> has been disposed.</span></span></exception>
        <altmember cref="T:System.IServiceProvider" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignSurface (Type rootComponentType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type rootComponentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.#ctor(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rootComponentType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DesignSurface(Type ^ rootComponentType);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Design.DesignSurface : Type -&gt; System.ComponentModel.Design.DesignSurface" Usage="new System.ComponentModel.Design.DesignSurface rootComponentType" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="rootComponentType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="rootComponentType"><span data-ttu-id="05ab2-159">Tipo de componente raíz que se va a crear.</span><span class="sxs-lookup"><span data-stu-id="05ab2-159">The type of root component to create.</span></span></param>
        <summary><span data-ttu-id="05ab2-160">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.DesignSurface" />.</span><span class="sxs-lookup"><span data-stu-id="05ab2-160">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignSurface" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05ab2-161">Cuando se usa el <xref:System.ComponentModel.Design.DesignSurface.%23ctor%2A> constructor, crea un cargador de diseñadores simple que, a su vez, se crea un componente del tipo especificado y, a continuación, finaliza el proceso de carga.</span><span class="sxs-lookup"><span data-stu-id="05ab2-161">When you use the <xref:System.ComponentModel.Design.DesignSurface.%23ctor%2A> constructor, it creates a simple designer loader that, in turn, creates a component of the given type and then ends the loading process.</span></span> <span data-ttu-id="05ab2-162">Se trata de una manera sencilla de crear un diseñador, bajo el supuesto de que todos guardado de estado se realizará externamente.</span><span class="sxs-lookup"><span data-stu-id="05ab2-162">This is a straightforward way to create a designer, under the assumption that all saving of state will be done externally.</span></span> <span data-ttu-id="05ab2-163">Internamente, este llama <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> y pasa el tipo de componente raíz.</span><span class="sxs-lookup"><span data-stu-id="05ab2-163">Internally, this calls <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> and passes the root component type.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="05ab2-164">El <xref:System.ComponentModel.Design.DesignSurface.%23ctor%2A> sobrecarga no se ve afectada por <xref:System.Windows.Forms.Design.DesignerOptions>.</span><span class="sxs-lookup"><span data-stu-id="05ab2-164">The <xref:System.ComponentModel.Design.DesignSurface.%23ctor%2A> overload is not affected by <xref:System.Windows.Forms.Design.DesignerOptions>.</span></span> <span data-ttu-id="05ab2-165">El <xref:System.Windows.Forms.Design.DesignerOptions> debe estar en el contenedor de servicio antes de la carga de la superficie de diseño.</span><span class="sxs-lookup"><span data-stu-id="05ab2-165">The <xref:System.Windows.Forms.Design.DesignerOptions> must be in the service container before the design surface loads.</span></span> <span data-ttu-id="05ab2-166">Si necesita acceso a <xref:System.Windows.Forms.Design.DesignerOptions>, llame al constructor vacío, agregue el <xref:System.Windows.Forms.Design.DesignerOptions> a la <xref:System.ComponentModel.Design.DesignSurface.ServiceContainer%2A> y llamar a <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> con `rootComponentType`.</span><span class="sxs-lookup"><span data-stu-id="05ab2-166">If you need access to <xref:System.Windows.Forms.Design.DesignerOptions>, call the empty constructor, add the <xref:System.Windows.Forms.Design.DesignerOptions> to the <xref:System.ComponentModel.Design.DesignSurface.ServiceContainer%2A> and call <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> with `rootComponentType`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="05ab2-167">El valor de <paramref name="rootComponent" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="05ab2-167"><paramref name="rootComponent" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="05ab2-168">La interfaz <see cref="T:System.ComponentModel.Design.IDesignerHost" /> asociada al objeto <see cref="T:System.ComponentModel.Design.DesignSurface" /> se ha desechado.</span><span class="sxs-lookup"><span data-stu-id="05ab2-168">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignSurface (IServiceProvider parentProvider, Type rootComponentType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IServiceProvider parentProvider, class System.Type rootComponentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.#ctor(System.IServiceProvider,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parentProvider As IServiceProvider, rootComponentType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DesignSurface(IServiceProvider ^ parentProvider, Type ^ rootComponentType);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Design.DesignSurface : IServiceProvider * Type -&gt; System.ComponentModel.Design.DesignSurface" Usage="new System.ComponentModel.Design.DesignSurface (parentProvider, rootComponentType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parentProvider" Type="System.IServiceProvider" />
        <Parameter Name="rootComponentType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="parentProvider"><span data-ttu-id="05ab2-169">Proveedor de servicios primario o <see langword="null" /> si no se usa ningún elemento primario para resolver servicios.</span><span class="sxs-lookup"><span data-stu-id="05ab2-169">The parent service provider, or <see langword="null" /> if there is no parent used to resolve services.</span></span></param>
        <param name="rootComponentType"><span data-ttu-id="05ab2-170">Tipo de componente raíz que se va a crear.</span><span class="sxs-lookup"><span data-stu-id="05ab2-170">The type of root component to create.</span></span></param>
        <summary><span data-ttu-id="05ab2-171">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.DesignSurface" />.</span><span class="sxs-lookup"><span data-stu-id="05ab2-171">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignSurface" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05ab2-172">Mediante el <xref:System.ComponentModel.Design.DesignSurface.%23ctor%2A> el constructor crea un cargador de diseñadores simple que crea un componente del tipo especificado y, a continuación, finaliza el proceso de carga.</span><span class="sxs-lookup"><span data-stu-id="05ab2-172">Using the <xref:System.ComponentModel.Design.DesignSurface.%23ctor%2A> constructor creates a simple designer loader that creates a component of the given type and then ends the loading process.</span></span> <span data-ttu-id="05ab2-173">Se trata de una manera sencilla de crear un diseñador, bajo el supuesto de que todos guardado de estado se realizará externamente.</span><span class="sxs-lookup"><span data-stu-id="05ab2-173">This is a straightforward way to create a designer, under the assumption that all saving of state will be done externally.</span></span> <span data-ttu-id="05ab2-174">Internamente, este llama <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> y pasa el tipo de componente raíz.</span><span class="sxs-lookup"><span data-stu-id="05ab2-174">Internally, this calls <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> and passes the root component type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="05ab2-175">El valor de <paramref name="rootComponent" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="05ab2-175"><paramref name="rootComponent" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="05ab2-176">La interfaz <see cref="T:System.ComponentModel.Design.IDesignerHost" /> asociada al objeto <see cref="T:System.ComponentModel.Design.DesignSurface" /> se ha desechado.</span><span class="sxs-lookup"><span data-stu-id="05ab2-176">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" /> has been disposed.</span></span></exception>
        <altmember cref="T:System.IServiceProvider" />
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginLoad">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="05ab2-177">Comienza el proceso de carga.</span><span class="sxs-lookup"><span data-stu-id="05ab2-177">Begins the loading process.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginLoad">
      <MemberSignature Language="C#" Value="public void BeginLoad (System.ComponentModel.Design.Serialization.DesignerLoader loader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginLoad(class System.ComponentModel.Design.Serialization.DesignerLoader loader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.BeginLoad(System.ComponentModel.Design.Serialization.DesignerLoader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginLoad (loader As DesignerLoader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginLoad(System::ComponentModel::Design::Serialization::DesignerLoader ^ loader);" />
      <MemberSignature Language="F#" Value="member this.BeginLoad : System.ComponentModel.Design.Serialization.DesignerLoader -&gt; unit" Usage="designSurface.BeginLoad loader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="loader" Type="System.ComponentModel.Design.Serialization.DesignerLoader" />
      </Parameters>
      <Docs>
        <param name="loader"><span data-ttu-id="05ab2-178">Cargador de diseñadores que se va a emplear para cargar el diseñador.</span><span class="sxs-lookup"><span data-stu-id="05ab2-178">The designer loader to use for loading the designer.</span></span></param>
        <summary><span data-ttu-id="05ab2-179">Comienza el proceso de carga con el cargador de diseñadores especificado.</span><span class="sxs-lookup"><span data-stu-id="05ab2-179">Begins the loading process with the given designer loader.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05ab2-180">Carga del diseñador puede ser asincrónica, por lo que la carga puede continuar después de que se devuelva la llamada.</span><span class="sxs-lookup"><span data-stu-id="05ab2-180">Designer loading can be asynchronous, so the loading may continue to progress after this call has returned.</span></span> <span data-ttu-id="05ab2-181">Adjuntar un controlador de eventos para el <xref:System.ComponentModel.Design.IDesignerHost.LoadComplete> eventos para recibir notificaciones cuando ha completado la carga de la superficie de diseño.</span><span class="sxs-lookup"><span data-stu-id="05ab2-181">Attach an event handler to the <xref:System.ComponentModel.Design.IDesignerHost.LoadComplete> event to be notified when the design surface has completed loading.</span></span>  
  
 <span data-ttu-id="05ab2-182">Después de <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> es llamado, se puede obtener inmediatamente la vista para el diseñador, porque los cargadores de diseñadores deben proporcionar al menos el componente raíz cuando se cargan de forma asincrónica.</span><span class="sxs-lookup"><span data-stu-id="05ab2-182">After <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> is called, you can immediately obtain the view for the designer, because designer loaders must provide at least the root component when loading asynchronously.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="05ab2-183">El valor de <paramref name="loader" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="05ab2-183"><paramref name="loader" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="05ab2-184">La interfaz <see cref="T:System.ComponentModel.Design.IDesignerHost" /> asociada al objeto <see cref="T:System.ComponentModel.Design.DesignSurface" /> se ha desechado.</span><span class="sxs-lookup"><span data-stu-id="05ab2-184">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" /> has been disposed.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.DesignerLoader" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderService" />
      </Docs>
    </Member>
    <Member MemberName="BeginLoad">
      <MemberSignature Language="C#" Value="public void BeginLoad (Type rootComponentType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginLoad(class System.Type rootComponentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.BeginLoad(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginLoad (rootComponentType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginLoad(Type ^ rootComponentType);" />
      <MemberSignature Language="F#" Value="member this.BeginLoad : Type -&gt; unit" Usage="designSurface.BeginLoad rootComponentType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootComponentType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="rootComponentType"><span data-ttu-id="05ab2-185">Tipo de componente que se va a crear en modo de diseño.</span><span class="sxs-lookup"><span data-stu-id="05ab2-185">The type of component to create in design mode.</span></span></param>
        <summary><span data-ttu-id="05ab2-186">Comienza el proceso de carga.</span><span class="sxs-lookup"><span data-stu-id="05ab2-186">Begins the loading process.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05ab2-187">Cuando `rootComponentType` se especifica, un cargador de diseñadores predeterminado que simplemente crea una instancia de `rootComponentType` se usará.</span><span class="sxs-lookup"><span data-stu-id="05ab2-187">When `rootComponentType` is specified, a default designer loader that simply creates an instance of `rootComponentType` will be used.</span></span> <span data-ttu-id="05ab2-188">Carga del diseñador puede ser asincrónica, por lo que la carga puede continuar después de que se devuelva la llamada.</span><span class="sxs-lookup"><span data-stu-id="05ab2-188">Designer loading can be asynchronous, so the loading may continue to progress after this call has returned.</span></span> <span data-ttu-id="05ab2-189">Adjuntar un controlador de eventos para el <xref:System.ComponentModel.Design.IDesignerHost.LoadComplete> eventos para recibir notificaciones cuando ha completado la carga de la superficie de diseño.</span><span class="sxs-lookup"><span data-stu-id="05ab2-189">Attach an event handler to the <xref:System.ComponentModel.Design.IDesignerHost.LoadComplete> event to be notified when the design surface has completed loading.</span></span>  
  
 <span data-ttu-id="05ab2-190">Después de <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> es llamado, se puede obtener inmediatamente la vista para el diseñador, porque los cargadores de diseñadores deben proporcionar al menos el componente raíz cuando se cargan de forma asincrónica.</span><span class="sxs-lookup"><span data-stu-id="05ab2-190">After <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> is called, you can immediately obtain the view for the designer, because designer loaders must provide at least the root component when loading asynchronously.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="05ab2-191">El <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> método crea una instancia del tipo de componente e inicializa un diseñador para esta instancia.</span><span class="sxs-lookup"><span data-stu-id="05ab2-191">The <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> method creates an instance of the component type and initializes a designer for this instance.</span></span> <span data-ttu-id="05ab2-192">El <xref:System.ComponentModel.Design.DesignSurface.Loaded> evento se desencadena antes de que devuelve este método.</span><span class="sxs-lookup"><span data-stu-id="05ab2-192">The <xref:System.ComponentModel.Design.DesignSurface.Loaded> event is raised before this method returns.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="05ab2-193">El valor de <paramref name="rootComponentType" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="05ab2-193"><paramref name="rootComponentType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="05ab2-194">La interfaz <see cref="T:System.ComponentModel.Design.IDesignerHost" /> asociada al objeto <see cref="T:System.ComponentModel.Design.DesignSurface" /> se ha desechado.</span><span class="sxs-lookup"><span data-stu-id="05ab2-194">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ComponentContainer">
      <MemberSignature Language="C#" Value="public System.ComponentModel.IContainer ComponentContainer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.IContainer ComponentContainer" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.DesignSurface.ComponentContainer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ComponentContainer As IContainer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::IContainer ^ ComponentContainer { System::ComponentModel::IContainer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ComponentContainer : System.ComponentModel.IContainer" Usage="System.ComponentModel.Design.DesignSurface.ComponentContainer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IContainer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="05ab2-195">Obtiene la implementación de <see cref="T:System.ComponentModel.IContainer" /> en la superficie de diseño.</span><span class="sxs-lookup"><span data-stu-id="05ab2-195">Gets the <see cref="T:System.ComponentModel.IContainer" /> implementation within the design surface.</span></span></summary>
        <value><span data-ttu-id="05ab2-196">Implementación de <see cref="T:System.ComponentModel.IContainer" /> en la superficie de diseño.</span><span class="sxs-lookup"><span data-stu-id="05ab2-196">The <see cref="T:System.ComponentModel.IContainer" /> implementation within the design surface.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05ab2-197">El <xref:System.ComponentModel.Design.DesignSurface.ComponentContainer%2A> propiedad contiene todos los objetos que están actualmente en modo de diseño.</span><span class="sxs-lookup"><span data-stu-id="05ab2-197">The <xref:System.ComponentModel.Design.DesignSurface.ComponentContainer%2A> property holds all objects that are currently in design mode.</span></span> <span data-ttu-id="05ab2-198">Cuando se agregan componentes a <xref:System.ComponentModel.Design.DesignSurface.ComponentContainer%2A>, su diseñador, si existe, está cargado.</span><span class="sxs-lookup"><span data-stu-id="05ab2-198">When components are added to <xref:System.ComponentModel.Design.DesignSurface.ComponentContainer%2A>, their designer, if any, is loaded.</span></span> <span data-ttu-id="05ab2-199">El componente está ubicado en un sitio que proporciona acceso completo a la superficie de diseño.</span><span class="sxs-lookup"><span data-stu-id="05ab2-199">The component is sited with a site that provides full access to the design surface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="05ab2-200">La interfaz <see cref="T:System.ComponentModel.Design.IDesignerHost" /> asociada al objeto <see cref="T:System.ComponentModel.Design.DesignSurface" /> se ha desechado.</span><span class="sxs-lookup"><span data-stu-id="05ab2-200">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateComponent">
      <MemberSignature Language="C#" Value="protected internal virtual System.ComponentModel.IComponent CreateComponent (Type componentType);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.ComponentModel.IComponent CreateComponent(class System.Type componentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.CreateComponent(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function CreateComponent (componentType As Type) As IComponent" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::ComponentModel::IComponent ^ CreateComponent(Type ^ componentType);" />
      <MemberSignature Language="F#" Value="abstract member CreateComponent : Type -&gt; System.ComponentModel.IComponent&#xA;override this.CreateComponent : Type -&gt; System.ComponentModel.IComponent" Usage="designSurface.CreateComponent componentType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("CreateComponent has been replaced by CreateInstance and will be removed after Beta2")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IComponent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="componentType"><span data-ttu-id="05ab2-201">Tipo de componente que se va a crear.</span><span class="sxs-lookup"><span data-stu-id="05ab2-201">The type of component to create.</span></span></param>
        <summary><span data-ttu-id="05ab2-202">Crea una instancia de un componente.</span><span class="sxs-lookup"><span data-stu-id="05ab2-202">Creates an instance of a component.</span></span></summary>
        <returns><span data-ttu-id="05ab2-203">Componente recién creado.</span><span class="sxs-lookup"><span data-stu-id="05ab2-203">The newly created component.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05ab2-204">El <xref:System.ComponentModel.Design.DesignSurface.CreateComponent%2A> la superficie de diseño llama al método <xref:System.ComponentModel.Design.IDesignerHost.CreateComponent%2A> método para crear una instancia de un componente.</span><span class="sxs-lookup"><span data-stu-id="05ab2-204">The <xref:System.ComponentModel.Design.DesignSurface.CreateComponent%2A> method is called by the design surface's <xref:System.ComponentModel.Design.IDesignerHost.CreateComponent%2A> method to create an instance of a component.</span></span> <span data-ttu-id="05ab2-205">El componente debe pueden crearse y agregarse al contenedor público en la superficie de diseño.</span><span class="sxs-lookup"><span data-stu-id="05ab2-205">The component should be created and added to the public container on the design surface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="05ab2-206">El valor de <paramref name="componentType" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="05ab2-206"><paramref name="componentType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="05ab2-207">La interfaz <see cref="T:System.ComponentModel.Design.IDesignerHost" /> asociada al objeto <see cref="T:System.ComponentModel.Design.DesignSurface" /> se ha desechado.</span><span class="sxs-lookup"><span data-stu-id="05ab2-207">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateDesigner">
      <MemberSignature Language="C#" Value="protected internal virtual System.ComponentModel.Design.IDesigner CreateDesigner (System.ComponentModel.IComponent component, bool rootDesigner);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.ComponentModel.Design.IDesigner CreateDesigner(class System.ComponentModel.IComponent component, bool rootDesigner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.CreateDesigner(System.ComponentModel.IComponent,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function CreateDesigner (component As IComponent, rootDesigner As Boolean) As IDesigner" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::ComponentModel::Design::IDesigner ^ CreateDesigner(System::ComponentModel::IComponent ^ component, bool rootDesigner);" />
      <MemberSignature Language="F#" Value="abstract member CreateDesigner : System.ComponentModel.IComponent * bool -&gt; System.ComponentModel.Design.IDesigner&#xA;override this.CreateDesigner : System.ComponentModel.IComponent * bool -&gt; System.ComponentModel.Design.IDesigner" Usage="designSurface.CreateDesigner (component, rootDesigner)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.IDesigner</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
        <Parameter Name="rootDesigner" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="05ab2-208">Componente para el que se debe crear el diseñador.</span><span class="sxs-lookup"><span data-stu-id="05ab2-208">The component for which the designer should be created.</span></span></param>
        <param name="rootDesigner"><span data-ttu-id="05ab2-209">Es <see langword="true" /> para crear un diseñador raíz; es <see langword="false" /> para crear un diseñador normal.</span><span class="sxs-lookup"><span data-stu-id="05ab2-209"><see langword="true" /> to create a root designer; <see langword="false" /> to create a normal designer.</span></span></param>
        <summary><span data-ttu-id="05ab2-210">Crea un diseñador cuando se agrega un componente al contenedor.</span><span class="sxs-lookup"><span data-stu-id="05ab2-210">Creates a designer when a component is added to the container.</span></span></summary>
        <returns><span data-ttu-id="05ab2-211">Instancia del diseñador solicitado o <see langword="null" /> si no se encuentra ningún diseñador que coincida.</span><span class="sxs-lookup"><span data-stu-id="05ab2-211">An instance of the requested designer, or <see langword="null" /> if no matching designer could be found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05ab2-212">El <xref:System.ComponentModel.Design.DesignSurface.CreateDesigner%2A> la superficie de diseño llama al método <xref:System.ComponentModel.IContainer> cuando se agrega un componente al contenedor.</span><span class="sxs-lookup"><span data-stu-id="05ab2-212">The <xref:System.ComponentModel.Design.DesignSurface.CreateDesigner%2A> method is called by the design surface's <xref:System.ComponentModel.IContainer> when a component is added to the container.</span></span> <span data-ttu-id="05ab2-213">Este método crea un diseñador, pero no inicializa.</span><span class="sxs-lookup"><span data-stu-id="05ab2-213">This method creates a designer, but does not initialize it.</span></span> <span data-ttu-id="05ab2-214">Cuando se devuelve, el diseñador se inicializa el contenedor.</span><span class="sxs-lookup"><span data-stu-id="05ab2-214">When it returns, the designer is initialized by the container.</span></span>  
  
 <span data-ttu-id="05ab2-215"><xref:System.ComponentModel.Design.DesignSurface.CreateDesigner%2A> puede crear dos tipos diferentes de los diseñadores: diseñadores raíz y los diseñadores normales.</span><span class="sxs-lookup"><span data-stu-id="05ab2-215"><xref:System.ComponentModel.Design.DesignSurface.CreateDesigner%2A> can create two different types of designers: root designers and normal designers.</span></span> <span data-ttu-id="05ab2-216">Un diseñador raíz es un diseñador para el componente raíz en la superficie de diseño, que, por definición, es el primer componente que se agrega al contenedor.</span><span class="sxs-lookup"><span data-stu-id="05ab2-216">A root designer is a designer for the root component in the design surface, which by definition is the first component added to the container.</span></span> <span data-ttu-id="05ab2-217">Diseñadores raíz difieren de los diseñadores normales porque son responsables de la interfaz de usuario que se presentan al usuario final.</span><span class="sxs-lookup"><span data-stu-id="05ab2-217">Root designers differ from normal designers because they are responsible for the user interface presented to the end user.</span></span> <span data-ttu-id="05ab2-218">Los diseñadores raíz normalmente se coordinan con el resto de los diseñadores en una superficie de diseño para proporcionar esta interfaz.</span><span class="sxs-lookup"><span data-stu-id="05ab2-218">Root designers typically coordinate with the rest of the designers on a design surface to provide this interface.</span></span>  
  
 <span data-ttu-id="05ab2-219">La implementación predeterminada de este método delega en <xref:System.ComponentModel.TypeDescriptor>, pasando <xref:System.ComponentModel.Design.IRootDesigner> como el tipo de diseñador para los diseñadores raíz, o <xref:System.ComponentModel.Design.IDesigner> para diseñadores normales.</span><span class="sxs-lookup"><span data-stu-id="05ab2-219">The default implementation of this method delegates to <xref:System.ComponentModel.TypeDescriptor>, passing in <xref:System.ComponentModel.Design.IRootDesigner> as the designer type for root designers, or <xref:System.ComponentModel.Design.IDesigner> for normal designers.</span></span> <span data-ttu-id="05ab2-220">Puede invalidar este método para solicitar un tipo específico de diseñador.</span><span class="sxs-lookup"><span data-stu-id="05ab2-220">You can override this method to request a specific type of designer.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="05ab2-221">El valor de <paramref name="component" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="05ab2-221"><paramref name="component" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="05ab2-222">La interfaz <see cref="T:System.ComponentModel.Design.IDesignerHost" /> asociada al objeto <see cref="T:System.ComponentModel.Design.DesignSurface" /> se ha desechado.</span><span class="sxs-lookup"><span data-stu-id="05ab2-222">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="protected internal virtual object CreateInstance (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance object CreateInstance(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.CreateInstance(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Object ^ CreateInstance(Type ^ type);" />
      <MemberSignature Language="F#" Value="abstract member CreateInstance : Type -&gt; obj&#xA;override this.CreateInstance : Type -&gt; obj" Usage="designSurface.CreateInstance type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="05ab2-223">Tipo que se va a crear.</span><span class="sxs-lookup"><span data-stu-id="05ab2-223">The type to create.</span></span></param>
        <summary><span data-ttu-id="05ab2-224">Crea una instancia del tipo especificado.</span><span class="sxs-lookup"><span data-stu-id="05ab2-224">Creates an instance of the given type.</span></span></summary>
        <returns><span data-ttu-id="05ab2-225">El objeto recién creado.</span><span class="sxs-lookup"><span data-stu-id="05ab2-225">The newly created object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05ab2-226">Si `type` es un <xref:System.ComponentModel.IComponent>, <xref:System.ComponentModel.Design.DesignSurface.CreateInstance%2A> busca un constructor de tipo <xref:System.ComponentModel.IContainer> en primer lugar, seguido de un constructor vacío.</span><span class="sxs-lookup"><span data-stu-id="05ab2-226">If `type` is an <xref:System.ComponentModel.IComponent>, <xref:System.ComponentModel.Design.DesignSurface.CreateInstance%2A> searches for a constructor of type <xref:System.ComponentModel.IContainer> first, followed by an empty constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="05ab2-227">El valor de <paramref name="type" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="05ab2-227"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="05ab2-228">La interfaz <see cref="T:System.ComponentModel.Design.IDesignerHost" /> asociada al objeto <see cref="T:System.ComponentModel.Design.DesignSurface" /> se ha desechado.</span><span class="sxs-lookup"><span data-stu-id="05ab2-228">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateNestedContainer">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="05ab2-229">Crea un contenedor adecuado para anidar controles o componentes.</span><span class="sxs-lookup"><span data-stu-id="05ab2-229">Creates a container suitable for nesting controls or components.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateNestedContainer">
      <MemberSignature Language="C#" Value="public System.ComponentModel.INestedContainer CreateNestedContainer (System.ComponentModel.IComponent owningComponent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.INestedContainer CreateNestedContainer(class System.ComponentModel.IComponent owningComponent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateNestedContainer (owningComponent As IComponent) As INestedContainer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::INestedContainer ^ CreateNestedContainer(System::ComponentModel::IComponent ^ owningComponent);" />
      <MemberSignature Language="F#" Value="member this.CreateNestedContainer : System.ComponentModel.IComponent -&gt; System.ComponentModel.INestedContainer" Usage="designSurface.CreateNestedContainer owningComponent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.INestedContainer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owningComponent" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="owningComponent"><span data-ttu-id="05ab2-230">Componente que administra el contenedor anidado.</span><span class="sxs-lookup"><span data-stu-id="05ab2-230">The component that manages the nested container.</span></span></param>
        <summary><span data-ttu-id="05ab2-231">Crea un contenedor adecuado para anidar controles o componentes.</span><span class="sxs-lookup"><span data-stu-id="05ab2-231">Creates a container suitable for nesting controls or components.</span></span></summary>
        <returns><span data-ttu-id="05ab2-232">Contenedor anidado.</span><span class="sxs-lookup"><span data-stu-id="05ab2-232">The nested container.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05ab2-233">Agregar un componente a un contenedor anidado crea su diseñador y hace que apto para todos los servicios disponibles en la superficie de diseño.</span><span class="sxs-lookup"><span data-stu-id="05ab2-233">Adding a component to a nested container creates its designer and makes it eligible for all services available from the design surface.</span></span> <span data-ttu-id="05ab2-234">Los componentes agregados a los contenedores anidados no participan en la serialización.</span><span class="sxs-lookup"><span data-stu-id="05ab2-234">Components added to nested containers do not participate in serialization.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="05ab2-235">El valor de <paramref name="owningComponent" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="05ab2-235"><paramref name="owningComponent" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="05ab2-236">La interfaz <see cref="T:System.ComponentModel.Design.IDesignerHost" /> asociada al objeto <see cref="T:System.ComponentModel.Design.DesignSurface" /> se ha desechado.</span><span class="sxs-lookup"><span data-stu-id="05ab2-236">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateNestedContainer">
      <MemberSignature Language="C#" Value="public System.ComponentModel.INestedContainer CreateNestedContainer (System.ComponentModel.IComponent owningComponent, string containerName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.INestedContainer CreateNestedContainer(class System.ComponentModel.IComponent owningComponent, string containerName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateNestedContainer (owningComponent As IComponent, containerName As String) As INestedContainer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::INestedContainer ^ CreateNestedContainer(System::ComponentModel::IComponent ^ owningComponent, System::String ^ containerName);" />
      <MemberSignature Language="F#" Value="member this.CreateNestedContainer : System.ComponentModel.IComponent * string -&gt; System.ComponentModel.INestedContainer" Usage="designSurface.CreateNestedContainer (owningComponent, containerName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.INestedContainer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owningComponent" Type="System.ComponentModel.IComponent" />
        <Parameter Name="containerName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="owningComponent"><span data-ttu-id="05ab2-237">Componente que administra el contenedor anidado.</span><span class="sxs-lookup"><span data-stu-id="05ab2-237">The component that manages the nested container.</span></span></param>
        <param name="containerName"><span data-ttu-id="05ab2-238">Nombre adicional para el contenedor anidado.</span><span class="sxs-lookup"><span data-stu-id="05ab2-238">An additional name for the nested container.</span></span></param>
        <summary><span data-ttu-id="05ab2-239">Crea un contenedor adecuado para anidar controles o componentes.</span><span class="sxs-lookup"><span data-stu-id="05ab2-239">Creates a container suitable for nesting controls or components.</span></span></summary>
        <returns><span data-ttu-id="05ab2-240">Contenedor anidado.</span><span class="sxs-lookup"><span data-stu-id="05ab2-240">The nested container.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05ab2-241">Agregar un componente a un contenedor anidado crea su diseñador y hace que apto para todos los servicios disponibles en la superficie de diseño.</span><span class="sxs-lookup"><span data-stu-id="05ab2-241">Adding a component to a nested container creates its designer and makes it eligible for all services available from the design surface.</span></span> <span data-ttu-id="05ab2-242">Los componentes agregados a los contenedores anidados no participan en la serialización.</span><span class="sxs-lookup"><span data-stu-id="05ab2-242">Components added to nested containers do not participate in serialization.</span></span>  
  
 <span data-ttu-id="05ab2-243">Puede proporcionar un nombre adicional para el <xref:System.ComponentModel.Design.DesignSurface.CreateNestedContainer%2A> método pasando un valor en `containerName`.</span><span class="sxs-lookup"><span data-stu-id="05ab2-243">You can provide an additional name for the <xref:System.ComponentModel.Design.DesignSurface.CreateNestedContainer%2A> method by passing a value into `containerName`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="05ab2-244">El valor de <paramref name="owningComponent" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="05ab2-244"><paramref name="owningComponent" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="05ab2-245">La interfaz <see cref="T:System.ComponentModel.Design.IDesignerHost" /> asociada al objeto <see cref="T:System.ComponentModel.Design.DesignSurface" /> se ha desechado.</span><span class="sxs-lookup"><span data-stu-id="05ab2-245">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="05ab2-246">Libera los recursos que usa <see cref="T:System.ComponentModel.Design.DesignSurface" />.</span><span class="sxs-lookup"><span data-stu-id="05ab2-246">Releases the resources used by the <see cref="T:System.ComponentModel.Design.DesignSurface" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="designSurface.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="05ab2-247">Libera los recursos que usa <see cref="T:System.ComponentModel.Design.DesignSurface" />.</span><span class="sxs-lookup"><span data-stu-id="05ab2-247">Releases the resources used by the <see cref="T:System.ComponentModel.Design.DesignSurface" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05ab2-248">El público <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A> método sigue el estándar <xref:System.IDisposable> patrón.</span><span class="sxs-lookup"><span data-stu-id="05ab2-248">The public <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A> method follows the standard <xref:System.IDisposable> pattern.</span></span> <span data-ttu-id="05ab2-249">Llamar a este método destruye la superficie de diseño.</span><span class="sxs-lookup"><span data-stu-id="05ab2-249">Calling this method destroys the design surface.</span></span> <span data-ttu-id="05ab2-250">La versión protegida de este método es `virtual` y sigue la norma <xref:System.IDisposable> patrón.</span><span class="sxs-lookup"><span data-stu-id="05ab2-250">The protected version of this method is `virtual` and follows the normal <xref:System.IDisposable> pattern.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="05ab2-251">Dado que <xref:System.ComponentModel.Design.DesignSurface> no tiene ningún código nativo para limpiar, no tiene un finalizador que llama a <xref:System.ComponentModel.Design.DesignSurface.Dispose%28System.Boolean%29>.</span><span class="sxs-lookup"><span data-stu-id="05ab2-251">Because <xref:System.ComponentModel.Design.DesignSurface> does not have any native code to clean up, it does not have a finalizer that calls <xref:System.ComponentModel.Design.DesignSurface.Dispose%28System.Boolean%29>.</span></span> <span data-ttu-id="05ab2-252">Si necesita llamar a <xref:System.ComponentModel.Design.DesignSurface.Dispose%28System.Boolean%29>, debe agregar un finalizador.</span><span class="sxs-lookup"><span data-stu-id="05ab2-252">If you need to call <xref:System.ComponentModel.Design.DesignSurface.Dispose%28System.Boolean%29>, you must add a finalizer yourself.</span></span>  
  
 <span data-ttu-id="05ab2-253">Llame a <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A> cuando haya terminado de usar <xref:System.ComponentModel.Design.DesignSurface>.</span><span class="sxs-lookup"><span data-stu-id="05ab2-253">Call <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A> when you are finished using the <xref:System.ComponentModel.Design.DesignSurface>.</span></span> <span data-ttu-id="05ab2-254">El método <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A> deja el <xref:System.ComponentModel.Design.DesignSurface> en un estado no utilizable.</span><span class="sxs-lookup"><span data-stu-id="05ab2-254">The <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A> method leaves the <xref:System.ComponentModel.Design.DesignSurface> in an unusable state.</span></span> <span data-ttu-id="05ab2-255">Después de llamar a <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A>, debe liberar todas las referencias a la <xref:System.ComponentModel.Design.DesignSurface> por lo que el recolector de elementos no utilizados pueda reclamar la memoria que el <xref:System.ComponentModel.Design.DesignSurface> estaba ocupando.</span><span class="sxs-lookup"><span data-stu-id="05ab2-255">After calling <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A>, you must release all references to the <xref:System.ComponentModel.Design.DesignSurface> so the garbage collector can reclaim the memory that the <xref:System.ComponentModel.Design.DesignSurface> was occupying.</span></span> <span data-ttu-id="05ab2-256">Para obtener más información, consulte [limpiar recursos no administrados](~/docs/standard/garbage-collection/unmanaged.md) y [implementar un método Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="05ab2-256">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="05ab2-257">Realice siempre una llamada a <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A> antes de liberar la última referencia al objeto <xref:System.ComponentModel.Design.DesignSurface>.</span><span class="sxs-lookup"><span data-stu-id="05ab2-257">Always call <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A> before you release your last reference to the <xref:System.ComponentModel.Design.DesignSurface>.</span></span> <span data-ttu-id="05ab2-258">En caso contrario, los recursos que está usando no se liberarán hasta que el recolector de elementos no utilizados llame al método <xref:System.ComponentModel.Design.DesignSurface> del objeto `Finalize`.</span><span class="sxs-lookup"><span data-stu-id="05ab2-258">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.ComponentModel.Design.DesignSurface> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="designSurface.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="05ab2-259">Es <see langword="true" /> para liberar tanto recursos administrados como no administrados; es <see langword="false" /> para liberar únicamente recursos no administrados.</span><span class="sxs-lookup"><span data-stu-id="05ab2-259"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="05ab2-260">Libera los recursos que usa <see cref="T:System.ComponentModel.Design.DesignSurface" />.</span><span class="sxs-lookup"><span data-stu-id="05ab2-260">Releases the resources used by the <see cref="T:System.ComponentModel.Design.DesignSurface" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05ab2-261">El público <xref:System.ComponentModel.Design.DesignSurface.Dispose> método sigue el estándar <xref:System.IDisposable> patrón.</span><span class="sxs-lookup"><span data-stu-id="05ab2-261">The public <xref:System.ComponentModel.Design.DesignSurface.Dispose> method follows the standard <xref:System.IDisposable> pattern.</span></span> <span data-ttu-id="05ab2-262">Llamar a este método destruye la superficie de diseño.</span><span class="sxs-lookup"><span data-stu-id="05ab2-262">Calling this method destroys the design surface.</span></span> <span data-ttu-id="05ab2-263">La versión protegida de este método es `virtual` y sigue la norma <xref:System.IDisposable> patrón.</span><span class="sxs-lookup"><span data-stu-id="05ab2-263">The protected version of this method is `virtual` and follows the normal <xref:System.IDisposable> pattern.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="05ab2-264">Dado que <xref:System.ComponentModel.Design.DesignSurface> no tiene ningún código nativo para limpiar, no tiene un finalizador que llama a <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A>.</span><span class="sxs-lookup"><span data-stu-id="05ab2-264">Because <xref:System.ComponentModel.Design.DesignSurface> does not have any native code to clean up, it does not have a finalizer that calls <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A>.</span></span> <span data-ttu-id="05ab2-265">Si necesita llamar a <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A>, debe agregar un finalizador.</span><span class="sxs-lookup"><span data-stu-id="05ab2-265">If you need to call <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A>, you must add a finalizer yourself.</span></span>  
  
 <span data-ttu-id="05ab2-266">Este método se llama por el público `Dispose()` método y el <xref:System.Object.Finalize%2A> método.</span><span class="sxs-lookup"><span data-stu-id="05ab2-266">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="05ab2-267">`Dispose()` invoca el protegido `Dispose(Boolean)` método con el `disposing` parámetro establecido en `true`.</span><span class="sxs-lookup"><span data-stu-id="05ab2-267">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="05ab2-268"><xref:System.Object.Finalize%2A> invoca `Dispose` con `disposing` establecido en `false`.</span><span class="sxs-lookup"><span data-stu-id="05ab2-268"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="05ab2-269">Cuando el `disposing` parámetro es true, este método libera todos los recursos mantenidos por los objetos administrados que este <xref:System.ComponentModel.Design.DesignSurface> referencias.</span><span class="sxs-lookup"><span data-stu-id="05ab2-269">When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.ComponentModel.Design.DesignSurface> references.</span></span> <span data-ttu-id="05ab2-270">Este método invoca al método `Dispose()` de cada uno de los objetos a los que se hace referencia.</span><span class="sxs-lookup"><span data-stu-id="05ab2-270">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="05ab2-271">
            <see langword="Dispose" /> puede recibir varias llamadas de otros objetos.</span><span class="sxs-lookup"><span data-stu-id="05ab2-271">
            <see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="05ab2-272">Cuando se reemplaza <see langword="Dispose(Boolean)" /> tenga cuidado de no hacer referencia a objetos que se hayan eliminado en una llamada anterior a <see langword="Dispose" />.</span><span class="sxs-lookup"><span data-stu-id="05ab2-272">When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="05ab2-273">Para obtener más información sobre cómo implementar <see langword="Dispose(Boolean)" />, consulte [implementar un método Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="05ab2-273">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
<span data-ttu-id="05ab2-274">Para obtener más información acerca de <see langword="Dispose" /> y <see cref="M:System.Object.Finalize" />, consulte [limpiar recursos no administrados](~/docs/standard/garbage-collection/unmanaged.md) y [reemplazar el método Finalize](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span><span class="sxs-lookup"><span data-stu-id="05ab2-274">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Disposed">
      <MemberSignature Language="C#" Value="public event EventHandler Disposed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Disposed" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.DesignSurface.Disposed" />
      <MemberSignature Language="VB.NET" Value="Public Event Disposed As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Disposed;" />
      <MemberSignature Language="F#" Value="member this.Disposed : EventHandler " Usage="member this.Disposed : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="05ab2-275">Se produce cuando se desecha la superficie de diseño.</span><span class="sxs-lookup"><span data-stu-id="05ab2-275">Occurs when the design surface is disposed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05ab2-276">La superficie es únicamente cuando desechado público <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A> método <xref:System.ComponentModel.Design.DesignSurface> se llama.</span><span class="sxs-lookup"><span data-stu-id="05ab2-276">The surface is only disposed when the public <xref:System.ComponentModel.Design.DesignSurface.Dispose%2A> method on <xref:System.ComponentModel.Design.DesignSurface> is called.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DtelLoading">
      <MemberSignature Language="C#" Value="public bool DtelLoading { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DtelLoading" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.DesignSurface.DtelLoading" />
      <MemberSignature Language="VB.NET" Value="Public Property DtelLoading As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DtelLoading { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DtelLoading : bool with get, set" Usage="System.ComponentModel.Design.DesignSurface.DtelLoading" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="05ab2-277">Obtiene un valor que indica si se está cargando la **Lista de errores en tiempo de diseño**.</span><span class="sxs-lookup"><span data-stu-id="05ab2-277">Gets a value indicating whether the **Design-time Error List** is loading.</span></span></summary>
        <value><span data-ttu-id="05ab2-278"><see langword="true" /> Si el **lista de errores de tiempo de diseño** se está cargando; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="05ab2-278"><see langword="true" /> if the **Design-time Error List** is loading; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/ad408380-825a-46d8-9a4a-531b130b88ce"><span data-ttu-id="05ab2-279">Errores en tiempo de diseño en el Diseñador de Windows Forms</span><span class="sxs-lookup"><span data-stu-id="05ab2-279">Design-Time Errors in the Windows Forms Designer</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Flush();" />
      <MemberSignature Language="F#" Value="member this.Flush : unit -&gt; unit" Usage="designSurface.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="05ab2-280">Serializa los cambios en la superficie de diseño.</span><span class="sxs-lookup"><span data-stu-id="05ab2-280">Serializes changes to the design surface.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05ab2-281">El <xref:System.ComponentModel.Design.DesignSurface.Flush%2A> método se puede llamar para insertar los cambios realizados en la superficie de diseño hasta el serializador.</span><span class="sxs-lookup"><span data-stu-id="05ab2-281">The <xref:System.ComponentModel.Design.DesignSurface.Flush%2A> method can be called to push changes made to the design surface down to the serializer.</span></span> <span data-ttu-id="05ab2-282">Esto garantiza que la superficie de diseño y su estado serializado se sincronizan.</span><span class="sxs-lookup"><span data-stu-id="05ab2-282">This ensures that the design surface and its serialized state are synchronized.</span></span> <span data-ttu-id="05ab2-283">La implementación real de este método se reenvía al cargador del diseñador asociado a la superficie de diseño.</span><span class="sxs-lookup"><span data-stu-id="05ab2-283">The actual implementation of this method is forwarded to the designer loader associated with design surface.</span></span> <span data-ttu-id="05ab2-284">El cargador de diseñadores puede optar por aplazar los cambios hasta que <xref:System.ComponentModel.Design.DesignSurface.Flush%2A> se llama, o puede optar por mantener los datos serializados al día con todos los cambios de usuario.</span><span class="sxs-lookup"><span data-stu-id="05ab2-284">The designer loader may choose to defer changes until <xref:System.ComponentModel.Design.DesignSurface.Flush%2A> is called, or it may choose to keep the serialized data up to date with all user changes.</span></span> <span data-ttu-id="05ab2-285">El <xref:System.ComponentModel.Design.DesignSurface.Flush%2A> método garantiza que, independientemente del modelo que el cargador de diseñadores decide usar, el estado serializado está sincronizado con la superficie de diseño real.</span><span class="sxs-lookup"><span data-stu-id="05ab2-285">The <xref:System.ComponentModel.Design.DesignSurface.Flush%2A> method ensures that regardless of the model the designer loader chooses to use, the serialized state is synchronized with the actual design surface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flushed">
      <MemberSignature Language="C#" Value="public event EventHandler Flushed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Flushed" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.DesignSurface.Flushed" />
      <MemberSignature Language="VB.NET" Value="Public Event Flushed As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Flushed;" />
      <MemberSignature Language="F#" Value="member this.Flushed : EventHandler " Usage="member this.Flushed : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="05ab2-286">Se produce cuando se realiza una llamada al método <see cref="M:System.ComponentModel.Design.DesignSurface.Flush" /> de <see cref="T:System.ComponentModel.Design.DesignSurface" />.</span><span class="sxs-lookup"><span data-stu-id="05ab2-286">Occurs when a call is made to the <see cref="M:System.ComponentModel.Design.DesignSurface.Flush" /> method of <see cref="T:System.ComponentModel.Design.DesignSurface" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05ab2-287">El cargador de diseñadores se vacía en primer lugar y, a continuación, el <xref:System.ComponentModel.Design.DesignSurface.Flushed> provoca el evento.</span><span class="sxs-lookup"><span data-stu-id="05ab2-287">The designer loader is flushed first, and then the <xref:System.ComponentModel.Design.DesignSurface.Flushed> event is raised.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetService">
      <MemberSignature Language="C#" Value="public object GetService (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetService(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.GetService(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetService (serviceType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetService(Type ^ serviceType);" />
      <MemberSignature Language="F#" Value="abstract member GetService : Type -&gt; obj&#xA;override this.GetService : Type -&gt; obj" Usage="designSurface.GetService serviceType" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IServiceProvider.GetService(System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType"><span data-ttu-id="05ab2-288">Tipo de servicio que se va a recuperar.</span><span class="sxs-lookup"><span data-stu-id="05ab2-288">The type of service to retrieve.</span></span></param>
        <summary><span data-ttu-id="05ab2-289">Obtiene un servicio del contenedor de servicios.</span><span class="sxs-lookup"><span data-stu-id="05ab2-289">Gets a service from the service container.</span></span></summary>
        <returns><span data-ttu-id="05ab2-290">Objeto que implementa, o es una clase derivada de, <paramref name="serviceType" /> o <see langword="null" /> si el servicio no existe en el contenedor de servicios.</span><span class="sxs-lookup"><span data-stu-id="05ab2-290">An object that implements, or is a derived class of, <paramref name="serviceType" />, or <see langword="null" /> if the service does not exist in the service container.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05ab2-291">El <xref:System.ComponentModel.Design.DesignSurface.GetService%2A> método recupera un servicio en contenedor de servicios de la superficie de diseño.</span><span class="sxs-lookup"><span data-stu-id="05ab2-291">The <xref:System.ComponentModel.Design.DesignSurface.GetService%2A> method retrieves a service in the design surface's service container.</span></span> <span data-ttu-id="05ab2-292">Además, esto le remitirá a cualquier proveedor de servicios que se asignó a la superficie de diseño en tiempo de construcción.</span><span class="sxs-lookup"><span data-stu-id="05ab2-292">In addition, this will forward to any service provider that was given to the design surface at construction time.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLoaded">
      <MemberSignature Language="C#" Value="public bool IsLoaded { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLoaded" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.DesignSurface.IsLoaded" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsLoaded As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsLoaded { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsLoaded : bool" Usage="System.ComponentModel.Design.DesignSurface.IsLoaded" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="05ab2-293">Obtiene un valor que indica si la superficie de diseño está cargada actualmente.</span><span class="sxs-lookup"><span data-stu-id="05ab2-293">Gets a value indicating whether the design surface is currently loaded.</span></span></summary>
        <value><span data-ttu-id="05ab2-294">Es <see langword="true" /> si la superficie de diseño está cargada actualmente; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="05ab2-294"><see langword="true" /> if the design surface is currently loaded; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Loaded">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.Design.LoadedEventHandler Loaded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.Design.LoadedEventHandler Loaded" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.DesignSurface.Loaded" />
      <MemberSignature Language="VB.NET" Value="Public Event Loaded As LoadedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::Design::LoadedEventHandler ^ Loaded;" />
      <MemberSignature Language="F#" Value="member this.Loaded : System.ComponentModel.Design.LoadedEventHandler " Usage="member this.Loaded : System.ComponentModel.Design.LoadedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.LoadedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="05ab2-295">Se produce cuando se completa la carga del diseñador.</span><span class="sxs-lookup"><span data-stu-id="05ab2-295">Occurs when the designer load has completed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05ab2-296">El <xref:System.ComponentModel.Design.DesignSurface.Loaded> evento se desencadena para las cargas correctas, así como que no lo son.</span><span class="sxs-lookup"><span data-stu-id="05ab2-296">The <xref:System.ComponentModel.Design.DesignSurface.Loaded> event is raised for successful loads as well as unsuccessful ones.</span></span> <span data-ttu-id="05ab2-297">Si el código de este controlador de eventos inicia una excepción, el diseñador se descarga.</span><span class="sxs-lookup"><span data-stu-id="05ab2-297">If code in this event handler throws an exception, the designer is unloaded.</span></span>  
  
 <span data-ttu-id="05ab2-298">La <xref:System.ComponentModel.Design.LoadedEventArgs> objeto puede utilizarse para determinar si la carga se realizó correctamente y, además, puede proporcionar una lista de errores producidos durante la carga.</span><span class="sxs-lookup"><span data-stu-id="05ab2-298">The <xref:System.ComponentModel.Design.LoadedEventArgs> object can be used to determine if loading succeeded, and it can also provide a list of errors that occurred during the load.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="05ab2-299">Pueden producirse errores cargas correctas, siempre que el sistema de serialización puede tolerar errores.</span><span class="sxs-lookup"><span data-stu-id="05ab2-299">Errors can occur for successful loads as well, provided that the serialization system can tolerate errors.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadErrors">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection LoadErrors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection LoadErrors" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.DesignSurface.LoadErrors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LoadErrors As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ICollection ^ LoadErrors { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LoadErrors : System.Collections.ICollection" Usage="System.ComponentModel.Design.DesignSurface.LoadErrors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="05ab2-300">Devuelve una colección de errores de carga o una colección nula.</span><span class="sxs-lookup"><span data-stu-id="05ab2-300">Returns a collection of loading errors or a void collection.</span></span></summary>
        <value><span data-ttu-id="05ab2-301">Objeto <see cref="T:System.Collections.ICollection" /> de errores de carga.</span><span class="sxs-lookup"><span data-stu-id="05ab2-301">A <see cref="T:System.Collections.ICollection" /> of loading errors.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Loading">
      <MemberSignature Language="C#" Value="public event EventHandler Loading;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Loading" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.DesignSurface.Loading" />
      <MemberSignature Language="VB.NET" Value="Public Event Loading As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Loading;" />
      <MemberSignature Language="F#" Value="member this.Loading : EventHandler " Usage="member this.Loading : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="05ab2-302">Se produce cuando el diseñador está a punto de cargarse.</span><span class="sxs-lookup"><span data-stu-id="05ab2-302">Occurs when the designer is about to be loaded.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnLoaded">
      <MemberSignature Language="C#" Value="protected virtual void OnLoaded (System.ComponentModel.Design.LoadedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLoaded(class System.ComponentModel.Design.LoadedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.OnLoaded(System.ComponentModel.Design.LoadedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLoaded (e As LoadedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLoaded(System::ComponentModel::Design::LoadedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLoaded : System.ComponentModel.Design.LoadedEventArgs -&gt; unit&#xA;override this.OnLoaded : System.ComponentModel.Design.LoadedEventArgs -&gt; unit" Usage="designSurface.OnLoaded e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.Design.LoadedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="05ab2-303">Objeto <see cref="T:System.ComponentModel.Design.LoadedEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="05ab2-303">A <see cref="T:System.ComponentModel.Design.LoadedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="05ab2-304">Genera el evento <see cref="E:System.ComponentModel.Design.DesignSurface.Loaded" />.</span><span class="sxs-lookup"><span data-stu-id="05ab2-304">Raises the <see cref="E:System.ComponentModel.Design.DesignSurface.Loaded" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnLoading">
      <MemberSignature Language="C#" Value="protected virtual void OnLoading (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLoading(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.OnLoading(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLoading (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLoading(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLoading : EventArgs -&gt; unit&#xA;override this.OnLoading : EventArgs -&gt; unit" Usage="designSurface.OnLoading e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="05ab2-305">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="05ab2-305">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="05ab2-306">Genera el evento <see cref="E:System.ComponentModel.Design.DesignSurface.Loading" />.</span><span class="sxs-lookup"><span data-stu-id="05ab2-306">Raises the <see cref="E:System.ComponentModel.Design.DesignSurface.Loading" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnUnloaded">
      <MemberSignature Language="C#" Value="protected virtual void OnUnloaded (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUnloaded(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.OnUnloaded(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnUnloaded (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUnloaded(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnUnloaded : EventArgs -&gt; unit&#xA;override this.OnUnloaded : EventArgs -&gt; unit" Usage="designSurface.OnUnloaded e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="05ab2-307">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="05ab2-307">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="05ab2-308">Genera el evento <see cref="E:System.ComponentModel.Design.DesignSurface.Unloaded" />.</span><span class="sxs-lookup"><span data-stu-id="05ab2-308">Raises the <see cref="E:System.ComponentModel.Design.DesignSurface.Unloaded" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnUnloading">
      <MemberSignature Language="C#" Value="protected virtual void OnUnloading (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUnloading(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.OnUnloading(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnUnloading (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUnloading(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnUnloading : EventArgs -&gt; unit&#xA;override this.OnUnloading : EventArgs -&gt; unit" Usage="designSurface.OnUnloading e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="05ab2-309">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="05ab2-309">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="05ab2-310">Genera el evento <see cref="E:System.ComponentModel.Design.DesignSurface.Unloading" />.</span><span class="sxs-lookup"><span data-stu-id="05ab2-310">Raises the <see cref="E:System.ComponentModel.Design.DesignSurface.Unloading" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnViewActivate">
      <MemberSignature Language="C#" Value="protected virtual void OnViewActivate (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnViewActivate(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignSurface.OnViewActivate(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnViewActivate (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnViewActivate(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnViewActivate : EventArgs -&gt; unit&#xA;override this.OnViewActivate : EventArgs -&gt; unit" Usage="designSurface.OnViewActivate e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="05ab2-311">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="05ab2-311">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="05ab2-312">Genera el evento <see cref="E:System.ComponentModel.Design.DesignSurface.ViewActivated" />.</span><span class="sxs-lookup"><span data-stu-id="05ab2-312">Raises the <see cref="E:System.ComponentModel.Design.DesignSurface.ViewActivated" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceContainer">
      <MemberSignature Language="C#" Value="protected System.ComponentModel.Design.ServiceContainer ServiceContainer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.ServiceContainer ServiceContainer" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.DesignSurface.ServiceContainer" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property ServiceContainer As ServiceContainer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::ComponentModel::Design::ServiceContainer ^ ServiceContainer { System::ComponentModel::Design::ServiceContainer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ServiceContainer : System.ComponentModel.Design.ServiceContainer" Usage="System.ComponentModel.Design.DesignSurface.ServiceContainer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.ServiceContainer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="05ab2-313">Obtiene el contenedor de servicios.</span><span class="sxs-lookup"><span data-stu-id="05ab2-313">Gets the service container.</span></span></summary>
        <value><span data-ttu-id="05ab2-314">Contenedor de servicios que proporciona todos los servicios a los diseñadores incluidos en la superficie de diseño.</span><span class="sxs-lookup"><span data-stu-id="05ab2-314">The service container that provides all services to designers contained within the design surface.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05ab2-315">En tiempo de construcción, <xref:System.ComponentModel.Design.DesignSurface> agrega servicios predeterminados en este contenedor de servicios.</span><span class="sxs-lookup"><span data-stu-id="05ab2-315">At construction time, <xref:System.ComponentModel.Design.DesignSurface> adds default services into this service container.</span></span> <span data-ttu-id="05ab2-316">Puede dejar los servicios predeterminados en su estado actual, o puede quitarlos y reemplazarlos por los suyos propios.</span><span class="sxs-lookup"><span data-stu-id="05ab2-316">You can leave the default services in their present state, or you can remove them and replace them with your own.</span></span> <span data-ttu-id="05ab2-317">Los servicios predeterminados son todas creado para la demanda, por lo que no hay ninguna pérdida de rendimiento para agregarlas en tiempo de construcción.</span><span class="sxs-lookup"><span data-stu-id="05ab2-317">The default services are all demand-created, so there is no loss in performance for adding them at construction time.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="05ab2-318">La interfaz <see cref="T:System.ComponentModel.Design.IDesignerHost" /> asociada al objeto <see cref="T:System.ComponentModel.Design.DesignSurface" /> se ha desechado.</span><span class="sxs-lookup"><span data-stu-id="05ab2-318">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Unloaded">
      <MemberSignature Language="C#" Value="public event EventHandler Unloaded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Unloaded" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.DesignSurface.Unloaded" />
      <MemberSignature Language="VB.NET" Value="Public Event Unloaded As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Unloaded;" />
      <MemberSignature Language="F#" Value="member this.Unloaded : EventHandler " Usage="member this.Unloaded : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="05ab2-319">Se produce cuando un diseñador ha finalizado la descarga.</span><span class="sxs-lookup"><span data-stu-id="05ab2-319">Occurs when a designer has finished unloading.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Unloading">
      <MemberSignature Language="C#" Value="public event EventHandler Unloading;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Unloading" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.DesignSurface.Unloading" />
      <MemberSignature Language="VB.NET" Value="Public Event Unloading As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Unloading;" />
      <MemberSignature Language="F#" Value="member this.Unloading : EventHandler " Usage="member this.Unloading : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="05ab2-320">Se produce cuando un diseñador está a punto de descargarse.</span><span class="sxs-lookup"><span data-stu-id="05ab2-320">Occurs when a designer is about to unload.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05ab2-321">Cuando se descarga un diseñador, se destruye todo el estado de ese diseñador, incluida la vista del diseñador.</span><span class="sxs-lookup"><span data-stu-id="05ab2-321">When a designer unloads, the entire state for that designer is destroyed, including the designer's view.</span></span> <span data-ttu-id="05ab2-322">La vista debe tener un elemento primario en este momento.</span><span class="sxs-lookup"><span data-stu-id="05ab2-322">The view should be unparented at this time.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="View">
      <MemberSignature Language="C#" Value="public object View { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object View" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.DesignSurface.View" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property View As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ View { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.View : obj" Usage="System.ComponentModel.Design.DesignSurface.View" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="05ab2-323">Obtiene la vista para el diseñador raíz.</span><span class="sxs-lookup"><span data-stu-id="05ab2-323">Gets the view for the root designer.</span></span></summary>
        <value><span data-ttu-id="05ab2-324">Vista para el diseñador raíz.</span><span class="sxs-lookup"><span data-stu-id="05ab2-324">The view for the root designer.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05ab2-325">El <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> debe llamarse al método con antelación para iniciar el proceso de carga.</span><span class="sxs-lookup"><span data-stu-id="05ab2-325">The <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> method must be called beforehand to start the loading process.</span></span> <span data-ttu-id="05ab2-326">Es posible devolver una vista antes de que el cargador de diseñadores finalice la carga porque el diseñador raíz, que proporciona la vista, es el primer objeto creado por el cargador de diseñadores.</span><span class="sxs-lookup"><span data-stu-id="05ab2-326">It is possible to return a view before the designer loader finishes loading because the root designer, which supplies the view, is the first object created by the designer loader.</span></span> <span data-ttu-id="05ab2-327">Si no está disponible, una vista <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> produce una excepción.</span><span class="sxs-lookup"><span data-stu-id="05ab2-327">If a view is unavailable, <xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A> raises an exception.</span></span>  
  
 <span data-ttu-id="05ab2-328">La noción de una tecnología de vista está obsoleta.</span><span class="sxs-lookup"><span data-stu-id="05ab2-328">The notion of a view technology is obsolete.</span></span> <span data-ttu-id="05ab2-329">Sin embargo, permanece en las interfaces para los diseñadores raíz para la compatibilidad con versiones anteriores.</span><span class="sxs-lookup"><span data-stu-id="05ab2-329">But, it remains in the interfaces for root designers for backward compatibility.</span></span> <span data-ttu-id="05ab2-330">Su uso está oculta para cualquier persona que use <xref:System.ComponentModel.Design.DesignSurface> objetos.</span><span class="sxs-lookup"><span data-stu-id="05ab2-330">Its use is hidden from anyone using <xref:System.ComponentModel.Design.DesignSurface> objects.</span></span> <span data-ttu-id="05ab2-331">El <xref:System.ComponentModel.Design.DesignSurface.View%2A> propiedad oculta las tecnologías de vista pasando las tecnologías compatibles en el diseñador raíz.</span><span class="sxs-lookup"><span data-stu-id="05ab2-331">The <xref:System.ComponentModel.Design.DesignSurface.View%2A> property hides view technologies by passing the supported technologies back into the root designer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05ab2-332">El siguiente ejemplo de código muestra cómo <xref:System.ComponentModel.Design.DesignSurface.View%2A> oculta Ver tecnologías.</span><span class="sxs-lookup"><span data-stu-id="05ab2-332">The following code example shows how <xref:System.ComponentModel.Design.DesignSurface.View%2A> hides view technologies.</span></span>  
  
 ```csharp 
 IRootDesigner d;  
  
 ViewTechnology[] supported = d.SupportedTechnologies;  
  
 return d.GetView(supported[0]);
 ``` 
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="05ab2-333">La superficie de diseño no se está cargando, el cargador de diseñadores todavía no ha creado un diseñador raíz o la superficie de diseño ha finalizado la carga pero con errores.</span><span class="sxs-lookup"><span data-stu-id="05ab2-333">The design surface is not loading, the designer loader has not yet created a root designer, or the design surface finished the load, but failed.</span></span> <span data-ttu-id="05ab2-334">Puede haber más información disponible en la propiedad <see cref="P:System.Exception.InnerException" />.</span><span class="sxs-lookup"><span data-stu-id="05ab2-334">More information may available in the <see cref="P:System.Exception.InnerException" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="05ab2-335">El diseñador está cargado, pero no ofrece una vista compatible con esta superficie de diseño.</span><span class="sxs-lookup"><span data-stu-id="05ab2-335">The designer loaded, but it does not offer a view compatible with this design surface.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="05ab2-336">La interfaz <see cref="T:System.ComponentModel.Design.IDesignerHost" /> asociada al objeto <see cref="T:System.ComponentModel.Design.DesignSurface" /> se ha desechado.</span><span class="sxs-lookup"><span data-stu-id="05ab2-336">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ViewActivated">
      <MemberSignature Language="C#" Value="public event EventHandler ViewActivated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ViewActivated" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.DesignSurface.ViewActivated" />
      <MemberSignature Language="VB.NET" Value="Public Event ViewActivated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ViewActivated;" />
      <MemberSignature Language="F#" Value="member this.ViewActivated : EventHandler " Usage="member this.ViewActivated : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="05ab2-337">Se produce cuando se ha llamado al método <see cref="M:System.ComponentModel.Design.IDesignerHost.Activate" /> en <see cref="T:System.ComponentModel.Design.IDesignerHost" />.</span><span class="sxs-lookup"><span data-stu-id="05ab2-337">Occurs when the <see cref="M:System.ComponentModel.Design.IDesignerHost.Activate" /> method has been called on <see cref="T:System.ComponentModel.Design.IDesignerHost" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05ab2-338">Si desea admitir la <xref:System.ComponentModel.Design.IDesignerHost.Activate%2A> método, el controlador de eventos debe activar la ventana para esta superficie de diseño.</span><span class="sxs-lookup"><span data-stu-id="05ab2-338">If you want to support the <xref:System.ComponentModel.Design.IDesignerHost.Activate%2A> method, your event handler should activate the window for this design surface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.IDesignerHost" />
      </Docs>
    </Member>
  </Members>
</Type>
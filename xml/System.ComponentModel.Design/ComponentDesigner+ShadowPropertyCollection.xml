<Type Name="ComponentDesigner+ShadowPropertyCollection" FullName="System.ComponentModel.Design.ComponentDesigner+ShadowPropertyCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9caa4b8928ab9ffd0416e1c19c36d1c0d06b0b3c" /><Meta Name="ms.sourcegitcommit" Value="1bb00d2f4343e73ae8d58668f02297a3cf10a4c1" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="06/15/2019" /><Meta Name="ms.locfileid" Value="63902431" /></Metadata><TypeSignature Language="C#" Value="protected sealed class ComponentDesigner.ShadowPropertyCollection" />
  <TypeSignature Language="ILAsm" Value=".class nested protected auto ansi sealed beforefieldinit ComponentDesigner/ShadowPropertyCollection extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection" />
  <TypeSignature Language="VB.NET" Value="Protected NotInheritable Class ComponentDesigner.ShadowPropertyCollection" />
  <TypeSignature Language="C++ CLI" Value="protected: ref class ComponentDesigner::ShadowPropertyCollection sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="f03cc-101">Representa una colección de propiedades con copia sombra que debe reemplazar los valores predeterminados o asignados heredados de propiedades concretas.</span><span class="sxs-lookup"><span data-stu-id="f03cc-101">Represents a collection of shadow properties that should override inherited default or assigned values for specific properties.</span></span> <span data-ttu-id="f03cc-102">Esta clase no puede heredarse.</span><span class="sxs-lookup"><span data-stu-id="f03cc-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f03cc-103"><xref:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection> almacena una colección de valores de propiedades concretas que reemplazan cualquier otro valor para estas propiedades en tiempo de diseño.</span><span class="sxs-lookup"><span data-stu-id="f03cc-103"><xref:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection> stores a collection of values for specific properties that override any other value for these properties at design time.</span></span> <span data-ttu-id="f03cc-104">Esto es útil para garantizar que se establece una propiedad específica en un valor específico, por ejemplo, en situaciones cuando el formulario en segundo plano siempre debe tener su propiedad visible establecida en `true`.</span><span class="sxs-lookup"><span data-stu-id="f03cc-104">This is useful for ensuring that a specific property is set to a specific value, for example, in situations when the background form should always have its visible property set to `true`.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.ComponentModel.Design.ComponentDesigner.ShadowProperties" />
  </Docs>
  <Members>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection.Contains(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (propertyName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::String ^ propertyName);" />
      <MemberSignature Language="F#" Value="member this.Contains : string -&gt; bool" Usage="shadowPropertyCollection.Contains propertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="f03cc-105">Nombre de la propiedad de la colección cuya existencia en la colección se va a comprobar.</span><span class="sxs-lookup"><span data-stu-id="f03cc-105">The name of the property to check for in the collection.</span></span></param>
        <summary><span data-ttu-id="f03cc-106">Indica si existe en la colección una propiedad que coincide con el nombre especificado.</span><span class="sxs-lookup"><span data-stu-id="f03cc-106">Indicates whether a property matching the specified name exists in the collection.</span></span></summary>
        <returns><span data-ttu-id="f03cc-107">Es <see langword="true" /> si la propiedad está en la colección; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f03cc-107"><see langword="true" /> if the property exists in the collection; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[string propertyName] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(propertyName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ propertyName); void set(System::String ^ propertyName, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : obj with get, set" Usage="System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="f03cc-108">Nombre de la propiedad a la que se va a tener acceso en la colección.</span><span class="sxs-lookup"><span data-stu-id="f03cc-108">The name of the property to access in the collection.</span></span></param>
        <summary><span data-ttu-id="f03cc-109">Obtiene o establece el objeto que se encuentra en el índice especificado.</span><span class="sxs-lookup"><span data-stu-id="f03cc-109">Gets or sets the object at the specified index.</span></span></summary>
        <value><span data-ttu-id="f03cc-110">Valor de la propiedad especificada, si existe en la colección.</span><span class="sxs-lookup"><span data-stu-id="f03cc-110">The value of the specified property, if it exists in the collection.</span></span> <span data-ttu-id="f03cc-111">En los demás casos, el valor se recupera del valor actual de la propiedad que no tiene copia sombra.</span><span class="sxs-lookup"><span data-stu-id="f03cc-111">Otherwise, the value is retrieved from the current value of the nonshadowed property.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f03cc-112">Este método devuelve el valor actual de una propiedad, si la propiedad no se ha prevalecido.</span><span class="sxs-lookup"><span data-stu-id="f03cc-112">This method returns the current value of a property, if the property has not been shadowed.</span></span> <span data-ttu-id="f03cc-113">Por lo tanto, es importante determinar si la propiedad tiene copia sombra llamando <xref:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection.Contains%2A>.</span><span class="sxs-lookup"><span data-stu-id="f03cc-113">Therefore, it is important to determine whether the property is shadowed by calling <xref:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection.Contains%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
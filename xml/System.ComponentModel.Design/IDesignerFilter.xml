<Type Name="IDesignerFilter" FullName="System.ComponentModel.Design.IDesignerFilter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2dbad6fdfb09f4fc16d8d85beafb69dfaa4f5eea" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37696285" /></Metadata><TypeSignature Language="C#" Value="public interface IDesignerFilter" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDesignerFilter" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.IDesignerFilter" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDesignerFilter" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDesignerFilter" />
  <TypeSignature Language="F#" Value="type IDesignerFilter = interface" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="258d6-101">Proporciona una interfaz que habilita a un diseñador para tener acceso y filtrar los diccionarios de un objeto <see cref="T:System.ComponentModel.TypeDescriptor" /> que almacena los descriptores de propiedad, atributo y evento que un diseñador de componentes puede exponer en el entorno en tiempo de diseño.</span><span class="sxs-lookup"><span data-stu-id="258d6-101">Provides an interface that enables a designer to access and filter the dictionaries of a <see cref="T:System.ComponentModel.TypeDescriptor" /> that stores the property, attribute, and event descriptors that a component designer can expose to the design-time environment.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="258d6-102"><xref:System.ComponentModel.Design.IDesignerFilter> permite que un diseñador filtre el conjunto de descriptores de propiedad, atributo y evento que expone el componente asociado a través de un <xref:System.ComponentModel.TypeDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="258d6-102"><xref:System.ComponentModel.Design.IDesignerFilter> enables a designer to filter the set of property, attribute, and event descriptors that its associated component exposes through a <xref:System.ComponentModel.TypeDescriptor>.</span></span> <span data-ttu-id="258d6-103">Los métodos de esta interfaz cuyos nombres comienzan por `Pre` se llama inmediatamente antes que los métodos cuyos nombres comienzan por `Post`.</span><span class="sxs-lookup"><span data-stu-id="258d6-103">The methods of this interface whose names begin with `Pre` are called immediately before the methods whose names begin with `Post`.</span></span>  
  
 <span data-ttu-id="258d6-104">Si desea agregar los descriptores de propiedad, evento o atributo, utilice un <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes%2A>, <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents%2A>, o <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A> método.</span><span class="sxs-lookup"><span data-stu-id="258d6-104">If you want to add attribute, event, or property descriptors, use a <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes%2A>, <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents%2A>, or <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A> method.</span></span>  
  
 <span data-ttu-id="258d6-105">Si desea cambiar o quitar el atributo, evento o descriptores de propiedad, use un <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes%2A>, <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents%2A>, o <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties%2A> método.</span><span class="sxs-lookup"><span data-stu-id="258d6-105">If you want to change or remove attribute, event, or property descriptors, use a <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes%2A>, <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents%2A>, or <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="258d6-106">En el ejemplo siguiente se muestra una invalidación de <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A> que agrega una propiedad del diseñador a la ventana Propiedades cuando se selecciona el control del diseñador en tiempo de diseño.</span><span class="sxs-lookup"><span data-stu-id="258d6-106">The following example demonstrates an override of <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A> that adds a property of the designer to the Properties window when the designer's control is selected at design time.</span></span> <span data-ttu-id="258d6-107">Vea el ejemplo de la <xref:System.Windows.Forms.Design.ControlDesigner> clase para un ejemplo completo de diseñador que usa el <xref:System.ComponentModel.Design.IDesignerFilter> interfaz.</span><span class="sxs-lookup"><span data-stu-id="258d6-107">See the example for the <xref:System.Windows.Forms.Design.ControlDesigner> class for a complete designer example that uses the <xref:System.ComponentModel.Design.IDesignerFilter> interface.</span></span>  
  
 [!code-cpp[ControlDesignerExample#2](~/samples/snippets/cpp/VS_Snippets_Winforms/ControlDesignerExample/CPP/controldesignerexample.cpp#2)]
 [!code-csharp[ControlDesignerExample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/ControlDesignerExample/CS/controldesignerexample.cs#2)]
 [!code-vb[ControlDesignerExample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ControlDesignerExample/VB/controldesignerexample.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.ITypeDescriptorFilterService" />
    <altmember cref="T:System.ComponentModel.TypeDescriptor" />
  </Docs>
  <Members>
    <Member MemberName="PostFilterAttributes">
      <MemberSignature Language="C#" Value="public void PostFilterAttributes (System.Collections.IDictionary attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PostFilterAttributes(class System.Collections.IDictionary attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PostFilterAttributes (attributes As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PostFilterAttributes(System::Collections::IDictionary ^ attributes);" />
      <MemberSignature Language="F#" Value="abstract member PostFilterAttributes : System.Collections.IDictionary -&gt; unit" Usage="iDesignerFilter.PostFilterAttributes attributes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="attributes"><span data-ttu-id="258d6-108">Objetos <see cref="T:System.Attribute" /> para la clase del componente.</span><span class="sxs-lookup"><span data-stu-id="258d6-108">The <see cref="T:System.Attribute" /> objects for the class of the component.</span></span> <span data-ttu-id="258d6-109">Las claves del diccionario de atributos son los valores de la propiedad <see cref="P:System.Attribute.TypeId" /> de los atributos.</span><span class="sxs-lookup"><span data-stu-id="258d6-109">The keys in the dictionary of attributes are the <see cref="P:System.Attribute.TypeId" /> values of the attributes.</span></span></param>
        <summary><span data-ttu-id="258d6-110">Cuando se reemplaza en una clase derivada, permite que un diseñador cambie o quite elementos del conjunto de atributos que se exponen a través de un objeto <see cref="T:System.ComponentModel.TypeDescriptor" />.</span><span class="sxs-lookup"><span data-stu-id="258d6-110">When overridden in a derived class, allows a designer to change or remove items from the set of attributes that it exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="258d6-111">Este método proporciona una manera de cambiar o quitar elementos del diccionario de atributos que el componente asociado del diseñador que implementa esta interfaz se expone a través de un <xref:System.ComponentModel.TypeDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="258d6-111">This method provides a way to change or remove items within the dictionary of attributes that the associated component of the designer implementing this interface exposes through a <xref:System.ComponentModel.TypeDescriptor>.</span></span>  
  
 <span data-ttu-id="258d6-112">Las claves del diccionario de atributos son los identificadores de tipo de los atributos.</span><span class="sxs-lookup"><span data-stu-id="258d6-112">The keys in the dictionary of attributes are the type IDs of the attributes.</span></span> <span data-ttu-id="258d6-113">Los objetos son del tipo <xref:System.Attribute>.</span><span class="sxs-lookup"><span data-stu-id="258d6-113">The objects are of type <xref:System.Attribute>.</span></span> <span data-ttu-id="258d6-114">Este método se llama inmediatamente después de <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes%2A>.</span><span class="sxs-lookup"><span data-stu-id="258d6-114">This method is called immediately after <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes%2A>.</span></span>  
  
 <span data-ttu-id="258d6-115">Identificador del tipo de un atributo puede ser cualquier objeto.</span><span class="sxs-lookup"><span data-stu-id="258d6-115">The type ID of an attribute can be any object.</span></span> <span data-ttu-id="258d6-116">De forma predeterminada, <xref:System.Attribute> devuelve su <xref:System.Type> como el valor de su <xref:System.Attribute.TypeId%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="258d6-116">By default, <xref:System.Attribute> returns its <xref:System.Type> as the value of its <xref:System.Attribute.TypeId%2A> property.</span></span> <span data-ttu-id="258d6-117">Puede comprobar el <xref:System.Attribute.TypeId%2A> de un atributo en el diccionario cuya equivalencia con un conocido <xref:System.Attribute.TypeId%2A> para un atributo identificarlo, o use <xref:System.Reflection> para identificar el propio objeto de atributo.</span><span class="sxs-lookup"><span data-stu-id="258d6-117">You can check the <xref:System.Attribute.TypeId%2A> of an attribute in the dictionary for equivalence with a known <xref:System.Attribute.TypeId%2A> for an attribute to identify it, or use <xref:System.Reflection> to identify the attribute object itself.</span></span>  
  
 <span data-ttu-id="258d6-118">Cuando un atributo que tiene el mismo <xref:System.Attribute.TypeId%2A> como un atributo existente o heredado se agrega a un componente, el nuevo atributo reemplaza la anterior.</span><span class="sxs-lookup"><span data-stu-id="258d6-118">When an attribute that has the same <xref:System.Attribute.TypeId%2A> as an existing or inherited attribute is added to a component, the new attribute replaces the old attribute.</span></span> <span data-ttu-id="258d6-119">Para muchos atributos, un atributo nuevo del mismo tipo reemplazará cualquier atributo anterior del tipo.</span><span class="sxs-lookup"><span data-stu-id="258d6-119">For many attributes, a new attribute of the same type will replace any previous attribute of the type.</span></span> <span data-ttu-id="258d6-120">Sin embargo, algunos tipos de atributos devuelven un <xref:System.Attribute.TypeId%2A> que distingue el atributo de forma selectiva.</span><span class="sxs-lookup"><span data-stu-id="258d6-120">However, some types of attributes return a <xref:System.Attribute.TypeId%2A> that distinguishes the attribute selectively.</span></span> <span data-ttu-id="258d6-121">Por ejemplo, para proporcionar diferentes tipos de diseñadores activos simultáneamente para un tipo, como un <xref:System.ComponentModel.Design.IRootDesigner> y un <xref:System.ComponentModel.Design.IDesigner>, <xref:System.ComponentModel.DesignerAttribute> clase devuelve un <xref:System.Attribute.TypeId%2A> que identifica el atributo y el Diseñador de base tipo.</span><span class="sxs-lookup"><span data-stu-id="258d6-121">For example, in order to provide different types of simultaneously active designers for a type, such as an <xref:System.ComponentModel.Design.IRootDesigner> and an <xref:System.ComponentModel.Design.IDesigner>, the <xref:System.ComponentModel.DesignerAttribute> class returns a <xref:System.Attribute.TypeId%2A> that uniquely identifies both the attribute and the base designer type.</span></span> <span data-ttu-id="258d6-122">El <xref:System.ComponentModel.DesignerAttribute> constructor le permite especificar el tipo de diseñador base del diseñador además de su tipo específico, y <xref:System.ComponentModel.DesignerAttribute> devuelve un <xref:System.Attribute.TypeId%2A> que refleje esto.</span><span class="sxs-lookup"><span data-stu-id="258d6-122">The <xref:System.ComponentModel.DesignerAttribute> constructor allows you to specify the base designer type of the designer in addition to its specific type, and <xref:System.ComponentModel.DesignerAttribute> returns a <xref:System.Attribute.TypeId%2A> that reflects this.</span></span> <span data-ttu-id="258d6-123">Por lo tanto, cuando agrega un nuevo <xref:System.ComponentModel.DesignerAttribute> con un tipo de diseñador base del mismo tipo que el tipo base de diseñador de existente <xref:System.ComponentModel.DesignerAttribute>, el atributo anterior se reemplaza con el nuevo atributo.</span><span class="sxs-lookup"><span data-stu-id="258d6-123">Therefore when you add a new <xref:System.ComponentModel.DesignerAttribute> with a base designer type of the same type as the base designer type of an existing <xref:System.ComponentModel.DesignerAttribute>, the old attribute is replaced with the new attribute.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="258d6-124"><para>Puede filtrar directamente el diccionario que sea accesible a través de la <paramref name="attributes" /> parámetro, o se puede dejar sin cambios. Si va a invalidar este método, llame a la implementación base después de realizar su propio filtrado.</para></span><span class="sxs-lookup"><span data-stu-id="258d6-124"><para>You can directly filter the dictionary that is accessible through the <paramref name="attributes" /> parameter, or you can leave it unchanged. If you are overriding this method, call the base implementation after you perform your own filtering.</para></span></span></block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="PostFilterEvents">
      <MemberSignature Language="C#" Value="public void PostFilterEvents (System.Collections.IDictionary events);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PostFilterEvents(class System.Collections.IDictionary events) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PostFilterEvents (events As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PostFilterEvents(System::Collections::IDictionary ^ events);" />
      <MemberSignature Language="F#" Value="abstract member PostFilterEvents : System.Collections.IDictionary -&gt; unit" Usage="iDesignerFilter.PostFilterEvents events" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="events" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="events"><span data-ttu-id="258d6-125">Objetos <see cref="T:System.ComponentModel.EventDescriptor" /> que representan los eventos de la clase del componente.</span><span class="sxs-lookup"><span data-stu-id="258d6-125">The <see cref="T:System.ComponentModel.EventDescriptor" /> objects that represent the events of the class of the component.</span></span> <span data-ttu-id="258d6-126">Las claves del diccionario de eventos son nombres de evento.</span><span class="sxs-lookup"><span data-stu-id="258d6-126">The keys in the dictionary of events are event names.</span></span></param>
        <summary><span data-ttu-id="258d6-127">Cuando se reemplaza en una clase derivada, permite que un diseñador cambie o quite elementos del conjunto de eventos que se exponen a través de un objeto <see cref="T:System.ComponentModel.TypeDescriptor" />.</span><span class="sxs-lookup"><span data-stu-id="258d6-127">When overridden in a derived class, allows a designer to change or remove items from the set of events that it exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="258d6-128">Este método proporciona una manera de cambiar o quitar elementos del diccionario de eventos que se exponen a través de un <xref:System.ComponentModel.TypeDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="258d6-128">This method provides a way to change or remove items within the dictionary of events that are exposed through a <xref:System.ComponentModel.TypeDescriptor>.</span></span>  
  
 <span data-ttu-id="258d6-129">Las claves del diccionario de eventos son los nombres de los eventos.</span><span class="sxs-lookup"><span data-stu-id="258d6-129">The keys in the dictionary of events are the names of the events.</span></span> <span data-ttu-id="258d6-130">Los objetos son del tipo <xref:System.ComponentModel.EventDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="258d6-130">The objects are of type <xref:System.ComponentModel.EventDescriptor>.</span></span> <span data-ttu-id="258d6-131">Este método se llama inmediatamente después de <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents%2A>.</span><span class="sxs-lookup"><span data-stu-id="258d6-131">This method is called immediately after <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="258d6-132"><para>Puede filtrar directamente el diccionario que sea accesible a través de la <paramref name="events" /> parámetro, o se puede dejar sin cambios. Si va a invalidar este método, llame a la implementación base después de realizar su propio filtrado.</para></span><span class="sxs-lookup"><span data-stu-id="258d6-132"><para>You can directly filter the dictionary that is accessible through the <paramref name="events" /> parameter, or you can leave it unchanged. If you are overriding this method, call the base implementation after you perform your own filtering.</para></span></span></block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="PostFilterProperties">
      <MemberSignature Language="C#" Value="public void PostFilterProperties (System.Collections.IDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PostFilterProperties(class System.Collections.IDictionary properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PostFilterProperties (properties As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PostFilterProperties(System::Collections::IDictionary ^ properties);" />
      <MemberSignature Language="F#" Value="abstract member PostFilterProperties : System.Collections.IDictionary -&gt; unit" Usage="iDesignerFilter.PostFilterProperties properties" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="properties"><span data-ttu-id="258d6-133">Objetos <see cref="T:System.ComponentModel.PropertyDescriptor" /> que representan las propiedades de la clase del componente.</span><span class="sxs-lookup"><span data-stu-id="258d6-133">The <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects that represent the properties of the class of the component.</span></span> <span data-ttu-id="258d6-134">Las claves del diccionario de propiedades son nombres de propiedad.</span><span class="sxs-lookup"><span data-stu-id="258d6-134">The keys in the dictionary of properties are property names.</span></span></param>
        <summary><span data-ttu-id="258d6-135">Cuando se reemplaza en una clase derivada, permite que un diseñador cambie o quite elementos del conjunto de propiedades que se exponen a través de un objeto <see cref="T:System.ComponentModel.TypeDescriptor" />.</span><span class="sxs-lookup"><span data-stu-id="258d6-135">When overridden in a derived class, allows a designer to change or remove items from the set of properties that it exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="258d6-136">Este método proporciona una manera de cambiar o quitar elementos del diccionario de propiedades que se exponen a través de un <xref:System.ComponentModel.TypeDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="258d6-136">This method provides a way to change or remove items within the dictionary of properties that are exposed through a <xref:System.ComponentModel.TypeDescriptor>.</span></span>  
  
 <span data-ttu-id="258d6-137">Las claves del diccionario de propiedades son los nombres de las propiedades.</span><span class="sxs-lookup"><span data-stu-id="258d6-137">The keys in the dictionary of properties are the names of the properties.</span></span> <span data-ttu-id="258d6-138">Los objetos son del tipo <xref:System.ComponentModel.PropertyDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="258d6-138">The objects are of type <xref:System.ComponentModel.PropertyDescriptor>.</span></span> <span data-ttu-id="258d6-139">Este método se llama inmediatamente después de <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A>.</span><span class="sxs-lookup"><span data-stu-id="258d6-139">This method is called immediately after <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="258d6-140"><para>Puede filtrar directamente el diccionario que sea accesible a través de la <paramref name="properties" /> parámetro, o se puede dejar sin cambios. Si va a invalidar este método, llame a la implementación base después de realizar su propio filtrado.</para></span><span class="sxs-lookup"><span data-stu-id="258d6-140"><para>You can directly filter the dictionary that is accessible through the <paramref name="properties" /> parameter, or you can leave it unchanged. If you are overriding this method, call the base implementation after you perform your own filtering.</para></span></span></block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="PreFilterAttributes">
      <MemberSignature Language="C#" Value="public void PreFilterAttributes (System.Collections.IDictionary attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PreFilterAttributes(class System.Collections.IDictionary attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PreFilterAttributes (attributes As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PreFilterAttributes(System::Collections::IDictionary ^ attributes);" />
      <MemberSignature Language="F#" Value="abstract member PreFilterAttributes : System.Collections.IDictionary -&gt; unit" Usage="iDesignerFilter.PreFilterAttributes attributes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="attributes"><span data-ttu-id="258d6-141">Objetos <see cref="T:System.Attribute" /> para la clase del componente.</span><span class="sxs-lookup"><span data-stu-id="258d6-141">The <see cref="T:System.Attribute" /> objects for the class of the component.</span></span> <span data-ttu-id="258d6-142">Las claves del diccionario de atributos son los valores de la propiedad <see cref="P:System.Attribute.TypeId" /> de los atributos.</span><span class="sxs-lookup"><span data-stu-id="258d6-142">The keys in the dictionary of attributes are the <see cref="P:System.Attribute.TypeId" /> values of the attributes.</span></span></param>
        <summary><span data-ttu-id="258d6-143">Cuando se reemplaza en una clase derivada, permite que un diseñador agregue elementos al conjunto de atributos que se expone a través de un objeto <see cref="T:System.ComponentModel.TypeDescriptor" />.</span><span class="sxs-lookup"><span data-stu-id="258d6-143">When overridden in a derived class, allows a designer to add items to the set of attributes that it exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="258d6-144">Este método proporciona una manera de agregar elementos al diccionario de atributos que el componente asociado del diseñador que implementa esta interfaz se expone a través de un <xref:System.ComponentModel.TypeDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="258d6-144">This method provides a way to add items to the dictionary of attributes that the associated component of the designer implementing this interface exposes through a <xref:System.ComponentModel.TypeDescriptor>.</span></span>  
  
 <span data-ttu-id="258d6-145">Las claves del diccionario de atributos son los identificadores de tipo de los atributos.</span><span class="sxs-lookup"><span data-stu-id="258d6-145">The keys in the dictionary of attributes are the type IDs of the attributes.</span></span> <span data-ttu-id="258d6-146">Los objetos son del tipo <xref:System.Attribute>.</span><span class="sxs-lookup"><span data-stu-id="258d6-146">The objects are of type <xref:System.Attribute>.</span></span> <span data-ttu-id="258d6-147">Este método se llama inmediatamente antes de <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes%2A>.</span><span class="sxs-lookup"><span data-stu-id="258d6-147">This method is called immediately before <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes%2A>.</span></span>  
  
 <span data-ttu-id="258d6-148">Identificador del tipo de un atributo puede ser cualquier objeto.</span><span class="sxs-lookup"><span data-stu-id="258d6-148">The type ID of an attribute can be any object.</span></span> <span data-ttu-id="258d6-149">De forma predeterminada, <xref:System.Attribute> devuelve su <xref:System.Type> como el valor de su <xref:System.Attribute.TypeId%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="258d6-149">By default, <xref:System.Attribute> returns its <xref:System.Type> as the value of its <xref:System.Attribute.TypeId%2A> property.</span></span> <span data-ttu-id="258d6-150">Puede comprobar el <xref:System.Attribute.TypeId%2A> de un atributo en el diccionario cuya equivalencia con un conocido <xref:System.Attribute.TypeId%2A> para un atributo identificarlo, o use <xref:System.Reflection> para identificar el propio objeto de atributo.</span><span class="sxs-lookup"><span data-stu-id="258d6-150">You can check the <xref:System.Attribute.TypeId%2A> of an attribute in the dictionary for equivalence with a known <xref:System.Attribute.TypeId%2A> for an attribute to identify it, or use <xref:System.Reflection> to identify the attribute object itself.</span></span>  
  
 <span data-ttu-id="258d6-151">Cuando un atributo que tiene el mismo <xref:System.Attribute.TypeId%2A> como un atributo existente o heredado se agrega a un componente, el nuevo atributo reemplaza la anterior.</span><span class="sxs-lookup"><span data-stu-id="258d6-151">When an attribute that has the same <xref:System.Attribute.TypeId%2A> as an existing or inherited attribute is added to a component, the new attribute replaces the old attribute.</span></span> <span data-ttu-id="258d6-152">Para muchos atributos, un atributo nuevo del mismo tipo reemplazará cualquier atributo anterior del tipo.</span><span class="sxs-lookup"><span data-stu-id="258d6-152">For many attributes, a new attribute of the same type will replace any previous attribute of the type.</span></span> <span data-ttu-id="258d6-153">Sin embargo, algunos tipos de atributos devuelven un <xref:System.Attribute.TypeId%2A> que distingue el atributo de forma selectiva.</span><span class="sxs-lookup"><span data-stu-id="258d6-153">However, some types of attributes return a <xref:System.Attribute.TypeId%2A> that distinguishes the attribute selectively.</span></span> <span data-ttu-id="258d6-154">Por ejemplo, para proporcionar diferentes tipos de diseñadores activos simultáneamente para un tipo, como un <xref:System.ComponentModel.Design.IRootDesigner> y un <xref:System.ComponentModel.Design.IDesigner>, <xref:System.ComponentModel.DesignerAttribute> clase devuelve un <xref:System.Attribute.TypeId%2A> que identifica el atributo y el Diseñador de base tipo.</span><span class="sxs-lookup"><span data-stu-id="258d6-154">For example, in order to provide different types of simultaneously active designers for a type, such as an <xref:System.ComponentModel.Design.IRootDesigner> and an <xref:System.ComponentModel.Design.IDesigner>, the <xref:System.ComponentModel.DesignerAttribute> class returns a <xref:System.Attribute.TypeId%2A> that uniquely identifies both the attribute and the base designer type.</span></span> <span data-ttu-id="258d6-155">El <xref:System.ComponentModel.DesignerAttribute> constructor le permite especificar el tipo de diseñador base del diseñador además de su tipo específico, y <xref:System.ComponentModel.DesignerAttribute> devuelve un <xref:System.Attribute.TypeId%2A> que refleje esto.</span><span class="sxs-lookup"><span data-stu-id="258d6-155">The <xref:System.ComponentModel.DesignerAttribute> constructor allows you to specify the base designer type of the designer in addition to its specific type, and <xref:System.ComponentModel.DesignerAttribute> returns a <xref:System.Attribute.TypeId%2A> that reflects this.</span></span> <span data-ttu-id="258d6-156">Por lo tanto, cuando agrega un nuevo <xref:System.ComponentModel.DesignerAttribute> con un tipo de diseñador base del mismo tipo que el tipo base de diseñador de existente <xref:System.ComponentModel.DesignerAttribute>, el atributo anterior se reemplaza con el nuevo atributo.</span><span class="sxs-lookup"><span data-stu-id="258d6-156">Therefore when you add a new <xref:System.ComponentModel.DesignerAttribute> with a base designer type of the same type as the base designer type of an existing <xref:System.ComponentModel.DesignerAttribute>, the old attribute is replaced with the new attribute.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="258d6-157"><para>Puede filtrar directamente el diccionario que sea accesible a través de la <paramref name="attributes" /> parámetro, o se puede dejar sin cambios. Si va a invalidar este método, llame a la implementación base después de realizar su propio filtrado.</para></span><span class="sxs-lookup"><span data-stu-id="258d6-157"><para>You can directly filter the dictionary that is accessible through the <paramref name="attributes" /> parameter, or you can leave it unchanged. If you are overriding this method, call the base implementation after you perform your own filtering.</para></span></span></block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="PreFilterEvents">
      <MemberSignature Language="C#" Value="public void PreFilterEvents (System.Collections.IDictionary events);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PreFilterEvents(class System.Collections.IDictionary events) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PreFilterEvents (events As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PreFilterEvents(System::Collections::IDictionary ^ events);" />
      <MemberSignature Language="F#" Value="abstract member PreFilterEvents : System.Collections.IDictionary -&gt; unit" Usage="iDesignerFilter.PreFilterEvents events" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="events" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="events"><span data-ttu-id="258d6-158">Objetos <see cref="T:System.ComponentModel.EventDescriptor" /> que representan los eventos de la clase del componente.</span><span class="sxs-lookup"><span data-stu-id="258d6-158">The <see cref="T:System.ComponentModel.EventDescriptor" /> objects that represent the events of the class of the component.</span></span> <span data-ttu-id="258d6-159">Las claves del diccionario de eventos son nombres de evento.</span><span class="sxs-lookup"><span data-stu-id="258d6-159">The keys in the dictionary of events are event names.</span></span></param>
        <summary><span data-ttu-id="258d6-160">Cuando se reemplaza en una clase derivada, permite que un diseñador agregue elementos al conjunto de eventos que se expone a través de un objeto <see cref="T:System.ComponentModel.TypeDescriptor" />.</span><span class="sxs-lookup"><span data-stu-id="258d6-160">When overridden in a derived class, allows a designer to add items to the set of events that it exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="258d6-161">Este método proporciona una manera de agregar elementos al diccionario de eventos que un diseñador expone mediante un <xref:System.ComponentModel.TypeDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="258d6-161">This method provides a way to add items to the dictionary of events that a designer exposes through a <xref:System.ComponentModel.TypeDescriptor>.</span></span>  
  
 <span data-ttu-id="258d6-162">Las claves del diccionario de eventos son los nombres de los eventos.</span><span class="sxs-lookup"><span data-stu-id="258d6-162">The keys in the dictionary of events are the names of the events.</span></span> <span data-ttu-id="258d6-163">Los objetos son del tipo <xref:System.ComponentModel.EventDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="258d6-163">The objects are of type <xref:System.ComponentModel.EventDescriptor>.</span></span> <span data-ttu-id="258d6-164">Este método se llama inmediatamente antes de <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents%2A>.</span><span class="sxs-lookup"><span data-stu-id="258d6-164">This method is called immediately before <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="258d6-165"><para>Puede modificar directamente el diccionario que sea accesible a través de la <paramref name="events" /> parámetro, o se puede dejar sin cambios. Si va a invalidar este método, llame a la implementación base antes de realizar su propio filtrado.</para></span><span class="sxs-lookup"><span data-stu-id="258d6-165"><para>You can directly modify the dictionary that is accessible through the <paramref name="events" /> parameter, or you can leave it unchanged. If you are overriding this method, call the base implementation before you perform your own filtering.</para></span></span></block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="PreFilterProperties">
      <MemberSignature Language="C#" Value="public void PreFilterProperties (System.Collections.IDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PreFilterProperties(class System.Collections.IDictionary properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PreFilterProperties (properties As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PreFilterProperties(System::Collections::IDictionary ^ properties);" />
      <MemberSignature Language="F#" Value="abstract member PreFilterProperties : System.Collections.IDictionary -&gt; unit" Usage="iDesignerFilter.PreFilterProperties properties" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="properties"><span data-ttu-id="258d6-166">Objetos <see cref="T:System.ComponentModel.PropertyDescriptor" /> que representan las propiedades de la clase del componente.</span><span class="sxs-lookup"><span data-stu-id="258d6-166">The <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects that represent the properties of the class of the component.</span></span> <span data-ttu-id="258d6-167">Las claves del diccionario de propiedades son nombres de propiedad.</span><span class="sxs-lookup"><span data-stu-id="258d6-167">The keys in the dictionary of properties are property names.</span></span></param>
        <summary><span data-ttu-id="258d6-168">Cuando se reemplaza en una clase derivada, permite que un diseñador agregue elementos al conjunto de propiedades que se expone a través de un objeto <see cref="T:System.ComponentModel.TypeDescriptor" />.</span><span class="sxs-lookup"><span data-stu-id="258d6-168">When overridden in a derived class, allows a designer to add items to the set of properties that it exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="258d6-169">Este método proporciona una manera de agregar elementos al diccionario de propiedades que un diseñador expone mediante un <xref:System.ComponentModel.TypeDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="258d6-169">This method provides a way to add items to the dictionary of properties that a designer exposes through a <xref:System.ComponentModel.TypeDescriptor>.</span></span>  
  
 <span data-ttu-id="258d6-170">Las claves del diccionario de propiedades son los nombres de las propiedades.</span><span class="sxs-lookup"><span data-stu-id="258d6-170">The keys in the dictionary of properties are the names of the properties.</span></span> <span data-ttu-id="258d6-171">Los objetos son del tipo <xref:System.ComponentModel.PropertyDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="258d6-171">The objects are of type <xref:System.ComponentModel.PropertyDescriptor>.</span></span> <span data-ttu-id="258d6-172">Este método se llama inmediatamente antes de <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties%2A>.</span><span class="sxs-lookup"><span data-stu-id="258d6-172">This method is called immediately before <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="258d6-173"><para>Puede modificar directamente el diccionario que sea accesible a través de la <paramref name="properties" /> parámetro, o se puede dejar sin cambios. Si va a invalidar este método, llame a la implementación base antes de realizar su propio filtrado.</para></span><span class="sxs-lookup"><span data-stu-id="258d6-173"><para>You can directly modify the dictionary that is accessible through the <paramref name="properties" /> parameter, or you can leave it unchanged. If you are overriding this method, call the base implementation before you perform your own filtering.</para></span></span></block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
  </Members>
</Type>
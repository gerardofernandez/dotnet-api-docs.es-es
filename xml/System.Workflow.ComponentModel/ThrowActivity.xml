<Type Name="ThrowActivity" FullName="System.Workflow.ComponentModel.ThrowActivity">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c41ca22563c87fbb7e0ebb713a14ff3c6ca2ebe4" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51861621" /></Metadata><TypeSignature Language="C#" Value="public sealed class ThrowActivity : System.Workflow.ComponentModel.Activity, System.Workflow.ComponentModel.Design.ITypeFilterProvider, System.Workflow.ComponentModel.IDynamicPropertyTypeProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ThrowActivity extends System.Workflow.ComponentModel.Activity implements class System.Workflow.ComponentModel.Design.ITypeFilterProvider, class System.Workflow.ComponentModel.IDynamicPropertyTypeProvider" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.ComponentModel.ThrowActivity" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ThrowActivity&#xA;Inherits Activity&#xA;Implements IDynamicPropertyTypeProvider, ITypeFilterProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class ThrowActivity sealed : System::Workflow::ComponentModel::Activity, System::Workflow::ComponentModel::Design::ITypeFilterProvider, System::Workflow::ComponentModel::IDynamicPropertyTypeProvider" />
  <TypeSignature Language="F#" Value="type ThrowActivity = class&#xA;    inherit Activity&#xA;    interface ITypeFilterProvider&#xA;    interface IDynamicPropertyTypeProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Workflow.ComponentModel.Activity</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Workflow.ComponentModel.Design.ITypeFilterProvider</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Workflow.ComponentModel.IDynamicPropertyTypeProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer(typeof(System.Workflow.ComponentModel.Design.ThrowDesigner), typeof(System.ComponentModel.Design.IDesigner))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.ToolboxItem(typeof(System.Workflow.ComponentModel.Design.ActivityToolboxItem))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Drawing.ToolboxBitmap(typeof(System.Workflow.ComponentModel.ThrowActivity), "Resources.Throw.png")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="bed64-101">Modela el inicio de una excepción.</span><span class="sxs-lookup"><span data-stu-id="bed64-101">Models the throwing of an exception.</span></span> <span data-ttu-id="bed64-102">Esta clase no puede heredarse.</span><span class="sxs-lookup"><span data-stu-id="bed64-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 <span data-ttu-id="bed64-103">El propósito de <xref:System.Workflow.ComponentModel.ThrowActivity> es permitir el modelo declarativo del inicio de una excepción.</span><span class="sxs-lookup"><span data-stu-id="bed64-103">The purpose of the <xref:System.Workflow.ComponentModel.ThrowActivity> is to allow declarative modeling of the throwing of an exception.</span></span> <span data-ttu-id="bed64-104"><xref:System.Workflow.ComponentModel.ThrowActivity> es funcionalmente equivalente a una actividad <xref:System.Workflow.Activities.CodeActivity> cuyo controlador de código lateral produce la excepción indicada.</span><span class="sxs-lookup"><span data-stu-id="bed64-104">The <xref:System.Workflow.ComponentModel.ThrowActivity> is functionally equivalent to a <xref:System.Workflow.Activities.CodeActivity> activity whose code-beside handler throws the indicated exception.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bed64-105">El código siguiente muestra el uso de una actividad unidireccional en un flujo de trabajo para implementar el control de excepciones.</span><span class="sxs-lookup"><span data-stu-id="bed64-105">The following code shows the use of a single throw activity in a workflow to implement exception handling.</span></span> <span data-ttu-id="bed64-106">Este ejemplo de código es parte de la muestra de SDK Iniciar y pertenece al archivo ThrowWorkflow.cs.</span><span class="sxs-lookup"><span data-stu-id="bed64-106">This code example is part of the Throw SDK sample and is from the ThrowWorkflow.cs file.</span></span> <span data-ttu-id="bed64-107">Para obtener más información, consulte [usar Throw](https://msdn.microsoft.com/library/aa5b9546-ec95-4e43-8337-20e26f8d71cc).</span><span class="sxs-lookup"><span data-stu-id="bed64-107">For more information, see [Using Throw](https://msdn.microsoft.com/library/aa5b9546-ec95-4e43-8337-20e26f8d71cc).</span></span>  
  
 [!code-csharp[WF_Samples#178](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets11.cs#178)]
 [!code-vb[WF_Samples#178](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets11.vb#178)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="bed64-108">Inicializa una nueva instancia de la clase <see cref="T:System.Workflow.ComponentModel.ThrowActivity" />.</span><span class="sxs-lookup"><span data-stu-id="bed64-108">Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.ThrowActivity" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ThrowActivity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.ThrowActivity.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ThrowActivity();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bed64-109">Inicializa una nueva instancia de la clase <see cref="T:System.Workflow.ComponentModel.ThrowActivity" />.</span><span class="sxs-lookup"><span data-stu-id="bed64-109">Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.ThrowActivity" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="bed64-110">El código siguiente muestra el uso de una actividad unidireccional en un flujo de trabajo para implementar el control de excepciones.</span><span class="sxs-lookup"><span data-stu-id="bed64-110">The following code shows the use of a single throw activity in a workflow to implement exception handling.</span></span> <span data-ttu-id="bed64-111">Este ejemplo incluye invocar el constructor.</span><span class="sxs-lookup"><span data-stu-id="bed64-111">This example includes invoking the constructor.</span></span> <span data-ttu-id="bed64-112">Este ejemplo de código es parte de la muestra de SDK Iniciar y pertenece al archivo ThrowWorkflow.cs.</span><span class="sxs-lookup"><span data-stu-id="bed64-112">This code example is part of the Throw SDK sample and is from the ThrowWorkflow.cs file.</span></span> <span data-ttu-id="bed64-113">Para obtener más información, consulte [usar Throw](https://msdn.microsoft.com/library/aa5b9546-ec95-4e43-8337-20e26f8d71cc).</span><span class="sxs-lookup"><span data-stu-id="bed64-113">For more information, see [Using Throw](https://msdn.microsoft.com/library/aa5b9546-ec95-4e43-8337-20e26f8d71cc).</span></span>  
  
 [!code-csharp[WF_Samples#178](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets11.cs#178)]
 [!code-vb[WF_Samples#178](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets11.vb#178)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ThrowActivity (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.ThrowActivity.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ThrowActivity(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Workflow.ComponentModel.ThrowActivity : string -&gt; System.Workflow.ComponentModel.ThrowActivity" Usage="new System.Workflow.ComponentModel.ThrowActivity name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="bed64-114">Nombre de la actividad definido por el usuario.</span><span class="sxs-lookup"><span data-stu-id="bed64-114">The user-defined name of the activity.</span></span></param>
        <summary><span data-ttu-id="bed64-115">Inicializa una nueva instancia de la clase <see cref="T:System.Workflow.ComponentModel.ThrowActivity" /> e inicializa su nombre.</span><span class="sxs-lookup"><span data-stu-id="bed64-115">Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.ThrowActivity" /> class, and initializes its name.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="bed64-116"><paramref name="identifier" /> es una referencia nula (<see langword="Nothing" /> en Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="bed64-116"><paramref name="identifier" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="protected internal override sealed System.Workflow.ComponentModel.ActivityExecutionStatus Execute (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance valuetype System.Workflow.ComponentModel.ActivityExecutionStatus Execute(class System.Workflow.ComponentModel.ActivityExecutionContext executionContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.ThrowActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides NotOverridable Function Execute (executionContext As ActivityExecutionContext) As ActivityExecutionStatus" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Workflow::ComponentModel::ActivityExecutionStatus Execute(System::Workflow::ComponentModel::ActivityExecutionContext ^ executionContext);" />
      <MemberSignature Language="F#" Value="override this.Execute : System.Workflow.ComponentModel.ActivityExecutionContext -&gt; System.Workflow.ComponentModel.ActivityExecutionStatus" Usage="throwActivity.Execute executionContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.ActivityExecutionStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executionContext" Type="System.Workflow.ComponentModel.ActivityExecutionContext" />
      </Parameters>
      <Docs>
        <param name="executionContext">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fault">
      <MemberSignature Language="C#" Value="public Exception Fault { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Fault" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.ThrowActivity.Fault" />
      <MemberSignature Language="VB.NET" Value="Public Property Fault As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Fault { Exception ^ get(); void set(Exception ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Fault : Exception with get, set" Usage="System.Workflow.ComponentModel.ThrowActivity.Fault" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Workflow.ComponentModel.ThrowActivity/FaultConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bed64-117">Obtiene o establecer el objeto de excepción que debería ser iniciado por <see cref="T:System.Workflow.ComponentModel.ThrowActivity" />.</span><span class="sxs-lookup"><span data-stu-id="bed64-117">Gets or sets the exception object that should be thrown by the <see cref="T:System.Workflow.ComponentModel.ThrowActivity" />.</span></span></summary>
        <value><span data-ttu-id="bed64-118"><see cref="T:System.Exception" /> asociado a esta instancia.</span><span class="sxs-lookup"><span data-stu-id="bed64-118">The <see cref="T:System.Exception" /> associated with this instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bed64-119">Usted tiene acceso indirectamente a cada propiedad pública y evento de este tipo por la resolución de una propiedad de dependencia correspondiente.</span><span class="sxs-lookup"><span data-stu-id="bed64-119">You indirectly access each public property and event of this type by the resolution of a corresponding dependency property.</span></span> <span data-ttu-id="bed64-120">Esta propiedad de dependencia es el campo estático público denominado `XProperty` o `XEvent`, donde X es la propiedad correspondiente.</span><span class="sxs-lookup"><span data-stu-id="bed64-120">This dependency property is the public static field named `XProperty` or `XEvent`, where X is the corresponding property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FaultProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty FaultProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty FaultProperty" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.ComponentModel.ThrowActivity.FaultProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly FaultProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ FaultProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable FaultProperty : System.Workflow.ComponentModel.DependencyProperty" Usage="System.Workflow.ComponentModel.ThrowActivity.FaultProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bed64-121"><see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> que representa la propiedad <see cref="P:System.Workflow.ComponentModel.ThrowActivity.Fault" /> para esta instancia.</span><span class="sxs-lookup"><span data-stu-id="bed64-121">The <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> representing the <see cref="P:System.Workflow.ComponentModel.ThrowActivity.Fault" /> property for this instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FaultType">
      <MemberSignature Language="C#" Value="public Type FaultType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type FaultType" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.ThrowActivity.FaultType" />
      <MemberSignature Language="VB.NET" Value="Public Property FaultType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ FaultType { Type ^ get(); void set(Type ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FaultType : Type with get, set" Usage="System.Workflow.ComponentModel.ThrowActivity.FaultType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor(typeof(System.Workflow.ComponentModel.Design.TypeBrowserEditor), typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Workflow.ComponentModel.ThrowActivity/FaultTypeConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bed64-122">Obtiene o establecer el tipo de excepción que debería ser iniciado por <see cref="T:System.Workflow.ComponentModel.ThrowActivity" />.</span><span class="sxs-lookup"><span data-stu-id="bed64-122">Gets or sets the type of exception that should be thrown by the <see cref="T:System.Workflow.ComponentModel.ThrowActivity" />.</span></span></summary>
        <value><span data-ttu-id="bed64-123">El tipo que representa el error asociado a esta instancia.</span><span class="sxs-lookup"><span data-stu-id="bed64-123">The type representing the fault associated with this instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="bed64-124">El código siguiente muestra el uso de una actividad unidireccional en un flujo de trabajo para implementar el control de excepciones.</span><span class="sxs-lookup"><span data-stu-id="bed64-124">The following code shows the usage of a single throw activity within a workflow to implement exception handling.</span></span> <span data-ttu-id="bed64-125">Este ejemplo muestra cómo establecer <xref:System.Workflow.ComponentModel.ThrowActivity.FaultType%2A> en `null`.</span><span class="sxs-lookup"><span data-stu-id="bed64-125">This example shows setting the <xref:System.Workflow.ComponentModel.ThrowActivity.FaultType%2A> to `null`.</span></span> <span data-ttu-id="bed64-126">Este ejemplo de código es parte de la muestra de SDK Iniciar y pertenece al archivo ThrowWorkflow.cs.</span><span class="sxs-lookup"><span data-stu-id="bed64-126">This code example is part of the Throw SDK sample and is from the ThrowWorkflow.cs file.</span></span> <span data-ttu-id="bed64-127">Para obtener más información, consulte [usar Throw](https://msdn.microsoft.com/library/aa5b9546-ec95-4e43-8337-20e26f8d71cc).</span><span class="sxs-lookup"><span data-stu-id="bed64-127">For more information, see [Using Throw](https://msdn.microsoft.com/library/aa5b9546-ec95-4e43-8337-20e26f8d71cc).</span></span>  
  
 [!code-csharp[WF_Samples#178](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets11.cs#178)]
 [!code-vb[WF_Samples#178](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets11.vb#178)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FaultTypeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty FaultTypeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty FaultTypeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.ComponentModel.ThrowActivity.FaultTypeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly FaultTypeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ FaultTypeProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable FaultTypeProperty : System.Workflow.ComponentModel.DependencyProperty" Usage="System.Workflow.ComponentModel.ThrowActivity.FaultTypeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bed64-128"><see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> que representa la propiedad <see cref="P:System.Workflow.ComponentModel.ThrowActivity.FaultType" /> para esta instancia.</span><span class="sxs-lookup"><span data-stu-id="bed64-128">The <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> representing the <see cref="P:System.Workflow.ComponentModel.ThrowActivity.FaultType" /> property for this instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bed64-129">Usted tiene acceso indirectamente a cada propiedad pública y evento de este tipo por la resolución de una propiedad de dependencia correspondiente.</span><span class="sxs-lookup"><span data-stu-id="bed64-129">You indirectly access each public property and event of this type by the resolution of a corresponding dependency property.</span></span> <span data-ttu-id="bed64-130">Esta propiedad de dependencia es el campo estático público denominado `XProperty` o `XEvent`, donde X es la propiedad correspondiente.</span><span class="sxs-lookup"><span data-stu-id="bed64-130">This dependency property is the public static field named `XProperty` or `XEvent`, where X is the corresponding property.</span></span>  
  
 [!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="protected internal override void Initialize (IServiceProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Initialize(class System.IServiceProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.ThrowActivity.Initialize(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Initialize (provider As IServiceProvider)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Initialize(IServiceProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.Initialize : IServiceProvider -&gt; unit" Usage="throwActivity.Initialize provider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Workflow.ComponentModel.Design.ITypeFilterProvider.CanFilterType">
      <MemberSignature Language="C#" Value="bool ITypeFilterProvider.CanFilterType (Type type, bool throwOnError);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Workflow.ComponentModel.Design.ITypeFilterProvider.CanFilterType(class System.Type type, bool throwOnError) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.ThrowActivity.System#Workflow#ComponentModel#Design#ITypeFilterProvider#CanFilterType(System.Type,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Workflow.ComponentModel.Design.ITypeFilterProvider.CanFilterType(Type ^ type, bool throwOnError) = System::Workflow::ComponentModel::Design::ITypeFilterProvider::CanFilterType;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Workflow.ComponentModel.Design.ITypeFilterProvider.CanFilterType(System.Type,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="throwOnError" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="bed64-131"><see cref="T:System.Type" /> para comprobar el filtro.</span><span class="sxs-lookup"><span data-stu-id="bed64-131">The <see cref="T:System.Type" /> to check for filtering</span></span></param>
        <param name="throwOnError"><span data-ttu-id="bed64-132"><see langword="true" /> para producir una excepción cuando se procesa <see cref="M:System.Workflow.ComponentModel.Design.ITypeFilterProvider.CanFilterType(System.Type,System.Boolean)" />; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bed64-132"><see langword="true" /> to throw an exception when the <see cref="M:System.Workflow.ComponentModel.Design.ITypeFilterProvider.CanFilterType(System.Type,System.Boolean)" /> is processed; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="bed64-133">Devuelve un valor que indica si se puede filtrar el <see cref="T:System.Type" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="bed64-133">Returns a value that indicates whether the specified <see cref="T:System.Type" /> can be filtered.</span></span></summary>
        <returns><span data-ttu-id="bed64-134"><see langword="true" /> si se puede filtrar el tipo especificado; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bed64-134"><see langword="true" /> if the specified type can be filtered; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Workflow.ComponentModel.Design.ITypeFilterProvider.FilterDescription">
      <MemberSignature Language="C#" Value="string System.Workflow.ComponentModel.Design.ITypeFilterProvider.FilterDescription { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string System.Workflow.ComponentModel.Design.ITypeFilterProvider.FilterDescription" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.ThrowActivity.System#Workflow#ComponentModel#Design#ITypeFilterProvider#FilterDescription" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property FilterDescription As String Implements ITypeFilterProvider.FilterDescription" />
      <MemberSignature Language="C++ CLI" Value="property System::String ^ System::Workflow::ComponentModel::Design::ITypeFilterProvider::FilterDescription { System::String ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Workflow.ComponentModel.Design.ITypeFilterProvider.FilterDescription" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Workflow.ComponentModel.Design.ITypeFilterProvider.FilterDescription</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bed64-135">Obtiene la descripción para el filtro que se va a mostrar en el cuadro de diálogo del explorador de clase.</span><span class="sxs-lookup"><span data-stu-id="bed64-135">Gets the description for the filter to be displayed on the class browser dialog box.</span></span></summary>
        <value><span data-ttu-id="bed64-136">Clase <see cref="T:System.String" /> que contiene la descripción del filtro.</span><span class="sxs-lookup"><span data-stu-id="bed64-136">A <see cref="T:System.String" /> that contains the description of the filter.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType">
      <MemberSignature Language="C#" Value="System.Workflow.ComponentModel.Compiler.AccessTypes IDynamicPropertyTypeProvider.GetAccessType (IServiceProvider serviceProvider, string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.Workflow.ComponentModel.Compiler.AccessTypes System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(class System.IServiceProvider serviceProvider, string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.ThrowActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType(System.IServiceProvider,System.String)" />
      <MemberSignature Language="VB.NET" Value="Function GetAccessType (serviceProvider As IServiceProvider, propertyName As String) As AccessTypes Implements IDynamicPropertyTypeProvider.GetAccessType" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Workflow::ComponentModel::Compiler::AccessTypes System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(IServiceProvider ^ serviceProvider, System::String ^ propertyName) = System::Workflow::ComponentModel::IDynamicPropertyTypeProvider::GetAccessType;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(System.IServiceProvider,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Compiler.AccessTypes</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="serviceProvider"><span data-ttu-id="bed64-137">Un objeto que implementa <see cref="T:System.IServiceProvider" /> para proporcionar el acceso a los servicios de tiempo de diseño si se necesitan.</span><span class="sxs-lookup"><span data-stu-id="bed64-137">An object that implements <see cref="T:System.IServiceProvider" /> to provide access to design time services if they are needed.</span></span></param>
        <param name="propertyName"><span data-ttu-id="bed64-138">Nombre de la propiedad.</span><span class="sxs-lookup"><span data-stu-id="bed64-138">The name of the property.</span></span></param>
        <summary><span data-ttu-id="bed64-139">Devuelve el tipo de acceso para la propiedad especificada.</span><span class="sxs-lookup"><span data-stu-id="bed64-139">Returns the access type for the specified property.</span></span></summary>
        <returns><span data-ttu-id="bed64-140">Un valor de enumeración <see cref="T:System.Workflow.ComponentModel.Compiler.AccessTypes" /> que denota el nivel de acceso de la propiedad.</span><span class="sxs-lookup"><span data-stu-id="bed64-140">An <see cref="T:System.Workflow.ComponentModel.Compiler.AccessTypes" /> enumeration value denoting the access level of the property.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bed64-141">Utilizado en tiempo de compilación para validar si las propiedades se enlazan correctamente entre ellas.</span><span class="sxs-lookup"><span data-stu-id="bed64-141">Used at compile time to validate if the properties are correctly bound to one other.</span></span> <span data-ttu-id="bed64-142">Sin esta interfaz, esta información se deduce directamente de los captadores/establecedores de propiedad.</span><span class="sxs-lookup"><span data-stu-id="bed64-142">Without this interface this information is inferred directly from property getter/setters.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType">
      <MemberSignature Language="C#" Value="Type IDynamicPropertyTypeProvider.GetPropertyType (IServiceProvider serviceProvider, string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Type System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(class System.IServiceProvider serviceProvider, string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.ThrowActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType(System.IServiceProvider,System.String)" />
      <MemberSignature Language="VB.NET" Value="Function GetPropertyType (serviceProvider As IServiceProvider, propertyName As String) As Type Implements IDynamicPropertyTypeProvider.GetPropertyType" />
      <MemberSignature Language="C++ CLI" Value=" virtual Type ^ System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(IServiceProvider ^ serviceProvider, System::String ^ propertyName) = System::Workflow::ComponentModel::IDynamicPropertyTypeProvider::GetPropertyType;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(System.IServiceProvider,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="serviceProvider"><span data-ttu-id="bed64-143">Un objeto que implementa <see cref="T:System.IServiceProvider" /> para proporcionar el acceso a los servicios de tiempo de diseño si se necesitan.</span><span class="sxs-lookup"><span data-stu-id="bed64-143">An object that implements <see cref="T:System.IServiceProvider" /> to provide access to design time services if they are needed.</span></span></param>
        <param name="propertyName"><span data-ttu-id="bed64-144">Nombre de la propiedad.</span><span class="sxs-lookup"><span data-stu-id="bed64-144">The name of the property.</span></span></param>
        <summary><span data-ttu-id="bed64-145">Devuelve el <see cref="T:System.Type" /> de la propiedad especificada.</span><span class="sxs-lookup"><span data-stu-id="bed64-145">Returns the <see cref="T:System.Type" /> of the specified property.</span></span></summary>
        <returns><span data-ttu-id="bed64-146"><see cref="T:System.Type" /> de la propiedad cuyo nombre se pasa como parámetro <paramref name="propertyName" />.</span><span class="sxs-lookup"><span data-stu-id="bed64-146">The <see cref="T:System.Type" /> for the property whose name is passed as the <paramref name="propertyName" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bed64-147">Utilizado en tiempo de compilación para validar si las propiedades se enlazan correctamente entre ellas.</span><span class="sxs-lookup"><span data-stu-id="bed64-147">Used at compile time to validate if the properties are correctly bound to one other.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
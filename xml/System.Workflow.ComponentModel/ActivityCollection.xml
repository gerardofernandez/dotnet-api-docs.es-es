<Type Name="ActivityCollection" FullName="System.Workflow.ComponentModel.ActivityCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6d18fb9b0ceba374875c00b8f49bc21e6f925cc3" /><Meta Name="ms.sourcegitcommit" Value="42a3c35677e9d87eeb503607ae50c9d39827d414" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="12/17/2018" /><Meta Name="ms.locfileid" Value="53518486" /></Metadata><TypeSignature Language="C#" Value="public sealed class ActivityCollection : System.Collections.Generic.List&lt;System.Workflow.ComponentModel.Activity&gt;, System.Collections.Generic.ICollection&lt;System.Workflow.ComponentModel.Activity&gt;, System.Collections.Generic.IEnumerable&lt;System.Workflow.ComponentModel.Activity&gt;, System.Collections.Generic.IList&lt;System.Workflow.ComponentModel.Activity&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ActivityCollection extends System.Collections.Generic.List`1&lt;class System.Workflow.ComponentModel.Activity&gt; implements class System.Collections.Generic.ICollection`1&lt;class System.Workflow.ComponentModel.Activity&gt;, class System.Collections.Generic.IEnumerable`1&lt;class System.Workflow.ComponentModel.Activity&gt;, class System.Collections.Generic.IList`1&lt;class System.Workflow.ComponentModel.Activity&gt;, class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.ComponentModel.ActivityCollection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ActivityCollection&#xA;Inherits List(Of Activity)&#xA;Implements ICollection(Of Activity), IEnumerable(Of Activity), IList(Of Activity)" />
  <TypeSignature Language="C++ CLI" Value="public ref class ActivityCollection sealed : System::Collections::Generic::List&lt;System::Workflow::ComponentModel::Activity ^&gt;, System::Collections::Generic::ICollection&lt;System::Workflow::ComponentModel::Activity ^&gt;, System::Collections::Generic::IEnumerable&lt;System::Workflow::ComponentModel::Activity ^&gt;, System::Collections::Generic::IList&lt;System::Workflow::ComponentModel::Activity ^&gt;" />
  <TypeSignature Language="F#" Value="type ActivityCollection = class&#xA;    inherit List&lt;Activity&gt;&#xA;    interface IList&lt;Activity&gt;&#xA;    interface ICollection&lt;Activity&gt;&#xA;    interface seq&lt;Activity&gt;&#xA;    interface IEnumerable&#xA;    interface IList&#xA;    interface ICollection" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Collections.Generic.List&lt;System.Workflow.ComponentModel.Activity&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="!0">System.Workflow.ComponentModel.Activity</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;System.Workflow.ComponentModel.Activity&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Workflow.ComponentModel.Activity&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IList&lt;System.Workflow.ComponentModel.Activity&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Design.Serialization.DesignerSerializer(typeof(System.Workflow.ComponentModel.Serialization.ActivityCollectionMarkupSerializer), typeof(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="9eae6-101">Modela un <see cref="T:System.Collections.ICollection" /> fuertemente tipado de <see cref="T:System.Workflow.ComponentModel.Activity" />.</span><span class="sxs-lookup"><span data-stu-id="9eae6-101">Models a strongly typed <see cref="T:System.Collections.ICollection" /> of type <see cref="T:System.Workflow.ComponentModel.Activity" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 <span data-ttu-id="9eae6-102">Esta clase se utiliza para representar la lista de actividades secundarias para <xref:System.Workflow.ComponentModel.CompositeActivity>.</span><span class="sxs-lookup"><span data-stu-id="9eae6-102">This class is used to represent the list of child activities for a <xref:System.Workflow.ComponentModel.CompositeActivity>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9eae6-103">Sólo los métodos de llamada derivan de <xref:System.Collections.Generic.IList%601> y no <xref:System.Collections.Generic.List%601>, como usar <xref:System.Workflow.ComponentModel.ActivityCollection.Add%2A> para agregar actividades en lugar de <xref:System.Collections.Generic.List%601.AddRange%2A>.</span><span class="sxs-lookup"><span data-stu-id="9eae6-103">Only call methods derived from <xref:System.Collections.Generic.IList%601> and not <xref:System.Collections.Generic.List%601>, such as using <xref:System.Workflow.ComponentModel.ActivityCollection.Add%2A> to add activities instead of <xref:System.Collections.Generic.List%601.AddRange%2A>.</span></span> <span data-ttu-id="9eae6-104">Llamar a métodos derivados de <xref:System.Collections.Generic.List%601> tendrá consecuencias inesperadas.</span><span class="sxs-lookup"><span data-stu-id="9eae6-104">Calling methods derived from <xref:System.Collections.Generic.List%601> will have unexpected consequences.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9eae6-105">El ejemplo siguiente muestra el acceso de <xref:System.Workflow.ComponentModel.ActivityCollection> que es el miembro de una clase de actividad compuesta que contiene todas las actividades secundarias.</span><span class="sxs-lookup"><span data-stu-id="9eae6-105">The following example shows access of the <xref:System.Workflow.ComponentModel.ActivityCollection> which is the member of a composite activity class containing all child activities.</span></span> <span data-ttu-id="9eae6-106">Este ejemplo de código es parte de la muestra Throw SDK y pertenece al archivo ThrowWorkflow.cs.</span><span class="sxs-lookup"><span data-stu-id="9eae6-106">This code example is part of the Using Throw SDK Sample and is from the ThrowWorkflow.cs file.</span></span> <span data-ttu-id="9eae6-107">Para obtener más información, consulte [mediante la actividad ThrowActivity](https://msdn.microsoft.com/library/82bc0fef-d78a-4750-82b4-e4cb397a10f1).</span><span class="sxs-lookup"><span data-stu-id="9eae6-107">For more information, see [Using the ThrowActivity Activity](https://msdn.microsoft.com/library/82bc0fef-d78a-4750-82b4-e4cb397a10f1).</span></span>  
  
 [!code-csharp[WF_Samples#179](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets11.cs#179)]
 [!code-vb[WF_Samples#179](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets11.vb#179)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ActivityCollection (System.Workflow.ComponentModel.Activity owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Workflow.ComponentModel.Activity owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.ActivityCollection.#ctor(System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (owner As Activity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ActivityCollection(System::Workflow::ComponentModel::Activity ^ owner);" />
      <MemberSignature Language="F#" Value="new System.Workflow.ComponentModel.ActivityCollection : System.Workflow.ComponentModel.Activity -&gt; System.Workflow.ComponentModel.ActivityCollection" Usage="new System.Workflow.ComponentModel.ActivityCollection owner" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="owner"><span data-ttu-id="9eae6-108"><see cref="T:System.Workflow.ComponentModel.Activity" /> designó como poseer esta instancia.</span><span class="sxs-lookup"><span data-stu-id="9eae6-108">The <see cref="T:System.Workflow.ComponentModel.Activity" /> designated as owning this instance.</span></span></param>
        <summary><span data-ttu-id="9eae6-109">Inicializa una nueva instancia de la clase <see cref="T:System.Workflow.ComponentModel.ActivityCollection" />, inicializando una clase <see cref="T:System.Workflow.ComponentModel.Activity" /> de propietario.</span><span class="sxs-lookup"><span data-stu-id="9eae6-109">Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.ActivityCollection" /> class, initializing an owner <see cref="T:System.Workflow.ComponentModel.Activity" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9eae6-110">Ejemplo</span><span class="sxs-lookup"><span data-stu-id="9eae6-110">Example</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9eae6-111"><paramref name="owner" /> es una referencia nula (<see langword="Nothing" /> en Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="9eae6-111"><paramref name="owner" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9eae6-112"><paramref name="owner" /> no es un descendiente de <see cref="T:System.Workflow.ComponentModel.Activity" />.</span><span class="sxs-lookup"><span data-stu-id="9eae6-112"><paramref name="owner" /> is not a descendent of <see cref="T:System.Workflow.ComponentModel.Activity" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Workflow.ComponentModel.Activity item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Workflow.ComponentModel.Activity item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.ActivityCollection.Add(System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (item As Activity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::Workflow::ComponentModel::Activity ^ item);" />
      <MemberSignature Language="F#" Value="override this.Add : System.Workflow.ComponentModel.Activity -&gt; unit" Usage="activityCollection.Add item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="9eae6-113"><see cref="T:System.Workflow.ComponentModel.Activity" /> que se va a agregar a <see cref="T:System.Collections.ICollection" />.</span><span class="sxs-lookup"><span data-stu-id="9eae6-113">The <see cref="T:System.Workflow.ComponentModel.Activity" /> to be added to the <see cref="T:System.Collections.ICollection" />.</span></span></param>
        <summary><span data-ttu-id="9eae6-114">Agrega <see cref="T:System.Workflow.ComponentModel.Activity" /> a <see cref="T:System.Collections.ICollection" />.</span><span class="sxs-lookup"><span data-stu-id="9eae6-114">Adds the <see cref="T:System.Workflow.ComponentModel.Activity" /> to the <see cref="T:System.Collections.ICollection" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9eae6-115">El ejemplo siguiente muestra el acceso de <xref:System.Workflow.ComponentModel.ActivityCollection> que es el miembro de una clase de actividad compuesta que contiene todas las actividades secundarias.</span><span class="sxs-lookup"><span data-stu-id="9eae6-115">The following example shows access of the <xref:System.Workflow.ComponentModel.ActivityCollection> which is the member of a composite activity class containing all child activities.</span></span> <span data-ttu-id="9eae6-116">Este ejemplo también muestra el uso de <xref:System.Workflow.ComponentModel.ActivityCollection.Add%2A>.</span><span class="sxs-lookup"><span data-stu-id="9eae6-116">This example illustrates the use of <xref:System.Workflow.ComponentModel.ActivityCollection.Add%2A>.</span></span> <span data-ttu-id="9eae6-117">Este ejemplo de código es parte de la muestra de SDK Iniciar y pertenece al archivo ThrowWorkflow.cs.</span><span class="sxs-lookup"><span data-stu-id="9eae6-117">This code example is part of the Throw SDK sample and is from the ThrowWorkflow.cs file.</span></span> <span data-ttu-id="9eae6-118">Para obtener más información, consulte [mediante la actividad ThrowActivity](https://msdn.microsoft.com/library/82bc0fef-d78a-4750-82b4-e4cb397a10f1).</span><span class="sxs-lookup"><span data-stu-id="9eae6-118">For more information, see [Using the ThrowActivity Activity](https://msdn.microsoft.com/library/82bc0fef-d78a-4750-82b4-e4cb397a10f1).</span></span>  
  
 [!code-csharp[WF_Samples#179](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets11.cs#179)]
 [!code-vb[WF_Samples#179](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets11.vb#179)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.ActivityCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="override this.Clear : unit -&gt; unit" Usage="activityCollection.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9eae6-119">Elimina todos <see cref="T:System.Workflow.ComponentModel.Activity" /> de <see cref="T:System.Collections.ICollection" />.</span><span class="sxs-lookup"><span data-stu-id="9eae6-119">Removes every <see cref="T:System.Workflow.ComponentModel.Activity" /> from the <see cref="T:System.Collections.ICollection" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Workflow.ComponentModel.Activity item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Workflow.ComponentModel.Activity item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.ActivityCollection.Contains(System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (item As Activity) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Workflow::ComponentModel::Activity ^ item);" />
      <MemberSignature Language="F#" Value="override this.Contains : System.Workflow.ComponentModel.Activity -&gt; bool" Usage="activityCollection.Contains item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="9eae6-120"><see cref="T:System.Workflow.ComponentModel.Activity" /> aprobándose para la pertenencia.</span><span class="sxs-lookup"><span data-stu-id="9eae6-120">The <see cref="T:System.Workflow.ComponentModel.Activity" /> being tested for membership.</span></span></param>
        <summary><span data-ttu-id="9eae6-121">Proporciona una prueba para la pertenencia de <see cref="T:System.Workflow.ComponentModel.Activity" /> en <see cref="T:System.Collections.ICollection" />.</span><span class="sxs-lookup"><span data-stu-id="9eae6-121">Provides a test for membership of the <see cref="T:System.Workflow.ComponentModel.Activity" /> in the <see cref="T:System.Collections.ICollection" />.</span></span></summary>
        <returns><span data-ttu-id="9eae6-122"><see langword="true" /> si la <see cref="T:System.Workflow.ComponentModel.Activity" /> pertenece a la <see cref="T:System.Collections.ICollection" />; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9eae6-122"><see langword="true" /> if the <see cref="T:System.Workflow.ComponentModel.Activity" /> belongs to the <see cref="T:System.Collections.ICollection" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9eae6-123">Este <xref:System.Collections.ICollection> posee seguridad de tipos.</span><span class="sxs-lookup"><span data-stu-id="9eae6-123">This <xref:System.Collections.ICollection> is type-safe.</span></span> <span data-ttu-id="9eae6-124">Se produce una excepción en tiempo de ejecución si el elemento no es del tipo <xref:System.Workflow.ComponentModel.Activity>.</span><span class="sxs-lookup"><span data-stu-id="9eae6-124">A run-time exception is raised if the item is not of type <xref:System.Workflow.ComponentModel.Activity>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.ActivityCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Workflow.ComponentModel.ActivityCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9eae6-125">Obtiene el número del miembro de <see cref="T:System.Collections.ICollection" />.</span><span class="sxs-lookup"><span data-stu-id="9eae6-125">Gets the number of members of the <see cref="T:System.Collections.ICollection" />.</span></span></summary>
        <value><span data-ttu-id="9eae6-126">Número de miembros de <see cref="T:System.Collections.ICollection" />.</span><span class="sxs-lookup"><span data-stu-id="9eae6-126">The number of members of the <see cref="T:System.Collections.ICollection" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerator&lt;System.Workflow.ComponentModel.Activity&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerator`1&lt;class System.Workflow.ComponentModel.Activity&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.ActivityCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator(Of Activity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerator&lt;System::Workflow::ComponentModel::Activity ^&gt; ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="override this.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;System.Workflow.ComponentModel.Activity&gt;" Usage="activityCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Workflow.ComponentModel.Activity&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9eae6-127">Implementa una interfaz de enumeración a <see cref="T:System.Collections.ICollection" />.</span><span class="sxs-lookup"><span data-stu-id="9eae6-127">Implements an enumeration interface to the <see cref="T:System.Collections.ICollection" />.</span></span></summary>
        <returns><span data-ttu-id="9eae6-128">Enumerador que puede iterar por la instancia de <see cref="T:System.Collections.ReadOnlyCollectionBase" />.</span><span class="sxs-lookup"><span data-stu-id="9eae6-128">An enumerator that can iterate through the <see cref="T:System.Collections.ReadOnlyCollectionBase" /> instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9eae6-129">Los enumeradores sólo habilitan la lectura de los datos de la colección.</span><span class="sxs-lookup"><span data-stu-id="9eae6-129">Enumerators only enable reading the data in the collection.</span></span> <span data-ttu-id="9eae6-130">No puede usar enumeradores para modificar la colección subyacente.</span><span class="sxs-lookup"><span data-stu-id="9eae6-130">You cannot use enumerators to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="9eae6-131">Inicialmente, el enumerador se coloca delante del primer elemento de la colección.</span><span class="sxs-lookup"><span data-stu-id="9eae6-131">To begin, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="9eae6-132"><xref:System.Collections.IEnumerator.Reset%2A> también devuelve el enumerador a esta posición.</span><span class="sxs-lookup"><span data-stu-id="9eae6-132"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span> <span data-ttu-id="9eae6-133">En esta posición, la llamada a <xref:System.Collections.IEnumerator.Current%2A> provoca una excepción.</span><span class="sxs-lookup"><span data-stu-id="9eae6-133">At this position, calling <xref:System.Collections.IEnumerator.Current%2A> raises an exception.</span></span> <span data-ttu-id="9eae6-134">Por lo tanto, debe llamar a <xref:System.Collections.IEnumerator.MoveNext%2A> para adelantar el enumerador hasta el primer elemento de la colección antes de leer el valor de <xref:System.Collections.IEnumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="9eae6-134">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="9eae6-135"><xref:System.Collections.IEnumerator.Current%2A> devuelve el mismo objeto hasta que se llama a <xref:System.Collections.IEnumerator.MoveNext%2A> o a <xref:System.Collections.IEnumerator.Reset%2A>.</span><span class="sxs-lookup"><span data-stu-id="9eae6-135"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="9eae6-136"><xref:System.Collections.IEnumerator.MoveNext%2A> establece <xref:System.Collections.IEnumerator.Current%2A> en el siguiente elemento.</span><span class="sxs-lookup"><span data-stu-id="9eae6-136"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="9eae6-137">Cuando se pasa el final de la colección, el enumerador se coloca detrás del último elemento de la colección y si se llama al método <xref:System.Collections.IEnumerator.MoveNext%2A> devuelve `false`.</span><span class="sxs-lookup"><span data-stu-id="9eae6-137">After the end of the collection is passed, the enumerator is positioned after the last element in the collection, and calling <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="9eae6-138">Si la última llamada a <xref:System.Collections.IEnumerator.MoveNext%2A> ha devuelto `false` y se realiza una llamada a la propiedad <xref:System.Collections.IEnumerator.Current%2A>, se produce una excepción.</span><span class="sxs-lookup"><span data-stu-id="9eae6-138">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, calling <xref:System.Collections.IEnumerator.Current%2A> raises an exception.</span></span>  
  
 <span data-ttu-id="9eae6-139">Para volver a establecer el valor de `Current` en el primer elemento de la colección, se puede llamar primero a `Reset` y después a <xref:System.Collections.IEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="9eae6-139">To set `Current` to the first element of the collection again, you can call `Reset` followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="9eae6-140">Un enumerador es válido mientras la colección no cambie.</span><span class="sxs-lookup"><span data-stu-id="9eae6-140">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="9eae6-141">Si se realizan cambios en la colección (como agregar, modificar o eliminar elementos), el enumerador queda invalidado de forma irreversible y la siguiente llamada a <xref:System.Collections.IEnumerator.MoveNext%2A> o `Reset` provoca un <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="9eae6-141">If changes are made to the collection, such as adding, modifying or deleting elements, the enumerator is irreversibly invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or `Reset` raises an <xref:System.InvalidOperationException> .</span></span> <span data-ttu-id="9eae6-142">Si la colección se modifica entre <xref:System.Collections.IEnumerator.MoveNext%2A> y <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> devolverá el elemento en el que está establecido, aunque el enumerador ya haya quedado invalidado.</span><span class="sxs-lookup"><span data-stu-id="9eae6-142">If the collection is modified between <xref:System.Collections.IEnumerator.MoveNext%2A> and <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> will return the element that it is set to, even if the enumerator is already invalidated.</span></span>  
  
 <span data-ttu-id="9eae6-143">El enumerador no tiene acceso exclusivo a la colección y, por tanto, la enumeración en una colección no es intrínsicamente un procedimiento seguro para subprocesos.</span><span class="sxs-lookup"><span data-stu-id="9eae6-143">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="9eae6-144">Incluso cuando una colección está sincronizada, otros subprocesos podrían modificar la colección.</span><span class="sxs-lookup"><span data-stu-id="9eae6-144">Even when a collection is synchronized, other threads could still modify the collection.</span></span> <span data-ttu-id="9eae6-145">Esto hace que el enumerador produzca una excepción.</span><span class="sxs-lookup"><span data-stu-id="9eae6-145">This causes the enumerator to raise an exception.</span></span> <span data-ttu-id="9eae6-146">Con el fin de garantizar la seguridad para la ejecución de subprocesos durante la enumeración, se puede bloquear la colección durante toda la enumeración o detectar las excepciones resultantes de los cambios realizados por otros subprocesos.</span><span class="sxs-lookup"><span data-stu-id="9eae6-146">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Workflow.ComponentModel.Activity item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Workflow.ComponentModel.Activity item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.ActivityCollection.IndexOf(System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (item As Activity) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::Workflow::ComponentModel::Activity ^ item);" />
      <MemberSignature Language="F#" Value="override this.IndexOf : System.Workflow.ComponentModel.Activity -&gt; int" Usage="activityCollection.IndexOf item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.IndexOf(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="9eae6-147">La actividad para la cual se adquiere el índice.</span><span class="sxs-lookup"><span data-stu-id="9eae6-147">The activity for which to acquire the index.</span></span></param>
        <summary><span data-ttu-id="9eae6-148">Obtiene el índice de <see cref="T:System.Workflow.ComponentModel.Activity" /> en el <see cref="T:System.Collections.ICollection" />.</span><span class="sxs-lookup"><span data-stu-id="9eae6-148">Gets the index of the <see cref="T:System.Workflow.ComponentModel.Activity" /> in the <see cref="T:System.Collections.ICollection" />.</span></span></summary>
        <returns><span data-ttu-id="9eae6-149">Índice de <see cref="T:System.Workflow.ComponentModel.Activity" /> en <see cref="T:System.Collections.ICollection" />.</span><span class="sxs-lookup"><span data-stu-id="9eae6-149">The index of the <see cref="T:System.Workflow.ComponentModel.Activity" /> in the <see cref="T:System.Collections.ICollection" />.</span></span> <span data-ttu-id="9eae6-150">De lo contrario -1 (si <see cref="T:System.Workflow.ComponentModel.Activity" /> no está en <see cref="T:System.Collections.ICollection" />).</span><span class="sxs-lookup"><span data-stu-id="9eae6-150">Otherwise -1 (if <see cref="T:System.Workflow.ComponentModel.Activity" /> is not in the <see cref="T:System.Collections.ICollection" />).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9eae6-151">Esta colección posee seguridad de tipos.</span><span class="sxs-lookup"><span data-stu-id="9eae6-151">This collection is type-safe.</span></span> <span data-ttu-id="9eae6-152">Se producirá una excepción en tiempo de ejecución si un elemento no es del tipo <xref:System.Workflow.ComponentModel.Activity>.</span><span class="sxs-lookup"><span data-stu-id="9eae6-152">A run-time exception will be raised if an item is not of type <xref:System.Workflow.ComponentModel.Activity>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, System.Workflow.ComponentModel.Activity item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(int32 index, class System.Workflow.ComponentModel.Activity item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.ActivityCollection.Insert(System.Int32,System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, item As Activity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(int index, System::Workflow::ComponentModel::Activity ^ item);" />
      <MemberSignature Language="F#" Value="override this.Insert : int * System.Workflow.ComponentModel.Activity -&gt; unit" Usage="activityCollection.Insert (index, item)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.Insert(System.Int32,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="9eae6-153">Índice de base cero de la colección en el que se va a insertar el elemento.</span><span class="sxs-lookup"><span data-stu-id="9eae6-153">Zero-based index of the collection at which to insert the item.</span></span></param>
        <param name="item"><span data-ttu-id="9eae6-154"><see cref="T:System.Workflow.ComponentModel.Activity" /> que se va a insertar en la colección.</span><span class="sxs-lookup"><span data-stu-id="9eae6-154">The <see cref="T:System.Workflow.ComponentModel.Activity" /> to be inserted into the collection.</span></span></param>
        <summary><span data-ttu-id="9eae6-155">Inserta el elemento en el índice en <see cref="T:System.Collections.ICollection" />.</span><span class="sxs-lookup"><span data-stu-id="9eae6-155">Inserts the item at the index in the <see cref="T:System.Collections.ICollection" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9eae6-156">Este <xref:System.Collections.ICollection> posee seguridad de tipos.</span><span class="sxs-lookup"><span data-stu-id="9eae6-156">This <xref:System.Collections.ICollection> is type safe.</span></span> <span data-ttu-id="9eae6-157">Se produce una excepción en tiempo de ejecución si un elemento no es del tipo <xref:System.Workflow.ComponentModel.Activity>.</span><span class="sxs-lookup"><span data-stu-id="9eae6-157">A run-time exception is raised if an item is not of type <xref:System.Workflow.ComponentModel.Activity>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9eae6-158">Obtiene un elemento <see cref="T:System.Workflow.ComponentModel.Activity" /> en el <see cref="T:System.Collections.ICollection" /> por nombre o índice.</span><span class="sxs-lookup"><span data-stu-id="9eae6-158">Gets an item <see cref="T:System.Workflow.ComponentModel.Activity" /> in the <see cref="T:System.Collections.ICollection" /> by name or index.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Workflow.ComponentModel.Activity this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.ComponentModel.Activity Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.ActivityCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As Activity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Workflow::ComponentModel::Activity ^ default[int] { System::Workflow::ComponentModel::Activity ^ get(int index); void set(int index, System::Workflow::ComponentModel::Activity ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Workflow.ComponentModel.Activity with get, set" Usage="System.Workflow.ComponentModel.ActivityCollection.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IList`1.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Activity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="9eae6-159">Índice basado en cero en el <see cref="T:System.Collections.ICollection" />.</span><span class="sxs-lookup"><span data-stu-id="9eae6-159">Zero-based index into the <see cref="T:System.Collections.ICollection" />.</span></span></param>
        <summary><span data-ttu-id="9eae6-160">Obtiene o establece la actividad en <see cref="T:System.Collections.ICollection" /> según el índice.</span><span class="sxs-lookup"><span data-stu-id="9eae6-160">Gets or sets the activity in the <see cref="T:System.Collections.ICollection" /> based on the index.</span></span></summary>
        <value><span data-ttu-id="9eae6-161">Una actividad de miembro de <see cref="T:System.Collections.ICollection" />, cuyo el índice en <see cref="T:System.Collections.ICollection" /> se especificó en la llamada.</span><span class="sxs-lookup"><span data-stu-id="9eae6-161">A member activity of the <see cref="T:System.Collections.ICollection" />, whose index in the <see cref="T:System.Collections.ICollection" /> was specified in the call.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="9eae6-162"><paramref name="index" /> no es un índice válido para <see cref="T:System.Collections.IList" />.</span><span class="sxs-lookup"><span data-stu-id="9eae6-162"><paramref name="index" /> is not a valid index in <see cref="T:System.Collections.IList" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="9eae6-163">La propiedad está establecida y <see cref="T:System.Collections.IList" /> es de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="9eae6-163">The property is set and the <see cref="T:System.Collections.IList" /> is read-only.</span></span></exception>
        <exception cref="T:System.Exception"><span data-ttu-id="9eae6-164">Se ha intentado establecer <see cref="T:System.Object" /> que no es un <see cref="T:System.Workflow.ComponentModel.Activity" />.</span><span class="sxs-lookup"><span data-stu-id="9eae6-164">An attempt to set to an <see cref="T:System.Object" /> that is not an <see cref="T:System.Workflow.ComponentModel.Activity" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Workflow.ComponentModel.Activity this[string key] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.ComponentModel.Activity Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.ActivityCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(key As String) As Activity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Workflow::ComponentModel::Activity ^ default[System::String ^] { System::Workflow::ComponentModel::Activity ^ get(System::String ^ key); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : System.Workflow.ComponentModel.Activity" Usage="System.Workflow.ComponentModel.ActivityCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Activity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="9eae6-165">Identificador único para la actividad en <see cref="T:System.Collections.ICollection" />.</span><span class="sxs-lookup"><span data-stu-id="9eae6-165">Unique identifier for activity in the <see cref="T:System.Collections.ICollection" />.</span></span></param>
        <summary><span data-ttu-id="9eae6-166">Obtiene la actividad en <see cref="T:System.Collections.ICollection" /> basada en la cadena que es una clave única.</span><span class="sxs-lookup"><span data-stu-id="9eae6-166">Gets the activity in the <see cref="T:System.Collections.ICollection" /> based on the string which is a unique key.</span></span></summary>
        <value><span data-ttu-id="9eae6-167">Un miembro <see cref="T:System.Workflow.ComponentModel.Activity" /> de <see cref="T:System.Collections.ICollection" />; la clave en <see cref="T:System.Collections.ICollection" /> que se especificó en la llamada.</span><span class="sxs-lookup"><span data-stu-id="9eae6-167">A member <see cref="T:System.Workflow.ComponentModel.Activity" /> of the <see cref="T:System.Collections.ICollection" />; the key in the <see cref="T:System.Collections.ICollection" /> which was specified in the call.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9eae6-168">Si no hay <xref:System.Workflow.ComponentModel.Activity> en <xref:System.Collections.ICollection> con clave especificada, se producirá una excepción.</span><span class="sxs-lookup"><span data-stu-id="9eae6-168">If there is no <xref:System.Workflow.ComponentModel.Activity> in the <xref:System.Collections.ICollection> with specified key, an exception is raised.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ListChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs&gt; ListChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs&gt; ListChanged" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.ComponentModel.ActivityCollection.ListChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event ListChanged As EventHandler(Of ActivityCollectionChangeEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Workflow::ComponentModel::ActivityCollectionChangeEventArgs ^&gt; ^ ListChanged;" />
      <MemberSignature Language="F#" Value="member this.ListChanged : EventHandler&lt;System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs&gt; " Usage="member this.ListChanged : System.EventHandler&lt;System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9eae6-169">Se eleva cuando se realiza un cambio en el contenido de <see cref="T:System.Collections.ICollection" />.</span><span class="sxs-lookup"><span data-stu-id="9eae6-169">Raised whenever a change is made to the contents of this <see cref="T:System.Collections.ICollection" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9eae6-170">En este contexto, agregar o quitar los miembros genera el evento.</span><span class="sxs-lookup"><span data-stu-id="9eae6-170">In this context, adding or removing members raises the event.</span></span> <span data-ttu-id="9eae6-171">Al modificar un miembro, no se genera este evento.</span><span class="sxs-lookup"><span data-stu-id="9eae6-171">Modifying a member does not raise this event.</span></span>  
  
 <span data-ttu-id="9eae6-172">Cuando se crea un delegado <xref:System.Workflow.ComponentModel.ActivityCollection>, se identifica el método que controlará el evento.</span><span class="sxs-lookup"><span data-stu-id="9eae6-172">When you create an <xref:System.Workflow.ComponentModel.ActivityCollection> delegate, you identify the method that will handle the event.</span></span> <span data-ttu-id="9eae6-173">Para asociar el evento al controlador, se debe agregar una instancia del delegado al evento.</span><span class="sxs-lookup"><span data-stu-id="9eae6-173">To associate the event with your event handler, add an instance of the delegate to the event.</span></span> <span data-ttu-id="9eae6-174">Siempre que se produce el evento, se llama a su controlador, a menos que se quite el delegado.</span><span class="sxs-lookup"><span data-stu-id="9eae6-174">The event handler is called whenever the event occurs, unless you remove the delegate.</span></span> <span data-ttu-id="9eae6-175">Para obtener más información sobre los delegados de controlador de eventos, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="9eae6-175">For more information about event-handler delegates, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (System.Workflow.ComponentModel.Activity item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Remove(class System.Workflow.ComponentModel.Activity item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.ActivityCollection.Remove(System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (item As Activity) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Remove(System::Workflow::ComponentModel::Activity ^ item);" />
      <MemberSignature Language="F#" Value="override this.Remove : System.Workflow.ComponentModel.Activity -&gt; bool" Usage="activityCollection.Remove item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="9eae6-176">La actividad que se va a quitar de <see cref="T:System.Collections.ICollection" />.</span><span class="sxs-lookup"><span data-stu-id="9eae6-176">The activity to remove from the <see cref="T:System.Collections.ICollection" />.</span></span></param>
        <summary><span data-ttu-id="9eae6-177">Elimina la actividad especificada en la llamada de <see cref="T:System.Collections.ICollection" />.</span><span class="sxs-lookup"><span data-stu-id="9eae6-177">Removes the activity specified in the call from the <see cref="T:System.Collections.ICollection" />.</span></span></summary>
        <returns><span data-ttu-id="9eae6-178">Es <see langword="true" /> si la operación se realiza correctamente; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9eae6-178"><see langword="true" /> if the operation succeeded; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9eae6-179">Este <xref:System.Collections.ICollection> posee seguridad de tipos.</span><span class="sxs-lookup"><span data-stu-id="9eae6-179">This <xref:System.Collections.ICollection> is type safe.</span></span> <span data-ttu-id="9eae6-180">Se produce una excepción en tiempo de ejecución si un elemento no es del tipo <xref:System.Workflow.ComponentModel.Activity>.</span><span class="sxs-lookup"><span data-stu-id="9eae6-180">A run-time exception is raised if an item is not of type <xref:System.Workflow.ComponentModel.Activity>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.ActivityCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="override this.RemoveAt : int -&gt; unit" Usage="activityCollection.RemoveAt index" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.RemoveAt(System.Int32)</InterfaceMember>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="9eae6-181">Coloque en un índice de base cero para quitar la actividad de la colección.</span><span class="sxs-lookup"><span data-stu-id="9eae6-181">Position in a zero-based index to remove the activity from the collection.</span></span></param>
        <summary><span data-ttu-id="9eae6-182">Elimina el <see cref="T:System.Workflow.ComponentModel.Activity" /> en el <see cref="T:System.Collections.ICollection" /> en el <paramref name="index" /> especificado</span><span class="sxs-lookup"><span data-stu-id="9eae6-182">Removes the <see cref="T:System.Workflow.ComponentModel.Activity" /> in the <see cref="T:System.Collections.ICollection" /> at the specified <paramref name="index" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9eae6-183">Si el índice no es válido se produce una excepción en tiempo de ejecución (fuera de intervalo).</span><span class="sxs-lookup"><span data-stu-id="9eae6-183">A run-time exception occurs if the index is not valid (out of range).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Workflow.ComponentModel.Activity&gt;.Add">
      <MemberSignature Language="C#" Value="void ICollection&lt;Activity&gt;.Add (System.Workflow.ComponentModel.Activity item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.Generic.ICollection&lt;System.Workflow.ComponentModel.Activity&gt;.Add(class System.Workflow.ComponentModel.Activity item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection&lt;System#Workflow#ComponentModel#Activity&gt;#Add(System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="VB.NET" Value="Sub Add (item As Activity) Implements ICollection(Of Activity).Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.Generic.ICollection&lt;System.Workflow.ComponentModel.Activity&gt;.Add(System::Workflow::ComponentModel::Activity ^ item) = System::Collections::Generic::ICollection&lt;System::Workflow::ComponentModel::Activity ^&gt;::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="9eae6-184"><see cref="T:System.Object" /> que se va a agregar a <see cref="T:System.Collections.IList" />.</span><span class="sxs-lookup"><span data-stu-id="9eae6-184">The <see cref="T:System.Object" /> to add to the <see cref="T:System.Collections.IList" />.</span></span></param>
        <summary><span data-ttu-id="9eae6-185">Agrega un objeto a <see cref="T:System.Collections.IList" /> al final de <see cref="T:System.Collections.IList" />.</span><span class="sxs-lookup"><span data-stu-id="9eae6-185">Adds an object to the <see cref="T:System.Collections.IList" /> at the end of the <see cref="T:System.Collections.IList" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9eae6-186">Producir una excepción con el mensaje de error "Error_InvalidListItem" si <xref:System.Object> no es del tipo <xref:System.Workflow.ComponentModel.Activity>.</span><span class="sxs-lookup"><span data-stu-id="9eae6-186">Raises an exception with the error message "Error_InvalidListItem" if the <xref:System.Object> is not of type <xref:System.Workflow.ComponentModel.Activity>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Workflow.ComponentModel.Activity&gt;.Clear">
      <MemberSignature Language="C#" Value="void ICollection&lt;Activity&gt;.Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.Generic.ICollection&lt;System.Workflow.ComponentModel.Activity&gt;.Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection&lt;System#Workflow#ComponentModel#Activity&gt;#Clear" />
      <MemberSignature Language="VB.NET" Value="Sub Clear () Implements ICollection(Of Activity).Clear" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.Generic.ICollection&lt;System.Workflow.ComponentModel.Activity&gt;.Clear() = System::Collections::Generic::ICollection&lt;System::Workflow::ComponentModel::Activity ^&gt;::Clear;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9eae6-187">Borra todas las actividades de <see cref="T:System.Collections.IList" />.</span><span class="sxs-lookup"><span data-stu-id="9eae6-187">Clears all activities from the <see cref="T:System.Collections.IList" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9eae6-188">La propiedad <xref:System.Collections.CollectionBase.Count%2A> es cero una vez finalizada esta operación.</span><span class="sxs-lookup"><span data-stu-id="9eae6-188">The <xref:System.Collections.CollectionBase.Count%2A> property is zero after this operation is finished.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Workflow.ComponentModel.Activity&gt;.Contains">
      <MemberSignature Language="C#" Value="bool ICollection&lt;Activity&gt;.Contains (System.Workflow.ComponentModel.Activity item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.Generic.ICollection&lt;System.Workflow.ComponentModel.Activity&gt;.Contains(class System.Workflow.ComponentModel.Activity item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection&lt;System#Workflow#ComponentModel#Activity&gt;#Contains(System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (item As Activity) As Boolean Implements ICollection(Of Activity).Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.Generic.ICollection&lt;System.Workflow.ComponentModel.Activity&gt;.Contains(System::Workflow::ComponentModel::Activity ^ item) = System::Collections::Generic::ICollection&lt;System::Workflow::ComponentModel::Activity ^&gt;::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="9eae6-189">Objeto <see cref="T:System.Object" /> que se va a buscar en la interfaz <see cref="T:System.Collections.IList" />.</span><span class="sxs-lookup"><span data-stu-id="9eae6-189">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.IList" />.</span></span></param>
        <summary><span data-ttu-id="9eae6-190">Obtiene un valor que indica si <see cref="T:System.Object" /> es un miembro de la colección.</span><span class="sxs-lookup"><span data-stu-id="9eae6-190">Gets a value that indicates whether the <see cref="T:System.Object" /> is a member of the collection.</span></span></summary>
        <returns><span data-ttu-id="9eae6-191"><see langword="true" /> si el valor está en la colección; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9eae6-191"><see langword="true" /> if value is in the collection; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9eae6-192">Producir una excepción con el mensaje de error "Error_InvalidListItem" si <xref:System.Object> no es del tipo <xref:System.Workflow.ComponentModel.Activity>.</span><span class="sxs-lookup"><span data-stu-id="9eae6-192">Raises an exception with the error message "Error_InvalidListItem" if the <xref:System.Object> is not of type <xref:System.Workflow.ComponentModel.Activity>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Workflow.ComponentModel.Activity&gt;.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection&lt;Activity&gt;.CopyTo (System.Workflow.ComponentModel.Activity[] array, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.Generic.ICollection&lt;System.Workflow.ComponentModel.Activity&gt;.CopyTo(class System.Workflow.ComponentModel.Activity[] array, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection&lt;System#Workflow#ComponentModel#Activity&gt;#CopyTo(System.Workflow.ComponentModel.Activity[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub CopyTo (array As Activity(), arrayIndex As Integer) Implements ICollection(Of Activity).CopyTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.Generic.ICollection&lt;System.Workflow.ComponentModel.Activity&gt;.CopyTo(cli::array &lt;System::Workflow::ComponentModel::Activity ^&gt; ^ array, int arrayIndex) = System::Collections::Generic::ICollection&lt;System::Workflow::ComponentModel::Activity ^&gt;::CopyTo;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Workflow.ComponentModel.Activity[]" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="9eae6-193"><see cref="T:System.Array" /> que es el destino de la operación de copia.</span><span class="sxs-lookup"><span data-stu-id="9eae6-193">The <see cref="T:System.Array" /> which is the target of the copy operation.</span></span></param>
        <param name="arrayIndex"><span data-ttu-id="9eae6-194">Índice de base cero en el <see cref="T:System.Collections.ICollection" /> donde se comienza a copiar.</span><span class="sxs-lookup"><span data-stu-id="9eae6-194">The zero-based index within the <see cref="T:System.Collections.ICollection" /> where the copy starts.</span></span></param>
        <summary><span data-ttu-id="9eae6-195">Copia los elementos de <see cref="T:System.Collections.ICollection" /> en <see cref="T:System.Array" />, empezando por un índice determinado de <see cref="T:System.Array" />.</span><span class="sxs-lookup"><span data-stu-id="9eae6-195">Copies the elements of the <see cref="T:System.Collections.ICollection" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9eae6-196"><paramref name="array" /> es una referencia nula (<see langword="Nothing" /> en Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="9eae6-196"><paramref name="array" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="9eae6-197"><paramref name="index" /> es menor que cero.</span><span class="sxs-lookup"><span data-stu-id="9eae6-197"><paramref name="index" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9eae6-198"><paramref name="array" /> es multidimensional.</span><span class="sxs-lookup"><span data-stu-id="9eae6-198"><paramref name="array" /> is multidimensional.</span></span>  
  
 <span data-ttu-id="9eae6-199"><paramref name="index" /> es igual o mayor que la longitud de la <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="9eae6-199"><paramref name="index" /> is equal to or greater than the length of <paramref name="array" />.</span></span>  
  
<span data-ttu-id="9eae6-200">El número de elementos de la <see cref="T:System.Collections.ICollection" /> de origen es mayor que el espacio disponible desde <paramref name="index" /> hasta el final de la matriz de destino.</span><span class="sxs-lookup"><span data-stu-id="9eae6-200">The number of elements in the source <see cref="T:System.Collections.ICollection" /> is greater than the available space from <paramref name="index" /> to the end of the destination array.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="9eae6-201">El tipo <see cref="T:System.Workflow.ComponentModel.Activity" /> no puede convertirse automáticamente al tipo del parámetro <paramref name="array" /> de destino.</span><span class="sxs-lookup"><span data-stu-id="9eae6-201">The type <see cref="T:System.Workflow.ComponentModel.Activity" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Workflow.ComponentModel.Activity&gt;.Count">
      <MemberSignature Language="C#" Value="int System.Collections.Generic.ICollection&lt;System.Workflow.ComponentModel.Activity&gt;.Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Collections.Generic.ICollection&lt;System.Workflow.ComponentModel.Activity&gt;.Count" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection&lt;System#Workflow#ComponentModel#Activity&gt;#Count" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Count As Integer Implements ICollection(Of Activity).Count" />
      <MemberSignature Language="C++ CLI" Value="property int System::Collections::Generic::ICollection&lt;System::Workflow::ComponentModel::Activity&gt;::Count { int get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.Generic.ICollection&lt;System.Workflow.ComponentModel.Activity&gt;.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9eae6-202">Obtiene el número de elementos incluidos en <see cref="T:System.Collections.Generic.ICollection`1" />.</span><span class="sxs-lookup"><span data-stu-id="9eae6-202">Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1" />.</span></span></summary>
        <value><span data-ttu-id="9eae6-203">Número de elementos contenidos en <see cref="T:System.Collections.Generic.ICollection`1" />.</span><span class="sxs-lookup"><span data-stu-id="9eae6-203">The number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Workflow.ComponentModel.Activity&gt;.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.Generic.ICollection&lt;System.Workflow.ComponentModel.Activity&gt;.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.Generic.ICollection&lt;System.Workflow.ComponentModel.Activity&gt;.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection&lt;System#Workflow#ComponentModel#Activity&gt;#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements ICollection(Of Activity).IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::Generic::ICollection&lt;System::Workflow::ComponentModel::Activity&gt;::IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.Generic.ICollection&lt;System.Workflow.ComponentModel.Activity&gt;.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9eae6-204">Obtiene un valor que indica si <see cref="T:System.Collections.IList" /> es de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="9eae6-204">Gets a value that indicates whether the <see cref="T:System.Collections.IList" /> is read-only.</span></span></summary>
        <value><span data-ttu-id="9eae6-205">Es <see langword="true" /> si la interfaz <see cref="T:System.Collections.IList" /> es de solo lectura; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9eae6-205"><see langword="true" /> if the <see cref="T:System.Collections.IList" /> is read-only; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9eae6-206">Una colección de solo lectura no permite que se agreguen, quiten o modifiquen elementos una vez que se ha creado.</span><span class="sxs-lookup"><span data-stu-id="9eae6-206">A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Workflow.ComponentModel.Activity&gt;.Remove">
      <MemberSignature Language="C#" Value="bool ICollection&lt;Activity&gt;.Remove (System.Workflow.ComponentModel.Activity item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.Generic.ICollection&lt;System.Workflow.ComponentModel.Activity&gt;.Remove(class System.Workflow.ComponentModel.Activity item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection&lt;System#Workflow#ComponentModel#Activity&gt;#Remove(System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="VB.NET" Value="Function Remove (item As Activity) As Boolean Implements ICollection(Of Activity).Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.Generic.ICollection&lt;System.Workflow.ComponentModel.Activity&gt;.Remove(System::Workflow::ComponentModel::Activity ^ item) = System::Collections::Generic::ICollection&lt;System::Workflow::ComponentModel::Activity ^&gt;::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="9eae6-207">Objeto que se va a quitar de <see cref="T:System.Collections.Generic.ICollection`1" />.</span><span class="sxs-lookup"><span data-stu-id="9eae6-207">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1" />.</span></span></param>
        <summary><span data-ttu-id="9eae6-208">Quita la primera aparición de un objeto específico de la interfaz <see cref="T:System.Collections.Generic.ICollection`1" />.</span><span class="sxs-lookup"><span data-stu-id="9eae6-208">Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1" />.</span></span></summary>
        <returns><span data-ttu-id="9eae6-209">Es <see langword="true" /> si <paramref name="item" /> se ha quitado correctamente de la interfaz <see cref="T:System.Collections.Generic.ICollection`1" />; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9eae6-209"><see langword="true" /> if <paramref name="item" /> was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="9eae6-210">Este método también devuelve <see langword="false" /> si no se encuentra <paramref name="item" /> en la <see cref="T:System.Collections.Generic.ICollection`1" /> original.</span><span class="sxs-lookup"><span data-stu-id="9eae6-210">This method also returns <see langword="false" /> if <paramref name="item" /> is not found in the original <see cref="T:System.Collections.Generic.ICollection`1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9eae6-211">Las implementaciones pueden variar en la forma en que determinan la igualdad de los objetos; por ejemplo, <xref:System.Collections.Generic.List%601> utiliza <xref:System.Collections.Generic.Comparer%601.Default%2A>, mientras que <xref:System.Collections.Generic.Dictionary%602> permite al usuario especificar la implementación de <xref:System.Collections.Generic.IComparer%601> que se utilizará para comparar las claves.</span><span class="sxs-lookup"><span data-stu-id="9eae6-211">Implementations can vary in how they determine equality of objects; for example, <xref:System.Collections.Generic.List%601> uses <xref:System.Collections.Generic.Comparer%601.Default%2A>, whereas, <xref:System.Collections.Generic.Dictionary%602> allows the user to specify the <xref:System.Collections.Generic.IComparer%601> implementation to use for comparing keys.</span></span>  
  
 <span data-ttu-id="9eae6-212">En colecciones de elementos contiguos, como listas, los elementos que van a continuación del elemento eliminado se desplazan hacia arriba para ocupar el espacio libre.</span><span class="sxs-lookup"><span data-stu-id="9eae6-212">In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</span></span> <span data-ttu-id="9eae6-213">Si la colección está indizada, también se actualizan los índices de los elementos que se han movido.</span><span class="sxs-lookup"><span data-stu-id="9eae6-213">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="9eae6-214">Este comportamiento no se aplica a las colecciones cuyos elementos se agrupan conceptualmente en sectores de almacenamiento, como una tabla hash.</span><span class="sxs-lookup"><span data-stu-id="9eae6-214">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="9eae6-215"><see langword="ICollection" /> es de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="9eae6-215">The <see langword="ICollection" /> is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;System.Workflow.ComponentModel.Activity&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;System.Workflow.ComponentModel.Activity&gt; IEnumerable&lt;Activity&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;class System.Workflow.ComponentModel.Activity&gt; System.Collections.Generic.IEnumerable&lt;System.Workflow.ComponentModel.Activity&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IEnumerable&lt;System#Workflow#ComponentModel#Activity&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of Activity) Implements IEnumerable(Of Activity).GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerator&lt;System::Workflow::ComponentModel::Activity ^&gt; ^ System.Collections.Generic.IEnumerable&lt;System.Workflow.ComponentModel.Activity&gt;.GetEnumerator() = System::Collections::Generic::IEnumerable&lt;System::Workflow::ComponentModel::Activity ^&gt;::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Workflow.ComponentModel.Activity&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9eae6-216">Devuelve un enumerador que procesa una iteración en la colección.</span><span class="sxs-lookup"><span data-stu-id="9eae6-216">Returns an enumerator that iterates through the collection.</span></span></summary>
        <returns><span data-ttu-id="9eae6-217"><see cref="T:System.Collections.Generic.IEnumerator`1" /> que se puede utilizar para recorrer en iteración la colección.</span><span class="sxs-lookup"><span data-stu-id="9eae6-217">An <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9eae6-218">El `foreach` instrucción del lenguaje C# (`for each` en C++, `For Each` en Visual Basic) oculta la complejidad de los enumeradores.</span><span class="sxs-lookup"><span data-stu-id="9eae6-218">The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) hides the complexity of the enumerators.</span></span> <span data-ttu-id="9eae6-219">Por lo tanto, se recomienda el uso de `foreach`, en lugar de manipular directamente el enumerador.</span><span class="sxs-lookup"><span data-stu-id="9eae6-219">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="9eae6-220">Los enumeradores pueden usarse para leer los datos de la colección, pero no para modificar la colección subyacente.</span><span class="sxs-lookup"><span data-stu-id="9eae6-220">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="9eae6-221">En principio, el enumerador se coloca antes del primer elemento de la colección.</span><span class="sxs-lookup"><span data-stu-id="9eae6-221">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="9eae6-222">En esta posición, el valor de propiedad <xref:System.Collections.Generic.IEnumerator%601.Current%2A> está sin definir.</span><span class="sxs-lookup"><span data-stu-id="9eae6-222">At this position, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> is undefined.</span></span> <span data-ttu-id="9eae6-223">Por lo tanto, debe llamar a <xref:System.Collections.IEnumerator.MoveNext%2A> para adelantar el enumerador hasta el primer elemento de la colección antes de leer el valor de <xref:System.Collections.Generic.IEnumerator%601.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="9eae6-223">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Generic.IEnumerator%601.Current%2A>.</span></span>  
  
 <span data-ttu-id="9eae6-224"><xref:System.Collections.Generic.IEnumerator%601.Current%2A> devuelve el mismo objeto hasta que se llama a <xref:System.Collections.IEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="9eae6-224"><xref:System.Collections.Generic.IEnumerator%601.Current%2A> returns the same object until <xref:System.Collections.IEnumerator.MoveNext%2A> is called.</span></span> <span data-ttu-id="9eae6-225"><xref:System.Collections.IEnumerator.MoveNext%2A> establece <xref:System.Collections.Generic.IEnumerator%601.Current%2A> en el siguiente elemento.</span><span class="sxs-lookup"><span data-stu-id="9eae6-225"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.Generic.IEnumerator%601.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="9eae6-226">Si <xref:System.Collections.IEnumerator.MoveNext%2A> rebasa el final de la colección, el enumerador quedará tras el último elemento de la colección y <xref:System.Collections.IEnumerator.MoveNext%2A> devolverá el valor false.</span><span class="sxs-lookup"><span data-stu-id="9eae6-226">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns false.</span></span> <span data-ttu-id="9eae6-227">Mientras el enumerador permanezca en esta posición, las llamadas a <xref:System.Collections.IEnumerator.MoveNext%2A> seguirán devolviendo el valor false.</span><span class="sxs-lookup"><span data-stu-id="9eae6-227">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return false.</span></span> <span data-ttu-id="9eae6-228">Si la última llamada al <xref:System.Collections.IEnumerator.MoveNext%2A> devuelve el valor false, <xref:System.Collections.Generic.IEnumerator%601.Current%2A>no está definido.</span><span class="sxs-lookup"><span data-stu-id="9eae6-228">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned false, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> is undefined.</span></span> <span data-ttu-id="9eae6-229">No puede volver a establecer la propiedad <xref:System.Collections.Generic.IEnumerator%601.Current%2A> en el primer elemento de la colección, sino que debe crear una nueva instancia del enumerador.</span><span class="sxs-lookup"><span data-stu-id="9eae6-229">You cannot set <xref:System.Collections.Generic.IEnumerator%601.Current%2A> to the first element of the collection again; you must create a new enumerator instance instead.</span></span>  
  
 <span data-ttu-id="9eae6-230">Un enumerador es válido mientras la colección no cambie.</span><span class="sxs-lookup"><span data-stu-id="9eae6-230">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="9eae6-231">Si se hacen cambios en la colección (como agregar, modificar o eliminar elementos), el enumerador queda invalidado permanentemente y su comportamiento es indefinido.</span><span class="sxs-lookup"><span data-stu-id="9eae6-231">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="9eae6-232">El enumerador no tiene acceso exclusivo a la colección y, por tanto, la enumeración en una colección no es intrínsicamente un procedimiento seguro para subprocesos.</span><span class="sxs-lookup"><span data-stu-id="9eae6-232">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="9eae6-233">A fin de garantizar la seguridad de los subprocesos, se puede bloquear la colección durante toda la enumeración.</span><span class="sxs-lookup"><span data-stu-id="9eae6-233">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span> <span data-ttu-id="9eae6-234">Para permitir que varios subprocesos obtengan acceso de lectura y escritura a la colección, debe implementar su propia sincronización.</span><span class="sxs-lookup"><span data-stu-id="9eae6-234">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="9eae6-235">Las implementaciones predeterminadas de las colecciones del espacio de nombres <xref:System.Collections.Generic> no están sincronizadas.</span><span class="sxs-lookup"><span data-stu-id="9eae6-235">Default implementations of collections in the <xref:System.Collections.Generic> namespace are not synchronized.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IList&lt;System.Workflow.ComponentModel.Activity&gt;.IndexOf">
      <MemberSignature Language="C#" Value="int IList&lt;Activity&gt;.IndexOf (System.Workflow.ComponentModel.Activity item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.Generic.IList&lt;System.Workflow.ComponentModel.Activity&gt;.IndexOf(class System.Workflow.ComponentModel.Activity item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IList&lt;System#Workflow#ComponentModel#Activity&gt;#IndexOf(System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (item As Activity) As Integer Implements IList(Of Activity).IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.Generic.IList&lt;System.Workflow.ComponentModel.Activity&gt;.IndexOf(System::Workflow::ComponentModel::Activity ^ item) = System::Collections::Generic::IList&lt;System::Workflow::ComponentModel::Activity ^&gt;::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.IndexOf(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="9eae6-236">Objeto que se va a buscar en <see cref="T:System.Collections.IList" />.</span><span class="sxs-lookup"><span data-stu-id="9eae6-236">The object to locate in the <see cref="T:System.Collections.IList" />.</span></span></param>
        <summary><span data-ttu-id="9eae6-237">Determina el índice de un elemento específico de <see cref="T:System.Collections.IList" />.</span><span class="sxs-lookup"><span data-stu-id="9eae6-237">Determines the index of a specific item in the <see cref="T:System.Collections.IList" />.</span></span></summary>
        <returns><span data-ttu-id="9eae6-238">Devuelve el índice de <paramref name="item" /> si se encuentra en la lista; de lo contrario, devuelve -1.</span><span class="sxs-lookup"><span data-stu-id="9eae6-238">The index of <paramref name="item" /> if found in the list; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9eae6-239">Si un objeto aparece varias veces en la lista, el método `IndexOf` siempre devolverá la primera instancia encontrada.</span><span class="sxs-lookup"><span data-stu-id="9eae6-239">If an object occurs multiple times in the list, the `IndexOf` method always returns the first instance found.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IList&lt;System.Workflow.ComponentModel.Activity&gt;.Insert">
      <MemberSignature Language="C#" Value="void IList&lt;Activity&gt;.Insert (int index, System.Workflow.ComponentModel.Activity item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.Generic.IList&lt;System.Workflow.ComponentModel.Activity&gt;.Insert(int32 index, class System.Workflow.ComponentModel.Activity item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IList&lt;System#Workflow#ComponentModel#Activity&gt;#Insert(System.Int32,System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, item As Activity) Implements IList(Of Activity).Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.Generic.IList&lt;System.Workflow.ComponentModel.Activity&gt;.Insert(int index, System::Workflow::ComponentModel::Activity ^ item) = System::Collections::Generic::IList&lt;System::Workflow::ComponentModel::Activity ^&gt;::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.Insert(System.Int32,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="9eae6-240">La posición de base cero de la inserción.</span><span class="sxs-lookup"><span data-stu-id="9eae6-240">The zero-based position of the insertion.</span></span></param>
        <param name="item"><span data-ttu-id="9eae6-241">Objeto que se va a insertar.</span><span class="sxs-lookup"><span data-stu-id="9eae6-241">The object to insert.</span></span> <span data-ttu-id="9eae6-242">Debe ser del tipo <see cref="T:System.Workflow.ComponentModel.Activity" />.</span><span class="sxs-lookup"><span data-stu-id="9eae6-242">It must be of type <see cref="T:System.Workflow.ComponentModel.Activity" />.</span></span></param>
        <summary><span data-ttu-id="9eae6-243">Inserta una clase <see cref="T:System.Object" /> en <see cref="T:System.Collections.IList" /> en el índice de base cero especificado.</span><span class="sxs-lookup"><span data-stu-id="9eae6-243">Inserts an <see cref="T:System.Object" /> into the <see cref="T:System.Collections.IList" /> at the zero-based index specified.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9eae6-244">Si <xref:System.Object> no se puede convertir a <xref:System.Workflow.ComponentModel.Activity>, se eleva un <xref:System.Exception> personalizado.</span><span class="sxs-lookup"><span data-stu-id="9eae6-244">If the <xref:System.Object> cannot be cast to an <xref:System.Workflow.ComponentModel.Activity>, a custom <xref:System.Exception> is raised.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IList&lt;System.Workflow.ComponentModel.Activity&gt;.Item">
      <MemberSignature Language="C#" Value="System.Workflow.ComponentModel.Activity System.Collections.Generic.IList&lt;System.Workflow.ComponentModel.Activity&gt;.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.ComponentModel.Activity System.Collections.Generic.IList&lt;System.Workflow.ComponentModel.Activity&gt;.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IList&lt;System#Workflow#ComponentModel#Activity&gt;#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Activity Implements IList(Of Activity).Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Workflow::ComponentModel::Activity ^ System::Collections::Generic::IList&lt;System::Workflow::ComponentModel::Activity&gt;::Item[int] { System::Workflow::ComponentModel::Activity ^ get(int index); void set(int index, System::Workflow::ComponentModel::Activity ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Collections.Generic.IList&lt;System.Workflow.ComponentModel.Activity&gt;.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IList`1.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Activity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="9eae6-245">Índice de base cero del elemento que se va a obtener o establecer.</span><span class="sxs-lookup"><span data-stu-id="9eae6-245">The zero-based index of the element to get or set.</span></span></param>
        <summary><span data-ttu-id="9eae6-246">Obtiene o establece el elemento en el índice especificado.</span><span class="sxs-lookup"><span data-stu-id="9eae6-246">Gets or sets the element at the specified index.</span></span></summary>
        <value><span data-ttu-id="9eae6-247"><see cref="T:System.Object" /> en el índice especificado.</span><span class="sxs-lookup"><span data-stu-id="9eae6-247">The <see cref="T:System.Object" /> at the specified index.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9eae6-248">Esta propiedad permite obtener acceso a un elemento específico de la colección mediante la siguiente sintaxis: myCollection[index].</span><span class="sxs-lookup"><span data-stu-id="9eae6-248">This property provides the ability to access a specific element in the collection by using the following syntax: myCollection[index].</span></span>  
  
 <span data-ttu-id="9eae6-249">El lenguaje C# utiliza la palabra clave `this` para definir los indizadores en lugar de implementar la propiedad de `Item`.</span><span class="sxs-lookup"><span data-stu-id="9eae6-249">The C# language uses the `this` keyword to define the indexers instead of implementing the `Item` property.</span></span> <span data-ttu-id="9eae6-250">Visual Basic implementa `Item` como propiedad predeterminada, lo que proporciona la misma funcionalidad de indización.</span><span class="sxs-lookup"><span data-stu-id="9eae6-250">Visual Basic implements `Item` as a default property, which provides the same indexing functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="9eae6-251"><paramref name="index" /> no es un índice válido para <see cref="T:System.Collections.IList" />.</span><span class="sxs-lookup"><span data-stu-id="9eae6-251"><paramref name="index" /> is not a valid index in the <see cref="T:System.Collections.IList" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="9eae6-252"><see langword="ICollection" /> es de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="9eae6-252">The <see langword="ICollection" /> is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IList&lt;System.Workflow.ComponentModel.Activity&gt;.RemoveAt">
      <MemberSignature Language="C#" Value="void IList&lt;Activity&gt;.RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.Generic.IList&lt;System.Workflow.ComponentModel.Activity&gt;.RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IList&lt;System#Workflow#ComponentModel#Activity&gt;#RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub RemoveAt (index As Integer) Implements IList(Of Activity).RemoveAt" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.Generic.IList&lt;System.Workflow.ComponentModel.Activity&gt;.RemoveAt(int index) = System::Collections::Generic::IList&lt;System::Workflow::ComponentModel::Activity ^&gt;::RemoveAt;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="9eae6-253">Índice de base cero del elemento que se va a quitar.</span><span class="sxs-lookup"><span data-stu-id="9eae6-253">The zero-based index of the item to remove.</span></span></param>
        <summary><span data-ttu-id="9eae6-254">Quita el elemento de la interfaz <see cref="T:System.Collections.IList" /> que se encuentra en el índice especificado.</span><span class="sxs-lookup"><span data-stu-id="9eae6-254">Removes the <see cref="T:System.Collections.IList" /> item at the specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9eae6-255">En colecciones de elementos contiguos, como listas, los elementos que van a continuación del elemento eliminado se desplazan hacia arriba para ocupar el espacio libre.</span><span class="sxs-lookup"><span data-stu-id="9eae6-255">In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</span></span> <span data-ttu-id="9eae6-256">Si la colección está indizada, también se actualizan los índices de los elementos que se han movido.</span><span class="sxs-lookup"><span data-stu-id="9eae6-256">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="9eae6-257">Este comportamiento no se aplica a las colecciones cuyos elementos se agrupan conceptualmente en sectores de almacenamiento, como una tabla hash.</span><span class="sxs-lookup"><span data-stu-id="9eae6-257">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="9eae6-258"><paramref name="index" /> no es un índice válido para <see cref="T:System.Collections.IList" />.</span><span class="sxs-lookup"><span data-stu-id="9eae6-258"><paramref name="index" /> is not a valid index in the <see cref="T:System.Collections.IList" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="9eae6-259"><see langword="ICollection" /> es de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="9eae6-259">The <see langword="ICollection" /> is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="9eae6-260"><see cref="T:System.Array" /> que es el destino de la operación de copia.</span><span class="sxs-lookup"><span data-stu-id="9eae6-260">The <see cref="T:System.Array" /> which is the target of the copy operation.</span></span></param>
        <param name="index"><span data-ttu-id="9eae6-261">Índice de base cero en el <see cref="T:System.Collections.ICollection" /> donde se comienza a copiar.</span><span class="sxs-lookup"><span data-stu-id="9eae6-261">The zero-based index within the <see cref="T:System.Collections.ICollection" /> where the copy starts.</span></span></param>
        <summary><span data-ttu-id="9eae6-262">Copia los elementos de <see cref="T:System.Collections.ICollection" /> en <see cref="T:System.Array" />, empezando por un índice determinado de <see cref="T:System.Array" />.</span><span class="sxs-lookup"><span data-stu-id="9eae6-262">Copies the elements of the <see cref="T:System.Collections.ICollection" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.ActivityCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9eae6-263">Obtiene un valor que indica si el acceso al objeto <see cref="T:System.Collections.Generic.ICollection`1" /> está sincronizado (es seguro para la ejecución de subprocesos).</span><span class="sxs-lookup"><span data-stu-id="9eae6-263">Gets a value that indicates whether access to the <see cref="T:System.Collections.Generic.ICollection`1" /> is synchronized, that is thread-safe.</span></span></summary>
        <value><span data-ttu-id="9eae6-264"><see langword="true" /> si se sincroniza el acceso al objeto <see cref="T:System.Collections.Generic.ICollection`1" />, es decir, es seguro para subprocesos; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9eae6-264"><see langword="true" /> if access to the <see cref="T:System.Collections.Generic.ICollection`1" /> is synchronized, that is, thread-safe; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9eae6-265"><xref:System.Collections.ICollection.SyncRoot%2A> devuelve un objeto que puede utilizarse para sincronizar el acceso a <xref:System.Collections.Generic.ICollection%601>.</span><span class="sxs-lookup"><span data-stu-id="9eae6-265"><xref:System.Collections.ICollection.SyncRoot%2A> returns an object, which can be used to synchronize access to the <xref:System.Collections.Generic.ICollection%601>.</span></span>  
  
 <span data-ttu-id="9eae6-266">La mayoría de las clases de colección del espacio de nombres <xref:System.Collections?displayProperty=nameWithType> también implementan un método `Synchronized` que proporciona un contenedor sincronizado alrededor de la colección subyacente.</span><span class="sxs-lookup"><span data-stu-id="9eae6-266">Most collection classes in the <xref:System.Collections?displayProperty=nameWithType> namespace also implement a `Synchronized` method, which provides a synchronized wrapper around the underlying collection.</span></span>  
  
 <span data-ttu-id="9eae6-267">Enumerar una colección no es intrínsecamente un procedimiento seguro para subprocesos.</span><span class="sxs-lookup"><span data-stu-id="9eae6-267">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="9eae6-268">Incluso cuando una colección está sincronizada, otros subprocesos todavía pueden modificarla, lo que hace que el enumerador produzca una excepción.</span><span class="sxs-lookup"><span data-stu-id="9eae6-268">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="9eae6-269">Con el fin de garantizar la seguridad para la ejecución de subprocesos durante la enumeración, se puede bloquear la colección durante toda la enumeración o detectar las excepciones resultantes de los cambios realizados por otros subprocesos.</span><span class="sxs-lookup"><span data-stu-id="9eae6-269">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.ActivityCollection.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9eae6-270">Obtiene un objeto que se puede usar para sincronizar el acceso a <see cref="T:System.Collections.Generic.ICollection`1" />.</span><span class="sxs-lookup"><span data-stu-id="9eae6-270">Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.Generic.ICollection`1" />.</span></span></summary>
        <value><span data-ttu-id="9eae6-271">Objeto que se puede usar para sincronizar el acceso a <see cref="T:System.Collections.Generic.ICollection`1" />.</span><span class="sxs-lookup"><span data-stu-id="9eae6-271">An object that can be used to synchronize access to the <see cref="T:System.Collections.Generic.ICollection`1" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9eae6-272">Para las colecciones cuyo almacenamiento subyacente no esté disponible públicamente, la implementación esperada tan sólo debe devolver la instancia actual.</span><span class="sxs-lookup"><span data-stu-id="9eae6-272">For collections whose underlying store is not publicly available, the expected implementation is to return the current instance.</span></span> <span data-ttu-id="9eae6-273">Hay que tener en cuenta que puede que el puntero que señala a la instancia actual no sea suficiente para las colecciones que contienen otras colecciones, que deben devolver la propiedad <xref:System.Collections.ICollection.SyncRoot%2A> de la colección subyacente.</span><span class="sxs-lookup"><span data-stu-id="9eae6-273">Note that the pointer to the current instance might not be sufficient for collections that wrap other collections; those should return the underlying collection <xref:System.Collections.ICollection.SyncRoot%2A> property.</span></span>  
  
 <span data-ttu-id="9eae6-274">La mayoría de las clases de colección del espacio de nombres <xref:System.Collections?displayProperty=nameWithType> también implementan un método `Synchronized` que proporciona un contenedor sincronizado alrededor de la colección subyacente.</span><span class="sxs-lookup"><span data-stu-id="9eae6-274">Most collection classes in the <xref:System.Collections?displayProperty=nameWithType> namespace also implement a `Synchronized` method, which provides a synchronized wrapper around the underlying collection.</span></span> <span data-ttu-id="9eae6-275">Sin embargo, las clases derivadas pueden proporcionar su propia versión sincronizada de la colección mediante la propiedad <xref:System.Workflow.ComponentModel.ActivityCollection.System%23Collections%23ICollection%23SyncRoot>.</span><span class="sxs-lookup"><span data-stu-id="9eae6-275">However, derived classes can provide their own synchronized version of the collection using the <xref:System.Workflow.ComponentModel.ActivityCollection.System%23Collections%23ICollection%23SyncRoot> property.</span></span> <span data-ttu-id="9eae6-276">El código de la sincronización debe realizar las operaciones en la propiedad <xref:System.Workflow.ComponentModel.ActivityCollection.System%23Collections%23ICollection%23SyncRoot> de la colección, y no directamente en la colección.</span><span class="sxs-lookup"><span data-stu-id="9eae6-276">The synchronizing code must perform operations on the <xref:System.Workflow.ComponentModel.ActivityCollection.System%23Collections%23ICollection%23SyncRoot> property of the collection, not directly on the collection.</span></span> <span data-ttu-id="9eae6-277">De este modo, se garantiza el funcionamiento correcto de las colecciones derivadas de otros objetos.</span><span class="sxs-lookup"><span data-stu-id="9eae6-277">This ensures proper operation of collections that are derived from other objects.</span></span> <span data-ttu-id="9eae6-278">En concreto, mantiene la sincronización correcta con otros subprocesos que podrían modificar al mismo tiempo la instancia de la colección.</span><span class="sxs-lookup"><span data-stu-id="9eae6-278">Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the collection instance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9eae6-279">Devuelve un <see cref="T:System.Collections.IEnumerator" /> que recorre en iteración las <see cref="T:System.Collections.IList" /> subyacentes.</span><span class="sxs-lookup"><span data-stu-id="9eae6-279">Returns an <see cref="T:System.Collections.IEnumerator" /> that iterates through the underlying <see cref="T:System.Collections.IList" />.</span></span></summary>
        <returns><span data-ttu-id="9eae6-280"><see cref="T:System.Collections.IEnumerator" /> que se puede utilizar para recorrer en iteración la colección.</span><span class="sxs-lookup"><span data-stu-id="9eae6-280">An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9eae6-281">Un <xref:System.Collections.IEnumerator> sólo permite la lectura de datos de la colección.</span><span class="sxs-lookup"><span data-stu-id="9eae6-281">An <xref:System.Collections.IEnumerator> only allows for reading the data in the collection.</span></span> <span data-ttu-id="9eae6-282">No puede utilizar un <xref:System.Collections.IEnumerator> para modificar la colección subyacente.</span><span class="sxs-lookup"><span data-stu-id="9eae6-282">You cannot use an <xref:System.Collections.IEnumerator> to modify the underlying collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (value As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ value) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="9eae6-283"><see cref="T:System.Object" /> que se va a agregar a <see cref="T:System.Collections.IList" />.</span><span class="sxs-lookup"><span data-stu-id="9eae6-283">The <see cref="T:System.Object" /> to add to the <see cref="T:System.Collections.IList" />.</span></span></param>
        <summary><span data-ttu-id="9eae6-284">Agrega un objeto a <see cref="T:System.Collections.IList" /> al final de <see cref="T:System.Collections.IList" />.</span><span class="sxs-lookup"><span data-stu-id="9eae6-284">Adds an object to the <see cref="T:System.Collections.IList" /> at the end of the <see cref="T:System.Collections.IList" />.</span></span></summary>
        <returns><span data-ttu-id="9eae6-285">El índice de base cero <see cref="T:System.Object" /> agregado recientemente.</span><span class="sxs-lookup"><span data-stu-id="9eae6-285">The zero-based index of the <see cref="T:System.Object" /> that was just added.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Clear">
      <MemberSignature Language="C#" Value="void IList.Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Clear" />
      <MemberSignature Language="VB.NET" Value="Sub Clear () Implements IList.Clear" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Clear() = System::Collections::IList::Clear;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9eae6-286">Quita todos los <see cref="T:System.Workflow.ComponentModel.Activity" /> de <see cref="T:System.Collections.ICollection" />.</span><span class="sxs-lookup"><span data-stu-id="9eae6-286">Removes all <see cref="T:System.Workflow.ComponentModel.Activity" /> from the <see cref="T:System.Collections.ICollection" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (value As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ value) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="9eae6-287">Objeto <see cref="T:System.Object" /> que se va a buscar en la interfaz <see cref="T:System.Collections.IList" />.</span><span class="sxs-lookup"><span data-stu-id="9eae6-287">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.IList" />.</span></span></param>
        <summary><span data-ttu-id="9eae6-288">Obtiene un valor que indica si <see cref="T:System.Object" /> es un miembro de la colección.</span><span class="sxs-lookup"><span data-stu-id="9eae6-288">Gets a value that indicates whether the <see cref="T:System.Object" /> is a member of the collection.</span></span></summary>
        <returns><span data-ttu-id="9eae6-289"><see langword="true" /> si <paramref name="value" /> está en la colección; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9eae6-289"><see langword="true" /> if <paramref name="value" /> is in the collection; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (value As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ value) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="9eae6-290"><see cref="T:System.Object" /> que se va a indizar.</span><span class="sxs-lookup"><span data-stu-id="9eae6-290">The <see cref="T:System.Object" /> to be indexed.</span></span></param>
        <summary><span data-ttu-id="9eae6-291">Obtiene el índice de base cero de <see cref="T:System.Object" /> en la colección de actividades subyacentes.</span><span class="sxs-lookup"><span data-stu-id="9eae6-291">Gets the zero-based index of the <see cref="T:System.Object" /> in the underlying activities collection.</span></span></summary>
        <returns><span data-ttu-id="9eae6-292">Índice de base cero de <paramref name="value" /> en la colección de actividades subyacentes o -1 no se encuentra en la colección.</span><span class="sxs-lookup"><span data-stu-id="9eae6-292">The zero-based index of the <paramref name="value" /> in the underlying activities collection or -1 if not found in the collection.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9eae6-293"><paramref name="value" /> no es de tipo <see cref="T:System.Workflow.ComponentModel.Activity" /> y el objeto de excepción contiene un mensaje de error "Error_InvalidListItem".</span><span class="sxs-lookup"><span data-stu-id="9eae6-293">The <paramref name="value" /> is not of type <see cref="T:System.Workflow.ComponentModel.Activity" /> and the exception object contains "Error_InvalidListItem" error message.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, value As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ value) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="9eae6-294">La posición de base cero de la inserción.</span><span class="sxs-lookup"><span data-stu-id="9eae6-294">The zero-based position of the insertion.</span></span></param>
        <param name="value"><span data-ttu-id="9eae6-295">Objeto que se va a insertar.</span><span class="sxs-lookup"><span data-stu-id="9eae6-295">The object to insert.</span></span> <span data-ttu-id="9eae6-296">Debe ser del tipo <see cref="T:System.Workflow.ComponentModel.Activity" />.</span><span class="sxs-lookup"><span data-stu-id="9eae6-296">It must be of type <see cref="T:System.Workflow.ComponentModel.Activity" />.</span></span></param>
        <summary><span data-ttu-id="9eae6-297">Inserta una clase <see cref="T:System.Object" /> en <see cref="T:System.Collections.IList" /> en el índice de base cero especificado.</span><span class="sxs-lookup"><span data-stu-id="9eae6-297">Inserts an <see cref="T:System.Object" /> into the <see cref="T:System.Collections.IList" /> at the zero-based index specified.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9eae6-298">Obtiene un valor que indica si la interfaz <see cref="T:System.Collections.IList" /> tiene un tamaño fijo.</span><span class="sxs-lookup"><span data-stu-id="9eae6-298">Gets a value indicating whether the <see cref="T:System.Collections.IList" /> has a fixed size.</span></span></summary>
        <value><span data-ttu-id="9eae6-299">Es <see langword="true" /> si la interfaz <see cref="T:System.Collections.IList" /> tiene un tamaño fijo; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9eae6-299"><see langword="true" /> if the <see cref="T:System.Collections.IList" /> has a fixed size; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9eae6-300">Una colección de tamaño fijo no permite agregar o quitar elementos una vez que se ha creado, pero sí permite modificar los elementos existentes.</span><span class="sxs-lookup"><span data-stu-id="9eae6-300">A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but it allows the modification of existing elements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements IList.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9eae6-301">Obtiene un valor que indica si <see cref="T:System.Collections.Generic.ICollection`1" /> es de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="9eae6-301">Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.</span></span></summary>
        <value><span data-ttu-id="9eae6-302">Es <see langword="true" /> si la interfaz <see cref="T:System.Collections.Generic.ICollection`1" /> es de solo lectura; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9eae6-302"><see langword="true" /> if the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::IList::Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="9eae6-303">Índice basado en cero en el <see cref="T:System.Collections.ICollection" />.</span><span class="sxs-lookup"><span data-stu-id="9eae6-303">Zero-based index into the <see cref="T:System.Collections.ICollection" />.</span></span></param>
        <summary><span data-ttu-id="9eae6-304">Obtiene o establece la actividad en <see cref="T:System.Collections.ICollection" /> según el índice.</span><span class="sxs-lookup"><span data-stu-id="9eae6-304">Gets or sets the activity in the <see cref="T:System.Collections.ICollection" /> based on the index.</span></span></summary>
        <value><span data-ttu-id="9eae6-305">Un <see cref="T:System.Object" />, una actividad de miembro de la <see cref="T:System.Collections.ICollection" />, cuyo índice en el <see cref="T:System.Collections.ICollection" /> se especificó en la llamada.</span><span class="sxs-lookup"><span data-stu-id="9eae6-305">An <see cref="T:System.Object" />, a member activity of the <see cref="T:System.Collections.ICollection" />, whose index in the <see cref="T:System.Collections.ICollection" /> was specified in the call.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (value As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ value) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="9eae6-306"><see cref="T:System.Object" /> que se va a quitar de <see cref="T:System.Collections.IList" />.</span><span class="sxs-lookup"><span data-stu-id="9eae6-306">The <see cref="T:System.Object" /> to remove from the <see cref="T:System.Collections.IList" />.</span></span></param>
        <summary><span data-ttu-id="9eae6-307">Quita la primera aparición de un objeto específico de la interfaz <see cref="T:System.Collections.IList" />.</span><span class="sxs-lookup"><span data-stu-id="9eae6-307">Removes the first occurrence of a specific object from the <see cref="T:System.Collections.IList" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9eae6-308">Los elementos que siguen al elemento eliminado ascienden hasta ocupar la posición vacante.</span><span class="sxs-lookup"><span data-stu-id="9eae6-308">The elements that follow the removed element move up to occupy the vacated spot.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="9eae6-309"><see cref="T:System.Collections.IList" /> es de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="9eae6-309">The <see cref="T:System.Collections.IList" /> is read-only.</span></span>  
  
 <span data-ttu-id="9eae6-310">El objeto <see cref="T:System.Collections.IList" /> tiene un tamaño fijo.</span><span class="sxs-lookup"><span data-stu-id="9eae6-310"><see cref="T:System.Collections.IList" /> has a fixed size.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
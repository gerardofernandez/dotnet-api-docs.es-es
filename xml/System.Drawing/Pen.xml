<Type Name="Pen" FullName="System.Drawing.Pen">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="67192e54cf1817645dcc389faea85254def778b7" />
    <Meta Name="ms.sourcegitcommit" Value="d40b35262cbc997b79bf76da3a39ccf59b738efc" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="12/05/2018" />
    <Meta Name="ms.locfileid" Value="52917920" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class Pen : MarshalByRefObject, ICloneable, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Pen extends System.MarshalByRefObject implements class System.ICloneable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Pen" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Pen&#xA;Inherits MarshalByRefObject&#xA;Implements ICloneable, IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Pen sealed : MarshalByRefObject, ICloneable, IDisposable" />
  <TypeSignature Language="F#" Value="type Pen = class&#xA;    inherit MarshalByRefObject&#xA;    interface ICloneable&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Drawing.Common</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.1</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="7ae84-101">Define un objeto usado para dibujar líneas y curvas.</span>
      <span class="sxs-lookup">
        <span data-stu-id="7ae84-101">Defines an object used to draw lines and curves.</span>
      </span>
      <span data-ttu-id="7ae84-102">Esta clase no puede heredarse.</span>
      <span class="sxs-lookup">
        <span data-stu-id="7ae84-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ae84-103">Un <xref:System.Drawing.Pen> dibuja una línea de ancho y estilo especificados.</span><span class="sxs-lookup"><span data-stu-id="7ae84-103">A <xref:System.Drawing.Pen> draws a line of specified width and style.</span></span> <span data-ttu-id="7ae84-104">Use el <xref:System.Drawing.Drawing2D.DashStyle> propiedad que se va a dibujar varios tipos de líneas discontinuas.</span><span class="sxs-lookup"><span data-stu-id="7ae84-104">Use the <xref:System.Drawing.Drawing2D.DashStyle> property to draw several varieties of dashed lines.</span></span> <span data-ttu-id="7ae84-105">La línea dibujada por un <xref:System.Drawing.Pen> pueden rellenarse en una variedad de estilos de relleno, incluyendo colores sólidos y texturas.</span><span class="sxs-lookup"><span data-stu-id="7ae84-105">The line drawn by a <xref:System.Drawing.Pen> can be filled in a variety of fill styles, including solid colors and textures.</span></span> <span data-ttu-id="7ae84-106">El estilo de relleno depende del pincel o de textura que se usa como el objeto de relleno.</span><span class="sxs-lookup"><span data-stu-id="7ae84-106">The fill style depends on brush or texture that is used as the fill object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ae84-107">El ejemplo de código siguiente se muestra cómo construir un <xref:System.Drawing.Pen> con un <xref:System.Drawing.Pen.Brush%2A> y los efectos de la configuración de la <xref:System.Drawing.Pen.LineJoin%2A> propiedad en un <xref:System.Drawing.Pen>.</span><span class="sxs-lookup"><span data-stu-id="7ae84-107">The following code example demonstrates constructing a <xref:System.Drawing.Pen> with a <xref:System.Drawing.Pen.Brush%2A> and the effects of setting the <xref:System.Drawing.Pen.LineJoin%2A> property on a <xref:System.Drawing.Pen>.</span></span>  
  
 <span data-ttu-id="7ae84-108">En este ejemplo está diseñado para usarse con Windows Forms.</span><span class="sxs-lookup"><span data-stu-id="7ae84-108">This example is designed to be used with Windows Forms.</span></span> <span data-ttu-id="7ae84-109">Pegue el código en un formulario y llame a la `ShowLineJoin` método cuando el control del formulario <xref:System.Windows.Forms.Control.Paint> evento pasando `e` como <xref:System.Windows.Forms.PaintEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="7ae84-109">Paste the code into a form and call the `ShowLineJoin` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.</span></span>  
  
 [!code-cpp[System.Drawing.PensExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.PensExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.PensExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.PensExample/CS/form1.cs#1)]
 [!code-vb[System.Drawing.PensExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.PensExample/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="7ae84-110">Inicializa una nueva instancia de la clase <see cref="T:System.Drawing.Pen" /> con el color especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ae84-110">Initializes a new instance of the <see cref="T:System.Drawing.Pen" /> class with the specified color.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Pen (System.Drawing.Brush brush);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Brush brush) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Pen.#ctor(System.Drawing.Brush)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Pen(System::Drawing::Brush ^ brush);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Pen : System.Drawing.Brush -&gt; System.Drawing.Pen" Usage="new System.Drawing.Pen brush" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="brush" Type="System.Drawing.Brush" />
      </Parameters>
      <Docs>
        <param name="brush">
          <span data-ttu-id="7ae84-111">
            <see cref="T:System.Drawing.Brush" /> que define las propiedades de relleno de este <see cref="T:System.Drawing.Pen" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ae84-111">A <see cref="T:System.Drawing.Brush" /> that determines the fill properties of this <see cref="T:System.Drawing.Pen" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7ae84-112">Inicializa una nueva instancia de la clase <see cref="T:System.Drawing.Pen" /> con el objeto <see cref="T:System.Drawing.Brush" /> especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ae84-112">Initializes a new instance of the <see cref="T:System.Drawing.Pen" /> class with the specified <see cref="T:System.Drawing.Brush" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ae84-113">El <xref:System.Drawing.Pen.Brush%2A> propiedad determina cómo el <xref:System.Drawing.Pen> dibuja líneas.</span><span class="sxs-lookup"><span data-stu-id="7ae84-113">The <xref:System.Drawing.Pen.Brush%2A> property determines how the <xref:System.Drawing.Pen> draws lines.</span></span> <span data-ttu-id="7ae84-114">Las líneas se dibujan como si fueran rectángulos rellenos, con las características del elemento especificado <xref:System.Drawing.Brush>.</span><span class="sxs-lookup"><span data-stu-id="7ae84-114">Lines are drawn as if they are filled rectangles, with the characteristics of the specified <xref:System.Drawing.Brush>.</span></span>  
  
 <span data-ttu-id="7ae84-115">El <xref:System.Drawing.Pen.Width%2A> propiedad del nuevo <xref:System.Drawing.Pen> está establecido en 1 (valor predeterminado).</span><span class="sxs-lookup"><span data-stu-id="7ae84-115">The <xref:System.Drawing.Pen.Width%2A> property of the new <xref:System.Drawing.Pen> is set to 1 (the default).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ae84-116">El ejemplo de código siguiente se muestra cómo construir un <xref:System.Drawing.Pen> con un <xref:System.Drawing.Pen.Brush%2A> y los efectos de la configuración de la <xref:System.Drawing.Pen.LineJoin%2A> propiedad en un <xref:System.Drawing.Pen>.</span><span class="sxs-lookup"><span data-stu-id="7ae84-116">The following code example demonstrates constructing a <xref:System.Drawing.Pen> with a <xref:System.Drawing.Pen.Brush%2A> and the effects of setting the <xref:System.Drawing.Pen.LineJoin%2A> property on a <xref:System.Drawing.Pen>.</span></span>  
  
 <span data-ttu-id="7ae84-117">En este ejemplo está diseñado para usarse con Windows Forms.</span><span class="sxs-lookup"><span data-stu-id="7ae84-117">This example is designed to be used with Windows Forms.</span></span> <span data-ttu-id="7ae84-118">Pegue el código en un formulario y llame a la `ShowLineJoin` método cuando el control del formulario <xref:System.Windows.Forms.Control.Paint> evento pasando `e` como <xref:System.Windows.Forms.PaintEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="7ae84-118">Paste the code into a form and call the `ShowLineJoin` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.</span></span>  
  
 [!code-cpp[System.Drawing.PensExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.PensExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.PensExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.PensExample/CS/form1.cs#1)]
 [!code-vb[System.Drawing.PensExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.PensExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7ae84-119">El valor de <paramref name="brush" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ae84-119">
              <paramref name="brush" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Pen (System.Drawing.Color color);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.Color color) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Pen.#ctor(System.Drawing.Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Pen(System::Drawing::Color color);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Pen : System.Drawing.Color -&gt; System.Drawing.Pen" Usage="new System.Drawing.Pen color" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="color" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="color">
          <span data-ttu-id="7ae84-120">Estructura <see cref="T:System.Drawing.Color" /> que indica el color de este <see cref="T:System.Drawing.Pen" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ae84-120">A <see cref="T:System.Drawing.Color" /> structure that indicates the color of this <see cref="T:System.Drawing.Pen" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7ae84-121">Inicializa una nueva instancia de la clase <see cref="T:System.Drawing.Pen" /> con el color especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ae84-121">Initializes a new instance of the <see cref="T:System.Drawing.Pen" /> class with the specified color.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ae84-122">El <xref:System.Drawing.Color> propiedad se establece en el color especificado por el `color` parámetro.</span><span class="sxs-lookup"><span data-stu-id="7ae84-122">The <xref:System.Drawing.Color> property is set to the color specified by the `color` parameter.</span></span> <span data-ttu-id="7ae84-123">El <xref:System.Drawing.Pen.Width%2A> propiedad está establecida en 1 (valor predeterminado).</span><span class="sxs-lookup"><span data-stu-id="7ae84-123">The <xref:System.Drawing.Pen.Width%2A> property is set to 1 (the default).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Pen (System.Drawing.Brush brush, float width);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Brush brush, float32 width) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Pen.#ctor(System.Drawing.Brush,System.Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Pen(System::Drawing::Brush ^ brush, float width);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Pen : System.Drawing.Brush * single -&gt; System.Drawing.Pen" Usage="new System.Drawing.Pen (brush, width)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="brush" Type="System.Drawing.Brush" />
        <Parameter Name="width" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="brush">
          <span data-ttu-id="7ae84-124">
            <see cref="T:System.Drawing.Brush" /> que determina las características de este <see cref="T:System.Drawing.Pen" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ae84-124">A <see cref="T:System.Drawing.Brush" /> that determines the characteristics of this <see cref="T:System.Drawing.Pen" />.</span>
          </span>
        </param>
        <param name="width">
          <span data-ttu-id="7ae84-125">Ancho del nuevo <see cref="T:System.Drawing.Pen" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ae84-125">The width of the new <see cref="T:System.Drawing.Pen" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7ae84-126">Inicializa una nueva instancia de la clase <see cref="T:System.Drawing.Pen" /> con los parámetros <see cref="T:System.Drawing.Brush" /> y <see cref="P:System.Drawing.Pen.Width" /> especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ae84-126">Initializes a new instance of the <see cref="T:System.Drawing.Pen" /> class with the specified <see cref="T:System.Drawing.Brush" /> and <see cref="P:System.Drawing.Pen.Width" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ae84-127">El <xref:System.Drawing.Brush> se establece en el color especificado en el `brush` parámetro, el <xref:System.Drawing.Pen.Width%2A> propiedad está establecida en el valor especificado en el `width` parámetro y las unidades se establecen en <xref:System.Drawing.GraphicsUnit.World>.</span><span class="sxs-lookup"><span data-stu-id="7ae84-127">The <xref:System.Drawing.Brush> is set to the color specified in the `brush` parameter, the <xref:System.Drawing.Pen.Width%2A> property is set to the value specified in the `width` parameter, and the units are set to <xref:System.Drawing.GraphicsUnit.World>.</span></span>  
  
 <span data-ttu-id="7ae84-128">Tenga en cuenta que el `brush` parámetro también especifica la <xref:System.Drawing.Color> propiedad de este <xref:System.Drawing.Pen>.</span><span class="sxs-lookup"><span data-stu-id="7ae84-128">Note that the `brush` parameter also specifies the <xref:System.Drawing.Color> property of this <xref:System.Drawing.Pen>.</span></span>  
  
 <span data-ttu-id="7ae84-129">Un `width` 0 dará como resultado la <xref:System.Drawing.Pen> dibujará como si el ancho dieron 1.</span><span class="sxs-lookup"><span data-stu-id="7ae84-129">A `width` of 0 will result in the <xref:System.Drawing.Pen> drawing as if the width were 1.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ae84-130">En el ejemplo de código siguiente se crea un <xref:System.Drawing.Pen> y muestra los efectos de la configuración de la <xref:System.Drawing.Pen.StartCap%2A> y <xref:System.Drawing.Pen.EndCap%2A> propiedades en un <xref:System.Drawing.Pen>.</span><span class="sxs-lookup"><span data-stu-id="7ae84-130">The following code example creates a <xref:System.Drawing.Pen> and demonstrates the effects of setting the <xref:System.Drawing.Pen.StartCap%2A> and <xref:System.Drawing.Pen.EndCap%2A> properties on a <xref:System.Drawing.Pen>.</span></span>  
  
 <span data-ttu-id="7ae84-131">En este ejemplo está diseñado para usarse con Windows Forms.</span><span class="sxs-lookup"><span data-stu-id="7ae84-131">This example is designed to be used with Windows Forms.</span></span> <span data-ttu-id="7ae84-132">Pegue el código en un formulario y llame a la `ShowStartAndEndCaps` método cuando el control del formulario <xref:System.Windows.Forms.Control.Paint> evento pasando `e` como <xref:System.Windows.Forms.PaintEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="7ae84-132">Paste the code into a form and call the `ShowStartAndEndCaps` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.</span></span>  
  
 [!code-cpp[System.Drawing.ImageExample#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ImageExample/CPP/form1.cpp#3)]
 [!code-csharp[System.Drawing.ImageExample#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ImageExample/CS/form1.cs#3)]
 [!code-vb[System.Drawing.ImageExample#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ImageExample/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7ae84-133">El valor de <paramref name="brush" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ae84-133">
              <paramref name="brush" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Pen (System.Drawing.Color color, float width);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.Color color, float32 width) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Pen.#ctor(System.Drawing.Color,System.Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Pen(System::Drawing::Color color, float width);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Pen : System.Drawing.Color * single -&gt; System.Drawing.Pen" Usage="new System.Drawing.Pen (color, width)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="color" Type="System.Drawing.Color" />
        <Parameter Name="width" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="color">
          <span data-ttu-id="7ae84-134">Estructura <see cref="T:System.Drawing.Color" /> que indica el color de este <see cref="T:System.Drawing.Pen" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ae84-134">A <see cref="T:System.Drawing.Color" /> structure that indicates the color of this <see cref="T:System.Drawing.Pen" />.</span>
          </span>
        </param>
        <param name="width">
          <span data-ttu-id="7ae84-135">Valor que indica el ancho de este <see cref="T:System.Drawing.Pen" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ae84-135">A value indicating the width of this <see cref="T:System.Drawing.Pen" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7ae84-136">Inicializa una nueva instancia de la clase <see cref="T:System.Drawing.Pen" /> con las propiedades <see cref="T:System.Drawing.Color" /> y <see cref="P:System.Drawing.Pen.Width" /> especificadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ae84-136">Initializes a new instance of the <see cref="T:System.Drawing.Pen" /> class with the specified <see cref="T:System.Drawing.Color" /> and <see cref="P:System.Drawing.Pen.Width" /> properties.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ae84-137">El <xref:System.Drawing.Color> propiedad se establece en el color especificado por el `color` parámetro.</span><span class="sxs-lookup"><span data-stu-id="7ae84-137">The <xref:System.Drawing.Color> property is set to the color specified by the `color` parameter.</span></span> <span data-ttu-id="7ae84-138">El <xref:System.Drawing.Pen.Width%2A> propiedad está establecida en el valor especificado en el `width` parámetro.</span><span class="sxs-lookup"><span data-stu-id="7ae84-138">The <xref:System.Drawing.Pen.Width%2A> property is set to the value specified in the `width` parameter.</span></span> <span data-ttu-id="7ae84-139">Un `width` 0 dará como resultado la <xref:System.Drawing.Pen> dibujará como si el ancho dieron 1.</span><span class="sxs-lookup"><span data-stu-id="7ae84-139">A `width` of 0 will result in the <xref:System.Drawing.Pen> drawing as if the width were 1.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ae84-140">El ejemplo de código siguiente se muestra cómo crear un <xref:System.Drawing.Pen> y los efectos de la configuración de la <xref:System.Drawing.Pen.DashCap%2A>, <xref:System.Drawing.Pen.DashPattern%2A>, y <xref:System.Drawing.Graphics.SmoothingMode%2A> propiedades.</span><span class="sxs-lookup"><span data-stu-id="7ae84-140">The following code example demonstrates creating a <xref:System.Drawing.Pen> and the effects of setting the <xref:System.Drawing.Pen.DashCap%2A>, <xref:System.Drawing.Pen.DashPattern%2A>, and <xref:System.Drawing.Graphics.SmoothingMode%2A> properties.</span></span>  
  
 <span data-ttu-id="7ae84-141">En este ejemplo está diseñado para usarse con Windows Forms.</span><span class="sxs-lookup"><span data-stu-id="7ae84-141">This example is designed to be used with Windows Forms.</span></span> <span data-ttu-id="7ae84-142">Pegue el código en un formulario y llame a la `ShowPensAndSmoothingMode` método cuando el control del formulario <xref:System.Windows.Forms.Control.Paint> evento, pasando e como <xref:System.Windows.Forms.PaintEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="7ae84-142">Paste the code into a form and call the `ShowPensAndSmoothingMode` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing e as <xref:System.Windows.Forms.PaintEventArgs>.</span></span>  
  
 [!code-cpp[System.Drawing.PensExample#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.PensExample/CPP/form1.cpp#3)]
 [!code-csharp[System.Drawing.PensExample#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.PensExample/CS/form1.cs#3)]
 [!code-vb[System.Drawing.PensExample#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.PensExample/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Alignment">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.PenAlignment Alignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Drawing2D.PenAlignment Alignment" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Pen.Alignment" />
      <MemberSignature Language="VB.NET" Value="Public Property Alignment As PenAlignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::PenAlignment Alignment { System::Drawing::Drawing2D::PenAlignment get(); void set(System::Drawing::Drawing2D::PenAlignment value); };" />
      <MemberSignature Language="F#" Value="member this.Alignment : System.Drawing.Drawing2D.PenAlignment with get, set" Usage="System.Drawing.Pen.Alignment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.PenAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7ae84-143">Obtiene o establece la alineación de este <see cref="T:System.Drawing.Pen" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ae84-143">Gets or sets the alignment for this <see cref="T:System.Drawing.Pen" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7ae84-144">Un valor de <see cref="T:System.Drawing.Drawing2D.PenAlignment" /> que representa la alineación de este <see cref="T:System.Drawing.Pen" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ae84-144">A <see cref="T:System.Drawing.Drawing2D.PenAlignment" /> that represents the alignment for this <see cref="T:System.Drawing.Pen" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ae84-145">Esta propiedad determina cómo el <xref:System.Drawing.Pen> dibuja curvas cerradas y polígonos.</span><span class="sxs-lookup"><span data-stu-id="7ae84-145">This property determines how the <xref:System.Drawing.Pen> draws closed curves and polygons.</span></span> <span data-ttu-id="7ae84-146">El <xref:System.Drawing.Drawing2D.PenAlignment> enumeración especifica cinco valores; sin embargo, solo dos valores:<xref:System.Drawing.Drawing2D.PenAlignment.Center> y <xref:System.Drawing.Drawing2D.PenAlignment.Inset>, cambiará la apariencia de una línea dibujada.</span><span class="sxs-lookup"><span data-stu-id="7ae84-146">The <xref:System.Drawing.Drawing2D.PenAlignment> enumeration specifies five values; however, only two values—<xref:System.Drawing.Drawing2D.PenAlignment.Center> and <xref:System.Drawing.Drawing2D.PenAlignment.Inset>—will change the appearance of a drawn line.</span></span> <span data-ttu-id="7ae84-147"><xref:System.Drawing.Drawing2D.PenAlignment.Center> es el valor predeterminado de esta propiedad y especifica que el ancho del lápiz está centrado en el contorno de la curva o polígono.</span><span class="sxs-lookup"><span data-stu-id="7ae84-147"><xref:System.Drawing.Drawing2D.PenAlignment.Center> is the default value for this property and specifies that the width of the pen is centered on the outline of the curve or polygon.</span></span> <span data-ttu-id="7ae84-148">Un valor de <xref:System.Drawing.Drawing2D.PenAlignment.Inset> para esta propiedad especifica que el ancho del lápiz está dentro del contorno de la curva o polígono.</span><span class="sxs-lookup"><span data-stu-id="7ae84-148">A value of <xref:System.Drawing.Drawing2D.PenAlignment.Inset> for this property specifies that the width of the pen is inside the outline of the curve or polygon.</span></span> <span data-ttu-id="7ae84-149">Los otros tres valores, <xref:System.Drawing.Drawing2D.PenAlignment.Right>, <xref:System.Drawing.Drawing2D.PenAlignment.Left>, y <xref:System.Drawing.Drawing2D.PenAlignment.Outset>, dará como resultado un lápiz que está centrado.</span><span class="sxs-lookup"><span data-stu-id="7ae84-149">The other three values, <xref:System.Drawing.Drawing2D.PenAlignment.Right>, <xref:System.Drawing.Drawing2D.PenAlignment.Left>, and <xref:System.Drawing.Drawing2D.PenAlignment.Outset>, will result in a pen that is centered.</span></span>  
  
 <span data-ttu-id="7ae84-150">Un <xref:System.Drawing.Pen> que tiene la alineación establecida en <xref:System.Drawing.Drawing2D.PenAlignment.Inset> producirá resultados no confiables, dibujando a veces en la posición de inserción y, a veces en posición centrada.</span><span class="sxs-lookup"><span data-stu-id="7ae84-150">A <xref:System.Drawing.Pen> that has its alignment set to <xref:System.Drawing.Drawing2D.PenAlignment.Inset> will yield unreliable results, sometimes drawing in the inset position and sometimes in the centered position.</span></span> <span data-ttu-id="7ae84-151">Además, un lápiz de bajorrelieve no se puede usar para dibujar líneas compuestas y no se puede dibujar líneas discontinuas con <xref:System.Drawing.Drawing2D.DashCap.Triangle> dash CAP.</span><span class="sxs-lookup"><span data-stu-id="7ae84-151">Also, an inset pen cannot be used to draw compound lines and cannot draw dashed lines with <xref:System.Drawing.Drawing2D.DashCap.Triangle> dash caps.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="7ae84-152">El valor especificado no es un miembro de <see cref="T:System.Drawing.Drawing2D.PenAlignment" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ae84-152">The specified value is not a member of <see cref="T:System.Drawing.Drawing2D.PenAlignment" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7ae84-153">El valor de la propiedad <see cref="P:System.Drawing.Pen.Alignment" /> se establece en un objeto <see cref="T:System.Drawing.Pen" /> inmutable, como los devueltos por la clase <see cref="T:System.Drawing.Pens" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ae84-153">The <see cref="P:System.Drawing.Pen.Alignment" /> property is set on an immutable <see cref="T:System.Drawing.Pen" />, such as those returned by the <see cref="T:System.Drawing.Pens" /> class.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Brush">
      <MemberSignature Language="C#" Value="public System.Drawing.Brush Brush { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Brush Brush" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Pen.Brush" />
      <MemberSignature Language="VB.NET" Value="Public Property Brush As Brush" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Brush ^ Brush { System::Drawing::Brush ^ get(); void set(System::Drawing::Brush ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Brush : System.Drawing.Brush with get, set" Usage="System.Drawing.Pen.Brush" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Brush</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7ae84-154">Obtiene o establece el <see cref="T:System.Drawing.Brush" /> que determina los atributos de este <see cref="T:System.Drawing.Pen" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ae84-154">Gets or sets the <see cref="T:System.Drawing.Brush" /> that determines attributes of this <see cref="T:System.Drawing.Pen" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7ae84-155">Un <see cref="T:System.Drawing.Brush" /> que determina los atributos de este <see cref="T:System.Drawing.Pen" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ae84-155">A <see cref="T:System.Drawing.Brush" /> that determines attributes of this <see cref="T:System.Drawing.Pen" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ae84-156">Asignación de esta propiedad hace que el lápiz dibujar líneas rellenas y curvas.</span><span class="sxs-lookup"><span data-stu-id="7ae84-156">Assigning this property causes the pen to draw filled lines and curves.</span></span> <span data-ttu-id="7ae84-157">Invalida el <xref:System.Drawing.Color> propiedad de la <xref:System.Drawing.Pen>.</span><span class="sxs-lookup"><span data-stu-id="7ae84-157">It overrides the <xref:System.Drawing.Color> property of the <xref:System.Drawing.Pen>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7ae84-158">El valor de la propiedad <see cref="P:System.Drawing.Pen.Brush" /> se establece en un objeto <see cref="T:System.Drawing.Pen" /> inmutable, como los devueltos por la clase <see cref="T:System.Drawing.Pens" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ae84-158">The <see cref="P:System.Drawing.Pen.Brush" /> property is set on an immutable <see cref="T:System.Drawing.Pen" />, such as those returned by the <see cref="T:System.Drawing.Pens" /> class.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Pen.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="pen.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7ae84-159">Crea una copia exacta de este objeto <see cref="T:System.Drawing.Pen" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ae84-159">Creates an exact copy of this <see cref="T:System.Drawing.Pen" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7ae84-160">Un <see cref="T:System.Object" /> que se puede convertir en un <see cref="T:System.Drawing.Pen" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ae84-160">An <see cref="T:System.Object" /> that can be cast to a <see cref="T:System.Drawing.Pen" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7ae84-161">El siguiente ejemplo de código está diseñado para su uso con Windows Forms y requiere <xref:System.Windows.Forms.PaintEventArgs> `e`, que es un parámetro de la <xref:System.Windows.Forms.Control.Paint> controlador de eventos.</span><span class="sxs-lookup"><span data-stu-id="7ae84-161">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="7ae84-162">El código realiza las siguientes acciones:</span><span class="sxs-lookup"><span data-stu-id="7ae84-162">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="7ae84-163">Crea una interfaz <xref:System.Drawing.Pen>.</span><span class="sxs-lookup"><span data-stu-id="7ae84-163">Creates a <xref:System.Drawing.Pen>.</span></span>  
  
-   <span data-ttu-id="7ae84-164">Crea una copia de ese lápiz.</span><span class="sxs-lookup"><span data-stu-id="7ae84-164">Creates a copy of that pen.</span></span>  
  
-   <span data-ttu-id="7ae84-165">Dibuja una línea en la pantalla, mediante la copia de la pluma.</span><span class="sxs-lookup"><span data-stu-id="7ae84-165">Draws a line to the screen, using the copy of the pen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicPenExamples#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicPenExamples/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.ClassicPenExamples#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicPenExamples/CS/form1.cs#1)]
 [!code-vb[System.Drawing.ClassicPenExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicPenExamples/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Color">
      <MemberSignature Language="C#" Value="public System.Drawing.Color Color { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color Color" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Pen.Color" />
      <MemberSignature Language="VB.NET" Value="Public Property Color As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color Color { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.Color : System.Drawing.Color with get, set" Usage="System.Drawing.Pen.Color" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7ae84-166">Obtiene o establece el color de este <see cref="T:System.Drawing.Pen" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ae84-166">Gets or sets the color of this <see cref="T:System.Drawing.Pen" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7ae84-167">Una estructura <see cref="T:System.Drawing.Color" /> que representa el color de este <see cref="T:System.Drawing.Pen" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ae84-167">A <see cref="T:System.Drawing.Color" /> structure that represents the color of this <see cref="T:System.Drawing.Pen" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7ae84-168">El valor de la propiedad <see cref="P:System.Drawing.Pen.Color" /> se establece en un objeto <see cref="T:System.Drawing.Pen" /> inmutable, como los devueltos por la clase <see cref="T:System.Drawing.Pens" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ae84-168">The <see cref="P:System.Drawing.Pen.Color" /> property is set on an immutable <see cref="T:System.Drawing.Pen" />, such as those returned by the <see cref="T:System.Drawing.Pens" /> class.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CompoundArray">
      <MemberSignature Language="C#" Value="public float[] CompoundArray { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32[] CompoundArray" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Pen.CompoundArray" />
      <MemberSignature Language="VB.NET" Value="Public Property CompoundArray As Single()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;float&gt; ^ CompoundArray { cli::array &lt;float&gt; ^ get(); void set(cli::array &lt;float&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CompoundArray : single[] with get, set" Usage="System.Drawing.Pen.CompoundArray" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7ae84-169">Obtiene o establece una matriz de valores que especifica un lápiz compuesto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ae84-169">Gets or sets an array of values that specifies a compound pen.</span>
          </span>
          <span data-ttu-id="7ae84-170">Un lápiz compuesto dibuja una línea compuesta formada por líneas y espacios paralelos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ae84-170">A compound pen draws a compound line made up of parallel lines and spaces.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7ae84-171">Matriz de números reales que especifica la matriz compuesta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ae84-171">An array of real numbers that specifies the compound array.</span>
          </span>
          <span data-ttu-id="7ae84-172">Los elementos de la matriz deben estar en orden ascendente, no menor que cero y no mayor que 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ae84-172">The elements in the array must be in increasing order, not less than 0, and not greater than 1.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ae84-173">Una línea compuesta se compone de líneas paralelas y espacios de diversos anchos alternos.</span><span class="sxs-lookup"><span data-stu-id="7ae84-173">A compound line is made up of alternating parallel lines and spaces of varying widths.</span></span> <span data-ttu-id="7ae84-174">Los valores de la matriz especifican los puntos iniciales de cada componente de la línea compuesta con respecto al ancho del lápiz.</span><span class="sxs-lookup"><span data-stu-id="7ae84-174">The values in the array specify the starting points of each component of the compound line relative to the pen's width.</span></span> <span data-ttu-id="7ae84-175">El primer valor de la matriz especifica donde comienza el primer componente (una línea) como una fracción de la distancia a lo ancho del lápiz.</span><span class="sxs-lookup"><span data-stu-id="7ae84-175">The first value in the array specifies where the first component (a line) begins as a fraction of the distance across the width of the pen.</span></span> <span data-ttu-id="7ae84-176">El segundo valor de la matriz especifica el comienzo del siguiente componente (un espacio) como una fracción de la distancia a lo ancho del lápiz.</span><span class="sxs-lookup"><span data-stu-id="7ae84-176">The second value in the array specifies the beginning of the next component (a space) as a fraction of the distance across the width of the pen.</span></span> <span data-ttu-id="7ae84-177">El valor final de la matriz especifica que se acaba el último componente.</span><span class="sxs-lookup"><span data-stu-id="7ae84-177">The final value in the array specifies where the last component ends.</span></span>  
  
 <span data-ttu-id="7ae84-178">Supongamos que desea que un lápiz para dibujar dos líneas paralelas donde el ancho de la primera línea es 20 por ciento del ancho del lápiz, el ancho del espacio que separa las dos líneas es 50 por ciento de la pluma ' s ancho y el ancho de la segunda línea es el 30% de la pluma Ancho.</span><span class="sxs-lookup"><span data-stu-id="7ae84-178">Suppose you want a pen to draw two parallel lines where the width of the first line is 20 percent of the pen's width, the width of the space that separates the two lines is 50 percent of the pen' s width, and the width of the second line is 30 percent of the pen's width.</span></span> <span data-ttu-id="7ae84-179">Comience creando un <xref:System.Drawing.Pen> y una matriz de números reales.</span><span class="sxs-lookup"><span data-stu-id="7ae84-179">Start by creating a <xref:System.Drawing.Pen> and an array of real numbers.</span></span> <span data-ttu-id="7ae84-180">Establece la matriz compuesta pasando la matriz con los valores 0,0, 0,2, 0,7 y 1.0 a esta propiedad.</span><span class="sxs-lookup"><span data-stu-id="7ae84-180">Set the compound array by passing the array with the values 0.0, 0.2, 0.7, and 1.0 to this property.</span></span>  
  
 <span data-ttu-id="7ae84-181">No establezca esta propiedad si el <xref:System.Drawing.Pen> tiene su <xref:System.Drawing.Pen.Alignment%2A> propiedad establecida en <xref:System.Drawing.Drawing2D.PenAlignment.Inset>.</span><span class="sxs-lookup"><span data-stu-id="7ae84-181">Do not set this property if the <xref:System.Drawing.Pen> has its <xref:System.Drawing.Pen.Alignment%2A> property set to <xref:System.Drawing.Drawing2D.PenAlignment.Inset>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7ae84-182">El valor de la propiedad <see cref="P:System.Drawing.Pen.CompoundArray" /> se establece en un objeto <see cref="T:System.Drawing.Pen" /> inmutable, como los devueltos por la clase <see cref="T:System.Drawing.Pens" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ae84-182">The <see cref="P:System.Drawing.Pen.CompoundArray" /> property is set on an immutable <see cref="T:System.Drawing.Pen" />, such as those returned by the <see cref="T:System.Drawing.Pens" /> class.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CustomEndCap">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.CustomLineCap CustomEndCap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Drawing2D.CustomLineCap CustomEndCap" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Pen.CustomEndCap" />
      <MemberSignature Language="VB.NET" Value="Public Property CustomEndCap As CustomLineCap" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::CustomLineCap ^ CustomEndCap { System::Drawing::Drawing2D::CustomLineCap ^ get(); void set(System::Drawing::Drawing2D::CustomLineCap ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CustomEndCap : System.Drawing.Drawing2D.CustomLineCap with get, set" Usage="System.Drawing.Pen.CustomEndCap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.CustomLineCap</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7ae84-183">Obtiene o establece un punto de conexión personalizado que se usa al final de las líneas dibujadas con este <see cref="T:System.Drawing.Pen" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ae84-183">Gets or sets a custom cap to use at the end of lines drawn with this <see cref="T:System.Drawing.Pen" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7ae84-184">Un <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> que representa el extremo usado al final de las líneas dibujadas con este <see cref="T:System.Drawing.Pen" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ae84-184">A <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> that represents the cap used at the end of lines drawn with this <see cref="T:System.Drawing.Pen" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7ae84-185">El valor de la propiedad <see cref="P:System.Drawing.Pen.CustomEndCap" /> se establece en un objeto <see cref="T:System.Drawing.Pen" /> inmutable, como los devueltos por la clase <see cref="T:System.Drawing.Pens" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ae84-185">The <see cref="P:System.Drawing.Pen.CustomEndCap" /> property is set on an immutable <see cref="T:System.Drawing.Pen" />, such as those returned by the <see cref="T:System.Drawing.Pens" /> class.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CustomStartCap">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.CustomLineCap CustomStartCap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Drawing2D.CustomLineCap CustomStartCap" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Pen.CustomStartCap" />
      <MemberSignature Language="VB.NET" Value="Public Property CustomStartCap As CustomLineCap" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::CustomLineCap ^ CustomStartCap { System::Drawing::Drawing2D::CustomLineCap ^ get(); void set(System::Drawing::Drawing2D::CustomLineCap ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CustomStartCap : System.Drawing.Drawing2D.CustomLineCap with get, set" Usage="System.Drawing.Pen.CustomStartCap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.CustomLineCap</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7ae84-186">Obtiene o establece un punto de conexión personalizado que se usa al comienzo de las líneas dibujadas con este <see cref="T:System.Drawing.Pen" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ae84-186">Gets or sets a custom cap to use at the beginning of lines drawn with this <see cref="T:System.Drawing.Pen" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7ae84-187">Un <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> que representa el extremo usado al comienzo de las líneas dibujadas con este <see cref="T:System.Drawing.Pen" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ae84-187">A <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> that represents the cap used at the beginning of lines drawn with this <see cref="T:System.Drawing.Pen" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7ae84-188">El valor de la propiedad <see cref="P:System.Drawing.Pen.CustomStartCap" /> se establece en un objeto <see cref="T:System.Drawing.Pen" /> inmutable, como los devueltos por la clase <see cref="T:System.Drawing.Pens" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ae84-188">The <see cref="P:System.Drawing.Pen.CustomStartCap" /> property is set on an immutable <see cref="T:System.Drawing.Pen" />, such as those returned by the <see cref="T:System.Drawing.Pens" /> class.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DashCap">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.DashCap DashCap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Drawing2D.DashCap DashCap" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Pen.DashCap" />
      <MemberSignature Language="VB.NET" Value="Public Property DashCap As DashCap" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::DashCap DashCap { System::Drawing::Drawing2D::DashCap get(); void set(System::Drawing::Drawing2D::DashCap value); };" />
      <MemberSignature Language="F#" Value="member this.DashCap : System.Drawing.Drawing2D.DashCap with get, set" Usage="System.Drawing.Pen.DashCap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.DashCap</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7ae84-189">Obtiene o establece el estilo de punto de conexión que se usa al final de los guiones que forman las líneas discontinuas dibujadas con este <see cref="T:System.Drawing.Pen" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ae84-189">Gets or sets the cap style used at the end of the dashes that make up dashed lines drawn with this <see cref="T:System.Drawing.Pen" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7ae84-190">Uno de los valores de <see cref="T:System.Drawing.Drawing2D.DashCap" /> que representa el estilo de extremo que se usa al comienzo y al final de los guiones que forman las líneas discontinuas dibujadas con este <see cref="T:System.Drawing.Pen" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ae84-190">One of the <see cref="T:System.Drawing.Drawing2D.DashCap" /> values that represents the cap style used at the beginning and end of the dashes that make up dashed lines drawn with this <see cref="T:System.Drawing.Pen" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ae84-191">No establezca esta propiedad en <xref:System.Drawing.Drawing2D.DashCap.Triangle> si el <xref:System.Drawing.Pen> tiene su <xref:System.Drawing.Pen.Alignment%2A> propiedad establecida en <xref:System.Drawing.Drawing2D.PenAlignment.Inset>.</span><span class="sxs-lookup"><span data-stu-id="7ae84-191">Do not set this property to <xref:System.Drawing.Drawing2D.DashCap.Triangle> if the <xref:System.Drawing.Pen> has its <xref:System.Drawing.Pen.Alignment%2A> property set to <xref:System.Drawing.Drawing2D.PenAlignment.Inset>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ae84-192">El ejemplo de código siguiente se muestra cómo crear un <xref:System.Drawing.Pen> y los efectos de la configuración de la <xref:System.Drawing.Pen.DashCap%2A>, <xref:System.Drawing.Pen.DashPattern%2A>, y <xref:System.Drawing.Graphics.SmoothingMode%2A> propiedades.</span><span class="sxs-lookup"><span data-stu-id="7ae84-192">The following code example demonstrates creating a <xref:System.Drawing.Pen> and the effects of setting the <xref:System.Drawing.Pen.DashCap%2A>, <xref:System.Drawing.Pen.DashPattern%2A>, and <xref:System.Drawing.Graphics.SmoothingMode%2A> properties.</span></span>  
  
 <span data-ttu-id="7ae84-193">En este ejemplo está diseñado para usarse con Windows Forms.</span><span class="sxs-lookup"><span data-stu-id="7ae84-193">This example is designed to be used with Windows Forms.</span></span> <span data-ttu-id="7ae84-194">Pegue el código en un formulario y llame a la `ShowPensAndSmoothingMode` método cuando el control del formulario <xref:System.Windows.Forms.Control.Paint> evento pasando `e` como <xref:System.Windows.Forms.PaintEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="7ae84-194">Paste the code into a form and call the `ShowPensAndSmoothingMode` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.</span></span>  
  
 [!code-cpp[System.Drawing.PensExample#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.PensExample/CPP/form1.cpp#3)]
 [!code-csharp[System.Drawing.PensExample#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.PensExample/CS/form1.cs#3)]
 [!code-vb[System.Drawing.PensExample#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.PensExample/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="7ae84-195">El valor especificado no es un miembro de <see cref="T:System.Drawing.Drawing2D.DashCap" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ae84-195">The specified value is not a member of <see cref="T:System.Drawing.Drawing2D.DashCap" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7ae84-196">El valor de la propiedad <see cref="P:System.Drawing.Pen.DashCap" /> se establece en un objeto <see cref="T:System.Drawing.Pen" /> inmutable, como los devueltos por la clase <see cref="T:System.Drawing.Pens" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ae84-196">The <see cref="P:System.Drawing.Pen.DashCap" /> property is set on an immutable <see cref="T:System.Drawing.Pen" />, such as those returned by the <see cref="T:System.Drawing.Pens" /> class.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DashOffset">
      <MemberSignature Language="C#" Value="public float DashOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 DashOffset" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Pen.DashOffset" />
      <MemberSignature Language="VB.NET" Value="Public Property DashOffset As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float DashOffset { float get(); void set(float value); };" />
      <MemberSignature Language="F#" Value="member this.DashOffset : single with get, set" Usage="System.Drawing.Pen.DashOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7ae84-197">Obtiene o establece la distancia desde el comienzo de una línea hasta el comienzo de un modelo de guiones.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ae84-197">Gets or sets the distance from the start of a line to the beginning of a dash pattern.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7ae84-198">Distancia desde el comienzo de una línea hasta el comienzo de un modelo de guiones.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ae84-198">The distance from the start of a line to the beginning of a dash pattern.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7ae84-199">El valor de la propiedad <see cref="P:System.Drawing.Pen.DashOffset" /> se establece en un objeto <see cref="T:System.Drawing.Pen" /> inmutable, como los devueltos por la clase <see cref="T:System.Drawing.Pens" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ae84-199">The <see cref="P:System.Drawing.Pen.DashOffset" /> property is set on an immutable <see cref="T:System.Drawing.Pen" />, such as those returned by the <see cref="T:System.Drawing.Pens" /> class.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DashPattern">
      <MemberSignature Language="C#" Value="public float[] DashPattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32[] DashPattern" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Pen.DashPattern" />
      <MemberSignature Language="VB.NET" Value="Public Property DashPattern As Single()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;float&gt; ^ DashPattern { cli::array &lt;float&gt; ^ get(); void set(cli::array &lt;float&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DashPattern : single[] with get, set" Usage="System.Drawing.Pen.DashPattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7ae84-200">Obtiene o establece una matriz de guiones y espacios personalizados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ae84-200">Gets or sets an array of custom dashes and spaces.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7ae84-201">Una matriz de números reales que especifica las longitudes de los guiones y espacios alternos que forman las líneas discontinuas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ae84-201">An array of real numbers that specifies the lengths of alternating dashes and spaces in dashed lines.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ae84-202">Asignar un valor distinto de `null` a esta propiedad se establecerá la <xref:System.Drawing.Drawing2D.DashStyle> propiedad para este <xref:System.Drawing.Pen> a <xref:System.Drawing.Drawing2D.DashStyle.Custom>.</span><span class="sxs-lookup"><span data-stu-id="7ae84-202">Assigning a value other than `null` to this property will set the <xref:System.Drawing.Drawing2D.DashStyle> property for this <xref:System.Drawing.Pen> to <xref:System.Drawing.Drawing2D.DashStyle.Custom>.</span></span>  
  
 <span data-ttu-id="7ae84-203">Los elementos de la `dashArray` matriz establece la longitud de cada guión y espacio en el modelo de guiones.</span><span class="sxs-lookup"><span data-stu-id="7ae84-203">The elements in the `dashArray` array set the length of each dash and space in the dash pattern.</span></span> <span data-ttu-id="7ae84-204">El primer elemento establece la longitud de un guión, el segundo elemento establece la longitud de un espacio, el tercer elemento establece la longitud de un guión y así sucesivamente.</span><span class="sxs-lookup"><span data-stu-id="7ae84-204">The first element sets the length of a dash, the second element sets the length of a space, the third element sets the length of a dash, and so on.</span></span> <span data-ttu-id="7ae84-205">Por lo tanto, cada elemento debe ser un número positivo distinto de cero.</span><span class="sxs-lookup"><span data-stu-id="7ae84-205">Consequently, each element should be a non-zero positive number.</span></span>  
  
 <span data-ttu-id="7ae84-206">La longitud de cada guión y espacio en el modelo de guiones es el producto del valor del elemento de la matriz y el ancho de la <xref:System.Drawing.Pen>.</span><span class="sxs-lookup"><span data-stu-id="7ae84-206">The length of each dash and space in the dash pattern is the product of the element value in the array and the width of the <xref:System.Drawing.Pen>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ae84-207">El ejemplo de código siguiente muestra los efectos de la configuración de la <xref:System.Drawing.Pen.DashCap%2A>, <xref:System.Drawing.Pen.DashPattern%2A>, y <xref:System.Drawing.Graphics.SmoothingMode%2A> propiedades.</span><span class="sxs-lookup"><span data-stu-id="7ae84-207">The following code example demonstrates the effects of setting the <xref:System.Drawing.Pen.DashCap%2A>, <xref:System.Drawing.Pen.DashPattern%2A>, and <xref:System.Drawing.Graphics.SmoothingMode%2A> properties.</span></span>  
  
 <span data-ttu-id="7ae84-208">En este ejemplo está diseñado para usarse con Windows Forms.</span><span class="sxs-lookup"><span data-stu-id="7ae84-208">This example is designed to be used with Windows Forms.</span></span> <span data-ttu-id="7ae84-209">Pegue el código en un formulario y llame a la `ShowPensAndSmoothingMode` método cuando el control del formulario <xref:System.Windows.Forms.Control.Paint> evento pasando `e` como <xref:System.Windows.Forms.PaintEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="7ae84-209">Paste the code into a form and call the `ShowPensAndSmoothingMode` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.</span></span>  
  
 [!code-cpp[System.Drawing.PensExample#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.PensExample/CPP/form1.cpp#3)]
 [!code-csharp[System.Drawing.PensExample#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.PensExample/CS/form1.cs#3)]
 [!code-vb[System.Drawing.PensExample#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.PensExample/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7ae84-210">El valor de la propiedad <see cref="P:System.Drawing.Pen.DashPattern" /> se establece en un objeto <see cref="T:System.Drawing.Pen" /> inmutable, como los devueltos por la clase <see cref="T:System.Drawing.Pens" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ae84-210">The <see cref="P:System.Drawing.Pen.DashPattern" /> property is set on an immutable <see cref="T:System.Drawing.Pen" />, such as those returned by the <see cref="T:System.Drawing.Pens" /> class.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DashStyle">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.DashStyle DashStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Drawing2D.DashStyle DashStyle" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Pen.DashStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property DashStyle As DashStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::DashStyle DashStyle { System::Drawing::Drawing2D::DashStyle get(); void set(System::Drawing::Drawing2D::DashStyle value); };" />
      <MemberSignature Language="F#" Value="member this.DashStyle : System.Drawing.Drawing2D.DashStyle with get, set" Usage="System.Drawing.Pen.DashStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.DashStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7ae84-211">Obtiene o establece el estilo de las líneas discontinuas dibujadas con este <see cref="T:System.Drawing.Pen" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ae84-211">Gets or sets the style used for dashed lines drawn with this <see cref="T:System.Drawing.Pen" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7ae84-212">
            <see cref="T:System.Drawing.Drawing2D.DashStyle" /> que representa el estilo de las líneas discontinuas dibujadas con este <see cref="T:System.Drawing.Pen" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ae84-212">A <see cref="T:System.Drawing.Drawing2D.DashStyle" /> that represents the style used for dashed lines drawn with this <see cref="T:System.Drawing.Pen" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ae84-213">Un valor de <xref:System.Drawing.Drawing2D.DashStyle.Custom> para esta propiedad especifica que un modelo personalizado de guiones y espacios, definido por el <xref:System.Drawing.Pen.DashPattern%2A> propiedad, hace que las líneas dibujadas con este <xref:System.Drawing.Pen>.</span><span class="sxs-lookup"><span data-stu-id="7ae84-213">A value of <xref:System.Drawing.Drawing2D.DashStyle.Custom> for this property specifies that a custom pattern of dashes and spaces, defined by the <xref:System.Drawing.Pen.DashPattern%2A> property, makes up lines drawn with this <xref:System.Drawing.Pen>.</span></span> <span data-ttu-id="7ae84-214">Si el valor de esta propiedad es <xref:System.Drawing.Drawing2D.DashStyle.Custom> y el valor de la <xref:System.Drawing.Pen.DashPattern%2A> propiedad es `null`, el lápiz dibuja líneas sólidas.</span><span class="sxs-lookup"><span data-stu-id="7ae84-214">If the value of this property is <xref:System.Drawing.Drawing2D.DashStyle.Custom> and the value of the <xref:System.Drawing.Pen.DashPattern%2A> property is `null`, the pen draws solid lines.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7ae84-215">El valor de la propiedad <see cref="P:System.Drawing.Pen.DashStyle" /> se establece en un objeto <see cref="T:System.Drawing.Pen" /> inmutable, como los devueltos por la clase <see cref="T:System.Drawing.Pens" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ae84-215">The <see cref="P:System.Drawing.Pen.DashStyle" /> property is set on an immutable <see cref="T:System.Drawing.Pen" />, such as those returned by the <see cref="T:System.Drawing.Pens" /> class.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Pen.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="pen.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7ae84-216">Libera todos los recursos utilizados por este <see cref="T:System.Drawing.Pen" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ae84-216">Releases all resources used by this <see cref="T:System.Drawing.Pen" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ae84-217">Una llamada a <xref:System.Drawing.Pen.Dispose%2A> permite que los recursos utilizados por este <xref:System.Drawing.Brush> que reasignarse para otros fines.</span><span class="sxs-lookup"><span data-stu-id="7ae84-217">Calling <xref:System.Drawing.Pen.Dispose%2A> allows the resources used by this <xref:System.Drawing.Brush> to be reallocated for other purposes.</span></span>  
  
 <span data-ttu-id="7ae84-218">Llame a <xref:System.Drawing.Pen.Dispose%2A> cuando haya terminado de usar <xref:System.Drawing.Pen>.</span><span class="sxs-lookup"><span data-stu-id="7ae84-218">Call <xref:System.Drawing.Pen.Dispose%2A> when you are finished using the <xref:System.Drawing.Pen>.</span></span> <span data-ttu-id="7ae84-219">El método <xref:System.Drawing.Pen.Dispose%2A> deja el <xref:System.Drawing.Pen> en un estado no utilizable.</span><span class="sxs-lookup"><span data-stu-id="7ae84-219">The <xref:System.Drawing.Pen.Dispose%2A> method leaves the <xref:System.Drawing.Pen> in an unusable state.</span></span> <span data-ttu-id="7ae84-220">Después de llamar a <xref:System.Drawing.Pen.Dispose%2A>, debe liberar todas las referencias a la <xref:System.Drawing.Pen> por lo que el recolector de elementos no utilizados pueda reclamar la memoria que el <xref:System.Drawing.Pen> estaba ocupando.</span><span class="sxs-lookup"><span data-stu-id="7ae84-220">After calling <xref:System.Drawing.Pen.Dispose%2A>, you must release all references to the <xref:System.Drawing.Pen> so the garbage collector can reclaim the memory that the <xref:System.Drawing.Pen> was occupying.</span></span> <span data-ttu-id="7ae84-221">Para obtener más información, consulte [limpiar recursos no administrados](~/docs/standard/garbage-collection/unmanaged.md) y [implementar un método Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="7ae84-221">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7ae84-222">Realice siempre una llamada a <xref:System.Drawing.Pen.Dispose%2A> antes de liberar la última referencia al objeto <xref:System.Drawing.Pen>.</span><span class="sxs-lookup"><span data-stu-id="7ae84-222">Always call <xref:System.Drawing.Pen.Dispose%2A> before you release your last reference to the <xref:System.Drawing.Pen>.</span></span> <span data-ttu-id="7ae84-223">En caso contrario, los recursos que está usando no se liberarán hasta que el recolector de elementos no utilizados llame al método <xref:System.Drawing.Pen> del objeto `Finalize`.</span><span class="sxs-lookup"><span data-stu-id="7ae84-223">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Drawing.Pen> object's `Finalize` method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ae84-224">El ejemplo de código siguiente muestra los efectos de la configuración de la <xref:System.Drawing.Pen.Width%2A> y <xref:System.Drawing.Pen.LineJoin%2A> propiedades y se muestra cómo llamar a la <xref:System.Drawing.Pen.Dispose%2A> método para un <xref:System.Drawing.Pen>.</span><span class="sxs-lookup"><span data-stu-id="7ae84-224">The following code example demonstrates the effects of setting the <xref:System.Drawing.Pen.Width%2A> and <xref:System.Drawing.Pen.LineJoin%2A> properties, and shows how to call the <xref:System.Drawing.Pen.Dispose%2A> method for a <xref:System.Drawing.Pen>.</span></span>  
  
 <span data-ttu-id="7ae84-225">En este ejemplo está diseñado para usarse con Windows Forms.</span><span class="sxs-lookup"><span data-stu-id="7ae84-225">This example is designed to be used with Windows Forms.</span></span> <span data-ttu-id="7ae84-226">Pegue el código en un formulario y llame a la `ShowLineJoin` método cuando el control del formulario <xref:System.Windows.Forms.Control.Paint> evento pasando `e` como <xref:System.Windows.Forms.PaintEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="7ae84-226">Paste the code into a form and call the `ShowLineJoin` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.</span></span>  
  
 [!code-cpp[System.Drawing.PensExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.PensExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.PensExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.PensExample/CS/form1.cs#1)]
 [!code-vb[System.Drawing.PensExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.PensExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndCap">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.LineCap EndCap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Drawing2D.LineCap EndCap" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Pen.EndCap" />
      <MemberSignature Language="VB.NET" Value="Public Property EndCap As LineCap" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::LineCap EndCap { System::Drawing::Drawing2D::LineCap get(); void set(System::Drawing::Drawing2D::LineCap value); };" />
      <MemberSignature Language="F#" Value="member this.EndCap : System.Drawing.Drawing2D.LineCap with get, set" Usage="System.Drawing.Pen.EndCap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.LineCap</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7ae84-227">Obtiene o establece el estilo de punto de conexión que se usa al final de las líneas dibujadas con este <see cref="T:System.Drawing.Pen" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ae84-227">Gets or sets the cap style used at the end of lines drawn with this <see cref="T:System.Drawing.Pen" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7ae84-228">Uno de los valores de <see cref="T:System.Drawing.Drawing2D.LineCap" /> que representa el estilo de extremo usa al final de las líneas dibujadas con este <see cref="T:System.Drawing.Pen" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ae84-228">One of the <see cref="T:System.Drawing.Drawing2D.LineCap" /> values that represents the cap style used at the end of lines drawn with this <see cref="T:System.Drawing.Pen" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7ae84-229">El ejemplo de código siguiente muestra los efectos de la configuración de la <xref:System.Drawing.Pen.StartCap%2A> y <xref:System.Drawing.Pen.EndCap%2A> propiedades en un <xref:System.Drawing.Pen>.</span><span class="sxs-lookup"><span data-stu-id="7ae84-229">The following code example demonstrates the effects of setting the <xref:System.Drawing.Pen.StartCap%2A> and <xref:System.Drawing.Pen.EndCap%2A> properties on a <xref:System.Drawing.Pen>.</span></span>  
  
 <span data-ttu-id="7ae84-230">En este ejemplo está diseñado para usarse con Windows Forms.</span><span class="sxs-lookup"><span data-stu-id="7ae84-230">This example is designed to be used with Windows Forms.</span></span> <span data-ttu-id="7ae84-231">Pegue el código en un formulario y llame a la `ShowStartAndEndCaps` método cuando el control del formulario <xref:System.Windows.Forms.Control.Paint> evento pasando `e` como <xref:System.Windows.Forms.PaintEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="7ae84-231">Paste the code into a form and call the `ShowStartAndEndCaps` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.</span></span>  
  
 [!code-cpp[System.Drawing.PensExample#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.PensExample/CPP/form1.cpp#2)]
 [!code-csharp[System.Drawing.PensExample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.PensExample/CS/form1.cs#2)]
 [!code-vb[System.Drawing.PensExample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.PensExample/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="7ae84-232">El valor especificado no es un miembro de <see cref="T:System.Drawing.Drawing2D.LineCap" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ae84-232">The specified value is not a member of <see cref="T:System.Drawing.Drawing2D.LineCap" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7ae84-233">El valor de la propiedad <see cref="P:System.Drawing.Pen.EndCap" /> se establece en un objeto <see cref="T:System.Drawing.Pen" /> inmutable, como los devueltos por la clase <see cref="T:System.Drawing.Pens" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ae84-233">The <see cref="P:System.Drawing.Pen.EndCap" /> property is set on an immutable <see cref="T:System.Drawing.Pen" />, such as those returned by the <see cref="T:System.Drawing.Pens" /> class.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~Pen ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Pen.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!Pen ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="pen.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7ae84-234">Permite que un objeto intente liberar recursos y realizar otras operaciones de limpieza antes de que sea reclamado por la recolección de elementos no utilizados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ae84-234">Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LineJoin">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.LineJoin LineJoin { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Drawing2D.LineJoin LineJoin" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Pen.LineJoin" />
      <MemberSignature Language="VB.NET" Value="Public Property LineJoin As LineJoin" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::LineJoin LineJoin { System::Drawing::Drawing2D::LineJoin get(); void set(System::Drawing::Drawing2D::LineJoin value); };" />
      <MemberSignature Language="F#" Value="member this.LineJoin : System.Drawing.Drawing2D.LineJoin with get, set" Usage="System.Drawing.Pen.LineJoin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.LineJoin</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7ae84-235">Obtiene o establece el estilo de unión de los puntos de conexión de dos líneas consecutivas dibujadas con este <see cref="T:System.Drawing.Pen" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ae84-235">Gets or sets the join style for the ends of two consecutive lines drawn with this <see cref="T:System.Drawing.Pen" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7ae84-236">Un valor de <see cref="T:System.Drawing.Drawing2D.LineJoin" /> que representa el estilo de unión de los extremos de dos líneas consecutivas dibujadas con este <see cref="T:System.Drawing.Pen" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ae84-236">A <see cref="T:System.Drawing.Drawing2D.LineJoin" /> that represents the join style for the ends of two consecutive lines drawn with this <see cref="T:System.Drawing.Pen" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ae84-237">Una unión de líneas es el área común que está formado por dos líneas cuyos extremos se juntan o se superponen.</span><span class="sxs-lookup"><span data-stu-id="7ae84-237">A line join is the common area that is formed by two lines whose ends meet or overlap.</span></span> <span data-ttu-id="7ae84-238">Hay tres estilos de unión de línea: ángulo, bisel y redondo.</span><span class="sxs-lookup"><span data-stu-id="7ae84-238">There are three line join styles: miter, bevel, and round.</span></span>  <span data-ttu-id="7ae84-239">Cuando se especifica un estilo de unión de línea para un <xref:System.Drawing.Pen> objeto, que se aplicará a todas las líneas conectadas en cualquier estilo de unión <xref:System.Drawing.Drawing2D.GraphicsPath> dibujado con ese lápiz del objeto. La siguiente ilustración muestra los resultados del ejemplo de unión de línea biselada.</span><span class="sxs-lookup"><span data-stu-id="7ae84-239">When you specify a line join style for a <xref:System.Drawing.Pen> object, that join style will be applied to all the connected lines in any <xref:System.Drawing.Drawing2D.GraphicsPath> object drawn using that pen.The following illustration shows the results of the beveled line join example.</span></span>  
  
 <span data-ttu-id="7ae84-240">![Lápices](~/add/media/pens5.gif "lápices")</span><span class="sxs-lookup"><span data-stu-id="7ae84-240">![Pens](~/add/media/pens5.gif "Pens")</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ae84-241">El ejemplo de código siguiente muestra los efectos de la configuración de la <xref:System.Drawing.Pen.Width%2A> y <xref:System.Drawing.Pen.LineJoin%2A> propiedades en un <xref:System.Drawing.Pen>.</span><span class="sxs-lookup"><span data-stu-id="7ae84-241">The following code example demonstrates the effects of setting the <xref:System.Drawing.Pen.Width%2A> and <xref:System.Drawing.Pen.LineJoin%2A> properties on a <xref:System.Drawing.Pen>.</span></span>  
  
 <span data-ttu-id="7ae84-242">En este ejemplo está diseñado para usarse con Windows Forms.</span><span class="sxs-lookup"><span data-stu-id="7ae84-242">This example is designed to be used with Windows Forms.</span></span> <span data-ttu-id="7ae84-243">Pegue el código en un formulario y llame a la `ShowLineJoin` método cuando el control del formulario <xref:System.Windows.Forms.Control.Paint> evento pasando `e` como <xref:System.Windows.Forms.PaintEventArgs> .</span><span class="sxs-lookup"><span data-stu-id="7ae84-243">Paste the code into a form and call the `ShowLineJoin` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs> .</span></span>  
  
 [!code-cpp[System.Drawing.PensExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.PensExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.PensExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.PensExample/CS/form1.cs#1)]
 [!code-vb[System.Drawing.PensExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.PensExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7ae84-244">El valor de la propiedad <see cref="P:System.Drawing.Pen.LineJoin" /> se establece en un objeto <see cref="T:System.Drawing.Pen" /> inmutable, como los devueltos por la clase <see cref="T:System.Drawing.Pens" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ae84-244">The <see cref="P:System.Drawing.Pen.LineJoin" /> property is set on an immutable <see cref="T:System.Drawing.Pen" />, such as those returned by the <see cref="T:System.Drawing.Pens" /> class.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MiterLimit">
      <MemberSignature Language="C#" Value="public float MiterLimit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 MiterLimit" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Pen.MiterLimit" />
      <MemberSignature Language="VB.NET" Value="Public Property MiterLimit As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float MiterLimit { float get(); void set(float value); };" />
      <MemberSignature Language="F#" Value="member this.MiterLimit : single with get, set" Usage="System.Drawing.Pen.MiterLimit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7ae84-245">Obtiene o establece el límite del grosor de la combinación en una esquina en ángulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ae84-245">Gets or sets the limit of the thickness of the join on a mitered corner.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7ae84-246">Límite del grosor de la combinación en una esquina en ángulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ae84-246">The limit of the thickness of the join on a mitered corner.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ae84-247">La longitud del ángulo es la distancia entre la intersección de las paredes de la línea en el interior de la combinación en la intersección de las paredes de la línea fuera de la combinación.</span><span class="sxs-lookup"><span data-stu-id="7ae84-247">The miter length is the distance from the intersection of the line walls on the inside of the join to the intersection of the line walls outside of the join.</span></span> <span data-ttu-id="7ae84-248">La longitud del ángulo puede ser grande cuando el ángulo entre dos líneas es pequeño.</span><span class="sxs-lookup"><span data-stu-id="7ae84-248">The miter length can be large when the angle between two lines is small.</span></span> <span data-ttu-id="7ae84-249">El límite angular es la relación máxima permitida de la longitud del ángulo con respecto al ancho del trazo.</span><span class="sxs-lookup"><span data-stu-id="7ae84-249">The miter limit is the maximum allowed ratio of miter length to stroke width.</span></span> <span data-ttu-id="7ae84-250">El valor predeterminado es 10, 0f.</span><span class="sxs-lookup"><span data-stu-id="7ae84-250">The default value is 10.0f.</span></span>  
  
 <span data-ttu-id="7ae84-251">Si la longitud del ángulo de la combinación de la intersección supera el límite de la combinación, la combinación estará biselada para mantenerlo dentro del límite de la combinación de la intersección.</span><span class="sxs-lookup"><span data-stu-id="7ae84-251">If the miter length of the join of the intersection exceeds the limit of the join, then the join will be beveled to keep it within the limit of the join of the intersection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7ae84-252">El valor de la propiedad <see cref="P:System.Drawing.Pen.MiterLimit" /> se establece en un objeto <see cref="T:System.Drawing.Pen" /> inmutable, como los devueltos por la clase <see cref="T:System.Drawing.Pens" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ae84-252">The <see cref="P:System.Drawing.Pen.MiterLimit" /> property is set on an immutable <see cref="T:System.Drawing.Pen" />, such as those returned by the <see cref="T:System.Drawing.Pens" /> class.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="MultiplyTransform">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="7ae84-253">Multiplica la matriz de transformación de este <see cref="T:System.Drawing.Pen" /> por la <see cref="T:System.Drawing.Drawing2D.Matrix" /> especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ae84-253">Multiplies the transformation matrix for this <see cref="T:System.Drawing.Pen" /> by the specified <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MultiplyTransform">
      <MemberSignature Language="C#" Value="public void MultiplyTransform (System.Drawing.Drawing2D.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MultiplyTransform(class System.Drawing.Drawing2D.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MultiplyTransform(System::Drawing::Drawing2D::Matrix ^ matrix);" />
      <MemberSignature Language="F#" Value="member this.MultiplyTransform : System.Drawing.Drawing2D.Matrix -&gt; unit" Usage="pen.MultiplyTransform matrix" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
      </Parameters>
      <Docs>
        <param name="matrix">
          <span data-ttu-id="7ae84-254">El objeto <see cref="T:System.Drawing.Drawing2D.Matrix" /> por el que se va a multiplicar la matriz de transformación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ae84-254">The <see cref="T:System.Drawing.Drawing2D.Matrix" /> object by which to multiply the transformation matrix.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7ae84-255">Multiplica la matriz de transformación de este <see cref="T:System.Drawing.Pen" /> por la <see cref="T:System.Drawing.Drawing2D.Matrix" /> especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ae84-255">Multiplies the transformation matrix for this <see cref="T:System.Drawing.Pen" /> by the specified <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ae84-256">Este método antepone la matriz de multiplicación especificada en el `matrix` parámetro a la matriz de transformación de la operación de multiplicación.</span><span class="sxs-lookup"><span data-stu-id="7ae84-256">This method prepends the multiplication matrix specified in the `matrix` parameter to the transformation matrix for the multiplication operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ae84-257">El siguiente ejemplo de código está diseñado para su uso con Windows Forms y requiere <xref:System.Windows.Forms.PaintEventArgs> `e`, que es un parámetro de la <xref:System.Windows.Forms.Control.Paint> controlador de eventos.</span><span class="sxs-lookup"><span data-stu-id="7ae84-257">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="7ae84-258">El código realiza las siguientes acciones:</span><span class="sxs-lookup"><span data-stu-id="7ae84-258">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="7ae84-259">Crea una interfaz <xref:System.Drawing.Pen>.</span><span class="sxs-lookup"><span data-stu-id="7ae84-259">Creates a <xref:System.Drawing.Pen>.</span></span>  
  
-   <span data-ttu-id="7ae84-260">Dibuja una línea en la pantalla.</span><span class="sxs-lookup"><span data-stu-id="7ae84-260">Draws a line to the screen.</span></span>  
  
-   <span data-ttu-id="7ae84-261">Multiplica la matriz de transformación del lápiz por la matriz especificada.</span><span class="sxs-lookup"><span data-stu-id="7ae84-261">Multiplies the transformation matrix of the pen by the specified matrix.</span></span>  
  
-   <span data-ttu-id="7ae84-262">Dibuja una línea con el lápiz transformado.</span><span class="sxs-lookup"><span data-stu-id="7ae84-262">Draws a line with the transformed pen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicPenExamples#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicPenExamples/CPP/form1.cpp#2)]
 [!code-csharp[System.Drawing.ClassicPenExamples#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicPenExamples/CS/form1.cs#2)]
 [!code-vb[System.Drawing.ClassicPenExamples#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicPenExamples/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiplyTransform">
      <MemberSignature Language="C#" Value="public void MultiplyTransform (System.Drawing.Drawing2D.Matrix matrix, System.Drawing.Drawing2D.MatrixOrder order);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MultiplyTransform(class System.Drawing.Drawing2D.Matrix matrix, valuetype System.Drawing.Drawing2D.MatrixOrder order) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MultiplyTransform(System::Drawing::Drawing2D::Matrix ^ matrix, System::Drawing::Drawing2D::MatrixOrder order);" />
      <MemberSignature Language="F#" Value="member this.MultiplyTransform : System.Drawing.Drawing2D.Matrix * System.Drawing.Drawing2D.MatrixOrder -&gt; unit" Usage="pen.MultiplyTransform (matrix, order)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
        <Parameter Name="order" Type="System.Drawing.Drawing2D.MatrixOrder" />
      </Parameters>
      <Docs>
        <param name="matrix">
          <span data-ttu-id="7ae84-263">
            <see cref="T:System.Drawing.Drawing2D.Matrix" /> por la que se va a multiplicar la matriz de transformación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ae84-263">The <see cref="T:System.Drawing.Drawing2D.Matrix" /> by which to multiply the transformation matrix.</span>
          </span>
        </param>
        <param name="order">
          <span data-ttu-id="7ae84-264">Orden en que se va a realizar la operación de multiplicación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ae84-264">The order in which to perform the multiplication operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7ae84-265">Multiplica la matriz de transformación de este <see cref="T:System.Drawing.Pen" /> por la <see cref="T:System.Drawing.Drawing2D.Matrix" /> especificada y en el orden especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ae84-265">Multiplies the transformation matrix for this <see cref="T:System.Drawing.Pen" /> by the specified <see cref="T:System.Drawing.Drawing2D.Matrix" /> in the specified order.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ae84-266">Este método usa la <xref:System.Drawing.Drawing2D.MatrixOrder> elemento enumeration (anteponer o anexar) especificado por el `order` parámetro para llevar a cabo la operación de multiplicación.</span><span class="sxs-lookup"><span data-stu-id="7ae84-266">This method uses the <xref:System.Drawing.Drawing2D.MatrixOrder> enumeration element (either prepend or append) specified by the `order` parameter to carry out the multiplication operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ae84-267">El siguiente ejemplo de código está diseñado para su uso con Windows Forms y requiere <xref:System.Windows.Forms.PaintEventArgs> `e`, que es un parámetro de la <xref:System.Windows.Forms.Control.Paint> controlador de eventos.</span><span class="sxs-lookup"><span data-stu-id="7ae84-267">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="7ae84-268">El código realiza las siguientes acciones:</span><span class="sxs-lookup"><span data-stu-id="7ae84-268">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="7ae84-269">Crea una interfaz <xref:System.Drawing.Pen>.</span><span class="sxs-lookup"><span data-stu-id="7ae84-269">Creates a <xref:System.Drawing.Pen>.</span></span>  
  
-   <span data-ttu-id="7ae84-270">Dibuja una línea en la pantalla.</span><span class="sxs-lookup"><span data-stu-id="7ae84-270">Draws a line to the screen.</span></span>  
  
-   <span data-ttu-id="7ae84-271">Multiplica la matriz de transformación del lápiz por la matriz especificada.</span><span class="sxs-lookup"><span data-stu-id="7ae84-271">Multiplies the transformation matrix of the pen by the specified matrix.</span></span>  
  
-   <span data-ttu-id="7ae84-272">Dibuja una línea con el lápiz transformado.</span><span class="sxs-lookup"><span data-stu-id="7ae84-272">Draws a line with the transformed pen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicPenExamples#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicPenExamples/CPP/form1.cpp#3)]
 [!code-csharp[System.Drawing.ClassicPenExamples#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicPenExamples/CS/form1.cs#3)]
 [!code-vb[System.Drawing.ClassicPenExamples#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicPenExamples/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PenType">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.PenType PenType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Drawing2D.PenType PenType" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Pen.PenType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PenType As PenType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::PenType PenType { System::Drawing::Drawing2D::PenType get(); };" />
      <MemberSignature Language="F#" Value="member this.PenType : System.Drawing.Drawing2D.PenType" Usage="System.Drawing.Pen.PenType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.PenType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7ae84-273">Obtiene el estilo de las líneas dibujadas con este <see cref="T:System.Drawing.Pen" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ae84-273">Gets the style of lines drawn with this <see cref="T:System.Drawing.Pen" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7ae84-274">Una enumeración <see cref="T:System.Drawing.Drawing2D.PenType" /> que especifica el estilo de las líneas dibujadas con este <see cref="T:System.Drawing.Pen" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ae84-274">A <see cref="T:System.Drawing.Drawing2D.PenType" /> enumeration that specifies the style of lines drawn with this <see cref="T:System.Drawing.Pen" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ae84-275">Un <xref:System.Drawing.Pen> puede dibujar líneas sólidas, rellenas o con textura, dependiendo del estilo especificado por un miembro de la <xref:System.Drawing.Drawing2D.PenType> enumeración.</span><span class="sxs-lookup"><span data-stu-id="7ae84-275">A <xref:System.Drawing.Pen> can draw solid lines, filled lines, or textured lines, depending on the style specified by a member of the <xref:System.Drawing.Drawing2D.PenType> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetTransform">
      <MemberSignature Language="C#" Value="public void ResetTransform ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetTransform() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Pen.ResetTransform" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetTransform ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetTransform();" />
      <MemberSignature Language="F#" Value="member this.ResetTransform : unit -&gt; unit" Usage="pen.ResetTransform " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7ae84-276">Restablece la matriz de transformación geométrica de este <see cref="T:System.Drawing.Pen" /> en identidad.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ae84-276">Resets the geometric transformation matrix for this <see cref="T:System.Drawing.Pen" /> to identity.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7ae84-277">El siguiente ejemplo de código está diseñado para su uso con Windows Forms y requiere <xref:System.Windows.Forms.PaintEventArgs> `e`, que es un parámetro de la <xref:System.Windows.Forms.Control.Paint> controlador de eventos.</span><span class="sxs-lookup"><span data-stu-id="7ae84-277">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="7ae84-278">El código realiza las siguientes acciones:</span><span class="sxs-lookup"><span data-stu-id="7ae84-278">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="7ae84-279">Crea una interfaz <xref:System.Drawing.Pen>.</span><span class="sxs-lookup"><span data-stu-id="7ae84-279">Creates a <xref:System.Drawing.Pen>.</span></span>  
  
-   <span data-ttu-id="7ae84-280">Establece la matriz de transformación de la pluma para ajustar la escala de 2 veces en la dirección del eje x.</span><span class="sxs-lookup"><span data-stu-id="7ae84-280">Sets the transformation matrix of the pen to scale 2 times in the x-axis direction.</span></span>  
  
-   <span data-ttu-id="7ae84-281">Dibuja una línea en la pantalla.</span><span class="sxs-lookup"><span data-stu-id="7ae84-281">Draws a line to the screen.</span></span>  
  
-   <span data-ttu-id="7ae84-282">Restablece la matriz de transformación en identidad.</span><span class="sxs-lookup"><span data-stu-id="7ae84-282">Resets the transformation matrix to identity.</span></span>  
  
-   <span data-ttu-id="7ae84-283">Dibuja una segunda línea en la pantalla.</span><span class="sxs-lookup"><span data-stu-id="7ae84-283">Draws a second line to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicPenExamples#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicPenExamples/CPP/form1.cpp#4)]
 [!code-csharp[System.Drawing.ClassicPenExamples#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicPenExamples/CS/form1.cs#4)]
 [!code-vb[System.Drawing.ClassicPenExamples#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicPenExamples/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="RotateTransform">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="7ae84-284">Gira la transformación geométrica local el ángulo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ae84-284">Rotates the local geometric transformation by the specified angle.</span>
          </span>
          <span data-ttu-id="7ae84-285">Este método antepone la rotación a la transformación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ae84-285">This method prepends the rotation to the transformation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RotateTransform">
      <MemberSignature Language="C#" Value="public void RotateTransform (float angle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RotateTransform(float32 angle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Pen.RotateTransform(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RotateTransform (angle As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RotateTransform(float angle);" />
      <MemberSignature Language="F#" Value="member this.RotateTransform : single -&gt; unit" Usage="pen.RotateTransform angle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="angle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="angle">
          <span data-ttu-id="7ae84-286">Ángulo de rotación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ae84-286">The angle of rotation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7ae84-287">Gira la transformación geométrica local el ángulo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ae84-287">Rotates the local geometric transformation by the specified angle.</span>
          </span>
          <span data-ttu-id="7ae84-288">Este método antepone la rotación a la transformación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ae84-288">This method prepends the rotation to the transformation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ae84-289">Dado que la forma de un lápiz es circular, un giro no tiene ningún efecto visible a menos que el tamaño del lápiz en la dirección del eje x o y.</span><span class="sxs-lookup"><span data-stu-id="7ae84-289">Because the shape of a pen is circular, a rotation does not have any visible effect unless the pen is scaled in the x- or y-axis direction.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ae84-290">El siguiente ejemplo de código está diseñado para su uso con Windows Forms y requiere <xref:System.Windows.Forms.PaintEventArgs> `e`, que es un parámetro de la <xref:System.Windows.Forms.Control.Paint> controlador de eventos.</span><span class="sxs-lookup"><span data-stu-id="7ae84-290">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="7ae84-291">El código realiza las siguientes acciones:</span><span class="sxs-lookup"><span data-stu-id="7ae84-291">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="7ae84-292">Crea una interfaz <xref:System.Drawing.Pen>.</span><span class="sxs-lookup"><span data-stu-id="7ae84-292">Creates a <xref:System.Drawing.Pen>.</span></span>  
  
-   <span data-ttu-id="7ae84-293">Dibuja un rectángulo con el lápiz.</span><span class="sxs-lookup"><span data-stu-id="7ae84-293">Draws a rectangle using the pen.</span></span>  
  
-   <span data-ttu-id="7ae84-294">Se puede ampliar el lápiz por 2 veces en la dirección del eje x.</span><span class="sxs-lookup"><span data-stu-id="7ae84-294">Scales the pen by 2 times in the x-axis direction.</span></span>  
  
-   <span data-ttu-id="7ae84-295">Gira 90 grados a la derecha de la pluma.</span><span class="sxs-lookup"><span data-stu-id="7ae84-295">Rotates the pen 90 degrees clockwise.</span></span>  
  
-   <span data-ttu-id="7ae84-296">Dibuja un segundo rectángulo para demostrar la diferencia.</span><span class="sxs-lookup"><span data-stu-id="7ae84-296">Draws a second rectangle to demonstrate the difference.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicPenExamples#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicPenExamples/CPP/form1.cpp#5)]
 [!code-csharp[System.Drawing.ClassicPenExamples#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicPenExamples/CS/form1.cs#5)]
 [!code-vb[System.Drawing.ClassicPenExamples#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicPenExamples/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RotateTransform">
      <MemberSignature Language="C#" Value="public void RotateTransform (float angle, System.Drawing.Drawing2D.MatrixOrder order);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RotateTransform(float32 angle, valuetype System.Drawing.Drawing2D.MatrixOrder order) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Pen.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RotateTransform (angle As Single, order As MatrixOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RotateTransform(float angle, System::Drawing::Drawing2D::MatrixOrder order);" />
      <MemberSignature Language="F#" Value="member this.RotateTransform : single * System.Drawing.Drawing2D.MatrixOrder -&gt; unit" Usage="pen.RotateTransform (angle, order)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="angle" Type="System.Single" />
        <Parameter Name="order" Type="System.Drawing.Drawing2D.MatrixOrder" />
      </Parameters>
      <Docs>
        <param name="angle">
          <span data-ttu-id="7ae84-297">Ángulo de rotación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ae84-297">The angle of rotation.</span>
          </span>
        </param>
        <param name="order">
          <span data-ttu-id="7ae84-298">
            <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> que especifica si la matriz de rotación se agrega delante o detrás.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ae84-298">A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> that specifies whether to append or prepend the rotation matrix.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7ae84-299">Gira la transformación geométrica local el ángulo especificado y en el orden especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ae84-299">Rotates the local geometric transformation by the specified angle in the specified order.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ae84-300">Dado que la forma de un lápiz es circular, un giro no tiene ningún efecto visible a menos que el tamaño del lápiz en la dirección del eje x o y.</span><span class="sxs-lookup"><span data-stu-id="7ae84-300">Because the shape of a pen is circular, a rotation does not have any visible effect unless the pen is scaled in the x- or y-axis direction.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ae84-301">El siguiente ejemplo de código está diseñado para su uso con Windows Forms y requiere <xref:System.Windows.Forms.PaintEventArgs> `e`, que es un parámetro de la <xref:System.Windows.Forms.Control.Paint> controlador de eventos.</span><span class="sxs-lookup"><span data-stu-id="7ae84-301">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="7ae84-302">El código realiza las siguientes acciones:</span><span class="sxs-lookup"><span data-stu-id="7ae84-302">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="7ae84-303">Crea un objeto <xref:System.Drawing.Pen>.</span><span class="sxs-lookup"><span data-stu-id="7ae84-303">Creates a <xref:System.Drawing.Pen>.</span></span>  
  
-   <span data-ttu-id="7ae84-304">Se puede ampliar el lápiz por 2 veces en la dirección del eje x.</span><span class="sxs-lookup"><span data-stu-id="7ae84-304">Scales the pen by 2 times in the x-axis direction.</span></span>  
  
-   <span data-ttu-id="7ae84-305">Dibuja un rectángulo con el lápiz.</span><span class="sxs-lookup"><span data-stu-id="7ae84-305">Draws a rectangle using the pen.</span></span>  
  
-   <span data-ttu-id="7ae84-306">Gira 90 grados a la derecha de la pluma.</span><span class="sxs-lookup"><span data-stu-id="7ae84-306">Rotates the pen 90 degrees clockwise.</span></span>  
  
-   <span data-ttu-id="7ae84-307">Dibuja un segundo rectángulo para demostrar la diferencia.</span><span class="sxs-lookup"><span data-stu-id="7ae84-307">Draws a second rectangle to demonstrate the difference.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicPenExamples#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicPenExamples/CPP/form1.cpp#6)]
 [!code-csharp[System.Drawing.ClassicPenExamples#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicPenExamples/CS/form1.cs#6)]
 [!code-vb[System.Drawing.ClassicPenExamples#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicPenExamples/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ScaleTransform">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="7ae84-308">Cambia el tamaño de la transformación geométrica local en los factores especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ae84-308">Scales the local geometric transformation by the specified factors.</span>
          </span>
          <span data-ttu-id="7ae84-309">Este método antepone la matriz de escala a la transformación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ae84-309">This method prepends the scaling matrix to the transformation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ScaleTransform">
      <MemberSignature Language="C#" Value="public void ScaleTransform (float sx, float sy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScaleTransform(float32 sx, float32 sy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Pen.ScaleTransform(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScaleTransform (sx As Single, sy As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScaleTransform(float sx, float sy);" />
      <MemberSignature Language="F#" Value="member this.ScaleTransform : single * single -&gt; unit" Usage="pen.ScaleTransform (sx, sy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sx" Type="System.Single" />
        <Parameter Name="sy" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="sx">
          <span data-ttu-id="7ae84-310">Factor por el que se va a ajustar el tamaño de la transformación en la dirección del eje X.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ae84-310">The factor by which to scale the transformation in the x-axis direction.</span>
          </span>
        </param>
        <param name="sy">
          <span data-ttu-id="7ae84-311">Factor por el que se va a ajustar el tamaño de la transformación en la dirección del eje Y.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ae84-311">The factor by which to scale the transformation in the y-axis direction.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7ae84-312">Cambia el tamaño de la transformación geométrica local en los factores especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ae84-312">Scales the local geometric transformation by the specified factors.</span>
          </span>
          <span data-ttu-id="7ae84-313">Este método antepone la matriz de escala a la transformación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ae84-313">This method prepends the scaling matrix to the transformation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7ae84-314">El siguiente ejemplo de código está diseñado para su uso con Windows Forms y requiere <xref:System.Windows.Forms.PaintEventArgs> `e`, que es un parámetro de la <xref:System.Windows.Forms.Control.Paint> controlador de eventos.</span><span class="sxs-lookup"><span data-stu-id="7ae84-314">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="7ae84-315">El código realiza las siguientes acciones:</span><span class="sxs-lookup"><span data-stu-id="7ae84-315">The code performs the following actions:</span></span>  
  
 <span data-ttu-id="7ae84-316">Crea una interfaz <xref:System.Drawing.Pen>.</span><span class="sxs-lookup"><span data-stu-id="7ae84-316">Creates a <xref:System.Drawing.Pen>.</span></span>  
  
 <span data-ttu-id="7ae84-317">Dibuja un rectángulo con el lápiz.</span><span class="sxs-lookup"><span data-stu-id="7ae84-317">Draws a rectangle using the pen.</span></span>  
  
 <span data-ttu-id="7ae84-318">Se puede ampliar el lápiz por 2 veces en la dirección del eje x.</span><span class="sxs-lookup"><span data-stu-id="7ae84-318">Scales the pen by 2 times in the x-axis direction.</span></span>  
  
 <span data-ttu-id="7ae84-319">Dibuja un segundo rectángulo para demostrar la diferencia.</span><span class="sxs-lookup"><span data-stu-id="7ae84-319">Draws a second rectangle to demonstrate the difference.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicPenExamples#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicPenExamples/CPP/form1.cpp#7)]
 [!code-csharp[System.Drawing.ClassicPenExamples#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicPenExamples/CS/form1.cs#7)]
 [!code-vb[System.Drawing.ClassicPenExamples#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicPenExamples/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScaleTransform">
      <MemberSignature Language="C#" Value="public void ScaleTransform (float sx, float sy, System.Drawing.Drawing2D.MatrixOrder order);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScaleTransform(float32 sx, float32 sy, valuetype System.Drawing.Drawing2D.MatrixOrder order) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Pen.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScaleTransform (sx As Single, sy As Single, order As MatrixOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScaleTransform(float sx, float sy, System::Drawing::Drawing2D::MatrixOrder order);" />
      <MemberSignature Language="F#" Value="member this.ScaleTransform : single * single * System.Drawing.Drawing2D.MatrixOrder -&gt; unit" Usage="pen.ScaleTransform (sx, sy, order)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sx" Type="System.Single" />
        <Parameter Name="sy" Type="System.Single" />
        <Parameter Name="order" Type="System.Drawing.Drawing2D.MatrixOrder" />
      </Parameters>
      <Docs>
        <param name="sx">
          <span data-ttu-id="7ae84-320">Factor por el que se va a ajustar el tamaño de la transformación en la dirección del eje X.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ae84-320">The factor by which to scale the transformation in the x-axis direction.</span>
          </span>
        </param>
        <param name="sy">
          <span data-ttu-id="7ae84-321">Factor por el que se va a ajustar el tamaño de la transformación en la dirección del eje Y.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ae84-321">The factor by which to scale the transformation in the y-axis direction.</span>
          </span>
        </param>
        <param name="order">
          <span data-ttu-id="7ae84-322">
            <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> que especifica si la matriz de transformación de escala se agrega delante o detrás.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ae84-322">A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> that specifies whether to append or prepend the scaling matrix.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7ae84-323">Cambia el tamaño de la transformación geométrica local en los factores y en el orden especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ae84-323">Scales the local geometric transformation by the specified factors in the specified order.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7ae84-324">El siguiente ejemplo de código está diseñado para su uso con Windows Forms y requiere <xref:System.Windows.Forms.PaintEventArgs> `e`, que es un parámetro de la <xref:System.Windows.Forms.Control.Paint> controlador de eventos.</span><span class="sxs-lookup"><span data-stu-id="7ae84-324">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="7ae84-325">El código realiza las siguientes acciones:</span><span class="sxs-lookup"><span data-stu-id="7ae84-325">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="7ae84-326">Crea una interfaz <xref:System.Drawing.Pen>.</span><span class="sxs-lookup"><span data-stu-id="7ae84-326">Creates a <xref:System.Drawing.Pen>.</span></span>  
  
-   <span data-ttu-id="7ae84-327">Dibuja un rectángulo con el lápiz.</span><span class="sxs-lookup"><span data-stu-id="7ae84-327">Draws a rectangle using the pen.</span></span>  
  
-   <span data-ttu-id="7ae84-328">Se puede ampliar el lápiz por 2 veces en la dirección del eje x.</span><span class="sxs-lookup"><span data-stu-id="7ae84-328">Scales the pen by 2 times in the x-axis direction.</span></span>  
  
-   <span data-ttu-id="7ae84-329">Dibuja un segundo rectángulo para demostrar la diferencia.</span><span class="sxs-lookup"><span data-stu-id="7ae84-329">Draws a second rectangle to demonstrate the difference.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicPenExamples#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicPenExamples/CPP/form1.cpp#8)]
 [!code-csharp[System.Drawing.ClassicPenExamples#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicPenExamples/CS/form1.cs#8)]
 [!code-vb[System.Drawing.ClassicPenExamples#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicPenExamples/VB/form1.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetLineCap">
      <MemberSignature Language="C#" Value="public void SetLineCap (System.Drawing.Drawing2D.LineCap startCap, System.Drawing.Drawing2D.LineCap endCap, System.Drawing.Drawing2D.DashCap dashCap);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetLineCap(valuetype System.Drawing.Drawing2D.LineCap startCap, valuetype System.Drawing.Drawing2D.LineCap endCap, valuetype System.Drawing.Drawing2D.DashCap dashCap) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Pen.SetLineCap(System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.DashCap)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetLineCap(System::Drawing::Drawing2D::LineCap startCap, System::Drawing::Drawing2D::LineCap endCap, System::Drawing::Drawing2D::DashCap dashCap);" />
      <MemberSignature Language="F#" Value="member this.SetLineCap : System.Drawing.Drawing2D.LineCap * System.Drawing.Drawing2D.LineCap * System.Drawing.Drawing2D.DashCap -&gt; unit" Usage="pen.SetLineCap (startCap, endCap, dashCap)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startCap" Type="System.Drawing.Drawing2D.LineCap" />
        <Parameter Name="endCap" Type="System.Drawing.Drawing2D.LineCap" />
        <Parameter Name="dashCap" Type="System.Drawing.Drawing2D.DashCap" />
      </Parameters>
      <Docs>
        <param name="startCap">
          <span data-ttu-id="7ae84-330">
            <see cref="T:System.Drawing.Drawing2D.LineCap" /> que representa el estilo de extremo usa al comienzo de las líneas dibujadas con este <see cref="T:System.Drawing.Pen" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ae84-330">A <see cref="T:System.Drawing.Drawing2D.LineCap" /> that represents the cap style to use at the beginning of lines drawn with this <see cref="T:System.Drawing.Pen" />.</span>
          </span>
        </param>
        <param name="endCap">
          <span data-ttu-id="7ae84-331">
            <see cref="T:System.Drawing.Drawing2D.LineCap" /> que representa el estilo de extremo usado al final de las líneas dibujadas con este <see cref="T:System.Drawing.Pen" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ae84-331">A <see cref="T:System.Drawing.Drawing2D.LineCap" /> that represents the cap style to use at the end of lines drawn with this <see cref="T:System.Drawing.Pen" />.</span>
          </span>
        </param>
        <param name="dashCap">
          <span data-ttu-id="7ae84-332">
            <see cref="T:System.Drawing.Drawing2D.LineCap" /> que representa el estilo de extremo usado al comienzo o al final de las líneas discontinuas dibujadas con este <see cref="T:System.Drawing.Pen" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ae84-332">A <see cref="T:System.Drawing.Drawing2D.LineCap" /> that represents the cap style to use at the beginning or end of dashed lines drawn with this <see cref="T:System.Drawing.Pen" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7ae84-333">Establece los valores que determinan el estilo de extremo que se usa para finalizar las líneas dibujadas con este <see cref="T:System.Drawing.Pen" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ae84-333">Sets the values that determine the style of cap used to end lines drawn by this <see cref="T:System.Drawing.Pen" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7ae84-334">El siguiente ejemplo de código está diseñado para su uso con Windows Forms y requiere <xref:System.Windows.Forms.PaintEventArgs> `e`, que es un parámetro de la <xref:System.Windows.Forms.Control.Paint> controlador de eventos.</span><span class="sxs-lookup"><span data-stu-id="7ae84-334">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="7ae84-335">El código crea un <xref:System.Drawing.Pen> y se establece para que dibuje extremos de línea de delimitador de flecha del principio de líneas:</span><span class="sxs-lookup"><span data-stu-id="7ae84-335">The code creates a <xref:System.Drawing.Pen> and sets it to draw arrow anchor caps at the beginning of lines:</span></span>  
  
 [!code-cpp[System.Drawing.ClassicPenExamples#9](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicPenExamples/CPP/form1.cpp#9)]
 [!code-csharp[System.Drawing.ClassicPenExamples#9](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicPenExamples/CS/form1.cs#9)]
 [!code-vb[System.Drawing.ClassicPenExamples#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicPenExamples/VB/form1.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartCap">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.LineCap StartCap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Drawing2D.LineCap StartCap" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Pen.StartCap" />
      <MemberSignature Language="VB.NET" Value="Public Property StartCap As LineCap" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::LineCap StartCap { System::Drawing::Drawing2D::LineCap get(); void set(System::Drawing::Drawing2D::LineCap value); };" />
      <MemberSignature Language="F#" Value="member this.StartCap : System.Drawing.Drawing2D.LineCap with get, set" Usage="System.Drawing.Pen.StartCap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.LineCap</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7ae84-336">Obtiene o establece el estilo de punto de conexión que se usa al comienzo de las líneas dibujadas con este <see cref="T:System.Drawing.Pen" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ae84-336">Gets or sets the cap style used at the beginning of lines drawn with this <see cref="T:System.Drawing.Pen" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7ae84-337">Uno de los valores de <see cref="T:System.Drawing.Drawing2D.LineCap" /> que representa el estilo de extremo usado al comienzo de las líneas dibujadas con este <see cref="T:System.Drawing.Pen" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ae84-337">One of the <see cref="T:System.Drawing.Drawing2D.LineCap" /> values that represents the cap style used at the beginning of lines drawn with this <see cref="T:System.Drawing.Pen" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7ae84-338">El ejemplo de código siguiente muestra los efectos de la configuración de la <xref:System.Drawing.Pen.StartCap%2A> y <xref:System.Drawing.Pen.EndCap%2A> propiedades en un <xref:System.Drawing.Pen>.</span><span class="sxs-lookup"><span data-stu-id="7ae84-338">The following code example demonstrates the effects of setting the <xref:System.Drawing.Pen.StartCap%2A> and <xref:System.Drawing.Pen.EndCap%2A> properties on a <xref:System.Drawing.Pen>.</span></span>  
  
 <span data-ttu-id="7ae84-339">En este ejemplo está diseñado para usarse con Windows Forms.</span><span class="sxs-lookup"><span data-stu-id="7ae84-339">This example is designed to be used with Windows Forms.</span></span> <span data-ttu-id="7ae84-340">Pegue el código en un formulario y llame a la `ShowStartAndEndCaps` método cuando el control del formulario <xref:System.Windows.Forms.Control.Paint> evento pasando `e` como <xref:System.Windows.Forms.PaintEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="7ae84-340">Paste the code into a form and call the `ShowStartAndEndCaps` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.</span></span>  
  
 [!code-cpp[System.Drawing.PensExample#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.PensExample/CPP/form1.cpp#2)]
 [!code-csharp[System.Drawing.PensExample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.PensExample/CS/form1.cs#2)]
 [!code-vb[System.Drawing.PensExample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.PensExample/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="7ae84-341">El valor especificado no es un miembro de <see cref="T:System.Drawing.Drawing2D.LineCap" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ae84-341">The specified value is not a member of <see cref="T:System.Drawing.Drawing2D.LineCap" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7ae84-342">El valor de la propiedad <see cref="P:System.Drawing.Pen.StartCap" /> se establece en un objeto <see cref="T:System.Drawing.Pen" /> inmutable, como los devueltos por la clase <see cref="T:System.Drawing.Pens" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ae84-342">The <see cref="P:System.Drawing.Pen.StartCap" /> property is set on an immutable <see cref="T:System.Drawing.Pen" />, such as those returned by the <see cref="T:System.Drawing.Pens" /> class.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.Matrix Transform { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Drawing2D.Matrix Transform" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Pen.Transform" />
      <MemberSignature Language="VB.NET" Value="Public Property Transform As Matrix" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::Matrix ^ Transform { System::Drawing::Drawing2D::Matrix ^ get(); void set(System::Drawing::Drawing2D::Matrix ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Drawing.Drawing2D.Matrix with get, set" Usage="System.Drawing.Pen.Transform" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.Matrix</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7ae84-343">Obtiene o establece una copia de la transformación geométrica para este objeto <see cref="T:System.Drawing.Pen" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ae84-343">Gets or sets a copy of the geometric transformation for this <see cref="T:System.Drawing.Pen" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7ae84-344">Una copia de <see cref="T:System.Drawing.Drawing2D.Matrix" /> que representa la transformación geométrica para este objeto <see cref="T:System.Drawing.Pen" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ae84-344">A copy of the <see cref="T:System.Drawing.Drawing2D.Matrix" /> that represents the geometric transformation for this <see cref="T:System.Drawing.Pen" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ae84-345">Esta propiedad define una forma elíptica para la punta del lápiz.</span><span class="sxs-lookup"><span data-stu-id="7ae84-345">This property defines an elliptical shape for the pen tip.</span></span> <span data-ttu-id="7ae84-346">Esta elipse se obtiene de la forma circular predeterminada aplicando la matriz de transformación.</span><span class="sxs-lookup"><span data-stu-id="7ae84-346">This ellipse is obtained from the default circular shape by applying the transformation matrix.</span></span> <span data-ttu-id="7ae84-347">Tenga en cuenta que se omite la parte de la traducción de la matriz.</span><span class="sxs-lookup"><span data-stu-id="7ae84-347">Note that the translation portion of the matrix is ignored.</span></span> <span data-ttu-id="7ae84-348">Dado que la matriz devuelta y por la <xref:System.Drawing.Pen.Transform%2A> propiedad es una copia de la transformación geométrica de la pluma, debe eliminar la matriz cuando ya no lo necesita.</span><span class="sxs-lookup"><span data-stu-id="7ae84-348">Because the matrix returned and by the <xref:System.Drawing.Pen.Transform%2A> property is a copy of the pen's geometric transform, you should dispose of the matrix when you no longer need it.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7ae84-349">El valor de la propiedad <see cref="P:System.Drawing.Pen.Transform" /> se establece en un objeto <see cref="T:System.Drawing.Pen" /> inmutable, como los devueltos por la clase <see cref="T:System.Drawing.Pens" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ae84-349">The <see cref="P:System.Drawing.Pen.Transform" /> property is set on an immutable <see cref="T:System.Drawing.Pen" />, such as those returned by the <see cref="T:System.Drawing.Pens" /> class.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="TranslateTransform">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="7ae84-350">Convierte la transformación geométrica local en las dimensiones especificadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ae84-350">Translates the local geometric transformation by the specified dimensions.</span>
          </span>
          <span data-ttu-id="7ae84-351">Este método antepone la conversión a la transformación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ae84-351">This method prepends the translation to the transformation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TranslateTransform">
      <MemberSignature Language="C#" Value="public void TranslateTransform (float dx, float dy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TranslateTransform(float32 dx, float32 dy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Pen.TranslateTransform(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TranslateTransform (dx As Single, dy As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TranslateTransform(float dx, float dy);" />
      <MemberSignature Language="F#" Value="member this.TranslateTransform : single * single -&gt; unit" Usage="pen.TranslateTransform (dx, dy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dx" Type="System.Single" />
        <Parameter Name="dy" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="dx">
          <span data-ttu-id="7ae84-352">El valor de la conversión en X.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ae84-352">The value of the translation in x.</span>
          </span>
        </param>
        <param name="dy">
          <span data-ttu-id="7ae84-353">El valor de la conversión en Y.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ae84-353">The value of the translation in y.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7ae84-354">Convierte la transformación geométrica local en las dimensiones especificadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ae84-354">Translates the local geometric transformation by the specified dimensions.</span>
          </span>
          <span data-ttu-id="7ae84-355">Este método antepone la conversión a la transformación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ae84-355">This method prepends the translation to the transformation.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TranslateTransform">
      <MemberSignature Language="C#" Value="public void TranslateTransform (float dx, float dy, System.Drawing.Drawing2D.MatrixOrder order);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TranslateTransform(float32 dx, float32 dy, valuetype System.Drawing.Drawing2D.MatrixOrder order) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Pen.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TranslateTransform (dx As Single, dy As Single, order As MatrixOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TranslateTransform(float dx, float dy, System::Drawing::Drawing2D::MatrixOrder order);" />
      <MemberSignature Language="F#" Value="member this.TranslateTransform : single * single * System.Drawing.Drawing2D.MatrixOrder -&gt; unit" Usage="pen.TranslateTransform (dx, dy, order)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dx" Type="System.Single" />
        <Parameter Name="dy" Type="System.Single" />
        <Parameter Name="order" Type="System.Drawing.Drawing2D.MatrixOrder" />
      </Parameters>
      <Docs>
        <param name="dx">
          <span data-ttu-id="7ae84-356">El valor de la conversión en X.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ae84-356">The value of the translation in x.</span>
          </span>
        </param>
        <param name="dy">
          <span data-ttu-id="7ae84-357">El valor de la conversión en Y.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ae84-357">The value of the translation in y.</span>
          </span>
        </param>
        <param name="order">
          <span data-ttu-id="7ae84-358">El orden (antes o después) en que se va a aplicar la conversión.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ae84-358">The order (prepend or append) in which to apply the translation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7ae84-359">Convierte la transformación geométrica local en las dimensiones especificadas en el orden indicado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ae84-359">Translates the local geometric transformation by the specified dimensions in the specified order.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public float Width { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Width" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Pen.Width" />
      <MemberSignature Language="VB.NET" Value="Public Property Width As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float Width { float get(); void set(float value); };" />
      <MemberSignature Language="F#" Value="member this.Width : single with get, set" Usage="System.Drawing.Pen.Width" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7ae84-360">Obtiene o establece el ancho de este objeto <see cref="T:System.Drawing.Pen" />, en unidades del objeto <see cref="T:System.Drawing.Graphics" /> usado para dibujar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ae84-360">Gets or sets the width of this <see cref="T:System.Drawing.Pen" />, in units of the <see cref="T:System.Drawing.Graphics" /> object used for drawing.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7ae84-361">Ancho de este <see cref="T:System.Drawing.Pen" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ae84-361">The width of this <see cref="T:System.Drawing.Pen" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ae84-362">Puede tener acceso a la unidad de medida de la <xref:System.Drawing.Graphics> objeto mediante su <xref:System.Drawing.Graphics.PageUnit%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="7ae84-362">You can access the unit of measure of the <xref:System.Drawing.Graphics> object using its <xref:System.Drawing.Graphics.PageUnit%2A> property.</span></span> <span data-ttu-id="7ae84-363">Normalmente, la unidad de medida es píxeles.</span><span class="sxs-lookup"><span data-stu-id="7ae84-363">The unit of measure is typically pixels.</span></span> <span data-ttu-id="7ae84-364">Un <xref:System.Drawing.Pen.Width%2A> 0 dará como resultado la <xref:System.Drawing.Pen> dibujo como si el <xref:System.Drawing.Pen.Width%2A> dieron 1.</span><span class="sxs-lookup"><span data-stu-id="7ae84-364">A <xref:System.Drawing.Pen.Width%2A> of 0 will result in the <xref:System.Drawing.Pen> drawing as if the <xref:System.Drawing.Pen.Width%2A> were 1.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ae84-365">El ejemplo de código siguiente muestra los efectos de la configuración de la <xref:System.Drawing.Pen.Width%2A> y <xref:System.Drawing.Pen.LineJoin%2A> propiedades en un <xref:System.Drawing.Pen>.</span><span class="sxs-lookup"><span data-stu-id="7ae84-365">The following code example demonstrates the effects of setting the <xref:System.Drawing.Pen.Width%2A> and <xref:System.Drawing.Pen.LineJoin%2A> properties on a <xref:System.Drawing.Pen>.</span></span>  
  
 <span data-ttu-id="7ae84-366">En este ejemplo está diseñado para usarse con Windows Forms.</span><span class="sxs-lookup"><span data-stu-id="7ae84-366">This example is designed to be used with Windows Forms.</span></span> <span data-ttu-id="7ae84-367">Pegue el código en un formulario y llame a la `ShowLineJoin` método cuando el control del formulario <xref:System.Windows.Forms.Control.Paint> evento pasando `e` como <xref:System.Windows.Forms.PaintEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="7ae84-367">Paste the code into a form and call the `ShowLineJoin` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.</span></span>  
  
 [!code-cpp[System.Drawing.PensExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.PensExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.PensExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.PensExample/CS/form1.cs#1)]
 [!code-vb[System.Drawing.PensExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.PensExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7ae84-368">El valor de la propiedad <see cref="P:System.Drawing.Pen.Width" /> se establece en un objeto <see cref="T:System.Drawing.Pen" /> inmutable, como los devueltos por la clase <see cref="T:System.Drawing.Pens" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7ae84-368">The <see cref="P:System.Drawing.Pen.Width" /> property is set on an immutable <see cref="T:System.Drawing.Pen" />, such as those returned by the <see cref="T:System.Drawing.Pens" /> class.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>
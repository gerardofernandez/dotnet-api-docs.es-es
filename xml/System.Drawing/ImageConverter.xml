<Type Name="ImageConverter" FullName="System.Drawing.ImageConverter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5945cbe967f46f46537de86e9cb9677df30cdb4f" /><Meta Name="ms.sourcegitcommit" Value="42a3c35677e9d87eeb503607ae50c9d39827d414" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="12/17/2018" /><Meta Name="ms.locfileid" Value="53466863" /></Metadata><TypeSignature Language="C#" Value="public class ImageConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ImageConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.ImageConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class ImageConverter&#xA;Inherits TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class ImageConverter : System::ComponentModel::TypeConverter" />
  <TypeSignature Language="F#" Value="type ImageConverter = class&#xA;    inherit TypeConverter" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="809a9-101"><see cref="T:System.Drawing.ImageConverter" /> es una clase que se puede utilizar para convertir objetos <see cref="T:System.Drawing.Image" /> de un tipo de datos a otro.</span><span class="sxs-lookup"><span data-stu-id="809a9-101"><see cref="T:System.Drawing.ImageConverter" /> is a class that can be used to convert <see cref="T:System.Drawing.Image" /> objects from one data type to another.</span></span> <span data-ttu-id="809a9-102">Obtenga acceso a esta clase mediante el objeto <see cref="T:System.ComponentModel.TypeDescriptor" />.</span><span class="sxs-lookup"><span data-stu-id="809a9-102">Access this class through the <see cref="T:System.ComponentModel.TypeDescriptor" /> object.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImageConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.ImageConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ImageConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="809a9-103">Inicializa una nueva instancia de la clase <see cref="T:System.Drawing.ImageConverter" />.</span><span class="sxs-lookup"><span data-stu-id="809a9-103">Initializes a new instance of the <see cref="T:System.Drawing.ImageConverter" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.ImageConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertFrom (context As ITypeDescriptorContext, sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ sourceType);" />
      <MemberSignature Language="F#" Value="override this.CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="imageConverter.CanConvertFrom (context, sourceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="809a9-104"><see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que ofrece un contexto de formato.</span><span class="sxs-lookup"><span data-stu-id="809a9-104">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="sourceType"><span data-ttu-id="809a9-105"><see cref="T:System.Type" /> que especifica el tipo a partir del cual se desea realizar la conversión.</span><span class="sxs-lookup"><span data-stu-id="809a9-105">A <see cref="T:System.Type" /> that specifies the type you want to convert from.</span></span></param>
        <summary><span data-ttu-id="809a9-106">Determina si este objeto <see cref="T:System.Drawing.ImageConverter" /> puede convertir una instancia de un tipo especificado en un objeto <see cref="T:System.Drawing.Image" /> utilizando el contexto especificado.</span><span class="sxs-lookup"><span data-stu-id="809a9-106">Determines whether this <see cref="T:System.Drawing.ImageConverter" /> can convert an instance of a specified type to an <see cref="T:System.Drawing.Image" />, using the specified context.</span></span></summary>
        <returns><span data-ttu-id="809a9-107">Este método devuelve <see langword="true" /> si este <see cref="T:System.Drawing.ImageConverter" /> puede realizar la conversión; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="809a9-107">This method returns <see langword="true" /> if this <see cref="T:System.Drawing.ImageConverter" /> can perform the conversion; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="809a9-108">Este método devuelve `true` solo si `sourceType` es igual a una matriz de bytes.</span><span class="sxs-lookup"><span data-stu-id="809a9-108">This method returns `true` only if `sourceType` is equal to a byte array.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.ImageConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertTo (context As ITypeDescriptorContext, destinationType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="override this.CanConvertTo : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="imageConverter.CanConvertTo (context, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="809a9-109"><see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que ofrece un contexto de formato.</span><span class="sxs-lookup"><span data-stu-id="809a9-109">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="destinationType"><span data-ttu-id="809a9-110"><see cref="T:System.Type" /> que especifica el tipo de destino de la conversión.</span><span class="sxs-lookup"><span data-stu-id="809a9-110">A <see cref="T:System.Type" /> that specifies the type you want to convert to.</span></span></param>
        <summary><span data-ttu-id="809a9-111">Determina si <see cref="T:System.Drawing.ImageConverter" /> puede convertir <see cref="T:System.Drawing.Image" /> en una instancia de un tipo especificado, mediante el contexto especificado.</span><span class="sxs-lookup"><span data-stu-id="809a9-111">Determines whether this <see cref="T:System.Drawing.ImageConverter" /> can convert an <see cref="T:System.Drawing.Image" /> to an instance of a specified type, using the specified context.</span></span></summary>
        <returns><span data-ttu-id="809a9-112">Este método devuelve <see langword="true" /> si este <see cref="T:System.Drawing.ImageConverter" /> puede realizar la conversión; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="809a9-112">This method returns <see langword="true" /> if this <see cref="T:System.Drawing.ImageConverter" /> can perform the conversion; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="809a9-113">Este método devuelve `true` solo si `sourceType` es igual a una matriz de bytes o una cadena.</span><span class="sxs-lookup"><span data-stu-id="809a9-113">This method returns `true` only if `sourceType` is equal to a byte array or string.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.ImageConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj" Usage="imageConverter.ConvertFrom (context, culture, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="809a9-114"><see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que ofrece un contexto de formato.</span><span class="sxs-lookup"><span data-stu-id="809a9-114">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="culture"><span data-ttu-id="809a9-115">Objeto <see cref="T:System.Globalization.CultureInfo" /> que contiene información sobre una referencia cultural específica.</span><span class="sxs-lookup"><span data-stu-id="809a9-115">A <see cref="T:System.Globalization.CultureInfo" /> that holds information about a specific culture.</span></span></param>
        <param name="value"><span data-ttu-id="809a9-116"><see cref="T:System.Object" /> que va a convertirse.</span><span class="sxs-lookup"><span data-stu-id="809a9-116">The <see cref="T:System.Object" /> to be converted.</span></span></param>
        <summary><span data-ttu-id="809a9-117">Convierte un objeto especificado en un <see cref="T:System.Drawing.Image" />.</span><span class="sxs-lookup"><span data-stu-id="809a9-117">Converts a specified object to an <see cref="T:System.Drawing.Image" />.</span></span></summary>
        <returns><span data-ttu-id="809a9-118">Si este método se ejecuta correctamente, devuelve el objeto <see cref="T:System.Drawing.Image" /> creado al convertir el objeto especificado.</span><span class="sxs-lookup"><span data-stu-id="809a9-118">If this method succeeds, it returns the <see cref="T:System.Drawing.Image" /> that it created by converting the specified object.</span></span> <span data-ttu-id="809a9-119">De lo contrario, produce una excepción.</span><span class="sxs-lookup"><span data-stu-id="809a9-119">Otherwise, it throws an exception.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="809a9-120">No se puede completar la conversión.</span><span class="sxs-lookup"><span data-stu-id="809a9-120">The conversion cannot be completed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.ImageConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="override this.ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj" Usage="imageConverter.ConvertTo (context, culture, value, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="809a9-121">Un contexto de formateador.</span><span class="sxs-lookup"><span data-stu-id="809a9-121">A formatter context.</span></span> <span data-ttu-id="809a9-122">Este objeto se puede usar para obtener más información del entorno desde el que se llama a este convertidor.</span><span class="sxs-lookup"><span data-stu-id="809a9-122">This object can be used to get more information about the environment this converter is being called from.</span></span> <span data-ttu-id="809a9-123">Puede ser <see langword="null" />, por lo que debe comprobarlo siempre.</span><span class="sxs-lookup"><span data-stu-id="809a9-123">This may be <see langword="null" />, so you should always check.</span></span> <span data-ttu-id="809a9-124">Además, las propiedades del objeto de contexto también pueden devolver <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="809a9-124">Also, properties on the context object may also return <see langword="null" />.</span></span></param>
        <param name="culture"><span data-ttu-id="809a9-125">Objeto <see cref="T:System.Globalization.CultureInfo" /> que especifica las convenciones de formato usadas por una referencia cultural determinada.</span><span class="sxs-lookup"><span data-stu-id="809a9-125">A <see cref="T:System.Globalization.CultureInfo" /> object that specifies formatting conventions used by a particular culture.</span></span></param>
        <param name="value"><span data-ttu-id="809a9-126"><see cref="T:System.Drawing.Image" /> que se va a convertir.</span><span class="sxs-lookup"><span data-stu-id="809a9-126">The <see cref="T:System.Drawing.Image" /> to convert.</span></span></param>
        <param name="destinationType"><span data-ttu-id="809a9-127">El objeto <see cref="T:System.Type" /> al cual se va a convertir el objeto <see cref="T:System.Drawing.Image" />.</span><span class="sxs-lookup"><span data-stu-id="809a9-127">The <see cref="T:System.Type" /> to convert the <see cref="T:System.Drawing.Image" /> to.</span></span></param>
        <summary><span data-ttu-id="809a9-128">Convierte un objeto <see cref="T:System.Drawing.Image" /> (o cualquier otro objeto que se pueda convertir a un tipo <see cref="T:System.Drawing.Image" />) al tipo especificado.</span><span class="sxs-lookup"><span data-stu-id="809a9-128">Converts an <see cref="T:System.Drawing.Image" /> (or an object that can be cast to an <see cref="T:System.Drawing.Image" />) to the specified type.</span></span></summary>
        <returns><span data-ttu-id="809a9-129">Este método devuelve el objeto convertido.</span><span class="sxs-lookup"><span data-stu-id="809a9-129">This method returns the converted object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="809a9-130">La conversión de tipos más comunes es hacia y desde un tipo de cadena.</span><span class="sxs-lookup"><span data-stu-id="809a9-130">The most common type conversion is to and from a string type.</span></span> <span data-ttu-id="809a9-131">La implementación predeterminada llama el <xref:System.Object.ToString%2A> método del objeto si el objeto es válido y si el tipo de destino es string.</span><span class="sxs-lookup"><span data-stu-id="809a9-131">The default implementation calls the <xref:System.Object.ToString%2A> method of the object if the object is valid and if the destination type is string.</span></span> <span data-ttu-id="809a9-132">Si este método no puede convertir el objeto especificado al tipo de destino, produce un <xref:System.NotSupportedException> excepción.</span><span class="sxs-lookup"><span data-stu-id="809a9-132">If this method cannot convert the specified object to the destination type, it throws a <xref:System.NotSupportedException> exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="809a9-133">No se puede completar la conversión.</span><span class="sxs-lookup"><span data-stu-id="809a9-133">The conversion cannot be completed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.PropertyDescriptorCollection GetProperties (System.ComponentModel.ITypeDescriptorContext context, object value, Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ComponentModel.PropertyDescriptorCollection GetProperties(class System.ComponentModel.ITypeDescriptorContext context, object value, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.ImageConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetProperties (context As ITypeDescriptorContext, value As Object, attributes As Attribute()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(System::ComponentModel::ITypeDescriptorContext ^ context, System::Object ^ value, cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="override this.GetProperties : System.ComponentModel.ITypeDescriptorContext * obj * Attribute[] -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="imageConverter.GetProperties (context, value, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="attributes" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="809a9-134">Un descriptor de tipo a través del que se puede proporcionar contexto adicional.</span><span class="sxs-lookup"><span data-stu-id="809a9-134">A type descriptor through which additional context can be provided.</span></span></param>
        <param name="value"><span data-ttu-id="809a9-135">Valor del objeto del que se van a obtener las propiedades.</span><span class="sxs-lookup"><span data-stu-id="809a9-135">The value of the object to get the properties for.</span></span></param>
        <param name="attributes"><span data-ttu-id="809a9-136">Una matriz de objetos <see cref="T:System.Attribute" /> que describen las propiedades.</span><span class="sxs-lookup"><span data-stu-id="809a9-136">An array of <see cref="T:System.Attribute" /> objects that describe the properties.</span></span></param>
        <summary><span data-ttu-id="809a9-137">Obtiene el conjunto de propiedades de este tipo.</span><span class="sxs-lookup"><span data-stu-id="809a9-137">Gets the set of properties for this type.</span></span></summary>
        <returns><span data-ttu-id="809a9-138">Conjunto de propiedades que se deben exponer para este tipo de datos.</span><span class="sxs-lookup"><span data-stu-id="809a9-138">The set of properties that should be exposed for this data type.</span></span> <span data-ttu-id="809a9-139">Si no se deben exponer propiedades, podría devolver <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="809a9-139">If no properties should be exposed, this can return <see langword="null" />.</span></span> <span data-ttu-id="809a9-140">La implementación predeterminada siempre devuelve <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="809a9-140">The default implementation always returns <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="809a9-141">De forma predeterminada, un tipo no devuelve ninguna propiedad.</span><span class="sxs-lookup"><span data-stu-id="809a9-141">By default, a type does not return any properties.</span></span> <span data-ttu-id="809a9-142">Una implementación sencilla de este método llama a la <xref:System.ComponentModel.TypeConverter.GetProperties%2A> método para el tipo de datos correcto.</span><span class="sxs-lookup"><span data-stu-id="809a9-142">An easy implementation of this method calls the <xref:System.ComponentModel.TypeConverter.GetProperties%2A> method for the correct data type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertiesSupported">
      <MemberSignature Language="C#" Value="public override bool GetPropertiesSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetPropertiesSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.ImageConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetPropertiesSupported (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetPropertiesSupported(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.GetPropertiesSupported : System.ComponentModel.ITypeDescriptorContext -&gt; bool" Usage="imageConverter.GetPropertiesSupported context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="809a9-143">Un descriptor de tipo a través del que se puede proporcionar contexto adicional.</span><span class="sxs-lookup"><span data-stu-id="809a9-143">A type descriptor through which additional context can be provided.</span></span></param>
        <summary><span data-ttu-id="809a9-144">Indica si este objeto admite propiedades.</span><span class="sxs-lookup"><span data-stu-id="809a9-144">Indicates whether this object supports properties.</span></span> <span data-ttu-id="809a9-145">De forma predeterminada, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="809a9-145">By default, this is <see langword="false" />.</span></span></summary>
        <returns><span data-ttu-id="809a9-146">Este método devuelve <see langword="true" /> si se debe llamar al objeto <see cref="Overload:System.Drawing.ImageConverter.GetProperties" /> para buscar las propiedades de este objeto.</span><span class="sxs-lookup"><span data-stu-id="809a9-146">This method returns <see langword="true" /> if the <see cref="Overload:System.Drawing.ImageConverter.GetProperties" /> method should be called to find the properties of this object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
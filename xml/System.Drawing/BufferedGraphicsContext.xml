<Type Name="BufferedGraphicsContext" FullName="System.Drawing.BufferedGraphicsContext">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3cd33420e3c9ab1872718713285569f6c1365879" /><Meta Name="ms.sourcegitcommit" Value="d40b35262cbc997b79bf76da3a39ccf59b738efc" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="12/05/2018" /><Meta Name="ms.locfileid" Value="52908921" /></Metadata><TypeSignature Language="C#" Value="public sealed class BufferedGraphicsContext : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit BufferedGraphicsContext extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.BufferedGraphicsContext" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class BufferedGraphicsContext&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class BufferedGraphicsContext sealed : IDisposable" />
  <TypeSignature Language="F#" Value="type BufferedGraphicsContext = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Drawing.Common</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.1</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="f4550-101">Proporciona los métodos para crear búferes de gráficos que se pueden utilizar para el almacenamiento en doble búfer.</span><span class="sxs-lookup"><span data-stu-id="f4550-101">Provides methods for creating graphics buffers that can be used for double buffering.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4550-102">La <xref:System.Drawing.BufferedGraphicsContext> clase le permite implementar un doble búfer personalizado para los gráficos.</span><span class="sxs-lookup"><span data-stu-id="f4550-102">The <xref:System.Drawing.BufferedGraphicsContext> class allows you to implement custom double buffering for your graphics.</span></span> <span data-ttu-id="f4550-103">Gráficos que usan el almacenamiento en doble búfer pueden reducir o eliminar el parpadeo que se produjo al volver a dibujar una superficie de pantalla.</span><span class="sxs-lookup"><span data-stu-id="f4550-103">Graphics that use double buffering can reduce or eliminate flicker that is caused by redrawing a display surface.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f4550-104">La manera más sencilla de usar el almacenamiento en doble búfer es establecer el <xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer> controlar la marca de estilo de un control mediante la <xref:System.Windows.Forms.Control.SetStyle%2A> método.</span><span class="sxs-lookup"><span data-stu-id="f4550-104">The simplest way to use double buffering is to set the <xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer> control style flag on a control using the <xref:System.Windows.Forms.Control.SetStyle%2A> method.</span></span> <span data-ttu-id="f4550-105">Establecer el <xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer> marca los estilos de control para un control redirige todas las operaciones de dibujo del control a través de un búfer de gráficos de forma predeterminada, sin necesidad de ningún código adicional.</span><span class="sxs-lookup"><span data-stu-id="f4550-105">Setting the <xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer> control styles flag for a control redirects all painting for the control through a default graphics buffer, without requiring any additional code.</span></span> <span data-ttu-id="f4550-106">Esta marca se establece en `true` de forma predeterminada.</span><span class="sxs-lookup"><span data-stu-id="f4550-106">This flag is set to `true` by default.</span></span>  
  
 <span data-ttu-id="f4550-107">La <xref:System.Drawing.BufferedGraphicsContext> clase proporciona métodos para crear y configurar un búfer de gráficos.</span><span class="sxs-lookup"><span data-stu-id="f4550-107">The <xref:System.Drawing.BufferedGraphicsContext> class provides methods for creating and configuring a graphics buffer.</span></span> <span data-ttu-id="f4550-108">El <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> método crea un <xref:System.Drawing.BufferedGraphics>, que es un contenedor para un búfer de gráficos que también proporciona métodos que puede usar para escribir en el búfer y representar su contenido en un dispositivo de salida.</span><span class="sxs-lookup"><span data-stu-id="f4550-108">The <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> method creates a <xref:System.Drawing.BufferedGraphics>, which is a wrapper for a graphics buffer that also provides methods you can use to write to the buffer and render its contents to an output device.</span></span>  
  
 <span data-ttu-id="f4550-109">Puede recuperar el <xref:System.Drawing.BufferedGraphicsContext> para el dominio de aplicación actual desde estático <xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=nameWithType> propiedad.</span><span class="sxs-lookup"><span data-stu-id="f4550-109">You can retrieve the <xref:System.Drawing.BufferedGraphicsContext> for the current application domain from the static <xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="f4550-110">Para aplicaciones intensivas gráficamente como animación, puede crear una dedicado <xref:System.Drawing.BufferedGraphicsContext> utilizando el constructor, pero la mayoría de las aplicaciones la <xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=nameWithType> propiedad será suficiente.</span><span class="sxs-lookup"><span data-stu-id="f4550-110">For graphically intensive applications such as animation, you can create a dedicated <xref:System.Drawing.BufferedGraphicsContext> using the constructor, but for most applications the <xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=nameWithType> property will be sufficient.</span></span>  
  
 <span data-ttu-id="f4550-111">Para obtener más información sobre el dibujo de gráficos almacenados en búfer y las implementaciones personalizadas de almacenamiento en búfer, vea [Double Buffered Graphics](~/docs/framework/winforms/advanced/double-buffered-graphics.md) y [How to: Manually Manage Buffered Graphics](~/docs/framework/winforms/advanced/how-to-manually-manage-buffered-graphics.md).</span><span class="sxs-lookup"><span data-stu-id="f4550-111">For more information on drawing buffered graphics and custom buffering implementations, see [Double Buffered Graphics](~/docs/framework/winforms/advanced/double-buffered-graphics.md) and [How to: Manually Manage Buffered Graphics](~/docs/framework/winforms/advanced/how-to-manually-manage-buffered-graphics.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f4550-112">En el ejemplo de código siguiente se muestra cómo adquirir el <xref:System.Drawing.BufferedGraphicsContext> para el dominio de aplicación actual.</span><span class="sxs-lookup"><span data-stu-id="f4550-112">The following code example demonstrates how to acquire the <xref:System.Drawing.BufferedGraphicsContext> for the current application domain.</span></span> <span data-ttu-id="f4550-113">Este código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Drawing.BufferedGraphics> clase.</span><span class="sxs-lookup"><span data-stu-id="f4550-113">This code is part of a larger example provided for the <xref:System.Drawing.BufferedGraphics> class.</span></span>  
  
 [!code-cpp[BufferingExamples#1](~/samples/snippets/cpp/VS_Snippets_Winforms/BufferingExamples/CPP/bufferingexamples.cpp#1)]
 [!code-csharp[BufferingExamples#1](~/samples/snippets/csharp/VS_Snippets_Winforms/BufferingExamples/CS/bufferingexamples.cs#1)]
 [!code-vb[BufferingExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BufferingExamples/VB/bufferingexamples.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Drawing.BufferedGraphics" />
    <altmember cref="T:System.Drawing.BufferedGraphicsManager" />
    <altmember cref="F:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer" />
    <related type="Article" href="~/docs/framework/winforms/advanced/double-buffered-graphics.md"><span data-ttu-id="f4550-114">Gráficos de doble búfer</span><span class="sxs-lookup"><span data-stu-id="f4550-114">Double Buffered Graphics</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BufferedGraphicsContext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.BufferedGraphicsContext.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BufferedGraphicsContext();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f4550-115">Inicializa una nueva instancia de la clase <see cref="T:System.Drawing.BufferedGraphicsContext" />.</span><span class="sxs-lookup"><span data-stu-id="f4550-115">Initializes a new instance of the <see cref="T:System.Drawing.BufferedGraphicsContext" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4550-116">Para aplicaciones intensivas gráficamente como animación, en ocasiones puede mejorar el rendimiento mediante el uso de una dedicado <xref:System.Drawing.BufferedGraphicsContext> en lugar de la instancia predeterminada proporcionada por el <xref:System.Drawing.BufferedGraphicsManager>.</span><span class="sxs-lookup"><span data-stu-id="f4550-116">For graphically intensive applications such as animation, you can sometimes improve performance by using a dedicated <xref:System.Drawing.BufferedGraphicsContext> instead of the default instance provided by the <xref:System.Drawing.BufferedGraphicsManager>.</span></span> <span data-ttu-id="f4550-117">Esto le permite crear y administrar búferes de gráficos individualmente.</span><span class="sxs-lookup"><span data-stu-id="f4550-117">This allows you to create and manage graphics buffers individually.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f4550-118">Siempre debe llamar a <xref:System.Drawing.BufferedGraphicsContext.Dispose%2A> cuando termine de usar una dedicado <xref:System.Drawing.BufferedGraphicsContext>.</span><span class="sxs-lookup"><span data-stu-id="f4550-118">You should always call <xref:System.Drawing.BufferedGraphicsContext.Dispose%2A> when you finish using a dedicated <xref:System.Drawing.BufferedGraphicsContext>.</span></span>  
  
 <span data-ttu-id="f4550-119">Para obtener más información acerca de los búferes de gráficos dedicados, vea [How to: Manually Manage Buffered Graphics](~/docs/framework/winforms/advanced/how-to-manually-manage-buffered-graphics.md).</span><span class="sxs-lookup"><span data-stu-id="f4550-119">For more information about dedicated graphics buffers, see [How to: Manually Manage Buffered Graphics](~/docs/framework/winforms/advanced/how-to-manually-manage-buffered-graphics.md).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/advanced/double-buffered-graphics.md"><span data-ttu-id="f4550-120">Gráficos de doble búfer</span><span class="sxs-lookup"><span data-stu-id="f4550-120">Double Buffered Graphics</span></span></related>
        <related type="Article" href="~/docs/framework/winforms/advanced/how-to-manually-manage-buffered-graphics.md"><span data-ttu-id="f4550-121">Cómo: Administrar manualmente gráficos almacenados en búfer</span><span class="sxs-lookup"><span data-stu-id="f4550-121">How to: Manually Manage Buffered Graphics</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Allocate">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f4550-122">Crea un búfer de gráficos.</span><span class="sxs-lookup"><span data-stu-id="f4550-122">Creates a graphics buffer.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Allocate">
      <MemberSignature Language="C#" Value="public System.Drawing.BufferedGraphics Allocate (System.Drawing.Graphics targetGraphics, System.Drawing.Rectangle targetRectangle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.BufferedGraphics Allocate(class System.Drawing.Graphics targetGraphics, valuetype System.Drawing.Rectangle targetRectangle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.BufferedGraphicsContext.Allocate(System.Drawing.Graphics,System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Function Allocate (targetGraphics As Graphics, targetRectangle As Rectangle) As BufferedGraphics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::BufferedGraphics ^ Allocate(System::Drawing::Graphics ^ targetGraphics, System::Drawing::Rectangle targetRectangle);" />
      <MemberSignature Language="F#" Value="member this.Allocate : System.Drawing.Graphics * System.Drawing.Rectangle -&gt; System.Drawing.BufferedGraphics" Usage="bufferedGraphicsContext.Allocate (targetGraphics, targetRectangle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.BufferedGraphics</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetGraphics" Type="System.Drawing.Graphics" />
        <Parameter Name="targetRectangle" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="targetGraphics"><span data-ttu-id="f4550-123"><see cref="T:System.Drawing.Graphics" /> cuyo formato de píxel se va a utilizar para el nuevo búfer.</span><span class="sxs-lookup"><span data-stu-id="f4550-123">The <see cref="T:System.Drawing.Graphics" /> to match the pixel format for the new buffer to.</span></span></param>
        <param name="targetRectangle"><span data-ttu-id="f4550-124"><see cref="T:System.Drawing.Rectangle" /> que indica el tamaño del búfer que se va a crear.</span><span class="sxs-lookup"><span data-stu-id="f4550-124">A <see cref="T:System.Drawing.Rectangle" /> indicating the size of the buffer to create.</span></span></param>
        <summary><span data-ttu-id="f4550-125">Crea un búfer de gráficos del tamaño especificado con el formato de píxel del <see cref="T:System.Drawing.Graphics" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="f4550-125">Creates a graphics buffer of the specified size using the pixel format of the specified <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
        <returns><span data-ttu-id="f4550-126"><see cref="T:System.Drawing.BufferedGraphics" /> que se puede utilizar para dibujar en un búfer con las dimensiones especificadas.</span><span class="sxs-lookup"><span data-stu-id="f4550-126">A <see cref="T:System.Drawing.BufferedGraphics" /> that can be used to draw to a buffer of the specified dimensions.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4550-127">Cuando se llama a la <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> método con un rectángulo cuyo tamaño supera el valor de la <xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A> propiedad, un archivo temporal <xref:System.Drawing.BufferedGraphicsContext> se crea para asignar el búfer y proporcionar un contexto temporal del búfer.</span><span class="sxs-lookup"><span data-stu-id="f4550-127">When you call the <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> method with a rectangle whose size exceeds the value of the <xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A> property, a temporary <xref:System.Drawing.BufferedGraphicsContext> is created to allocate the buffer and provide a temporary context for the buffer.</span></span> <span data-ttu-id="f4550-128">El nuevo <xref:System.Drawing.BufferedGraphicsContext> es distinta de la <xref:System.Drawing.BufferedGraphicsContext> para la aplicación de dominio y se elimina automáticamente cuando el <xref:System.Drawing.BufferedGraphics> devuelto por la <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> se elimina el método.</span><span class="sxs-lookup"><span data-stu-id="f4550-128">The new <xref:System.Drawing.BufferedGraphicsContext> is distinct from the <xref:System.Drawing.BufferedGraphicsContext> for the application domain and it is disposed automatically when the <xref:System.Drawing.BufferedGraphics> returned by the <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> method is disposed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f4550-129">En el ejemplo de código siguiente se muestra cómo crear un búfer de gráficos mediante la <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> método.</span><span class="sxs-lookup"><span data-stu-id="f4550-129">The following code example demonstrates creating a graphics buffer using the <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> method.</span></span> <span data-ttu-id="f4550-130">Este código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Drawing.BufferedGraphics> clase.</span><span class="sxs-lookup"><span data-stu-id="f4550-130">This code is part of a larger example provided for the <xref:System.Drawing.BufferedGraphics> class.</span></span>  
  
 [!code-cpp[BufferingExamples#3](~/samples/snippets/cpp/VS_Snippets_Winforms/BufferingExamples/CPP/bufferingexamples.cpp#3)]
 [!code-csharp[BufferingExamples#3](~/samples/snippets/csharp/VS_Snippets_Winforms/BufferingExamples/CS/bufferingexamples.cs#3)]
 [!code-vb[BufferingExamples#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BufferingExamples/VB/bufferingexamples.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.BufferedGraphics" />
        <altmember cref="T:System.Drawing.Graphics" />
        <altmember cref="T:System.Drawing.Rectangle" />
        <related type="Article" href="~/docs/framework/winforms/advanced/double-buffered-graphics.md"><span data-ttu-id="f4550-131">Gráficos de doble búfer</span><span class="sxs-lookup"><span data-stu-id="f4550-131">Double Buffered Graphics</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Allocate">
      <MemberSignature Language="C#" Value="public System.Drawing.BufferedGraphics Allocate (IntPtr targetDC, System.Drawing.Rectangle targetRectangle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.BufferedGraphics Allocate(native int targetDC, valuetype System.Drawing.Rectangle targetRectangle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.BufferedGraphicsContext.Allocate(System.IntPtr,System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Function Allocate (targetDC As IntPtr, targetRectangle As Rectangle) As BufferedGraphics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::BufferedGraphics ^ Allocate(IntPtr targetDC, System::Drawing::Rectangle targetRectangle);" />
      <MemberSignature Language="F#" Value="member this.Allocate : nativeint * System.Drawing.Rectangle -&gt; System.Drawing.BufferedGraphics" Usage="bufferedGraphicsContext.Allocate (targetDC, targetRectangle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.BufferedGraphics</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetDC" Type="System.IntPtr" />
        <Parameter Name="targetRectangle" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="targetDC"><span data-ttu-id="f4550-132"><see cref="T:System.IntPtr" /> a un contexto de dispositivo cuyo formato de píxel se va a utilizar para el nuevo búfer.</span><span class="sxs-lookup"><span data-stu-id="f4550-132">An <see cref="T:System.IntPtr" /> to a device context to match the pixel format of the new buffer to.</span></span></param>
        <param name="targetRectangle"><span data-ttu-id="f4550-133"><see cref="T:System.Drawing.Rectangle" /> que indica el tamaño del búfer que se va a crear.</span><span class="sxs-lookup"><span data-stu-id="f4550-133">A <see cref="T:System.Drawing.Rectangle" /> indicating the size of the buffer to create.</span></span></param>
        <summary><span data-ttu-id="f4550-134">Crea un búfer de gráficos del tamaño especificado con el formato de píxel del <see cref="T:System.Drawing.Graphics" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="f4550-134">Creates a graphics buffer of the specified size using the pixel format of the specified <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
        <returns><span data-ttu-id="f4550-135"><see cref="T:System.Drawing.BufferedGraphics" /> que se puede utilizar para dibujar en un búfer con las dimensiones especificadas.</span><span class="sxs-lookup"><span data-stu-id="f4550-135">A <see cref="T:System.Drawing.BufferedGraphics" /> that can be used to draw to a buffer of the specified dimensions.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4550-136">Cuando se llama a la <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> método con un rectángulo cuyo tamaño supera el valor de la <xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A> propiedad, un archivo temporal <xref:System.Drawing.BufferedGraphicsContext> se crea para asignar el búfer y proporcionar un contexto temporal del búfer.</span><span class="sxs-lookup"><span data-stu-id="f4550-136">When you call the <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> method with a rectangle whose size exceeds the value of the <xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A> property, a temporary <xref:System.Drawing.BufferedGraphicsContext> is created to allocate the buffer and provide a temporary context for the buffer.</span></span> <span data-ttu-id="f4550-137">El nuevo <xref:System.Drawing.BufferedGraphicsContext> es distinta de la <xref:System.Drawing.BufferedGraphicsContext> para la aplicación de dominio y se elimina automáticamente cuando el <xref:System.Drawing.BufferedGraphics> devuelto por la <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> se elimina el método.</span><span class="sxs-lookup"><span data-stu-id="f4550-137">The new <xref:System.Drawing.BufferedGraphicsContext> is distinct from the <xref:System.Drawing.BufferedGraphicsContext> for the application domain and it is disposed automatically when the <xref:System.Drawing.BufferedGraphics> returned by the <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> method is disposed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f4550-138">En el ejemplo de código siguiente se muestra cómo crear un búfer de gráficos mediante la <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> método.</span><span class="sxs-lookup"><span data-stu-id="f4550-138">The following code example demonstrates creating a graphics buffer using the <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> method.</span></span> <span data-ttu-id="f4550-139">Este código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Drawing.BufferedGraphics> clase.</span><span class="sxs-lookup"><span data-stu-id="f4550-139">This code is part of a larger example provided for the <xref:System.Drawing.BufferedGraphics> class.</span></span>  
  
 [!code-cpp[BufferingExamples#4](~/samples/snippets/cpp/VS_Snippets_Winforms/BufferingExamples/CPP/bufferingexamples.cpp#4)]
 [!code-csharp[BufferingExamples#4](~/samples/snippets/csharp/VS_Snippets_Winforms/BufferingExamples/CS/bufferingexamples.cs#4)]
 [!code-vb[BufferingExamples#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BufferingExamples/VB/bufferingexamples.vb#4)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="f4550-140">Para obtener acceso a código no administrado.</span><span class="sxs-lookup"><span data-stu-id="f4550-140">for access to unmanaged code.</span></span> <span data-ttu-id="f4550-141">Enumeración relacionados: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="f4550-141">Related enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <altmember cref="T:System.Drawing.BufferedGraphics" />
        <altmember cref="T:System.IntPtr" />
        <altmember cref="T:System.Drawing.Rectangle" />
        <related type="Article" href="~/docs/framework/winforms/advanced/double-buffered-graphics.md"><span data-ttu-id="f4550-142">Gráficos de doble búfer</span><span class="sxs-lookup"><span data-stu-id="f4550-142">Double Buffered Graphics</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.BufferedGraphicsContext.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="bufferedGraphicsContext.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f4550-143">Libera todos los recursos que usa <see cref="T:System.Drawing.BufferedGraphicsContext" />.</span><span class="sxs-lookup"><span data-stu-id="f4550-143">Releases all resources used by the <see cref="T:System.Drawing.BufferedGraphicsContext" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4550-144">Llame a <xref:System.Drawing.BufferedGraphicsContext.Dispose%2A> cuando haya terminado de usar <xref:System.Drawing.BufferedGraphicsContext>.</span><span class="sxs-lookup"><span data-stu-id="f4550-144">Call <xref:System.Drawing.BufferedGraphicsContext.Dispose%2A> when you are finished using the <xref:System.Drawing.BufferedGraphicsContext>.</span></span> <span data-ttu-id="f4550-145">El método <xref:System.Drawing.BufferedGraphicsContext.Dispose%2A> deja el <xref:System.Drawing.BufferedGraphicsContext> en un estado no utilizable.</span><span class="sxs-lookup"><span data-stu-id="f4550-145">The <xref:System.Drawing.BufferedGraphicsContext.Dispose%2A> method leaves the <xref:System.Drawing.BufferedGraphicsContext> in an unusable state.</span></span> <span data-ttu-id="f4550-146">Después de llamar a <xref:System.Drawing.BufferedGraphicsContext.Dispose%2A>, debe liberar todas las referencias a la <xref:System.Drawing.BufferedGraphicsContext> por lo que el recolector de elementos no utilizados pueda reclamar la memoria que el <xref:System.Drawing.BufferedGraphicsContext> estaba ocupando.</span><span class="sxs-lookup"><span data-stu-id="f4550-146">After calling <xref:System.Drawing.BufferedGraphicsContext.Dispose%2A>, you must release all references to the <xref:System.Drawing.BufferedGraphicsContext> so the garbage collector can reclaim the memory that the <xref:System.Drawing.BufferedGraphicsContext> was occupying.</span></span> <span data-ttu-id="f4550-147">Para obtener más información, consulte [limpiar recursos no administrados](~/docs/standard/garbage-collection/unmanaged.md) y [implementar un método Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="f4550-147">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f4550-148">Realice siempre una llamada a <xref:System.Drawing.BufferedGraphicsContext.Dispose%2A> antes de liberar la última referencia al objeto <xref:System.Drawing.BufferedGraphicsContext>.</span><span class="sxs-lookup"><span data-stu-id="f4550-148">Always call <xref:System.Drawing.BufferedGraphicsContext.Dispose%2A> before you release your last reference to the <xref:System.Drawing.BufferedGraphicsContext>.</span></span> <span data-ttu-id="f4550-149">En caso contrario, los recursos que utiliza no se liberarán hasta que el recolector de elementos no utilizados llame al <xref:System.Object.Finalize%2A> método de la <xref:System.Drawing.BufferedGraphicsContext>.</span><span class="sxs-lookup"><span data-stu-id="f4550-149">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Object.Finalize%2A> method of the <xref:System.Drawing.BufferedGraphicsContext>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/advanced/double-buffered-graphics.md"><span data-ttu-id="f4550-150">Gráficos de doble búfer</span><span class="sxs-lookup"><span data-stu-id="f4550-150">Double Buffered Graphics</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~BufferedGraphicsContext ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.BufferedGraphicsContext.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!BufferedGraphicsContext ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="bufferedGraphicsContext.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f4550-151">Permite que un objeto intente liberar recursos y realizar otras operaciones de limpieza antes de que sea reclamado por la recolección de elementos no utilizados.</span><span class="sxs-lookup"><span data-stu-id="f4550-151">Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Invalidate">
      <MemberSignature Language="C#" Value="public void Invalidate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Invalidate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.BufferedGraphicsContext.Invalidate" />
      <MemberSignature Language="VB.NET" Value="Public Sub Invalidate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invalidate();" />
      <MemberSignature Language="F#" Value="member this.Invalidate : unit -&gt; unit" Usage="bufferedGraphicsContext.Invalidate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f4550-152">Desecha el búfer de gráficos actual si se asignó un búfer y este aún no se ha desechado.</span><span class="sxs-lookup"><span data-stu-id="f4550-152">Disposes of the current graphics buffer, if a buffer has been allocated and has not yet been disposed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4550-153">Si el búfer de gráficos está en uso, se marcará para su eliminación tan pronto como es gratuito; en caso contrario, se eliminará inmediatamente.</span><span class="sxs-lookup"><span data-stu-id="f4550-153">If the graphics buffer is in use, it will be marked for disposal as soon as it is free; otherwise, it will be disposed immediately.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/advanced/double-buffered-graphics.md"><span data-ttu-id="f4550-154">Gráficos de doble búfer</span><span class="sxs-lookup"><span data-stu-id="f4550-154">Double Buffered Graphics</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MaximumBuffer">
      <MemberSignature Language="C#" Value="public System.Drawing.Size MaximumBuffer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size MaximumBuffer" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.BufferedGraphicsContext.MaximumBuffer" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximumBuffer As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Size MaximumBuffer { System::Drawing::Size get(); void set(System::Drawing::Size value); };" />
      <MemberSignature Language="F#" Value="member this.MaximumBuffer : System.Drawing.Size with get, set" Usage="System.Drawing.BufferedGraphicsContext.MaximumBuffer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f4550-155">Obtiene o establece el tamaño máximo del búfer que se va a usar.</span><span class="sxs-lookup"><span data-stu-id="f4550-155">Gets or sets the maximum size of the buffer to use.</span></span></summary>
        <value><span data-ttu-id="f4550-156">Un <see cref="T:System.Drawing.Size" /> que indica el tamaño máximo del búfer.</span><span class="sxs-lookup"><span data-stu-id="f4550-156">A <see cref="T:System.Drawing.Size" /> indicating the maximum size of the buffer dimensions.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4550-157">Esta propiedad permite obtener o establecer las dimensiones máximas para un búfer que se debe conservar en memoria.</span><span class="sxs-lookup"><span data-stu-id="f4550-157">This property allows you to get or set the maximum dimensions for a buffer that should be retained in memory.</span></span> <span data-ttu-id="f4550-158">Puede asignar un búfer de cualquier tamaño, sin embargo, cualquier búfer con dimensiones mayores que el <xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A> tamaño será usar temporalmente y, a continuación, se descartan cuando el <xref:System.Drawing.BufferedGraphics> se libera el objeto.</span><span class="sxs-lookup"><span data-stu-id="f4550-158">You can allocate a buffer of any size, however any buffer with dimensions greater than the <xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A> size will be used temporarily and then discarded when the <xref:System.Drawing.BufferedGraphics> object is released.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f4550-159">El ejemplo siguiente se muestra cómo establecer el tamaño máximo del búfer para un <xref:System.Drawing.BufferedGraphicsContext>.</span><span class="sxs-lookup"><span data-stu-id="f4550-159">The following example demonstrates setting the maximum size for the buffer for a <xref:System.Drawing.BufferedGraphicsContext>.</span></span> <span data-ttu-id="f4550-160">Este código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Drawing.BufferedGraphics> clase.</span><span class="sxs-lookup"><span data-stu-id="f4550-160">This code is part of a larger example provided for the <xref:System.Drawing.BufferedGraphics> class.</span></span>  
  
 [!code-cpp[BufferingExamples#2](~/samples/snippets/cpp/VS_Snippets_Winforms/BufferingExamples/CPP/bufferingexamples.cpp#2)]
 [!code-csharp[BufferingExamples#2](~/samples/snippets/csharp/VS_Snippets_Winforms/BufferingExamples/CS/bufferingexamples.cs#2)]
 [!code-vb[BufferingExamples#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BufferingExamples/VB/bufferingexamples.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f4550-161">El alto o ancho es menor o igual que cero.</span><span class="sxs-lookup"><span data-stu-id="f4550-161">The height or width of the size is less than or equal to zero.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="f4550-162">para permitir el acceso de usuario a todas las ventanas.</span><span class="sxs-lookup"><span data-stu-id="f4550-162">for allowing user access to all windows.</span></span> <span data-ttu-id="f4550-163">Enumeración relacionados: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span><span class="sxs-lookup"><span data-stu-id="f4550-163">Related enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span></span></permission>
        <related type="Article" href="~/docs/framework/winforms/advanced/double-buffered-graphics.md"><span data-ttu-id="f4550-164">Gráficos de doble búfer</span><span class="sxs-lookup"><span data-stu-id="f4550-164">Double Buffered Graphics</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
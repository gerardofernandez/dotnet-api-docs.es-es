<Type Name="IconConverter" FullName="System.Drawing.IconConverter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2eb21a645499c5ace418b567f4305c165cd7ef33" /><Meta Name="ms.sourcegitcommit" Value="42a3c35677e9d87eeb503607ae50c9d39827d414" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="12/17/2018" /><Meta Name="ms.locfileid" Value="53489912" /></Metadata><TypeSignature Language="C#" Value="public class IconConverter : System.ComponentModel.ExpandableObjectConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit IconConverter extends System.ComponentModel.ExpandableObjectConverter" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.IconConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class IconConverter&#xA;Inherits ExpandableObjectConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class IconConverter : System::ComponentModel::ExpandableObjectConverter" />
  <TypeSignature Language="F#" Value="type IconConverter = class&#xA;    inherit ExpandableObjectConverter" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.ExpandableObjectConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="4b8a5-101">Convierte un objeto <see cref="T:System.Drawing.Icon" /> de un tipo de datos a otro.</span><span class="sxs-lookup"><span data-stu-id="4b8a5-101">Converts an <see cref="T:System.Drawing.Icon" /> object from one data type to another.</span></span> <span data-ttu-id="4b8a5-102">Obtenga acceso a esta clase mediante el objeto <see cref="T:System.ComponentModel.TypeDescriptor" />.</span><span class="sxs-lookup"><span data-stu-id="4b8a5-102">Access this class through the <see cref="T:System.ComponentModel.TypeDescriptor" /> object.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IconConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.IconConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IconConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4b8a5-103">Inicializa una nueva instancia de la clase <see cref="T:System.Drawing.IconConverter" />.</span><span class="sxs-lookup"><span data-stu-id="4b8a5-103">Initializes a new instance of the <see cref="T:System.Drawing.IconConverter" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.IconConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertFrom (context As ITypeDescriptorContext, sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ sourceType);" />
      <MemberSignature Language="F#" Value="override this.CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="iconConverter.CanConvertFrom (context, sourceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="4b8a5-104"><see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que ofrece un contexto de formato.</span><span class="sxs-lookup"><span data-stu-id="4b8a5-104">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="sourceType"><span data-ttu-id="4b8a5-105"><see cref="T:System.Type" /> que especifica el tipo a partir del cual se desea realizar la conversión.</span><span class="sxs-lookup"><span data-stu-id="4b8a5-105">A <see cref="T:System.Type" /> that specifies the type you want to convert from.</span></span></param>
        <summary><span data-ttu-id="4b8a5-106">Determina si este objeto <see cref="T:System.Drawing.IconConverter" /> puede convertir una instancia de un tipo especificado en un objeto <see cref="T:System.Drawing.Icon" /> utilizando el contexto especificado.</span><span class="sxs-lookup"><span data-stu-id="4b8a5-106">Determines whether this <see cref="T:System.Drawing.IconConverter" /> can convert an instance of a specified type to an <see cref="T:System.Drawing.Icon" />, using the specified context.</span></span></summary>
        <returns><span data-ttu-id="4b8a5-107">Este método devuelve <see langword="true" /> si este <see cref="T:System.Drawing.IconConverter" /> puede realizar la conversión; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4b8a5-107">This method returns <see langword="true" /> if this <see cref="T:System.Drawing.IconConverter" /> can perform the conversion; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b8a5-108">Este método devuelve `true` solo si `sourceType` es igual a una matriz de bytes.</span><span class="sxs-lookup"><span data-stu-id="4b8a5-108">This method returns `true` only if `sourceType` is equal to a byte array.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.IconConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertTo (context As ITypeDescriptorContext, destinationType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="override this.CanConvertTo : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="iconConverter.CanConvertTo (context, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="4b8a5-109"><see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que ofrece un contexto de formato.</span><span class="sxs-lookup"><span data-stu-id="4b8a5-109">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="destinationType"><span data-ttu-id="4b8a5-110"><see cref="T:System.Type" /> que especifica el tipo de destino de la conversión.</span><span class="sxs-lookup"><span data-stu-id="4b8a5-110">A <see cref="T:System.Type" /> that specifies the type you want to convert to.</span></span></param>
        <summary><span data-ttu-id="4b8a5-111">Determina si <see cref="T:System.Drawing.IconConverter" /> puede convertir <see cref="T:System.Drawing.Icon" /> en una instancia de un tipo especificado, mediante el contexto especificado.</span><span class="sxs-lookup"><span data-stu-id="4b8a5-111">Determines whether this <see cref="T:System.Drawing.IconConverter" /> can convert an <see cref="T:System.Drawing.Icon" /> to an instance of a specified type, using the specified context.</span></span></summary>
        <returns><span data-ttu-id="4b8a5-112">Este método devuelve <see langword="true" /> si este <see cref="T:System.Drawing.IconConverter" /> puede realizar la conversión; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4b8a5-112">This method returns <see langword="true" /> if this <see cref="T:System.Drawing.IconConverter" /> can perform the conversion; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b8a5-113">Este método devuelve `true` solo si `destinationType` es igual a una matriz de bytes o una cadena.</span><span class="sxs-lookup"><span data-stu-id="4b8a5-113">This method returns `true` only if `destinationType` is equal to a byte array or string.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.IconConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj" Usage="iconConverter.ConvertFrom (context, culture, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="4b8a5-114"><see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que ofrece un contexto de formato.</span><span class="sxs-lookup"><span data-stu-id="4b8a5-114">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="culture"><span data-ttu-id="4b8a5-115">Objeto <see cref="T:System.Globalization.CultureInfo" /> que contiene información sobre una referencia cultural específica.</span><span class="sxs-lookup"><span data-stu-id="4b8a5-115">A <see cref="T:System.Globalization.CultureInfo" /> that holds information about a specific culture.</span></span></param>
        <param name="value"><span data-ttu-id="4b8a5-116"><see cref="T:System.Object" /> que va a convertirse.</span><span class="sxs-lookup"><span data-stu-id="4b8a5-116">The <see cref="T:System.Object" /> to be converted.</span></span></param>
        <summary><span data-ttu-id="4b8a5-117">Convierte un objeto especificado en un <see cref="T:System.Drawing.Icon" />.</span><span class="sxs-lookup"><span data-stu-id="4b8a5-117">Converts a specified object to an <see cref="T:System.Drawing.Icon" />.</span></span></summary>
        <returns><span data-ttu-id="4b8a5-118">Si este método se ejecuta correctamente, devuelve el objeto <see cref="T:System.Drawing.Icon" /> creado al convertir el objeto especificado.</span><span class="sxs-lookup"><span data-stu-id="4b8a5-118">If this method succeeds, it returns the <see cref="T:System.Drawing.Icon" /> that it created by converting the specified object.</span></span> <span data-ttu-id="4b8a5-119">De lo contrario, produce una excepción.</span><span class="sxs-lookup"><span data-stu-id="4b8a5-119">Otherwise, it throws an exception.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="4b8a5-120">No se pudo llevar a cabo la conversión.</span><span class="sxs-lookup"><span data-stu-id="4b8a5-120">The conversion could not be performed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.IconConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="override this.ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj" Usage="iconConverter.ConvertTo (context, culture, value, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="4b8a5-121"><see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que ofrece un contexto de formato.</span><span class="sxs-lookup"><span data-stu-id="4b8a5-121">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="culture"><span data-ttu-id="4b8a5-122">Objeto <see cref="T:System.Globalization.CultureInfo" /> que especifica las convenciones de formato usadas por una referencia cultural determinada.</span><span class="sxs-lookup"><span data-stu-id="4b8a5-122">A <see cref="T:System.Globalization.CultureInfo" /> object that specifies formatting conventions used by a particular culture.</span></span></param>
        <param name="value"><span data-ttu-id="4b8a5-123">Objeto que se va a convertir.</span><span class="sxs-lookup"><span data-stu-id="4b8a5-123">The object to convert.</span></span> <span data-ttu-id="4b8a5-124">Este objeto debe ser de tipo Icon o de algún otro tipo que pueda convertirse en <see cref="T:System.Drawing.Icon" />.</span><span class="sxs-lookup"><span data-stu-id="4b8a5-124">This object should be of type icon or some type that can be cast to <see cref="T:System.Drawing.Icon" />.</span></span></param>
        <param name="destinationType"><span data-ttu-id="4b8a5-125">Tipo en el que va a convertirse el icono.</span><span class="sxs-lookup"><span data-stu-id="4b8a5-125">The type to convert the icon to.</span></span></param>
        <summary><span data-ttu-id="4b8a5-126">Convierte <see cref="T:System.Drawing.Icon" /> (o un objeto que puede convertirse en <see cref="T:System.Drawing.Icon" />) en un tipo especificado.</span><span class="sxs-lookup"><span data-stu-id="4b8a5-126">Converts an <see cref="T:System.Drawing.Icon" /> (or an object that can be cast to an <see cref="T:System.Drawing.Icon" />) to a specified type.</span></span></summary>
        <returns><span data-ttu-id="4b8a5-127">Este método devuelve el objeto convertido.</span><span class="sxs-lookup"><span data-stu-id="4b8a5-127">This method returns the converted object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b8a5-128">La implementación predeterminada llama el <xref:System.Object.ToString%2A> método en el objeto si el objeto es válido y si el tipo de destino es `string`.</span><span class="sxs-lookup"><span data-stu-id="4b8a5-128">The default implementation calls the <xref:System.Object.ToString%2A> method on the object if the object is valid and if the destination type is `string`.</span></span> <span data-ttu-id="4b8a5-129">Si este método no se puede convertir al tipo de destino, produce un <xref:System.NotSupportedException> excepción.</span><span class="sxs-lookup"><span data-stu-id="4b8a5-129">If this method cannot convert to the destination type, it throws a <xref:System.NotSupportedException> exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="4b8a5-130">No se pudo llevar a cabo la conversión.</span><span class="sxs-lookup"><span data-stu-id="4b8a5-130">The conversion could not be performed.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
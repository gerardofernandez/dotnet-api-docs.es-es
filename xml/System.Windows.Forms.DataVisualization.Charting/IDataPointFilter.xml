<Type Name="IDataPointFilter" FullName="System.Windows.Forms.DataVisualization.Charting.IDataPointFilter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="186976d518543a01b66d18a27e5bb10f775971a0" /><Meta Name="ms.sourcegitcommit" Value="9e3550fb2088d4faf2043f0acb29da4555519937" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="12/12/2018" /><Meta Name="ms.locfileid" Value="53292671" /></Metadata><TypeSignature Language="C#" Value="public interface IDataPointFilter" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDataPointFilter" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataVisualization.Charting.IDataPointFilter" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDataPointFilter" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDataPointFilter" />
  <TypeSignature Language="F#" Value="type IDataPointFilter = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="2a460-101">Expone el método <see cref="M:System.Windows.Forms.DataVisualization.Charting.IDataPointFilter.FilterDataPoint(System.Windows.Forms.DataVisualization.Charting.DataPoint,System.Windows.Forms.DataVisualization.Charting.Series,System.Int32)" />, que permite realizar un filtrado personalizado de los datos de <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" />.</span><span class="sxs-lookup"><span data-stu-id="2a460-101">Exposes the <see cref="M:System.Windows.Forms.DataVisualization.Charting.IDataPointFilter.FilterDataPoint(System.Windows.Forms.DataVisualization.Charting.DataPoint,System.Windows.Forms.DataVisualization.Charting.Series,System.Int32)" /> method, which allows <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> data to be custom filtered.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a460-102">El <xref:System.Windows.Forms.DataVisualization.Charting.IDataPointFilter> interfaz expone el <xref:System.Windows.Forms.DataVisualization.Charting.IDataPointFilter.FilterDataPoint%2A> método, que toma un punto de datos específico dentro de una serie y devuelve un `Boolean` valor que determina si se van a filtrar ese punto de datos.</span><span class="sxs-lookup"><span data-stu-id="2a460-102">The <xref:System.Windows.Forms.DataVisualization.Charting.IDataPointFilter> interface exposes the <xref:System.Windows.Forms.DataVisualization.Charting.IDataPointFilter.FilterDataPoint%2A> method, which takes a specific data point within a series and returns a `Boolean` value that determines whether that data point will be filtered.</span></span>  
  
 <span data-ttu-id="2a460-103">Para realizar el filtrado personalizado:</span><span class="sxs-lookup"><span data-stu-id="2a460-103">To perform custom filtering:</span></span>  
  
-   <span data-ttu-id="2a460-104">Derive una clase nueva o existente de esta interfaz.</span><span class="sxs-lookup"><span data-stu-id="2a460-104">Derive a new or existing class from this interface.</span></span>  
  
-   <span data-ttu-id="2a460-105">Invalidar el <xref:System.Windows.Forms.DataVisualization.Charting.IDataPointFilter.FilterDataPoint%2A> método para proporcionar la lógica de filtrado personalizada.</span><span class="sxs-lookup"><span data-stu-id="2a460-105">Override the <xref:System.Windows.Forms.DataVisualization.Charting.IDataPointFilter.FilterDataPoint%2A> method to provide the custom filtering logic.</span></span>  
  
-   <span data-ttu-id="2a460-106">Para iniciar la operación de filtrado, llame a uno de los `Filter` métodos en el <xref:System.Windows.Forms.DataVisualization.Charting.DataManipulator> clases que toman un <xref:System.Windows.Forms.DataVisualization.Charting.IDataPointFilter> objeto como su primer parámetro.</span><span class="sxs-lookup"><span data-stu-id="2a460-106">To initiate the filtering operation, call one of the `Filter` methods in the <xref:System.Windows.Forms.DataVisualization.Charting.DataManipulator> class that takes an <xref:System.Windows.Forms.DataVisualization.Charting.IDataPointFilter> object as its first parameter.</span></span>  
  
 <span data-ttu-id="2a460-107">Para el código fuente de ejemplo, consulte el <xref:System.Windows.Forms.DataVisualization.Charting.IDataPointFilter.FilterDataPoint%2A> método.</span><span class="sxs-lookup"><span data-stu-id="2a460-107">For sample source code, see the <xref:System.Windows.Forms.DataVisualization.Charting.IDataPointFilter.FilterDataPoint%2A> method.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="FilterDataPoint">
      <MemberSignature Language="C#" Value="public bool FilterDataPoint (System.Windows.Forms.DataVisualization.Charting.DataPoint point, System.Windows.Forms.DataVisualization.Charting.Series series, int pointIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool FilterDataPoint(class System.Windows.Forms.DataVisualization.Charting.DataPoint point, class System.Windows.Forms.DataVisualization.Charting.Series series, int32 pointIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.IDataPointFilter.FilterDataPoint(System.Windows.Forms.DataVisualization.Charting.DataPoint,System.Windows.Forms.DataVisualization.Charting.Series,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool FilterDataPoint(System::Windows::Forms::DataVisualization::Charting::DataPoint ^ point, System::Windows::Forms::DataVisualization::Charting::Series ^ series, int pointIndex);" />
      <MemberSignature Language="F#" Value="abstract member FilterDataPoint : System.Windows.Forms.DataVisualization.Charting.DataPoint * System.Windows.Forms.DataVisualization.Charting.Series * int -&gt; bool" Usage="iDataPointFilter.FilterDataPoint (point, series, pointIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Forms.DataVisualization.Charting.DataPoint" />
        <Parameter Name="series" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
        <Parameter Name="pointIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="point"><span data-ttu-id="2a460-108">Objeto <see cref="T:System.Windows.Forms.DataVisualization.Charting.DataPoint" /> que se va a filtrar.</span><span class="sxs-lookup"><span data-stu-id="2a460-108">The <see cref="T:System.Windows.Forms.DataVisualization.Charting.DataPoint" /> object to be filtered.</span></span></param>
        <param name="series"><span data-ttu-id="2a460-109">Objeto <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> al que pertenece el punto de datos.</span><span class="sxs-lookup"><span data-stu-id="2a460-109">The <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> object that the data point belongs to.</span></span></param>
        <param name="pointIndex"><span data-ttu-id="2a460-110">Índice del punto de datos, que determina su posición en la serie.</span><span class="sxs-lookup"><span data-stu-id="2a460-110">The index of the data point, which determines its position in the series.</span></span></param>
        <summary><span data-ttu-id="2a460-111">Determina si se filtrará un punto de datos determinado de la serie.</span><span class="sxs-lookup"><span data-stu-id="2a460-111">Determines whether a particular data point in the series will be filtered.</span></span></summary>
        <returns><span data-ttu-id="2a460-112">Es <see langword="true" /> si se quita el punto de datos; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2a460-112"><see langword="true" /> if the data point is removed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a460-113">Este método debe llamarse para cada punto de datos en una serie y devuelve un `Boolean` valor que indica si se debe filtrar a un punto de datos.</span><span class="sxs-lookup"><span data-stu-id="2a460-113">This method should be called for each data point in a series, and returns a `Boolean` value indicating whether a data point should be filtered.</span></span>  
  
 <span data-ttu-id="2a460-114">Para proporcionar filtrado personalizado, derive una clase nueva o existente de la <xref:System.Windows.Forms.DataVisualization.Charting.IDataPointFilter> interfaz y, a continuación, implemente este método.</span><span class="sxs-lookup"><span data-stu-id="2a460-114">To provide custom filtering, derive a new or existing class from the <xref:System.Windows.Forms.DataVisualization.Charting.IDataPointFilter> interface and then implement this method.</span></span> <span data-ttu-id="2a460-115">Proporcionar la lógica de coincidencia de criterios personalizados, a continuación, devolver `true` o `false` para marcar los puntos de datos que se va a filtrar.</span><span class="sxs-lookup"><span data-stu-id="2a460-115">Provide custom criteria matching logic, then return `true` or `false` to mark the data points to be filtered.</span></span> <span data-ttu-id="2a460-116">Después de este método se ha implementado, use uno de los `Filter` definiciones de método en el <xref:System.Windows.Forms.DataVisualization.Charting.DataManipulator> clases que toman un <xref:System.Windows.Forms.DataVisualization.Charting.IDataPointFilter> objeto como parámetro para realizar el filtrado.</span><span class="sxs-lookup"><span data-stu-id="2a460-116">After this method has been implemented, use one of the `Filter` method definitions in the <xref:System.Windows.Forms.DataVisualization.Charting.DataManipulator> class that takes an <xref:System.Windows.Forms.DataVisualization.Charting.IDataPointFilter> object as a parameter to perform the filtering.</span></span>  
  
 <span data-ttu-id="2a460-117">Los puntos filtrados, de forma predeterminada, se quitan de una serie.</span><span class="sxs-lookup"><span data-stu-id="2a460-117">Filtered points, by default, are removed from a series.</span></span> <span data-ttu-id="2a460-118">También pueden mostrar como puntos vacíos estableciendo el valor de la <xref:System.Windows.Forms.DataVisualization.Charting.DataManipulator.FilterSetEmptyPoints%2A> propiedad `true`.</span><span class="sxs-lookup"><span data-stu-id="2a460-118">They can also be displayed as empty points by setting the value of the <xref:System.Windows.Forms.DataVisualization.Charting.DataManipulator.FilterSetEmptyPoints%2A> property to `true`.</span></span>  
  
 <span data-ttu-id="2a460-119">Los puntos filtrados también se pueden marcar como filtrados si no coinciden con los criterios de filtrado, determinado por la <xref:System.Windows.Forms.DataVisualization.Charting.DataManipulator.FilterMatchedPoints%2A> valor.</span><span class="sxs-lookup"><span data-stu-id="2a460-119">Filtered points can also be marked as filtered if they do not match filtering criteria, as determined by the <xref:System.Windows.Forms.DataVisualization.Charting.DataManipulator.FilterMatchedPoints%2A> value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
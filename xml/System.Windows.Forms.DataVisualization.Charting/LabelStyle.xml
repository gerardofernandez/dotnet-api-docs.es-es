<Type Name="LabelStyle" FullName="System.Windows.Forms.DataVisualization.Charting.LabelStyle">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b5873e23d7679e560211165accc3f5530c9340db" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55335649" /></Metadata><TypeSignature Language="C#" Value="public class LabelStyle : System.Windows.Forms.DataVisualization.Charting.ChartElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LabelStyle extends System.Windows.Forms.DataVisualization.Charting.ChartElement" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataVisualization.Charting.LabelStyle" />
  <TypeSignature Language="VB.NET" Value="Public Class LabelStyle&#xA;Inherits ChartElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class LabelStyle : System::Windows::Forms::DataVisualization::Charting::ChartElement" />
  <TypeSignature Language="F#" Value="type LabelStyle = class&#xA;    inherit ChartElement" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.DataVisualization.Charting.ChartElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Enabled")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="bcf1a-101">Proporciona propiedades que definen la apariencia visual de las etiquetas de eje.</span><span class="sxs-lookup"><span data-stu-id="bcf1a-101">Provides properties that define the visual appearance of the axis labels.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bcf1a-102">Los miembros de esta clase también se usan para calcular los intervalos y posiciones de las etiquetas del eje y para dibujarlos.</span><span class="sxs-lookup"><span data-stu-id="bcf1a-102">Members of this class are also used to calculate the intervals and positions of the axis labels, and to draw them.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LabelStyle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.LabelStyle.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LabelStyle();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bcf1a-103">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.DataVisualization.Charting.LabelStyle" />.</span><span class="sxs-lookup"><span data-stu-id="bcf1a-103">Initializes a new instance of the <see cref="T:System.Windows.Forms.DataVisualization.Charting.LabelStyle" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Angle">
      <MemberSignature Language="C#" Value="public int Angle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Angle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.LabelStyle.Angle" />
      <MemberSignature Language="VB.NET" Value="Public Property Angle As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Angle { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Angle : int with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.LabelStyle.Angle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bcf1a-104">Obtiene o establece un valor que representa el ángulo en el que se dibuja la fuente.</span><span class="sxs-lookup"><span data-stu-id="bcf1a-104">Gets or sets a value that represents the angle at which the font is drawn.</span></span></summary>
        <value><span data-ttu-id="bcf1a-105">Valor <see langword="integer" />.</span><span class="sxs-lookup"><span data-stu-id="bcf1a-105">An <see langword="integer" /> value.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.LabelStyle.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="labelStyle.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="bcf1a-106">Es <see langword="true" /> para liberar tanto recursos administrados como no administrados; es <see langword="false" /> para liberar únicamente recursos no administrados.</span><span class="sxs-lookup"><span data-stu-id="bcf1a-106"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="bcf1a-107">Libera los recursos que usa <see cref="T:System.Windows.Forms.DataVisualization.Charting.LabelStyle" />.</span><span class="sxs-lookup"><span data-stu-id="bcf1a-107">Releases the resources used by the <see cref="T:System.Windows.Forms.DataVisualization.Charting.LabelStyle" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.LabelStyle.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Enabled : bool with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.LabelStyle.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bcf1a-108">Obtiene o establece una marca que indica si la etiqueta está habilitada.</span><span class="sxs-lookup"><span data-stu-id="bcf1a-108">Gets or sets a flag that indicates whether the label is enabled.</span></span></summary>
        <value><span data-ttu-id="bcf1a-109">Es <see langword="true" /> si la etiqueta está habilitada; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bcf1a-109"><see langword="true" /> if the label is enabled; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Font">
      <MemberSignature Language="C#" Value="public System.Drawing.Font Font { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Font Font" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.LabelStyle.Font" />
      <MemberSignature Language="VB.NET" Value="Public Property Font As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Font ^ Font { System::Drawing::Font ^ get(); void set(System::Drawing::Font ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Font : System.Drawing.Font with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.LabelStyle.Font" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Font), "Microsoft Sans Serif, 8pt")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bcf1a-110">Obtiene o establece la fuente de la etiqueta.</span><span class="sxs-lookup"><span data-stu-id="bcf1a-110">Gets or sets the font of the label.</span></span></summary>
        <value><span data-ttu-id="bcf1a-111">Objeto <see cref="T:System.Drawing.Font" />.</span><span class="sxs-lookup"><span data-stu-id="bcf1a-111">A <see cref="T:System.Drawing.Font" /> object.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForeColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color ForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.LabelStyle.ForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Property ForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color ForeColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.ForeColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.LabelStyle.ForeColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "Black")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartColorEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartColorEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bcf1a-112">Obtiene o establece el color de la etiqueta.</span><span class="sxs-lookup"><span data-stu-id="bcf1a-112">Gets or sets the color of the label.</span></span></summary>
        <value><span data-ttu-id="bcf1a-113">Valor <see cref="T:System.Drawing.Color" />.</span><span class="sxs-lookup"><span data-stu-id="bcf1a-113">A <see cref="T:System.Drawing.Color" /> value.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public string Format { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Format" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.LabelStyle.Format" />
      <MemberSignature Language="VB.NET" Value="Public Property Format As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Format { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Format : string with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.LabelStyle.Format" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bcf1a-114">Obtiene o establece la cadena de formato para el texto de la etiqueta.</span><span class="sxs-lookup"><span data-stu-id="bcf1a-114">Gets or sets the formatting string for the label text.</span></span></summary>
        <value><span data-ttu-id="bcf1a-115">Valor <see langword="string" />.</span><span class="sxs-lookup"><span data-stu-id="bcf1a-115">A <see langword="string" /> value.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Interval">
      <MemberSignature Language="C#" Value="public double Interval { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Interval" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.LabelStyle.Interval" />
      <MemberSignature Language="VB.NET" Value="Public Property Interval As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Interval { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Interval : double with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.LabelStyle.Interval" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(NaN)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.DataVisualization.Charting.AxisElementIntervalValueConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bcf1a-116">Obtiene o establece el tamaño del intervalo de etiqueta.</span><span class="sxs-lookup"><span data-stu-id="bcf1a-116">Gets or sets the size of the label interval.</span></span></summary>
        <value><span data-ttu-id="bcf1a-117">Valor <see langword="double" />.</span><span class="sxs-lookup"><span data-stu-id="bcf1a-117">A <see langword="double" /> value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bcf1a-118">Esta propiedad no se establece de forma predeterminada.</span><span class="sxs-lookup"><span data-stu-id="bcf1a-118">This property is not set by default.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IntervalOffset">
      <MemberSignature Language="C#" Value="public double IntervalOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 IntervalOffset" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.LabelStyle.IntervalOffset" />
      <MemberSignature Language="VB.NET" Value="Public Property IntervalOffset As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double IntervalOffset { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.IntervalOffset : double with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.LabelStyle.IntervalOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(NaN)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.DataVisualization.Charting.AxisElementIntervalValueConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bcf1a-119">Obtiene o establece el desplazamiento del intervalo de etiqueta.</span><span class="sxs-lookup"><span data-stu-id="bcf1a-119">Gets or sets the offset of the label interval.</span></span></summary>
        <value><span data-ttu-id="bcf1a-120">Valor <see langword="double" />.</span><span class="sxs-lookup"><span data-stu-id="bcf1a-120">A <see langword="double" /> value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bcf1a-121">Esta propiedad no se establece de forma predeterminada.</span><span class="sxs-lookup"><span data-stu-id="bcf1a-121">This property is not set by default.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IntervalOffsetType">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType IntervalOffsetType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType IntervalOffsetType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.LabelStyle.IntervalOffsetType" />
      <MemberSignature Language="VB.NET" Value="Public Property IntervalOffsetType As DateTimeIntervalType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::DateTimeIntervalType IntervalOffsetType { System::Windows::Forms::DataVisualization::Charting::DateTimeIntervalType get(); void set(System::Windows::Forms::DataVisualization::Charting::DateTimeIntervalType value); };" />
      <MemberSignature Language="F#" Value="member this.IntervalOffsetType : System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.LabelStyle.IntervalOffsetType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bcf1a-122">Obtiene o establece la unidad de medida del desplazamiento de intervalo de etiqueta.</span><span class="sxs-lookup"><span data-stu-id="bcf1a-122">Gets or sets the unit of measurement of the label interval offset.</span></span></summary>
        <value><span data-ttu-id="bcf1a-123">Un valor de enumeración <see cref="T:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType" />.</span><span class="sxs-lookup"><span data-stu-id="bcf1a-123">A <see cref="T:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType" /> enumeration value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bcf1a-124">Esta propiedad no se establece de forma predeterminada.</span><span class="sxs-lookup"><span data-stu-id="bcf1a-124">This property is not set by default.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IntervalType">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType IntervalType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType IntervalType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.LabelStyle.IntervalType" />
      <MemberSignature Language="VB.NET" Value="Public Property IntervalType As DateTimeIntervalType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::DateTimeIntervalType IntervalType { System::Windows::Forms::DataVisualization::Charting::DateTimeIntervalType get(); void set(System::Windows::Forms::DataVisualization::Charting::DateTimeIntervalType value); };" />
      <MemberSignature Language="F#" Value="member this.IntervalType : System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.LabelStyle.IntervalType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bcf1a-125">Obtiene o establece la unidad de medida para el tamaño de un intervalo de etiqueta.</span><span class="sxs-lookup"><span data-stu-id="bcf1a-125">Gets or sets the unit of measurement for the size of a label interval.</span></span></summary>
        <value><span data-ttu-id="bcf1a-126">Un valor de enumeración <see cref="T:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType" />.</span><span class="sxs-lookup"><span data-stu-id="bcf1a-126">A <see cref="T:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType" /> enumeration value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bcf1a-127">Esta propiedad no se establece de forma predeterminada.</span><span class="sxs-lookup"><span data-stu-id="bcf1a-127">This property is not set by default.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEndLabelVisible">
      <MemberSignature Language="C#" Value="public bool IsEndLabelVisible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEndLabelVisible" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.LabelStyle.IsEndLabelVisible" />
      <MemberSignature Language="VB.NET" Value="Public Property IsEndLabelVisible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEndLabelVisible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsEndLabelVisible : bool with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.LabelStyle.IsEndLabelVisible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bcf1a-128">Obtiene o establece una marca que determina si las etiquetas se muestran en los extremos de los ejes.</span><span class="sxs-lookup"><span data-stu-id="bcf1a-128">Gets or sets a flag that determines whether the labels are shown at axis ends.</span></span></summary>
        <value><span data-ttu-id="bcf1a-129">Es <see langword="true" /> si las etiquetas se muestran en los extremos de los ejes; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bcf1a-129"><see langword="true" /> if the labels are shown at axis ends; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStaggered">
      <MemberSignature Language="C#" Value="public bool IsStaggered { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStaggered" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.LabelStyle.IsStaggered" />
      <MemberSignature Language="VB.NET" Value="Public Property IsStaggered As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsStaggered { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsStaggered : bool with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.LabelStyle.IsStaggered" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bcf1a-130">Obtiene o establece una marca que determina si las etiquetas se muestran con un desplazamiento.</span><span class="sxs-lookup"><span data-stu-id="bcf1a-130">Gets or sets a flag that determines whether the labels are shown with an offset.</span></span></summary>
        <value><span data-ttu-id="bcf1a-131">Es <see langword="true" /> si las etiquetas se muestran con un desplazamiento; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bcf1a-131"><see langword="true" /> if the labels are shown with an offset; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TruncatedLabels">
      <MemberSignature Language="C#" Value="public bool TruncatedLabels { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TruncatedLabels" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.LabelStyle.TruncatedLabels" />
      <MemberSignature Language="VB.NET" Value="Public Property TruncatedLabels As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TruncatedLabels { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.TruncatedLabels : bool with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.LabelStyle.TruncatedLabels" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bcf1a-132">Obtiene o establece una marca que determina si se pueden truncar las etiquetas.</span><span class="sxs-lookup"><span data-stu-id="bcf1a-132">Gets or sets a flag that determines whether the labels can be truncated.</span></span></summary>
        <value><span data-ttu-id="bcf1a-133">Es <see langword="true" /> si se pueden truncar las etiquetas; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bcf1a-133"><see langword="true" /> if the labels can be truncated; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
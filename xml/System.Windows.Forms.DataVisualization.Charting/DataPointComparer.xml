<Type Name="DataPointComparer" FullName="System.Windows.Forms.DataVisualization.Charting.DataPointComparer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d55ee1d4e079b7c0216d525b84d21bb41abbf2db" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="36359883" /></Metadata><TypeSignature Language="C#" Value="public class DataPointComparer : System.Collections.Generic.IComparer&lt;System.Windows.Forms.DataVisualization.Charting.DataPoint&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataPointComparer extends System.Object implements class System.Collections.Generic.IComparer`1&lt;class System.Windows.Forms.DataVisualization.Charting.DataPoint&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataVisualization.Charting.DataPointComparer" />
  <TypeSignature Language="VB.NET" Value="Public Class DataPointComparer&#xA;Implements IComparer(Of DataPoint)" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataPointComparer : System::Collections::Generic::IComparer&lt;System::Windows::Forms::DataVisualization::Charting::DataPoint ^&gt;" />
  <TypeSignature Language="F#" Value="type DataPointComparer = class&#xA;    interface IComparer&lt;DataPoint&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IComparer&lt;System.Windows.Forms.DataVisualization.Charting.DataPoint&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="bfb5b-101">Compara puntos de datos.</span><span class="sxs-lookup"><span data-stu-id="bfb5b-101">Compares data points.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataPointComparer (System.Windows.Forms.DataVisualization.Charting.Series series, System.Windows.Forms.DataVisualization.Charting.PointSortOrder sortOrder, string sortBy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.DataVisualization.Charting.Series series, valuetype System.Windows.Forms.DataVisualization.Charting.PointSortOrder sortOrder, string sortBy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataPointComparer.#ctor(System.Windows.Forms.DataVisualization.Charting.Series,System.Windows.Forms.DataVisualization.Charting.PointSortOrder,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataPointComparer(System::Windows::Forms::DataVisualization::Charting::Series ^ series, System::Windows::Forms::DataVisualization::Charting::PointSortOrder sortOrder, System::String ^ sortBy);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.DataVisualization.Charting.DataPointComparer : System.Windows.Forms.DataVisualization.Charting.Series * System.Windows.Forms.DataVisualization.Charting.PointSortOrder * string -&gt; System.Windows.Forms.DataVisualization.Charting.DataPointComparer" Usage="new System.Windows.Forms.DataVisualization.Charting.DataPointComparer (series, sortOrder, sortBy)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="series" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
        <Parameter Name="sortOrder" Type="System.Windows.Forms.DataVisualization.Charting.PointSortOrder" />
        <Parameter Name="sortBy" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="series"><span data-ttu-id="bfb5b-102">Serie de datos.</span><span class="sxs-lookup"><span data-stu-id="bfb5b-102">Data series.</span></span></param>
        <param name="sortOrder"><span data-ttu-id="bfb5b-103">Criterio de ordenaci贸n.</span><span class="sxs-lookup"><span data-stu-id="bfb5b-103">Sort order.</span></span></param>
        <param name="sortBy"><span data-ttu-id="bfb5b-104">Valor usado para la ordenaci贸n; por ejemplo, "X", "Y o Y1", "Y2", etc.</span><span class="sxs-lookup"><span data-stu-id="bfb5b-104">Value used for the sort, for example, "X", "Y or Y1", "Y2", and so forth.</span></span></param>
        <summary><span data-ttu-id="bfb5b-105">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.DataVisualization.Charting.DataPointComparer" /> con las series de datos, el criterio de ordenaci贸n y el valor de ordenaci贸n especificados.</span><span class="sxs-lookup"><span data-stu-id="bfb5b-105">Initializes a new instance of the <see cref="T:System.Windows.Forms.DataVisualization.Charting.DataPointComparer" /> class with the specified data series, sort order and sort value.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public int Compare (System.Windows.Forms.DataVisualization.Charting.DataPoint x, System.Windows.Forms.DataVisualization.Charting.DataPoint y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Compare(class System.Windows.Forms.DataVisualization.Charting.DataPoint x, class System.Windows.Forms.DataVisualization.Charting.DataPoint y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataPointComparer.Compare(System.Windows.Forms.DataVisualization.Charting.DataPoint,System.Windows.Forms.DataVisualization.Charting.DataPoint)" />
      <MemberSignature Language="VB.NET" Value="Public Function Compare (x As DataPoint, y As DataPoint) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Compare(System::Windows::Forms::DataVisualization::Charting::DataPoint ^ x, System::Windows::Forms::DataVisualization::Charting::DataPoint ^ y);" />
      <MemberSignature Language="F#" Value="abstract member Compare : System.Windows.Forms.DataVisualization.Charting.DataPoint * System.Windows.Forms.DataVisualization.Charting.DataPoint -&gt; int&#xA;override this.Compare : System.Windows.Forms.DataVisualization.Charting.DataPoint * System.Windows.Forms.DataVisualization.Charting.DataPoint -&gt; int" Usage="dataPointComparer.Compare (x, y)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IComparer`1.Compare(`0,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Windows.Forms.DataVisualization.Charting.DataPoint" />
        <Parameter Name="y" Type="System.Windows.Forms.DataVisualization.Charting.DataPoint" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="bfb5b-106">Primer punto de datos.</span><span class="sxs-lookup"><span data-stu-id="bfb5b-106">First data point.</span></span></param>
        <param name="y"><span data-ttu-id="bfb5b-107">Segundo punto de datos.</span><span class="sxs-lookup"><span data-stu-id="bfb5b-107">Second data point.</span></span></param>
        <summary><span data-ttu-id="bfb5b-108">Compara dos puntos de datos.</span><span class="sxs-lookup"><span data-stu-id="bfb5b-108">Compares two data points.</span></span></summary>
        <returns><span data-ttu-id="bfb5b-109">Valor <see langword="integer" />.</span><span class="sxs-lookup"><span data-stu-id="bfb5b-109">An <see langword="integer" /> value.</span></span> <span data-ttu-id="bfb5b-110">Devuelve cero (0) si los dos valores son iguales.</span><span class="sxs-lookup"><span data-stu-id="bfb5b-110">Returns zero (0) if the two values are equal.</span></span> <span data-ttu-id="bfb5b-111">Devuelve un entero positivo si el valor de <paramref name="x" /> es mayor que el valor de <paramref name="y" />; de lo contrario, devuelve un entero negativo.</span><span class="sxs-lookup"><span data-stu-id="bfb5b-111">Returns a positive integer if the value of <paramref name="x" /> is greater than the value of <paramref name="y" />; otherwise, returns a negative integer.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
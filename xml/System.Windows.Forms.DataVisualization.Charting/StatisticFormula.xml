<Type Name="StatisticFormula" FullName="System.Windows.Forms.DataVisualization.Charting.StatisticFormula">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fe94b8b43688179da9c74296687175f9fcce213d" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="36358284" /></Metadata><TypeSignature Language="C#" Value="public class StatisticFormula" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit StatisticFormula extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataVisualization.Charting.StatisticFormula" />
  <TypeSignature Language="VB.NET" Value="Public Class StatisticFormula" />
  <TypeSignature Language="C++ CLI" Value="public ref class StatisticFormula" />
  <TypeSignature Language="F#" Value="type StatisticFormula = class" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="23a97-101">Calcula fórmulas estadísticas.</span><span class="sxs-lookup"><span data-stu-id="23a97-101">Calculates statistical formulas.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="23a97-102">Las fórmulas pueden agruparse flexible en las siguientes categorías: distribuciones, incluidas las distribuciones inversas; pruebas; y fórmulas estadísticas básicas.</span><span class="sxs-lookup"><span data-stu-id="23a97-102">Formulas can be loosely grouped into the following categories: distributions, including inverse distributions; tests; and basic statistical formulas.</span></span> <span data-ttu-id="23a97-103">Cada grupo tiene características comunes con respecto a sus valores de entrada y salidas.</span><span class="sxs-lookup"><span data-stu-id="23a97-103">Each group has common characteristics with respect to their input and return values.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Anova">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.AnovaResult Anova (double probability, string inputSeriesNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.DataVisualization.Charting.AnovaResult Anova(float64 probability, string inputSeriesNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.Anova(System.Double,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Anova (probability As Double, inputSeriesNames As String) As AnovaResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::DataVisualization::Charting::AnovaResult ^ Anova(double probability, System::String ^ inputSeriesNames);" />
      <MemberSignature Language="F#" Value="member this.Anova : double * string -&gt; System.Windows.Forms.DataVisualization.Charting.AnovaResult" Usage="statisticFormula.Anova (probability, inputSeriesNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.AnovaResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="probability" Type="System.Double" />
        <Parameter Name="inputSeriesNames" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="probability"><span data-ttu-id="23a97-104">Valor alfa, que indica la probabilidad de que la hipótesis sea rechazada.</span><span class="sxs-lookup"><span data-stu-id="23a97-104">The alpha value, which is the probability that the hypothesis is rejected.</span></span> <span data-ttu-id="23a97-105">El intervalo permitido es de 0-1.</span><span class="sxs-lookup"><span data-stu-id="23a97-105">The allowable range is 0-1.</span></span></param>
        <param name="inputSeriesNames"><span data-ttu-id="23a97-106">Lista delimitada por comas de nombres de series de entrada.</span><span class="sxs-lookup"><span data-stu-id="23a97-106">A comma-delimited list of input series names.</span></span></param>
        <summary><span data-ttu-id="23a97-107">Realiza una prueba ANOVA para determinar si hay una diferencia significativa estadísticamente entre los valores medios de dos o más grupos de datos.</span><span class="sxs-lookup"><span data-stu-id="23a97-107">Performs an ANOVA test to determine whether there is a statistically significant difference between the mean values of two or more groups of data.</span></span></summary>
        <returns><span data-ttu-id="23a97-108">Un objeto <see cref="T:System.Windows.Forms.DataVisualization.Charting.AnovaResult" />.</span><span class="sxs-lookup"><span data-stu-id="23a97-108">An <see cref="T:System.Windows.Forms.DataVisualization.Charting.AnovaResult" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="23a97-109">Una prueba ANOVA se usa para probar la diferencia entre las medias de dos o más grupos de datos.</span><span class="sxs-lookup"><span data-stu-id="23a97-109">An ANOVA test is used to test the difference between the means of two or more groups of data.</span></span>  
  
 <span data-ttu-id="23a97-110">Se deben especificar dos o más grupos de datos de serie, y cada serie debe tener el mismo número de puntos de datos; en caso contrario, se producirá una excepción.</span><span class="sxs-lookup"><span data-stu-id="23a97-110">Two or more groups of series data must be specified, and each series must have the same number of data points; otherwise, an exception will be raised.</span></span>  
  
 <span data-ttu-id="23a97-111">Si una serie de entrada especificada no existe en el <xref:System.Windows.Forms.DataVisualization.Charting.SeriesCollection> en el momento de la llamada al método, se producirá una excepción.</span><span class="sxs-lookup"><span data-stu-id="23a97-111">If a specified input series does not exist in the <xref:System.Windows.Forms.DataVisualization.Charting.SeriesCollection> at the time of the method call, an exception will be thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BetaFunction">
      <MemberSignature Language="C#" Value="public double BetaFunction (double m, double n);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 BetaFunction(float64 m, float64 n) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.BetaFunction(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function BetaFunction (m As Double, n As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double BetaFunction(double m, double n);" />
      <MemberSignature Language="F#" Value="member this.BetaFunction : double * double -&gt; double" Usage="statisticFormula.BetaFunction (m, n)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Double" />
        <Parameter Name="n" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="m"><span data-ttu-id="23a97-112">Primer valor de la función beta.</span><span class="sxs-lookup"><span data-stu-id="23a97-112">The first value for the beta function.</span></span></param>
        <param name="n"><span data-ttu-id="23a97-113">Segundo valor de la función beta.</span><span class="sxs-lookup"><span data-stu-id="23a97-113">The second value for the beta function.</span></span></param>
        <summary><span data-ttu-id="23a97-114">Devuelve el valor de función beta para dos valores determinados.</span><span class="sxs-lookup"><span data-stu-id="23a97-114">Returns the beta function value for two given values.</span></span></summary>
        <returns><span data-ttu-id="23a97-115">Valor <see langword="double" /> que representa la función beta para los dos valores dados.</span><span class="sxs-lookup"><span data-stu-id="23a97-115">A <see langword="double" /> value that represents the beta function for the two given values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="23a97-116">Este método devuelve el valor de función beta para dos valores especificados que se especifican mediante `m` y `n`.</span><span class="sxs-lookup"><span data-stu-id="23a97-116">This method returns the beta function value for two given values that are specified by `m` and `n`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Correlation">
      <MemberSignature Language="C#" Value="public double Correlation (string firstInputSeriesName, string secondInputSeriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 Correlation(string firstInputSeriesName, string secondInputSeriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.Correlation(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Correlation (firstInputSeriesName As String, secondInputSeriesName As String) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Correlation(System::String ^ firstInputSeriesName, System::String ^ secondInputSeriesName);" />
      <MemberSignature Language="F#" Value="member this.Correlation : string * string -&gt; double" Usage="statisticFormula.Correlation (firstInputSeriesName, secondInputSeriesName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="firstInputSeriesName" Type="System.String" />
        <Parameter Name="secondInputSeriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="firstInputSeriesName"><span data-ttu-id="23a97-117">Nombre de la primera serie de entrada.</span><span class="sxs-lookup"><span data-stu-id="23a97-117">The first input series name.</span></span></param>
        <param name="secondInputSeriesName"><span data-ttu-id="23a97-118">Nombre de la segunda serie de entrada.</span><span class="sxs-lookup"><span data-stu-id="23a97-118">The second input series name.</span></span></param>
        <summary><span data-ttu-id="23a97-119">Devuelve el valor de correlación para dos series de datos.</span><span class="sxs-lookup"><span data-stu-id="23a97-119">Returns the correlation value for two data series.</span></span></summary>
        <returns><span data-ttu-id="23a97-120">Valor <see langword="double" /> que representa la correlación entre dos series de datos.</span><span class="sxs-lookup"><span data-stu-id="23a97-120">A <see langword="double" /> value that represents the correlation between two data series.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="23a97-121">Correlación mide la relación entre dos conjuntos de datos que se escalan para que sea independiente de la unidad de medida.</span><span class="sxs-lookup"><span data-stu-id="23a97-121">Correlation measures the relationship between two data sets that are scaled to be independent of the unit of measurement.</span></span> <span data-ttu-id="23a97-122">El <xref:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.Correlation%2A> método devuelve la covarianza de dos conjuntos de datos dividido por el producto de sus desviaciones estándar y siempre comprendido entre -1 y 1.</span><span class="sxs-lookup"><span data-stu-id="23a97-122">The <xref:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.Correlation%2A> method returns the covariance of two data sets divided by the product of their standard deviations, and always ranges from -1 to 1.</span></span>  
  
 <span data-ttu-id="23a97-123">Utilizar la correlación para determinar si dos intervalos de datos se desplazan juntas; es decir, si los valores altos de un conjunto están asociados con los valores de otro (correlación positiva), si los valores pequeños de un conjunto están asociados con los valores altos de otro (correlación negativa) o si los valores en ambos conjuntos son (no relacionados correlación cerca de cero).</span><span class="sxs-lookup"><span data-stu-id="23a97-123">Use correlation to determine whether two ranges of data move together; that is, whether large values of one set are associated with large values of the other (positive correlation), whether small values of one set are associated with large values of the other (negative correlation), or whether values in both sets are unrelated (correlation near zero).</span></span>  
  
 <span data-ttu-id="23a97-124">Si una serie de entrada especificada no existe en la colección de series en el momento de la llamada al método, se producirá una excepción.</span><span class="sxs-lookup"><span data-stu-id="23a97-124">If a specified input series does not exist in the series collection at the time of the method call, an exception will be thrown.</span></span> <span data-ttu-id="23a97-125">También se producirá una excepción si la serie especificada no tiene el mismo número de puntos de datos.</span><span class="sxs-lookup"><span data-stu-id="23a97-125">An exception will also be raised if the specified series do not have the same number of data points.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Covariance">
      <MemberSignature Language="C#" Value="public double Covariance (string firstInputSeriesName, string secondInputSeriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 Covariance(string firstInputSeriesName, string secondInputSeriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.Covariance(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Covariance (firstInputSeriesName As String, secondInputSeriesName As String) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Covariance(System::String ^ firstInputSeriesName, System::String ^ secondInputSeriesName);" />
      <MemberSignature Language="F#" Value="member this.Covariance : string * string -&gt; double" Usage="statisticFormula.Covariance (firstInputSeriesName, secondInputSeriesName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="firstInputSeriesName" Type="System.String" />
        <Parameter Name="secondInputSeriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="firstInputSeriesName"><span data-ttu-id="23a97-126">Nombre de la primera serie de entrada.</span><span class="sxs-lookup"><span data-stu-id="23a97-126">The first input series name.</span></span></param>
        <param name="secondInputSeriesName"><span data-ttu-id="23a97-127">Nombre de la segunda serie de entrada.</span><span class="sxs-lookup"><span data-stu-id="23a97-127">The second input series name.</span></span></param>
        <summary><span data-ttu-id="23a97-128">Devuelve el valor de covarianza para dos series de datos.</span><span class="sxs-lookup"><span data-stu-id="23a97-128">Returns the covariance value for two data series.</span></span></summary>
        <returns><span data-ttu-id="23a97-129">Valor <see langword="double" /> que representa la covarianza entre dos series de datos.</span><span class="sxs-lookup"><span data-stu-id="23a97-129">A <see langword="double" /> value that represents the covariance between two data series.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FDistribution">
      <MemberSignature Language="C#" Value="public double FDistribution (double value, int firstDegreeOfFreedom, int secondDegreeOfFreedom);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 FDistribution(float64 value, int32 firstDegreeOfFreedom, int32 secondDegreeOfFreedom) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.FDistribution(System.Double,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function FDistribution (value As Double, firstDegreeOfFreedom As Integer, secondDegreeOfFreedom As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double FDistribution(double value, int firstDegreeOfFreedom, int secondDegreeOfFreedom);" />
      <MemberSignature Language="F#" Value="member this.FDistribution : double * int * int -&gt; double" Usage="statisticFormula.FDistribution (value, firstDegreeOfFreedom, secondDegreeOfFreedom)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
        <Parameter Name="firstDegreeOfFreedom" Type="System.Int32" />
        <Parameter Name="secondDegreeOfFreedom" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="23a97-130">Valor F.</span><span class="sxs-lookup"><span data-stu-id="23a97-130">The F value.</span></span></param>
        <param name="firstDegreeOfFreedom"><span data-ttu-id="23a97-131">Primer grado de libertad.</span><span class="sxs-lookup"><span data-stu-id="23a97-131">First degree of freedom.</span></span></param>
        <param name="secondDegreeOfFreedom"><span data-ttu-id="23a97-132">Segundo grado de libertad.</span><span class="sxs-lookup"><span data-stu-id="23a97-132">Second degree of freedom.</span></span></param>
        <summary><span data-ttu-id="23a97-133">Devuelve la probabilidad de la función de distribución de F acumulativa.</span><span class="sxs-lookup"><span data-stu-id="23a97-133">Returns the cumulative F distribution function probability.</span></span></summary>
        <returns><span data-ttu-id="23a97-134">Valor <see langword="double" /> que representa la probabilidad de la función de distribución de F acumulativa.</span><span class="sxs-lookup"><span data-stu-id="23a97-134">A <see langword="double" /> value that represents the cumulative F distribution function probability.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FTest">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.FTestResult FTest (double probability, string firstInputSeriesName, string secondInputSeriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.DataVisualization.Charting.FTestResult FTest(float64 probability, string firstInputSeriesName, string secondInputSeriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.FTest(System.Double,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FTest (probability As Double, firstInputSeriesName As String, secondInputSeriesName As String) As FTestResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::DataVisualization::Charting::FTestResult ^ FTest(double probability, System::String ^ firstInputSeriesName, System::String ^ secondInputSeriesName);" />
      <MemberSignature Language="F#" Value="member this.FTest : double * string * string -&gt; System.Windows.Forms.DataVisualization.Charting.FTestResult" Usage="statisticFormula.FTest (probability, firstInputSeriesName, secondInputSeriesName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.FTestResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="probability" Type="System.Double" />
        <Parameter Name="firstInputSeriesName" Type="System.String" />
        <Parameter Name="secondInputSeriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="probability"><span data-ttu-id="23a97-135">Valor alfa, que indica la probabilidad de que la hipótesis sea rechazada.</span><span class="sxs-lookup"><span data-stu-id="23a97-135">The alpha value, which is the probability that the hypothesis is rejected.</span></span> <span data-ttu-id="23a97-136">El intervalo permitido es de 0-1.</span><span class="sxs-lookup"><span data-stu-id="23a97-136">The allowable range is 0-1.</span></span></param>
        <param name="firstInputSeriesName"><span data-ttu-id="23a97-137">Nombre de la primera serie de entrada.</span><span class="sxs-lookup"><span data-stu-id="23a97-137">First input series name.</span></span></param>
        <param name="secondInputSeriesName"><span data-ttu-id="23a97-138">Nombre de la segunda serie de entrada.</span><span class="sxs-lookup"><span data-stu-id="23a97-138">Second input series name.</span></span></param>
        <summary><span data-ttu-id="23a97-139">Realiza una prueba de F de dos muestras usando la distribución de F.</span><span class="sxs-lookup"><span data-stu-id="23a97-139">Performs a two-sample F Test using the F distribution.</span></span> <span data-ttu-id="23a97-140">Esta prueba se usa para determinar si las muestras tienen varianzas diferentes.</span><span class="sxs-lookup"><span data-stu-id="23a97-140">This test is used to determine if the samples have different variances.</span></span></summary>
        <returns><span data-ttu-id="23a97-141">Un objeto <see cref="T:System.Windows.Forms.DataVisualization.Charting.FTestResult" />.</span><span class="sxs-lookup"><span data-stu-id="23a97-141">An <see cref="T:System.Windows.Forms.DataVisualization.Charting.FTestResult" /> object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GammaFunction">
      <MemberSignature Language="C#" Value="public double GammaFunction (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 GammaFunction(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.GammaFunction(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function GammaFunction (value As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double GammaFunction(double value);" />
      <MemberSignature Language="F#" Value="member this.GammaFunction : double -&gt; double" Usage="statisticFormula.GammaFunction value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="23a97-142">Variable de entrada.</span><span class="sxs-lookup"><span data-stu-id="23a97-142">The input variable.</span></span></param>
        <summary><span data-ttu-id="23a97-143">Devuelve el valor de la función gamma para la variable dada.</span><span class="sxs-lookup"><span data-stu-id="23a97-143">Returns the gamma function value for the given variable.</span></span></summary>
        <returns><span data-ttu-id="23a97-144">Valor <see langword="double" /> que representa la función gamma.</span><span class="sxs-lookup"><span data-stu-id="23a97-144">A <see langword="double" /> value that represents the gamma function.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InverseFDistribution">
      <MemberSignature Language="C#" Value="public double InverseFDistribution (double probability, int firstDegreeOfFreedom, int secondDegreeOfFreedom);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 InverseFDistribution(float64 probability, int32 firstDegreeOfFreedom, int32 secondDegreeOfFreedom) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.InverseFDistribution(System.Double,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function InverseFDistribution (probability As Double, firstDegreeOfFreedom As Integer, secondDegreeOfFreedom As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double InverseFDistribution(double probability, int firstDegreeOfFreedom, int secondDegreeOfFreedom);" />
      <MemberSignature Language="F#" Value="member this.InverseFDistribution : double * int * int -&gt; double" Usage="statisticFormula.InverseFDistribution (probability, firstDegreeOfFreedom, secondDegreeOfFreedom)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="probability" Type="System.Double" />
        <Parameter Name="firstDegreeOfFreedom" Type="System.Int32" />
        <Parameter Name="secondDegreeOfFreedom" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="probability"><span data-ttu-id="23a97-145">Valor alfa, que indica la probabilidad de que la hipótesis sea rechazada.</span><span class="sxs-lookup"><span data-stu-id="23a97-145">The alpha value, which is the probability that the hypothesis is rejected.</span></span> <span data-ttu-id="23a97-146">El intervalo permitido es de 0-1.</span><span class="sxs-lookup"><span data-stu-id="23a97-146">The allowable range is 0-1.</span></span></param>
        <param name="firstDegreeOfFreedom"><span data-ttu-id="23a97-147">Primer grado de libertad.</span><span class="sxs-lookup"><span data-stu-id="23a97-147">First degree of freedom.</span></span></param>
        <param name="secondDegreeOfFreedom"><span data-ttu-id="23a97-148">Segundo grado de libertad.</span><span class="sxs-lookup"><span data-stu-id="23a97-148">Second degree of freedom.</span></span></param>
        <summary><span data-ttu-id="23a97-149">Devuelve la función inversa de distribución acumulativa F.</span><span class="sxs-lookup"><span data-stu-id="23a97-149">Returns the inverse of the F cumulative distribution.</span></span></summary>
        <returns><span data-ttu-id="23a97-150">Valor <see langword="double" /> de la función inversa de distribución F.</span><span class="sxs-lookup"><span data-stu-id="23a97-150">A <see langword="double" /> value from the inverse F distribution function.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="23a97-151">Este método devuelve el valor de F de la probabilidad de distribución F determinada.</span><span class="sxs-lookup"><span data-stu-id="23a97-151">This method returns the F value for the given F distribution probability.</span></span>  
  
 <span data-ttu-id="23a97-152">La distribución F puede usarse en una prueba de F que compara el grado de variabilidad en dos conjuntos de datos.</span><span class="sxs-lookup"><span data-stu-id="23a97-152">The F distribution can be used in an F-test that compares the degree of variability in two data sets.</span></span>  
  
 <span data-ttu-id="23a97-153">Este método puede devolver una excepción en función de los valores de parámetro.</span><span class="sxs-lookup"><span data-stu-id="23a97-153">This method may return an exception depending on the parameter values.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="23a97-154">Condición: El cálculo no puede continuar con los valores de parámetro especificados debido a una limitación.</span><span class="sxs-lookup"><span data-stu-id="23a97-154">Condition: Cannot continue calculation using specified parameter values because of limitation.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="InverseNormalDistribution">
      <MemberSignature Language="C#" Value="public double InverseNormalDistribution (double probability);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 InverseNormalDistribution(float64 probability) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.InverseNormalDistribution(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function InverseNormalDistribution (probability As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double InverseNormalDistribution(double probability);" />
      <MemberSignature Language="F#" Value="member this.InverseNormalDistribution : double -&gt; double" Usage="statisticFormula.InverseNormalDistribution probability" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="probability" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="probability"><span data-ttu-id="23a97-155">Valor alfa, que indica la probabilidad de que la hipótesis sea rechazada.</span><span class="sxs-lookup"><span data-stu-id="23a97-155">The alpha value, which is the probability that the hypothesis is rejected.</span></span> <span data-ttu-id="23a97-156">El intervalo permitido es de 0-1.</span><span class="sxs-lookup"><span data-stu-id="23a97-156">The allowable range is 0-1.</span></span></param>
        <summary><span data-ttu-id="23a97-157">Devuelve la inversa de la distribución acumulativa normal estándar.</span><span class="sxs-lookup"><span data-stu-id="23a97-157">Returns the inverse of the standard normal cumulative distribution.</span></span></summary>
        <returns><span data-ttu-id="23a97-158">Valor <see langword="double" /> de la función de distribución acumulativa normal estándar inversa.</span><span class="sxs-lookup"><span data-stu-id="23a97-158">A <see langword="double" /> value from the inverse standard normal cumulative distribution function.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="23a97-159">Este método devuelve el valor de F de la probabilidad de distribución F determinada.</span><span class="sxs-lookup"><span data-stu-id="23a97-159">This method returns the F value for the given F distribution probability.</span></span>  
  
 <span data-ttu-id="23a97-160">Se supone que la distribución tiene una media de 0 (cero) y una desviación estándar de uno.</span><span class="sxs-lookup"><span data-stu-id="23a97-160">It is assumed that the distribution has a mean of 0 (zero) and a standard deviation of one.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InverseTDistribution">
      <MemberSignature Language="C#" Value="public double InverseTDistribution (double probability, int degreeOfFreedom);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 InverseTDistribution(float64 probability, int32 degreeOfFreedom) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.InverseTDistribution(System.Double,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function InverseTDistribution (probability As Double, degreeOfFreedom As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double InverseTDistribution(double probability, int degreeOfFreedom);" />
      <MemberSignature Language="F#" Value="member this.InverseTDistribution : double * int -&gt; double" Usage="statisticFormula.InverseTDistribution (probability, degreeOfFreedom)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="probability" Type="System.Double" />
        <Parameter Name="degreeOfFreedom" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="probability"><span data-ttu-id="23a97-161">Valor alfa, que indica la probabilidad de que la hipótesis sea rechazada.</span><span class="sxs-lookup"><span data-stu-id="23a97-161">The alpha value, which is the probability that the hypothesis is rejected.</span></span> <span data-ttu-id="23a97-162">El intervalo permitido es de 0-1.</span><span class="sxs-lookup"><span data-stu-id="23a97-162">The allowable range is 0-1.</span></span></param>
        <param name="degreeOfFreedom"><span data-ttu-id="23a97-163">Grado de libertad.</span><span class="sxs-lookup"><span data-stu-id="23a97-163">The degree of freedom.</span></span></param>
        <summary><span data-ttu-id="23a97-164">Devuelve el valor de t inverso de la distribución t de Student como una función de probabilidad y un grado de libertad.</span><span class="sxs-lookup"><span data-stu-id="23a97-164">Returns the inverse t-value of the Students t-distribution as a function of probability and degree of freedom.</span></span></summary>
        <returns><span data-ttu-id="23a97-165">Valor <see langword="double" /> que representa la distribución de T inversa.</span><span class="sxs-lookup"><span data-stu-id="23a97-165">A <see langword="double" /> value that represents the inverse T distribution.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="23a97-166">Este método devuelve el valor de t de la probabilidad de distribución de T determinada.</span><span class="sxs-lookup"><span data-stu-id="23a97-166">This method returns the t value for the given T distribution probability.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Mean">
      <MemberSignature Language="C#" Value="public double Mean (string inputSeriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 Mean(string inputSeriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.Mean(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Mean (inputSeriesName As String) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Mean(System::String ^ inputSeriesName);" />
      <MemberSignature Language="F#" Value="member this.Mean : string -&gt; double" Usage="statisticFormula.Mean inputSeriesName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputSeriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="inputSeriesName"><span data-ttu-id="23a97-167">Nombre de la serie de entrada.</span><span class="sxs-lookup"><span data-stu-id="23a97-167">Input series name.</span></span></param>
        <summary><span data-ttu-id="23a97-168">Devuelve el promedio de todos los puntos de datos almacenados en la serie especificada.</span><span class="sxs-lookup"><span data-stu-id="23a97-168">Returns the average of all data points stored in the specified series.</span></span></summary>
        <returns><span data-ttu-id="23a97-169">Valor <see langword="double" /> que representa el promedio de todos los puntos de datos.</span><span class="sxs-lookup"><span data-stu-id="23a97-169">A <see langword="double" /> value that represents the average of all data points.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="23a97-170">Use este método para calcular la media (es decir, el promedio) de los puntos que se almacenan en una serie.</span><span class="sxs-lookup"><span data-stu-id="23a97-170">Use this method to calculate the mean (that is, the average) of the points stored in a series.</span></span>  
  
 <span data-ttu-id="23a97-171">Si la serie de entrada especificada no existe en el <xref:System.Windows.Forms.DataVisualization.Charting.SeriesCollection> en el momento de la llamada al método, se producirá una excepción.</span><span class="sxs-lookup"><span data-stu-id="23a97-171">If the specified input series does not exist in the <xref:System.Windows.Forms.DataVisualization.Charting.SeriesCollection> at the time of the method call, an exception will be thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Median">
      <MemberSignature Language="C#" Value="public double Median (string inputSeriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 Median(string inputSeriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.Median(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Median (inputSeriesName As String) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Median(System::String ^ inputSeriesName);" />
      <MemberSignature Language="F#" Value="member this.Median : string -&gt; double" Usage="statisticFormula.Median inputSeriesName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputSeriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="inputSeriesName"><span data-ttu-id="23a97-172">Nombre de la serie de entrada.</span><span class="sxs-lookup"><span data-stu-id="23a97-172">Input series name.</span></span></param>
        <summary><span data-ttu-id="23a97-173">Devuelve la mediana de todos los puntos de datos de la serie especificada.</span><span class="sxs-lookup"><span data-stu-id="23a97-173">Returns the median of all data points in the specified series.</span></span></summary>
        <returns><span data-ttu-id="23a97-174">Valor <see langword="double" /> que representa la mediana.</span><span class="sxs-lookup"><span data-stu-id="23a97-174">A <see langword="double" /> value that represents the median.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="23a97-175">Utilice este método para calcular la mediana de los puntos que se almacenan en una serie.</span><span class="sxs-lookup"><span data-stu-id="23a97-175">Use this method to calculate the median of the points stored in a series.</span></span>  
  
 <span data-ttu-id="23a97-176">El valor medio es el valor medio de un conjunto de ejemplo, donde la mitad de los miembros tiene un tamaño mayor y tiene un tamaño menor la mitad de los miembros.</span><span class="sxs-lookup"><span data-stu-id="23a97-176">The median is the middle value of a sample set, where half of the members are greater in size and half the members are lesser in size.</span></span>  
  
 <span data-ttu-id="23a97-177">Si la serie de entrada especificada no existe en el <xref:System.Windows.Forms.DataVisualization.Charting.SeriesCollection> en el momento de la llamada al método, se producirá una excepción.</span><span class="sxs-lookup"><span data-stu-id="23a97-177">If the specified input series does not exist in the <xref:System.Windows.Forms.DataVisualization.Charting.SeriesCollection> at the time of the method call, an exception will be thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NormalDistribution">
      <MemberSignature Language="C#" Value="public double NormalDistribution (double zValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 NormalDistribution(float64 zValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.NormalDistribution(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function NormalDistribution (zValue As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double NormalDistribution(double zValue);" />
      <MemberSignature Language="F#" Value="member this.NormalDistribution : double -&gt; double" Usage="statisticFormula.NormalDistribution zValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="zValue" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="zValue"><span data-ttu-id="23a97-178">Valor de Z para el que se necesita la probabilidad.</span><span class="sxs-lookup"><span data-stu-id="23a97-178">The Z value for which the probability is required.</span></span></param>
        <summary><span data-ttu-id="23a97-179">Devuelve la probabilidad para la función de distribución acumulativa normal estándar.</span><span class="sxs-lookup"><span data-stu-id="23a97-179">Returns the probability for the standard normal cumulative distribution function.</span></span></summary>
        <returns><span data-ttu-id="23a97-180">Valor <see langword="double" /> de la función de distribución acumulativa normal estándar.</span><span class="sxs-lookup"><span data-stu-id="23a97-180">A <see langword="double" /> value from the standard normal cumulative distribution function.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TDistribution">
      <MemberSignature Language="C#" Value="public double TDistribution (double value, int degreeOfFreedom, bool oneTail);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 TDistribution(float64 value, int32 degreeOfFreedom, bool oneTail) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.TDistribution(System.Double,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function TDistribution (value As Double, degreeOfFreedom As Integer, oneTail As Boolean) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double TDistribution(double value, int degreeOfFreedom, bool oneTail);" />
      <MemberSignature Language="F#" Value="member this.TDistribution : double * int * bool -&gt; double" Usage="statisticFormula.TDistribution (value, degreeOfFreedom, oneTail)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
        <Parameter Name="degreeOfFreedom" Type="System.Int32" />
        <Parameter Name="oneTail" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="23a97-181">Valor T.</span><span class="sxs-lookup"><span data-stu-id="23a97-181">The T value</span></span></param>
        <param name="degreeOfFreedom"><span data-ttu-id="23a97-182">Grado de libertad.</span><span class="sxs-lookup"><span data-stu-id="23a97-182">Degree of freedom</span></span></param>
        <param name="oneTail"><span data-ttu-id="23a97-183">Si es <see langword="true" />, se usa una distribución de una cola; de lo contrario, se usa una distribución de dos colas.</span><span class="sxs-lookup"><span data-stu-id="23a97-183">If <see langword="true" />, a one-tailed distribution is used; otherwise, a two-tailed distribution is used.</span></span></param>
        <summary><span data-ttu-id="23a97-184">Devuelve la probabilidad para la distribución de T (distribución de Student).</span><span class="sxs-lookup"><span data-stu-id="23a97-184">Returns the probability for the T distribution (Student's distribution).</span></span></summary>
        <returns><span data-ttu-id="23a97-185">Valor <see langword="double" /> que representa una función acumulativa de distribución de T.</span><span class="sxs-lookup"><span data-stu-id="23a97-185">A <see langword="double" /> value that represents a T Distribution cumulative function.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TTestEqualVariances">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.TTestResult TTestEqualVariances (double hypothesizedMeanDifference, double probability, string firstInputSeriesName, string secondInputSeriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.DataVisualization.Charting.TTestResult TTestEqualVariances(float64 hypothesizedMeanDifference, float64 probability, string firstInputSeriesName, string secondInputSeriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.TTestEqualVariances(System.Double,System.Double,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function TTestEqualVariances (hypothesizedMeanDifference As Double, probability As Double, firstInputSeriesName As String, secondInputSeriesName As String) As TTestResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::DataVisualization::Charting::TTestResult ^ TTestEqualVariances(double hypothesizedMeanDifference, double probability, System::String ^ firstInputSeriesName, System::String ^ secondInputSeriesName);" />
      <MemberSignature Language="F#" Value="member this.TTestEqualVariances : double * double * string * string -&gt; System.Windows.Forms.DataVisualization.Charting.TTestResult" Usage="statisticFormula.TTestEqualVariances (hypothesizedMeanDifference, probability, firstInputSeriesName, secondInputSeriesName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.TTestResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hypothesizedMeanDifference" Type="System.Double" />
        <Parameter Name="probability" Type="System.Double" />
        <Parameter Name="firstInputSeriesName" Type="System.String" />
        <Parameter Name="secondInputSeriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hypothesizedMeanDifference"><span data-ttu-id="23a97-186">Diferencia media hipotética.</span><span class="sxs-lookup"><span data-stu-id="23a97-186">Hypothesized mean difference.</span></span></param>
        <param name="probability"><span data-ttu-id="23a97-187">Valor alfa, que indica la probabilidad de que la hipótesis sea rechazada.</span><span class="sxs-lookup"><span data-stu-id="23a97-187">The alpha value, which is the probability that the hypothesis is rejected.</span></span> <span data-ttu-id="23a97-188">El intervalo permitido es de 0-1.</span><span class="sxs-lookup"><span data-stu-id="23a97-188">The allowable range is 0-1.</span></span></param>
        <param name="firstInputSeriesName"><span data-ttu-id="23a97-189">Nombre de la primera serie de entrada.</span><span class="sxs-lookup"><span data-stu-id="23a97-189">First input series name.</span></span></param>
        <param name="secondInputSeriesName"><span data-ttu-id="23a97-190">Nombre de la segunda serie de entrada.</span><span class="sxs-lookup"><span data-stu-id="23a97-190">Second input series name.</span></span></param>
        <summary><span data-ttu-id="23a97-191">Realiza una prueba T usando la distribución de Student (distribución de T) con varianzas iguales.</span><span class="sxs-lookup"><span data-stu-id="23a97-191">Performs a T Test using Student's distribution (T distribution) with equal variances.</span></span></summary>
        <returns><span data-ttu-id="23a97-192">Un objeto <see cref="T:System.Windows.Forms.DataVisualization.Charting.TTestResult" />.</span><span class="sxs-lookup"><span data-stu-id="23a97-192">A <see cref="T:System.Windows.Forms.DataVisualization.Charting.TTestResult" /> object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TTestPaired">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.TTestResult TTestPaired (double hypothesizedMeanDifference, double probability, string firstInputSeriesName, string secondInputSeriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.DataVisualization.Charting.TTestResult TTestPaired(float64 hypothesizedMeanDifference, float64 probability, string firstInputSeriesName, string secondInputSeriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.TTestPaired(System.Double,System.Double,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function TTestPaired (hypothesizedMeanDifference As Double, probability As Double, firstInputSeriesName As String, secondInputSeriesName As String) As TTestResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::DataVisualization::Charting::TTestResult ^ TTestPaired(double hypothesizedMeanDifference, double probability, System::String ^ firstInputSeriesName, System::String ^ secondInputSeriesName);" />
      <MemberSignature Language="F#" Value="member this.TTestPaired : double * double * string * string -&gt; System.Windows.Forms.DataVisualization.Charting.TTestResult" Usage="statisticFormula.TTestPaired (hypothesizedMeanDifference, probability, firstInputSeriesName, secondInputSeriesName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.TTestResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hypothesizedMeanDifference" Type="System.Double" />
        <Parameter Name="probability" Type="System.Double" />
        <Parameter Name="firstInputSeriesName" Type="System.String" />
        <Parameter Name="secondInputSeriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hypothesizedMeanDifference"><span data-ttu-id="23a97-193">Diferencia media hipotética.</span><span class="sxs-lookup"><span data-stu-id="23a97-193">Hypothesized mean difference.</span></span></param>
        <param name="probability"><span data-ttu-id="23a97-194">Valor alfa, que indica la probabilidad de que la hipótesis sea rechazada.</span><span class="sxs-lookup"><span data-stu-id="23a97-194">The alpha value, which is the probability that the hypothesis is rejected.</span></span> <span data-ttu-id="23a97-195">El intervalo permitido es de 0-1.</span><span class="sxs-lookup"><span data-stu-id="23a97-195">The allowable range is 0-1.</span></span></param>
        <param name="firstInputSeriesName"><span data-ttu-id="23a97-196">Nombre de la primera serie de entrada.</span><span class="sxs-lookup"><span data-stu-id="23a97-196">First input series name.</span></span></param>
        <param name="secondInputSeriesName"><span data-ttu-id="23a97-197">Nombre de la segunda serie de entrada.</span><span class="sxs-lookup"><span data-stu-id="23a97-197">Second input series name.</span></span></param>
        <summary><span data-ttu-id="23a97-198">Realiza una prueba T usando la distribución de Student (distribución de T) con muestras pareadas.</span><span class="sxs-lookup"><span data-stu-id="23a97-198">Performs a T Test using Student's distribution (T distribution) with paired samples.</span></span> <span data-ttu-id="23a97-199">Esto es útil cuando hay un emparejamiento natural de observaciones en las muestras.</span><span class="sxs-lookup"><span data-stu-id="23a97-199">This is useful when there is a natural pairing of observations in samples.</span></span></summary>
        <returns><span data-ttu-id="23a97-200">Un objeto <see cref="T:System.Windows.Forms.DataVisualization.Charting.TTestResult" />.</span><span class="sxs-lookup"><span data-stu-id="23a97-200">A <see cref="T:System.Windows.Forms.DataVisualization.Charting.TTestResult" /> object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TTestUnequalVariances">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.TTestResult TTestUnequalVariances (double hypothesizedMeanDifference, double probability, string firstInputSeriesName, string secondInputSeriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.DataVisualization.Charting.TTestResult TTestUnequalVariances(float64 hypothesizedMeanDifference, float64 probability, string firstInputSeriesName, string secondInputSeriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.TTestUnequalVariances(System.Double,System.Double,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function TTestUnequalVariances (hypothesizedMeanDifference As Double, probability As Double, firstInputSeriesName As String, secondInputSeriesName As String) As TTestResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::DataVisualization::Charting::TTestResult ^ TTestUnequalVariances(double hypothesizedMeanDifference, double probability, System::String ^ firstInputSeriesName, System::String ^ secondInputSeriesName);" />
      <MemberSignature Language="F#" Value="member this.TTestUnequalVariances : double * double * string * string -&gt; System.Windows.Forms.DataVisualization.Charting.TTestResult" Usage="statisticFormula.TTestUnequalVariances (hypothesizedMeanDifference, probability, firstInputSeriesName, secondInputSeriesName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.TTestResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hypothesizedMeanDifference" Type="System.Double" />
        <Parameter Name="probability" Type="System.Double" />
        <Parameter Name="firstInputSeriesName" Type="System.String" />
        <Parameter Name="secondInputSeriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hypothesizedMeanDifference"><span data-ttu-id="23a97-201">Diferencia media hipotética.</span><span class="sxs-lookup"><span data-stu-id="23a97-201">Hypothesized mean difference.</span></span></param>
        <param name="probability"><span data-ttu-id="23a97-202">Valor alfa, que indica la probabilidad de que la hipótesis sea rechazada.</span><span class="sxs-lookup"><span data-stu-id="23a97-202">The alpha value, which is the probability that the hypothesis is rejected.</span></span> <span data-ttu-id="23a97-203">El intervalo permitido es de 0-1.</span><span class="sxs-lookup"><span data-stu-id="23a97-203">The allowable range is 0-1.</span></span></param>
        <param name="firstInputSeriesName"><span data-ttu-id="23a97-204">Nombre de la primera serie de entrada.</span><span class="sxs-lookup"><span data-stu-id="23a97-204">First input series name.</span></span></param>
        <param name="secondInputSeriesName"><span data-ttu-id="23a97-205">Nombre de la segunda serie de entrada.</span><span class="sxs-lookup"><span data-stu-id="23a97-205">Second input series name.</span></span></param>
        <summary><span data-ttu-id="23a97-206">Realiza una prueba T usando la distribución de Student (distribución de T) con varianzas distintas.</span><span class="sxs-lookup"><span data-stu-id="23a97-206">Performs a T Test using Student's distribution (T distribution) with unequal variances.</span></span></summary>
        <returns><span data-ttu-id="23a97-207">Un objeto <see cref="T:System.Windows.Forms.DataVisualization.Charting.TTestResult" />.</span><span class="sxs-lookup"><span data-stu-id="23a97-207">A <see cref="T:System.Windows.Forms.DataVisualization.Charting.TTestResult" /> object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Variance">
      <MemberSignature Language="C#" Value="public double Variance (string inputSeriesName, bool sampleVariance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 Variance(string inputSeriesName, bool sampleVariance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.Variance(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Variance (inputSeriesName As String, sampleVariance As Boolean) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Variance(System::String ^ inputSeriesName, bool sampleVariance);" />
      <MemberSignature Language="F#" Value="member this.Variance : string * bool -&gt; double" Usage="statisticFormula.Variance (inputSeriesName, sampleVariance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputSeriesName" Type="System.String" />
        <Parameter Name="sampleVariance" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="inputSeriesName"><span data-ttu-id="23a97-208">Nombre de la serie de entrada.</span><span class="sxs-lookup"><span data-stu-id="23a97-208">The input series name.</span></span></param>
        <param name="sampleVariance"><span data-ttu-id="23a97-209">Es <see langword="True" /> si los datos son una muestra de la población; es <see langword="false" /> si los datos son toda la población.</span><span class="sxs-lookup"><span data-stu-id="23a97-209"><see langword="True" /> if the data is a sample of the population; <see langword="false" /> if the data is the entire population.</span></span></param>
        <summary><span data-ttu-id="23a97-210">Devuelve la varianza para una serie.</span><span class="sxs-lookup"><span data-stu-id="23a97-210">Returns the variance for a series.</span></span></summary>
        <returns><span data-ttu-id="23a97-211">Valor <see langword="double" /> que representa la varianza.</span><span class="sxs-lookup"><span data-stu-id="23a97-211">A <see langword="double" /> value that represents the variance.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ZTest">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.ZTestResult ZTest (double hypothesizedMeanDifference, double varianceFirstGroup, double varianceSecondGroup, double probability, string firstInputSeriesName, string secondInputSeriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.DataVisualization.Charting.ZTestResult ZTest(float64 hypothesizedMeanDifference, float64 varianceFirstGroup, float64 varianceSecondGroup, float64 probability, string firstInputSeriesName, string secondInputSeriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.StatisticFormula.ZTest(System.Double,System.Double,System.Double,System.Double,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ZTest (hypothesizedMeanDifference As Double, varianceFirstGroup As Double, varianceSecondGroup As Double, probability As Double, firstInputSeriesName As String, secondInputSeriesName As String) As ZTestResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::DataVisualization::Charting::ZTestResult ^ ZTest(double hypothesizedMeanDifference, double varianceFirstGroup, double varianceSecondGroup, double probability, System::String ^ firstInputSeriesName, System::String ^ secondInputSeriesName);" />
      <MemberSignature Language="F#" Value="member this.ZTest : double * double * double * double * string * string -&gt; System.Windows.Forms.DataVisualization.Charting.ZTestResult" Usage="statisticFormula.ZTest (hypothesizedMeanDifference, varianceFirstGroup, varianceSecondGroup, probability, firstInputSeriesName, secondInputSeriesName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.ZTestResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hypothesizedMeanDifference" Type="System.Double" />
        <Parameter Name="varianceFirstGroup" Type="System.Double" />
        <Parameter Name="varianceSecondGroup" Type="System.Double" />
        <Parameter Name="probability" Type="System.Double" />
        <Parameter Name="firstInputSeriesName" Type="System.String" />
        <Parameter Name="secondInputSeriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hypothesizedMeanDifference"><span data-ttu-id="23a97-212">Diferencia media hipotética.</span><span class="sxs-lookup"><span data-stu-id="23a97-212">Hypothesized mean difference.</span></span></param>
        <param name="varianceFirstGroup"><span data-ttu-id="23a97-213">Varianza del primer grupo.</span><span class="sxs-lookup"><span data-stu-id="23a97-213">Variance of the first group.</span></span></param>
        <param name="varianceSecondGroup"><span data-ttu-id="23a97-214">Varianza del segundo grupo.</span><span class="sxs-lookup"><span data-stu-id="23a97-214">Variance of the second group.</span></span></param>
        <param name="probability"><span data-ttu-id="23a97-215">Valor alfa, que indica la probabilidad de que la hipótesis sea rechazada.</span><span class="sxs-lookup"><span data-stu-id="23a97-215">The alpha value, which is the probability that the hypothesis is rejected.</span></span> <span data-ttu-id="23a97-216">El intervalo permitido es de 0-1.</span><span class="sxs-lookup"><span data-stu-id="23a97-216">The allowable range is 0-1.</span></span></param>
        <param name="firstInputSeriesName"><span data-ttu-id="23a97-217">Nombre de la primera serie de entrada.</span><span class="sxs-lookup"><span data-stu-id="23a97-217">First input series name.</span></span></param>
        <param name="secondInputSeriesName"><span data-ttu-id="23a97-218">Nombre de la segunda serie de entrada.</span><span class="sxs-lookup"><span data-stu-id="23a97-218">Second input series name.</span></span></param>
        <summary><span data-ttu-id="23a97-219">Realiza una prueba Z usando la distribución normal.</span><span class="sxs-lookup"><span data-stu-id="23a97-219">Performs a Z Test using the Normal distribution.</span></span></summary>
        <returns><span data-ttu-id="23a97-220">Un objeto <see cref="T:System.Windows.Forms.DataVisualization.Charting.ZTestResult" />.</span><span class="sxs-lookup"><span data-stu-id="23a97-220">A <see cref="T:System.Windows.Forms.DataVisualization.Charting.ZTestResult" /> object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
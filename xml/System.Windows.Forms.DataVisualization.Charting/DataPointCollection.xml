<Type Name="DataPointCollection" FullName="System.Windows.Forms.DataVisualization.Charting.DataPointCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4980424293041d317b8135c78a6b26c93c63c6d4" /><Meta Name="ms.sourcegitcommit" Value="adc8598fd19d91438cacaa8fa7ce613e28c8218e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="12/11/2018" /><Meta Name="ms.locfileid" Value="53221347" /></Metadata><TypeSignature Language="C#" Value="public class DataPointCollection : System.Windows.Forms.DataVisualization.Charting.ChartElementCollection&lt;System.Windows.Forms.DataVisualization.Charting.DataPoint&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataPointCollection extends System.Windows.Forms.DataVisualization.Charting.ChartElementCollection`1&lt;class System.Windows.Forms.DataVisualization.Charting.DataPoint&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataVisualization.Charting.DataPointCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class DataPointCollection&#xA;Inherits ChartElementCollection(Of DataPoint)" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataPointCollection : System::Windows::Forms::DataVisualization::Charting::ChartElementCollection&lt;System::Windows::Forms::DataVisualization::Charting::DataPoint ^&gt;" />
  <TypeSignature Language="F#" Value="type DataPointCollection = class&#xA;    inherit ChartElementCollection&lt;DataPoint&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.DataVisualization.Charting.ChartElementCollection&lt;System.Windows.Forms.DataVisualization.Charting.DataPoint&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="T">System.Windows.Forms.DataVisualization.Charting.DataPoint</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="da8e7-101">Representa una colección de objetos <see cref="T:System.Windows.Forms.DataVisualization.Charting.DataPoint" />.</span><span class="sxs-lookup"><span data-stu-id="da8e7-101">Represents a collection of <see cref="T:System.Windows.Forms.DataVisualization.Charting.DataPoint" /> objects.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da8e7-102">El <xref:System.Windows.Forms.DataVisualization.Charting.DataPointCollection> clase representa una colección de <xref:System.Windows.Forms.DataVisualization.Charting.DataPoint> objetos, que a su vez representan los puntos de datos que forman parte de un <xref:System.Windows.Forms.DataVisualization.Charting.Series> objeto.</span><span class="sxs-lookup"><span data-stu-id="da8e7-102">The <xref:System.Windows.Forms.DataVisualization.Charting.DataPointCollection> class represents a collection of <xref:System.Windows.Forms.DataVisualization.Charting.DataPoint> objects, which in turn represent the data points that are part of a <xref:System.Windows.Forms.DataVisualization.Charting.Series> object.</span></span>  
  
 <span data-ttu-id="da8e7-103">Esta clase de colección se implementa como la <xref:System.Windows.Forms.DataVisualization.Charting.Series.Points%2A> propiedad de un <xref:System.Windows.Forms.DataVisualization.Charting.Series> objeto.</span><span class="sxs-lookup"><span data-stu-id="da8e7-103">This collection class is implemented as the <xref:System.Windows.Forms.DataVisualization.Charting.Series.Points%2A> property of a <xref:System.Windows.Forms.DataVisualization.Charting.Series> object.</span></span>  
  
 <span data-ttu-id="da8e7-104"><xref:System.Windows.Forms.DataVisualization.Charting.DataPoint> los objetos se pueden anexar o insertar en la colección con sus valores X e Y-valores ya especificados como parámetros.</span><span class="sxs-lookup"><span data-stu-id="da8e7-104"><xref:System.Windows.Forms.DataVisualization.Charting.DataPoint> objects can be appended or inserted into the collection with their X-value and Y-value(s) already specified as parameters.</span></span> <span data-ttu-id="da8e7-105">Tenga en cuenta que también se agregan automáticamente cuando una serie se enlaza a un origen de datos mediante el <xref:System.Windows.Forms.DataVisualization.Charting.DataPointCollection.DataBindY%2A> o <xref:System.Windows.Forms.DataVisualization.Charting.DataPointCollection.DataBindXY%2A> método.</span><span class="sxs-lookup"><span data-stu-id="da8e7-105">Note that they are also added automatically when a series is bound to a data source using either the <xref:System.Windows.Forms.DataVisualization.Charting.DataPointCollection.DataBindY%2A> or <xref:System.Windows.Forms.DataVisualization.Charting.DataPointCollection.DataBindXY%2A> method.</span></span>  
  
 <span data-ttu-id="da8e7-106">Los puntos de datos se trazan en el orden que aparecen en esta colección solo si la serie que pertenece la colección tiene su <xref:System.Windows.Forms.DataVisualization.Charting.Series.IsXValueIndexed%2A> propiedad establecida en `true` (el valor predeterminado es `false`), o si todos los valores X para todos los puntos de datos son cero.</span><span class="sxs-lookup"><span data-stu-id="da8e7-106">Data points are plotted in the order that they occur in this collection only if the series that the collection belongs to has its <xref:System.Windows.Forms.DataVisualization.Charting.Series.IsXValueIndexed%2A> property set to `true` (the default value is `false`), or if all X-values for all data points are zero.</span></span> <span data-ttu-id="da8e7-107">En caso contrario, los puntos de datos se trazan utilizando sus valores X.</span><span class="sxs-lookup"><span data-stu-id="da8e7-107">Otherwise data points are plotted using their X-values.</span></span>  
  
 <span data-ttu-id="da8e7-108">Puntos de datos pueden estar ubicados y manipular, basados en X máximo, mínimo o especificado o mediante la sobrecarga de los valores Y `FindMaxValue`, `FindMinValue` o `FindValue` métodos, respectivamente.</span><span class="sxs-lookup"><span data-stu-id="da8e7-108">Data points can be located, and manipulated, based on maximum, minimum or specified X or Y-values using the overloaded `FindMaxValue`, `FindMinValue` or `FindValue` methods, respectively.</span></span>  
  
 <span data-ttu-id="da8e7-109">El <xref:System.Collections.ObjectModel.Collection%601.Count%2A> propiedad indica el número total de elementos de la colección y se usa normalmente para buscar el límite superior de la colección.</span><span class="sxs-lookup"><span data-stu-id="da8e7-109">The <xref:System.Collections.ObjectModel.Collection%601.Count%2A> property indicates the total number of items in the collection and is commonly used to find the upper bound of the collection.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.DataPoint Add (params double[] y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.DataVisualization.Charting.DataPoint Add(float64[] y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataPointCollection.Add(System.Double[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (ParamArray y As Double()) As DataPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::DataVisualization::Charting::DataPoint ^ Add(... cli::array &lt;double&gt; ^ y);" />
      <MemberSignature Language="F#" Value="override this.Add : double[] -&gt; System.Windows.Forms.DataVisualization.Charting.DataPoint" Usage="dataPointCollection.Add y" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.DataPoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="y" Type="System.Double[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="y"><span data-ttu-id="da8e7-110">Valor Y del punto de datos.</span><span class="sxs-lookup"><span data-stu-id="da8e7-110">The Y-value of the data point.</span></span></param>
        <summary><span data-ttu-id="da8e7-111">Agrega un nuevo objeto <see cref="T:System.Windows.Forms.DataVisualization.Charting.DataPoint" /> a la colección y establece su valor Y.</span><span class="sxs-lookup"><span data-stu-id="da8e7-111">Adds a new <see cref="T:System.Windows.Forms.DataVisualization.Charting.DataPoint" /> object to the collection and sets its Y value.</span></span></summary>
        <returns><span data-ttu-id="da8e7-112">Objeto <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> recién agregado.</span><span class="sxs-lookup"><span data-stu-id="da8e7-112">The newly added <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddXY">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="da8e7-113">Agrega un objeto <see cref="T:System.Windows.Forms.DataVisualization.Charting.DataPoint" /> al final de la colección, con los valores X e Y especificados.</span><span class="sxs-lookup"><span data-stu-id="da8e7-113">Adds a <see cref="T:System.Windows.Forms.DataVisualization.Charting.DataPoint" /> object to the end of the collection, with the specified X-value and Y-value.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddXY">
      <MemberSignature Language="C#" Value="public int AddXY (double xValue, double yValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 AddXY(float64 xValue, float64 yValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataPointCollection.AddXY(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddXY (xValue As Double, yValue As Double) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int AddXY(double xValue, double yValue);" />
      <MemberSignature Language="F#" Value="member this.AddXY : double * double -&gt; int" Usage="dataPointCollection.AddXY (xValue, yValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xValue" Type="System.Double" />
        <Parameter Name="yValue" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="xValue"><span data-ttu-id="da8e7-114">Valor X del punto de datos.</span><span class="sxs-lookup"><span data-stu-id="da8e7-114">The X-value of the data point.</span></span></param>
        <param name="yValue"><span data-ttu-id="da8e7-115">Valor Y del punto de datos.</span><span class="sxs-lookup"><span data-stu-id="da8e7-115">The Y-value of the data point.</span></span></param>
        <summary><span data-ttu-id="da8e7-116">Agrega un objeto <see cref="T:System.Windows.Forms.DataVisualization.Charting.DataPoint" /> al final de la colección, con los valores X e Y especificados.</span><span class="sxs-lookup"><span data-stu-id="da8e7-116">Adds a <see cref="T:System.Windows.Forms.DataVisualization.Charting.DataPoint" /> object to the end of the collection, with the specified X-value and Y-value.</span></span></summary>
        <returns><span data-ttu-id="da8e7-117">Valor <see langword="integer" /> que representa el índice de base cero donde se insertó el elemento en la colección de puntos de datos.</span><span class="sxs-lookup"><span data-stu-id="da8e7-117">An <see langword="integer" /> that represents the zero-based index where the item was inserted into the data point collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da8e7-118">Este método agrega <xref:System.Windows.Forms.DataVisualization.Charting.DataPoint> de objeto para el <xref:System.Windows.Forms.DataVisualization.Charting.DataPointCollection>; el objeto siempre se agrega al final de la colección.</span><span class="sxs-lookup"><span data-stu-id="da8e7-118">This method adds <xref:System.Windows.Forms.DataVisualization.Charting.DataPoint> object to the <xref:System.Windows.Forms.DataVisualization.Charting.DataPointCollection>; the object is always added to the end of the collection.</span></span>  
  
 <span data-ttu-id="da8e7-119">Use el <xref:System.Windows.Forms.DataVisualization.Charting.DataPointCollection.AddXY%2A> sobrecarga del método si los puntos de datos requieren más de un valor Y.</span><span class="sxs-lookup"><span data-stu-id="da8e7-119">Use the <xref:System.Windows.Forms.DataVisualization.Charting.DataPointCollection.AddXY%2A> method overload if your data points require more than one Y-value.</span></span>  
  
 <span data-ttu-id="da8e7-120">Si los puntos de datos no es necesario un valor de X: es decir, si está creando no dispersión - usar el <xref:System.Windows.Forms.DataVisualization.Charting.DataPointCollection.AddY%2A> método en su lugar.</span><span class="sxs-lookup"><span data-stu-id="da8e7-120">If your data points do not need an X-value - that is, if you are creating non-scatter plots - use the <xref:System.Windows.Forms.DataVisualization.Charting.DataPointCollection.AddY%2A> method instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddXY">
      <MemberSignature Language="C#" Value="public int AddXY (object xValue, params object[] yValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 AddXY(object xValue, object[] yValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataPointCollection.AddXY(System.Object,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function AddXY (xValue As Object, ParamArray yValue As Object()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int AddXY(System::Object ^ xValue, ... cli::array &lt;System::Object ^&gt; ^ yValue);" />
      <MemberSignature Language="F#" Value="member this.AddXY : obj * obj[] -&gt; int" Usage="dataPointCollection.AddXY (xValue, yValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xValue" Type="System.Object" />
        <Parameter Name="yValue" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="xValue"><span data-ttu-id="da8e7-121">Valor X del punto de datos.</span><span class="sxs-lookup"><span data-stu-id="da8e7-121">The X value of the data point.</span></span></param>
        <param name="yValue"><span data-ttu-id="da8e7-122">Uno o más valores separados por comas que representan los valores Y del punto de datos.</span><span class="sxs-lookup"><span data-stu-id="da8e7-122">One or more comma-separated values that represent the Y-value(s) of the data point.</span></span></param>
        <summary><span data-ttu-id="da8e7-123">Agrega un objeto <see cref="T:System.Windows.Forms.DataVisualization.Charting.DataPoint" /> al final de la colección, con los valores X e Y especificados.</span><span class="sxs-lookup"><span data-stu-id="da8e7-123">Adds a <see cref="T:System.Windows.Forms.DataVisualization.Charting.DataPoint" /> object to the end of the collection, with the specified X-value and Y-value(s).</span></span></summary>
        <returns><span data-ttu-id="da8e7-124">Valor <see langword="integer" /> que representa el índice de base cero donde se insertó el elemento en la colección.</span><span class="sxs-lookup"><span data-stu-id="da8e7-124">An <see langword="integer" /> value that represents the zero-based index where the item was inserted into the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da8e7-125">Este método agrega una <xref:System.Windows.Forms.DataVisualization.Charting.DataPoint> de objeto para el <xref:System.Windows.Forms.DataVisualization.Charting.DataPointCollection>; el punto de datos siempre se agrega al final de la colección.</span><span class="sxs-lookup"><span data-stu-id="da8e7-125">This method adds one <xref:System.Windows.Forms.DataVisualization.Charting.DataPoint> object to the <xref:System.Windows.Forms.DataVisualization.Charting.DataPointCollection>; the data point is always added to the end of the collection.</span></span>  
  
 <span data-ttu-id="da8e7-126">Debe proporcionar al menos uno (1) Y el valor, en caso contrario, se producirá una excepción.</span><span class="sxs-lookup"><span data-stu-id="da8e7-126">You must provide at least one (1) Y-value, otherwise an exception will be thrown.</span></span> <span data-ttu-id="da8e7-127">Este método también comprueba la <xref:System.Windows.Forms.DataVisualization.Charting.Series.YValueType%2A> propiedad de la <xref:System.Windows.Forms.DataVisualization.Charting.DataPointCollection> de objetos que pertenecen estos datos; si hay demasiados valores Y se especifican, se producirá una excepción.</span><span class="sxs-lookup"><span data-stu-id="da8e7-127">This method also checks the <xref:System.Windows.Forms.DataVisualization.Charting.Series.YValueType%2A> property of the <xref:System.Windows.Forms.DataVisualization.Charting.DataPointCollection> object that this data belongs to; if too many Y-values are specified, an exception will be thrown.</span></span>  
  
 <span data-ttu-id="da8e7-128">En orden para <xref:System.DateTime> formato para tener un efecto, un valor debe ser un <xref:System.DateTime> objeto.</span><span class="sxs-lookup"><span data-stu-id="da8e7-128">In order for <xref:System.DateTime> formatting to have an effect, a value must be a <xref:System.DateTime> object.</span></span>  
  
 <span data-ttu-id="da8e7-129">Si los puntos de datos no es necesario un valor de X: es decir, si está creando no dispersión - usar el <xref:System.Windows.Forms.DataVisualization.Charting.DataPointCollection.AddY%2A> método en su lugar</span><span class="sxs-lookup"><span data-stu-id="da8e7-129">If your data points do not need an X-value - that is, if you are creating non-scatter plots - use the <xref:System.Windows.Forms.DataVisualization.Charting.DataPointCollection.AddY%2A> method instead</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddY">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="da8e7-130">Agrega un objeto <see cref="T:System.Windows.Forms.DataVisualization.Charting.DataPoint" /> al final de la colección, con el valor Y especificado.</span><span class="sxs-lookup"><span data-stu-id="da8e7-130">Adds a <see cref="T:System.Windows.Forms.DataVisualization.Charting.DataPoint" /> object to the end of the collection, with the specified Y-value.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddY">
      <MemberSignature Language="C#" Value="public int AddY (double yValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 AddY(float64 yValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataPointCollection.AddY(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddY (yValue As Double) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int AddY(double yValue);" />
      <MemberSignature Language="F#" Value="member this.AddY : double -&gt; int" Usage="dataPointCollection.AddY yValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="yValue" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="yValue"><span data-ttu-id="da8e7-131">Valor Y del punto de datos.</span><span class="sxs-lookup"><span data-stu-id="da8e7-131">The Y-value of the data point.</span></span></param>
        <summary><span data-ttu-id="da8e7-132">Agrega un objeto <see cref="T:System.Windows.Forms.DataVisualization.Charting.DataPoint" /> al final de la colección, con el valor Y especificado.</span><span class="sxs-lookup"><span data-stu-id="da8e7-132">Adds a <see cref="T:System.Windows.Forms.DataVisualization.Charting.DataPoint" /> object to the end of the collection, with the specified Y-value.</span></span></summary>
        <returns><span data-ttu-id="da8e7-133">Valor <see langword="integer" /> que representa el índice de base cero donde se insertó el elemento en la colección de puntos de datos.</span><span class="sxs-lookup"><span data-stu-id="da8e7-133">An <see langword="integer" /> that represents the zero-based index where the item was inserted into the data point collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da8e7-134">Este método agrega una <xref:System.Windows.Forms.DataVisualization.Charting.DataPoint> de objeto para el <xref:System.Windows.Forms.DataVisualization.Charting.DataPointCollection>; el punto de datos siempre se agrega al final de la colección.</span><span class="sxs-lookup"><span data-stu-id="da8e7-134">This method adds one <xref:System.Windows.Forms.DataVisualization.Charting.DataPoint> object to the <xref:System.Windows.Forms.DataVisualization.Charting.DataPointCollection>; the data point is always added to the end of the collection.</span></span>  
  
 <span data-ttu-id="da8e7-135">Utilice la definición del método que permite una matriz de valores Y si los puntos de datos requieren más de un valor Y.</span><span class="sxs-lookup"><span data-stu-id="da8e7-135">Use the method definition that allows for an array of Y-values if your data points require more than one Y-value.</span></span>  
  
 <span data-ttu-id="da8e7-136">Si los puntos de datos necesitan un valor de X: es decir, si va a crear gráficos de dispersión - usar uno de los `AddXY` métodos en su lugar.</span><span class="sxs-lookup"><span data-stu-id="da8e7-136">If your data points need an X-value - that is, if you are creating scatter plots - use one of the `AddXY` methods instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddY">
      <MemberSignature Language="C#" Value="public int AddY (params object[] yValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 AddY(object[] yValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataPointCollection.AddY(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function AddY (ParamArray yValue As Object()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int AddY(... cli::array &lt;System::Object ^&gt; ^ yValue);" />
      <MemberSignature Language="F#" Value="member this.AddY : obj[] -&gt; int" Usage="dataPointCollection.AddY yValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="yValue" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="yValue"><span data-ttu-id="da8e7-137">Una lista separada por comas de los valores Y del objeto <see cref="T:System.Windows.Forms.DataVisualization.Charting.DataPoint" /> agregado a la colección.</span><span class="sxs-lookup"><span data-stu-id="da8e7-137">A comma-separated list of Y-value(s) of the <see cref="T:System.Windows.Forms.DataVisualization.Charting.DataPoint" /> object added to the collection.</span></span></param>
        <summary><span data-ttu-id="da8e7-138">Agrega un objeto <see cref="T:System.Windows.Forms.DataVisualization.Charting.DataPoint" /> al final de la colección, con los valores Y especificados.</span><span class="sxs-lookup"><span data-stu-id="da8e7-138">Adds a <see cref="T:System.Windows.Forms.DataVisualization.Charting.DataPoint" /> object to the end of the collection, with the specified Y-value(s).</span></span></summary>
        <returns><span data-ttu-id="da8e7-139">Valor <see langword="integer" /> que representa la ubicación en el índice de base cero donde se insertó el elemento en la colección.</span><span class="sxs-lookup"><span data-stu-id="da8e7-139">An <see langword="integer" /> that represents the location in zero-based index where the item was inserted into the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da8e7-140">Este método agrega una <xref:System.Windows.Forms.DataVisualization.Charting.DataPoint> de objeto para el <xref:System.Windows.Forms.DataVisualization.Charting.DataPointCollection>; el punto de datos siempre se agrega al final de la colección.</span><span class="sxs-lookup"><span data-stu-id="da8e7-140">This method adds one <xref:System.Windows.Forms.DataVisualization.Charting.DataPoint> object to the <xref:System.Windows.Forms.DataVisualization.Charting.DataPointCollection>; the data point is always added to the end of the collection.</span></span>  
  
 <span data-ttu-id="da8e7-141">Debe proporcionar al menos uno (1) Y el valor, en caso contrario, se producirá una excepción.</span><span class="sxs-lookup"><span data-stu-id="da8e7-141">You must provide at least one (1) Y-value, otherwise an exception will be thrown.</span></span> <span data-ttu-id="da8e7-142">Este método también comprueba la <xref:System.Windows.Forms.DataVisualization.Charting.Series.ChartType%2A> propiedad de la <xref:System.Windows.Forms.DataVisualization.Charting.DataPoint> objeto estos datos pertenecen a; si hay demasiados valores Y se especifican, se producirá una excepción.</span><span class="sxs-lookup"><span data-stu-id="da8e7-142">This method also checks the <xref:System.Windows.Forms.DataVisualization.Charting.Series.ChartType%2A> property of the <xref:System.Windows.Forms.DataVisualization.Charting.DataPoint> object this data belongs to; if too many Y-values are specified, an exception will be thrown.</span></span>  
  
 <span data-ttu-id="da8e7-143">El valor X siempre establecerá en cero (0), lo que no dispersión.</span><span class="sxs-lookup"><span data-stu-id="da8e7-143">The X-value will always be set to zero (0), resulting in non-scatter plots.</span></span> <span data-ttu-id="da8e7-144">Si desea que los puntos de datos para usar un valor de X, llame a uno de los `AddXY` métodos en su lugar.</span><span class="sxs-lookup"><span data-stu-id="da8e7-144">If you want the data points to use an X-value, call one of the `AddXY` methods instead.</span></span>  
  
 <span data-ttu-id="da8e7-145">En orden para <xref:System.DateTime> formato para tener un efecto, un valor debe ser un <xref:System.DateTime> objeto.</span><span class="sxs-lookup"><span data-stu-id="da8e7-145">In order for <xref:System.DateTime> formatting to have an effect, a value must be a <xref:System.DateTime> object.</span></span>  
  
 <span data-ttu-id="da8e7-146">Consulte lo siguiente para obtener una lista completa de los tipos de .NET Framework válidos que puede usarse para los parámetros de tipo de objeto:</span><span class="sxs-lookup"><span data-stu-id="da8e7-146">Refer to the following for a complete listing of valid .NET Framework types that can be used for the object type parameters:</span></span>  
  
||||  
|-|-|-|  
|<span data-ttu-id="da8e7-147">String</span><span class="sxs-lookup"><span data-stu-id="da8e7-147">String</span></span>|<span data-ttu-id="da8e7-148">DateTime</span><span class="sxs-lookup"><span data-stu-id="da8e7-148">DateTime</span></span>|<span data-ttu-id="da8e7-149">Doble</span><span class="sxs-lookup"><span data-stu-id="da8e7-149">Double</span></span>|  
|<span data-ttu-id="da8e7-150">Decimal</span><span class="sxs-lookup"><span data-stu-id="da8e7-150">Decimal</span></span>|<span data-ttu-id="da8e7-151">Single</span><span class="sxs-lookup"><span data-stu-id="da8e7-151">Single</span></span>|<span data-ttu-id="da8e7-152">Int32</span><span class="sxs-lookup"><span data-stu-id="da8e7-152">Int32</span></span>|  
|<span data-ttu-id="da8e7-153">UInt32</span><span class="sxs-lookup"><span data-stu-id="da8e7-153">UInt32</span></span>|<span data-ttu-id="da8e7-154">Int64</span><span class="sxs-lookup"><span data-stu-id="da8e7-154">Int64</span></span>|<span data-ttu-id="da8e7-155">UInt64</span><span class="sxs-lookup"><span data-stu-id="da8e7-155">UInt64</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearItems">
      <MemberSignature Language="C#" Value="protected override void ClearItems ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ClearItems() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataPointCollection.ClearItems" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub ClearItems ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ClearItems();" />
      <MemberSignature Language="F#" Value="override this.ClearItems : unit -&gt; unit" Usage="dataPointCollection.ClearItems " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="da8e7-156">Quita todos los elementos de <see cref="T:System.Collections.ObjectModel.Collection`1" />.</span><span class="sxs-lookup"><span data-stu-id="da8e7-156">Removes all elements from the <see cref="T:System.Collections.ObjectModel.Collection`1" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataBind">
      <MemberSignature Language="C#" Value="public void DataBind (System.Collections.IEnumerable dataSource, string xField, string yFields, string otherFields);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DataBind(class System.Collections.IEnumerable dataSource, string xField, string yFields, string otherFields) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataPointCollection.DataBind(System.Collections.IEnumerable,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DataBind (dataSource As IEnumerable, xField As String, yFields As String, otherFields As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DataBind(System::Collections::IEnumerable ^ dataSource, System::String ^ xField, System::String ^ yFields, System::String ^ otherFields);" />
      <MemberSignature Language="F#" Value="member this.DataBind : System.Collections.IEnumerable * string * string * string -&gt; unit" Usage="dataPointCollection.DataBind (dataSource, xField, yFields, otherFields)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Collections.IEnumerable" />
        <Parameter Name="xField" Type="System.String" />
        <Parameter Name="yFields" Type="System.String" />
        <Parameter Name="otherFields" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataSource"><span data-ttu-id="da8e7-157">Origen de datos que se va a enlazar con valores X e Y.</span><span class="sxs-lookup"><span data-stu-id="da8e7-157">The data source to bind with X-value and Y-value(s).</span></span></param>
        <param name="xField"><span data-ttu-id="da8e7-158">Nombre del campo para los valores X.</span><span class="sxs-lookup"><span data-stu-id="da8e7-158">The name of the field for X-values.</span></span></param>
        <param name="yFields"><span data-ttu-id="da8e7-159">Nombres separados por comas de los campos para los valores Y.</span><span class="sxs-lookup"><span data-stu-id="da8e7-159">A comma separated names of the fields for Y-values.</span></span></param>
        <param name="otherFields"><span data-ttu-id="da8e7-160">Otras propiedades de punto de datos con reglas de enlace, en el formato: PointProperty=Field[{Format}] [,PointProperty=Field[{Format}]].</span><span class="sxs-lookup"><span data-stu-id="da8e7-160">Other data point properties with binding rules, in the format: PointProperty=Field[{Format}] [,PointProperty=Field[{Format}]].</span></span>  
  
<span data-ttu-id="da8e7-161">Por ejemplo: "Tooltip=Price{C1},Url=WebSiteName".</span><span class="sxs-lookup"><span data-stu-id="da8e7-161">For example: "Tooltip=Price{C1},Url=WebSiteName".</span></span></param>
        <summary><span data-ttu-id="da8e7-162">Enlaza los valores X, Y y los valores de propiedades de los puntos de datos, como Tooltip o LabelStyle, al origen de datos.</span><span class="sxs-lookup"><span data-stu-id="da8e7-162">Data binds the X-value, Y-value(s) and property values of the data points, such as Tooltip or LabelStyle, to the data source.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da8e7-163">Puede ser el origen de datos Ole (SQL) DataReader, DataView, DataSet, DataTable o DataRow.</span><span class="sxs-lookup"><span data-stu-id="da8e7-163">The data source can be the Ole(SQL)DataReader, DataView, DataSet, DataTable or DataRow.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DataBindXY">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="da8e7-164">Enlaza los valores X e Y de los puntos de datos de la colección a los datos de las columnas especificadas de los orígenes de datos indicados.</span><span class="sxs-lookup"><span data-stu-id="da8e7-164">Data binds the X-value and Y-values of the data points in the collection to the specified columns of the specified data sources.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DataBindXY">
      <MemberSignature Language="C#" Value="public void DataBindXY (System.Collections.IEnumerable xValue, params System.Collections.IEnumerable[] yValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DataBindXY(class System.Collections.IEnumerable xValue, class System.Collections.IEnumerable[] yValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataPointCollection.DataBindXY(System.Collections.IEnumerable,System.Collections.IEnumerable[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub DataBindXY (xValue As IEnumerable, ParamArray yValues As IEnumerable())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DataBindXY(System::Collections::IEnumerable ^ xValue, ... cli::array &lt;System::Collections::IEnumerable ^&gt; ^ yValues);" />
      <MemberSignature Language="F#" Value="member this.DataBindXY : System.Collections.IEnumerable * System.Collections.IEnumerable[] -&gt; unit" Usage="dataPointCollection.DataBindXY (xValue, yValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xValue" Type="System.Collections.IEnumerable" />
        <Parameter Name="yValues" Type="System.Collections.IEnumerable[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="xValue"><span data-ttu-id="da8e7-165">Origen de datos que suministrará los valores X para los puntos de datos.</span><span class="sxs-lookup"><span data-stu-id="da8e7-165">The data source that will supply the X-values for the data points.</span></span></param>
        <param name="yValues"><span data-ttu-id="da8e7-166">Una lista separada por comas de los valores Y del objeto <see cref="T:System.Windows.Forms.DataVisualization.Charting.DataPoint" /> agregado a la colección.</span><span class="sxs-lookup"><span data-stu-id="da8e7-166">A comma-separated list of the Y-value(s) of the <see cref="T:System.Windows.Forms.DataVisualization.Charting.DataPoint" /> object added to the collection.</span></span></param>
        <summary><span data-ttu-id="da8e7-167">Enlaza los valores X e Y de los puntos de datos de la colección a los datos de las primeras columnas del origen de datos especificado.</span><span class="sxs-lookup"><span data-stu-id="da8e7-167">Data binds the X-value and Y-values of the collection's data points to the first columns of the specified data source.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da8e7-168">Este método enlaza todos <xref:System.Windows.Forms.DataVisualization.Charting.DataPoint> objetos en un <xref:System.Windows.Forms.DataVisualization.Charting.Series>, y usa los orígenes de datos independientes para X e Y-especificados.</span><span class="sxs-lookup"><span data-stu-id="da8e7-168">This method binds all <xref:System.Windows.Forms.DataVisualization.Charting.DataPoint> objects in a <xref:System.Windows.Forms.DataVisualization.Charting.Series>, and uses separate data sources for the X and Y-value(s).</span></span>  
  
 <span data-ttu-id="da8e7-169">Tenga en cuenta que se utilizará la primera columna disponible en el origen de datos si el enlace de datos a una tabla.</span><span class="sxs-lookup"><span data-stu-id="da8e7-169">Note that the first available column in the data source will be used if data-binding to a table.</span></span> <span data-ttu-id="da8e7-170">Para enlazar a una columna distinta de la primera columna, use la <xref:System.Windows.Forms.DataVisualization.Charting.DataPointCollection.DataBindXY%2A> método.</span><span class="sxs-lookup"><span data-stu-id="da8e7-170">To bind to a column other than the first column, use the <xref:System.Windows.Forms.DataVisualization.Charting.DataPointCollection.DataBindXY%2A> method.</span></span>  
  
 <span data-ttu-id="da8e7-171">Puede enlazar a varios valores Y proporcionando una lista separada por comas de <xref:System.Collections.Generic.IEnumerable%601> de objetos para el `yValues` parámetro.</span><span class="sxs-lookup"><span data-stu-id="da8e7-171">You can bind to multiple Y-values by providing a comma-separated list of <xref:System.Collections.Generic.IEnumerable%601> objects for the `yValues` parameter.</span></span>  
  
 <span data-ttu-id="da8e7-172">Si no se proporcionan los valores Y por el origen de datos, o si se proporciona un número incorrecto de valores, se producirá una excepción.</span><span class="sxs-lookup"><span data-stu-id="da8e7-172">If Y-values are not provided by the data source, or if the wrong number of values are provided, an exception will be thrown.</span></span>  
  
 <span data-ttu-id="da8e7-173">Si no desea mostrar gráficos de dispersión-type, en el que se usan los valores X e Y, utilice uno de los `DataBindY` métodos en su lugar.</span><span class="sxs-lookup"><span data-stu-id="da8e7-173">If you do not want to display scatter-type plots, in which both X and Y-values are used, use one of the `DataBindY` methods instead.</span></span>  
  
 <span data-ttu-id="da8e7-174">La siguiente es una lista de objetos que puede usar como parámetro de origen de datos:</span><span class="sxs-lookup"><span data-stu-id="da8e7-174">The following is a list of objects that you can use as the data source parameter:</span></span>  
  
-   <span data-ttu-id="da8e7-175">DataView</span><span class="sxs-lookup"><span data-stu-id="da8e7-175">DataView</span></span>  
  
-   <span data-ttu-id="da8e7-176">Lectores de datos (SQL, OleDB)</span><span class="sxs-lookup"><span data-stu-id="da8e7-176">Data readers (SQL, OleDB)</span></span>  
  
-   <span data-ttu-id="da8e7-177">Matrices</span><span class="sxs-lookup"><span data-stu-id="da8e7-177">Arrays</span></span>  
  
-   <span data-ttu-id="da8e7-178">Listas</span><span class="sxs-lookup"><span data-stu-id="da8e7-178">Lists</span></span>  
  
-   <span data-ttu-id="da8e7-179">Todos los objetos que utilizan el <xref:System.Collections.Generic.IEnumerable%601> interfaz.</span><span class="sxs-lookup"><span data-stu-id="da8e7-179">All other objects that use the <xref:System.Collections.Generic.IEnumerable%601> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataBindXY">
      <MemberSignature Language="C#" Value="public void DataBindXY (System.Collections.IEnumerable xValue, string xField, System.Collections.IEnumerable yValue, string yFields);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DataBindXY(class System.Collections.IEnumerable xValue, string xField, class System.Collections.IEnumerable yValue, string yFields) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataPointCollection.DataBindXY(System.Collections.IEnumerable,System.String,System.Collections.IEnumerable,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DataBindXY (xValue As IEnumerable, xField As String, yValue As IEnumerable, yFields As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DataBindXY(System::Collections::IEnumerable ^ xValue, System::String ^ xField, System::Collections::IEnumerable ^ yValue, System::String ^ yFields);" />
      <MemberSignature Language="F#" Value="member this.DataBindXY : System.Collections.IEnumerable * string * System.Collections.IEnumerable * string -&gt; unit" Usage="dataPointCollection.DataBindXY (xValue, xField, yValue, yFields)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xValue" Type="System.Collections.IEnumerable" />
        <Parameter Name="xField" Type="System.String" />
        <Parameter Name="yValue" Type="System.Collections.IEnumerable" />
        <Parameter Name="yFields" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xValue"><span data-ttu-id="da8e7-180">Origen de datos que suministrará los valores X para los puntos de datos.</span><span class="sxs-lookup"><span data-stu-id="da8e7-180">The data source that will supply the X-values for the data points.</span></span></param>
        <param name="xField"><span data-ttu-id="da8e7-181">Nombre de la columna que suministrará los valores X para los puntos de datos.</span><span class="sxs-lookup"><span data-stu-id="da8e7-181">The name of the column that will supply the X-values for the data points.</span></span></param>
        <param name="yValue"><span data-ttu-id="da8e7-182">Una lista separada por comas de los valores Y del objeto <see cref="T:System.Windows.Forms.DataVisualization.Charting.DataPoint" /> agregado a la colección.</span><span class="sxs-lookup"><span data-stu-id="da8e7-182">A comma-separated list of the Y-value(s) of the <see cref="T:System.Windows.Forms.DataVisualization.Charting.DataPoint" /> object added to the collection.</span></span></param>
        <param name="yFields"><span data-ttu-id="da8e7-183">Lista separada por comas de los nombres de columna que suministrarán los valores Y para los puntos de datos.</span><span class="sxs-lookup"><span data-stu-id="da8e7-183">A comma-separated list of column name(s) that will supply the Y-values for the data points.</span></span> <span data-ttu-id="da8e7-184">Tenga en cuenta que se puede incrustar una coma como parte de un nombre de columna si se usa doble coma.</span><span class="sxs-lookup"><span data-stu-id="da8e7-184">Note that a comma can be embedded as part of a column name, by using a double comma.</span></span></param>
        <summary><span data-ttu-id="da8e7-185">Enlaza los valores X e Y de los puntos de datos de la colección a los datos de las columnas especificadas de los orígenes de datos indicados.</span><span class="sxs-lookup"><span data-stu-id="da8e7-185">Data binds the X-value and Y-values of the data points in the collection to the specified columns of the specified data sources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da8e7-186">Enlaza el valor X y los valores Y de los puntos de datos de la colección en las primeras columnas del origen de datos especificado.</span><span class="sxs-lookup"><span data-stu-id="da8e7-186">Data binds the X-value and Y-values of the data points in the collection to the specified data source's first columns.</span></span>  
  
 <span data-ttu-id="da8e7-187">Puede enlazar a varios valores Y estableciendo el `yFields` parámetro de varios nombres de columna.</span><span class="sxs-lookup"><span data-stu-id="da8e7-187">You can bind to several Y-values by setting the `yFields` parameter to multiple column names.</span></span> <span data-ttu-id="da8e7-188">Separe los nombres de columna con comas.</span><span class="sxs-lookup"><span data-stu-id="da8e7-188">Separate the column names with commas.</span></span>  
  
 <span data-ttu-id="da8e7-189">Si no se proporcionan los valores Y por el origen de datos, o si se proporciona un número incorrecto de valores, se producirá una excepción.</span><span class="sxs-lookup"><span data-stu-id="da8e7-189">If Y-values are not provided by the data source, or if the wrong number of values are provided, an exception will be thrown.</span></span>  
  
 <span data-ttu-id="da8e7-190">Si no desea mostrar gráficos de dispersión-type, en el que se usan los valores X e Y, utilice uno de los `DataBindY` métodos en su lugar.</span><span class="sxs-lookup"><span data-stu-id="da8e7-190">If you do not want to display scatter-type plots, in which both X and Y-values are used, use one of the `DataBindY` methods instead.</span></span>  
  
 <span data-ttu-id="da8e7-191">La siguiente es una lista de objetos que puede usar como parámetro de origen de datos:</span><span class="sxs-lookup"><span data-stu-id="da8e7-191">The following is a list of objects that you can use as the data source parameter:</span></span>  
  
-   <span data-ttu-id="da8e7-192">DataView</span><span class="sxs-lookup"><span data-stu-id="da8e7-192">DataView</span></span>  
  
-   <span data-ttu-id="da8e7-193">Lectores de datos (SQL, OleDB)</span><span class="sxs-lookup"><span data-stu-id="da8e7-193">Data readers (SQL, OleDB)</span></span>  
  
-   <span data-ttu-id="da8e7-194">Matrices</span><span class="sxs-lookup"><span data-stu-id="da8e7-194">Arrays</span></span>  
  
-   <span data-ttu-id="da8e7-195">Listas</span><span class="sxs-lookup"><span data-stu-id="da8e7-195">Lists</span></span>  
  
-   <span data-ttu-id="da8e7-196">Todos los objetos que utilizan el <xref:System.Collections.Generic.IEnumerable%601> interfaz.</span><span class="sxs-lookup"><span data-stu-id="da8e7-196">All other objects that use the <xref:System.Collections.Generic.IEnumerable%601> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DataBindY">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="da8e7-197">Enlaza los valores Y de los puntos de datos a los datos de las columnas especificadas del origen de datos indicado.</span><span class="sxs-lookup"><span data-stu-id="da8e7-197">Data binds the Y-value(s) of the data points to the specified column(s) of the specified data source.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DataBindY">
      <MemberSignature Language="C#" Value="public void DataBindY (params System.Collections.IEnumerable[] yValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DataBindY(class System.Collections.IEnumerable[] yValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataPointCollection.DataBindY(System.Collections.IEnumerable[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub DataBindY (ParamArray yValue As IEnumerable())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DataBindY(... cli::array &lt;System::Collections::IEnumerable ^&gt; ^ yValue);" />
      <MemberSignature Language="F#" Value="member this.DataBindY : System.Collections.IEnumerable[] -&gt; unit" Usage="dataPointCollection.DataBindY yValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="yValue" Type="System.Collections.IEnumerable[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="yValue"><span data-ttu-id="da8e7-198">Uno o más orígenes de datos <see cref="T:System.Collections.Generic.IEnumerable`1" /> separados por comas.</span><span class="sxs-lookup"><span data-stu-id="da8e7-198">One or more comma-separated <see cref="T:System.Collections.Generic.IEnumerable`1" /> data sources.</span></span></param>
        <summary><span data-ttu-id="da8e7-199">Enlaza los valores Y de los puntos de datos de la colección a los datos de la primera columna de los orígenes de datos especificados.</span><span class="sxs-lookup"><span data-stu-id="da8e7-199">Data binds the Y-value(s) of the collection's data points to the first column of the specified data source(s).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da8e7-200">Este método enlaza la Y-los valores de los puntos de datos de la colección en la primera columna de los orígenes de datos especificado.</span><span class="sxs-lookup"><span data-stu-id="da8e7-200">This method binds the Y-value(s) of the data points in the collection to the first column of the specified data source(s).</span></span>  
  
 <span data-ttu-id="da8e7-201">Para enlazar los valores Y a una columna de origen de datos que no sea la primera columna disponible, use la <xref:System.Windows.Forms.DataVisualization.Charting.DataPointCollection.DataBindY%2A> método.</span><span class="sxs-lookup"><span data-stu-id="da8e7-201">To bind Y-values to a data source column that is not the first available column, use the <xref:System.Windows.Forms.DataVisualization.Charting.DataPointCollection.DataBindY%2A> method.</span></span>  
  
 <span data-ttu-id="da8e7-202">Puede enlazar varios valores Y mediante la especificación de varios orígenes de datos mediante el `yValue` parámetro.</span><span class="sxs-lookup"><span data-stu-id="da8e7-202">You can bind several Y-values by specifying multiple data sources, using the `yValue` parameter.</span></span> <span data-ttu-id="da8e7-203">Tenga en cuenta que se usará la primera columna disponible en cada origen de datos para Y a valores sucesivos cada punto de datos.</span><span class="sxs-lookup"><span data-stu-id="da8e7-203">Note that the first available column in each data source will be used for each data point's successive Y-values.</span></span> <span data-ttu-id="da8e7-204">Por ejemplo, la primera columna de la primera <xref:System.Collections.Generic.IEnumerable%601> origen de datos se enlazará al primer valor Y de puntos de datos, la primera columna de la segunda <xref:System.Collections.Generic.IEnumerable%601> enlazarse al segundo valor Y de puntos de datos de origen de datos y así sucesivamente.</span><span class="sxs-lookup"><span data-stu-id="da8e7-204">For example, the first column of the first <xref:System.Collections.Generic.IEnumerable%601> data source will be bound to the first Y-value of data points, the first column of the second <xref:System.Collections.Generic.IEnumerable%601> data source will be bound to the second Y-value of data points, and so forth.</span></span>  
  
 <span data-ttu-id="da8e7-205">Si no se proporcionan los valores Y por el origen de datos, o si se proporciona un número incorrecto de valores, se producirá una excepción.</span><span class="sxs-lookup"><span data-stu-id="da8e7-205">If Y-values are not provided by the data source, or if the wrong number of values are provided, an exception will be thrown.</span></span>  
  
 <span data-ttu-id="da8e7-206">La siguiente es una lista de objetos que puede usar como parámetro de origen de datos:</span><span class="sxs-lookup"><span data-stu-id="da8e7-206">The following is a list of objects that you can use as the data source parameter:</span></span>  
  
 <span data-ttu-id="da8e7-207">La siguiente es una lista de objetos que puede usar como origen de datos:</span><span class="sxs-lookup"><span data-stu-id="da8e7-207">The following is a list of objects that you can use as the data source:</span></span>  
  
-   <span data-ttu-id="da8e7-208">DataView</span><span class="sxs-lookup"><span data-stu-id="da8e7-208">DataView</span></span>  
  
-   <span data-ttu-id="da8e7-209">Lectores de datos (SQL, OleDB)</span><span class="sxs-lookup"><span data-stu-id="da8e7-209">Data readers (SQL, OleDB)</span></span>  
  
-   <span data-ttu-id="da8e7-210">Matrices</span><span class="sxs-lookup"><span data-stu-id="da8e7-210">Arrays</span></span>  
  
-   <span data-ttu-id="da8e7-211">Listas</span><span class="sxs-lookup"><span data-stu-id="da8e7-211">Lists</span></span>  
  
-   <span data-ttu-id="da8e7-212">Todos los objetos que utilizan el <xref:System.Collections.Generic.IEnumerable%601> interfaz.</span><span class="sxs-lookup"><span data-stu-id="da8e7-212">All other objects that use the <xref:System.Collections.Generic.IEnumerable%601> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataBindY">
      <MemberSignature Language="C#" Value="public void DataBindY (System.Collections.IEnumerable yValue, string yFields);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DataBindY(class System.Collections.IEnumerable yValue, string yFields) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataPointCollection.DataBindY(System.Collections.IEnumerable,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DataBindY (yValue As IEnumerable, yFields As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DataBindY(System::Collections::IEnumerable ^ yValue, System::String ^ yFields);" />
      <MemberSignature Language="F#" Value="member this.DataBindY : System.Collections.IEnumerable * string -&gt; unit" Usage="dataPointCollection.DataBindY (yValue, yFields)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="yValue" Type="System.Collections.IEnumerable" />
        <Parameter Name="yFields" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="yValue"><span data-ttu-id="da8e7-213">Un objeto de origen de datos <see cref="T:System.Collections.Generic.IEnumerable`1" /> que proporciona los valores Y.</span><span class="sxs-lookup"><span data-stu-id="da8e7-213">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> data source object that provides the Y-value(s).</span></span></param>
        <param name="yFields"><span data-ttu-id="da8e7-214">Campos de origen de datos a los que se van a enlazar puntos de datos.</span><span class="sxs-lookup"><span data-stu-id="da8e7-214">The data source field(s) to which to bind data point(s).</span></span> <span data-ttu-id="da8e7-215">Tenga en cuenta que se puede incrustar una coma como parte de un nombre de columna si se usa doble coma.</span><span class="sxs-lookup"><span data-stu-id="da8e7-215">Note that a comma can be embedded as part of a column name, by using a double comma.</span></span></param>
        <summary><span data-ttu-id="da8e7-216">Enlaza los valores Y de los puntos de datos a los datos de las columnas especificadas del origen de datos indicado.</span><span class="sxs-lookup"><span data-stu-id="da8e7-216">Data binds the Y-value(s) of the data points to the specified column(s) of the specified data source.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da8e7-217">Este método enlaza los valores Y los puntos de datos de la colección a los campos especificados (s) del origen de datos.</span><span class="sxs-lookup"><span data-stu-id="da8e7-217">This method binds the Y-values of the data points in the collection to the specified fields(s) of the data source.</span></span>  
  
 <span data-ttu-id="da8e7-218">Para enlazar sólo en el primer campo de un origen de datos, use el <xref:System.Windows.Forms.DataVisualization.Charting.DataPointCollection.DataBindY%2A> método.</span><span class="sxs-lookup"><span data-stu-id="da8e7-218">To bind only to the first field in a data source, use the <xref:System.Windows.Forms.DataVisualization.Charting.DataPointCollection.DataBindY%2A> method.</span></span>  
  
 <span data-ttu-id="da8e7-219">Puede enlazar a varios campos estableciendo el `yFields` parámetro de varios nombres de campo que están separados por comas.</span><span class="sxs-lookup"><span data-stu-id="da8e7-219">You can bind to several fields by setting the `yFields` parameter to multiple field names that are comma-separated.</span></span> <span data-ttu-id="da8e7-220">Tenga en cuenta que se usará para el primer valor punto de datos del Y el primer campo, se usará para el segundo valor punto de datos del Y el segundo campo con nombre y así sucesivamente.</span><span class="sxs-lookup"><span data-stu-id="da8e7-220">Note that the first field will be used for the data point's first Y-value, the second named field will be used for the data point's second Y-value, and so forth.</span></span>  
  
 <span data-ttu-id="da8e7-221">Si no se proporcionan los valores Y por el origen de datos o un número incorrecto de valores se proporciona, se producirá una excepción.</span><span class="sxs-lookup"><span data-stu-id="da8e7-221">If Y-values are not provided by the data source, or the wrong number of values are provided, an exception will be thrown.</span></span>  
  
 <span data-ttu-id="da8e7-222">La siguiente es una lista de objetos que puede usar como origen de datos:</span><span class="sxs-lookup"><span data-stu-id="da8e7-222">The following is a list of objects that you can use as the data source:</span></span>  
  
-   <span data-ttu-id="da8e7-223">DataView</span><span class="sxs-lookup"><span data-stu-id="da8e7-223">DataView</span></span>  
  
-   <span data-ttu-id="da8e7-224">Lectores de datos (SQL, OleDB)</span><span class="sxs-lookup"><span data-stu-id="da8e7-224">Data readers (SQL, OleDB)</span></span>  
  
-   <span data-ttu-id="da8e7-225">Matrices</span><span class="sxs-lookup"><span data-stu-id="da8e7-225">Arrays</span></span>  
  
-   <span data-ttu-id="da8e7-226">Listas</span><span class="sxs-lookup"><span data-stu-id="da8e7-226">Lists</span></span>  
  
-   <span data-ttu-id="da8e7-227">Todos los objetos que utilizan el <xref:System.Collections.Generic.IEnumerable%601> interfaz.</span><span class="sxs-lookup"><span data-stu-id="da8e7-227">All other objects that use the <xref:System.Collections.Generic.IEnumerable%601> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FindAllByValue">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="da8e7-228">Busca todos los puntos de datos que son iguales al valor especificado.</span><span class="sxs-lookup"><span data-stu-id="da8e7-228">Finds all the data points that are equal to the specified value.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindAllByValue">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Windows.Forms.DataVisualization.Charting.DataPoint&gt; FindAllByValue (double valueToFind);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Forms.DataVisualization.Charting.DataPoint&gt; FindAllByValue(float64 valueToFind) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataPointCollection.FindAllByValue(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindAllByValue (valueToFind As Double) As IEnumerable(Of DataPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::Windows::Forms::DataVisualization::Charting::DataPoint ^&gt; ^ FindAllByValue(double valueToFind);" />
      <MemberSignature Language="F#" Value="member this.FindAllByValue : double -&gt; seq&lt;System.Windows.Forms.DataVisualization.Charting.DataPoint&gt;" Usage="dataPointCollection.FindAllByValue valueToFind" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Windows.Forms.DataVisualization.Charting.DataPoint&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="valueToFind" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="valueToFind"><span data-ttu-id="da8e7-229">Valor de punto de datos que se va a buscar.</span><span class="sxs-lookup"><span data-stu-id="da8e7-229">The data point value to find.</span></span></param>
        <summary><span data-ttu-id="da8e7-230">Busca todos los puntos de datos que son iguales al valor especificado.</span><span class="sxs-lookup"><span data-stu-id="da8e7-230">Finds all the data points that are equal to the specified value.</span></span></summary>
        <returns><span data-ttu-id="da8e7-231">Interfaz <see cref="T:System.Collections.Generic.IEnumerable`1" /> que representa el enumerador de los puntos de datos coincidentes.</span><span class="sxs-lookup"><span data-stu-id="da8e7-231">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> interface that represents the enumerator of the matching data points.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindAllByValue">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Windows.Forms.DataVisualization.Charting.DataPoint&gt; FindAllByValue (double valueToFind, string useValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Forms.DataVisualization.Charting.DataPoint&gt; FindAllByValue(float64 valueToFind, string useValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataPointCollection.FindAllByValue(System.Double,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Iterator Function FindAllByValue (valueToFind As Double, useValue As String) As IEnumerable(Of DataPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::Windows::Forms::DataVisualization::Charting::DataPoint ^&gt; ^ FindAllByValue(double valueToFind, System::String ^ useValue);" />
      <MemberSignature Language="F#" Value="member this.FindAllByValue : double * string -&gt; seq&lt;System.Windows.Forms.DataVisualization.Charting.DataPoint&gt;" Usage="dataPointCollection.FindAllByValue (valueToFind, useValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Windows.Forms.DataVisualization.Charting.DataPointCollection/&lt;FindAllByValue&gt;d__23))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.6">
          <AttributeName>System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Windows.Forms.DataVisualization.Charting.DataPointCollection/&lt;FindAllByValue&gt;d__2))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Windows.Forms.DataVisualization.Charting.DataPoint&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="valueToFind" Type="System.Double" />
        <Parameter Name="useValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="valueToFind"><span data-ttu-id="da8e7-232">Valor de punto de datos que se va a buscar.</span><span class="sxs-lookup"><span data-stu-id="da8e7-232">The data point value to find.</span></span></param>
        <param name="useValue"><span data-ttu-id="da8e7-233">Valor de punto de datos que se va a usar (X, Y1, Y2...).</span><span class="sxs-lookup"><span data-stu-id="da8e7-233">The data point value to use (X, Y1, Y2...).</span></span></param>
        <summary><span data-ttu-id="da8e7-234">Busca todos los puntos de datos que son iguales al valor especificado.</span><span class="sxs-lookup"><span data-stu-id="da8e7-234">Finds all the data points that are equal to the specified value.</span></span></summary>
        <returns><span data-ttu-id="da8e7-235">Interfaz <see cref="T:System.Collections.Generic.IEnumerable`1" /> que representa el enumerador de los puntos de datos coincidentes.</span><span class="sxs-lookup"><span data-stu-id="da8e7-235">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> interface that represents the enumerator of the matching data points.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindAllByValue">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Windows.Forms.DataVisualization.Charting.DataPoint&gt; FindAllByValue (double valueToFind, string useValue, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Forms.DataVisualization.Charting.DataPoint&gt; FindAllByValue(float64 valueToFind, string useValue, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataPointCollection.FindAllByValue(System.Double,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Iterator Function FindAllByValue (valueToFind As Double, useValue As String, startIndex As Integer) As IEnumerable(Of DataPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::Windows::Forms::DataVisualization::Charting::DataPoint ^&gt; ^ FindAllByValue(double valueToFind, System::String ^ useValue, int startIndex);" />
      <MemberSignature Language="F#" Value="member this.FindAllByValue : double * string * int -&gt; seq&lt;System.Windows.Forms.DataVisualization.Charting.DataPoint&gt;" Usage="dataPointCollection.FindAllByValue (valueToFind, useValue, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Windows.Forms.DataVisualization.Charting.DataPointCollection/&lt;FindAllByValue&gt;d__22))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.6">
          <AttributeName>System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Windows.Forms.DataVisualization.Charting.DataPointCollection/&lt;FindAllByValue&gt;d__1))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Windows.Forms.DataVisualization.Charting.DataPoint&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="valueToFind" Type="System.Double" />
        <Parameter Name="useValue" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="valueToFind"><span data-ttu-id="da8e7-236">Valor de punto de datos que se va a buscar.</span><span class="sxs-lookup"><span data-stu-id="da8e7-236">The data point value to find.</span></span></param>
        <param name="useValue"><span data-ttu-id="da8e7-237">Valor de punto de datos que se va a usar (X, Y1, Y2...).</span><span class="sxs-lookup"><span data-stu-id="da8e7-237">The data point value to use (X, Y1, Y2...).</span></span></param>
        <param name="startIndex"><span data-ttu-id="da8e7-238">Ubicación de índice del punto de datos a partir del que se va a iniciar la búsqueda.</span><span class="sxs-lookup"><span data-stu-id="da8e7-238">The index location of the data point to start searching from.</span></span></param>
        <summary><span data-ttu-id="da8e7-239">Busca todos los puntos de datos que son iguales que el valor especificado, empezando en la ubicación de índice especificada.</span><span class="sxs-lookup"><span data-stu-id="da8e7-239">Finds all the data points that are equal to the specified value, starting from the specified index location.</span></span></summary>
        <returns><span data-ttu-id="da8e7-240">Interfaz <see cref="T:System.Collections.Generic.IEnumerable`1" /> que representa el enumerador de los puntos de datos coincidentes.</span><span class="sxs-lookup"><span data-stu-id="da8e7-240">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> interface that represents the enumerator of the matching data points.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FindByValue">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="da8e7-241">Busca el primer punto de datos que es igual al valor especificado.</span><span class="sxs-lookup"><span data-stu-id="da8e7-241">Finds the first data point that is equal to the specified value.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindByValue">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.DataPoint FindByValue (double valueToFind);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.DataVisualization.Charting.DataPoint FindByValue(float64 valueToFind) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataPointCollection.FindByValue(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindByValue (valueToFind As Double) As DataPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::DataVisualization::Charting::DataPoint ^ FindByValue(double valueToFind);" />
      <MemberSignature Language="F#" Value="member this.FindByValue : double -&gt; System.Windows.Forms.DataVisualization.Charting.DataPoint" Usage="dataPointCollection.FindByValue valueToFind" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.DataPoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="valueToFind" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="valueToFind"><span data-ttu-id="da8e7-242">Valor de punto de datos que se va a buscar.</span><span class="sxs-lookup"><span data-stu-id="da8e7-242">The data point value to find.</span></span></param>
        <summary><span data-ttu-id="da8e7-243">Busca el primer punto de datos que es igual al valor especificado.</span><span class="sxs-lookup"><span data-stu-id="da8e7-243">Finds the first data point that is equal to the specified value.</span></span></summary>
        <returns><span data-ttu-id="da8e7-244">Objeto <see cref="T:System.Windows.Forms.DataVisualization.Charting.DataPoint" /> que coincide con el valor especificado, o <see langword="null" /> si no hay coincidencias.</span><span class="sxs-lookup"><span data-stu-id="da8e7-244">The <see cref="T:System.Windows.Forms.DataVisualization.Charting.DataPoint" /> that matches the specified value, or <see langword="null" /> if there is no match.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindByValue">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.DataPoint FindByValue (double valueToFind, string useValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.DataVisualization.Charting.DataPoint FindByValue(float64 valueToFind, string useValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataPointCollection.FindByValue(System.Double,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindByValue (valueToFind As Double, useValue As String) As DataPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::DataVisualization::Charting::DataPoint ^ FindByValue(double valueToFind, System::String ^ useValue);" />
      <MemberSignature Language="F#" Value="member this.FindByValue : double * string -&gt; System.Windows.Forms.DataVisualization.Charting.DataPoint" Usage="dataPointCollection.FindByValue (valueToFind, useValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.DataPoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="valueToFind" Type="System.Double" />
        <Parameter Name="useValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="valueToFind"><span data-ttu-id="da8e7-245">Valor de punto de datos que se va a buscar.</span><span class="sxs-lookup"><span data-stu-id="da8e7-245">The data point value to find.</span></span></param>
        <param name="useValue"><span data-ttu-id="da8e7-246">Valor de punto de datos que se va a usar (X, Y1, Y2...).</span><span class="sxs-lookup"><span data-stu-id="da8e7-246">The data point value to use (X, Y1, Y2...).</span></span></param>
        <summary><span data-ttu-id="da8e7-247">Busca el primer punto de datos que es igual al valor especificado.</span><span class="sxs-lookup"><span data-stu-id="da8e7-247">Finds the first data point that is equal to the specified value.</span></span></summary>
        <returns><span data-ttu-id="da8e7-248">Objeto <see cref="T:System.Windows.Forms.DataVisualization.Charting.DataPoint" /> que coincide con el valor especificado, o <see langword="null" /> si no hay coincidencias.</span><span class="sxs-lookup"><span data-stu-id="da8e7-248">The <see cref="T:System.Windows.Forms.DataVisualization.Charting.DataPoint" /> that matches the specified value, or <see langword="null" /> if there is no match.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindByValue">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.DataPoint FindByValue (double valueToFind, string useValue, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.DataVisualization.Charting.DataPoint FindByValue(float64 valueToFind, string useValue, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataPointCollection.FindByValue(System.Double,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindByValue (valueToFind As Double, useValue As String, startIndex As Integer) As DataPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::DataVisualization::Charting::DataPoint ^ FindByValue(double valueToFind, System::String ^ useValue, int startIndex);" />
      <MemberSignature Language="F#" Value="member this.FindByValue : double * string * int -&gt; System.Windows.Forms.DataVisualization.Charting.DataPoint" Usage="dataPointCollection.FindByValue (valueToFind, useValue, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.DataPoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="valueToFind" Type="System.Double" />
        <Parameter Name="useValue" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="valueToFind"><span data-ttu-id="da8e7-249">Valor de punto de datos que se va a buscar.</span><span class="sxs-lookup"><span data-stu-id="da8e7-249">The data point value to find.</span></span></param>
        <param name="useValue"><span data-ttu-id="da8e7-250">Valor de punto de datos que se va a usar (X, Y1, Y2...).</span><span class="sxs-lookup"><span data-stu-id="da8e7-250">The data point value to use (X, Y1, Y2...).</span></span></param>
        <param name="startIndex"><span data-ttu-id="da8e7-251">Ubicación de índice del punto de datos a partir del que se va a iniciar la búsqueda.</span><span class="sxs-lookup"><span data-stu-id="da8e7-251">The index location of the data point to start searching from.</span></span></param>
        <summary><span data-ttu-id="da8e7-252">Busca el primer punto de datos que es igual que el valor especificado, empezando en la ubicación de índice especificada.</span><span class="sxs-lookup"><span data-stu-id="da8e7-252">Finds the first data point that is equal to the specified value, starting from the specified index location.</span></span></summary>
        <returns><span data-ttu-id="da8e7-253">Objeto <see cref="T:System.Windows.Forms.DataVisualization.Charting.DataPoint" /> que coincide con el valor especificado, o <see langword="null" /> si no hay coincidencias.</span><span class="sxs-lookup"><span data-stu-id="da8e7-253">The <see cref="T:System.Windows.Forms.DataVisualization.Charting.DataPoint" /> that matches the specified value, or <see langword="null" /> if there is no match.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FindMaxByValue">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="da8e7-254">Busca el punto de datos que tiene el valor máximo.</span><span class="sxs-lookup"><span data-stu-id="da8e7-254">Finds  the data point with the maximum value.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindMaxByValue">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.DataPoint FindMaxByValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.DataVisualization.Charting.DataPoint FindMaxByValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataPointCollection.FindMaxByValue" />
      <MemberSignature Language="VB.NET" Value="Public Function FindMaxByValue () As DataPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::DataVisualization::Charting::DataPoint ^ FindMaxByValue();" />
      <MemberSignature Language="F#" Value="member this.FindMaxByValue : unit -&gt; System.Windows.Forms.DataVisualization.Charting.DataPoint" Usage="dataPointCollection.FindMaxByValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.DataPoint</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="da8e7-255">Busca el punto de datos que tiene el valor máximo.</span><span class="sxs-lookup"><span data-stu-id="da8e7-255">Finds  the data point with the maximum value.</span></span></summary>
        <returns><span data-ttu-id="da8e7-256">Objeto <see cref="T:System.Windows.Forms.DataVisualization.Charting.DataPoint" /> que tiene el valor máximo.</span><span class="sxs-lookup"><span data-stu-id="da8e7-256">The <see cref="T:System.Windows.Forms.DataVisualization.Charting.DataPoint" /> object with the maximum value.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindMaxByValue">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.DataPoint FindMaxByValue (string useValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.DataVisualization.Charting.DataPoint FindMaxByValue(string useValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataPointCollection.FindMaxByValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindMaxByValue (useValue As String) As DataPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::DataVisualization::Charting::DataPoint ^ FindMaxByValue(System::String ^ useValue);" />
      <MemberSignature Language="F#" Value="member this.FindMaxByValue : string -&gt; System.Windows.Forms.DataVisualization.Charting.DataPoint" Usage="dataPointCollection.FindMaxByValue useValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.DataPoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="useValue"><span data-ttu-id="da8e7-257">Valor de punto de datos que se va a usar (X, Y1, Y2...).</span><span class="sxs-lookup"><span data-stu-id="da8e7-257">The data point value to use (X, Y1, Y2...).</span></span></param>
        <summary><span data-ttu-id="da8e7-258">Busca el valor de punto de datos que tiene el valor máximo.</span><span class="sxs-lookup"><span data-stu-id="da8e7-258">Finds the data point value with the maximum value.</span></span></summary>
        <returns><span data-ttu-id="da8e7-259">Objeto <see cref="T:System.Windows.Forms.DataVisualization.Charting.DataPoint" /> que tiene el valor máximo.</span><span class="sxs-lookup"><span data-stu-id="da8e7-259">The <see cref="T:System.Windows.Forms.DataVisualization.Charting.DataPoint" /> object with the maximum value.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindMaxByValue">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.DataPoint FindMaxByValue (string useValue, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.DataVisualization.Charting.DataPoint FindMaxByValue(string useValue, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataPointCollection.FindMaxByValue(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindMaxByValue (useValue As String, startIndex As Integer) As DataPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::DataVisualization::Charting::DataPoint ^ FindMaxByValue(System::String ^ useValue, int startIndex);" />
      <MemberSignature Language="F#" Value="member this.FindMaxByValue : string * int -&gt; System.Windows.Forms.DataVisualization.Charting.DataPoint" Usage="dataPointCollection.FindMaxByValue (useValue, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.DataPoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useValue" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="useValue"><span data-ttu-id="da8e7-260">Valor de punto de datos que se va a usar (X, Y1, Y2...).</span><span class="sxs-lookup"><span data-stu-id="da8e7-260">The data point value to use (X, Y1, Y2...).</span></span></param>
        <param name="startIndex"><span data-ttu-id="da8e7-261">Ubicación de índice del punto de datos a partir del que se va a iniciar la búsqueda.</span><span class="sxs-lookup"><span data-stu-id="da8e7-261">The index location of the data point to start searching from.</span></span></param>
        <summary><span data-ttu-id="da8e7-262">Busca el punto de datos que tiene el valor máximo, empezando en la ubicación de índice especificada.</span><span class="sxs-lookup"><span data-stu-id="da8e7-262">Finds the data point with the maximum value, starting from the specified index location.</span></span></summary>
        <returns><span data-ttu-id="da8e7-263">Objeto <see cref="T:System.Windows.Forms.DataVisualization.Charting.DataPoint" /> que tiene el valor máximo.</span><span class="sxs-lookup"><span data-stu-id="da8e7-263">The <see cref="T:System.Windows.Forms.DataVisualization.Charting.DataPoint" /> object with the maximum value.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FindMinByValue">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="da8e7-264">Busca el punto de datos que tiene el valor mínimo.</span><span class="sxs-lookup"><span data-stu-id="da8e7-264">Finds the data point with the minimum value.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindMinByValue">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.DataPoint FindMinByValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.DataVisualization.Charting.DataPoint FindMinByValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataPointCollection.FindMinByValue" />
      <MemberSignature Language="VB.NET" Value="Public Function FindMinByValue () As DataPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::DataVisualization::Charting::DataPoint ^ FindMinByValue();" />
      <MemberSignature Language="F#" Value="member this.FindMinByValue : unit -&gt; System.Windows.Forms.DataVisualization.Charting.DataPoint" Usage="dataPointCollection.FindMinByValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.DataPoint</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="da8e7-265">Busca el punto de datos que tiene el valor mínimo.</span><span class="sxs-lookup"><span data-stu-id="da8e7-265">Finds the data point with the minimum value.</span></span></summary>
        <returns><span data-ttu-id="da8e7-266">Objeto <see cref="T:System.Windows.Forms.DataVisualization.Charting.DataPoint" /> que tiene el valor mínimo.</span><span class="sxs-lookup"><span data-stu-id="da8e7-266">The <see cref="T:System.Windows.Forms.DataVisualization.Charting.DataPoint" /> object with the minimum value.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindMinByValue">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.DataPoint FindMinByValue (string useValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.DataVisualization.Charting.DataPoint FindMinByValue(string useValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataPointCollection.FindMinByValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindMinByValue (useValue As String) As DataPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::DataVisualization::Charting::DataPoint ^ FindMinByValue(System::String ^ useValue);" />
      <MemberSignature Language="F#" Value="member this.FindMinByValue : string -&gt; System.Windows.Forms.DataVisualization.Charting.DataPoint" Usage="dataPointCollection.FindMinByValue useValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.DataPoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="useValue"><span data-ttu-id="da8e7-267">Valor de punto de datos que se va a usar (X, Y1, Y2...).</span><span class="sxs-lookup"><span data-stu-id="da8e7-267">The data point value to use (X, Y1, Y2...).</span></span></param>
        <summary><span data-ttu-id="da8e7-268">Busca el punto de datos que tiene el valor mínimo.</span><span class="sxs-lookup"><span data-stu-id="da8e7-268">Finds the data point with the minimum value.</span></span></summary>
        <returns><span data-ttu-id="da8e7-269">Un objeto <see cref="T:System.Windows.Forms.DataVisualization.Charting.DataPoint" /> que tiene el valor mínimo.</span><span class="sxs-lookup"><span data-stu-id="da8e7-269">A <see cref="T:System.Windows.Forms.DataVisualization.Charting.DataPoint" /> object with the minimum value.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindMinByValue">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.DataPoint FindMinByValue (string useValue, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.DataVisualization.Charting.DataPoint FindMinByValue(string useValue, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataPointCollection.FindMinByValue(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindMinByValue (useValue As String, startIndex As Integer) As DataPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::DataVisualization::Charting::DataPoint ^ FindMinByValue(System::String ^ useValue, int startIndex);" />
      <MemberSignature Language="F#" Value="member this.FindMinByValue : string * int -&gt; System.Windows.Forms.DataVisualization.Charting.DataPoint" Usage="dataPointCollection.FindMinByValue (useValue, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.DataPoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useValue" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="useValue"><span data-ttu-id="da8e7-270">Valor de punto de datos que se va a usar (X, Y1, Y2...).</span><span class="sxs-lookup"><span data-stu-id="da8e7-270">The data point value to use (X, Y1, Y2...).</span></span></param>
        <param name="startIndex"><span data-ttu-id="da8e7-271">Ubicación de índice del punto de datos a partir del que se va a iniciar la búsqueda.</span><span class="sxs-lookup"><span data-stu-id="da8e7-271">The index location of the data point to start searching from.</span></span></param>
        <summary><span data-ttu-id="da8e7-272">Busca el punto de datos que tiene el valor mínimo, empezando en la ubicación de índice especificada.</span><span class="sxs-lookup"><span data-stu-id="da8e7-272">Finds the data point with the minimum value, starting from the specified index location.</span></span></summary>
        <returns><span data-ttu-id="da8e7-273">Objeto <see cref="T:System.Windows.Forms.DataVisualization.Charting.DataPoint" /> que tiene el valor mínimo.</span><span class="sxs-lookup"><span data-stu-id="da8e7-273">The <see cref="T:System.Windows.Forms.DataVisualization.Charting.DataPoint" /> object with the minimum value.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertXY">
      <MemberSignature Language="C#" Value="public void InsertXY (int index, object xValue, params object[] yValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InsertXY(int32 index, object xValue, object[] yValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataPointCollection.InsertXY(System.Int32,System.Object,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertXY (index As Integer, xValue As Object, ParamArray yValue As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertXY(int index, System::Object ^ xValue, ... cli::array &lt;System::Object ^&gt; ^ yValue);" />
      <MemberSignature Language="F#" Value="member this.InsertXY : int * obj * obj[] -&gt; unit" Usage="dataPointCollection.InsertXY (index, xValue, yValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="xValue" Type="System.Object" />
        <Parameter Name="yValue" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="da8e7-274">Índice en el que se insertará el punto de datos.</span><span class="sxs-lookup"><span data-stu-id="da8e7-274">The index at which the data point will be inserted.</span></span></param>
        <param name="xValue"><span data-ttu-id="da8e7-275">Valor X del punto de datos.</span><span class="sxs-lookup"><span data-stu-id="da8e7-275">The X value of the data point.</span></span></param>
        <param name="yValue"><span data-ttu-id="da8e7-276">Lista separada por comas de valores Y del punto de datos.</span><span class="sxs-lookup"><span data-stu-id="da8e7-276">A comma-separated list of Y values of the data point.</span></span></param>
        <summary><span data-ttu-id="da8e7-277">Inserta un punto de datos con el valor X especificado y uno o más valores Y indicados.</span><span class="sxs-lookup"><span data-stu-id="da8e7-277">Inserts a data point with the specified X value and one or more specified Y values.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertY">
      <MemberSignature Language="C#" Value="public void InsertY (int index, params object[] yValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InsertY(int32 index, object[] yValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataPointCollection.InsertY(System.Int32,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertY (index As Integer, ParamArray yValue As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertY(int index, ... cli::array &lt;System::Object ^&gt; ^ yValue);" />
      <MemberSignature Language="F#" Value="member this.InsertY : int * obj[] -&gt; unit" Usage="dataPointCollection.InsertY (index, yValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="yValue" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="da8e7-278">Índice en el que se insertará el punto de datos.</span><span class="sxs-lookup"><span data-stu-id="da8e7-278">The index at which the data point will be inserted.</span></span></param>
        <param name="yValue"><span data-ttu-id="da8e7-279">Lista separada por comas de valores Y del punto de datos.</span><span class="sxs-lookup"><span data-stu-id="da8e7-279">A comma-separated list of Y values of the data point.</span></span></param>
        <summary><span data-ttu-id="da8e7-280">Inserta un punto de datos con uno o más valores Y especificados.</span><span class="sxs-lookup"><span data-stu-id="da8e7-280">Inserts a data point with one or more specified Y values.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
<Type Name="DataManipulator" FullName="System.Windows.Forms.DataVisualization.Charting.DataManipulator">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fc1c74384e710605c5109c17f8817d1185dd0268" /><Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="11/20/2018" /><Meta Name="ms.locfileid" Value="52249756" /></Metadata><TypeSignature Language="C#" Value="public class DataManipulator : System.Windows.Forms.DataVisualization.Charting.DataFormula" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataManipulator extends System.Windows.Forms.DataVisualization.Charting.DataFormula" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataVisualization.Charting.DataManipulator" />
  <TypeSignature Language="VB.NET" Value="Public Class DataManipulator&#xA;Inherits DataFormula" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataManipulator : System::Windows::Forms::DataVisualization::Charting::DataFormula" />
  <TypeSignature Language="F#" Value="type DataManipulator = class&#xA;    inherit DataFormula" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.DataVisualization.Charting.DataFormula</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="ac509-101">Proporciona el método que realiza operaciones de manipulación de datos en tiempo de ejecución.</span><span class="sxs-lookup"><span data-stu-id="ac509-101">Provides method that performs data manipulation operations at run time.</span></span> <span data-ttu-id="ac509-102">La propiedad <see cref="P:System.Windows.Forms.DataVisualization.Charting.Chart.DataManipulator" /> del objeto <see cref="T:System.Windows.Forms.DataVisualization.Charting.Chart" /> raíz expone esta clase.</span><span class="sxs-lookup"><span data-stu-id="ac509-102">This class is exposed by the <see cref="P:System.Windows.Forms.DataVisualization.Charting.Chart.DataManipulator" /> property of the root <see cref="T:System.Windows.Forms.DataVisualization.Charting.Chart" /> object.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataManipulator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataManipulator();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ac509-103">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.DataVisualization.Charting.DataManipulator" />.</span><span class="sxs-lookup"><span data-stu-id="ac509-103">Initializes a new instance of the <see cref="T:System.Windows.Forms.DataVisualization.Charting.DataManipulator" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ExportSeriesValues">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ac509-104">Exporta los datos de una serie o una colección de series al objeto <see cref="T:System.Data.DataSet" /> .</span><span class="sxs-lookup"><span data-stu-id="ac509-104">Exports the data from the a series or collection of series to the <see cref="T:System.Data.DataSet" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ExportSeriesValues">
      <MemberSignature Language="C#" Value="public System.Data.DataSet ExportSeriesValues ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataSet ExportSeriesValues() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.ExportSeriesValues" />
      <MemberSignature Language="VB.NET" Value="Public Function ExportSeriesValues () As DataSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataSet ^ ExportSeriesValues();" />
      <MemberSignature Language="F#" Value="member this.ExportSeriesValues : unit -&gt; System.Data.DataSet" Usage="dataManipulator.ExportSeriesValues " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DataSet</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ac509-105">Exporta los datos para cada serie almacenada en <see cref="T:System.Windows.Forms.DataVisualization.Charting.SeriesCollection" /> al objeto <see cref="T:System.Data.DataSet" />.</span><span class="sxs-lookup"><span data-stu-id="ac509-105">Exports the data for every series stored in the <see cref="T:System.Windows.Forms.DataVisualization.Charting.SeriesCollection" /> to the <see cref="T:System.Data.DataSet" /> object.</span></span></summary>
        <returns><span data-ttu-id="ac509-106">Objeto <see cref="T:System.Data.DataSet" /> que contiene los datos de la serie exportados.</span><span class="sxs-lookup"><span data-stu-id="ac509-106">A <see cref="T:System.Data.DataSet" /> object that contains the exported series data.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportSeriesValues">
      <MemberSignature Language="C#" Value="public System.Data.DataSet ExportSeriesValues (string seriesNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataSet ExportSeriesValues(string seriesNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.ExportSeriesValues(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExportSeriesValues (seriesNames As String) As DataSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataSet ^ ExportSeriesValues(System::String ^ seriesNames);" />
      <MemberSignature Language="F#" Value="member this.ExportSeriesValues : string -&gt; System.Data.DataSet" Usage="dataManipulator.ExportSeriesValues seriesNames" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="seriesNames" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="seriesNames"><span data-ttu-id="ac509-107">Lista separada por comas de nombres de los objetos <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> que se van a exportar.</span><span class="sxs-lookup"><span data-stu-id="ac509-107">A comma-separated list of names of the <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> to be exported.</span></span></param>
        <summary><span data-ttu-id="ac509-108">Exporta los datos de una o más series al objeto <see cref="T:System.Data.DataSet" />.</span><span class="sxs-lookup"><span data-stu-id="ac509-108">Exports the data from one or more series to the <see cref="T:System.Data.DataSet" /> object.</span></span></summary>
        <returns><span data-ttu-id="ac509-109">Objeto <see cref="T:System.Data.DataSet" /> que contiene los datos de la serie exportados.</span><span class="sxs-lookup"><span data-stu-id="ac509-109">A <see cref="T:System.Data.DataSet" /> object that contains the exported series data.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportSeriesValues">
      <MemberSignature Language="C#" Value="public System.Data.DataSet ExportSeriesValues (System.Windows.Forms.DataVisualization.Charting.Series series);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataSet ExportSeriesValues(class System.Windows.Forms.DataVisualization.Charting.Series series) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.ExportSeriesValues(System.Windows.Forms.DataVisualization.Charting.Series)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataSet ^ ExportSeriesValues(System::Windows::Forms::DataVisualization::Charting::Series ^ series);" />
      <MemberSignature Language="F#" Value="member this.ExportSeriesValues : System.Windows.Forms.DataVisualization.Charting.Series -&gt; System.Data.DataSet" Usage="dataManipulator.ExportSeriesValues series" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="series" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="series"><span data-ttu-id="ac509-110">Serie que se va a exportar.</span><span class="sxs-lookup"><span data-stu-id="ac509-110">The series to be exported.</span></span></param>
        <summary><span data-ttu-id="ac509-111">Exporta los datos de la serie especificada al objeto <see cref="T:System.Data.DataSet" />.</span><span class="sxs-lookup"><span data-stu-id="ac509-111">Exports the data from the specified series to the <see cref="T:System.Data.DataSet" /> object.</span></span></summary>
        <returns><span data-ttu-id="ac509-112">Objeto <see cref="T:System.Data.DataSet" /> que contiene los datos de la serie exportados.</span><span class="sxs-lookup"><span data-stu-id="ac509-112">A <see cref="T:System.Data.DataSet" /> object that contains the exported series data.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Filter">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ac509-113">Filtra una o varias series, o filtra el punto de datos de una serie o una colección de series, aplicando una regla de filtrado estándar o una regla de filtrado personalizada.</span><span class="sxs-lookup"><span data-stu-id="ac509-113">Filters one or more series, or filters the data point in a series or a collection of series, by applying a standard filtering rule or a custom filtering rule.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public void Filter (System.Windows.Forms.DataVisualization.Charting.IDataPointFilter filterInterface, string inputSeriesNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Filter(class System.Windows.Forms.DataVisualization.Charting.IDataPointFilter filterInterface, string inputSeriesNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.Filter(System.Windows.Forms.DataVisualization.Charting.IDataPointFilter,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Filter (filterInterface As IDataPointFilter, inputSeriesNames As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Filter(System::Windows::Forms::DataVisualization::Charting::IDataPointFilter ^ filterInterface, System::String ^ inputSeriesNames);" />
      <MemberSignature Language="F#" Value="member this.Filter : System.Windows.Forms.DataVisualization.Charting.IDataPointFilter * string -&gt; unit" Usage="dataManipulator.Filter (filterInterface, inputSeriesNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filterInterface" Type="System.Windows.Forms.DataVisualization.Charting.IDataPointFilter" />
        <Parameter Name="inputSeriesNames" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filterInterface"><span data-ttu-id="ac509-114">Objeto que implementa la interfaz <see cref="T:System.Windows.Forms.DataVisualization.Charting.IDataPointFilter" />.</span><span class="sxs-lookup"><span data-stu-id="ac509-114">An object that implements the <see cref="T:System.Windows.Forms.DataVisualization.Charting.IDataPointFilter" /> interface.</span></span></param>
        <param name="inputSeriesNames"><span data-ttu-id="ac509-115">Lista separada por comas de nombres de los objetos <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> que se van a filtrar.</span><span class="sxs-lookup"><span data-stu-id="ac509-115">A comma-separated list of names of the <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> to be filtered.</span></span></param>
        <summary><span data-ttu-id="ac509-116">Realiza el filtrado personalizado de los puntos de datos en una o más series, basándose en los puntos de la primera serie.</span><span class="sxs-lookup"><span data-stu-id="ac509-116">Performs custom filtering on the data points in one or more series, based on the points of the first series.</span></span> <span data-ttu-id="ac509-117">Los objetos <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> filtrados también almacenan los datos modificados.</span><span class="sxs-lookup"><span data-stu-id="ac509-117">The filtered <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> objects also store the modified data.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public void Filter (System.Windows.Forms.DataVisualization.Charting.IDataPointFilter filterInterface, System.Windows.Forms.DataVisualization.Charting.Series inputSeries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Filter(class System.Windows.Forms.DataVisualization.Charting.IDataPointFilter filterInterface, class System.Windows.Forms.DataVisualization.Charting.Series inputSeries) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.Filter(System.Windows.Forms.DataVisualization.Charting.IDataPointFilter,System.Windows.Forms.DataVisualization.Charting.Series)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Filter (filterInterface As IDataPointFilter, inputSeries As Series)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Filter(System::Windows::Forms::DataVisualization::Charting::IDataPointFilter ^ filterInterface, System::Windows::Forms::DataVisualization::Charting::Series ^ inputSeries);" />
      <MemberSignature Language="F#" Value="member this.Filter : System.Windows.Forms.DataVisualization.Charting.IDataPointFilter * System.Windows.Forms.DataVisualization.Charting.Series -&gt; unit" Usage="dataManipulator.Filter (filterInterface, inputSeries)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filterInterface" Type="System.Windows.Forms.DataVisualization.Charting.IDataPointFilter" />
        <Parameter Name="inputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="filterInterface"><span data-ttu-id="ac509-118">Objeto que implementa la interfaz <see cref="T:System.Windows.Forms.DataVisualization.Charting.IDataPointFilter" />.</span><span class="sxs-lookup"><span data-stu-id="ac509-118">An object that implements the <see cref="T:System.Windows.Forms.DataVisualization.Charting.IDataPointFilter" /> interface.</span></span></param>
        <param name="inputSeries"><span data-ttu-id="ac509-119">Objeto <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> que se filtra.</span><span class="sxs-lookup"><span data-stu-id="ac509-119">The <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> object that is filtered.</span></span></param>
        <summary><span data-ttu-id="ac509-120">Realiza el filtrado personalizado de los puntos de datos en una serie.</span><span class="sxs-lookup"><span data-stu-id="ac509-120">Performs custom filtering on the data points in a series.</span></span> <span data-ttu-id="ac509-121">El objeto <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> que se filtra también almacena los datos modificados.</span><span class="sxs-lookup"><span data-stu-id="ac509-121">The <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> object that is filtered also stores the modified data.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public void Filter (System.Windows.Forms.DataVisualization.Charting.CompareMethod compareMethod, double compareValue, string inputSeriesNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Filter(valuetype System.Windows.Forms.DataVisualization.Charting.CompareMethod compareMethod, float64 compareValue, string inputSeriesNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.Filter(System.Windows.Forms.DataVisualization.Charting.CompareMethod,System.Double,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Filter(System::Windows::Forms::DataVisualization::Charting::CompareMethod compareMethod, double compareValue, System::String ^ inputSeriesNames);" />
      <MemberSignature Language="F#" Value="member this.Filter : System.Windows.Forms.DataVisualization.Charting.CompareMethod * double * string -&gt; unit" Usage="dataManipulator.Filter (compareMethod, compareValue, inputSeriesNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="compareMethod" Type="System.Windows.Forms.DataVisualization.Charting.CompareMethod" />
        <Parameter Name="compareValue" Type="System.Double" />
        <Parameter Name="inputSeriesNames" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="compareMethod"><span data-ttu-id="ac509-122">Un valor de enumeración <see cref="T:System.Windows.Forms.DataVisualization.Charting.CompareMethod" /> que determina el método de comparación para la regla de filtrado.</span><span class="sxs-lookup"><span data-stu-id="ac509-122">A <see cref="T:System.Windows.Forms.DataVisualization.Charting.CompareMethod" /> enumeration value that determines the comparison method for the filtering rule.</span></span> <span data-ttu-id="ac509-123">Puede ser <see cref="F:System.Windows.Forms.DataVisualization.Charting.CompareMethod.LessThan" />, <see cref="F:System.Windows.Forms.DataVisualization.Charting.CompareMethod.EqualTo" />, etc.</span><span class="sxs-lookup"><span data-stu-id="ac509-123">Can be <see cref="F:System.Windows.Forms.DataVisualization.Charting.CompareMethod.LessThan" />, <see cref="F:System.Windows.Forms.DataVisualization.Charting.CompareMethod.EqualTo" />, and so forth.</span></span></param>
        <param name="compareValue"><span data-ttu-id="ac509-124">Parte de valor de la regla de filtrado que se aplica a los primeros valores Y de los puntos de datos.</span><span class="sxs-lookup"><span data-stu-id="ac509-124">The value part of the filtering rule that is applied to the first Y-values of data points.</span></span> <span data-ttu-id="ac509-125">Por ejemplo, en la regla de filtrado "&lt;6", 6 es el valor.</span><span class="sxs-lookup"><span data-stu-id="ac509-125">For example, in the filtering rule "&lt;6", 6 is the value.</span></span></param>
        <param name="inputSeriesNames"><span data-ttu-id="ac509-126">Lista separada por comas de nombres de los objetos <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> que se van a filtrar.</span><span class="sxs-lookup"><span data-stu-id="ac509-126">A comma-separated list of names of the <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> to be filtered.</span></span></param>
        <summary><span data-ttu-id="ac509-127">Filtra una o más series aplicando una regla de filtrado al primer valor Y de los puntos de datos en la primera serie.</span><span class="sxs-lookup"><span data-stu-id="ac509-127">Filters one or more series by applying a filtering rule to the first Y-value of the data points in the first series.</span></span> <span data-ttu-id="ac509-128">Los objetos <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> filtrados se usan para almacenar los datos modificados.</span><span class="sxs-lookup"><span data-stu-id="ac509-128">The filtered <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> objects are used to store the modified data.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public void Filter (System.Windows.Forms.DataVisualization.Charting.CompareMethod compareMethod, double compareValue, System.Windows.Forms.DataVisualization.Charting.Series inputSeries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Filter(valuetype System.Windows.Forms.DataVisualization.Charting.CompareMethod compareMethod, float64 compareValue, class System.Windows.Forms.DataVisualization.Charting.Series inputSeries) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.Filter(System.Windows.Forms.DataVisualization.Charting.CompareMethod,System.Double,System.Windows.Forms.DataVisualization.Charting.Series)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Filter(System::Windows::Forms::DataVisualization::Charting::CompareMethod compareMethod, double compareValue, System::Windows::Forms::DataVisualization::Charting::Series ^ inputSeries);" />
      <MemberSignature Language="F#" Value="member this.Filter : System.Windows.Forms.DataVisualization.Charting.CompareMethod * double * System.Windows.Forms.DataVisualization.Charting.Series -&gt; unit" Usage="dataManipulator.Filter (compareMethod, compareValue, inputSeries)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="compareMethod" Type="System.Windows.Forms.DataVisualization.Charting.CompareMethod" />
        <Parameter Name="compareValue" Type="System.Double" />
        <Parameter Name="inputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="compareMethod"><span data-ttu-id="ac509-129">Un valor de enumeración <see cref="T:System.Windows.Forms.DataVisualization.Charting.CompareMethod" /> que determina el método de comparación para la regla de filtrado.</span><span class="sxs-lookup"><span data-stu-id="ac509-129">A <see cref="T:System.Windows.Forms.DataVisualization.Charting.CompareMethod" /> enumeration value that determines the comparison method for the filtering rule.</span></span> <span data-ttu-id="ac509-130">Puede ser <see cref="F:System.Windows.Forms.DataVisualization.Charting.CompareMethod.LessThan" />, <see cref="F:System.Windows.Forms.DataVisualization.Charting.CompareMethod.EqualTo" />, etc.</span><span class="sxs-lookup"><span data-stu-id="ac509-130">Can be <see cref="F:System.Windows.Forms.DataVisualization.Charting.CompareMethod.LessThan" />, <see cref="F:System.Windows.Forms.DataVisualization.Charting.CompareMethod.EqualTo" />, and so forth.</span></span></param>
        <param name="compareValue"><span data-ttu-id="ac509-131">Parte de valor de la regla de filtrado que se aplica a los primeros valores Y de los puntos de datos.</span><span class="sxs-lookup"><span data-stu-id="ac509-131">The value part of the filtering rule that is applied to the first Y-values of data points.</span></span> <span data-ttu-id="ac509-132">Por ejemplo, en la regla de filtrado "&lt;6", 6 es el valor.</span><span class="sxs-lookup"><span data-stu-id="ac509-132">For example, in the filtering rule "&lt;6", 6 is the value.</span></span></param>
        <param name="inputSeries"><span data-ttu-id="ac509-133">Objeto <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> que se filtra.</span><span class="sxs-lookup"><span data-stu-id="ac509-133">The <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> object that is filtered.</span></span></param>
        <summary><span data-ttu-id="ac509-134">Filtra los puntos de datos de una serie aplicando una regla de filtrado al primer valor Y de cada punto de datos.</span><span class="sxs-lookup"><span data-stu-id="ac509-134">Filters the data points in a series by applying a filtering rule to the first Y-value of each data point.</span></span> <span data-ttu-id="ac509-135">El objeto <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> que se filtra también almacena los datos modificados.</span><span class="sxs-lookup"><span data-stu-id="ac509-135">The <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> object that is filtered also stores the modified data.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public void Filter (System.Windows.Forms.DataVisualization.Charting.DateRangeType dateRange, string rangeElements, string inputSeriesNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Filter(valuetype System.Windows.Forms.DataVisualization.Charting.DateRangeType dateRange, string rangeElements, string inputSeriesNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.Filter(System.Windows.Forms.DataVisualization.Charting.DateRangeType,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Filter (dateRange As DateRangeType, rangeElements As String, inputSeriesNames As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Filter(System::Windows::Forms::DataVisualization::Charting::DateRangeType dateRange, System::String ^ rangeElements, System::String ^ inputSeriesNames);" />
      <MemberSignature Language="F#" Value="member this.Filter : System.Windows.Forms.DataVisualization.Charting.DateRangeType * string * string -&gt; unit" Usage="dataManipulator.Filter (dateRange, rangeElements, inputSeriesNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateRange" Type="System.Windows.Forms.DataVisualization.Charting.DateRangeType" />
        <Parameter Name="rangeElements" Type="System.String" />
        <Parameter Name="inputSeriesNames" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dateRange"><span data-ttu-id="ac509-136">Un valor de enumeración <see cref="T:System.Windows.Forms.DataVisualization.Charting.DateRangeType" /> que representa un intervalo de fecha y hora, como días de la semana, días del mes, etc.</span><span class="sxs-lookup"><span data-stu-id="ac509-136">A <see cref="T:System.Windows.Forms.DataVisualization.Charting.DateRangeType" /> enumeration value that represents a date/time interval, such as days of the week, days of the month, and so forth.</span></span> <span data-ttu-id="ac509-137">Determina el intervalo por el que se filtrarán los elementos definidos.</span><span class="sxs-lookup"><span data-stu-id="ac509-137">Determines the range over which the given elements will be filtered.</span></span></param>
        <param name="rangeElements"><span data-ttu-id="ac509-138">Especifica los elementos que se filtrarán, que están dentro del intervalo de fecha y hora indicado por el parámetro <paramref name="dateRange" />.</span><span class="sxs-lookup"><span data-stu-id="ac509-138">Specifies the elements within the date/time range designated by the <paramref name="dateRange" /> parameter that will be filtered.</span></span> <span data-ttu-id="ac509-139">Puede ser un solo valor, por ejemplo "7"; valores separados por comas, por ejemplo "5,6"; un intervalo de valores, como "9-11"; o cualquier variación de los mismos, como "5,6,9-11".</span><span class="sxs-lookup"><span data-stu-id="ac509-139">Can be a single value, for example, "7"; comma-separated values, for example, "5,6"; a range of values, such as "9-11"; or any variation thereof, such as "5,6,9-11".</span></span></param>
        <param name="inputSeriesNames"><span data-ttu-id="ac509-140">Lista separada por comas de nombres de los objetos <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> que se van a filtrar.</span><span class="sxs-lookup"><span data-stu-id="ac509-140">A comma-separated list of names of the <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> to be filtered.</span></span></param>
        <summary><span data-ttu-id="ac509-141">Filtra los puntos de datos de una o más series, ya sea quitando los puntos especificados o marcándolos como vacíos para los intervalos de fecha y hora dados.</span><span class="sxs-lookup"><span data-stu-id="ac509-141">Filters the data points of one or more series, either by removing the specified points or by marking them as empty for the given date/time ranges.</span></span> <span data-ttu-id="ac509-142">Los objetos <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> filtrados se usan para almacenar los datos modificados.</span><span class="sxs-lookup"><span data-stu-id="ac509-142">The filtered <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> objects are used to store the modified data.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public void Filter (System.Windows.Forms.DataVisualization.Charting.DateRangeType dateRange, string rangeElements, System.Windows.Forms.DataVisualization.Charting.Series inputSeries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Filter(valuetype System.Windows.Forms.DataVisualization.Charting.DateRangeType dateRange, string rangeElements, class System.Windows.Forms.DataVisualization.Charting.Series inputSeries) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.Filter(System.Windows.Forms.DataVisualization.Charting.DateRangeType,System.String,System.Windows.Forms.DataVisualization.Charting.Series)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Filter (dateRange As DateRangeType, rangeElements As String, inputSeries As Series)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Filter(System::Windows::Forms::DataVisualization::Charting::DateRangeType dateRange, System::String ^ rangeElements, System::Windows::Forms::DataVisualization::Charting::Series ^ inputSeries);" />
      <MemberSignature Language="F#" Value="member this.Filter : System.Windows.Forms.DataVisualization.Charting.DateRangeType * string * System.Windows.Forms.DataVisualization.Charting.Series -&gt; unit" Usage="dataManipulator.Filter (dateRange, rangeElements, inputSeries)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateRange" Type="System.Windows.Forms.DataVisualization.Charting.DateRangeType" />
        <Parameter Name="rangeElements" Type="System.String" />
        <Parameter Name="inputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="dateRange"><span data-ttu-id="ac509-143">Un valor de enumeración <see cref="T:System.Windows.Forms.DataVisualization.Charting.DateRangeType" /> que representa un intervalo de fecha y hora, como días de la semana, días del mes, etc.</span><span class="sxs-lookup"><span data-stu-id="ac509-143">A <see cref="T:System.Windows.Forms.DataVisualization.Charting.DateRangeType" /> enumeration value that represents a date/time interval, such as days of the week, days of the month, and so forth.</span></span> <span data-ttu-id="ac509-144">Determina el intervalo por el que se filtrarán los elementos definidos.</span><span class="sxs-lookup"><span data-stu-id="ac509-144">Determines the range over which the given elements will be filtered.</span></span></param>
        <param name="rangeElements"><span data-ttu-id="ac509-145">Especifica los elementos que se filtrarán, que están dentro del intervalo de fecha y hora indicado por el parámetro <paramref name="dateRange" />.</span><span class="sxs-lookup"><span data-stu-id="ac509-145">Specifies the elements within the date/time range designated by the <paramref name="dateRange" /> parameter that will be filtered.</span></span> <span data-ttu-id="ac509-146">Puede ser un solo valor, por ejemplo "7"; valores separados por comas, por ejemplo "5,6"; un intervalo de valores, como "9-11"; o cualquier variación de los mismos, como "5,6,9-11".</span><span class="sxs-lookup"><span data-stu-id="ac509-146">Can be a single value, for example, "7"; comma-separated values, for example, "5,6"; a range of values, such as "9-11"; or any variation thereof, such as "5,6,9-11".</span></span></param>
        <param name="inputSeries"><span data-ttu-id="ac509-147">Objeto <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> que se va a filtrar.</span><span class="sxs-lookup"><span data-stu-id="ac509-147">The <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> object to be filtered.</span></span></param>
        <summary><span data-ttu-id="ac509-148">Filtra los puntos de datos de una serie, ya sea quitando los puntos especificados o marcándolos como vacíos para los intervalos de fecha y hora especificados.</span><span class="sxs-lookup"><span data-stu-id="ac509-148">Filters the data points in a series, either by removing the specified points or by marking them as empty for the specified date/time ranges.</span></span> <span data-ttu-id="ac509-149">El objeto <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> que se filtra se usa para almacenar los datos modificados.</span><span class="sxs-lookup"><span data-stu-id="ac509-149">The <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> object that is filtered is used to store the modified data.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public void Filter (System.Windows.Forms.DataVisualization.Charting.IDataPointFilter filterInterface, string inputSeriesNames, string outputSeriesNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Filter(class System.Windows.Forms.DataVisualization.Charting.IDataPointFilter filterInterface, string inputSeriesNames, string outputSeriesNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.Filter(System.Windows.Forms.DataVisualization.Charting.IDataPointFilter,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Filter (filterInterface As IDataPointFilter, inputSeriesNames As String, outputSeriesNames As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Filter(System::Windows::Forms::DataVisualization::Charting::IDataPointFilter ^ filterInterface, System::String ^ inputSeriesNames, System::String ^ outputSeriesNames);" />
      <MemberSignature Language="F#" Value="member this.Filter : System.Windows.Forms.DataVisualization.Charting.IDataPointFilter * string * string -&gt; unit" Usage="dataManipulator.Filter (filterInterface, inputSeriesNames, outputSeriesNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filterInterface" Type="System.Windows.Forms.DataVisualization.Charting.IDataPointFilter" />
        <Parameter Name="inputSeriesNames" Type="System.String" />
        <Parameter Name="outputSeriesNames" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filterInterface"><span data-ttu-id="ac509-150">Objeto que implementa la interfaz <see cref="T:System.Windows.Forms.DataVisualization.Charting.IDataPointFilter" />.</span><span class="sxs-lookup"><span data-stu-id="ac509-150">An object that implements the <see cref="T:System.Windows.Forms.DataVisualization.Charting.IDataPointFilter" /> interface.</span></span></param>
        <param name="inputSeriesNames"><span data-ttu-id="ac509-151">Lista separada por comas de nombres de los objetos <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> que se van a filtrar.</span><span class="sxs-lookup"><span data-stu-id="ac509-151">A comma-separated list of names of the <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> to be filtered.</span></span></param>
        <param name="outputSeriesNames"><span data-ttu-id="ac509-152">Lista separada por comas de nombres de los objetos <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> que almacenan los datos filtrados.</span><span class="sxs-lookup"><span data-stu-id="ac509-152">A comma-separated list of names of the <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> that store the filtered data.</span></span> <span data-ttu-id="ac509-153">Asegúrese de que el número de series de salida coincide con el número de series de entrada; de lo contrario se iniciará una excepción.</span><span class="sxs-lookup"><span data-stu-id="ac509-153">Make sure that the number of output series matches the number of input series, otherwise an exception will be thrown.</span></span></param>
        <summary><span data-ttu-id="ac509-154">Realiza el filtrado personalizado de los puntos de datos en una o más series, basándose en los puntos de la primera serie.</span><span class="sxs-lookup"><span data-stu-id="ac509-154">Performs custom filtering on the data points in one or more series, based on the points of the first series.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public void Filter (System.Windows.Forms.DataVisualization.Charting.IDataPointFilter filterInterface, System.Windows.Forms.DataVisualization.Charting.Series inputSeries, System.Windows.Forms.DataVisualization.Charting.Series outputSeries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Filter(class System.Windows.Forms.DataVisualization.Charting.IDataPointFilter filterInterface, class System.Windows.Forms.DataVisualization.Charting.Series inputSeries, class System.Windows.Forms.DataVisualization.Charting.Series outputSeries) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.Filter(System.Windows.Forms.DataVisualization.Charting.IDataPointFilter,System.Windows.Forms.DataVisualization.Charting.Series,System.Windows.Forms.DataVisualization.Charting.Series)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Filter (filterInterface As IDataPointFilter, inputSeries As Series, outputSeries As Series)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Filter(System::Windows::Forms::DataVisualization::Charting::IDataPointFilter ^ filterInterface, System::Windows::Forms::DataVisualization::Charting::Series ^ inputSeries, System::Windows::Forms::DataVisualization::Charting::Series ^ outputSeries);" />
      <MemberSignature Language="F#" Value="member this.Filter : System.Windows.Forms.DataVisualization.Charting.IDataPointFilter * System.Windows.Forms.DataVisualization.Charting.Series * System.Windows.Forms.DataVisualization.Charting.Series -&gt; unit" Usage="dataManipulator.Filter (filterInterface, inputSeries, outputSeries)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filterInterface" Type="System.Windows.Forms.DataVisualization.Charting.IDataPointFilter" />
        <Parameter Name="inputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
        <Parameter Name="outputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="filterInterface"><span data-ttu-id="ac509-155">Objeto que implementa la interfaz <see cref="T:System.Windows.Forms.DataVisualization.Charting.IDataPointFilter" />.</span><span class="sxs-lookup"><span data-stu-id="ac509-155">An object that implements the <see cref="T:System.Windows.Forms.DataVisualization.Charting.IDataPointFilter" /> interface.</span></span></param>
        <param name="inputSeries"><span data-ttu-id="ac509-156">Objeto <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> que se va a filtrar.</span><span class="sxs-lookup"><span data-stu-id="ac509-156">The <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> object to be filtered.</span></span></param>
        <param name="outputSeries"><span data-ttu-id="ac509-157">Objeto <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> que almacena los datos filtrados.</span><span class="sxs-lookup"><span data-stu-id="ac509-157">A <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> object that stores the filtered data.</span></span> <span data-ttu-id="ac509-158">Si la serie no existe, se iniciará una excepción.</span><span class="sxs-lookup"><span data-stu-id="ac509-158">If the series does not exist, an exception will be thrown.</span></span></param>
        <summary><span data-ttu-id="ac509-159">Realiza el filtrado personalizado de los puntos de datos en una serie.</span><span class="sxs-lookup"><span data-stu-id="ac509-159">Performs custom filtering on the data points in a series.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public void Filter (System.Windows.Forms.DataVisualization.Charting.CompareMethod compareMethod, double compareValue, string inputSeriesNames, string outputSeriesNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Filter(valuetype System.Windows.Forms.DataVisualization.Charting.CompareMethod compareMethod, float64 compareValue, string inputSeriesNames, string outputSeriesNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.Filter(System.Windows.Forms.DataVisualization.Charting.CompareMethod,System.Double,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Filter(System::Windows::Forms::DataVisualization::Charting::CompareMethod compareMethod, double compareValue, System::String ^ inputSeriesNames, System::String ^ outputSeriesNames);" />
      <MemberSignature Language="F#" Value="member this.Filter : System.Windows.Forms.DataVisualization.Charting.CompareMethod * double * string * string -&gt; unit" Usage="dataManipulator.Filter (compareMethod, compareValue, inputSeriesNames, outputSeriesNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="compareMethod" Type="System.Windows.Forms.DataVisualization.Charting.CompareMethod" />
        <Parameter Name="compareValue" Type="System.Double" />
        <Parameter Name="inputSeriesNames" Type="System.String" />
        <Parameter Name="outputSeriesNames" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="compareMethod"><span data-ttu-id="ac509-160">Un valor de enumeración <see cref="T:System.Windows.Forms.DataVisualization.Charting.CompareMethod" /> que determina el método de comparación para la regla de filtrado.</span><span class="sxs-lookup"><span data-stu-id="ac509-160">A <see cref="T:System.Windows.Forms.DataVisualization.Charting.CompareMethod" /> enumeration value that determines the comparison method for the filtering rule.</span></span> <span data-ttu-id="ac509-161">Puede ser <see cref="F:System.Windows.Forms.DataVisualization.Charting.CompareMethod.LessThan" />, <see cref="F:System.Windows.Forms.DataVisualization.Charting.CompareMethod.EqualTo" />, etc.</span><span class="sxs-lookup"><span data-stu-id="ac509-161">Can be <see cref="F:System.Windows.Forms.DataVisualization.Charting.CompareMethod.LessThan" />, <see cref="F:System.Windows.Forms.DataVisualization.Charting.CompareMethod.EqualTo" />, and so forth.</span></span></param>
        <param name="compareValue"><span data-ttu-id="ac509-162">Parte de valor de la regla de filtrado que se aplica a los primeros valores Y de los puntos de datos.</span><span class="sxs-lookup"><span data-stu-id="ac509-162">The value part of the filtering rule that is applied to the first Y-values of data points.</span></span> <span data-ttu-id="ac509-163">Por ejemplo, en la regla de filtrado "&lt;6", 6 es el valor.</span><span class="sxs-lookup"><span data-stu-id="ac509-163">For example, in the filtering rule "&lt;6", 6 is the value.</span></span></param>
        <param name="inputSeriesNames"><span data-ttu-id="ac509-164">Lista separada por comas de nombres de los objetos <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> que se van a filtrar.</span><span class="sxs-lookup"><span data-stu-id="ac509-164">A comma-separated list of names of the <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> to be filtered.</span></span></param>
        <param name="outputSeriesNames"><span data-ttu-id="ac509-165">Lista separada por comas de nombres de los objetos <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> que almacenan los datos filtrados.</span><span class="sxs-lookup"><span data-stu-id="ac509-165">A comma-separated list of names of the <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> that store the filtered data.</span></span> <span data-ttu-id="ac509-166">El número de series de salida debe coincidir con el número de series de entrada; de lo contrario se iniciará una excepción.</span><span class="sxs-lookup"><span data-stu-id="ac509-166">The number of output series must match the number of input series, otherwise an exception will be thrown.</span></span></param>
        <summary><span data-ttu-id="ac509-167">Filtra una o más series aplicando una regla de filtrado al primer valor Y de cada uno de los puntos de datos de la primera serie.</span><span class="sxs-lookup"><span data-stu-id="ac509-167">Filters one or more series by applying a filtering rule to the first Y-value of each of the data points in the first series.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public void Filter (System.Windows.Forms.DataVisualization.Charting.CompareMethod compareMethod, double compareValue, System.Windows.Forms.DataVisualization.Charting.Series inputSeries, System.Windows.Forms.DataVisualization.Charting.Series outputSeries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Filter(valuetype System.Windows.Forms.DataVisualization.Charting.CompareMethod compareMethod, float64 compareValue, class System.Windows.Forms.DataVisualization.Charting.Series inputSeries, class System.Windows.Forms.DataVisualization.Charting.Series outputSeries) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.Filter(System.Windows.Forms.DataVisualization.Charting.CompareMethod,System.Double,System.Windows.Forms.DataVisualization.Charting.Series,System.Windows.Forms.DataVisualization.Charting.Series)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Filter(System::Windows::Forms::DataVisualization::Charting::CompareMethod compareMethod, double compareValue, System::Windows::Forms::DataVisualization::Charting::Series ^ inputSeries, System::Windows::Forms::DataVisualization::Charting::Series ^ outputSeries);" />
      <MemberSignature Language="F#" Value="member this.Filter : System.Windows.Forms.DataVisualization.Charting.CompareMethod * double * System.Windows.Forms.DataVisualization.Charting.Series * System.Windows.Forms.DataVisualization.Charting.Series -&gt; unit" Usage="dataManipulator.Filter (compareMethod, compareValue, inputSeries, outputSeries)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="compareMethod" Type="System.Windows.Forms.DataVisualization.Charting.CompareMethod" />
        <Parameter Name="compareValue" Type="System.Double" />
        <Parameter Name="inputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
        <Parameter Name="outputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="compareMethod"><span data-ttu-id="ac509-168">Un valor de enumeración <see cref="T:System.Windows.Forms.DataVisualization.Charting.CompareMethod" /> que determina el método de comparación para la regla de filtrado.</span><span class="sxs-lookup"><span data-stu-id="ac509-168">A <see cref="T:System.Windows.Forms.DataVisualization.Charting.CompareMethod" /> enumeration value that determines the comparison method for the filtering rule.</span></span> <span data-ttu-id="ac509-169">Puede ser <see cref="F:System.Windows.Forms.DataVisualization.Charting.CompareMethod.LessThan" />, <see cref="F:System.Windows.Forms.DataVisualization.Charting.CompareMethod.EqualTo" />, etc.</span><span class="sxs-lookup"><span data-stu-id="ac509-169">Can be <see cref="F:System.Windows.Forms.DataVisualization.Charting.CompareMethod.LessThan" />, <see cref="F:System.Windows.Forms.DataVisualization.Charting.CompareMethod.EqualTo" />, and so forth.</span></span></param>
        <param name="compareValue"><span data-ttu-id="ac509-170">Parte de valor de la regla de filtrado que se aplica a los primeros valores Y de los puntos de datos.</span><span class="sxs-lookup"><span data-stu-id="ac509-170">The value part of the filtering rule that is applied to the first Y-values of data points.</span></span> <span data-ttu-id="ac509-171">Por ejemplo, en la regla de filtrado "&lt;6", 6 es el valor.</span><span class="sxs-lookup"><span data-stu-id="ac509-171">For example, in the filtering rule "&lt;6", 6 is the value.</span></span></param>
        <param name="inputSeries"><span data-ttu-id="ac509-172">Objeto <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> que se va a filtrar.</span><span class="sxs-lookup"><span data-stu-id="ac509-172">The <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> object to be filtered.</span></span></param>
        <param name="outputSeries"><span data-ttu-id="ac509-173">Objeto <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> que almacena los datos filtrados.</span><span class="sxs-lookup"><span data-stu-id="ac509-173">A <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> object that stores the filtered data.</span></span> <span data-ttu-id="ac509-174">Si la serie no existe, se iniciará una excepción.</span><span class="sxs-lookup"><span data-stu-id="ac509-174">If the series does not exist, an exception will be thrown.</span></span></param>
        <summary><span data-ttu-id="ac509-175">Filtra los puntos de datos de una serie aplicando una regla de filtrado al primer valor Y de cada uno de los puntos de datos.</span><span class="sxs-lookup"><span data-stu-id="ac509-175">Filters the data points in a series by applying a filtering rule to the first Y-value of each of the data points.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public void Filter (System.Windows.Forms.DataVisualization.Charting.DateRangeType dateRange, string rangeElements, string inputSeriesNames, string outputSeriesNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Filter(valuetype System.Windows.Forms.DataVisualization.Charting.DateRangeType dateRange, string rangeElements, string inputSeriesNames, string outputSeriesNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.Filter(System.Windows.Forms.DataVisualization.Charting.DateRangeType,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Filter (dateRange As DateRangeType, rangeElements As String, inputSeriesNames As String, outputSeriesNames As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Filter(System::Windows::Forms::DataVisualization::Charting::DateRangeType dateRange, System::String ^ rangeElements, System::String ^ inputSeriesNames, System::String ^ outputSeriesNames);" />
      <MemberSignature Language="F#" Value="member this.Filter : System.Windows.Forms.DataVisualization.Charting.DateRangeType * string * string * string -&gt; unit" Usage="dataManipulator.Filter (dateRange, rangeElements, inputSeriesNames, outputSeriesNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateRange" Type="System.Windows.Forms.DataVisualization.Charting.DateRangeType" />
        <Parameter Name="rangeElements" Type="System.String" />
        <Parameter Name="inputSeriesNames" Type="System.String" />
        <Parameter Name="outputSeriesNames" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dateRange"><span data-ttu-id="ac509-176">Un valor de enumeración <see cref="T:System.Windows.Forms.DataVisualization.Charting.DateRangeType" /> que representa un intervalo de fecha y hora, como días de la semana, días del mes, etc.</span><span class="sxs-lookup"><span data-stu-id="ac509-176">A <see cref="T:System.Windows.Forms.DataVisualization.Charting.DateRangeType" /> enumeration value that represents a date/time interval, such as days of the week, days of the month, and so forth.</span></span> <span data-ttu-id="ac509-177">Determina el intervalo por el que se filtrarán los elementos definidos.</span><span class="sxs-lookup"><span data-stu-id="ac509-177">Determines the range over which the given elements will be filtered.</span></span></param>
        <param name="rangeElements"><span data-ttu-id="ac509-178">Especifica los elementos que se filtrarán, que están dentro del intervalo de fecha y hora indicado por el parámetro <paramref name="dateRange" />.</span><span class="sxs-lookup"><span data-stu-id="ac509-178">Specifies the elements within the date/time range designated by the <paramref name="dateRange" /> parameter that will be filtered.</span></span> <span data-ttu-id="ac509-179">Puede ser un solo valor, por ejemplo "7"; valores separados por comas, por ejemplo "5,6"; un intervalo de valores, como "9-11"; o cualquier variación de los mismos, como "5,6,9-11".</span><span class="sxs-lookup"><span data-stu-id="ac509-179">Can be a single value, for example, "7"; comma-separated values, for example, "5,6"; a range of values, such as "9-11"; or any variation thereof, such as "5,6,9-11".</span></span></param>
        <param name="inputSeriesNames"><span data-ttu-id="ac509-180">Lista separada por comas de nombres de los objetos <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> que se van a filtrar.</span><span class="sxs-lookup"><span data-stu-id="ac509-180">A comma-separated list of names of the <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> to be filtered.</span></span></param>
        <param name="outputSeriesNames"><span data-ttu-id="ac509-181">Lista separada por comas de nombres de los objetos <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> que almacenan los datos filtrados.</span><span class="sxs-lookup"><span data-stu-id="ac509-181">A comma-separated list of names of the <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> that store the filtered data.</span></span> <span data-ttu-id="ac509-182">Asegúrese de que el número de series de salida coincide con el número de series de entrada; de lo contrario se iniciará una excepción.</span><span class="sxs-lookup"><span data-stu-id="ac509-182">Make sure that the number of output series matches the number of input series, otherwise an exception will be thrown.</span></span></param>
        <summary><span data-ttu-id="ac509-183">Filtra los puntos de datos de una o más series, ya sea quitando los puntos especificados o marcándolos como vacíos para los intervalos de fecha y hora dados.</span><span class="sxs-lookup"><span data-stu-id="ac509-183">Filters the data points of one or more series, either by removing the specified points or by marking them as empty for the given date/time ranges.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public void Filter (System.Windows.Forms.DataVisualization.Charting.DateRangeType dateRange, string rangeElements, System.Windows.Forms.DataVisualization.Charting.Series inputSeries, System.Windows.Forms.DataVisualization.Charting.Series outputSeries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Filter(valuetype System.Windows.Forms.DataVisualization.Charting.DateRangeType dateRange, string rangeElements, class System.Windows.Forms.DataVisualization.Charting.Series inputSeries, class System.Windows.Forms.DataVisualization.Charting.Series outputSeries) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.Filter(System.Windows.Forms.DataVisualization.Charting.DateRangeType,System.String,System.Windows.Forms.DataVisualization.Charting.Series,System.Windows.Forms.DataVisualization.Charting.Series)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Filter (dateRange As DateRangeType, rangeElements As String, inputSeries As Series, outputSeries As Series)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Filter(System::Windows::Forms::DataVisualization::Charting::DateRangeType dateRange, System::String ^ rangeElements, System::Windows::Forms::DataVisualization::Charting::Series ^ inputSeries, System::Windows::Forms::DataVisualization::Charting::Series ^ outputSeries);" />
      <MemberSignature Language="F#" Value="member this.Filter : System.Windows.Forms.DataVisualization.Charting.DateRangeType * string * System.Windows.Forms.DataVisualization.Charting.Series * System.Windows.Forms.DataVisualization.Charting.Series -&gt; unit" Usage="dataManipulator.Filter (dateRange, rangeElements, inputSeries, outputSeries)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateRange" Type="System.Windows.Forms.DataVisualization.Charting.DateRangeType" />
        <Parameter Name="rangeElements" Type="System.String" />
        <Parameter Name="inputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
        <Parameter Name="outputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="dateRange"><span data-ttu-id="ac509-184">Un valor de enumeración <see cref="T:System.Windows.Forms.DataVisualization.Charting.DateRangeType" /> que representa un intervalo de fecha y hora, como días de la semana, días del mes, etc.</span><span class="sxs-lookup"><span data-stu-id="ac509-184">A <see cref="T:System.Windows.Forms.DataVisualization.Charting.DateRangeType" /> enumeration value that represents a date/time interval, such as days of the week, days of the month, and so forth.</span></span> <span data-ttu-id="ac509-185">Determina el intervalo por el que se filtrarán los elementos definidos.</span><span class="sxs-lookup"><span data-stu-id="ac509-185">Determines the range over which the given elements will be filtered.</span></span></param>
        <param name="rangeElements"><span data-ttu-id="ac509-186">Especifica los elementos que se filtrarán, que están dentro del intervalo de fecha y hora indicado por el parámetro <paramref name="dateRange" />.</span><span class="sxs-lookup"><span data-stu-id="ac509-186">Specifies the elements within the date/time range designated by the <paramref name="dateRange" /> parameter that will be filtered.</span></span> <span data-ttu-id="ac509-187">Puede ser un solo valor, por ejemplo "7"; valores separados por comas, por ejemplo "5,6"; un intervalo de valores, como "9-11"; o cualquier variación de los mismos, como "5,6,9-11".</span><span class="sxs-lookup"><span data-stu-id="ac509-187">Can be a single value, for example, "7"; comma-separated values, for example, "5,6"; a range of values, such as "9-11"; or any variation thereof, such as "5,6,9-11".</span></span></param>
        <param name="inputSeries"><span data-ttu-id="ac509-188">Objeto <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> que se va a filtrar.</span><span class="sxs-lookup"><span data-stu-id="ac509-188">The <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> object to be filtered.</span></span></param>
        <param name="outputSeries"><span data-ttu-id="ac509-189">Objeto <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> que almacena los datos filtrados.</span><span class="sxs-lookup"><span data-stu-id="ac509-189">A <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> object that stores the filtered data.</span></span> <span data-ttu-id="ac509-190">Si la serie no existe, se iniciará una excepción.</span><span class="sxs-lookup"><span data-stu-id="ac509-190">If the series does not exist, an exception will be thrown.</span></span></param>
        <summary><span data-ttu-id="ac509-191">Filtra los puntos de datos de una serie, ya sea quitando los puntos especificados o marcándolos como vacíos para los intervalos de fecha y hora especificados.</span><span class="sxs-lookup"><span data-stu-id="ac509-191">Filters the data points in a series, either by removing the specified points or by marking them as empty for the specified date/time ranges.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public void Filter (System.Windows.Forms.DataVisualization.Charting.CompareMethod compareMethod, double compareValue, string inputSeriesNames, string outputSeriesNames, string usingValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Filter(valuetype System.Windows.Forms.DataVisualization.Charting.CompareMethod compareMethod, float64 compareValue, string inputSeriesNames, string outputSeriesNames, string usingValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.Filter(System.Windows.Forms.DataVisualization.Charting.CompareMethod,System.Double,System.String,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Filter(System::Windows::Forms::DataVisualization::Charting::CompareMethod compareMethod, double compareValue, System::String ^ inputSeriesNames, System::String ^ outputSeriesNames, System::String ^ usingValue);" />
      <MemberSignature Language="F#" Value="member this.Filter : System.Windows.Forms.DataVisualization.Charting.CompareMethod * double * string * string * string -&gt; unit" Usage="dataManipulator.Filter (compareMethod, compareValue, inputSeriesNames, outputSeriesNames, usingValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="compareMethod" Type="System.Windows.Forms.DataVisualization.Charting.CompareMethod" />
        <Parameter Name="compareValue" Type="System.Double" />
        <Parameter Name="inputSeriesNames" Type="System.String" />
        <Parameter Name="outputSeriesNames" Type="System.String" />
        <Parameter Name="usingValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="compareMethod"><span data-ttu-id="ac509-192">Un valor de enumeración <see cref="T:System.Windows.Forms.DataVisualization.Charting.CompareMethod" /> que determina el método de comparación para la regla de filtrado.</span><span class="sxs-lookup"><span data-stu-id="ac509-192">A <see cref="T:System.Windows.Forms.DataVisualization.Charting.CompareMethod" /> enumeration value that determines the comparison method for the filtering rule.</span></span> <span data-ttu-id="ac509-193">Puede ser <see cref="F:System.Windows.Forms.DataVisualization.Charting.CompareMethod.LessThan" />, <see cref="F:System.Windows.Forms.DataVisualization.Charting.CompareMethod.EqualTo" />, etc.</span><span class="sxs-lookup"><span data-stu-id="ac509-193">Can be <see cref="F:System.Windows.Forms.DataVisualization.Charting.CompareMethod.LessThan" />, <see cref="F:System.Windows.Forms.DataVisualization.Charting.CompareMethod.EqualTo" />, and so forth.</span></span></param>
        <param name="compareValue"><span data-ttu-id="ac509-194">Parte de valor de la regla de filtrado que se aplica a los primeros valores Y de los puntos de datos.</span><span class="sxs-lookup"><span data-stu-id="ac509-194">The value part of the filtering rule that is applied to the first Y-values of data points.</span></span> <span data-ttu-id="ac509-195">Por ejemplo, en la regla de filtrado "&lt;6", 6 es el valor.</span><span class="sxs-lookup"><span data-stu-id="ac509-195">For example, in the filtering rule "&lt;6", 6 is the value.</span></span></param>
        <param name="inputSeriesNames"><span data-ttu-id="ac509-196">Lista separada por comas de nombres de los objetos <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> que se van a filtrar.</span><span class="sxs-lookup"><span data-stu-id="ac509-196">A comma-separated list of names of the <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> to be filtered.</span></span></param>
        <param name="outputSeriesNames"><span data-ttu-id="ac509-197">Lista separada por comas de nombres de los objetos <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> que almacenan los datos filtrados.</span><span class="sxs-lookup"><span data-stu-id="ac509-197">A comma-separated list of names of the <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> that store the filtered data.</span></span> <span data-ttu-id="ac509-198">El número de series de salida debe ser igual que el número de series de entrada; de lo contrario se iniciará una excepción.</span><span class="sxs-lookup"><span data-stu-id="ac509-198">The number of output series must equal the number of input series, otherwise an exception will be thrown.</span></span></param>
        <param name="usingValue"><span data-ttu-id="ac509-199">Valor de punto de datos al que se va a aplicar la regla de filtrado.</span><span class="sxs-lookup"><span data-stu-id="ac509-199">The data point value that the filtering rule is applied to.</span></span> <span data-ttu-id="ac509-200">Puede ser X, Y, Y2, Y3, etc.</span><span class="sxs-lookup"><span data-stu-id="ac509-200">Can be X, Y, Y2, Y3, and so forth.</span></span></param>
        <summary><span data-ttu-id="ac509-201">Filtra una o más series aplicando una regla de filtrado a los valores de punto de datos especificados de la primera serie.</span><span class="sxs-lookup"><span data-stu-id="ac509-201">Filters one or more series by applying a filtering rule to the specified data point values in the first series.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public void Filter (System.Windows.Forms.DataVisualization.Charting.CompareMethod compareMethod, double compareValue, System.Windows.Forms.DataVisualization.Charting.Series inputSeries, System.Windows.Forms.DataVisualization.Charting.Series outputSeries, string usingValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Filter(valuetype System.Windows.Forms.DataVisualization.Charting.CompareMethod compareMethod, float64 compareValue, class System.Windows.Forms.DataVisualization.Charting.Series inputSeries, class System.Windows.Forms.DataVisualization.Charting.Series outputSeries, string usingValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.Filter(System.Windows.Forms.DataVisualization.Charting.CompareMethod,System.Double,System.Windows.Forms.DataVisualization.Charting.Series,System.Windows.Forms.DataVisualization.Charting.Series,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Filter(System::Windows::Forms::DataVisualization::Charting::CompareMethod compareMethod, double compareValue, System::Windows::Forms::DataVisualization::Charting::Series ^ inputSeries, System::Windows::Forms::DataVisualization::Charting::Series ^ outputSeries, System::String ^ usingValue);" />
      <MemberSignature Language="F#" Value="member this.Filter : System.Windows.Forms.DataVisualization.Charting.CompareMethod * double * System.Windows.Forms.DataVisualization.Charting.Series * System.Windows.Forms.DataVisualization.Charting.Series * string -&gt; unit" Usage="dataManipulator.Filter (compareMethod, compareValue, inputSeries, outputSeries, usingValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="compareMethod" Type="System.Windows.Forms.DataVisualization.Charting.CompareMethod" />
        <Parameter Name="compareValue" Type="System.Double" />
        <Parameter Name="inputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
        <Parameter Name="outputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
        <Parameter Name="usingValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="compareMethod"><span data-ttu-id="ac509-202">Un valor de enumeración <see cref="T:System.Windows.Forms.DataVisualization.Charting.CompareMethod" /> que determina el método de comparación para la regla de filtrado.</span><span class="sxs-lookup"><span data-stu-id="ac509-202">A <see cref="T:System.Windows.Forms.DataVisualization.Charting.CompareMethod" /> enumeration value that determines the comparison method for the filtering rule.</span></span> <span data-ttu-id="ac509-203">Puede ser <see cref="F:System.Windows.Forms.DataVisualization.Charting.CompareMethod.LessThan" />, <see cref="F:System.Windows.Forms.DataVisualization.Charting.CompareMethod.EqualTo" />, etc.</span><span class="sxs-lookup"><span data-stu-id="ac509-203">Can be <see cref="F:System.Windows.Forms.DataVisualization.Charting.CompareMethod.LessThan" />, <see cref="F:System.Windows.Forms.DataVisualization.Charting.CompareMethod.EqualTo" />, and so forth.</span></span></param>
        <param name="compareValue"><span data-ttu-id="ac509-204">Parte de valor de la regla de filtrado que se aplica a los primeros valores Y de los puntos de datos.</span><span class="sxs-lookup"><span data-stu-id="ac509-204">The value part of the filtering rule that is applied to the first Y-values of data points.</span></span> <span data-ttu-id="ac509-205">Por ejemplo, en la regla de filtrado "&lt;6", 6 es el valor.</span><span class="sxs-lookup"><span data-stu-id="ac509-205">For example, in the filtering rule "&lt;6", 6 is the value.</span></span></param>
        <param name="inputSeries"><span data-ttu-id="ac509-206">Objeto <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> que se va a filtrar.</span><span class="sxs-lookup"><span data-stu-id="ac509-206">The <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> object to be filtered.</span></span></param>
        <param name="outputSeries"><span data-ttu-id="ac509-207">Objeto <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> que almacena los datos filtrados.</span><span class="sxs-lookup"><span data-stu-id="ac509-207">A <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> object that stores the filtered data.</span></span> <span data-ttu-id="ac509-208">Si la serie no existe, se iniciará una excepción.</span><span class="sxs-lookup"><span data-stu-id="ac509-208">If the series does not exist, an exception will be thrown.</span></span></param>
        <param name="usingValue"><span data-ttu-id="ac509-209">Valor de punto de datos al que se va a aplicar la regla de filtrado.</span><span class="sxs-lookup"><span data-stu-id="ac509-209">The data point value that the filtering rule is applied to.</span></span> <span data-ttu-id="ac509-210">Puede ser X, Y, Y2, Y3, etc.</span><span class="sxs-lookup"><span data-stu-id="ac509-210">Can be X, Y, Y2, Y3, and so forth.</span></span></param>
        <summary><span data-ttu-id="ac509-211">Filtra los puntos de datos de una serie aplicando una regla de filtrado a los valores de punto de datos especificados para la comparación.</span><span class="sxs-lookup"><span data-stu-id="ac509-211">Filters the data points in a series by applying a filtering rule to the specified data point values for comparison.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterMatchedPoints">
      <MemberSignature Language="C#" Value="public bool FilterMatchedPoints { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FilterMatchedPoints" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.DataManipulator.FilterMatchedPoints" />
      <MemberSignature Language="VB.NET" Value="Public Property FilterMatchedPoints As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FilterMatchedPoints { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.FilterMatchedPoints : bool with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.DataManipulator.FilterMatchedPoints" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ac509-212">Obtiene o establece un valor que determina si se filtran los puntos si coinciden con los criterios especificados en argumentos de los métodos <c>Filter</c> de esta clase.</span><span class="sxs-lookup"><span data-stu-id="ac509-212">Gets or sets a value that determines whether points are filtered if they match criteria specified in arguments in the <c>Filter</c> methods of this class.</span></span></summary>
        <value><span data-ttu-id="ac509-213">Es <see langword="true" /> si se filtran los puntos que coinciden con los criterios especificados; es <see langword="false" /> si se filtran los puntos que no coinciden con los criterios.</span><span class="sxs-lookup"><span data-stu-id="ac509-213"><see langword="true" /> if points that match specified criteria are filtered; <see langword="false" /> if points that do not match the criteria are filtered.</span></span> <span data-ttu-id="ac509-214">El valor predeterminado es <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="ac509-214">The default value is <see langword="true" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterSetEmptyPoints">
      <MemberSignature Language="C#" Value="public bool FilterSetEmptyPoints { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FilterSetEmptyPoints" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.DataManipulator.FilterSetEmptyPoints" />
      <MemberSignature Language="VB.NET" Value="Public Property FilterSetEmptyPoints As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FilterSetEmptyPoints { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.FilterSetEmptyPoints : bool with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.DataManipulator.FilterSetEmptyPoints" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ac509-215">Obtiene o establece una marca que indica si los puntos filtrados por los métodos <c>Filter</c> o <c>FilterTopN</c> se van a quitar o a marcar como vacíos.</span><span class="sxs-lookup"><span data-stu-id="ac509-215">Gets or sets a flag that indicates whether points filtered by the <c>Filter</c> or <c>FilterTopN</c> methods will be removed or marked as empty.</span></span></summary>
        <value><span data-ttu-id="ac509-216">Es <see langword="true" /> si los puntos filtrados se marcarán como vacíos; es <see langword="false" /> si se quitarán.</span><span class="sxs-lookup"><span data-stu-id="ac509-216"><see langword="true" /> if filtered points will be marked as empty; <see langword="false" /> if they will be removed.</span></span> <span data-ttu-id="ac509-217">El valor predeterminado es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ac509-217">The default value is <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FilterTopN">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ac509-218">Filtra todos los puntos de datos de una o más series, excepto un número de puntos especificado.</span><span class="sxs-lookup"><span data-stu-id="ac509-218">Filters all data points in one or more series except for a specified number of points.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FilterTopN">
      <MemberSignature Language="C#" Value="public void FilterTopN (int pointCount, string inputSeriesNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FilterTopN(int32 pointCount, string inputSeriesNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.FilterTopN(System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilterTopN (pointCount As Integer, inputSeriesNames As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FilterTopN(int pointCount, System::String ^ inputSeriesNames);" />
      <MemberSignature Language="F#" Value="member this.FilterTopN : int * string -&gt; unit" Usage="dataManipulator.FilterTopN (pointCount, inputSeriesNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pointCount" Type="System.Int32" />
        <Parameter Name="inputSeriesNames" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pointCount"><span data-ttu-id="ac509-219">Número de puntos de datos que no quitará la operación de filtrado.</span><span class="sxs-lookup"><span data-stu-id="ac509-219">The number of data points that the filtering operation will not remove.</span></span></param>
        <param name="inputSeriesNames"><span data-ttu-id="ac509-220">Lista separada por comas de nombres de los objetos <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> que se van a filtrar.</span><span class="sxs-lookup"><span data-stu-id="ac509-220">A comma-separated list of names of the <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> to be filtered.</span></span></param>
        <summary><span data-ttu-id="ac509-221">Filtra todos los puntos de datos de una o más series, excepto un número de puntos especificado.</span><span class="sxs-lookup"><span data-stu-id="ac509-221">Filters all data points in one or more series except for a specified number of points.</span></span> <span data-ttu-id="ac509-222">Los puntos que no se filtran corresponden a los puntos de la primera serie que tienen los primeros valores Y más grandes.</span><span class="sxs-lookup"><span data-stu-id="ac509-222">The points that are not filtered correspond to points in the first series that have the largest first Y-values.</span></span> <span data-ttu-id="ac509-223">Los objetos <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> que se filtran se usan para almacenar los datos modificados.</span><span class="sxs-lookup"><span data-stu-id="ac509-223">The <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> objects that are filtered are used to store the modified data.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterTopN">
      <MemberSignature Language="C#" Value="public void FilterTopN (int pointCount, System.Windows.Forms.DataVisualization.Charting.Series inputSeries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FilterTopN(int32 pointCount, class System.Windows.Forms.DataVisualization.Charting.Series inputSeries) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.FilterTopN(System.Int32,System.Windows.Forms.DataVisualization.Charting.Series)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilterTopN (pointCount As Integer, inputSeries As Series)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FilterTopN(int pointCount, System::Windows::Forms::DataVisualization::Charting::Series ^ inputSeries);" />
      <MemberSignature Language="F#" Value="member this.FilterTopN : int * System.Windows.Forms.DataVisualization.Charting.Series -&gt; unit" Usage="dataManipulator.FilterTopN (pointCount, inputSeries)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pointCount" Type="System.Int32" />
        <Parameter Name="inputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="pointCount"><span data-ttu-id="ac509-224">Número de puntos de datos que no quitará la operación de filtrado.</span><span class="sxs-lookup"><span data-stu-id="ac509-224">The number of data points that the filtering operation will not remove.</span></span></param>
        <param name="inputSeries"><span data-ttu-id="ac509-225">Objeto <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> que se va a filtrar.</span><span class="sxs-lookup"><span data-stu-id="ac509-225">The <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> object to be filtered.</span></span></param>
        <summary><span data-ttu-id="ac509-226">Filtra todos los puntos de datos de una serie excepto un número de puntos especificado con los primeros valores Y más grandes.</span><span class="sxs-lookup"><span data-stu-id="ac509-226">Filters all data points in a series except for a specified number of points with the largest first Y-values.</span></span> <span data-ttu-id="ac509-227">El objeto <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> que se filtra se usa para almacenar los datos modificados.</span><span class="sxs-lookup"><span data-stu-id="ac509-227">The <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> object that is filtered is used to store the modified data.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterTopN">
      <MemberSignature Language="C#" Value="public void FilterTopN (int pointCount, string inputSeriesNames, string outputSeriesNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FilterTopN(int32 pointCount, string inputSeriesNames, string outputSeriesNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.FilterTopN(System.Int32,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilterTopN (pointCount As Integer, inputSeriesNames As String, outputSeriesNames As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FilterTopN(int pointCount, System::String ^ inputSeriesNames, System::String ^ outputSeriesNames);" />
      <MemberSignature Language="F#" Value="member this.FilterTopN : int * string * string -&gt; unit" Usage="dataManipulator.FilterTopN (pointCount, inputSeriesNames, outputSeriesNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pointCount" Type="System.Int32" />
        <Parameter Name="inputSeriesNames" Type="System.String" />
        <Parameter Name="outputSeriesNames" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pointCount"><span data-ttu-id="ac509-228">Número de puntos de datos que no quitará la operación de filtrado.</span><span class="sxs-lookup"><span data-stu-id="ac509-228">The number of data points that the filtering operation will not remove.</span></span></param>
        <param name="inputSeriesNames"><span data-ttu-id="ac509-229">Lista separada por comas de nombres de los objetos <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> que se van a filtrar.</span><span class="sxs-lookup"><span data-stu-id="ac509-229">A comma-separated list of names of the <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> to be filtered.</span></span></param>
        <param name="outputSeriesNames"><span data-ttu-id="ac509-230">Lista separada por comas de nombres de los objetos <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> que almacenan los datos filtrados.</span><span class="sxs-lookup"><span data-stu-id="ac509-230">A comma-separated list of names of the <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> that store the filtered data.</span></span> <span data-ttu-id="ac509-231">Asegúrese de que el número de series de salida coincide con el número de series de entrada; de lo contrario se iniciará una excepción.</span><span class="sxs-lookup"><span data-stu-id="ac509-231">Make sure that the number of output series matches the number of input series, otherwise an exception will be thrown.</span></span></param>
        <summary><span data-ttu-id="ac509-232">Filtra todos los puntos de datos de una o más series, excepto un número de puntos especificado.</span><span class="sxs-lookup"><span data-stu-id="ac509-232">Filters all data points in one or more series except for a specified number of points.</span></span> <span data-ttu-id="ac509-233">Los puntos que no se filtran corresponden a los puntos de la primera serie que tienen los primeros valores Y más grandes.</span><span class="sxs-lookup"><span data-stu-id="ac509-233">The points that aren't filtered correspond to points in the first series that have the largest first Y-values.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterTopN">
      <MemberSignature Language="C#" Value="public void FilterTopN (int pointCount, System.Windows.Forms.DataVisualization.Charting.Series inputSeries, System.Windows.Forms.DataVisualization.Charting.Series outputSeries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FilterTopN(int32 pointCount, class System.Windows.Forms.DataVisualization.Charting.Series inputSeries, class System.Windows.Forms.DataVisualization.Charting.Series outputSeries) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.FilterTopN(System.Int32,System.Windows.Forms.DataVisualization.Charting.Series,System.Windows.Forms.DataVisualization.Charting.Series)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilterTopN (pointCount As Integer, inputSeries As Series, outputSeries As Series)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FilterTopN(int pointCount, System::Windows::Forms::DataVisualization::Charting::Series ^ inputSeries, System::Windows::Forms::DataVisualization::Charting::Series ^ outputSeries);" />
      <MemberSignature Language="F#" Value="member this.FilterTopN : int * System.Windows.Forms.DataVisualization.Charting.Series * System.Windows.Forms.DataVisualization.Charting.Series -&gt; unit" Usage="dataManipulator.FilterTopN (pointCount, inputSeries, outputSeries)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pointCount" Type="System.Int32" />
        <Parameter Name="inputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
        <Parameter Name="outputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="pointCount"><span data-ttu-id="ac509-234">Número de puntos de datos que no quitará la operación de filtrado.</span><span class="sxs-lookup"><span data-stu-id="ac509-234">The number of data points that the filtering operation will not remove.</span></span></param>
        <param name="inputSeries"><span data-ttu-id="ac509-235">Objeto <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> que se va a filtrar.</span><span class="sxs-lookup"><span data-stu-id="ac509-235">The <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> object to be filtered.</span></span></param>
        <param name="outputSeries"><span data-ttu-id="ac509-236">Objeto <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> que almacena los datos filtrados.</span><span class="sxs-lookup"><span data-stu-id="ac509-236">A <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> object that stores the filtered data.</span></span> <span data-ttu-id="ac509-237">Si la serie no existe, se iniciará una excepción.</span><span class="sxs-lookup"><span data-stu-id="ac509-237">If the series does not exist, an exception will be thrown.</span></span></param>
        <summary><span data-ttu-id="ac509-238">Filtra todos los puntos de datos de una serie excepto un número de puntos especificado con los primeros valores Y más grandes.</span><span class="sxs-lookup"><span data-stu-id="ac509-238">Filters all data points in a series except for a specified number of points with the largest first Y-values.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterTopN">
      <MemberSignature Language="C#" Value="public void FilterTopN (int pointCount, string inputSeriesNames, string outputSeriesNames, string usingValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FilterTopN(int32 pointCount, string inputSeriesNames, string outputSeriesNames, string usingValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.FilterTopN(System.Int32,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilterTopN (pointCount As Integer, inputSeriesNames As String, outputSeriesNames As String, usingValue As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FilterTopN(int pointCount, System::String ^ inputSeriesNames, System::String ^ outputSeriesNames, System::String ^ usingValue);" />
      <MemberSignature Language="F#" Value="member this.FilterTopN : int * string * string * string -&gt; unit" Usage="dataManipulator.FilterTopN (pointCount, inputSeriesNames, outputSeriesNames, usingValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pointCount" Type="System.Int32" />
        <Parameter Name="inputSeriesNames" Type="System.String" />
        <Parameter Name="outputSeriesNames" Type="System.String" />
        <Parameter Name="usingValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pointCount"><span data-ttu-id="ac509-239">Número de puntos de datos que no quitará la operación de filtrado.</span><span class="sxs-lookup"><span data-stu-id="ac509-239">The number of data points that the filtering operation will not remove.</span></span></param>
        <param name="inputSeriesNames"><span data-ttu-id="ac509-240">Lista separada por comas de nombres de los objetos <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> que se van a filtrar.</span><span class="sxs-lookup"><span data-stu-id="ac509-240">A comma-separated list of names of the <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> to be filtered.</span></span></param>
        <param name="outputSeriesNames"><span data-ttu-id="ac509-241">Lista separada por comas de nombres de los objetos <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> que almacenan los datos filtrados.</span><span class="sxs-lookup"><span data-stu-id="ac509-241">A comma-separated list of names of the <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> that store the filtered data.</span></span> <span data-ttu-id="ac509-242">Asegúrese de que el número de series de salida coincide con el número de series de entrada; de lo contrario se iniciará una excepción.</span><span class="sxs-lookup"><span data-stu-id="ac509-242">Make sure that the number of output series matches the number of input series, otherwise an exception will be thrown.</span></span></param>
        <param name="usingValue"><span data-ttu-id="ac509-243">Valor de punto de datos al que se va a aplicar la regla de filtrado.</span><span class="sxs-lookup"><span data-stu-id="ac509-243">The data point value that the filtering rule is applied to.</span></span> <span data-ttu-id="ac509-244">Puede ser X, Y, Y2, Y3, etc.</span><span class="sxs-lookup"><span data-stu-id="ac509-244">Can be X, Y, Y2, Y3, and so forth.</span></span></param>
        <summary><span data-ttu-id="ac509-245">Filtra todos los puntos de datos de una o más series, excepto un número de puntos especificado.</span><span class="sxs-lookup"><span data-stu-id="ac509-245">Filters all data points in one or more series except for a specified number of points.</span></span> <span data-ttu-id="ac509-246">Los puntos que no se filtran corresponden a los puntos de la primera serie que tienen los valores más grandes.</span><span class="sxs-lookup"><span data-stu-id="ac509-246">The points that are not filtered correspond to points in the first series that have the largest values.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterTopN">
      <MemberSignature Language="C#" Value="public void FilterTopN (int pointCount, System.Windows.Forms.DataVisualization.Charting.Series inputSeries, System.Windows.Forms.DataVisualization.Charting.Series outputSeries, string usingValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FilterTopN(int32 pointCount, class System.Windows.Forms.DataVisualization.Charting.Series inputSeries, class System.Windows.Forms.DataVisualization.Charting.Series outputSeries, string usingValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.FilterTopN(System.Int32,System.Windows.Forms.DataVisualization.Charting.Series,System.Windows.Forms.DataVisualization.Charting.Series,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilterTopN (pointCount As Integer, inputSeries As Series, outputSeries As Series, usingValue As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FilterTopN(int pointCount, System::Windows::Forms::DataVisualization::Charting::Series ^ inputSeries, System::Windows::Forms::DataVisualization::Charting::Series ^ outputSeries, System::String ^ usingValue);" />
      <MemberSignature Language="F#" Value="member this.FilterTopN : int * System.Windows.Forms.DataVisualization.Charting.Series * System.Windows.Forms.DataVisualization.Charting.Series * string -&gt; unit" Usage="dataManipulator.FilterTopN (pointCount, inputSeries, outputSeries, usingValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pointCount" Type="System.Int32" />
        <Parameter Name="inputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
        <Parameter Name="outputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
        <Parameter Name="usingValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pointCount"><span data-ttu-id="ac509-247">Número de puntos de datos que no quitará la operación de filtrado.</span><span class="sxs-lookup"><span data-stu-id="ac509-247">The number of data points that the filtering operation will not remove.</span></span></param>
        <param name="inputSeries"><span data-ttu-id="ac509-248">Objeto <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> que se va a filtrar.</span><span class="sxs-lookup"><span data-stu-id="ac509-248">The <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> object to be filtered.</span></span></param>
        <param name="outputSeries"><span data-ttu-id="ac509-249">Objeto <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> que almacena los datos filtrados.</span><span class="sxs-lookup"><span data-stu-id="ac509-249">A <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> object that stores the filtered data.</span></span> <span data-ttu-id="ac509-250">Si la serie no existe, se iniciará una excepción.</span><span class="sxs-lookup"><span data-stu-id="ac509-250">If the series does not exist, an exception will be thrown.</span></span></param>
        <param name="usingValue"><span data-ttu-id="ac509-251">Valor de punto de datos al que se va a aplicar la regla de filtrado.</span><span class="sxs-lookup"><span data-stu-id="ac509-251">The data point value that the filtering rule is applied to.</span></span> <span data-ttu-id="ac509-252">Puede ser X, Y, Y2, Y3, etc.</span><span class="sxs-lookup"><span data-stu-id="ac509-252">Can be X, Y, Y2, Y3, and so forth.</span></span></param>
        <summary><span data-ttu-id="ac509-253">Filtra todos los puntos de datos de una serie excepto un número de puntos especificado con los valores más grandes.</span><span class="sxs-lookup"><span data-stu-id="ac509-253">Filters all data points in a series except for a specified number of points with the largest values.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterTopN">
      <MemberSignature Language="C#" Value="public void FilterTopN (int pointCount, string inputSeriesNames, string outputSeriesNames, string usingValue, bool getTopValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FilterTopN(int32 pointCount, string inputSeriesNames, string outputSeriesNames, string usingValue, bool getTopValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.FilterTopN(System.Int32,System.String,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilterTopN (pointCount As Integer, inputSeriesNames As String, outputSeriesNames As String, usingValue As String, getTopValues As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FilterTopN(int pointCount, System::String ^ inputSeriesNames, System::String ^ outputSeriesNames, System::String ^ usingValue, bool getTopValues);" />
      <MemberSignature Language="F#" Value="member this.FilterTopN : int * string * string * string * bool -&gt; unit" Usage="dataManipulator.FilterTopN (pointCount, inputSeriesNames, outputSeriesNames, usingValue, getTopValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pointCount" Type="System.Int32" />
        <Parameter Name="inputSeriesNames" Type="System.String" />
        <Parameter Name="outputSeriesNames" Type="System.String" />
        <Parameter Name="usingValue" Type="System.String" />
        <Parameter Name="getTopValues" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="pointCount"><span data-ttu-id="ac509-254">Número de puntos de datos que no quitará la operación de filtrado.</span><span class="sxs-lookup"><span data-stu-id="ac509-254">The number of data points that the filtering operation will not remove.</span></span></param>
        <param name="inputSeriesNames"><span data-ttu-id="ac509-255">Lista separada por comas de nombres de los objetos <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> que se van a filtrar.</span><span class="sxs-lookup"><span data-stu-id="ac509-255">A comma-separated list of names of the <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> to be filtered.</span></span></param>
        <param name="outputSeriesNames"><span data-ttu-id="ac509-256">Lista separada por comas de nombres de los objetos <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> que almacenan los datos filtrados.</span><span class="sxs-lookup"><span data-stu-id="ac509-256">A comma-separated list of names of the <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> that store the filtered data.</span></span> <span data-ttu-id="ac509-257">Asegúrese de que el número de series de salida coincide con el número de series de entrada; de lo contrario se iniciará una excepción.</span><span class="sxs-lookup"><span data-stu-id="ac509-257">Make sure that the number of output series matches the number of input series, otherwise an exception will be thrown.</span></span></param>
        <param name="usingValue"><span data-ttu-id="ac509-258">Valor de punto de datos al que se va a aplicar la regla de filtrado.</span><span class="sxs-lookup"><span data-stu-id="ac509-258">The data point value that the filtering rule is applied to.</span></span> <span data-ttu-id="ac509-259">Puede ser X, Y, Y2, Y3, etc.</span><span class="sxs-lookup"><span data-stu-id="ac509-259">Can be X, Y, Y2, Y3, and so forth.</span></span></param>
        <param name="getTopValues"><span data-ttu-id="ac509-260">Es <see langword="true" /> si se conservan los valores más grandes; es <see langword="false" /> si se conservan los valores más pequeños.</span><span class="sxs-lookup"><span data-stu-id="ac509-260"><see langword="true" /> if the largest values are kept; <see langword="false" /> if the smallest values are kept.</span></span></param>
        <summary><span data-ttu-id="ac509-261">Filtra todos los puntos de datos de una o más series, excepto un número de puntos especificado.</span><span class="sxs-lookup"><span data-stu-id="ac509-261">Filters all data points in one or more series except for a specified number of points.</span></span> <span data-ttu-id="ac509-262">Los puntos que no se filtran corresponden a los puntos de la primera serie de entrada que tienen los valores más grandes o más pequeños.</span><span class="sxs-lookup"><span data-stu-id="ac509-262">The points that are not filtered correspond to points in the first input series that have the largest or smallest values.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterTopN">
      <MemberSignature Language="C#" Value="public void FilterTopN (int pointCount, System.Windows.Forms.DataVisualization.Charting.Series inputSeries, System.Windows.Forms.DataVisualization.Charting.Series outputSeries, string usingValue, bool getTopValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FilterTopN(int32 pointCount, class System.Windows.Forms.DataVisualization.Charting.Series inputSeries, class System.Windows.Forms.DataVisualization.Charting.Series outputSeries, string usingValue, bool getTopValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.FilterTopN(System.Int32,System.Windows.Forms.DataVisualization.Charting.Series,System.Windows.Forms.DataVisualization.Charting.Series,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FilterTopN (pointCount As Integer, inputSeries As Series, outputSeries As Series, usingValue As String, getTopValues As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FilterTopN(int pointCount, System::Windows::Forms::DataVisualization::Charting::Series ^ inputSeries, System::Windows::Forms::DataVisualization::Charting::Series ^ outputSeries, System::String ^ usingValue, bool getTopValues);" />
      <MemberSignature Language="F#" Value="member this.FilterTopN : int * System.Windows.Forms.DataVisualization.Charting.Series * System.Windows.Forms.DataVisualization.Charting.Series * string * bool -&gt; unit" Usage="dataManipulator.FilterTopN (pointCount, inputSeries, outputSeries, usingValue, getTopValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pointCount" Type="System.Int32" />
        <Parameter Name="inputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
        <Parameter Name="outputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
        <Parameter Name="usingValue" Type="System.String" />
        <Parameter Name="getTopValues" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="pointCount"><span data-ttu-id="ac509-263">Número de puntos de datos que no quitará la operación de filtrado.</span><span class="sxs-lookup"><span data-stu-id="ac509-263">The number of data points that the filtering operation will not remove.</span></span></param>
        <param name="inputSeries"><span data-ttu-id="ac509-264">Objeto <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> que se va a filtrar.</span><span class="sxs-lookup"><span data-stu-id="ac509-264">The <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> object to be filtered.</span></span></param>
        <param name="outputSeries"><span data-ttu-id="ac509-265">Objeto <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> que almacena los datos filtrados.</span><span class="sxs-lookup"><span data-stu-id="ac509-265">A <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> object that stores the filtered data.</span></span> <span data-ttu-id="ac509-266">Si la serie no existe, se iniciará una excepción.</span><span class="sxs-lookup"><span data-stu-id="ac509-266">If the series does not exist, an exception will be thrown.</span></span></param>
        <param name="usingValue"><span data-ttu-id="ac509-267">Valor de punto de datos al que se va a aplicar la regla de filtrado.</span><span class="sxs-lookup"><span data-stu-id="ac509-267">The data point value that the filtering rule is applied to.</span></span> <span data-ttu-id="ac509-268">Puede ser X, Y, Y2, Y3, etc.</span><span class="sxs-lookup"><span data-stu-id="ac509-268">Can be X, Y, Y2, Y3, and so forth.</span></span></param>
        <param name="getTopValues"><span data-ttu-id="ac509-269">Es <see langword="true" /> si se conservan los valores más grandes; es <see langword="false" /> si se conservan los valores más pequeños.</span><span class="sxs-lookup"><span data-stu-id="ac509-269"><see langword="true" /> if the largest values are kept; <see langword="false" /> if the smallest values are kept.</span></span></param>
        <summary><span data-ttu-id="ac509-270">Filtra todos los puntos de datos de una serie excepto un número de puntos especificado con los valores más pequeños o más grandes.</span><span class="sxs-lookup"><span data-stu-id="ac509-270">Filters all data points in a series except for a specified number of points with the smallest or largest values.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Group">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ac509-271">Agrupa puntos de datos de una o más series usando una o más fórmulas.</span><span class="sxs-lookup"><span data-stu-id="ac509-271">Groups data points for one or more series, using one or more formulas.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Group">
      <MemberSignature Language="C#" Value="public void Group (string formula, double interval, System.Windows.Forms.DataVisualization.Charting.IntervalType intervalType, string inputSeriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Group(string formula, float64 interval, valuetype System.Windows.Forms.DataVisualization.Charting.IntervalType intervalType, string inputSeriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.Group(System.String,System.Double,System.Windows.Forms.DataVisualization.Charting.IntervalType,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Group(System::String ^ formula, double interval, System::Windows::Forms::DataVisualization::Charting::IntervalType intervalType, System::String ^ inputSeriesName);" />
      <MemberSignature Language="F#" Value="member this.Group : string * double * System.Windows.Forms.DataVisualization.Charting.IntervalType * string -&gt; unit" Usage="dataManipulator.Group (formula, interval, intervalType, inputSeriesName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formula" Type="System.String" />
        <Parameter Name="interval" Type="System.Double" />
        <Parameter Name="intervalType" Type="System.Windows.Forms.DataVisualization.Charting.IntervalType" />
        <Parameter Name="inputSeriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="formula"><span data-ttu-id="ac509-272">Lista separada por comas de una o más fórmulas que se van a usar para calcular los valores de punto de datos agrupados.</span><span class="sxs-lookup"><span data-stu-id="ac509-272">A comma-separated list of one or more formulas to be used for calculating the grouped data point values.</span></span></param>
        <param name="interval"><span data-ttu-id="ac509-273">Tamaño del intervalo en el que se ha comprobado si faltan puntos de datos.</span><span class="sxs-lookup"><span data-stu-id="ac509-273">The size of the interval checked for missing data points.</span></span></param>
        <param name="intervalType"><span data-ttu-id="ac509-274">Unidad de medida para el parámetro <paramref name="interval" />.</span><span class="sxs-lookup"><span data-stu-id="ac509-274">The unit of measurement for the <paramref name="interval" /> parameter.</span></span></param>
        <param name="inputSeriesName"><span data-ttu-id="ac509-275">Lista separada por comas de nombres de los objetos <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> que se van a agrupar.</span><span class="sxs-lookup"><span data-stu-id="ac509-275">A comma-separated list of names of the <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> to be grouped.</span></span></param>
        <summary><span data-ttu-id="ac509-276">Agrupa puntos de datos de una o más series usando una o más fórmulas.</span><span class="sxs-lookup"><span data-stu-id="ac509-276">Groups data points for one or more series, using one or more formulas.</span></span> <span data-ttu-id="ac509-277">Las series se borran de los datos originales y se usan para almacenar los nuevos puntos de datos.</span><span class="sxs-lookup"><span data-stu-id="ac509-277">Series are cleared of their original data and used to store the new data points.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Group">
      <MemberSignature Language="C#" Value="public void Group (string formula, double interval, System.Windows.Forms.DataVisualization.Charting.IntervalType intervalType, System.Windows.Forms.DataVisualization.Charting.Series inputSeries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Group(string formula, float64 interval, valuetype System.Windows.Forms.DataVisualization.Charting.IntervalType intervalType, class System.Windows.Forms.DataVisualization.Charting.Series inputSeries) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.Group(System.String,System.Double,System.Windows.Forms.DataVisualization.Charting.IntervalType,System.Windows.Forms.DataVisualization.Charting.Series)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Group(System::String ^ formula, double interval, System::Windows::Forms::DataVisualization::Charting::IntervalType intervalType, System::Windows::Forms::DataVisualization::Charting::Series ^ inputSeries);" />
      <MemberSignature Language="F#" Value="member this.Group : string * double * System.Windows.Forms.DataVisualization.Charting.IntervalType * System.Windows.Forms.DataVisualization.Charting.Series -&gt; unit" Usage="dataManipulator.Group (formula, interval, intervalType, inputSeries)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formula" Type="System.String" />
        <Parameter Name="interval" Type="System.Double" />
        <Parameter Name="intervalType" Type="System.Windows.Forms.DataVisualization.Charting.IntervalType" />
        <Parameter Name="inputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="formula"><span data-ttu-id="ac509-278">Lista separada por comas de una o más fórmulas que se van a usar para calcular los valores de punto de datos agrupados.</span><span class="sxs-lookup"><span data-stu-id="ac509-278">A comma-separated list of one or more formulas to be used for calculating the grouped data point values.</span></span></param>
        <param name="interval"><span data-ttu-id="ac509-279">Tamaño del intervalo en el que se ha comprobado si faltan puntos de datos.</span><span class="sxs-lookup"><span data-stu-id="ac509-279">The size of the interval checked for missing data points.</span></span></param>
        <param name="intervalType"><span data-ttu-id="ac509-280">Unidad de medida para el parámetro <paramref name="interval" />.</span><span class="sxs-lookup"><span data-stu-id="ac509-280">The unit of measurement for the <paramref name="interval" /> parameter.</span></span></param>
        <param name="inputSeries"><span data-ttu-id="ac509-281">Objeto <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> que se va a agrupar.</span><span class="sxs-lookup"><span data-stu-id="ac509-281">The <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> object to be grouped.</span></span></param>
        <summary><span data-ttu-id="ac509-282">Agrupa puntos de datos de una serie usando una o más fórmulas.</span><span class="sxs-lookup"><span data-stu-id="ac509-282">Groups data points in a series using one or more formulas.</span></span> <span data-ttu-id="ac509-283">La serie que se agrupa se borra de sus datos originales y se usa para almacenar los nuevos puntos de datos.</span><span class="sxs-lookup"><span data-stu-id="ac509-283">The series that is grouped is cleared of its original data, and used to store the new data points.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Group">
      <MemberSignature Language="C#" Value="public void Group (string formula, double interval, System.Windows.Forms.DataVisualization.Charting.IntervalType intervalType, string inputSeriesName, string outputSeriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Group(string formula, float64 interval, valuetype System.Windows.Forms.DataVisualization.Charting.IntervalType intervalType, string inputSeriesName, string outputSeriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.Group(System.String,System.Double,System.Windows.Forms.DataVisualization.Charting.IntervalType,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Group(System::String ^ formula, double interval, System::Windows::Forms::DataVisualization::Charting::IntervalType intervalType, System::String ^ inputSeriesName, System::String ^ outputSeriesName);" />
      <MemberSignature Language="F#" Value="member this.Group : string * double * System.Windows.Forms.DataVisualization.Charting.IntervalType * string * string -&gt; unit" Usage="dataManipulator.Group (formula, interval, intervalType, inputSeriesName, outputSeriesName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formula" Type="System.String" />
        <Parameter Name="interval" Type="System.Double" />
        <Parameter Name="intervalType" Type="System.Windows.Forms.DataVisualization.Charting.IntervalType" />
        <Parameter Name="inputSeriesName" Type="System.String" />
        <Parameter Name="outputSeriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="formula"><span data-ttu-id="ac509-284">Lista separada por comas de una o más fórmulas que se van a usar para calcular los valores de punto de datos agrupados.</span><span class="sxs-lookup"><span data-stu-id="ac509-284">A comma-separated list of one or more formulas to be used for calculating the grouped data point values.</span></span></param>
        <param name="interval"><span data-ttu-id="ac509-285">Tamaño del intervalo en el que se ha comprobado si faltan puntos de datos.</span><span class="sxs-lookup"><span data-stu-id="ac509-285">The size of the interval checked for missing data points.</span></span></param>
        <param name="intervalType"><span data-ttu-id="ac509-286">Unidad de medida para el parámetro <paramref name="interval" />.</span><span class="sxs-lookup"><span data-stu-id="ac509-286">The unit of measurement for the <paramref name="interval" /> parameter.</span></span></param>
        <param name="inputSeriesName"><span data-ttu-id="ac509-287">Lista separada por comas de nombres de los objetos <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> que se van a agrupar.</span><span class="sxs-lookup"><span data-stu-id="ac509-287">A comma-separated list of names of the <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> to be grouped.</span></span></param>
        <param name="outputSeriesName"><span data-ttu-id="ac509-288">Lista separada por comas de nombres de los objetos <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> que almacenarán los puntos de datos agrupados.</span><span class="sxs-lookup"><span data-stu-id="ac509-288">A comma-separated list of names of the <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> that will store the grouped data points.</span></span> <span data-ttu-id="ac509-289">Si una serie no existe, se creará; si existe, se borrarán de ella primero todos los datos antes de almacenar los puntos de datos agrupados.</span><span class="sxs-lookup"><span data-stu-id="ac509-289">If a series does not exist, it will be created; if it does exist, it will first be cleared of all data before storing grouped data points.</span></span> <span data-ttu-id="ac509-290">El número de series de salida debe ser igual al número de series de entrada; de lo contrario se iniciará una excepción.</span><span class="sxs-lookup"><span data-stu-id="ac509-290">The number of output series must equal the number of input series, or an exception will be thrown.</span></span></param>
        <summary><span data-ttu-id="ac509-291">Agrupa puntos de datos de una o más series usando una o más fórmulas.</span><span class="sxs-lookup"><span data-stu-id="ac509-291">Groups data points for one or more series, using one or more formulas.</span></span> <span data-ttu-id="ac509-292">Se usan series de salida para almacenar los puntos de datos agrupados.</span><span class="sxs-lookup"><span data-stu-id="ac509-292">Output series are used to store the grouped data points.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Group">
      <MemberSignature Language="C#" Value="public void Group (string formula, double interval, System.Windows.Forms.DataVisualization.Charting.IntervalType intervalType, System.Windows.Forms.DataVisualization.Charting.Series inputSeries, System.Windows.Forms.DataVisualization.Charting.Series outputSeries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Group(string formula, float64 interval, valuetype System.Windows.Forms.DataVisualization.Charting.IntervalType intervalType, class System.Windows.Forms.DataVisualization.Charting.Series inputSeries, class System.Windows.Forms.DataVisualization.Charting.Series outputSeries) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.Group(System.String,System.Double,System.Windows.Forms.DataVisualization.Charting.IntervalType,System.Windows.Forms.DataVisualization.Charting.Series,System.Windows.Forms.DataVisualization.Charting.Series)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Group(System::String ^ formula, double interval, System::Windows::Forms::DataVisualization::Charting::IntervalType intervalType, System::Windows::Forms::DataVisualization::Charting::Series ^ inputSeries, System::Windows::Forms::DataVisualization::Charting::Series ^ outputSeries);" />
      <MemberSignature Language="F#" Value="member this.Group : string * double * System.Windows.Forms.DataVisualization.Charting.IntervalType * System.Windows.Forms.DataVisualization.Charting.Series * System.Windows.Forms.DataVisualization.Charting.Series -&gt; unit" Usage="dataManipulator.Group (formula, interval, intervalType, inputSeries, outputSeries)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formula" Type="System.String" />
        <Parameter Name="interval" Type="System.Double" />
        <Parameter Name="intervalType" Type="System.Windows.Forms.DataVisualization.Charting.IntervalType" />
        <Parameter Name="inputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
        <Parameter Name="outputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="formula"><span data-ttu-id="ac509-293">Lista separada por comas de una o más fórmulas que se van a usar para calcular los valores de punto de datos agrupados.</span><span class="sxs-lookup"><span data-stu-id="ac509-293">A comma-separated list of one or more formulas to be used for calculating the grouped data point values.</span></span></param>
        <param name="interval"><span data-ttu-id="ac509-294">Tamaño del intervalo en el que se ha comprobado si faltan puntos de datos.</span><span class="sxs-lookup"><span data-stu-id="ac509-294">The size of the interval checked for missing data points.</span></span></param>
        <param name="intervalType"><span data-ttu-id="ac509-295">Unidad de medida para el parámetro <paramref name="interval" />.</span><span class="sxs-lookup"><span data-stu-id="ac509-295">The unit of measurement for the <paramref name="interval" /> parameter.</span></span></param>
        <param name="inputSeries"><span data-ttu-id="ac509-296">Objeto <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> que se va a agrupar.</span><span class="sxs-lookup"><span data-stu-id="ac509-296">The <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> object to be grouped.</span></span></param>
        <param name="outputSeries"><span data-ttu-id="ac509-297">Objeto <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> que almacenará los nuevos puntos de datos creados por la operación de agrupación.</span><span class="sxs-lookup"><span data-stu-id="ac509-297">The <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> that will store the new data points created by the grouping operation.</span></span> <span data-ttu-id="ac509-298">Si no existe, se iniciará una excepción.</span><span class="sxs-lookup"><span data-stu-id="ac509-298">If it does not exist, an exception will be thrown.</span></span></param>
        <summary><span data-ttu-id="ac509-299">Agrupa puntos de datos de una serie usando una o más fórmulas.</span><span class="sxs-lookup"><span data-stu-id="ac509-299">Groups data points in a series using one or more formulas.</span></span> <span data-ttu-id="ac509-300">Se usa una serie de salida para almacenar los puntos de datos agrupados.</span><span class="sxs-lookup"><span data-stu-id="ac509-300">An output series is used to store the grouped data points.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Group">
      <MemberSignature Language="C#" Value="public void Group (string formula, double interval, System.Windows.Forms.DataVisualization.Charting.IntervalType intervalType, double intervalOffset, System.Windows.Forms.DataVisualization.Charting.IntervalType intervalOffsetType, string inputSeriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Group(string formula, float64 interval, valuetype System.Windows.Forms.DataVisualization.Charting.IntervalType intervalType, float64 intervalOffset, valuetype System.Windows.Forms.DataVisualization.Charting.IntervalType intervalOffsetType, string inputSeriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.Group(System.String,System.Double,System.Windows.Forms.DataVisualization.Charting.IntervalType,System.Double,System.Windows.Forms.DataVisualization.Charting.IntervalType,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Group(System::String ^ formula, double interval, System::Windows::Forms::DataVisualization::Charting::IntervalType intervalType, double intervalOffset, System::Windows::Forms::DataVisualization::Charting::IntervalType intervalOffsetType, System::String ^ inputSeriesName);" />
      <MemberSignature Language="F#" Value="member this.Group : string * double * System.Windows.Forms.DataVisualization.Charting.IntervalType * double * System.Windows.Forms.DataVisualization.Charting.IntervalType * string -&gt; unit" Usage="dataManipulator.Group (formula, interval, intervalType, intervalOffset, intervalOffsetType, inputSeriesName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formula" Type="System.String" />
        <Parameter Name="interval" Type="System.Double" />
        <Parameter Name="intervalType" Type="System.Windows.Forms.DataVisualization.Charting.IntervalType" />
        <Parameter Name="intervalOffset" Type="System.Double" />
        <Parameter Name="intervalOffsetType" Type="System.Windows.Forms.DataVisualization.Charting.IntervalType" />
        <Parameter Name="inputSeriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="formula"><span data-ttu-id="ac509-301">Lista separada por comas de una o más fórmulas que se van a usar para calcular los valores de punto de datos agrupados.</span><span class="sxs-lookup"><span data-stu-id="ac509-301">A comma-separated list of one or more formulas to be used for calculating the grouped data point values.</span></span></param>
        <param name="interval"><span data-ttu-id="ac509-302">Tamaño del intervalo en el que se ha comprobado si faltan puntos de datos.</span><span class="sxs-lookup"><span data-stu-id="ac509-302">The size of the interval checked for missing data points.</span></span></param>
        <param name="intervalType"><span data-ttu-id="ac509-303">Unidad de medida para el parámetro <paramref name="interval" />.</span><span class="sxs-lookup"><span data-stu-id="ac509-303">The unit of measurement for the <paramref name="interval" /> parameter.</span></span></param>
        <param name="intervalOffset"><span data-ttu-id="ac509-304">Tamaño de desplazamiento del intervalo.</span><span class="sxs-lookup"><span data-stu-id="ac509-304">The interval offset size.</span></span></param>
        <param name="intervalOffsetType"><span data-ttu-id="ac509-305">Unidad de medida para el desplazamiento del intervalo.</span><span class="sxs-lookup"><span data-stu-id="ac509-305">The unit of measurement for the interval offset.</span></span></param>
        <param name="inputSeriesName"><span data-ttu-id="ac509-306">Lista separada por comas de nombres de los objetos <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> que se van a agrupar.</span><span class="sxs-lookup"><span data-stu-id="ac509-306">A comma-separated list of names of the <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> to be grouped.</span></span></param>
        <summary><span data-ttu-id="ac509-307">Agrupa puntos de datos de una o más series usando una o más fórmulas.</span><span class="sxs-lookup"><span data-stu-id="ac509-307">Groups data points for one or more series, using one or more formulas.</span></span> <span data-ttu-id="ac509-308">Las series se borran de los datos originales y se usan para almacenar los nuevos puntos de datos.</span><span class="sxs-lookup"><span data-stu-id="ac509-308">Series are cleared of their original data and used to store the new data points.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Group">
      <MemberSignature Language="C#" Value="public void Group (string formula, double interval, System.Windows.Forms.DataVisualization.Charting.IntervalType intervalType, double intervalOffset, System.Windows.Forms.DataVisualization.Charting.IntervalType intervalOffsetType, System.Windows.Forms.DataVisualization.Charting.Series inputSeries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Group(string formula, float64 interval, valuetype System.Windows.Forms.DataVisualization.Charting.IntervalType intervalType, float64 intervalOffset, valuetype System.Windows.Forms.DataVisualization.Charting.IntervalType intervalOffsetType, class System.Windows.Forms.DataVisualization.Charting.Series inputSeries) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.Group(System.String,System.Double,System.Windows.Forms.DataVisualization.Charting.IntervalType,System.Double,System.Windows.Forms.DataVisualization.Charting.IntervalType,System.Windows.Forms.DataVisualization.Charting.Series)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Group(System::String ^ formula, double interval, System::Windows::Forms::DataVisualization::Charting::IntervalType intervalType, double intervalOffset, System::Windows::Forms::DataVisualization::Charting::IntervalType intervalOffsetType, System::Windows::Forms::DataVisualization::Charting::Series ^ inputSeries);" />
      <MemberSignature Language="F#" Value="member this.Group : string * double * System.Windows.Forms.DataVisualization.Charting.IntervalType * double * System.Windows.Forms.DataVisualization.Charting.IntervalType * System.Windows.Forms.DataVisualization.Charting.Series -&gt; unit" Usage="dataManipulator.Group (formula, interval, intervalType, intervalOffset, intervalOffsetType, inputSeries)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formula" Type="System.String" />
        <Parameter Name="interval" Type="System.Double" />
        <Parameter Name="intervalType" Type="System.Windows.Forms.DataVisualization.Charting.IntervalType" />
        <Parameter Name="intervalOffset" Type="System.Double" />
        <Parameter Name="intervalOffsetType" Type="System.Windows.Forms.DataVisualization.Charting.IntervalType" />
        <Parameter Name="inputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="formula"><span data-ttu-id="ac509-309">Lista separada por comas de una o más fórmulas que se van a usar para calcular los valores de punto de datos agrupados.</span><span class="sxs-lookup"><span data-stu-id="ac509-309">A comma-separated list of one or more formulas to be used for calculating the grouped data point values.</span></span></param>
        <param name="interval"><span data-ttu-id="ac509-310">Tamaño del intervalo en el que se ha comprobado si faltan puntos de datos.</span><span class="sxs-lookup"><span data-stu-id="ac509-310">The size of the interval checked for missing data points.</span></span></param>
        <param name="intervalType"><span data-ttu-id="ac509-311">Unidad de medida para el parámetro <paramref name="interval" />.</span><span class="sxs-lookup"><span data-stu-id="ac509-311">The unit of measurement for the <paramref name="interval" /> parameter.</span></span></param>
        <param name="intervalOffset"><span data-ttu-id="ac509-312">Tamaño de desplazamiento del intervalo.</span><span class="sxs-lookup"><span data-stu-id="ac509-312">The interval offset size.</span></span></param>
        <param name="intervalOffsetType"><span data-ttu-id="ac509-313">Unidad de medida para el desplazamiento del intervalo.</span><span class="sxs-lookup"><span data-stu-id="ac509-313">The unit of measurement for the interval offset.</span></span></param>
        <param name="inputSeries"><span data-ttu-id="ac509-314">Objeto <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> que se va a agrupar.</span><span class="sxs-lookup"><span data-stu-id="ac509-314">The <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> object to be grouped.</span></span></param>
        <summary><span data-ttu-id="ac509-315">Agrupa puntos de datos de una serie usando una o más fórmulas.</span><span class="sxs-lookup"><span data-stu-id="ac509-315">Groups data points in a series using one or more formulas.</span></span> <span data-ttu-id="ac509-316">La serie que se agrupa se borra de sus datos originales y se usa para almacenar los nuevos puntos de datos.</span><span class="sxs-lookup"><span data-stu-id="ac509-316">The series that is grouped is cleared of its original data, and used to store the new data points.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Group">
      <MemberSignature Language="C#" Value="public void Group (string formula, double interval, System.Windows.Forms.DataVisualization.Charting.IntervalType intervalType, double intervalOffset, System.Windows.Forms.DataVisualization.Charting.IntervalType intervalOffsetType, string inputSeriesName, string outputSeriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Group(string formula, float64 interval, valuetype System.Windows.Forms.DataVisualization.Charting.IntervalType intervalType, float64 intervalOffset, valuetype System.Windows.Forms.DataVisualization.Charting.IntervalType intervalOffsetType, string inputSeriesName, string outputSeriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.Group(System.String,System.Double,System.Windows.Forms.DataVisualization.Charting.IntervalType,System.Double,System.Windows.Forms.DataVisualization.Charting.IntervalType,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Group(System::String ^ formula, double interval, System::Windows::Forms::DataVisualization::Charting::IntervalType intervalType, double intervalOffset, System::Windows::Forms::DataVisualization::Charting::IntervalType intervalOffsetType, System::String ^ inputSeriesName, System::String ^ outputSeriesName);" />
      <MemberSignature Language="F#" Value="member this.Group : string * double * System.Windows.Forms.DataVisualization.Charting.IntervalType * double * System.Windows.Forms.DataVisualization.Charting.IntervalType * string * string -&gt; unit" Usage="dataManipulator.Group (formula, interval, intervalType, intervalOffset, intervalOffsetType, inputSeriesName, outputSeriesName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formula" Type="System.String" />
        <Parameter Name="interval" Type="System.Double" />
        <Parameter Name="intervalType" Type="System.Windows.Forms.DataVisualization.Charting.IntervalType" />
        <Parameter Name="intervalOffset" Type="System.Double" />
        <Parameter Name="intervalOffsetType" Type="System.Windows.Forms.DataVisualization.Charting.IntervalType" />
        <Parameter Name="inputSeriesName" Type="System.String" />
        <Parameter Name="outputSeriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="formula"><span data-ttu-id="ac509-317">Lista separada por comas de una o más fórmulas que se van a usar para calcular los valores de punto de datos agrupados.</span><span class="sxs-lookup"><span data-stu-id="ac509-317">A comma-separated list of one or more formulas to be used for calculating the grouped data point values.</span></span></param>
        <param name="interval"><span data-ttu-id="ac509-318">Tamaño del intervalo en el que se ha comprobado si faltan puntos de datos.</span><span class="sxs-lookup"><span data-stu-id="ac509-318">The size of the interval checked for missing data points.</span></span></param>
        <param name="intervalType"><span data-ttu-id="ac509-319">Unidad de medida para el parámetro <paramref name="interval" />.</span><span class="sxs-lookup"><span data-stu-id="ac509-319">The unit of measurement for the <paramref name="interval" /> parameter.</span></span></param>
        <param name="intervalOffset"><span data-ttu-id="ac509-320">Tamaño de desplazamiento del intervalo.</span><span class="sxs-lookup"><span data-stu-id="ac509-320">The interval offset size.</span></span></param>
        <param name="intervalOffsetType"><span data-ttu-id="ac509-321">Unidad de medida para el desplazamiento del intervalo.</span><span class="sxs-lookup"><span data-stu-id="ac509-321">The unit of measurement for the interval offset.</span></span></param>
        <param name="inputSeriesName"><span data-ttu-id="ac509-322">Lista separada por comas de nombres de los objetos <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> que se van a agrupar.</span><span class="sxs-lookup"><span data-stu-id="ac509-322">A comma-separated list of names of the <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> to be grouped.</span></span></param>
        <param name="outputSeriesName"><span data-ttu-id="ac509-323">Lista separada por comas de nombres de los objetos <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> que almacenarán los puntos de datos agrupados.</span><span class="sxs-lookup"><span data-stu-id="ac509-323">A comma-separated list of names of the <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> that will store the grouped data points.</span></span> <span data-ttu-id="ac509-324">Si una serie no existe, se creará; si existe, se borrarán de ella primero todos los datos antes de almacenar los puntos de datos agrupados.</span><span class="sxs-lookup"><span data-stu-id="ac509-324">If a series does not exist, it will be created; if it does exist, it will first be cleared of all data before storing grouped data points.</span></span> <span data-ttu-id="ac509-325">El número de series de salida debe ser igual al número de series de entrada; de lo contrario se iniciará una excepción.</span><span class="sxs-lookup"><span data-stu-id="ac509-325">The number of output series must equal the number of input series, or an exception will be thrown.</span></span></param>
        <summary><span data-ttu-id="ac509-326">Agrupa puntos de datos de una o más series usando una o más fórmulas.</span><span class="sxs-lookup"><span data-stu-id="ac509-326">Groups data points for one or more series, using one or more formulas.</span></span> <span data-ttu-id="ac509-327">Se usan series de salida para almacenar los puntos de datos agrupados y se puede usar un desplazamiento para los intervalos.</span><span class="sxs-lookup"><span data-stu-id="ac509-327">Output series are used to store the grouped data points, and an offset can be used for intervals.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Group">
      <MemberSignature Language="C#" Value="public void Group (string formula, double interval, System.Windows.Forms.DataVisualization.Charting.IntervalType intervalType, double intervalOffset, System.Windows.Forms.DataVisualization.Charting.IntervalType intervalOffsetType, System.Windows.Forms.DataVisualization.Charting.Series inputSeries, System.Windows.Forms.DataVisualization.Charting.Series outputSeries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Group(string formula, float64 interval, valuetype System.Windows.Forms.DataVisualization.Charting.IntervalType intervalType, float64 intervalOffset, valuetype System.Windows.Forms.DataVisualization.Charting.IntervalType intervalOffsetType, class System.Windows.Forms.DataVisualization.Charting.Series inputSeries, class System.Windows.Forms.DataVisualization.Charting.Series outputSeries) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.Group(System.String,System.Double,System.Windows.Forms.DataVisualization.Charting.IntervalType,System.Double,System.Windows.Forms.DataVisualization.Charting.IntervalType,System.Windows.Forms.DataVisualization.Charting.Series,System.Windows.Forms.DataVisualization.Charting.Series)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Group(System::String ^ formula, double interval, System::Windows::Forms::DataVisualization::Charting::IntervalType intervalType, double intervalOffset, System::Windows::Forms::DataVisualization::Charting::IntervalType intervalOffsetType, System::Windows::Forms::DataVisualization::Charting::Series ^ inputSeries, System::Windows::Forms::DataVisualization::Charting::Series ^ outputSeries);" />
      <MemberSignature Language="F#" Value="member this.Group : string * double * System.Windows.Forms.DataVisualization.Charting.IntervalType * double * System.Windows.Forms.DataVisualization.Charting.IntervalType * System.Windows.Forms.DataVisualization.Charting.Series * System.Windows.Forms.DataVisualization.Charting.Series -&gt; unit" Usage="dataManipulator.Group (formula, interval, intervalType, intervalOffset, intervalOffsetType, inputSeries, outputSeries)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formula" Type="System.String" />
        <Parameter Name="interval" Type="System.Double" />
        <Parameter Name="intervalType" Type="System.Windows.Forms.DataVisualization.Charting.IntervalType" />
        <Parameter Name="intervalOffset" Type="System.Double" />
        <Parameter Name="intervalOffsetType" Type="System.Windows.Forms.DataVisualization.Charting.IntervalType" />
        <Parameter Name="inputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
        <Parameter Name="outputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="formula"><span data-ttu-id="ac509-328">Lista separada por comas de una o más fórmulas que se van a usar para calcular los valores de punto de datos agrupados.</span><span class="sxs-lookup"><span data-stu-id="ac509-328">A comma-separated list of one or more formulas to be used for calculating the grouped data point values.</span></span></param>
        <param name="interval"><span data-ttu-id="ac509-329">Tamaño del intervalo en el que se ha comprobado si faltan puntos de datos.</span><span class="sxs-lookup"><span data-stu-id="ac509-329">The size of the interval checked for missing data points.</span></span></param>
        <param name="intervalType"><span data-ttu-id="ac509-330">Unidad de medida para el parámetro <paramref name="interval" />.</span><span class="sxs-lookup"><span data-stu-id="ac509-330">The unit of measurement for the <paramref name="interval" /> parameter.</span></span></param>
        <param name="intervalOffset"><span data-ttu-id="ac509-331">Tamaño de desplazamiento del intervalo.</span><span class="sxs-lookup"><span data-stu-id="ac509-331">The interval offset size.</span></span></param>
        <param name="intervalOffsetType"><span data-ttu-id="ac509-332">Unidad de medida para el desplazamiento del intervalo.</span><span class="sxs-lookup"><span data-stu-id="ac509-332">The unit of measurement for the interval offset.</span></span></param>
        <param name="inputSeries"><span data-ttu-id="ac509-333">Objeto <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> que se va a agrupar.</span><span class="sxs-lookup"><span data-stu-id="ac509-333">The <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> object to be grouped.</span></span></param>
        <param name="outputSeries"><span data-ttu-id="ac509-334">Objeto <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> que almacenará los nuevos puntos de datos creados por la operación de agrupación.</span><span class="sxs-lookup"><span data-stu-id="ac509-334">The <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> that will store the new data points created by the grouping operation.</span></span> <span data-ttu-id="ac509-335">Si no existe, se iniciará una excepción.</span><span class="sxs-lookup"><span data-stu-id="ac509-335">If it does not exist, an exception will be thrown.</span></span></param>
        <summary><span data-ttu-id="ac509-336">Agrupa puntos de datos de una serie usando una o más fórmulas.</span><span class="sxs-lookup"><span data-stu-id="ac509-336">Groups data points in a series using one or more formulas.</span></span> <span data-ttu-id="ac509-337">Se usa una serie de salida para almacenar los puntos de datos agrupados y se puede usar un desplazamiento para los intervalos.</span><span class="sxs-lookup"><span data-stu-id="ac509-337">An output series is used to store the grouped data points, and an offset can be used for intervals.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GroupByAxisLabel">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ac509-338">Agrupa los puntos de datos de una o más series por etiquetas de eje usando una o más fórmulas.</span><span class="sxs-lookup"><span data-stu-id="ac509-338">Groups data points in one or more series by axis labels, using one or more formulas.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GroupByAxisLabel">
      <MemberSignature Language="C#" Value="public void GroupByAxisLabel (string formula, string inputSeriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GroupByAxisLabel(string formula, string inputSeriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.GroupByAxisLabel(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GroupByAxisLabel (formula As String, inputSeriesName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GroupByAxisLabel(System::String ^ formula, System::String ^ inputSeriesName);" />
      <MemberSignature Language="F#" Value="member this.GroupByAxisLabel : string * string -&gt; unit" Usage="dataManipulator.GroupByAxisLabel (formula, inputSeriesName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formula" Type="System.String" />
        <Parameter Name="inputSeriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="formula"><span data-ttu-id="ac509-339">Lista separada por comas de una o más fórmulas que se van a usar para calcular los valores de punto de datos agrupados.</span><span class="sxs-lookup"><span data-stu-id="ac509-339">A comma-separated list of one or more formulas to be used for calculating the grouped data point values.</span></span></param>
        <param name="inputSeriesName"><span data-ttu-id="ac509-340">Lista separada por comas de nombres del objeto <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> de entrada.</span><span class="sxs-lookup"><span data-stu-id="ac509-340">A comma-separated list of names of the input <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" />.</span></span></param>
        <summary><span data-ttu-id="ac509-341">Agrupa los puntos de datos de una o más series por etiquetas de eje usando una o más fórmulas.</span><span class="sxs-lookup"><span data-stu-id="ac509-341">Groups data points in one or more series by axis labels, using one or more formulas.</span></span> <span data-ttu-id="ac509-342">Se borran los valores de punto de datos originales y, a continuación, cada una de las series almacena sus nuevos puntos de datos agrupados.</span><span class="sxs-lookup"><span data-stu-id="ac509-342">Original data point values are cleared, and each of the series then stores its new grouped data points.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupByAxisLabel">
      <MemberSignature Language="C#" Value="public void GroupByAxisLabel (string formula, System.Windows.Forms.DataVisualization.Charting.Series inputSeries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GroupByAxisLabel(string formula, class System.Windows.Forms.DataVisualization.Charting.Series inputSeries) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.GroupByAxisLabel(System.String,System.Windows.Forms.DataVisualization.Charting.Series)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GroupByAxisLabel (formula As String, inputSeries As Series)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GroupByAxisLabel(System::String ^ formula, System::Windows::Forms::DataVisualization::Charting::Series ^ inputSeries);" />
      <MemberSignature Language="F#" Value="member this.GroupByAxisLabel : string * System.Windows.Forms.DataVisualization.Charting.Series -&gt; unit" Usage="dataManipulator.GroupByAxisLabel (formula, inputSeries)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formula" Type="System.String" />
        <Parameter Name="inputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="formula"><span data-ttu-id="ac509-343">Lista separada por comas de una o más fórmulas que se van a usar para calcular los valores de punto de datos agrupados.</span><span class="sxs-lookup"><span data-stu-id="ac509-343">A comma-separated list of one or more formulas to be used for calculating the grouped data point values.</span></span></param>
        <param name="inputSeries"><span data-ttu-id="ac509-344">Objeto <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> de entrada.</span><span class="sxs-lookup"><span data-stu-id="ac509-344">The input <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" />.</span></span></param>
        <summary><span data-ttu-id="ac509-345">Agrupa puntos de datos de una serie por etiquetas de eje usando una o más fórmulas.</span><span class="sxs-lookup"><span data-stu-id="ac509-345">Groups data points in a series by axis labels, using one or more formulas.</span></span> <span data-ttu-id="ac509-346">Se borran los valores de punto de datos originales y, a continuación, la serie almacena los nuevos puntos de datos agrupados.</span><span class="sxs-lookup"><span data-stu-id="ac509-346">Original data point values are cleared, and the series then stores the new grouped data points.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupByAxisLabel">
      <MemberSignature Language="C#" Value="public void GroupByAxisLabel (string formula, string inputSeriesName, string outputSeriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GroupByAxisLabel(string formula, string inputSeriesName, string outputSeriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.GroupByAxisLabel(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GroupByAxisLabel (formula As String, inputSeriesName As String, outputSeriesName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GroupByAxisLabel(System::String ^ formula, System::String ^ inputSeriesName, System::String ^ outputSeriesName);" />
      <MemberSignature Language="F#" Value="member this.GroupByAxisLabel : string * string * string -&gt; unit" Usage="dataManipulator.GroupByAxisLabel (formula, inputSeriesName, outputSeriesName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formula" Type="System.String" />
        <Parameter Name="inputSeriesName" Type="System.String" />
        <Parameter Name="outputSeriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="formula"><span data-ttu-id="ac509-347">Lista separada por comas de una o más fórmulas que se van a usar para calcular los valores de punto de datos agrupados.</span><span class="sxs-lookup"><span data-stu-id="ac509-347">A comma-separated list of one or more formulas to be used for calculating the grouped data point values.</span></span></param>
        <param name="inputSeriesName"><span data-ttu-id="ac509-348">Lista separada por comas de nombres del objeto <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> de entrada.</span><span class="sxs-lookup"><span data-stu-id="ac509-348">A comma-separated list of names of the input <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" />.</span></span></param>
        <param name="outputSeriesName"><span data-ttu-id="ac509-349">Lista separada por comas de nombres de los objetos <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> que almacenarán los puntos de datos agrupados.</span><span class="sxs-lookup"><span data-stu-id="ac509-349">A comma-separated list of names of the <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> that will store the grouped data points.</span></span> <span data-ttu-id="ac509-350">Si una serie no existe, se creará; si existe, se borrarán de ella primero todos los datos antes de almacenar los puntos de datos agrupados.</span><span class="sxs-lookup"><span data-stu-id="ac509-350">If a series does not exist, it will be created; if it does exist, it will first be cleared of all data before storing grouped data points.</span></span> <span data-ttu-id="ac509-351">El número de series de salida debe ser igual al número de series de entrada; de lo contrario se iniciará una excepción.</span><span class="sxs-lookup"><span data-stu-id="ac509-351">The number of output series must equal the number of input series, or an exception will be thrown.</span></span></param>
        <summary><span data-ttu-id="ac509-352">Agrupa los puntos de datos de una o más series por etiquetas de eje usando una o más fórmulas.</span><span class="sxs-lookup"><span data-stu-id="ac509-352">Groups data points in one or more series by axis labels, using one or more formulas.</span></span> <span data-ttu-id="ac509-353">Se usan series de salida para almacenar los puntos de datos agrupados.</span><span class="sxs-lookup"><span data-stu-id="ac509-353">Output series are used to store the grouped data points.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupByAxisLabel">
      <MemberSignature Language="C#" Value="public void GroupByAxisLabel (string formula, System.Windows.Forms.DataVisualization.Charting.Series inputSeries, System.Windows.Forms.DataVisualization.Charting.Series outputSeries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GroupByAxisLabel(string formula, class System.Windows.Forms.DataVisualization.Charting.Series inputSeries, class System.Windows.Forms.DataVisualization.Charting.Series outputSeries) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.GroupByAxisLabel(System.String,System.Windows.Forms.DataVisualization.Charting.Series,System.Windows.Forms.DataVisualization.Charting.Series)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GroupByAxisLabel (formula As String, inputSeries As Series, outputSeries As Series)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GroupByAxisLabel(System::String ^ formula, System::Windows::Forms::DataVisualization::Charting::Series ^ inputSeries, System::Windows::Forms::DataVisualization::Charting::Series ^ outputSeries);" />
      <MemberSignature Language="F#" Value="member this.GroupByAxisLabel : string * System.Windows.Forms.DataVisualization.Charting.Series * System.Windows.Forms.DataVisualization.Charting.Series -&gt; unit" Usage="dataManipulator.GroupByAxisLabel (formula, inputSeries, outputSeries)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formula" Type="System.String" />
        <Parameter Name="inputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
        <Parameter Name="outputSeries" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="formula"><span data-ttu-id="ac509-354">Lista separada por comas de una o más fórmulas que se van a usar para calcular los valores de punto de datos agrupados.</span><span class="sxs-lookup"><span data-stu-id="ac509-354">A comma-separated list of one or more formulas to be used for calculating the grouped data point values.</span></span></param>
        <param name="inputSeries"><span data-ttu-id="ac509-355">Objeto <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> de entrada que se va a agrupar.</span><span class="sxs-lookup"><span data-stu-id="ac509-355">The input <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> to be grouped.</span></span></param>
        <param name="outputSeries"><span data-ttu-id="ac509-356">Objeto <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> que almacenará los nuevos puntos de datos creados por la operación de agrupación.</span><span class="sxs-lookup"><span data-stu-id="ac509-356">The <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> that will store the new data points created by the grouping operation.</span></span> <span data-ttu-id="ac509-357">Si no existe, se iniciará una excepción.</span><span class="sxs-lookup"><span data-stu-id="ac509-357">If it does not exist, an exception will be thrown.</span></span></param>
        <summary><span data-ttu-id="ac509-358">Agrupa puntos de datos de una serie por etiquetas de eje usando una o más fórmulas.</span><span class="sxs-lookup"><span data-stu-id="ac509-358">Groups data points in a series by axis labels, using one or more formulas.</span></span> <span data-ttu-id="ac509-359">Se usa una serie de salida para almacenar los puntos de datos agrupados.</span><span class="sxs-lookup"><span data-stu-id="ac509-359">An output series is used to store the grouped data points.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="InsertEmptyPoints">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ac509-360">Reemplaza los puntos de datos que faltan en una serie o colección de series por puntos vacíos.</span><span class="sxs-lookup"><span data-stu-id="ac509-360">Replaces the missing data points in a series or a collection of series with empty points.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="InsertEmptyPoints">
      <MemberSignature Language="C#" Value="public void InsertEmptyPoints (double interval, System.Windows.Forms.DataVisualization.Charting.IntervalType intervalType, string seriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InsertEmptyPoints(float64 interval, valuetype System.Windows.Forms.DataVisualization.Charting.IntervalType intervalType, string seriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.InsertEmptyPoints(System.Double,System.Windows.Forms.DataVisualization.Charting.IntervalType,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertEmptyPoints(double interval, System::Windows::Forms::DataVisualization::Charting::IntervalType intervalType, System::String ^ seriesName);" />
      <MemberSignature Language="F#" Value="member this.InsertEmptyPoints : double * System.Windows.Forms.DataVisualization.Charting.IntervalType * string -&gt; unit" Usage="dataManipulator.InsertEmptyPoints (interval, intervalType, seriesName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="interval" Type="System.Double" />
        <Parameter Name="intervalType" Type="System.Windows.Forms.DataVisualization.Charting.IntervalType" />
        <Parameter Name="seriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="interval"><span data-ttu-id="ac509-361">Tamaño del intervalo en el que se ha comprobado si faltan puntos de datos.</span><span class="sxs-lookup"><span data-stu-id="ac509-361">The size of the interval checked for missing data points.</span></span></param>
        <param name="intervalType"><span data-ttu-id="ac509-362">Unidad de medida para el parámetro <paramref name="interval" />.</span><span class="sxs-lookup"><span data-stu-id="ac509-362">The unit of measurement for the <paramref name="interval" /> parameter.</span></span></param>
        <param name="seriesName"><span data-ttu-id="ac509-363">Lista separada por comas de nombres de los objetos <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> que se van a comprobar.</span><span class="sxs-lookup"><span data-stu-id="ac509-363">A comma-separated list of names of the <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> to be checked.</span></span></param>
        <summary><span data-ttu-id="ac509-364">Reemplaza los puntos de datos que faltan en una o más series con puntos vacíos.</span><span class="sxs-lookup"><span data-stu-id="ac509-364">Replaces the missing data points in one or more series with empty points.</span></span> <span data-ttu-id="ac509-365">En cada serie se comprueba si hay un intervalo definido, que viene determinado por los argumentos <paramref name="interval" /> e <paramref name="intervalType" />.</span><span class="sxs-lookup"><span data-stu-id="ac509-365">Each series is checked for a given interval that is determined by the <paramref name="interval" /> and <paramref name="intervalType" /> arguments.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertEmptyPoints">
      <MemberSignature Language="C#" Value="public void InsertEmptyPoints (double interval, System.Windows.Forms.DataVisualization.Charting.IntervalType intervalType, System.Windows.Forms.DataVisualization.Charting.Series series);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InsertEmptyPoints(float64 interval, valuetype System.Windows.Forms.DataVisualization.Charting.IntervalType intervalType, class System.Windows.Forms.DataVisualization.Charting.Series series) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.InsertEmptyPoints(System.Double,System.Windows.Forms.DataVisualization.Charting.IntervalType,System.Windows.Forms.DataVisualization.Charting.Series)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertEmptyPoints(double interval, System::Windows::Forms::DataVisualization::Charting::IntervalType intervalType, System::Windows::Forms::DataVisualization::Charting::Series ^ series);" />
      <MemberSignature Language="F#" Value="member this.InsertEmptyPoints : double * System.Windows.Forms.DataVisualization.Charting.IntervalType * System.Windows.Forms.DataVisualization.Charting.Series -&gt; unit" Usage="dataManipulator.InsertEmptyPoints (interval, intervalType, series)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="interval" Type="System.Double" />
        <Parameter Name="intervalType" Type="System.Windows.Forms.DataVisualization.Charting.IntervalType" />
        <Parameter Name="series" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="interval"><span data-ttu-id="ac509-366">Tamaño del intervalo en el que se ha comprobado si faltan puntos de datos.</span><span class="sxs-lookup"><span data-stu-id="ac509-366">The size of the interval checked for missing data points.</span></span></param>
        <param name="intervalType"><span data-ttu-id="ac509-367">Unidad de medida para el parámetro <paramref name="interval" />.</span><span class="sxs-lookup"><span data-stu-id="ac509-367">The unit of measurement for the <paramref name="interval" /> parameter.</span></span></param>
        <param name="series"><span data-ttu-id="ac509-368">Objeto <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> que se comprueba.</span><span class="sxs-lookup"><span data-stu-id="ac509-368">The <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> object that is checked.</span></span></param>
        <summary><span data-ttu-id="ac509-369">Reemplaza los puntos de datos que faltan en una serie con puntos vacíos.</span><span class="sxs-lookup"><span data-stu-id="ac509-369">Replaces the missing data points in a series with empty points.</span></span> <span data-ttu-id="ac509-370">En cada serie se comprueba si hay un intervalo definido, que viene determinado por los argumentos <paramref name="interval" /> e <paramref name="intervalType" />.</span><span class="sxs-lookup"><span data-stu-id="ac509-370">The series is checked for a given interval that is determined by the <paramref name="interval" /> and <paramref name="intervalType" /> arguments.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertEmptyPoints">
      <MemberSignature Language="C#" Value="public void InsertEmptyPoints (double interval, System.Windows.Forms.DataVisualization.Charting.IntervalType intervalType, double intervalOffset, System.Windows.Forms.DataVisualization.Charting.IntervalType intervalOffsetType, string seriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InsertEmptyPoints(float64 interval, valuetype System.Windows.Forms.DataVisualization.Charting.IntervalType intervalType, float64 intervalOffset, valuetype System.Windows.Forms.DataVisualization.Charting.IntervalType intervalOffsetType, string seriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.InsertEmptyPoints(System.Double,System.Windows.Forms.DataVisualization.Charting.IntervalType,System.Double,System.Windows.Forms.DataVisualization.Charting.IntervalType,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertEmptyPoints(double interval, System::Windows::Forms::DataVisualization::Charting::IntervalType intervalType, double intervalOffset, System::Windows::Forms::DataVisualization::Charting::IntervalType intervalOffsetType, System::String ^ seriesName);" />
      <MemberSignature Language="F#" Value="member this.InsertEmptyPoints : double * System.Windows.Forms.DataVisualization.Charting.IntervalType * double * System.Windows.Forms.DataVisualization.Charting.IntervalType * string -&gt; unit" Usage="dataManipulator.InsertEmptyPoints (interval, intervalType, intervalOffset, intervalOffsetType, seriesName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="interval" Type="System.Double" />
        <Parameter Name="intervalType" Type="System.Windows.Forms.DataVisualization.Charting.IntervalType" />
        <Parameter Name="intervalOffset" Type="System.Double" />
        <Parameter Name="intervalOffsetType" Type="System.Windows.Forms.DataVisualization.Charting.IntervalType" />
        <Parameter Name="seriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="interval"><span data-ttu-id="ac509-371">Tamaño del intervalo en el que se ha comprobado si faltan puntos de datos.</span><span class="sxs-lookup"><span data-stu-id="ac509-371">The size of the interval checked for missing data points.</span></span></param>
        <param name="intervalType"><span data-ttu-id="ac509-372">Unidad de medida para el parámetro <paramref name="interval" />.</span><span class="sxs-lookup"><span data-stu-id="ac509-372">The unit of measurement for the <paramref name="interval" /> parameter.</span></span></param>
        <param name="intervalOffset"><span data-ttu-id="ac509-373">Tamaño de desplazamiento del intervalo.</span><span class="sxs-lookup"><span data-stu-id="ac509-373">The interval offset size.</span></span></param>
        <param name="intervalOffsetType"><span data-ttu-id="ac509-374">Unidad de medida para el desplazamiento del intervalo.</span><span class="sxs-lookup"><span data-stu-id="ac509-374">The unit of measurement for the interval offset.</span></span></param>
        <param name="seriesName"><span data-ttu-id="ac509-375">Lista separada por comas de nombres de los objetos <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> que se van a comprobar.</span><span class="sxs-lookup"><span data-stu-id="ac509-375">A comma-separated list of names of the <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> to be checked.</span></span></param>
        <summary><span data-ttu-id="ac509-376">Reemplaza los puntos de datos que faltan en una o más series con puntos vacíos.</span><span class="sxs-lookup"><span data-stu-id="ac509-376">Replaces the missing data points in one or more series with empty points.</span></span> <span data-ttu-id="ac509-377">En cada serie se comprueba si hay un intervalo definido, que viene determinado por los argumentos <paramref name="interval" />, <paramref name="intervalOffset" />, <paramref name="intervalOffsetType" /> e <paramref name="intervalType" />.</span><span class="sxs-lookup"><span data-stu-id="ac509-377">Each series is checked for a given interval that is determined by the <paramref name="interval" />, <paramref name="intervalOffset" />, <paramref name="intervalOffsetType" /> and <paramref name="intervalType" /> arguments.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertEmptyPoints">
      <MemberSignature Language="C#" Value="public void InsertEmptyPoints (double interval, System.Windows.Forms.DataVisualization.Charting.IntervalType intervalType, double intervalOffset, System.Windows.Forms.DataVisualization.Charting.IntervalType intervalOffsetType, System.Windows.Forms.DataVisualization.Charting.Series series);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InsertEmptyPoints(float64 interval, valuetype System.Windows.Forms.DataVisualization.Charting.IntervalType intervalType, float64 intervalOffset, valuetype System.Windows.Forms.DataVisualization.Charting.IntervalType intervalOffsetType, class System.Windows.Forms.DataVisualization.Charting.Series series) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.InsertEmptyPoints(System.Double,System.Windows.Forms.DataVisualization.Charting.IntervalType,System.Double,System.Windows.Forms.DataVisualization.Charting.IntervalType,System.Windows.Forms.DataVisualization.Charting.Series)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertEmptyPoints(double interval, System::Windows::Forms::DataVisualization::Charting::IntervalType intervalType, double intervalOffset, System::Windows::Forms::DataVisualization::Charting::IntervalType intervalOffsetType, System::Windows::Forms::DataVisualization::Charting::Series ^ series);" />
      <MemberSignature Language="F#" Value="member this.InsertEmptyPoints : double * System.Windows.Forms.DataVisualization.Charting.IntervalType * double * System.Windows.Forms.DataVisualization.Charting.IntervalType * System.Windows.Forms.DataVisualization.Charting.Series -&gt; unit" Usage="dataManipulator.InsertEmptyPoints (interval, intervalType, intervalOffset, intervalOffsetType, series)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="interval" Type="System.Double" />
        <Parameter Name="intervalType" Type="System.Windows.Forms.DataVisualization.Charting.IntervalType" />
        <Parameter Name="intervalOffset" Type="System.Double" />
        <Parameter Name="intervalOffsetType" Type="System.Windows.Forms.DataVisualization.Charting.IntervalType" />
        <Parameter Name="series" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="interval"><span data-ttu-id="ac509-378">Tamaño del intervalo en el que se ha comprobado si faltan puntos de datos.</span><span class="sxs-lookup"><span data-stu-id="ac509-378">The size of the interval checked for missing data points.</span></span></param>
        <param name="intervalType"><span data-ttu-id="ac509-379">Unidad de medida para el parámetro <paramref name="interval" />.</span><span class="sxs-lookup"><span data-stu-id="ac509-379">The unit of measurement for the <paramref name="interval" /> parameter.</span></span></param>
        <param name="intervalOffset"><span data-ttu-id="ac509-380">Tamaño de desplazamiento del intervalo.</span><span class="sxs-lookup"><span data-stu-id="ac509-380">The interval offset size.</span></span></param>
        <param name="intervalOffsetType"><span data-ttu-id="ac509-381">Unidad de medida para el desplazamiento del intervalo.</span><span class="sxs-lookup"><span data-stu-id="ac509-381">The unit of measurement for the interval offset.</span></span></param>
        <param name="series"><span data-ttu-id="ac509-382">Objeto <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> en el que se van a insertar los puntos vacíos.</span><span class="sxs-lookup"><span data-stu-id="ac509-382">The <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> object in which to insert the empty points.</span></span></param>
        <summary><span data-ttu-id="ac509-383">Reemplaza los puntos de datos que faltan en una serie con puntos vacíos.</span><span class="sxs-lookup"><span data-stu-id="ac509-383">Replaces the missing data points in a series with empty points.</span></span> <span data-ttu-id="ac509-384">En cada serie se comprueba si hay un intervalo definido, que viene determinado por los argumentos <paramref name="interval" />, <paramref name="intervalOffset" />, <paramref name="intervalOffsetType" /> e <paramref name="intervalType" />.</span><span class="sxs-lookup"><span data-stu-id="ac509-384">The series is checked for a given interval that is determined by the <paramref name="interval" />, <paramref name="intervalOffset" />, <paramref name="intervalOffsetType" /> and <paramref name="intervalType" /> arguments.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertEmptyPoints">
      <MemberSignature Language="C#" Value="public void InsertEmptyPoints (double interval, System.Windows.Forms.DataVisualization.Charting.IntervalType intervalType, double intervalOffset, System.Windows.Forms.DataVisualization.Charting.IntervalType intervalOffsetType, double fromXValue, double toXValue, string seriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InsertEmptyPoints(float64 interval, valuetype System.Windows.Forms.DataVisualization.Charting.IntervalType intervalType, float64 intervalOffset, valuetype System.Windows.Forms.DataVisualization.Charting.IntervalType intervalOffsetType, float64 fromXValue, float64 toXValue, string seriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.InsertEmptyPoints(System.Double,System.Windows.Forms.DataVisualization.Charting.IntervalType,System.Double,System.Windows.Forms.DataVisualization.Charting.IntervalType,System.Double,System.Double,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertEmptyPoints(double interval, System::Windows::Forms::DataVisualization::Charting::IntervalType intervalType, double intervalOffset, System::Windows::Forms::DataVisualization::Charting::IntervalType intervalOffsetType, double fromXValue, double toXValue, System::String ^ seriesName);" />
      <MemberSignature Language="F#" Value="member this.InsertEmptyPoints : double * System.Windows.Forms.DataVisualization.Charting.IntervalType * double * System.Windows.Forms.DataVisualization.Charting.IntervalType * double * double * string -&gt; unit" Usage="dataManipulator.InsertEmptyPoints (interval, intervalType, intervalOffset, intervalOffsetType, fromXValue, toXValue, seriesName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="interval" Type="System.Double" />
        <Parameter Name="intervalType" Type="System.Windows.Forms.DataVisualization.Charting.IntervalType" />
        <Parameter Name="intervalOffset" Type="System.Double" />
        <Parameter Name="intervalOffsetType" Type="System.Windows.Forms.DataVisualization.Charting.IntervalType" />
        <Parameter Name="fromXValue" Type="System.Double" />
        <Parameter Name="toXValue" Type="System.Double" />
        <Parameter Name="seriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="interval"><span data-ttu-id="ac509-385">Tamaño del intervalo en el que se ha comprobado si faltan puntos de datos.</span><span class="sxs-lookup"><span data-stu-id="ac509-385">The size of the interval checked for missing data points.</span></span></param>
        <param name="intervalType"><span data-ttu-id="ac509-386">Unidad de medida para el parámetro <paramref name="interval" />.</span><span class="sxs-lookup"><span data-stu-id="ac509-386">The unit of measurement for the <paramref name="interval" /> parameter.</span></span></param>
        <param name="intervalOffset"><span data-ttu-id="ac509-387">Tamaño de desplazamiento del intervalo.</span><span class="sxs-lookup"><span data-stu-id="ac509-387">The interval offset size.</span></span></param>
        <param name="intervalOffsetType"><span data-ttu-id="ac509-388">Unidad de medida para el desplazamiento del intervalo.</span><span class="sxs-lookup"><span data-stu-id="ac509-388">The unit of measurement for the interval offset.</span></span></param>
        <param name="fromXValue"><span data-ttu-id="ac509-389">Punto inicial del intervalo de la serie que se va a comprobar.</span><span class="sxs-lookup"><span data-stu-id="ac509-389">The starting point for the series range to be checked.</span></span> <span data-ttu-id="ac509-390">Usa los valores X de los puntos de datos.</span><span class="sxs-lookup"><span data-stu-id="ac509-390">Uses the X-values of the data points.</span></span></param>
        <param name="toXValue"><span data-ttu-id="ac509-391">Punto final del intervalo de la serie que se va a comprobar.</span><span class="sxs-lookup"><span data-stu-id="ac509-391">The end point for the series range to be checked.</span></span> <span data-ttu-id="ac509-392">Usa los valores X de los puntos de datos.</span><span class="sxs-lookup"><span data-stu-id="ac509-392">Uses the X-values of the data points.</span></span></param>
        <param name="seriesName"><span data-ttu-id="ac509-393">Lista separada por comas de nombres de los objetos <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> que se van a comprobar.</span><span class="sxs-lookup"><span data-stu-id="ac509-393">A comma-separated list of names of the <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> to be checked.</span></span></param>
        <summary><span data-ttu-id="ac509-394">Reemplaza los puntos de datos que faltan en una o más series con puntos vacíos.</span><span class="sxs-lookup"><span data-stu-id="ac509-394">Replaces the missing data points in one or more series with empty points.</span></span> <span data-ttu-id="ac509-395">En cada serie se comprueba si hay un intervalo definido, que viene determinado por los argumentos <paramref name="interval" />, <paramref name="intervalOffset" />, <paramref name="intervalOffsetType" /> e <paramref name="intervalType" />.</span><span class="sxs-lookup"><span data-stu-id="ac509-395">Each series is checked for a given interval that is determined by the <paramref name="interval" />, <paramref name="intervalOffset" />, <paramref name="intervalOffsetType" /> and <paramref name="intervalType" /> arguments.</span></span> <span data-ttu-id="ac509-396">El intervalo de la serie que se comprueba viene determinado por los argumentos <paramref name="toXValue" /> y <paramref name="fromXValue" />.</span><span class="sxs-lookup"><span data-stu-id="ac509-396">The series range that is checked is determined by the <paramref name="toXValue" /> and <paramref name="fromXValue" /> arguments.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertEmptyPoints">
      <MemberSignature Language="C#" Value="public void InsertEmptyPoints (double interval, System.Windows.Forms.DataVisualization.Charting.IntervalType intervalType, double intervalOffset, System.Windows.Forms.DataVisualization.Charting.IntervalType intervalOffsetType, double fromXValue, double toXValue, System.Windows.Forms.DataVisualization.Charting.Series series);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InsertEmptyPoints(float64 interval, valuetype System.Windows.Forms.DataVisualization.Charting.IntervalType intervalType, float64 intervalOffset, valuetype System.Windows.Forms.DataVisualization.Charting.IntervalType intervalOffsetType, float64 fromXValue, float64 toXValue, class System.Windows.Forms.DataVisualization.Charting.Series series) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.InsertEmptyPoints(System.Double,System.Windows.Forms.DataVisualization.Charting.IntervalType,System.Double,System.Windows.Forms.DataVisualization.Charting.IntervalType,System.Double,System.Double,System.Windows.Forms.DataVisualization.Charting.Series)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertEmptyPoints(double interval, System::Windows::Forms::DataVisualization::Charting::IntervalType intervalType, double intervalOffset, System::Windows::Forms::DataVisualization::Charting::IntervalType intervalOffsetType, double fromXValue, double toXValue, System::Windows::Forms::DataVisualization::Charting::Series ^ series);" />
      <MemberSignature Language="F#" Value="member this.InsertEmptyPoints : double * System.Windows.Forms.DataVisualization.Charting.IntervalType * double * System.Windows.Forms.DataVisualization.Charting.IntervalType * double * double * System.Windows.Forms.DataVisualization.Charting.Series -&gt; unit" Usage="dataManipulator.InsertEmptyPoints (interval, intervalType, intervalOffset, intervalOffsetType, fromXValue, toXValue, series)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="interval" Type="System.Double" />
        <Parameter Name="intervalType" Type="System.Windows.Forms.DataVisualization.Charting.IntervalType" />
        <Parameter Name="intervalOffset" Type="System.Double" />
        <Parameter Name="intervalOffsetType" Type="System.Windows.Forms.DataVisualization.Charting.IntervalType" />
        <Parameter Name="fromXValue" Type="System.Double" />
        <Parameter Name="toXValue" Type="System.Double" />
        <Parameter Name="series" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="interval"><span data-ttu-id="ac509-397">Tamaño del intervalo en el que se ha comprobado si faltan puntos de datos.</span><span class="sxs-lookup"><span data-stu-id="ac509-397">The size of the interval checked for missing data points.</span></span></param>
        <param name="intervalType"><span data-ttu-id="ac509-398">Unidad de medida para el parámetro <paramref name="interval" />.</span><span class="sxs-lookup"><span data-stu-id="ac509-398">The unit of measurement for the <paramref name="interval" /> parameter.</span></span></param>
        <param name="intervalOffset"><span data-ttu-id="ac509-399">Tamaño de desplazamiento del intervalo.</span><span class="sxs-lookup"><span data-stu-id="ac509-399">The interval offset size.</span></span></param>
        <param name="intervalOffsetType"><span data-ttu-id="ac509-400">Unidad de medida para el desplazamiento del intervalo.</span><span class="sxs-lookup"><span data-stu-id="ac509-400">The unit of measurement for the interval offset.</span></span></param>
        <param name="fromXValue"><span data-ttu-id="ac509-401">Punto inicial del intervalo de la serie que se va a comprobar.</span><span class="sxs-lookup"><span data-stu-id="ac509-401">The starting point for the series range to be checked.</span></span> <span data-ttu-id="ac509-402">Usa los valores X de los puntos de datos.</span><span class="sxs-lookup"><span data-stu-id="ac509-402">Uses the X-values of the data points.</span></span></param>
        <param name="toXValue"><span data-ttu-id="ac509-403">Punto final del intervalo de la serie que se va a comprobar.</span><span class="sxs-lookup"><span data-stu-id="ac509-403">The end point for the series range to be checked.</span></span> <span data-ttu-id="ac509-404">Usa los valores X de los puntos de datos.</span><span class="sxs-lookup"><span data-stu-id="ac509-404">Uses the X-values of the data points.</span></span></param>
        <param name="series"><span data-ttu-id="ac509-405">Objeto <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> en el que se van a insertar los puntos vacíos.</span><span class="sxs-lookup"><span data-stu-id="ac509-405">The <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> in which to insert the empty points.</span></span></param>
        <summary><span data-ttu-id="ac509-406">Reemplaza los puntos de datos que faltan en una serie con puntos vacíos.</span><span class="sxs-lookup"><span data-stu-id="ac509-406">Replaces the missing data points in a series with empty points.</span></span> <span data-ttu-id="ac509-407">En cada serie se comprueba si hay un intervalo definido, que viene determinado por los argumentos <paramref name="interval" />, <paramref name="intervalOffset" />, <paramref name="intervalOffsetType" /> e <paramref name="intervalType" />.</span><span class="sxs-lookup"><span data-stu-id="ac509-407">The series is checked for a given interval that is determined by the <paramref name="interval" />, <paramref name="intervalOffset" />, <paramref name="intervalOffsetType" /> and <paramref name="intervalType" /> arguments.</span></span> <span data-ttu-id="ac509-408">El intervalo de la serie que se comprueba viene determinado por los argumentos <paramref name="toXValue" /> y <paramref name="fromXValue" />.</span><span class="sxs-lookup"><span data-stu-id="ac509-408">The series range that is checked is determined by the <paramref name="toXValue" /> and <paramref name="fromXValue" /> arguments.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Sort">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ac509-409">Realiza una ordenación personalizada de los puntos de datos de una o más series.</span><span class="sxs-lookup"><span data-stu-id="ac509-409">Performs a custom sort on the data points in one or more series.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public void Sort (System.Collections.Generic.IComparer&lt;System.Windows.Forms.DataVisualization.Charting.DataPoint&gt; comparer, string seriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Sort(class System.Collections.Generic.IComparer`1&lt;class System.Windows.Forms.DataVisualization.Charting.DataPoint&gt; comparer, string seriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.Sort(System.Collections.Generic.IComparer{System.Windows.Forms.DataVisualization.Charting.DataPoint},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Sort (comparer As IComparer(Of DataPoint), seriesName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Sort(System::Collections::Generic::IComparer&lt;System::Windows::Forms::DataVisualization::Charting::DataPoint ^&gt; ^ comparer, System::String ^ seriesName);" />
      <MemberSignature Language="F#" Value="member this.Sort : System.Collections.Generic.IComparer&lt;System.Windows.Forms.DataVisualization.Charting.DataPoint&gt; * string -&gt; unit" Usage="dataManipulator.Sort (comparer, seriesName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;System.Windows.Forms.DataVisualization.Charting.DataPoint&gt;" />
        <Parameter Name="seriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="comparer"><span data-ttu-id="ac509-410">Objeto que implementa la interfaz <see cref="T:System.Collections.IComparer" /> y proporciona la lógica de ordenación personalizada.</span><span class="sxs-lookup"><span data-stu-id="ac509-410">An object that implements the <see cref="T:System.Collections.IComparer" /> interface and provides the custom sorting logic.</span></span></param>
        <param name="seriesName"><span data-ttu-id="ac509-411">Lista separada por comas de nombres de los objetos <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> que se van a ordenar.</span><span class="sxs-lookup"><span data-stu-id="ac509-411">A comma-separated list of names of the <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> to be sorted.</span></span></param>
        <summary><span data-ttu-id="ac509-412">Realiza una ordenación personalizada de los puntos de datos de una o más series.</span><span class="sxs-lookup"><span data-stu-id="ac509-412">Performs a custom sort on the data points in one or more series.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac509-413">Este método realiza a una ordenación personalizada de los puntos de datos en una o más series; la lógica de ordenación se define mediante el `comparer` parámetro.</span><span class="sxs-lookup"><span data-stu-id="ac509-413">This method performs a custom sort on the data points in one or more series; the sort logic is defined by the `comparer` parameter.</span></span> <span data-ttu-id="ac509-414">Invalide e implemente el <xref:System.Collections.IComparer.Compare%2A> método de la <xref:System.Collections.IComparer> interfaz, realice las comparaciones y, a continuación, devolver `true` o `false`.</span><span class="sxs-lookup"><span data-stu-id="ac509-414">Override and implement the <xref:System.Collections.IComparer.Compare%2A> method of the <xref:System.Collections.IComparer> interface, perform the comparison(s) and then return `true` or `false`.</span></span> <span data-ttu-id="ac509-415">El criterio de ordenación viene determinada por el valor devuelto.</span><span class="sxs-lookup"><span data-stu-id="ac509-415">The sort order is determined by the return value.</span></span>  
  
 <span data-ttu-id="ac509-416">Tenga en cuenta que si se ordenan varias series, las series deben estar alineadas, en caso contrario, se producirá una excepción.</span><span class="sxs-lookup"><span data-stu-id="ac509-416">Note that if multiple series are sorted, the series must be aligned, otherwise an exception will be thrown.</span></span>  
  
 <span data-ttu-id="ac509-417">Los dos parámetros de objeto del <xref:System.Collections.IComparer.Compare%2A> método siempre debe ser de tipo <xref:System.Windows.Forms.DataVisualization.Charting.DataPoint>.</span><span class="sxs-lookup"><span data-stu-id="ac509-417">The two object parameters of the <xref:System.Collections.IComparer.Compare%2A> method must always be of type <xref:System.Windows.Forms.DataVisualization.Charting.DataPoint>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ac509-418">Todos los puntos de datos, independientemente de las series que pertenecen, se ordenan según la primera serie; Si cambia la posición de un punto de datos en la primera serie, también cambian todos los puntos correspondientes de la otra serie.</span><span class="sxs-lookup"><span data-stu-id="ac509-418">All data points, regardless of the series they belong to, are sorted based on the first series; if the position of a data point in the first series changes, all corresponding points in the other series change as well.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public void Sort (System.Collections.Generic.IComparer&lt;System.Windows.Forms.DataVisualization.Charting.DataPoint&gt; comparer, System.Windows.Forms.DataVisualization.Charting.Series series);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Sort(class System.Collections.Generic.IComparer`1&lt;class System.Windows.Forms.DataVisualization.Charting.DataPoint&gt; comparer, class System.Windows.Forms.DataVisualization.Charting.Series series) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.Sort(System.Collections.Generic.IComparer{System.Windows.Forms.DataVisualization.Charting.DataPoint},System.Windows.Forms.DataVisualization.Charting.Series)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Sort(System::Collections::Generic::IComparer&lt;System::Windows::Forms::DataVisualization::Charting::DataPoint ^&gt; ^ comparer, System::Windows::Forms::DataVisualization::Charting::Series ^ series);" />
      <MemberSignature Language="F#" Value="member this.Sort : System.Collections.Generic.IComparer&lt;System.Windows.Forms.DataVisualization.Charting.DataPoint&gt; * System.Windows.Forms.DataVisualization.Charting.Series -&gt; unit" Usage="dataManipulator.Sort (comparer, series)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;System.Windows.Forms.DataVisualization.Charting.DataPoint&gt;" />
        <Parameter Name="series" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="comparer"><span data-ttu-id="ac509-419">Objeto que implementa la interfaz <see cref="T:System.Collections.IComparer" /> y proporciona la lógica de ordenación personalizada.</span><span class="sxs-lookup"><span data-stu-id="ac509-419">An object that implements the <see cref="T:System.Collections.IComparer" /> interface and provides the custom sorting logic.</span></span></param>
        <param name="series"><span data-ttu-id="ac509-420">Objeto <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> que se va a ordenar.</span><span class="sxs-lookup"><span data-stu-id="ac509-420">The <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> object to be sorted.</span></span></param>
        <summary><span data-ttu-id="ac509-421">Realiza una ordenación personalizada de los puntos de datos de una serie.</span><span class="sxs-lookup"><span data-stu-id="ac509-421">Performs a custom sort on the data points in a series.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac509-422">Este método realiza a una ordenación personalizada de los puntos de datos en una serie; la lógica de ordenación se define mediante el `comparer` parámetro.</span><span class="sxs-lookup"><span data-stu-id="ac509-422">This method performs a custom sort on the data points in a series; the sort logic is defined by the `comparer` parameter.</span></span> <span data-ttu-id="ac509-423">Invalide e implemente el <xref:System.Collections.IComparer.Compare%2A> método de la <xref:System.Collections.IComparer> interfaz, realice las comparaciones y, a continuación, devolver `true` o `false`.</span><span class="sxs-lookup"><span data-stu-id="ac509-423">Override and implement the <xref:System.Collections.IComparer.Compare%2A> method of the <xref:System.Collections.IComparer> interface, perform the comparison(s) and then return `true` or `false`.</span></span> <span data-ttu-id="ac509-424">El criterio de ordenación viene determinada por el valor devuelto.</span><span class="sxs-lookup"><span data-stu-id="ac509-424">The sort order is determined by the return value.</span></span>  
  
 <span data-ttu-id="ac509-425">Los dos parámetros de objeto del <xref:System.Collections.IComparer.Compare%2A> método siempre debe ser de tipo <xref:System.Windows.Forms.DataVisualization.Charting.DataPoint>.</span><span class="sxs-lookup"><span data-stu-id="ac509-425">The two object parameters of the <xref:System.Collections.IComparer.Compare%2A> method must always be of type <xref:System.Windows.Forms.DataVisualization.Charting.DataPoint>.</span></span>  
  
 <span data-ttu-id="ac509-426">Para realizar una ordenación personalizada de más de una serie por llamada de función, utilice el <xref:System.Windows.Forms.DataVisualization.Charting.DataManipulator.Sort%2A> método.</span><span class="sxs-lookup"><span data-stu-id="ac509-426">To perform a custom sort for more than one series per function call, use the <xref:System.Windows.Forms.DataVisualization.Charting.DataManipulator.Sort%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public void Sort (System.Windows.Forms.DataVisualization.Charting.PointSortOrder pointSortOrder, string seriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Sort(valuetype System.Windows.Forms.DataVisualization.Charting.PointSortOrder pointSortOrder, string seriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.Sort(System.Windows.Forms.DataVisualization.Charting.PointSortOrder,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Sort(System::Windows::Forms::DataVisualization::Charting::PointSortOrder pointSortOrder, System::String ^ seriesName);" />
      <MemberSignature Language="F#" Value="member this.Sort : System.Windows.Forms.DataVisualization.Charting.PointSortOrder * string -&gt; unit" Usage="dataManipulator.Sort (pointSortOrder, seriesName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pointSortOrder" Type="System.Windows.Forms.DataVisualization.Charting.PointSortOrder" />
        <Parameter Name="seriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pointSortOrder"><span data-ttu-id="ac509-427">Un valor de enumeración <see cref="T:System.Windows.Forms.DataVisualization.Charting.PointSortOrder" /> que determina si el orden es ascendente o descendente.</span><span class="sxs-lookup"><span data-stu-id="ac509-427">A <see cref="T:System.Windows.Forms.DataVisualization.Charting.PointSortOrder" /> enumeration value that determines if the sort is ascending or descending.</span></span></param>
        <param name="seriesName"><span data-ttu-id="ac509-428">Lista separada por comas de nombres de los objetos <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> que se van a ordenar.</span><span class="sxs-lookup"><span data-stu-id="ac509-428">A comma-separated list of names of the <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> to be sorted.</span></span></param>
        <summary><span data-ttu-id="ac509-429">Realiza una ordenación de los puntos de datos de una o más series usando el orden especificado.</span><span class="sxs-lookup"><span data-stu-id="ac509-429">Performs a sort on the data points in one or more series, using the specified order.</span></span> <span data-ttu-id="ac509-430">La ordenación se basa en el primer valor Y de cada uno de los puntos de datos.</span><span class="sxs-lookup"><span data-stu-id="ac509-430">The sort is based on the first Y-value of each of the data points.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public void Sort (System.Windows.Forms.DataVisualization.Charting.PointSortOrder pointSortOrder, System.Windows.Forms.DataVisualization.Charting.Series series);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Sort(valuetype System.Windows.Forms.DataVisualization.Charting.PointSortOrder pointSortOrder, class System.Windows.Forms.DataVisualization.Charting.Series series) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.Sort(System.Windows.Forms.DataVisualization.Charting.PointSortOrder,System.Windows.Forms.DataVisualization.Charting.Series)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Sort(System::Windows::Forms::DataVisualization::Charting::PointSortOrder pointSortOrder, System::Windows::Forms::DataVisualization::Charting::Series ^ series);" />
      <MemberSignature Language="F#" Value="member this.Sort : System.Windows.Forms.DataVisualization.Charting.PointSortOrder * System.Windows.Forms.DataVisualization.Charting.Series -&gt; unit" Usage="dataManipulator.Sort (pointSortOrder, series)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pointSortOrder" Type="System.Windows.Forms.DataVisualization.Charting.PointSortOrder" />
        <Parameter Name="series" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="pointSortOrder"><span data-ttu-id="ac509-431">Un valor de enumeración <see cref="T:System.Windows.Forms.DataVisualization.Charting.PointSortOrder" /> que determina si el orden es ascendente o descendente.</span><span class="sxs-lookup"><span data-stu-id="ac509-431">A <see cref="T:System.Windows.Forms.DataVisualization.Charting.PointSortOrder" /> enumeration value that determines if the sort is ascending or descending.</span></span></param>
        <param name="series"><span data-ttu-id="ac509-432">Objeto <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> que se va a ordenar.</span><span class="sxs-lookup"><span data-stu-id="ac509-432">The <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> object to be sorted.</span></span></param>
        <summary><span data-ttu-id="ac509-433">Realiza una ordenación de los puntos de datos de una serie usando el orden especificado.</span><span class="sxs-lookup"><span data-stu-id="ac509-433">Performs a sort on the data points in a series using the specified order.</span></span> <span data-ttu-id="ac509-434">La ordenación se basa en el primer valor Y de cada uno de los puntos de datos.</span><span class="sxs-lookup"><span data-stu-id="ac509-434">The sort is based on the first Y-value of each of the data points.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public void Sort (System.Windows.Forms.DataVisualization.Charting.PointSortOrder pointSortOrder, string sortBy, string seriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Sort(valuetype System.Windows.Forms.DataVisualization.Charting.PointSortOrder pointSortOrder, string sortBy, string seriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.Sort(System.Windows.Forms.DataVisualization.Charting.PointSortOrder,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Sort(System::Windows::Forms::DataVisualization::Charting::PointSortOrder pointSortOrder, System::String ^ sortBy, System::String ^ seriesName);" />
      <MemberSignature Language="F#" Value="member this.Sort : System.Windows.Forms.DataVisualization.Charting.PointSortOrder * string * string -&gt; unit" Usage="dataManipulator.Sort (pointSortOrder, sortBy, seriesName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pointSortOrder" Type="System.Windows.Forms.DataVisualization.Charting.PointSortOrder" />
        <Parameter Name="sortBy" Type="System.String" />
        <Parameter Name="seriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pointSortOrder"><span data-ttu-id="ac509-435">Un valor de enumeración <see cref="T:System.Windows.Forms.DataVisualization.Charting.PointSortOrder" /> que determina si el orden es ascendente o descendente.</span><span class="sxs-lookup"><span data-stu-id="ac509-435">A <see cref="T:System.Windows.Forms.DataVisualization.Charting.PointSortOrder" /> enumeration value that determines if the sort is ascending or descending.</span></span></param>
        <param name="sortBy"><span data-ttu-id="ac509-436">Valor <see langword="string" /> que representa los valores de punto de datos que se van a ordenar.</span><span class="sxs-lookup"><span data-stu-id="ac509-436">A <see langword="string" /> value that represents the data point values to be sorted.</span></span> <span data-ttu-id="ac509-437">Los valores posibles son: "X", "Y", "Y2", "Y3", "AxisLabel", etc.</span><span class="sxs-lookup"><span data-stu-id="ac509-437">Possible values are: "X", "Y", "Y2", "Y3", "AxisLabel", and so forth.</span></span></param>
        <param name="seriesName"><span data-ttu-id="ac509-438">Lista separada por comas de nombres de los objetos <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> que se van a ordenar.</span><span class="sxs-lookup"><span data-stu-id="ac509-438">A comma-separated list of names of the <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> to be sorted.</span></span></param>
        <summary><span data-ttu-id="ac509-439">Realiza una ordenación de los puntos de datos de una o más series usando el orden especificado.</span><span class="sxs-lookup"><span data-stu-id="ac509-439">Performs a sort on the data points in one or more series, using the specified order.</span></span> <span data-ttu-id="ac509-440">La ordenación se puede basar en cualquier valor de punto de datos disponible.</span><span class="sxs-lookup"><span data-stu-id="ac509-440">The sort can be based on any available data point value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac509-441">Este método realiza en orden ascendente o descendente en datos puntos en una serie y se basa en el valor que se establece en el `sortBy` parámetro, como "X", "AxisLabel", "Y", "Y1" y así sucesivamente.</span><span class="sxs-lookup"><span data-stu-id="ac509-441">This method performs an ascending or descending sort on data points in a series, and is based on the value that is set in the `sortBy` parameter such as "X", "AxisLabel", "Y", "Y1", and so forth.</span></span>  
  
 <span data-ttu-id="ac509-442">Tenga en cuenta que si se ordenan varias series, las series deben estar alineadas, en caso contrario, se producirá una excepción.</span><span class="sxs-lookup"><span data-stu-id="ac509-442">Note that if multiple series are sorted, the series must be aligned, otherwise an exception will be thrown.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ac509-443">Todas las series se ordenarán usando especificado Y el valor de la primera serie enumerada; es decir, todos los puntos de datos, independientemente de las series que pertenecen, se ordenan en función de la primera serie.</span><span class="sxs-lookup"><span data-stu-id="ac509-443">All series will be sorted using the specified Y-value from the FIRST listed series; that is, all data points, regardless of the series they belong to, are sorted based on the first series.</span></span>  
  
 <span data-ttu-id="ac509-444">Para ordenar puntos mediante una rutina de ordenación personalizada, utilice una definición diferente de este método sobrecargado.</span><span class="sxs-lookup"><span data-stu-id="ac509-444">To sort points using a custom sort routine, use a different definition of this overloaded method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public void Sort (System.Windows.Forms.DataVisualization.Charting.PointSortOrder pointSortOrder, string sortBy, System.Windows.Forms.DataVisualization.Charting.Series series);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Sort(valuetype System.Windows.Forms.DataVisualization.Charting.PointSortOrder pointSortOrder, string sortBy, class System.Windows.Forms.DataVisualization.Charting.Series series) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.DataManipulator.Sort(System.Windows.Forms.DataVisualization.Charting.PointSortOrder,System.String,System.Windows.Forms.DataVisualization.Charting.Series)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Sort(System::Windows::Forms::DataVisualization::Charting::PointSortOrder pointSortOrder, System::String ^ sortBy, System::Windows::Forms::DataVisualization::Charting::Series ^ series);" />
      <MemberSignature Language="F#" Value="member this.Sort : System.Windows.Forms.DataVisualization.Charting.PointSortOrder * string * System.Windows.Forms.DataVisualization.Charting.Series -&gt; unit" Usage="dataManipulator.Sort (pointSortOrder, sortBy, series)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pointSortOrder" Type="System.Windows.Forms.DataVisualization.Charting.PointSortOrder" />
        <Parameter Name="sortBy" Type="System.String" />
        <Parameter Name="series" Type="System.Windows.Forms.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="pointSortOrder"><span data-ttu-id="ac509-445">Un valor de enumeración <see cref="T:System.Windows.Forms.DataVisualization.Charting.PointSortOrder" /> que determina si el orden es ascendente o descendente.</span><span class="sxs-lookup"><span data-stu-id="ac509-445">A <see cref="T:System.Windows.Forms.DataVisualization.Charting.PointSortOrder" /> enumeration value that determines if the sort is ascending or descending</span></span></param>
        <param name="sortBy"><span data-ttu-id="ac509-446">Valor <see langword="string" /> que representa los valores de punto de datos que se van a ordenar.</span><span class="sxs-lookup"><span data-stu-id="ac509-446">A <see langword="string" /> value that represents the data point values to be sorted.</span></span> <span data-ttu-id="ac509-447">Los valores posibles son: "X", "Y", "Y2", "Y3", "AxisLabel", etc.</span><span class="sxs-lookup"><span data-stu-id="ac509-447">Possible values are: "X", "Y", "Y2", "Y3", "AxisLabel", and so forth.</span></span></param>
        <param name="series"><span data-ttu-id="ac509-448">Objeto <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> que se va a ordenar.</span><span class="sxs-lookup"><span data-stu-id="ac509-448">The <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> object to be sorted.</span></span></param>
        <summary><span data-ttu-id="ac509-449">Realiza una ordenación de los puntos de datos de una serie usando el orden especificado.</span><span class="sxs-lookup"><span data-stu-id="ac509-449">Performs a sort on the data points in a series using the specified order.</span></span> <span data-ttu-id="ac509-450">La ordenación se puede basar en cualquier valor de punto de datos disponible.</span><span class="sxs-lookup"><span data-stu-id="ac509-450">The sort can be based on any available data point value.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
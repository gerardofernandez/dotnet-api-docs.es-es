<Type Name="ControlAdapter" FullName="System.Web.UI.Adapters.ControlAdapter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d208ab52c1bde494504568095da9ff62fddda974" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55317696" /></Metadata><TypeSignature Language="C#" Value="public abstract class ControlAdapter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ControlAdapter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Adapters.ControlAdapter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ControlAdapter" />
  <TypeSignature Language="C++ CLI" Value="public ref class ControlAdapter abstract" />
  <TypeSignature Language="F#" Value="type ControlAdapter = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="76214-101">Personaliza la representación del control derivado al que está asociado el adaptador, para modificar el marcado o el comportamiento predeterminados para exploradores concretos, y es la clase base de la que heredan todos los adaptadores de control.</span><span class="sxs-lookup"><span data-stu-id="76214-101">Customizes rendering for the derived control to which the adapter is attached, to modify the default markup or behavior for specific browsers, and is the base class from which all control adapters inherit.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76214-102">Los adaptadores de control son componentes que invalidación determinados <xref:System.Web.UI.Control> clase métodos y eventos de su ciclo de vida de ejecución para permitir que un control específico del marcado o explorador.</span><span class="sxs-lookup"><span data-stu-id="76214-102">Control adapters are components that override certain <xref:System.Web.UI.Control> class methods and events in its execution lifecycle to allow browser or markup-specific handling.</span></span> <span data-ttu-id="76214-103">.NET Framework asigna un adaptador de control derivada solo un <xref:System.Web.UI.Control> objeto para cada solicitud de cliente.</span><span class="sxs-lookup"><span data-stu-id="76214-103">The .NET Framework maps a single derived control adapter to a <xref:System.Web.UI.Control> object for each client request.</span></span>  
  
 <span data-ttu-id="76214-104">Un adaptador modifica un control para un explorador específico o una clase de exploradores o actúa como filtro arbitrario en alguna función.</span><span class="sxs-lookup"><span data-stu-id="76214-104">An adapter modifies a control for a specific browser or class of browsers or acts as an arbitrary filter on some capability.</span></span> <span data-ttu-id="76214-105">Normalmente, el adaptador se define mediante el lenguaje de marcado que utiliza el explorador (por ejemplo, XHTML o HTML 3.2).</span><span class="sxs-lookup"><span data-stu-id="76214-105">Typically the adapter is defined by the markup language that the browser uses (for example, XHTML or HTML 3.2).</span></span> <span data-ttu-id="76214-106">Gran parte de la adaptabilidad del comportamiento de representación se puede encapsular en las clases especializadas que se derivan de la <xref:System.Web.UI.HtmlTextWriter> clase.</span><span class="sxs-lookup"><span data-stu-id="76214-106">Much of the adaptability in rendering behavior can be encapsulated in the specialized classes that derive from the <xref:System.Web.UI.HtmlTextWriter> class.</span></span> <span data-ttu-id="76214-107">Por lo tanto, es probable que un único adaptador puede usarse para un número de comportamientos de clase de explorador o que su inclusión de la adaptabilidad de la <xref:System.Web.UI.HtmlTextWriter> clases podrían hacer que el uso de un adaptador de control innecesario.</span><span class="sxs-lookup"><span data-stu-id="76214-107">Therefore, it is likely that a single adapter can be used for a number of browser class behaviors or that inclusion of the adaptability in the <xref:System.Web.UI.HtmlTextWriter> classes could make the use of a control adapter unnecessary.</span></span>  
  
 <span data-ttu-id="76214-108">Un adaptador para una clase de control se aplica a todos los controles que heredan de esa clase, a menos que estén presentes adaptadores más especializados.</span><span class="sxs-lookup"><span data-stu-id="76214-108">An adapter for a control class applies to all controls that inherit from that class, unless more specialized adapters are present.</span></span> <span data-ttu-id="76214-109">Por ejemplo, un adaptador para la <xref:System.Web.UI.WebControls.BaseValidator> clase puede utilizarse para todos los `Validator` objetos.</span><span class="sxs-lookup"><span data-stu-id="76214-109">For example, an adapter for the <xref:System.Web.UI.WebControls.BaseValidator> class can be used for all `Validator` objects.</span></span>  
  
 <span data-ttu-id="76214-110">Los adaptadores normalmente no heredan directamente de la <xref:System.Web.UI.Adapters.ControlAdapter> (clase), pero desde el uno del adaptador específico del destino de las clases que proporcionan funcionalidad adicional específica del explorador de control de tipo y de destino base o la representación particular requerida.</span><span class="sxs-lookup"><span data-stu-id="76214-110">Adapters typically do not inherit directly from the <xref:System.Web.UI.Adapters.ControlAdapter> class, but from one of the target-specific adapter base classes that provide additional functionality specific to the control type and target browser or the particular rendering required.</span></span>  
  
 <span data-ttu-id="76214-111">Los propios controles no requieren necesariamente un adaptador.</span><span class="sxs-lookup"><span data-stu-id="76214-111">Controls themselves do not necessarily require an adapter.</span></span> <span data-ttu-id="76214-112">Si los controles se extienden a través de composición, generalmente son suficientes los adaptadores de control secundario.</span><span class="sxs-lookup"><span data-stu-id="76214-112">If controls are extended through composition, generally the child control adapters are sufficient.</span></span>  
  
 <span data-ttu-id="76214-113">Cada control tiene asignaciones explícitas a adaptadores a través de los archivos de definición .browser.</span><span class="sxs-lookup"><span data-stu-id="76214-113">Each control has explicit mappings to adapters through the .browser definition files.</span></span> <span data-ttu-id="76214-114">Por lo tanto, cualquier acceso a la <xref:System.Web.UI.Control.Adapter%2A?displayProperty=nameWithType> propiedad usa el <xref:System.Web.HttpBrowserCapabilities> objeto extraído de los archivos de definición de explorador para realizar la búsqueda para la asignación del adaptador al control.</span><span class="sxs-lookup"><span data-stu-id="76214-114">Thus, any access to the <xref:System.Web.UI.Control.Adapter%2A?displayProperty=nameWithType> property uses the <xref:System.Web.HttpBrowserCapabilities> object extracted from the browser definition files to perform the lookup for the mapping of the adapter to control.</span></span>  
  
 <span data-ttu-id="76214-115">Durante el procesamiento, .NET Framework intercepta las llamadas a los métodos reemplazables de un control que podría ser específico del destino.</span><span class="sxs-lookup"><span data-stu-id="76214-115">During processing, the .NET Framework intercepts calls to the overridable methods of a control that could be target-specific.</span></span> <span data-ttu-id="76214-116">Si está conectado a un adaptador de control, .NET Framework llama a los métodos de adaptador asociado.</span><span class="sxs-lookup"><span data-stu-id="76214-116">If a control adapter is attached, the .NET Framework calls the associated adapter methods.</span></span>  
  
 <span data-ttu-id="76214-117">El adaptador realiza la representación del control a través de la <xref:System.Web.UI.Adapters.ControlAdapter.Render%2A> método.</span><span class="sxs-lookup"><span data-stu-id="76214-117">The adapter performs rendering for the control through the <xref:System.Web.UI.Adapters.ControlAdapter.Render%2A> method.</span></span> <span data-ttu-id="76214-118">Si se reemplaza, <xref:System.Web.UI.Adapters.ControlAdapter.Render%2A> potencialmente no debe llamar a la implementación de la clase base ya que realiza una llamada de vuelta en el <xref:System.Web.UI.Control.Render%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="76214-118">If overridden, <xref:System.Web.UI.Adapters.ControlAdapter.Render%2A> potentially should not call the base class implementation because that performs a call back on the <xref:System.Web.UI.Control.Render%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="76214-119">Esto podría provocar la representación que se produzcan dos veces, una vez por el adaptador y una vez por el control.</span><span class="sxs-lookup"><span data-stu-id="76214-119">This might cause the rendering to occur twice, once by the adapter and once by the control.</span></span>  
  
 <span data-ttu-id="76214-120">El <xref:System.Web.UI.Adapters.ControlAdapter.Render%2A> basar las llamadas a métodos en el <xref:System.Web.UI.Control.Render%2A?displayProperty=nameWithType> método del control.</span><span class="sxs-lookup"><span data-stu-id="76214-120">The <xref:System.Web.UI.Adapters.ControlAdapter.Render%2A> base method calls back on the <xref:System.Web.UI.Control.Render%2A?displayProperty=nameWithType> method of the control.</span></span> <span data-ttu-id="76214-121">Por lo tanto, si invalida <xref:System.Web.UI.Adapters.ControlAdapter.Render%2A>, no debe llamar a la implementación de la clase base a menos que la representación que implemente a la que se proporciona por <xref:System.Web.UI.Control.Render%2A?displayProperty=nameWithType> del control.</span><span class="sxs-lookup"><span data-stu-id="76214-121">Thus, if you override <xref:System.Web.UI.Adapters.ControlAdapter.Render%2A>, you should not call the base class implementation unless the rendering you implement is in addition to that provided by <xref:System.Web.UI.Control.Render%2A?displayProperty=nameWithType> of the control.</span></span>  
  
 <span data-ttu-id="76214-122">Debe asegurarse de que .NET Framework realiza interceptación para los adaptadores de los controles secundarios.</span><span class="sxs-lookup"><span data-stu-id="76214-122">You must ensure that the .NET Framework performs interception for adapters of the child controls.</span></span> <span data-ttu-id="76214-123">Puede hacerlo mediante una llamada a la <xref:System.Web.UI.Adapters.ControlAdapter.RenderChildren%2A> basar el método que llama el <xref:System.Web.UI.Control.RenderChildren%2A?displayProperty=nameWithType> método del control, desde su <xref:System.Web.UI.Adapters.ControlAdapter.Render%2A> invalidar.</span><span class="sxs-lookup"><span data-stu-id="76214-123">You can do this by calling the <xref:System.Web.UI.Adapters.ControlAdapter.RenderChildren%2A> base method, which calls the <xref:System.Web.UI.Control.RenderChildren%2A?displayProperty=nameWithType> method of the control, from your <xref:System.Web.UI.Adapters.ControlAdapter.Render%2A> override.</span></span>  
  
 <span data-ttu-id="76214-124">El <xref:System.Web.UI.Adapters.ControlAdapter.BeginRender%2A> y <xref:System.Web.UI.Adapters.ControlAdapter.EndRender%2A> llama a métodos del control inmediatamente antes y después (respectivamente) en el control llama el <xref:System.Web.UI.Adapters.ControlAdapter.Render%2A> método.</span><span class="sxs-lookup"><span data-stu-id="76214-124">The <xref:System.Web.UI.Adapters.ControlAdapter.BeginRender%2A> and <xref:System.Web.UI.Adapters.ControlAdapter.EndRender%2A> methods are called by the control immediately before and after (respectively) the control calls the <xref:System.Web.UI.Adapters.ControlAdapter.Render%2A> method.</span></span> <span data-ttu-id="76214-125">Si previas y posteriores a la representación sólo explorador específico del procesan las tareas necesarias, usar <xref:System.Web.UI.Adapters.ControlAdapter.BeginRender%2A> y <xref:System.Web.UI.Adapters.ControlAdapter.EndRender%2A> pueden hacer necesario invalidar <xref:System.Web.UI.Adapters.ControlAdapter.Render%2A>.</span><span class="sxs-lookup"><span data-stu-id="76214-125">If pre- and post-rendering are the only browser-specific processing tasks required, using <xref:System.Web.UI.Adapters.ControlAdapter.BeginRender%2A> and <xref:System.Web.UI.Adapters.ControlAdapter.EndRender%2A> might make it unnecessary to override <xref:System.Web.UI.Adapters.ControlAdapter.Render%2A>.</span></span> <span data-ttu-id="76214-126">El comportamiento predeterminado de la <xref:System.Web.UI.Adapters.ControlAdapter.BeginRender%2A> y <xref:System.Web.UI.Adapters.ControlAdapter.EndRender%2A> métodos consiste en llamar a los métodos correspondientes de la <xref:System.Web.UI.HtmlTextWriter>.</span><span class="sxs-lookup"><span data-stu-id="76214-126">The default behavior of the <xref:System.Web.UI.Adapters.ControlAdapter.BeginRender%2A> and <xref:System.Web.UI.Adapters.ControlAdapter.EndRender%2A> methods is to call the corresponding methods of the <xref:System.Web.UI.HtmlTextWriter>.</span></span>  
  
 <span data-ttu-id="76214-127">Para mantener su propia información de estado, un adaptador de control puede invalidar el <xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState%2A>, <xref:System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState%2A>, <xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState%2A>, y <xref:System.Web.UI.Adapters.ControlAdapter.LoadAdapterViewState%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="76214-127">To maintain its own state information, a control adapter can override the <xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState%2A>, <xref:System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState%2A>, <xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState%2A>, and <xref:System.Web.UI.Adapters.ControlAdapter.LoadAdapterViewState%2A> methods.</span></span> <span data-ttu-id="76214-128"><xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState%2A>, <xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState%2A>, <xref:System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState%2A>, y <xref:System.Web.UI.Adapters.ControlAdapter.LoadAdapterViewState%2A> se llama cuando se guardan los Estados de control y vista privados y se carga, respectivamente.</span><span class="sxs-lookup"><span data-stu-id="76214-128"><xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState%2A>, <xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState%2A>, <xref:System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState%2A>, and <xref:System.Web.UI.Adapters.ControlAdapter.LoadAdapterViewState%2A> are called when the private control and view states are saved and loaded, respectively.</span></span>  
  
 <span data-ttu-id="76214-129">El <xref:System.Web.UI.Adapters.ControlAdapter.OnInit%2A>, <xref:System.Web.UI.Adapters.ControlAdapter.OnLoad%2A>, <xref:System.Web.UI.Adapters.ControlAdapter.OnPreRender%2A>, y <xref:System.Web.UI.Adapters.ControlAdapter.OnUnload%2A> base llamada de métodos en la correspondiente <xref:System.Web.UI.Control> métodos de la clase.</span><span class="sxs-lookup"><span data-stu-id="76214-129">The <xref:System.Web.UI.Adapters.ControlAdapter.OnInit%2A>, <xref:System.Web.UI.Adapters.ControlAdapter.OnLoad%2A>, <xref:System.Web.UI.Adapters.ControlAdapter.OnPreRender%2A>, and <xref:System.Web.UI.Adapters.ControlAdapter.OnUnload%2A> base methods call back on the corresponding <xref:System.Web.UI.Control> class methods.</span></span> <span data-ttu-id="76214-130">Por lo tanto, cualquiera de estos <xref:System.Web.UI.Adapters.ControlAdapter> métodos que son reemplazados deben llamar a sus métodos base; de lo contrario, el evento asociado con el <xref:System.Web.UI.Control> no se generará el método de clase.</span><span class="sxs-lookup"><span data-stu-id="76214-130">Thus, any of these <xref:System.Web.UI.Adapters.ControlAdapter> methods that are overridden must call their base methods; otherwise, the event associated with the <xref:System.Web.UI.Control> class method will not be raised.</span></span>  
  
 <span data-ttu-id="76214-131">Opcionalmente, puede implementan controles y los adaptadores del <xref:System.Web.UI.IPostBackDataHandler> y <xref:System.Web.UI.IPostBackEventHandler> interfaces.</span><span class="sxs-lookup"><span data-stu-id="76214-131">Controls and adapters optionally implement the <xref:System.Web.UI.IPostBackDataHandler> and <xref:System.Web.UI.IPostBackEventHandler> interfaces.</span></span> <span data-ttu-id="76214-132">.NET Framework determina si existe un adaptador y si el adaptador implementa estas interfaces.</span><span class="sxs-lookup"><span data-stu-id="76214-132">The .NET Framework determines whether an adapter exists and whether the adapter implements these interfaces.</span></span> <span data-ttu-id="76214-133">Si es así, el adaptador debe reemplazar el <xref:System.Web.UI.IPostBackDataHandler.LoadPostData%2A>, <xref:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent%2A>, y <xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A> métodos, según sea necesario.</span><span class="sxs-lookup"><span data-stu-id="76214-133">If it does, the adapter should override the <xref:System.Web.UI.IPostBackDataHandler.LoadPostData%2A>, <xref:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent%2A>, and <xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A> methods, as necessary.</span></span> <span data-ttu-id="76214-134">Si no se reconocen los datos de postback en el adaptador, debe llamar a atrás en el control para procesarlo.</span><span class="sxs-lookup"><span data-stu-id="76214-134">If the postback data is not recognized in the adapter, it must call back on the control to process it.</span></span> <span data-ttu-id="76214-135">Controladores de eventos subsiguientes también deben volver a llamar el control.</span><span class="sxs-lookup"><span data-stu-id="76214-135">Subsequent event handlers also must call back on the control.</span></span>  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="76214-136">Al heredar de la <see cref="T:System.Web.UI.Adapters.ControlAdapter" /> (clase), un control que requiere la funcionalidad del adaptador general debe tener un adaptador correspondiente de la clase con nombre en el patrón de base <paramref name="ControlType" /> <see langword="Adapter" /> (por ejemplo, <see langword="TextBoxAdapter" />).</span><span class="sxs-lookup"><span data-stu-id="76214-136">When you inherit from the <see cref="T:System.Web.UI.Adapters.ControlAdapter" /> class, a control that requires general adapter functionality should have a corresponding adapter base class, named in the pattern <paramref name="ControlType" /><see langword="Adapter" /> (for example, <see langword="TextBoxAdapter" />).</span></span> <span data-ttu-id="76214-137">Como mínimo, el adaptador debería devolver una instancia fuertemente tipada del control a través de su <see cref="P:System.Web.UI.Adapters.ControlAdapter.Control" /> propiedad.</span><span class="sxs-lookup"><span data-stu-id="76214-137">The adapter should at a minimum return a strongly-typed instance of the control through its <see cref="P:System.Web.UI.Adapters.ControlAdapter.Control" /> property.</span></span>  
  
<span data-ttu-id="76214-138">1.</span><span class="sxs-lookup"><span data-stu-id="76214-138">1.</span></span>  <span data-ttu-id="76214-139">Adaptadores de controles para un lenguaje de marcado y de tipo de control determinado debe tener un nombre en el patrón de <paramref name="MarkupControlType" /> <see langword="Adapter" /> (por ejemplo, <see langword="XhtmlTextBoxAdapter" />).</span><span class="sxs-lookup"><span data-stu-id="76214-139">Control adapters for a given control type and markup language should be named in the pattern <paramref name="MarkupControlType" /><see langword="Adapter" /> (for example, <see langword="XhtmlTextBoxAdapter" />).</span></span> <span data-ttu-id="76214-140">Los adaptadores de control deben implementarse en un <see langword="Adapters" /> subespacio.</span><span class="sxs-lookup"><span data-stu-id="76214-140">Adapters for a control should be implemented in an <see langword="Adapters" /> subnamespace.</span></span>  
  
<span data-ttu-id="76214-141">Adaptadores de control deben heredar de la clase base adecuada y siga el mismo modelo de herencia que el control.</span><span class="sxs-lookup"><span data-stu-id="76214-141">Control adapters should inherit from the appropriate base class and follow the same inheritance model as the control.</span></span> <span data-ttu-id="76214-142">Por ejemplo, un adaptador para un control que hereda de la <see cref="T:System.Web.UI.Control" /> debería heredar la clase base desde la <see cref="T:System.Web.UI.Adapters.ControlAdapter" /> clase o la correspondiente <paramref name="ControlType" /> <see langword="Adapter" /> clase.</span><span class="sxs-lookup"><span data-stu-id="76214-142">For example, an adapter for a control inheriting from the <see cref="T:System.Web.UI.Control" /> base class should inherit from either the <see cref="T:System.Web.UI.Adapters.ControlAdapter" /> class or the relevant <paramref name="ControlType" /><see langword="Adapter" /> class.</span></span>  
  
<span data-ttu-id="76214-143">Los adaptadores especializados deben definirse para el control especializado en todos los nodos de dispositivo .browser en archivos de configuración.</span><span class="sxs-lookup"><span data-stu-id="76214-143">Any specialized adapters should be defined for the specialized control under all of the device nodes in configuration .browser files.</span></span>  
  
<span data-ttu-id="76214-144">Un control correctamente implementado no debe suponer que un adaptador está conectado o que el adaptador asociado implementa una interfaz específica.</span><span class="sxs-lookup"><span data-stu-id="76214-144">A properly implemented control should not assume that an adapter is attached, or that the attached adapter implements a specific interface.</span></span> <span data-ttu-id="76214-145">En su lugar, debe comprobar estas antes de llamar a.</span><span class="sxs-lookup"><span data-stu-id="76214-145">Instead, it should check for these before calling.</span></span>  
  
<span data-ttu-id="76214-146">Es posible simular invalidar los métodos de evento protegido en el control, como el <see cref="M:System.Web.UI.WebControls.LinkButton.OnClick(System.EventArgs)" /> método de la <see cref="T:System.Web.UI.WebControls.LinkButton" />.</span><span class="sxs-lookup"><span data-stu-id="76214-146">It is possible to simulate overriding protected event methods in the control, such as the <see cref="M:System.Web.UI.WebControls.LinkButton.OnClick(System.EventArgs)" /> method of the <see cref="T:System.Web.UI.WebControls.LinkButton" />.</span></span> <span data-ttu-id="76214-147">En primer lugar, cree una clase de adaptador con una <c>OnClick</c> método.</span><span class="sxs-lookup"><span data-stu-id="76214-147">First, create an adapter class with an <c>OnClick</c> method.</span></span> <span data-ttu-id="76214-148">A continuación, cree un nuevo control derivado de <see cref="T:System.Web.UI.WebControls.LinkButton" /> e invalidar la <see cref="M:System.Web.UI.WebControls.LinkButton.OnClick(System.EventArgs)" /> método.</span><span class="sxs-lookup"><span data-stu-id="76214-148">Then create a new control derived from <see cref="T:System.Web.UI.WebControls.LinkButton" /> and override the <see cref="M:System.Web.UI.WebControls.LinkButton.OnClick(System.EventArgs)" /> method.</span></span> <span data-ttu-id="76214-149">La reemplazada <see cref="M:System.Web.UI.WebControls.LinkButton.OnClick(System.EventArgs)" /> llamadas al método el <c>OnClick</c> método del adaptador.</span><span class="sxs-lookup"><span data-stu-id="76214-149">The overriden <see cref="M:System.Web.UI.WebControls.LinkButton.OnClick(System.EventArgs)" /> method calls the <c>OnClick</c> method of the adapter.</span></span> <span data-ttu-id="76214-150">El objeto de adaptador está disponible a través de protegido <see cref="P:System.Web.UI.Control.Adapter" /> propiedad de la <see cref="T:System.Web.UI.Control" /> clase.</span><span class="sxs-lookup"><span data-stu-id="76214-150">The adapter object is available through the protected <see cref="P:System.Web.UI.Control.Adapter" /> property of the <see cref="T:System.Web.UI.Control" /> class.</span></span> <span data-ttu-id="76214-151">El <see cref="P:System.Web.UI.Control.Adapter" /> es propiedad del control <see langword="null" /> cuando no hay ningún adaptador asociado, por lo que cualquier código debe comprobar esa condición antes de llamar a métodos del adaptador.</span><span class="sxs-lookup"><span data-stu-id="76214-151">The <see cref="P:System.Web.UI.Control.Adapter" /> property of the control is <see langword="null" /> when there is no associated adapter, so any code should check for that condition before calling methods of the adapter.</span></span></para></block>
    <altmember cref="T:System.Web.UI.Control" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ControlAdapter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.ControlAdapter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ControlAdapter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="76214-152">Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.Adapters.ControlAdapter" />.</span><span class="sxs-lookup"><span data-stu-id="76214-152">Initializes a new instance of the <see cref="T:System.Web.UI.Adapters.ControlAdapter" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76214-153">.NET Framework crea internamente este adaptador al crear la correspondiente <xref:System.Web.UI.Control> objeto.</span><span class="sxs-lookup"><span data-stu-id="76214-153">The .NET Framework internally constructs this adapter when it creates the corresponding <xref:System.Web.UI.Control> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Control" />
      </Docs>
    </Member>
    <Member MemberName="BeginRender">
      <MemberSignature Language="C#" Value="protected internal virtual void BeginRender (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void BeginRender(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.ControlAdapter.BeginRender(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub BeginRender (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void BeginRender(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member BeginRender : System.Web.UI.HtmlTextWriter -&gt; unit&#xA;override this.BeginRender : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="controlAdapter.BeginRender writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="76214-154"><see cref="T:System.Web.UI.HtmlTextWriter" /> que contiene los métodos para representar el resultado específico del destino.</span><span class="sxs-lookup"><span data-stu-id="76214-154">The <see cref="T:System.Web.UI.HtmlTextWriter" /> containing methods to render the target-specific output.</span></span></param>
        <summary><span data-ttu-id="76214-155">Se le llama antes de la representación de un control.</span><span class="sxs-lookup"><span data-stu-id="76214-155">Called prior to the rendering of a control.</span></span> <span data-ttu-id="76214-156">En una clase de adaptador derivada, genera etiquetas de apertura requeridas por un destino concreto pero que no son necesarias para los exploradores de HTML.</span><span class="sxs-lookup"><span data-stu-id="76214-156">In a derived adapter class, generates opening tags that are required by a specific target but not needed by HTML browsers.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76214-157">El <xref:System.Web.UI.Adapters.ControlAdapter.BeginRender%2A> se llama al método justo antes del <xref:System.Web.UI.Adapters.ControlAdapter.Render%2A> método y se usa para realizar el preprocesamiento específico del destino antes de la representación del control.</span><span class="sxs-lookup"><span data-stu-id="76214-157">The <xref:System.Web.UI.Adapters.ControlAdapter.BeginRender%2A> method is called just before the <xref:System.Web.UI.Adapters.ControlAdapter.Render%2A> method, and is used to perform target-specific preprocessing before the rendering of the control.</span></span>  
  
 <span data-ttu-id="76214-158">Use la <xref:System.Web.UI.Adapters.ControlAdapter.BeginRender%2A> método junto con el <xref:System.Web.UI.Adapters.ControlAdapter.EndRender%2A> para garantizar la coherencia de la etiqueta a la apertura y cierre.</span><span class="sxs-lookup"><span data-stu-id="76214-158">Use the <xref:System.Web.UI.Adapters.ControlAdapter.BeginRender%2A> method in combination with the <xref:System.Web.UI.Adapters.ControlAdapter.EndRender%2A> method to ensure opening and closing tag consistency.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="76214-159">Al heredar de la <see cref="T:System.Web.UI.Adapters.ControlAdapter" /> (clase), el <see cref="M:System.Web.UI.Adapters.ControlAdapter.BeginRender(System.Web.UI.HtmlTextWriter)" /> basar las llamadas al método el <see cref="M:System.Web.UI.HtmlTextWriter.BeginRender" /> método.</span><span class="sxs-lookup"><span data-stu-id="76214-159">When you inherit from the <see cref="T:System.Web.UI.Adapters.ControlAdapter" /> class, the <see cref="M:System.Web.UI.Adapters.ControlAdapter.BeginRender(System.Web.UI.HtmlTextWriter)" /> base method calls the <see cref="M:System.Web.UI.HtmlTextWriter.BeginRender" /> method.</span></span> <span data-ttu-id="76214-160">Por lo tanto, invalidaciones de la <see cref="M:System.Web.UI.Adapters.ControlAdapter.BeginRender(System.Web.UI.HtmlTextWriter)" /> debe llamar al método el <see cref="M:System.Web.UI.Adapters.ControlAdapter.BeginRender(System.Web.UI.HtmlTextWriter)" /> método base solo si su procesamiento es además, en lugar de en lugar de la <see cref="M:System.Web.UI.HtmlTextWriter.BeginRender" /> método.</span><span class="sxs-lookup"><span data-stu-id="76214-160">Thus, overrides of the <see cref="M:System.Web.UI.Adapters.ControlAdapter.BeginRender(System.Web.UI.HtmlTextWriter)" /> method should call the <see cref="M:System.Web.UI.Adapters.ControlAdapter.BeginRender(System.Web.UI.HtmlTextWriter)" /> base method only if its processing is in addition to, rather than instead of, the <see cref="M:System.Web.UI.HtmlTextWriter.BeginRender" /> method.</span></span></para></block>
        <altmember cref="M:System.Web.UI.HtmlTextWriter.BeginRender" />
        <altmember cref="M:System.Web.UI.Adapters.ControlAdapter.Render(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.Adapters.ControlAdapter.EndRender(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
        <altmember cref="T:System.Web.UI.Control" />
      </Docs>
    </Member>
    <Member MemberName="Browser">
      <MemberSignature Language="C#" Value="protected System.Web.HttpBrowserCapabilities Browser { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpBrowserCapabilities Browser" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Adapters.ControlAdapter.Browser" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Browser As HttpBrowserCapabilities" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Web::HttpBrowserCapabilities ^ Browser { System::Web::HttpBrowserCapabilities ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Browser : System.Web.HttpBrowserCapabilities" Usage="System.Web.UI.Adapters.ControlAdapter.Browser" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpBrowserCapabilities</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76214-161">Obtiene una referencia a las posibilidades del explorador del cliente que realiza la solicitud HTTP actual.</span><span class="sxs-lookup"><span data-stu-id="76214-161">Gets a reference to the browser capabilities of the client making the current HTTP request.</span></span></summary>
        <value><span data-ttu-id="76214-162">Un <see cref="T:System.Web.HttpBrowserCapabilities" /> que especifica las funciones del explorador del cliente y de marcado.</span><span class="sxs-lookup"><span data-stu-id="76214-162">An <see cref="T:System.Web.HttpBrowserCapabilities" /> specifying client browser and markup capabilities.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76214-163">Un <xref:System.Web.UI.Adapters.ControlAdapter> objeto determina las funciones del explorador cliente desde el <xref:System.Web.HttpBrowserCapabilities> objeto devuelto por la <xref:System.Web.UI.Adapters.ControlAdapter.Browser%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="76214-163">A <xref:System.Web.UI.Adapters.ControlAdapter> object determines the client browser capabilities from the <xref:System.Web.HttpBrowserCapabilities> object that is returned by the <xref:System.Web.UI.Adapters.ControlAdapter.Browser%2A> property.</span></span> <span data-ttu-id="76214-164">Esto permite la <xref:System.Web.UI.Adapters.ControlAdapter> objeto para representar el marcado específico del explorador o modificar el comportamiento de la <xref:System.Web.UI.Control>.</span><span class="sxs-lookup"><span data-stu-id="76214-164">This enables the <xref:System.Web.UI.Adapters.ControlAdapter> object to render browser-specific markup or otherwise modify the behavior of the <xref:System.Web.UI.Control>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="76214-165">En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Web.UI.Adapters.ControlAdapter.Browser%2A> propiedad para tener acceso a los detalles del explorador solicitante.</span><span class="sxs-lookup"><span data-stu-id="76214-165">The following code example shows how to use the <xref:System.Web.UI.Adapters.ControlAdapter.Browser%2A> property to access the details of the requesting browser.</span></span> <span data-ttu-id="76214-166">En este ejemplo, el código se comprueba para determinar si el explorador es compatible con JavaScript y, a continuación, permite al desarrollador representar el resultado personalizado en ese caso.</span><span class="sxs-lookup"><span data-stu-id="76214-166">In this example, the code checks to determine whether the browser is compatible with JavaScript, and then allows the developer to render customized output in that case.</span></span>  
  
 [!code-cpp[ControlAdapter_Browser#1](~/samples/snippets/cpp/VS_Snippets_WebNet/ControlAdapter_Browser/CPP/controladapter_browser.cpp#1)]
 [!code-csharp[ControlAdapter_Browser#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ControlAdapter_Browser/CS/controladapter_browser.cs#1)]
 [!code-vb[ControlAdapter_Browser#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ControlAdapter_Browser/VB/controladapter_browser.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Control" />
        <altmember cref="T:System.Web.HttpBrowserCapabilities" />
        <altmember cref="T:System.Web.Configuration.HttpCapabilitiesBase" />
      </Docs>
    </Member>
    <Member MemberName="Control">
      <MemberSignature Language="C#" Value="protected System.Web.UI.Control Control { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Control Control" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Adapters.ControlAdapter.Control" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Control As Control" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Web::UI::Control ^ Control { System::Web::UI::Control ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Control : System.Web.UI.Control" Usage="System.Web.UI.Adapters.ControlAdapter.Control" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76214-167">Obtiene una referencia al control al que está asociado este adaptador de control.</span><span class="sxs-lookup"><span data-stu-id="76214-167">Gets a reference to the control to which this control adapter is attached.</span></span></summary>
        <value><span data-ttu-id="76214-168">Propiedad <see cref="T:System.Web.UI.Control" /> a la que está asociado el objeto <see cref="T:System.Web.UI.Adapters.ControlAdapter" />.</span><span class="sxs-lookup"><span data-stu-id="76214-168">The <see cref="T:System.Web.UI.Control" /> to which this <see cref="T:System.Web.UI.Adapters.ControlAdapter" /> is attached.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76214-169">Cuando un adaptador de control derivado está asociado a un control, .NET Framework llama a ciertos miembros del adaptador en lugar de los miembros del control.</span><span class="sxs-lookup"><span data-stu-id="76214-169">When a derived control adapter is attached to a control, the .NET Framework calls certain adapter members instead of the control members.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="76214-170">En el ejemplo de código siguiente se muestra cómo derivar un control personalizado de la <xref:System.Web.UI.Control> clase y, a continuación, crear un adaptador correspondiente que hereda de la <xref:System.Web.UI.Adapters.ControlAdapter> clase.</span><span class="sxs-lookup"><span data-stu-id="76214-170">The following code example shows how to derive a custom control from the <xref:System.Web.UI.Control> class, and then create a corresponding adapter that inherits from the <xref:System.Web.UI.Adapters.ControlAdapter> class.</span></span> <span data-ttu-id="76214-171">El adaptador reemplaza el <xref:System.Web.UI.Adapters.ControlAdapter.Control%2A> propiedad y devuelve una referencia fuertemente tipada al control.</span><span class="sxs-lookup"><span data-stu-id="76214-171">The adapter overrides the <xref:System.Web.UI.Adapters.ControlAdapter.Control%2A> property and returns a strongly-typed reference to the control.</span></span>  
  
 [!code-cpp[ControlAdapter.Control#1](~/samples/snippets/cpp/VS_Snippets_WebNet/ControlAdapter.Control/CPP/controladapter.control.cpp#1)]
 [!code-csharp[ControlAdapter.Control#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ControlAdapter.Control/CS/controladapter.control.cs#1)]
 [!code-vb[ControlAdapter.Control#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ControlAdapter.Control/VB/controladapter.control.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="76214-172">Al heredar de la <see cref="T:System.Web.UI.Adapters.ControlAdapter" /> (clase), como mínimo, debe implementar un <see langword="Control" /> propiedad para devolver una instancia fuertemente tipada del control, como se muestra en la sección ejemplo.</span><span class="sxs-lookup"><span data-stu-id="76214-172">When you inherit from the <see cref="T:System.Web.UI.Adapters.ControlAdapter" /> class, at a minimum, you should implement a <see langword="Control" /> property to return a strongly-typed instance of the control, as shown in the Example section.</span></span></para></block>
        <altmember cref="T:System.Web.UI.Control" />
      </Docs>
    </Member>
    <Member MemberName="CreateChildControls">
      <MemberSignature Language="C#" Value="protected internal virtual void CreateChildControls ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void CreateChildControls() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.ControlAdapter.CreateChildControls" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub CreateChildControls ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void CreateChildControls();" />
      <MemberSignature Language="F#" Value="abstract member CreateChildControls : unit -&gt; unit&#xA;override this.CreateChildControls : unit -&gt; unit" Usage="controlAdapter.CreateChildControls " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="76214-173">Crea los controles secundarios específicos del destino para un control compuesto.</span><span class="sxs-lookup"><span data-stu-id="76214-173">Creates the target-specific child controls for a composite control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76214-174">Si hay un adaptador de control derivada se adjunta a un <xref:System.Web.UI.Control> objeto y el <xref:System.Web.UI.Adapters.ControlAdapter.CreateChildControls%2A> se invalida el método, se llama a la invalidación en lugar de la <xref:System.Web.UI.Control.CreateChildControls%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="76214-174">If there is a derived control adapter attached to a <xref:System.Web.UI.Control> object and the <xref:System.Web.UI.Adapters.ControlAdapter.CreateChildControls%2A> method is overridden, the override is called instead of the <xref:System.Web.UI.Control.CreateChildControls%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="76214-175">Por lo tanto, <xref:System.Web.UI.Adapters.ControlAdapter.CreateChildControls%2A> puede usarse para crear un conjunto de controles secundarios específicos del destino.</span><span class="sxs-lookup"><span data-stu-id="76214-175">Thus, <xref:System.Web.UI.Adapters.ControlAdapter.CreateChildControls%2A> can be used to create a target-specific child control set.</span></span>  
  
 <span data-ttu-id="76214-176">Para obtener más información sobre la combinación de controles para crear un nuevo control, vea [controles compuestos](https://msdn.microsoft.com/library/fb174677-d845-467c-8bf3-cc096b2490b0).</span><span class="sxs-lookup"><span data-stu-id="76214-176">For more information about combining controls to create a new control, see [Composite Controls](https://msdn.microsoft.com/library/fb174677-d845-467c-8bf3-cc096b2490b0).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="76214-177">Si crea una clase heredera y reemplaza el <see cref="M:System.Web.UI.Adapters.ControlAdapter.CreateChildControls" /> método, no la llamada al método base a menos que desee agregar controles a los creados por el método base.</span><span class="sxs-lookup"><span data-stu-id="76214-177">If you create an inheriting class and override the <see cref="M:System.Web.UI.Adapters.ControlAdapter.CreateChildControls" /> method, do not call the base method unless you want to add controls to those created by the base method.</span></span> <span data-ttu-id="76214-178">En caso contrario, podría crear dos conjuntos secundarios controles.</span><span class="sxs-lookup"><span data-stu-id="76214-178">Otherwise you could create two sets of child controls.</span></span></para></block>
        <altmember cref="M:System.Web.UI.Control.CreateChildControls" />
        <altmember cref="T:System.Web.UI.Control" />
      </Docs>
    </Member>
    <Member MemberName="EndRender">
      <MemberSignature Language="C#" Value="protected internal virtual void EndRender (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void EndRender(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.ControlAdapter.EndRender(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub EndRender (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void EndRender(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member EndRender : System.Web.UI.HtmlTextWriter -&gt; unit&#xA;override this.EndRender : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="controlAdapter.EndRender writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="76214-179"><see cref="T:System.Web.UI.HtmlTextWriter" /> que contiene los métodos para representar el resultado específico del destino.</span><span class="sxs-lookup"><span data-stu-id="76214-179">The <see cref="T:System.Web.UI.HtmlTextWriter" /> containing methods to render the target-specific output.</span></span></param>
        <summary><span data-ttu-id="76214-180">Se le llama después de la representación de un control.</span><span class="sxs-lookup"><span data-stu-id="76214-180">Called after the rendering of a control.</span></span> <span data-ttu-id="76214-181">En una clase de adaptador derivada, genera etiquetas de cierre requeridas por un destino concreto pero que no son necesarias para los exploradores de HTML.</span><span class="sxs-lookup"><span data-stu-id="76214-181">In a derived adapter class, generates closing tags that are required by a specific target but not needed by HTML browsers.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76214-182">El <xref:System.Web.UI.Adapters.ControlAdapter.EndRender%2A> se llama al método justo después de la <xref:System.Web.UI.Adapters.ControlAdapter.Render%2A> método y se usa para realizar el procesamiento posterior específico del destino después de la representación del control.</span><span class="sxs-lookup"><span data-stu-id="76214-182">The <xref:System.Web.UI.Adapters.ControlAdapter.EndRender%2A> method is called just after the <xref:System.Web.UI.Adapters.ControlAdapter.Render%2A> method, and is used to perform target-specific postprocessing after the rendering of the control.</span></span>  
  
 <span data-ttu-id="76214-183">Use la <xref:System.Web.UI.Adapters.ControlAdapter.EndRender%2A> método junto con el <xref:System.Web.UI.Adapters.ControlAdapter.BeginRender%2A> para garantizar la coherencia de la etiqueta a la apertura y cierre.</span><span class="sxs-lookup"><span data-stu-id="76214-183">Use the <xref:System.Web.UI.Adapters.ControlAdapter.EndRender%2A> method in combination with the <xref:System.Web.UI.Adapters.ControlAdapter.BeginRender%2A> method to ensure opening and closing tag consistency.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="76214-184">Al heredar de la <see cref="T:System.Web.UI.Adapters.ControlAdapter" /> (clase), el <see cref="M:System.Web.UI.Adapters.ControlAdapter.EndRender(System.Web.UI.HtmlTextWriter)" /> basar las llamadas al método el <see cref="M:System.Web.UI.HtmlTextWriter.EndRender" /> método.</span><span class="sxs-lookup"><span data-stu-id="76214-184">When you inherit from the <see cref="T:System.Web.UI.Adapters.ControlAdapter" /> class, the <see cref="M:System.Web.UI.Adapters.ControlAdapter.EndRender(System.Web.UI.HtmlTextWriter)" /> base method calls the <see cref="M:System.Web.UI.HtmlTextWriter.EndRender" /> method.</span></span> <span data-ttu-id="76214-185">Por lo tanto, invalidaciones de la <see cref="M:System.Web.UI.Adapters.ControlAdapter.EndRender(System.Web.UI.HtmlTextWriter)" /> debe llamar al método el <see cref="M:System.Web.UI.Adapters.ControlAdapter.EndRender(System.Web.UI.HtmlTextWriter)" /> método base solo si su procesamiento es además, en lugar de en lugar de la <see cref="M:System.Web.UI.HtmlTextWriter.EndRender" /> método.</span><span class="sxs-lookup"><span data-stu-id="76214-185">Thus, overrides of the <see cref="M:System.Web.UI.Adapters.ControlAdapter.EndRender(System.Web.UI.HtmlTextWriter)" /> method should call the <see cref="M:System.Web.UI.Adapters.ControlAdapter.EndRender(System.Web.UI.HtmlTextWriter)" /> base method only if its processing is in addition to, rather than instead of, the <see cref="M:System.Web.UI.HtmlTextWriter.EndRender" /> method.</span></span></para></block>
        <altmember cref="M:System.Web.UI.HtmlTextWriter.EndRender" />
        <altmember cref="M:System.Web.UI.Adapters.ControlAdapter.Render(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.Adapters.ControlAdapter.BeginRender(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
        <altmember cref="T:System.Web.UI.Control" />
      </Docs>
    </Member>
    <Member MemberName="LoadAdapterControlState">
      <MemberSignature Language="C#" Value="protected internal virtual void LoadAdapterControlState (object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void LoadAdapterControlState(object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub LoadAdapterControlState (state As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void LoadAdapterControlState(System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member LoadAdapterControlState : obj -&gt; unit&#xA;override this.LoadAdapterControlState : obj -&gt; unit" Usage="controlAdapter.LoadAdapterControlState state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="state"><span data-ttu-id="76214-186">Un objeto <see cref="T:System.Object" /> que contiene la información de estado de los controles del adaptador como <see cref="T:System.Web.UI.StateBag" />.</span><span class="sxs-lookup"><span data-stu-id="76214-186">An <see cref="T:System.Object" /> that contains the adapter's control state information as a <see cref="T:System.Web.UI.StateBag" />.</span></span></param>
        <summary><span data-ttu-id="76214-187">Carga información de estado del control de adaptador, guardada por <see cref="M:System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState" /> durante una solicitud anterior, en la página donde reside el control asociado a este adaptador de control.</span><span class="sxs-lookup"><span data-stu-id="76214-187">Loads adapter control state information that was saved by <see cref="M:System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState" /> during a previous request to the page where the control associated with this control adapter resides.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76214-188">Estado de control es la información de estado esencial necesaria incluso si se deshabilita el estado de vista.</span><span class="sxs-lookup"><span data-stu-id="76214-188">Control state is the essential state information needed even if view state is disabled.</span></span> <span data-ttu-id="76214-189">Cuando un adaptador necesita mantener su propia información de estado de control, puede invalidar el <xref:System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState%2A> y <xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="76214-189">When an adapter needs to maintain its own control state information, it can override the <xref:System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState%2A> and <xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState%2A> methods.</span></span>  
  
 <span data-ttu-id="76214-190">Un adaptador podría necesitar mantener información de estado de control cuando hay características que necesitan tener mantener el estado entre las solicitudes, independientemente del estado del control asociado.</span><span class="sxs-lookup"><span data-stu-id="76214-190">An adapter might need to maintain control state information when there are features that need to have state maintained across requests, independent from the state of the associated control.</span></span> <span data-ttu-id="76214-191">Por ejemplo, un control compuesto que consta de una pantalla de texto grande y un grupo de <xref:System.Web.UI.WebControls.RadioButton> controles pueden representar como una vista única en exploradores de equipos de escritorio.</span><span class="sxs-lookup"><span data-stu-id="76214-191">For example, a composite control consisting of a large textual display and a group of <xref:System.Web.UI.WebControls.RadioButton> controls might render as a single view on desktop computer browsers.</span></span> <span data-ttu-id="76214-192">En otros exploradores, que es posible que dividir su procesamiento - una vista para la presentación textual y otra para el grupo de botones de radio.</span><span class="sxs-lookup"><span data-stu-id="76214-192">On other browsers, it might split its rendering - one view for the textual display and the other for the radio button group.</span></span> <span data-ttu-id="76214-193">El adaptador necesitará mantener su propia información específica de destino acerca de la vista activa actualmente.</span><span class="sxs-lookup"><span data-stu-id="76214-193">The adapter would need to maintain its own target-specific information about the currently active view.</span></span>  
  
 <span data-ttu-id="76214-194">El <xref:System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState%2A> se llama al método inmediatamente después de la <xref:System.Web.UI.Control.LoadControlState%2A?displayProperty=nameWithType> método, en el `LoadState` fase del ciclo de vida.</span><span class="sxs-lookup"><span data-stu-id="76214-194">The <xref:System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState%2A> method is called immediately after the <xref:System.Web.UI.Control.LoadControlState%2A?displayProperty=nameWithType> method, in the `LoadState` lifecycle stage.</span></span> <span data-ttu-id="76214-195">El estado de control de adaptador es independiente y, además del estado de control del control.</span><span class="sxs-lookup"><span data-stu-id="76214-195">The adapter control state is separate and in addition to the control state of the control.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.LoadControlState(System.Object)" />
        <altmember cref="T:System.Web.UI.Control" />
        <altmember cref="M:System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState" />
        <altmember cref="M:System.Web.UI.Adapters.ControlAdapter.LoadAdapterViewState(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="LoadAdapterViewState">
      <MemberSignature Language="C#" Value="protected internal virtual void LoadAdapterViewState (object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void LoadAdapterViewState(object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.ControlAdapter.LoadAdapterViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub LoadAdapterViewState (state As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void LoadAdapterViewState(System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member LoadAdapterViewState : obj -&gt; unit&#xA;override this.LoadAdapterViewState : obj -&gt; unit" Usage="controlAdapter.LoadAdapterViewState state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="state"><span data-ttu-id="76214-196"><see cref="T:System.Object" /> que contiene la información de estado de la vista del adaptador como <see cref="T:System.Web.UI.StateBag" />.</span><span class="sxs-lookup"><span data-stu-id="76214-196">An <see cref="T:System.Object" /> that contains the adapter view state information as a <see cref="T:System.Web.UI.StateBag" />.</span></span></param>
        <summary><span data-ttu-id="76214-197">Carga información del estado de la vista del adaptador, guardada por <see cref="M:System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState" /> durante una solicitud anterior, en la página donde reside el control asociado a este adaptador de control.</span><span class="sxs-lookup"><span data-stu-id="76214-197">Loads adapter view state information that was saved by <see cref="M:System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState" /> during a previous request to the page where the control associated with this control adapter resides.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76214-198">Cuando un adaptador necesita mantener su propia información de estado de vista, puede reemplazar el <xref:System.Web.UI.Adapters.ControlAdapter.LoadAdapterViewState%2A> y <xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="76214-198">When an adapter needs to maintain its own view state information, it can override the <xref:System.Web.UI.Adapters.ControlAdapter.LoadAdapterViewState%2A> and <xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState%2A> methods.</span></span>  
  
 <span data-ttu-id="76214-199">Un adaptador necesita mantener información de estado de vista cuando hay datos que deben mantenerse en todas las solicitudes, independientemente del estado de vista del control asociado.</span><span class="sxs-lookup"><span data-stu-id="76214-199">An adapter needs to maintain view state information when there is data that must be maintained across requests, independent from the view state of the associated control.</span></span> <span data-ttu-id="76214-200">Por ejemplo, un control de cuadrícula en exploradores de equipos de escritorio podría representarse como una vista única de filas y columnas de valores.</span><span class="sxs-lookup"><span data-stu-id="76214-200">For example, a grid control on desktop computer browsers might render as a single view of rows and columns of values.</span></span> <span data-ttu-id="76214-201">En otros exploradores, su representación en varias vistas distintas, como una lista de filas y los detalles de una sola fila podría dividirse.</span><span class="sxs-lookup"><span data-stu-id="76214-201">On other browsers, it might split its rendering into multiple separate views, such as a list of rows and details of a single row.</span></span> <span data-ttu-id="76214-202">El adaptador necesitará mantener los datos de las vistas que no están activos actualmente en estado de vista.</span><span class="sxs-lookup"><span data-stu-id="76214-202">The adapter would need to maintain the data for the views that are not currently active in view state.</span></span>  
  
 <span data-ttu-id="76214-203">El <xref:System.Web.UI.Adapters.ControlAdapter.LoadAdapterViewState%2A> se llama al método inmediatamente antes de la <xref:System.Web.UI.Control.LoadViewState%2A?displayProperty=nameWithType> método en el `LoadState` fase del ciclo de vida.</span><span class="sxs-lookup"><span data-stu-id="76214-203">The <xref:System.Web.UI.Adapters.ControlAdapter.LoadAdapterViewState%2A> method is called immediately before the <xref:System.Web.UI.Control.LoadViewState%2A?displayProperty=nameWithType> method in the `LoadState` lifecycle stage.</span></span> <span data-ttu-id="76214-204">El estado de vista del adaptador es independiente y además del estado de vista del control.</span><span class="sxs-lookup"><span data-stu-id="76214-204">The adapter view state is separate and in addition to the view state of the control.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.LoadViewState(System.Object)" />
        <altmember cref="T:System.Web.UI.Control" />
        <altmember cref="M:System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState" />
        <altmember cref="M:System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState(System.Object)" />
        <altmember cref="P:System.Web.UI.Control.ViewState" />
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal virtual void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.ControlAdapter.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnInit : EventArgs -&gt; unit&#xA;override this.OnInit : EventArgs -&gt; unit" Usage="controlAdapter.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="76214-205">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="76214-205">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="76214-206">Reemplaza el método <see cref="M:System.Web.UI.Control.OnInit(System.EventArgs)" /> para el control asociado.</span><span class="sxs-lookup"><span data-stu-id="76214-206">Overrides the <see cref="M:System.Web.UI.Control.OnInit(System.EventArgs)" /> method for the associated control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76214-207">Si hay un adaptador conectado a un <xref:System.Web.UI.Control> objeto y el <xref:System.Web.UI.Adapters.ControlAdapter.OnInit%2A> se invalida el método, se llama al método de invalidación en lugar de la <xref:System.Web.UI.Control.OnInit%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="76214-207">If there is an adapter attached to a <xref:System.Web.UI.Control> object and the <xref:System.Web.UI.Adapters.ControlAdapter.OnInit%2A> method is overridden, the override method is called instead of the <xref:System.Web.UI.Control.OnInit%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="76214-208">Invalidar <xref:System.Web.UI.Adapters.ControlAdapter.OnInit%2A> para realizar el procesamiento específico del destino en el `Initialize` fase del ciclo de vida del control.</span><span class="sxs-lookup"><span data-stu-id="76214-208">Override <xref:System.Web.UI.Adapters.ControlAdapter.OnInit%2A> to perform target-specific processing in the `Initialize` stage of the control lifecycle.</span></span> <span data-ttu-id="76214-209">Normalmente, estas son las funciones que se llevan a cabo cuando se crea un control.</span><span class="sxs-lookup"><span data-stu-id="76214-209">Typically, these are functions that are performed when a control is created.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="76214-210">El siguiente ejemplo de código deriva de un adaptador de control personalizado desde la <xref:System.Web.UI.Adapters.ControlAdapter> clase.</span><span class="sxs-lookup"><span data-stu-id="76214-210">The following code sample derives a custom control adapter from the <xref:System.Web.UI.Adapters.ControlAdapter> class.</span></span> <span data-ttu-id="76214-211">A continuación, reemplaza el <xref:System.Web.UI.Adapters.ControlAdapter.OnInit%2A> método para establecer una propiedad del control asociado y llamar al método base para completar la inicialización del control.</span><span class="sxs-lookup"><span data-stu-id="76214-211">It then overrides the <xref:System.Web.UI.Adapters.ControlAdapter.OnInit%2A> method to set a property on the associated control and call the base method to complete the control initialization.</span></span>  
  
 [!code-cpp[ControlAdapter_OnInit#1](~/samples/snippets/cpp/VS_Snippets_WebNet/ControlAdapter_OnInit/CPP/controladapter_oninit.cpp#1)]
 [!code-csharp[ControlAdapter_OnInit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ControlAdapter_OnInit/CS/controladapter_oninit.cs#1)]
 [!code-vb[ControlAdapter_OnInit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ControlAdapter_OnInit/VB/controladapter_oninit.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="76214-212">Al heredar de la <see cref="T:System.Web.UI.Adapters.ControlAdapter" /> clase y las invalidaciones de adaptador el <see cref="M:System.Web.UI.Adapters.ControlAdapter.OnInit(System.EventArgs)" /> método, el adaptador debe llamar al método de clase base correspondiente, que a su vez llama a la <see cref="M:System.Web.UI.Control.OnInit(System.EventArgs)" /> método.</span><span class="sxs-lookup"><span data-stu-id="76214-212">When you inherit from the <see cref="T:System.Web.UI.Adapters.ControlAdapter" /> class and the adapter overrides the <see cref="M:System.Web.UI.Adapters.ControlAdapter.OnInit(System.EventArgs)" /> method, the adapter must call the corresponding base class method, which in turn calls the <see cref="M:System.Web.UI.Control.OnInit(System.EventArgs)" /> method.</span></span> <span data-ttu-id="76214-213">Si el <see cref="M:System.Web.UI.Control.OnInit(System.EventArgs)" /> no invoca el método, el <see cref="E:System.Web.UI.Control.Init" /> no se producirá el evento.</span><span class="sxs-lookup"><span data-stu-id="76214-213">If the <see cref="M:System.Web.UI.Control.OnInit(System.EventArgs)" /> method is not called, the <see cref="E:System.Web.UI.Control.Init" /> event will not be raised.</span></span></para></block>
        <altmember cref="E:System.Web.UI.Control.Init" />
        <altmember cref="M:System.Web.UI.Control.OnInit(System.EventArgs)" />
        <altmember cref="T:System.Web.UI.Control" />
      </Docs>
    </Member>
    <Member MemberName="OnLoad">
      <MemberSignature Language="C#" Value="protected internal virtual void OnLoad (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnLoad(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.ControlAdapter.OnLoad(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnLoad (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnLoad(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLoad : EventArgs -&gt; unit&#xA;override this.OnLoad : EventArgs -&gt; unit" Usage="controlAdapter.OnLoad e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="76214-214">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="76214-214">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="76214-215">Reemplaza el método <see cref="M:System.Web.UI.Control.OnLoad(System.EventArgs)" /> para el control asociado.</span><span class="sxs-lookup"><span data-stu-id="76214-215">Overrides the <see cref="M:System.Web.UI.Control.OnLoad(System.EventArgs)" /> method for the associated control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76214-216">Si hay un adaptador conectado a un <xref:System.Web.UI.Control> objeto y el <xref:System.Web.UI.Adapters.ControlAdapter.OnLoad%2A> se invalida el método, se llama al método de invalidación en lugar de la <xref:System.Web.UI.Control.OnLoad%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="76214-216">If there is an adapter attached to a <xref:System.Web.UI.Control> object and the <xref:System.Web.UI.Adapters.ControlAdapter.OnLoad%2A> method is overridden, the override method is called instead of the <xref:System.Web.UI.Control.OnLoad%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="76214-217">Invalidar el <xref:System.Web.UI.Adapters.ControlAdapter.OnLoad%2A> método para realizar el procesamiento específico del destino en el `Load` fase del ciclo de vida del control.</span><span class="sxs-lookup"><span data-stu-id="76214-217">Override the <xref:System.Web.UI.Adapters.ControlAdapter.OnLoad%2A> method to perform target-specific processing in the `Load` stage of the control lifecycle.</span></span> <span data-ttu-id="76214-218">Normalmente, estas son las funciones que deben realizarse para cada solicitud de cliente.</span><span class="sxs-lookup"><span data-stu-id="76214-218">Typically, these are functions that should be performed for each client request.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="76214-219">Al heredar de la <see cref="T:System.Web.UI.Adapters.ControlAdapter" /> clase y las invalidaciones de adaptador el <see cref="M:System.Web.UI.Adapters.ControlAdapter.OnLoad(System.EventArgs)" /> método, el adaptador debe llamar al método de clase base correspondiente, que a su vez llama a la <see cref="M:System.Web.UI.Control.OnLoad(System.EventArgs)" /> método.</span><span class="sxs-lookup"><span data-stu-id="76214-219">When you inherit from the <see cref="T:System.Web.UI.Adapters.ControlAdapter" /> class and the adapter overrides the <see cref="M:System.Web.UI.Adapters.ControlAdapter.OnLoad(System.EventArgs)" /> method, the adapter must call the corresponding base class method, which in turn calls the <see cref="M:System.Web.UI.Control.OnLoad(System.EventArgs)" /> method.</span></span> <span data-ttu-id="76214-220">Si <see cref="M:System.Web.UI.Control.OnLoad(System.EventArgs)" /> no se llama, el <see cref="E:System.Web.UI.Control.Load" /> no se producirá el evento.</span><span class="sxs-lookup"><span data-stu-id="76214-220">If <see cref="M:System.Web.UI.Control.OnLoad(System.EventArgs)" /> is not called, the <see cref="E:System.Web.UI.Control.Load" /> event will not be raised.</span></span></para></block>
        <altmember cref="E:System.Web.UI.Control.Load" />
        <altmember cref="M:System.Web.UI.Control.OnLoad(System.EventArgs)" />
        <altmember cref="T:System.Web.UI.Control" />
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.ControlAdapter.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreRender(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreRender : EventArgs -&gt; unit&#xA;override this.OnPreRender : EventArgs -&gt; unit" Usage="controlAdapter.OnPreRender e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="76214-221">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="76214-221">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="76214-222">Reemplaza el método <see cref="M:System.Web.UI.Control.OnPreRender(System.EventArgs)" /> para el control asociado.</span><span class="sxs-lookup"><span data-stu-id="76214-222">Overrides the <see cref="M:System.Web.UI.Control.OnPreRender(System.EventArgs)" /> method for the associated control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76214-223">Si hay un adaptador conectado a un <xref:System.Web.UI.Control> objeto y el <xref:System.Web.UI.Adapters.ControlAdapter.OnPreRender%2A> se invalida el método, se llama al método de invalidación en lugar de la <xref:System.Web.UI.Control.OnPreRender%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="76214-223">If there is an adapter attached to a <xref:System.Web.UI.Control> object and the <xref:System.Web.UI.Adapters.ControlAdapter.OnPreRender%2A> method is overridden, the override method is called instead of the <xref:System.Web.UI.Control.OnPreRender%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="76214-224">Invalidar el <xref:System.Web.UI.Adapters.ControlAdapter.OnPreRender%2A> método para realizar el procesamiento específico del destino en el `PreRender` fase del ciclo de vida del control.</span><span class="sxs-lookup"><span data-stu-id="76214-224">Override the <xref:System.Web.UI.Adapters.ControlAdapter.OnPreRender%2A> method to perform target-specific processing in the `PreRender` stage of the control lifecycle.</span></span> <span data-ttu-id="76214-225">Normalmente, son funciones que preceden inmediatamente a la representación del resultado del control.</span><span class="sxs-lookup"><span data-stu-id="76214-225">Typically, these are functions that immediately precede rendering of the control output.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="76214-226">Al heredar de la <see cref="T:System.Web.UI.Adapters.ControlAdapter" /> clase y las invalidaciones de adaptador el <see cref="M:System.Web.UI.Adapters.ControlAdapter.OnPreRender(System.EventArgs)" /> método, el adaptador debe llamar al método de clase base correspondiente, que a su vez llama a la <see cref="M:System.Web.UI.Control.OnPreRender(System.EventArgs)" /> método.</span><span class="sxs-lookup"><span data-stu-id="76214-226">When you inherit from the <see cref="T:System.Web.UI.Adapters.ControlAdapter" /> class and the adapter overrides the <see cref="M:System.Web.UI.Adapters.ControlAdapter.OnPreRender(System.EventArgs)" /> method, the adapter must call the corresponding base class method, which in turn calls the <see cref="M:System.Web.UI.Control.OnPreRender(System.EventArgs)" /> method.</span></span> <span data-ttu-id="76214-227">Si el <see cref="M:System.Web.UI.Control.OnPreRender(System.EventArgs)" /> no invoca el método, el <see cref="E:System.Web.UI.Control.PreRender" /> no se producirá el evento.</span><span class="sxs-lookup"><span data-stu-id="76214-227">If the <see cref="M:System.Web.UI.Control.OnPreRender(System.EventArgs)" /> method is not called, the <see cref="E:System.Web.UI.Control.PreRender" /> event will not be raised.</span></span></para></block>
        <altmember cref="E:System.Web.UI.Control.PreRender" />
        <altmember cref="M:System.Web.UI.Control.OnPreRender(System.EventArgs)" />
        <altmember cref="T:System.Web.UI.Control" />
      </Docs>
    </Member>
    <Member MemberName="OnUnload">
      <MemberSignature Language="C#" Value="protected internal virtual void OnUnload (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnUnload(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.ControlAdapter.OnUnload(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnUnload (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnUnload(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnUnload : EventArgs -&gt; unit&#xA;override this.OnUnload : EventArgs -&gt; unit" Usage="controlAdapter.OnUnload e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="76214-228">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="76214-228">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="76214-229">Reemplaza el método <see cref="M:System.Web.UI.Control.OnUnload(System.EventArgs)" /> para el control asociado.</span><span class="sxs-lookup"><span data-stu-id="76214-229">Overrides the <see cref="M:System.Web.UI.Control.OnUnload(System.EventArgs)" /> method for the associated control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76214-230">Si hay un adaptador conectado a un <xref:System.Web.UI.Control> objeto y el <xref:System.Web.UI.Adapters.ControlAdapter.OnUnload%2A> se invalida el método, se llama al método de invalidación en lugar de la <xref:System.Web.UI.Control.OnUnload%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="76214-230">If there is an adapter attached to a <xref:System.Web.UI.Control> object and the <xref:System.Web.UI.Adapters.ControlAdapter.OnUnload%2A> method is overridden, the override method is called instead of the <xref:System.Web.UI.Control.OnUnload%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="76214-231">Invalidar el <xref:System.Web.UI.Adapters.ControlAdapter.OnUnload%2A> método para realizar el procesamiento específico del destino el `Unload` fase del ciclo de vida del control.</span><span class="sxs-lookup"><span data-stu-id="76214-231">Override the <xref:System.Web.UI.Adapters.ControlAdapter.OnUnload%2A> method to do target-specific processing in the `Unload` stage of the control lifecycle.</span></span> <span data-ttu-id="76214-232">Normalmente, estas son las funciones de limpieza que preceden a la eliminación del control.</span><span class="sxs-lookup"><span data-stu-id="76214-232">Typically, these are cleanup functions that precede disposition of the control.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="76214-233">Al heredar de la <see cref="T:System.Web.UI.Adapters.ControlAdapter" /> clase y las invalidaciones de adaptador el <see cref="M:System.Web.UI.Adapters.ControlAdapter.OnUnload(System.EventArgs)" /> método, el adaptador debe llamar al método de clase base correspondiente, que a su vez llama a la <see cref="M:System.Web.UI.Control.OnUnload(System.EventArgs)" /> método.</span><span class="sxs-lookup"><span data-stu-id="76214-233">When you inherit from the <see cref="T:System.Web.UI.Adapters.ControlAdapter" /> class and the adapter overrides the <see cref="M:System.Web.UI.Adapters.ControlAdapter.OnUnload(System.EventArgs)" /> method, the adapter must call the corresponding base class method, which in turn calls the <see cref="M:System.Web.UI.Control.OnUnload(System.EventArgs)" /> method.</span></span> <span data-ttu-id="76214-234">Si <see cref="M:System.Web.UI.Control.OnUnload(System.EventArgs)" /> no se llama, el <see cref="E:System.Web.UI.Control.Unload" /> no se producirá el evento.</span><span class="sxs-lookup"><span data-stu-id="76214-234">If <see cref="M:System.Web.UI.Control.OnUnload(System.EventArgs)" /> is not called, the <see cref="E:System.Web.UI.Control.Unload" /> event will not be raised.</span></span></para></block>
        <altmember cref="E:System.Web.UI.Control.Unload" />
        <altmember cref="M:System.Web.UI.Control.OnUnload(System.EventArgs)" />
        <altmember cref="T:System.Web.UI.Control" />
      </Docs>
    </Member>
    <Member MemberName="Page">
      <MemberSignature Language="C#" Value="protected System.Web.UI.Page Page { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Page Page" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Adapters.ControlAdapter.Page" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Page As Page" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Web::UI::Page ^ Page { System::Web::UI::Page ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Page : System.Web.UI.Page" Usage="System.Web.UI.Adapters.ControlAdapter.Page" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.Page</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76214-235">Obtiene una referencia a la página donde reside el control asociado a este adaptador.</span><span class="sxs-lookup"><span data-stu-id="76214-235">Gets a reference to the page where the control associated with this adapter resides.</span></span></summary>
        <value><span data-ttu-id="76214-236">Un <see cref="T:System.Web.UI.Page" /> que proporciona acceso a la instancia de la página donde se encuentra el control asociado.</span><span class="sxs-lookup"><span data-stu-id="76214-236">A <see cref="T:System.Web.UI.Page" /> that provides access to the page instance where the associated control is situated.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76214-237">El <xref:System.Web.UI.Adapters.ControlAdapter.Page%2A> propiedad proporciona acceso a la <xref:System.Web.UI.Page?displayProperty=nameWithType> objeto donde se encuentra el control.</span><span class="sxs-lookup"><span data-stu-id="76214-237">The <xref:System.Web.UI.Adapters.ControlAdapter.Page%2A> property provides access to the <xref:System.Web.UI.Page?displayProperty=nameWithType> object where the control is situated.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Page" />
        <altmember cref="T:System.Web.UI.Control" />
      </Docs>
    </Member>
    <Member MemberName="PageAdapter">
      <MemberSignature Language="C#" Value="protected System.Web.UI.Adapters.PageAdapter PageAdapter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Adapters.PageAdapter PageAdapter" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Adapters.ControlAdapter.PageAdapter" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property PageAdapter As PageAdapter" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Web::UI::Adapters::PageAdapter ^ PageAdapter { System::Web::UI::Adapters::PageAdapter ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PageAdapter : System.Web.UI.Adapters.PageAdapter" Usage="System.Web.UI.Adapters.ControlAdapter.PageAdapter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.Adapters.PageAdapter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76214-238">Obtiene una referencia al adaptador de la página donde reside el control asociado.</span><span class="sxs-lookup"><span data-stu-id="76214-238">Gets a reference to the page adapter for the page where the associated control resides.</span></span></summary>
        <value><span data-ttu-id="76214-239"><see cref="T:System.Web.UI.Adapters.PageAdapter" /> para la página donde se encuentra el control asociado al <see cref="T:System.Web.UI.Adapters.ControlAdapter" /> actual.</span><span class="sxs-lookup"><span data-stu-id="76214-239">A <see cref="T:System.Web.UI.Adapters.PageAdapter" /> for the page where the control associated with the current <see cref="T:System.Web.UI.Adapters.ControlAdapter" /> is situated.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76214-240">El <xref:System.Web.UI.Adapters.ControlAdapter.PageAdapter%2A> propiedad proporciona acceso a la <xref:System.Web.UI.Adapters.PageAdapter?displayProperty=nameWithType> de objeto para el <xref:System.Web.UI.Page> objeto donde el <xref:System.Web.UI.Control> objeto asociado con el actual <xref:System.Web.UI.Adapters.ControlAdapter> se encuentra el objeto.</span><span class="sxs-lookup"><span data-stu-id="76214-240">The <xref:System.Web.UI.Adapters.ControlAdapter.PageAdapter%2A> property provides access to the <xref:System.Web.UI.Adapters.PageAdapter?displayProperty=nameWithType> object for the <xref:System.Web.UI.Page> object where the <xref:System.Web.UI.Control> object associated with the current <xref:System.Web.UI.Adapters.ControlAdapter> object is situated.</span></span>  
  
 <span data-ttu-id="76214-241">El <xref:System.Web.UI.Adapters.ControlAdapter.PageAdapter%2A> propiedad puede utilizarse para tener acceso a otros elementos en el nivel de adaptador de página, como las funciones específicas del destino comunes que pueden aplicarse a varios tipos de control en la página.</span><span class="sxs-lookup"><span data-stu-id="76214-241">The <xref:System.Web.UI.Adapters.ControlAdapter.PageAdapter%2A> property can be used to access other items at the page adapter level, such as common target-specific functions that could apply to several control types on the page.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Adapters.PageAdapter" />
        <altmember cref="T:System.Web.UI.Control" />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal virtual void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.ControlAdapter.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member Render : System.Web.UI.HtmlTextWriter -&gt; unit&#xA;override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="controlAdapter.Render writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="76214-242"><see cref="T:System.Web.UI.HtmlTextWriter" /> que se utiliza para representar el resultado específico del destino.</span><span class="sxs-lookup"><span data-stu-id="76214-242">The <see cref="T:System.Web.UI.HtmlTextWriter" /> to use to render the target-specific output.</span></span></param>
        <summary><span data-ttu-id="76214-243">Genera el marcado específico del destino para el control al que está asociado el adaptador de control.</span><span class="sxs-lookup"><span data-stu-id="76214-243">Generates the target-specific markup for the control to which the control adapter is attached.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76214-244">Invalidar el <xref:System.Web.UI.Adapters.ControlAdapter.Render%2A> método para generar el marcado específico del destino que se envía al explorador del cliente.</span><span class="sxs-lookup"><span data-stu-id="76214-244">Override the <xref:System.Web.UI.Adapters.ControlAdapter.Render%2A> method to generate target-specific markup to send to the client browser.</span></span> <span data-ttu-id="76214-245">El <xref:System.Web.UI.Adapters.ControlAdapter.Render%2A> se llama al método en lugar de la <xref:System.Web.UI.Control.Render%2A?displayProperty=nameWithType> método si un <xref:System.Web.UI.Adapters.ControlAdapter> objeto se asocia a un <xref:System.Web.UI.Control> objeto.</span><span class="sxs-lookup"><span data-stu-id="76214-245">The <xref:System.Web.UI.Adapters.ControlAdapter.Render%2A> method is called in place of the <xref:System.Web.UI.Control.Render%2A?displayProperty=nameWithType> method if a <xref:System.Web.UI.Adapters.ControlAdapter> object is attached to a <xref:System.Web.UI.Control> object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="76214-246">Al heredar de la <see cref="T:System.Web.UI.Adapters.ControlAdapter" /> (clase), el <see cref="M:System.Web.UI.Adapters.ControlAdapter.Render(System.Web.UI.HtmlTextWriter)" /> basar las llamadas al método el <see cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)" /> método.</span><span class="sxs-lookup"><span data-stu-id="76214-246">When you inherit from the <see cref="T:System.Web.UI.Adapters.ControlAdapter" /> class, the <see cref="M:System.Web.UI.Adapters.ControlAdapter.Render(System.Web.UI.HtmlTextWriter)" /> base method calls the <see cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)" /> method.</span></span> <span data-ttu-id="76214-247">Por lo tanto, invalidaciones de la <see cref="M:System.Web.UI.Adapters.ControlAdapter.Render(System.Web.UI.HtmlTextWriter)" /> debe llamar al método el <see cref="M:System.Web.UI.Adapters.ControlAdapter.Render(System.Web.UI.HtmlTextWriter)" /> método base solo si su procesamiento es además, en lugar de en lugar de la <see cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)" /> método.</span><span class="sxs-lookup"><span data-stu-id="76214-247">Thus, overrides of the <see cref="M:System.Web.UI.Adapters.ControlAdapter.Render(System.Web.UI.HtmlTextWriter)" /> method should call the <see cref="M:System.Web.UI.Adapters.ControlAdapter.Render(System.Web.UI.HtmlTextWriter)" /> base method only if its processing is in addition to, rather than instead of, the <see cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)" /> method.</span></span>  
  
<span data-ttu-id="76214-248">Para un control compuesto, el desarrollador de adaptadores debe asegurarse de que se representan los controles secundarios.</span><span class="sxs-lookup"><span data-stu-id="76214-248">For a composite control, the adapter developer must ensure that the child controls are rendered.</span></span> <span data-ttu-id="76214-249">Si el <see cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)" /> hace que el elemento secundario controla para procesarse, pero no genera el marcado de método, podría ser adecuado para el <see cref="M:System.Web.UI.Adapters.ControlAdapter.Render(System.Web.UI.HtmlTextWriter)" /> método para llamar a su método base.</span><span class="sxs-lookup"><span data-stu-id="76214-249">If the <see cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)" /> method causes the child controls to be rendered but does not generate markup, it might be appropriate for the <see cref="M:System.Web.UI.Adapters.ControlAdapter.Render(System.Web.UI.HtmlTextWriter)" /> method to call its base method.</span></span> <span data-ttu-id="76214-250">Si es necesaria específico del destino de representación de los controles secundarios, el adaptador debe implementar la <see cref="M:System.Web.UI.Adapters.ControlAdapter.RenderChildren(System.Web.UI.HtmlTextWriter)" /> método y llamar a la <see cref="M:System.Web.UI.Adapters.ControlAdapter.RenderChildren(System.Web.UI.HtmlTextWriter)" /> método desde el <see cref="M:System.Web.UI.Adapters.ControlAdapter.Render(System.Web.UI.HtmlTextWriter)" /> método.</span><span class="sxs-lookup"><span data-stu-id="76214-250">If target-specific rendering of the child controls is necessary, the adapter should implement the <see cref="M:System.Web.UI.Adapters.ControlAdapter.RenderChildren(System.Web.UI.HtmlTextWriter)" /> method and call the <see cref="M:System.Web.UI.Adapters.ControlAdapter.RenderChildren(System.Web.UI.HtmlTextWriter)" /> method from the <see cref="M:System.Web.UI.Adapters.ControlAdapter.Render(System.Web.UI.HtmlTextWriter)" /> method.</span></span></para></block>
        <altmember cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="T:System.Web.UI.Control" />
        <altmember cref="M:System.Web.UI.Adapters.ControlAdapter.RenderChildren(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)" />
      </Docs>
    </Member>
    <Member MemberName="RenderChildren">
      <MemberSignature Language="C#" Value="protected virtual void RenderChildren (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RenderChildren(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.ControlAdapter.RenderChildren(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RenderChildren (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RenderChildren(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member RenderChildren : System.Web.UI.HtmlTextWriter -&gt; unit&#xA;override this.RenderChildren : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="controlAdapter.RenderChildren writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="76214-251"><see cref="T:System.Web.UI.HtmlTextWriter" /> que se utiliza para representar el resultado específico del destino.</span><span class="sxs-lookup"><span data-stu-id="76214-251">The <see cref="T:System.Web.UI.HtmlTextWriter" /> to use to render the target-specific output.</span></span></param>
        <summary><span data-ttu-id="76214-252">Genera el marcado específico del destino para los controles secundarios en un control compuesto al que está asociado el adaptador de control.</span><span class="sxs-lookup"><span data-stu-id="76214-252">Generates the target-specific markup for the child controls in a composite control to which the control adapter is attached.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76214-253">Invalidar el <xref:System.Web.UI.Adapters.ControlAdapter.RenderChildren%2A> método cuando es necesario generar el marcado específico del destino para el conjunto de controles secundarios de un control compuesto, además en el marcado para los controles secundarios individuales.</span><span class="sxs-lookup"><span data-stu-id="76214-253">Override the <xref:System.Web.UI.Adapters.ControlAdapter.RenderChildren%2A> method when it is necessary to generate target-specific markup for the child control set of a composite control, in addition to the markup for the individual child controls.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="76214-254">Al heredar de la <see cref="T:System.Web.UI.Adapters.ControlAdapter" /> (clase), para un control compuesto, el desarrollador de adaptadores debe asegurarse de que se representan los controles secundarios.</span><span class="sxs-lookup"><span data-stu-id="76214-254">When you inherit from the <see cref="T:System.Web.UI.Adapters.ControlAdapter" /> class, for a composite control, the adapter developer must ensure that the child controls are rendered.</span></span> <span data-ttu-id="76214-255">Si el adaptador reemplaza el <see cref="M:System.Web.UI.Adapters.ControlAdapter.RenderChildren(System.Web.UI.HtmlTextWriter)" /> método, debe llamar a la <see cref="M:System.Web.UI.Adapters.ControlAdapter.RenderChildren(System.Web.UI.HtmlTextWriter)" /> método desde un reemplazo del <see cref="M:System.Web.UI.Adapters.ControlAdapter.Render(System.Web.UI.HtmlTextWriter)" /> método.</span><span class="sxs-lookup"><span data-stu-id="76214-255">If the adapter overrides the <see cref="M:System.Web.UI.Adapters.ControlAdapter.RenderChildren(System.Web.UI.HtmlTextWriter)" /> method, it should call the <see cref="M:System.Web.UI.Adapters.ControlAdapter.RenderChildren(System.Web.UI.HtmlTextWriter)" /> method from an override of the <see cref="M:System.Web.UI.Adapters.ControlAdapter.Render(System.Web.UI.HtmlTextWriter)" /> method.</span></span>  
  
<span data-ttu-id="76214-256">Si el <see cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)" /> hace que el elemento secundario controla para procesarse, pero sí mismo no genera el marcado de método, podría ser adecuado para el <see cref="M:System.Web.UI.Adapters.ControlAdapter.Render(System.Web.UI.HtmlTextWriter)" /> método para llamar a su método base, que llama el <see cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)" /> método, en lugar de implementar una invalidación para el <see cref="M:System.Web.UI.Adapters.ControlAdapter.RenderChildren(System.Web.UI.HtmlTextWriter)" /> método.</span><span class="sxs-lookup"><span data-stu-id="76214-256">If the <see cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)" /> method causes the child controls to be rendered but itself does not generate markup, it might be appropriate for the <see cref="M:System.Web.UI.Adapters.ControlAdapter.Render(System.Web.UI.HtmlTextWriter)" /> method to call its base method, which calls the <see cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)" /> method, instead of implementing an override for the <see cref="M:System.Web.UI.Adapters.ControlAdapter.RenderChildren(System.Web.UI.HtmlTextWriter)" /> method.</span></span></para></block>
        <altmember cref="M:System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="T:System.Web.UI.Control" />
        <altmember cref="M:System.Web.UI.Adapters.ControlAdapter.Render(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="SaveAdapterControlState">
      <MemberSignature Language="C#" Value="protected internal virtual object SaveAdapterControlState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance object SaveAdapterControlState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function SaveAdapterControlState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Object ^ SaveAdapterControlState();" />
      <MemberSignature Language="F#" Value="abstract member SaveAdapterControlState : unit -&gt; obj&#xA;override this.SaveAdapterControlState : unit -&gt; obj" Usage="controlAdapter.SaveAdapterControlState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="76214-257">Guarda información de estado de control para el adaptador de control.</span><span class="sxs-lookup"><span data-stu-id="76214-257">Saves control state information for the control adapter.</span></span></summary>
        <returns><span data-ttu-id="76214-258">Un objeto <see cref="T:System.Object" /> que contiene la información de estado de los controles del adaptador como <see cref="T:System.Web.UI.StateBag" />.</span><span class="sxs-lookup"><span data-stu-id="76214-258">An <see cref="T:System.Object" /> that contains the adapter's control state information as a <see cref="T:System.Web.UI.StateBag" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76214-259">Estado de control es la información de estado esencial necesaria incluso si se deshabilita el estado de vista.</span><span class="sxs-lookup"><span data-stu-id="76214-259">Control state is the essential state information needed even if view state is disabled.</span></span> <span data-ttu-id="76214-260">Cuando un adaptador necesita mantener su propia información de estado de control, puede invalidar el <xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState%2A> y <xref:System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="76214-260">When an adapter needs to maintain its own control state information, it can override the <xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState%2A> and <xref:System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState%2A> methods.</span></span>  
  
 <span data-ttu-id="76214-261">Un adaptador podría necesitar mantener información de estado de control cuando hay características que necesitan tener mantener el estado entre las solicitudes, independientemente del estado del control asociado.</span><span class="sxs-lookup"><span data-stu-id="76214-261">An adapter might need to maintain control state information when there are features that need to have state maintained across requests, independent from the state of the associated control.</span></span> <span data-ttu-id="76214-262">Por ejemplo, un control compuesto que consta de una pantalla de texto grande y un grupo de <xref:System.Web.UI.WebControls.RadioButton> controles pueden representar como una vista única en exploradores de equipos de escritorio.</span><span class="sxs-lookup"><span data-stu-id="76214-262">For example, a composite control consisting of a large textual display and a group of <xref:System.Web.UI.WebControls.RadioButton> controls might render as a single view on desktop computer browsers.</span></span> <span data-ttu-id="76214-263">En otros exploradores, que es posible que dividir su procesamiento - una vista para la presentación textual y otra para el grupo de botones de radio.</span><span class="sxs-lookup"><span data-stu-id="76214-263">On other browsers, it might split its rendering - one view for the textual display and the other for the radio button group.</span></span> <span data-ttu-id="76214-264">El adaptador necesitará mantener su propia información específica de destino acerca de la vista activa actualmente.</span><span class="sxs-lookup"><span data-stu-id="76214-264">The adapter would need to maintain its own target-specific information about the currently active view.</span></span>  
  
 <span data-ttu-id="76214-265">El <xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState%2A> se llama al método inmediatamente después de la <xref:System.Web.UI.Control.SaveControlState%2A?displayProperty=nameWithType> método en el `SaveState` fase del ciclo de vida.</span><span class="sxs-lookup"><span data-stu-id="76214-265">The <xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState%2A> method is called immediately after the <xref:System.Web.UI.Control.SaveControlState%2A?displayProperty=nameWithType> method in the `SaveState` lifecycle stage.</span></span> <span data-ttu-id="76214-266">El estado de control de adaptador es independiente y, además del estado de control del control.</span><span class="sxs-lookup"><span data-stu-id="76214-266">The adapter control state is separate and in addition to the control state of the control.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.SaveControlState" />
        <altmember cref="T:System.Web.UI.Control" />
        <altmember cref="M:System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState(System.Object)" />
        <altmember cref="M:System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState" />
      </Docs>
    </Member>
    <Member MemberName="SaveAdapterViewState">
      <MemberSignature Language="C#" Value="protected internal virtual object SaveAdapterViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance object SaveAdapterViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function SaveAdapterViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Object ^ SaveAdapterViewState();" />
      <MemberSignature Language="F#" Value="abstract member SaveAdapterViewState : unit -&gt; obj&#xA;override this.SaveAdapterViewState : unit -&gt; obj" Usage="controlAdapter.SaveAdapterViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="76214-267">Guarda información del estado de vista para el adaptador de control.</span><span class="sxs-lookup"><span data-stu-id="76214-267">Saves view state information for the control adapter.</span></span></summary>
        <returns><span data-ttu-id="76214-268"><see cref="T:System.Object" /> que contiene la información de estado de la vista del adaptador como <see cref="T:System.Web.UI.StateBag" />.</span><span class="sxs-lookup"><span data-stu-id="76214-268">An <see cref="T:System.Object" /> that contains the adapter view state information as a <see cref="T:System.Web.UI.StateBag" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76214-269">Cuando un adaptador necesita mantener su propia información de estado de vista, puede reemplazar el <xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState%2A> y <xref:System.Web.UI.Adapters.ControlAdapter.LoadAdapterViewState%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="76214-269">When an adapter needs to maintain its own view state information, it can override the <xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState%2A> and <xref:System.Web.UI.Adapters.ControlAdapter.LoadAdapterViewState%2A> methods.</span></span>  
  
 <span data-ttu-id="76214-270">Un adaptador necesita mantener la información de estado de vista cuando hay datos que deben mantenerse en todas las solicitudes, independientemente del estado de vista asociada del control.</span><span class="sxs-lookup"><span data-stu-id="76214-270">An adapter needs to maintain view state information when there is data that must be maintained across requests, independent from the associated view state of the control.</span></span> <span data-ttu-id="76214-271">Por ejemplo, un control de cuadrícula en exploradores de equipos de escritorio podría representarse como una vista única de filas y columnas de valores.</span><span class="sxs-lookup"><span data-stu-id="76214-271">For example, a grid control on desktop computer browsers might render as a single view of rows and columns of values.</span></span> <span data-ttu-id="76214-272">En otros exploradores, su representación en varias vistas distintas, como una lista de filas y los detalles de una sola fila podría dividirse.</span><span class="sxs-lookup"><span data-stu-id="76214-272">On other browsers, it might split its rendering into multiple separate views, such as a list of rows and details of a single row.</span></span> <span data-ttu-id="76214-273">El adaptador necesitará mantener los datos de las vistas que no están activos actualmente en estado de vista.</span><span class="sxs-lookup"><span data-stu-id="76214-273">The adapter would need to maintain the data for the views that are not currently active in view state.</span></span>  
  
 <span data-ttu-id="76214-274">El <xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState%2A> se llama al método inmediatamente antes de la <xref:System.Web.UI.Control.SaveViewState%2A?displayProperty=nameWithType> método en el `SaveState` fase del ciclo de vida.</span><span class="sxs-lookup"><span data-stu-id="76214-274">The <xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState%2A> method is called immediately before the <xref:System.Web.UI.Control.SaveViewState%2A?displayProperty=nameWithType> method in the `SaveState` lifecycle stage.</span></span> <span data-ttu-id="76214-275">El estado de vista del adaptador es independiente y además del estado de vista del control.</span><span class="sxs-lookup"><span data-stu-id="76214-275">The adapter view state is separate and in addition to the view state of the control.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.SaveViewState" />
        <altmember cref="T:System.Web.UI.Control" />
        <altmember cref="M:System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState" />
        <altmember cref="M:System.Web.UI.Adapters.ControlAdapter.LoadAdapterViewState(System.Object)" />
        <altmember cref="P:System.Web.UI.Control.ViewState" />
      </Docs>
    </Member>
  </Members>
</Type>
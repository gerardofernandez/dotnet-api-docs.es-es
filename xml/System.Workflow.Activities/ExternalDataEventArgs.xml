<Type Name="ExternalDataEventArgs" FullName="System.Workflow.Activities.ExternalDataEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="40c6738359936c16fddb6a82c2c29f95d1a090ea" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55398000" /></Metadata><TypeSignature Language="C#" Value="public class ExternalDataEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit ExternalDataEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Activities.ExternalDataEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class ExternalDataEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class ExternalDataEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type ExternalDataEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Activities</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="58d91-101">Representa los datos enviados cuando se genera un evento utilizando la actividad <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" />.</span><span class="sxs-lookup"><span data-stu-id="58d91-101">Represents the data sent when an event is raised using the <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" /> activity.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 <span data-ttu-id="58d91-102">Una interfaz de comunicación local marcada con <xref:System.Workflow.Activities.ExternalDataExchangeAttribute> debe declarar un tipo que se deriva de <xref:System.Workflow.Activities.ExternalDataEventArgs> en la definición de interfaz para que se administre el evento correspondiente en un flujo de trabajo con una actividad <xref:System.Workflow.Activities.HandleExternalEventActivity>.</span><span class="sxs-lookup"><span data-stu-id="58d91-102">A local communication interface marked with <xref:System.Workflow.Activities.ExternalDataExchangeAttribute> must declare a type that derives from <xref:System.Workflow.Activities.ExternalDataEventArgs> in the interface definition for the corresponding event to be handled in a workflow with a <xref:System.Workflow.Activities.HandleExternalEventActivity> activity.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="58d91-103">Una clase de evento que se hereda de <xref:System.Workflow.Activities.ExternalDataEventArgs> debe implementar un constructor que use el constructor `:base(instanceId)`.</span><span class="sxs-lookup"><span data-stu-id="58d91-103">An event class that inherits from <xref:System.Workflow.Activities.ExternalDataEventArgs> must implement a constructor that uses the `:base(instanceId)` constructor.</span></span> <span data-ttu-id="58d91-104">Además, es necesario marcar la nueva clase de evento como `Serializable` como se muestra en el código siguiente.</span><span class="sxs-lookup"><span data-stu-id="58d91-104">In addition, the new event class must be marked as `Serializable` as shown in the following code.</span></span>  
  
```csharp  
[Serializable]  
public class TaskEventArgs : ExternalDataEventArgs  
{  
    private string orderName;  
  
    public TaskEventArgs(Guid instanceId, string id)  
        :base(instanceId)  
    {  
        orderName = id;  
    }  
  
    public string Id  
    {  
        get { return orderName; }  
        set { orderName = value; }  
    }  
}  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="58d91-105">Inicializa una nueva instancia de la clase <see cref="T:System.Workflow.Activities.ExternalDataEventArgs" />.</span><span class="sxs-lookup"><span data-stu-id="58d91-105">Initializes a new instance of the <see cref="T:System.Workflow.Activities.ExternalDataEventArgs" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="58d91-106">El ejemplo siguiente muestra cómo llamar al constructor <xref:System.Workflow.Activities.ExternalDataEventArgs> base desde el constructor de una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="58d91-106">The following example shows how to call the base <xref:System.Workflow.Activities.ExternalDataEventArgs> constructor from a derived class' constructor.</span></span> <span data-ttu-id="58d91-107">Este ejemplo pertenece a la Máquina de Estado de Clasificación SDK.</span><span class="sxs-lookup"><span data-stu-id="58d91-107">This example is from the Ordering State Machine SDK sample.</span></span> <span data-ttu-id="58d91-108">Para obtener más información, consulte [ejemplo de equipo de estado de ordenación](https://msdn.microsoft.com/library/59272cf4-bc98-439c-bcfa-b66999ebce5c).</span><span class="sxs-lookup"><span data-stu-id="58d91-108">For more information, see [Ordering State Machine Sample](https://msdn.microsoft.com/library/59272cf4-bc98-439c-bcfa-b66999ebce5c).</span></span>  
  
 [!code-csharp[wf_samples#121](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#121)]
 [!code-vb[wf_samples#121](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets1.vb#121)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExternalDataEventArgs ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.ExternalDataEventArgs.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ExternalDataEventArgs();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="58d91-109">Inicializa una nueva instancia de la clase <see cref="T:System.Workflow.Activities.ExternalDataEventArgs" />.</span><span class="sxs-lookup"><span data-stu-id="58d91-109">Initializes a new instance of the <see cref="T:System.Workflow.Activities.ExternalDataEventArgs" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExternalDataEventArgs (Guid instanceId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Guid instanceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.ExternalDataEventArgs.#ctor(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (instanceId As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ExternalDataEventArgs(Guid instanceId);" />
      <MemberSignature Language="F#" Value="new System.Workflow.Activities.ExternalDataEventArgs : Guid -&gt; System.Workflow.Activities.ExternalDataEventArgs" Usage="new System.Workflow.Activities.ExternalDataEventArgs instanceId" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="instanceId"><span data-ttu-id="58d91-110">El identificador de instancias de flujo de trabajo para la instancia de flujo de trabajo que contiene la <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" /> que se espera que administre el evento.</span><span class="sxs-lookup"><span data-stu-id="58d91-110">The workflow instance identifier for the workflow instance that contains the <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" /> that is expected to handle the event.</span></span></param>
        <summary><span data-ttu-id="58d91-111">Inicializa una nueva instancia de la clase <see cref="T:System.Workflow.Activities.ExternalDataEventArgs" /> con un identificador de instancias de flujo de trabajo.</span><span class="sxs-lookup"><span data-stu-id="58d91-111">Initializes a new instance of the <see cref="T:System.Workflow.Activities.ExternalDataEventArgs" /> class using the instance identifier of the workflow.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExternalDataEventArgs (Guid instanceId, System.Workflow.Runtime.IPendingWork workHandler, object workItem);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Guid instanceId, class System.Workflow.Runtime.IPendingWork workHandler, object workItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.ExternalDataEventArgs.#ctor(System.Guid,System.Workflow.Runtime.IPendingWork,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (instanceId As Guid, workHandler As IPendingWork, workItem As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ExternalDataEventArgs(Guid instanceId, System::Workflow::Runtime::IPendingWork ^ workHandler, System::Object ^ workItem);" />
      <MemberSignature Language="F#" Value="new System.Workflow.Activities.ExternalDataEventArgs : Guid * System.Workflow.Runtime.IPendingWork * obj -&gt; System.Workflow.Activities.ExternalDataEventArgs" Usage="new System.Workflow.Activities.ExternalDataEventArgs (instanceId, workHandler, workItem)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" />
        <Parameter Name="workHandler" Type="System.Workflow.Runtime.IPendingWork" />
        <Parameter Name="workItem" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instanceId"><span data-ttu-id="58d91-112">El identificador de instancias de flujo de trabajo para la instancia de flujo de trabajo que contiene la <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" /> que se espera que administre el evento.</span><span class="sxs-lookup"><span data-stu-id="58d91-112">The workflow instance identifier for the workflow instance that contains the <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" /> that is expected to handle the event.</span></span></param>
        <param name="workHandler"><span data-ttu-id="58d91-113"><see cref="T:System.Workflow.Runtime.IPendingWork" /> para permitir el código externo, lo que genera el evento para participar en el proceso por lotes.</span><span class="sxs-lookup"><span data-stu-id="58d91-113">The <see cref="T:System.Workflow.Runtime.IPendingWork" /> to allow the external code, raising the event, to participate in the batch.</span></span></param>
        <param name="workItem"><span data-ttu-id="58d91-114">El objeto que contiene el código externo que genera el evento.</span><span class="sxs-lookup"><span data-stu-id="58d91-114">The object that contains the external code that raises the event.</span></span></param>
        <summary><span data-ttu-id="58d91-115">Inicializa una nueva instancia de la clase <see cref="T:System.Workflow.Activities.ExternalDataEventArgs" />.</span><span class="sxs-lookup"><span data-stu-id="58d91-115">Initializes a new instance of the <see cref="T:System.Workflow.Activities.ExternalDataEventArgs" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExternalDataEventArgs (Guid instanceId, System.Workflow.Runtime.IPendingWork workHandler, object workItem, bool waitForIdle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Guid instanceId, class System.Workflow.Runtime.IPendingWork workHandler, object workItem, bool waitForIdle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.ExternalDataEventArgs.#ctor(System.Guid,System.Workflow.Runtime.IPendingWork,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (instanceId As Guid, workHandler As IPendingWork, workItem As Object, waitForIdle As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ExternalDataEventArgs(Guid instanceId, System::Workflow::Runtime::IPendingWork ^ workHandler, System::Object ^ workItem, bool waitForIdle);" />
      <MemberSignature Language="F#" Value="new System.Workflow.Activities.ExternalDataEventArgs : Guid * System.Workflow.Runtime.IPendingWork * obj * bool -&gt; System.Workflow.Activities.ExternalDataEventArgs" Usage="new System.Workflow.Activities.ExternalDataEventArgs (instanceId, workHandler, workItem, waitForIdle)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" />
        <Parameter Name="workHandler" Type="System.Workflow.Runtime.IPendingWork" />
        <Parameter Name="workItem" Type="System.Object" />
        <Parameter Name="waitForIdle" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="instanceId"><span data-ttu-id="58d91-116">El identificador de instancias de flujo de trabajo para la instancia de flujo de trabajo que contiene la <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" /> que se espera que administre el evento.</span><span class="sxs-lookup"><span data-stu-id="58d91-116">The workflow instance identifier for the workflow instance that contains the <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" /> that is expected to handle the event.</span></span></param>
        <param name="workHandler"><span data-ttu-id="58d91-117"><see cref="T:System.Workflow.Runtime.IPendingWork" /> que permite que el código externo, que genera el evento, participe en el proceso por lotes.</span><span class="sxs-lookup"><span data-stu-id="58d91-117">The <see cref="T:System.Workflow.Runtime.IPendingWork" /> to allow the external code that raises the event to participate in the batch.</span></span></param>
        <param name="workItem"><span data-ttu-id="58d91-118">El objeto que contiene el código externo que genera el evento.</span><span class="sxs-lookup"><span data-stu-id="58d91-118">The object that contains the external code that raises the event.</span></span></param>
        <param name="waitForIdle"><span data-ttu-id="58d91-119">Un valor que indica si el flujo de trabajo debería pasar a inactivo antes de generar el evento; de lo contrario, false<see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="58d91-119">A value that indicates whether the workflow should go idle before raising the event; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="58d91-120">Inicializa una nueva instancia de la clase <see cref="T:System.Workflow.Activities.ExternalDataEventArgs" />.</span><span class="sxs-lookup"><span data-stu-id="58d91-120">Initializes a new instance of the <see cref="T:System.Workflow.Activities.ExternalDataEventArgs" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Identity">
      <MemberSignature Language="C#" Value="public string Identity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Identity" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.ExternalDataEventArgs.Identity" />
      <MemberSignature Language="VB.NET" Value="Public Property Identity As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Identity { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Identity : string with get, set" Usage="System.Workflow.Activities.ExternalDataEventArgs.Identity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="58d91-121">Obtiene o establece la identidad del usuario que generó el evento.</span><span class="sxs-lookup"><span data-stu-id="58d91-121">Gets or sets the identity of the user that raised the event.</span></span></summary>
        <value><span data-ttu-id="58d91-122">La identidad del usuario que está generando el evento.</span><span class="sxs-lookup"><span data-stu-id="58d91-122">The identity of the user that is raising the event.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58d91-123">La actividad <xref:System.Workflow.Activities.HandleExternalEventActivity> evalúa esta propiedad.</span><span class="sxs-lookup"><span data-stu-id="58d91-123">This property is evaluated by the <xref:System.Workflow.Activities.HandleExternalEventActivity> activity.</span></span> <span data-ttu-id="58d91-124">Si el valor que se establece en la propiedad <xref:System.Workflow.Activities.HandleExternalEventActivity.Roles%2A> de esta actividad no coincide con una de las funciones asociadas a la identidad del usuario, no se permite ejecutar la actividad.</span><span class="sxs-lookup"><span data-stu-id="58d91-124">If the value that is set in the <xref:System.Workflow.Activities.HandleExternalEventActivity.Roles%2A> property of this activity does not match any of the roles associated with the user identity, the activity is not allowed to execute.</span></span>  
  
 <span data-ttu-id="58d91-125">La entidad que genera el evento puede ser una persona o un equipo.</span><span class="sxs-lookup"><span data-stu-id="58d91-125">The entity that raises the event can be a person or a computer.</span></span>  
  
 <span data-ttu-id="58d91-126">La funcionalidad Roles usa la identidad para asegurarse que esta identidad puede enviar datos a este flujo de trabajo.</span><span class="sxs-lookup"><span data-stu-id="58d91-126">Identity is used by the Roles functionality to ensure that this identity is allowed to submit data to this workflow.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InstanceId">
      <MemberSignature Language="C#" Value="public Guid InstanceId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid InstanceId" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.ExternalDataEventArgs.InstanceId" />
      <MemberSignature Language="VB.NET" Value="Public Property InstanceId As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid InstanceId { Guid get(); void set(Guid value); };" />
      <MemberSignature Language="F#" Value="member this.InstanceId : Guid with get, set" Usage="System.Workflow.Activities.ExternalDataEventArgs.InstanceId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="58d91-127">Obtiene o establece el identificador de instancias de flujo de trabajo para la instancia de flujo de trabajo que contiene la <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" /> que se espera que administre el evento.</span><span class="sxs-lookup"><span data-stu-id="58d91-127">Gets or sets the workflow instance identifier for the workflow instance that contains the <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" /> that is expected to handle the event.</span></span></summary>
        <value><span data-ttu-id="58d91-128">El identificador de instancias de flujo de trabajo para la instancia de flujo de trabajo que contiene la <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" /> que se espera que administre el evento.</span><span class="sxs-lookup"><span data-stu-id="58d91-128">The workflow instance identifier for the workflow instance that contains the <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" /> that is expected to handle the event.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58d91-129">Es una propiedad necesaria.</span><span class="sxs-lookup"><span data-stu-id="58d91-129">This is a required property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WaitForIdle">
      <MemberSignature Language="C#" Value="public bool WaitForIdle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool WaitForIdle" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.ExternalDataEventArgs.WaitForIdle" />
      <MemberSignature Language="VB.NET" Value="Public Property WaitForIdle As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool WaitForIdle { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.WaitForIdle : bool with get, set" Usage="System.Workflow.Activities.ExternalDataEventArgs.WaitForIdle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="58d91-130">Obtiene o establece un valor que indica si se debe generar el evento inmediatamente, o si el flujo de trabajo debe pasar a inactivo antes de generar el evento.</span><span class="sxs-lookup"><span data-stu-id="58d91-130">Gets or sets a value that indicates whether the event should be raised immediately, or if the workflow should go idle before raising the event.</span></span></summary>
        <value><span data-ttu-id="58d91-131"><see langword="true" /> si el flujo de trabajo debe pasar a inactivo antes de generar el evento; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="58d91-131"><see langword="true" /> if the workflow should go idle before raising the event; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58d91-132">El valor predeterminado es `false`.</span><span class="sxs-lookup"><span data-stu-id="58d91-132">The default value is `false`.</span></span>  
  
 <span data-ttu-id="58d91-133">Un valor de `true` indica que los datos se enviaron al flujo de trabajo utilizando <xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle%2A>.</span><span class="sxs-lookup"><span data-stu-id="58d91-133">A value of `true` indicates that data was submitted to the workflow using <xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle%2A>.</span></span> <span data-ttu-id="58d91-134">Un valor de `false` indica que los datos se enviaron al flujo de trabajo utilizando <xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A>.</span><span class="sxs-lookup"><span data-stu-id="58d91-134">A value of `false` indicates that data was submitted to the workflow using <xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WorkHandler">
      <MemberSignature Language="C#" Value="public System.Workflow.Runtime.IPendingWork WorkHandler { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.Runtime.IPendingWork WorkHandler" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.ExternalDataEventArgs.WorkHandler" />
      <MemberSignature Language="VB.NET" Value="Public Property WorkHandler As IPendingWork" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Workflow::Runtime::IPendingWork ^ WorkHandler { System::Workflow::Runtime::IPendingWork ^ get(); void set(System::Workflow::Runtime::IPendingWork ^ value); };" />
      <MemberSignature Language="F#" Value="member this.WorkHandler : System.Workflow.Runtime.IPendingWork with get, set" Usage="System.Workflow.Activities.ExternalDataEventArgs.WorkHandler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Runtime.IPendingWork</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="58d91-135">Obtiene o establece el <see cref="T:System.Workflow.Runtime.IPendingWork" /> para permitir el código externo, lo que genera el evento para participar en el proceso por lotes.</span><span class="sxs-lookup"><span data-stu-id="58d91-135">Gets or sets the <see cref="T:System.Workflow.Runtime.IPendingWork" /> to allow the external code, raising the event, to participate in the batch.</span></span></summary>
        <value><span data-ttu-id="58d91-136"><see cref="T:System.Workflow.Runtime.IPendingWork" /> para permitir el código externo, lo que genera el evento para participar en el proceso por lotes.</span><span class="sxs-lookup"><span data-stu-id="58d91-136">The <see cref="T:System.Workflow.Runtime.IPendingWork" /> to allow the external code, raising the event, to participate in the batch.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Workflow.Runtime.IPendingWork" />
      </Docs>
    </Member>
    <Member MemberName="WorkItem">
      <MemberSignature Language="C#" Value="public object WorkItem { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object WorkItem" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.ExternalDataEventArgs.WorkItem" />
      <MemberSignature Language="VB.NET" Value="Public Property WorkItem As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ WorkItem { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.WorkItem : obj with get, set" Usage="System.Workflow.Activities.ExternalDataEventArgs.WorkItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="58d91-137">Obtiene o establece el objeto que contiene el código externo que genera el evento.</span><span class="sxs-lookup"><span data-stu-id="58d91-137">Gets or sets the object that contains the external code that raises the event.</span></span></summary>
        <value><span data-ttu-id="58d91-138">El objeto que contiene el código externo que genera el evento.</span><span class="sxs-lookup"><span data-stu-id="58d91-138">The object that contains the external code that raises the event.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Workflow.Runtime.IPendingWork" />
      </Docs>
    </Member>
  </Members>
</Type>
<Type Name="SpeechSynthesizer" FullName="System.Speech.Synthesis.SpeechSynthesizer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c0d2d70d90c0861d467fd9a8dda5d606c4e83b13" /><Meta Name="ms.sourcegitcommit" Value="4ee26ac79338b0bf99fa1e0913e8a06b21994d8e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="03/26/2019" /><Meta Name="ms.locfileid" Value="58460700" /></Metadata><TypeSignature Language="C#" Value="public sealed class SpeechSynthesizer : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SpeechSynthesizer extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Synthesis.SpeechSynthesizer" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SpeechSynthesizer&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class SpeechSynthesizer sealed : IDisposable" />
  <TypeSignature Language="F#" Value="type SpeechSynthesizer = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="9a4f8-101">Proporciona acceso a la funcionalidad de un motor de síntesis de voz instalado.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-101">Provides access to the functionality of an installed speech synthesis engine.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a4f8-102">Cuando se crea un nuevo <xref:System.Speech.Synthesis.SpeechSynthesizer> de objeto, usa la voz del sistema de forma predeterminada.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-102">When you create a new <xref:System.Speech.Synthesis.SpeechSynthesizer> object, it uses the default system voice.</span></span> <span data-ttu-id="9a4f8-103">Para configurar el <xref:System.Speech.Synthesis.SpeechSynthesizer> para usar una de las voces de síntesis (texto a voz) de voz instalado, use el <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> o <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> método.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-103">To configure the <xref:System.Speech.Synthesis.SpeechSynthesizer> to use one of the installed speech synthesis (text-to-speech) voices, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> or <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> method.</span></span> <span data-ttu-id="9a4f8-104">Para obtener información sobre la que se instalan las voces, use el <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> método y el <xref:System.Speech.Synthesis.VoiceInfo> clase.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-104">To get information about which voices are installed, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method and the <xref:System.Speech.Synthesis.VoiceInfo> class.</span></span>  
  
 <span data-ttu-id="9a4f8-105">Esta clase también proporciona control sobre los siguientes aspectos de síntesis de voz:</span><span class="sxs-lookup"><span data-stu-id="9a4f8-105">This class also provides control over the following aspects of speech synthesis:</span></span>  
  
-   <span data-ttu-id="9a4f8-106">Para configurar la salida de la <xref:System.Speech.Synthesis.SpeechSynthesizer> de objeto, utilice el <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, y <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-106">To configure the output for the <xref:System.Speech.Synthesis.SpeechSynthesizer> object, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, and <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A> methods.</span></span>  
  
-   <span data-ttu-id="9a4f8-107">Para generar voz, use el <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>, o <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> método.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-107">To generate speech, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>, or <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> method.</span></span> <span data-ttu-id="9a4f8-108">El <xref:System.Speech.Synthesis.SpeechSynthesizer> puede generar voz a partir de texto, un <xref:System.Speech.Synthesis.Prompt> o <xref:System.Speech.Synthesis.PromptBuilder> objeto, o desde [lenguaje de marcado de síntesis de voz (SSML) versión 1.0](https://go.microsoft.com/fwlink/?LinkId=201763).</span><span class="sxs-lookup"><span data-stu-id="9a4f8-108">The <xref:System.Speech.Synthesis.SpeechSynthesizer> can produce speech from text, a <xref:System.Speech.Synthesis.Prompt> or <xref:System.Speech.Synthesis.PromptBuilder> object, or from [Speech Synthesis Markup Language (SSML) Version 1.0](https://go.microsoft.com/fwlink/?LinkId=201763).</span></span>  
  
-   <span data-ttu-id="9a4f8-109">Para pausar y reanudar la síntesis de voz, utilice el <xref:System.Speech.Synthesis.SpeechSynthesizer.Pause%2A> y <xref:System.Speech.Synthesis.SpeechSynthesizer.Resume%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-109">To pause and resume speech synthesis, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.Pause%2A> and <xref:System.Speech.Synthesis.SpeechSynthesizer.Resume%2A> methods.</span></span>  
  
-   <span data-ttu-id="9a4f8-110">Para agregar o quitar léxicos, utilice el <xref:System.Speech.Synthesis.SpeechSynthesizer.AddLexicon%2A> y <xref:System.Speech.Synthesis.SpeechSynthesizer.RemoveLexicon%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-110">To add or remove lexicons, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.AddLexicon%2A> and <xref:System.Speech.Synthesis.SpeechSynthesizer.RemoveLexicon%2A> methods.</span></span> <span data-ttu-id="9a4f8-111">El <xref:System.Speech.Synthesis.SpeechSynthesizer> puede usar uno o varios tipos de léxico para guiar su pronunciación de palabras.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-111">The <xref:System.Speech.Synthesis.SpeechSynthesizer> can use one or more lexicons to guide its pronunciation of words.</span></span>  
  
-   <span data-ttu-id="9a4f8-112">Para modificar la entrega de la salida de voz, utilice el <xref:System.Speech.Synthesis.SpeechSynthesizer.Rate%2A> y <xref:System.Speech.Synthesis.SpeechSynthesizer.Volume%2A> propiedades.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-112">To modify the delivery of speech output, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.Rate%2A> and <xref:System.Speech.Synthesis.SpeechSynthesizer.Volume%2A> properties.</span></span>  
  
 <span data-ttu-id="9a4f8-113">El <xref:System.Speech.Synthesis.SpeechSynthesizer> provoca eventos cuando encuentra determinadas características en los mensajes: (<xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>, <xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>, <xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>, y <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>).</span><span class="sxs-lookup"><span data-stu-id="9a4f8-113">The <xref:System.Speech.Synthesis.SpeechSynthesizer> raises events when it encounters certain features in prompts: (<xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>, <xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>, <xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>, and <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>).</span></span> <span data-ttu-id="9a4f8-114">También provoca eventos que informan sobre el inicio (<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>) y final (<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted>) de hablar de las operaciones y en el cambio de la voz (<xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>).</span><span class="sxs-lookup"><span data-stu-id="9a4f8-114">It also raises events that report on the start (<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>) and end (<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted>) of speak operations and on the change of the speaking voice (<xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9a4f8-115">Realice siempre una llamada a <xref:System.Speech.Synthesis.SpeechSynthesizer.Dispose%2A> antes de liberar la última referencia al objeto <xref:System.Speech.Synthesis.SpeechSynthesizer>.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-115">Always call <xref:System.Speech.Synthesis.SpeechSynthesizer.Dispose%2A> before you release your last reference to the <xref:System.Speech.Synthesis.SpeechSynthesizer>.</span></span> <span data-ttu-id="9a4f8-116">En caso contrario, los recursos que está usando no se liberarán hasta que el recolector de elementos no utilizados llame al método <xref:System.Speech.Synthesis.SpeechSynthesizer> del objeto <xref:System.Object.Finalize%2A>.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-116">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Speech.Synthesis.SpeechSynthesizer> object's <xref:System.Object.Finalize%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9a4f8-117">El ejemplo siguiente es parte de una aplicación de consola que inicializa un <xref:System.Speech.Synthesis.SpeechSynthesizer> objeto y es orador una cadena.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-117">The following example is part of a console application that initializes a <xref:System.Speech.Synthesis.SpeechSynthesizer> object and speaks a string.</span></span>  
  
```csharp  
  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Speak a string.  
      synth.Speak("This example demonstrates a basic use of Speech Synthesizer");  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Speech.Synthesis.InstalledVoice" />
    <altmember cref="T:System.Speech.Synthesis.Prompt" />
    <altmember cref="T:System.Speech.Synthesis.PromptBuilder" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361644(v%3doffice.14)"><span data-ttu-id="9a4f8-118">Síntesis de voz.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-118">Speech Synthesis</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SpeechSynthesizer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SpeechSynthesizer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9a4f8-119">Inicializa una nueva instancia de la clase <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" />.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-119">Initializes a new instance of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a4f8-120">Al inicializar un nuevo <xref:System.Speech.Synthesis.SpeechSynthesizer> instancia, utiliza la voz del sistema de forma predeterminada.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-120">When you initialize a new <xref:System.Speech.Synthesis.SpeechSynthesizer> instance, it uses the default system voice.</span></span> <span data-ttu-id="9a4f8-121">Para configurar el <xref:System.Speech.Synthesis.SpeechSynthesizer> para usar una de las voces de síntesis (texto a voz) de voz instalado, use el <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> o <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> método.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-121">To configure the <xref:System.Speech.Synthesis.SpeechSynthesizer> to use one of the installed speech synthesis (text-to-speech) voices, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> or <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> method.</span></span> <span data-ttu-id="9a4f8-122">Para obtener información sobre la que se instalan las voces, use el <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> método y el <xref:System.Speech.Synthesis.VoiceInfo> clase.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-122">To get information about which voices are installed, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method and the <xref:System.Speech.Synthesis.VoiceInfo> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Synthesis.InstalledVoice" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender)" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices" />
      </Docs>
    </Member>
    <Member MemberName="AddLexicon">
      <MemberSignature Language="C#" Value="public void AddLexicon (Uri uri, string mediaType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddLexicon(class System.Uri uri, string mediaType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.AddLexicon(System.Uri,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddLexicon(Uri ^ uri, System::String ^ mediaType);" />
      <MemberSignature Language="F#" Value="member this.AddLexicon : Uri * string -&gt; unit" Usage="speechSynthesizer.AddLexicon (uri, mediaType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
        <Parameter Name="mediaType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uri"><span data-ttu-id="9a4f8-123">La ubicación de la información de léxico.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-123">The location of the lexicon information.</span></span></param>
        <param name="mediaType"><span data-ttu-id="9a4f8-124">Tipo de medio del léxico.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-124">The media type of the lexicon.</span></span> <span data-ttu-id="9a4f8-125">Los valores de tipo de medio no distinguen mayúsculas de minúsculas.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-125">Media type values are not case sensitive.</span></span></param>
        <summary><span data-ttu-id="9a4f8-126">Agrega un léxico al objeto <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" />.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-126">Adds a lexicon to the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a4f8-127">Un léxico pronunciación es una colección de palabras o frases junto con su pronunciación, que constan de letras y caracteres de un alfabeto fonético admitido.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-127">A pronunciation lexicon is a collection of words or phrases together with their pronunciations, which consist of letters and characters from a supported phonetic alphabet.</span></span> <span data-ttu-id="9a4f8-128">Puede usar un léxico para especificar pronunciaciones personalizadas para el vocabulario especializado en la aplicación.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-128">You can use a lexicon to specify custom pronunciations for specialized vocabulary in your application.</span></span>  
  
 <span data-ttu-id="9a4f8-129">Las pronunciaciones especificadas en un archivo de léxico externos tienen prioridad sobre las pronunciaciones del léxico interno el sintetizador de voz o de diccionario.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-129">Pronunciations specified in an external lexicon file take precedence over the pronunciations of the speech synthesizer's internal lexicon or dictionary.</span></span> <span data-ttu-id="9a4f8-130">Sin embargo, las pronunciaciones especifican insertado en mensajes que haya creado con cualquiera de los <xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithPronunciation%2A>, <xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A>, o <xref:System.Speech.Synthesis.PromptBuilder.AppendSsml%2A> métodos tienen prioridad sobre las pronunciaciones especificadas en cualquier biblioteca de objetos.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-130">However, pronunciations specified inline in prompts created with any of the <xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithPronunciation%2A>, <xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A>, or <xref:System.Speech.Synthesis.PromptBuilder.AppendSsml%2A> methods take precedence over pronunciations specified in any lexicon.</span></span> <span data-ttu-id="9a4f8-131">Las pronunciaciones en línea solo se aplican a una sola aparición de una palabra.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-131">Inline pronunciations apply only to a single occurrence of a word.</span></span> <span data-ttu-id="9a4f8-132">Consulte [léxicos y alfabetos fonéticos](https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh378335(v%3doffice.14)) para obtener más información.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-132">See [Lexicons and Phonetic Alphabets](https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh378335(v%3doffice.14)) for more information.</span></span>  
  
 <span data-ttu-id="9a4f8-133">Puede agregar varios léxicos para un <xref:System.Speech.Synthesis.SpeechSynthesizer> objeto. Actualmente se admiten dos valores para el `mediaType` parámetro:</span><span class="sxs-lookup"><span data-stu-id="9a4f8-133">You can add multiple lexicons to a <xref:System.Speech.Synthesis.SpeechSynthesizer> object.Two values are currently supported for the `mediaType` parameter:</span></span>  
  
-   <span data-ttu-id="9a4f8-134">El valor `application/pls+xml` indica que la biblioteca de objetos se ajusta a la [pronunciación léxico especificación (PLS) versión 1.0](https://go.microsoft.com/fwlink/?LinkId=201766).</span><span class="sxs-lookup"><span data-stu-id="9a4f8-134">The value `application/pls+xml` indicates that the lexicon conforms to the [Pronunciation Lexicon Specification (PLS) Version 1.0](https://go.microsoft.com/fwlink/?LinkId=201766).</span></span> <span data-ttu-id="9a4f8-135">Este es el formato preferido para usar.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-135">This is the preferred format to use.</span></span>  
  
-   <span data-ttu-id="9a4f8-136">El valor `application/vdn.ms-sapi-lex` indica que el formato de léxico es léxico sin comprimir, que es un formato de la propiedad de Microsoft.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-136">The value `application/vdn.ms-sapi-lex` indicates that the lexicon format is Uncompressed Lexicon, which is a Microsoft-proprietary format.</span></span> <span data-ttu-id="9a4f8-137">Se trata de un formato heredado y se recomienda que utilice el formato PLS descrito anteriormente.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-137">This is a legacy format and we recommend that you use the PLS format described above.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9a4f8-138">El ejemplo siguiente muestra el efecto de agregar y quitar un léxico que contiene una pronunciación personalizada para la palabra "blue".</span><span class="sxs-lookup"><span data-stu-id="9a4f8-138">The following example demonstrates the effect of adding and removing a lexicon that contains a custom pronunciation for the word "blue".</span></span> <span data-ttu-id="9a4f8-139">La biblioteca de objetos define la pronunciación de "blue" suene como "bleep".</span><span class="sxs-lookup"><span data-stu-id="9a4f8-139">The lexicon defines the pronunciation of "blue" to sound like "bleep".</span></span> <span data-ttu-id="9a4f8-140">Mientras se carga la biblioteca de objetos, el sintetizador de voz usa la pronunciación definida en la biblioteca de objetos.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-140">While the lexicon is loaded, the speech synthesizer uses the pronunciation defined in the lexicon.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Speak the prompt.  
        synth.Speak("My favorite color is blue.");  
  
        // Add a lexicon that changes the pronunciation of "blue".  
        synth.AddLexicon(new Uri("C:\\test\\Blue.pls"), "application/pls+xml");  
  
        // Speak the prompt.  
        synth.Speak("My favorite color is blue.");  
  
        // Remove the lexicon.  
        synth.RemoveLexicon(new Uri("C:\\test\\Blue.pls"));  
  
        // Speak the prompt.  
        synth.Speak("My favorite color is blue.");  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 <span data-ttu-id="9a4f8-141">Estos son el contenido del archivo de léxico Blue.pls:</span><span class="sxs-lookup"><span data-stu-id="9a4f8-141">Following are the contents of the lexicon file Blue.pls:</span></span>  
  
```xml  
<?xml version="1.0" encoding="UTF-8"?>  
  
<lexicon version="1.0"   
      xmlns="http://www.w3.org/2005/01/pronunciation-lexicon"  
      alphabet="x-microsoft-ups" xml:lang="en-US">  
  
  <lexeme>  
    <grapheme> blue </grapheme>  
    <phoneme> B L I P </phoneme>  
  </lexeme>  
  
</lexicon>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.RemoveLexicon(System.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="BookmarkReached">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Speech.Synthesis.BookmarkReachedEventArgs&gt; BookmarkReached;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Speech.Synthesis.BookmarkReachedEventArgs&gt; BookmarkReached" />
      <MemberSignature Language="DocId" Value="E:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BookmarkReached As EventHandler(Of BookmarkReachedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Speech::Synthesis::BookmarkReachedEventArgs ^&gt; ^ BookmarkReached;" />
      <MemberSignature Language="F#" Value="member this.BookmarkReached : EventHandler&lt;System.Speech.Synthesis.BookmarkReachedEventArgs&gt; " Usage="member this.BookmarkReached : System.EventHandler&lt;System.Speech.Synthesis.BookmarkReachedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Speech.Synthesis.BookmarkReachedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9a4f8-142">Se genera cuando <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> encuentra un marcador en un mensaje.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-142">Raised when the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> encounters a bookmark in a prompt.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a4f8-143">El <xref:System.Speech.Synthesis.SpeechSynthesizer> provoca este evento al procesar cualquiera de los <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>, o <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-143">The <xref:System.Speech.Synthesis.SpeechSynthesizer> raises this event while processing any of the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>, or <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> methods.</span></span> <span data-ttu-id="9a4f8-144">Para obtener información acerca de los datos asociados al evento, vea <xref:System.Speech.Synthesis.BookmarkReachedEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-144">For information about data associated with the event, see <xref:System.Speech.Synthesis.BookmarkReachedEventArgs>.</span></span>  
  
 <span data-ttu-id="9a4f8-145">Puede agregar marcadores mediante la <xref:System.Speech.Synthesis.PromptBuilder.AppendBookmark%2A> método.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-145">You can add bookmarks using the <xref:System.Speech.Synthesis.PromptBuilder.AppendBookmark%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9a4f8-146">El ejemplo siguiente crea un símbolo del sistema que incluye dos marcadores y envía el resultado a un archivo WAV para su reproducción.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-146">The following example creates a prompt that includes two bookmarks and sends the output to a WAV file for playback.</span></span> <span data-ttu-id="9a4f8-147">El controlador para el <xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached> eventos escribe el nombre del marcador y su posición en la secuencia de audio cuando se generó el evento en la consola.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-147">The handler for the <xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached> event writes the name of the bookmark and its position in the audio stream when the event was raised to the console.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToWaveFile(@"C:\test\weather.wav");  
  
        // Create a SoundPlayer instance to play the output audio file.  
        System.Media.SoundPlayer m_SoundPlayer =  
          new System.Media.SoundPlayer(@"C:\test\weather.wav");  
  
        // Build a prompt and append bookmarks.  
        PromptBuilder builder = new PromptBuilder(  
          new System.Globalization.CultureInfo("en-US"));  
        builder.AppendText(  
          "The weather forecast for today is partly cloudy with some sun breaks.");  
        builder.AppendBookmark("Daytime forecast");  
        builder.AppendText(  
          "Tonight's weather will be cloudy with a 30% chance of showers.");  
        builder.AppendBookmark("Nightime forecast");  
  
        // Add a handler for the BookmarkReached event.  
        synth.BookmarkReached +=  
          new EventHandler<BookmarkReachedEventArgs>(synth_BookmarkReached);  
  
        // Speak the prompt and play back the output file.  
        synth.Speak(builder);  
        m_SoundPlayer.Play();  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  
    // Write the name and position of the bookmark to the console.  
    static void synth_BookmarkReached(object sender, BookmarkReachedEventArgs e)  
    {  
      Console.WriteLine("Bookmark ({0}) reached at: {1} ",  
        e.Bookmark, e.AudioPosition);  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="speechSynthesizer.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9a4f8-148">Desecha el objeto <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> y libera los recursos utilizados durante la sesión.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-148">Disposes the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object and releases resources used during the session.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~SpeechSynthesizer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!SpeechSynthesizer ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="speechSynthesizer.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9a4f8-149">Actúa como medida de seguridad para limpiar los recursos en caso de que no se llame al método <see cref="M:System.Speech.Synthesis.SpeechSynthesizer.Dispose" />.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-149">Acts as a safeguard to clean up resources in the event that the <see cref="M:System.Speech.Synthesis.SpeechSynthesizer.Dispose" /> method is not called.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentlySpokenPrompt">
      <MemberSignature Language="C#" Value="public System.Speech.Synthesis.Prompt GetCurrentlySpokenPrompt ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Speech.Synthesis.Prompt GetCurrentlySpokenPrompt() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.GetCurrentlySpokenPrompt" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentlySpokenPrompt () As Prompt" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Speech::Synthesis::Prompt ^ GetCurrentlySpokenPrompt();" />
      <MemberSignature Language="F#" Value="member this.GetCurrentlySpokenPrompt : unit -&gt; System.Speech.Synthesis.Prompt" Usage="speechSynthesizer.GetCurrentlySpokenPrompt " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.Prompt</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9a4f8-150">Obtiene el marcador del que <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> está hablando.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-150">Gets the prompt that the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> is speaking.</span></span></summary>
        <returns><span data-ttu-id="9a4f8-151">Devuelve el objeto de mensaje que se habla actualmente.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-151">Returns the prompt object that is currently being spoken.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
  
```csharp  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetInstalledVoices">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9a4f8-152">Devuelve la colección de voces de síntesis de voz (texto a voz) que están instaladas actualmente en el sistema.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-152">Returns the collection of speech synthesis (text-to-speech) voices that are currently installed on the system.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a4f8-153">Cuando una aplicación llama <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, el método comprueba que cada una de las voces (motores de texto a voz) encuentra en el registro de cumple determinados criterios mínimos.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-153">When an application calls <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, the method verifies that each of the voices (engines for text-to-speech) it finds in the registry meets certain minimum criteria.</span></span> <span data-ttu-id="9a4f8-154">Para cualquier voz que se produce un error de comprobación, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> establece su <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> propiedad `False`.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-154">For any voice that fails verification, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> sets its <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property to `False`.</span></span> <span data-ttu-id="9a4f8-155">Una aplicación no puede seleccionar una voz cuyo <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> propiedad es `False`.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-155">An application cannot select a voice whose <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property is `False`.</span></span> <span data-ttu-id="9a4f8-156">Normalmente, las aplicaciones no establecerá una voz <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-156">Typically, applications will not set a voice's <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetInstalledVoices">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Speech.Synthesis.InstalledVoice&gt; GetInstalledVoices ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Speech.Synthesis.InstalledVoice&gt; GetInstalledVoices() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInstalledVoices () As ReadOnlyCollection(Of InstalledVoice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Speech::Synthesis::InstalledVoice ^&gt; ^ GetInstalledVoices();" />
      <MemberSignature Language="F#" Value="member this.GetInstalledVoices : unit -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Speech.Synthesis.InstalledVoice&gt;" Usage="speechSynthesizer.GetInstalledVoices " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Speech.Synthesis.InstalledVoice&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9a4f8-157">Devuelve todas las voces de síntesis de voz (texto a voz) instaladas.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-157">Returns all of the installed speech synthesis (text-to-speech) voices.</span></span></summary>
        <returns><span data-ttu-id="9a4f8-158">Devuelve una colección de solo lectura de las voces instaladas actualmente en el sistema.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-158">Returns a read-only collection of the voices currently installed on the system.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a4f8-159">Una voz es un motor de síntesis de voz (texto a voz o TTS) que está instalado en el sistema.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-159">A voice is an engine for speech synthesis (text-to-speech or TTS) that is installed on the system.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9a4f8-160">El ejemplo siguiente es parte de una aplicación de consola que inicializa un <xref:System.Speech.Synthesis.SpeechSynthesizer> objeto y envía a la consola una lista de las voces instaladas (motores de síntesis de voz) y se muestra la información que está disponible para cada voz.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-160">The following example is part of a console application that initializes a <xref:System.Speech.Synthesis.SpeechSynthesizer> object and outputs to the console a list of the installed voices (engines for speech synthesis) and demonstrates the information that is available for each voice.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
using System.Speech.AudioFormat;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Output information about all of the installed voices.   
        Console.WriteLine("Installed voices -");  
        foreach (InstalledVoice voice in synth.GetInstalledVoices())  
        {  
          VoiceInfo info = voice.VoiceInfo;  
          string AudioFormats = "";  
          foreach (SpeechAudioFormatInfo fmt in info.SupportedAudioFormats)  
          {  
            AudioFormats += String.Format("{0}\n",  
            fmt.EncodingFormat.ToString());  
          }  
  
          Console.WriteLine(" Name:          " + info.Name);  
          Console.WriteLine(" Culture:       " + info.Culture);  
          Console.WriteLine(" Age:           " + info.Age);  
          Console.WriteLine(" Gender:        " + info.Gender);  
          Console.WriteLine(" Description:   " + info.Description);  
          Console.WriteLine(" ID:            " + info.Id);  
          Console.WriteLine(" Enabled:       " + voice.Enabled);  
          if (info.SupportedAudioFormats.Count != 0)  
          {  
            Console.WriteLine( " Audio formats: " + AudioFormats);  
          }  
          else  
          {  
            Console.WriteLine(" No supported audio formats found");  
          }  
  
          string AdditionalInfo = "";  
          foreach (string key in info.AdditionalInfo.Keys)  
          {  
            AdditionalInfo += String.Format("  {0}: {1}\n", key, info.AdditionalInfo[key]);  
          }  
  
          Console.WriteLine(" Additional Info - " + AdditionalInfo);  
          Console.WriteLine();  
        }  
      }  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Synthesis.InstalledVoice" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
        <altmember cref="Overload:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints" />
        <altmember cref="Overload:System.Speech.Synthesis.PromptBuilder.StartVoice" />
      </Docs>
    </Member>
    <Member MemberName="GetInstalledVoices">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Speech.Synthesis.InstalledVoice&gt; GetInstalledVoices (System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Speech.Synthesis.InstalledVoice&gt; GetInstalledVoices(class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices(System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInstalledVoices (culture As CultureInfo) As ReadOnlyCollection(Of InstalledVoice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Speech::Synthesis::InstalledVoice ^&gt; ^ GetInstalledVoices(System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="member this.GetInstalledVoices : System.Globalization.CultureInfo -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Speech.Synthesis.InstalledVoice&gt;" Usage="speechSynthesizer.GetInstalledVoices culture" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Speech.Synthesis.InstalledVoice&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="culture"><span data-ttu-id="9a4f8-161">Configuración regional que la voz debe admitir.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-161">The locale that the voice must support.</span></span></param>
        <summary><span data-ttu-id="9a4f8-162">Devuelve todas las voces de síntesis de voz (texto a voz) instaladas que admiten una configuración regional específica.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-162">Returns all of the installed speech synthesis  (text-to-speech) voices that support a specific locale.</span></span></summary>
        <returns><span data-ttu-id="9a4f8-163">Devuelve una colección de solo lectura de las voces instaladas actualmente en el sistema que admite la configuración regional especificada.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-163">Returns a read-only collection of the voices currently installed on the system that support the specified locale.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a4f8-164">Si ninguna de la compatibilidad de las voces instaladas con la configuración regional especificada, este método devuelve una colección vacía.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-164">If none of the installed voices support the specified locale, this method returns an empty collection.</span></span>  
  
 <span data-ttu-id="9a4f8-165">Microsoft Windows y la API System.Speech aceptan todos los códigos de idioma de país válidos.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-165">Microsoft Windows and the System.Speech API accept all valid language-country codes.</span></span> <span data-ttu-id="9a4f8-166">Para llevar a cabo mediante el idioma especificado en la propiedad de la referencia cultural de texto a voz, debe instalarse un motor de síntesis de voz que admita ese código de idioma de país.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-166">To perform text-to-speech using the language specified in the Culture property, a speech synthesis engine that supports that language-country code must be installed.</span></span> <span data-ttu-id="9a4f8-167">Los motores de síntesis de voz que se incluye con Microsoft Windows 7 funcionan con los siguientes códigos de idioma de país:</span><span class="sxs-lookup"><span data-stu-id="9a4f8-167">The speech synthesis engines that shipped with Microsoft Windows 7 work with the following language-country codes:</span></span>  
  
-   <span data-ttu-id="9a4f8-168">en-US.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-168">en-US.</span></span> <span data-ttu-id="9a4f8-169">Inglés (Estados Unidos)</span><span class="sxs-lookup"><span data-stu-id="9a4f8-169">English (United States)</span></span>  
  
-   <span data-ttu-id="9a4f8-170">zh-CN.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-170">zh-CN.</span></span> <span data-ttu-id="9a4f8-171">Chino (China)</span><span class="sxs-lookup"><span data-stu-id="9a4f8-171">Chinese (China)</span></span>  
  
-   <span data-ttu-id="9a4f8-172">zh-TW.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-172">zh-TW.</span></span> <span data-ttu-id="9a4f8-173">Chino (Taiwán)</span><span class="sxs-lookup"><span data-stu-id="9a4f8-173">Chinese (Taiwan)</span></span>  
  
 <span data-ttu-id="9a4f8-174">También se permiten códigos de idioma de dos letras como "es-es".</span><span class="sxs-lookup"><span data-stu-id="9a4f8-174">Two-letter language codes such as "en" are also permitted.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9a4f8-175">El ejemplo siguiente es parte de una aplicación de consola que inicializa un <xref:System.Speech.Synthesis.SpeechSynthesizer> de objetos y los envía a la consola una lista de las voces instaladas que admiten la configuración regional en-US.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-175">The following example is part of a console application that initializes a <xref:System.Speech.Synthesis.SpeechSynthesizer> object and outputs to the console a list of the installed voices that support the en-US locale.</span></span>  
  
```csharp  
using System;  
using System.Globalization;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the speech synthesizer.  
      using (SpeechSynthesizer synthesizer = new SpeechSynthesizer())  
      {  
  
        // Output information about all of the installed voices that  
        // support the en-US locacale.   
        Console.WriteLine("Installed voices for the en-US locale:");  
        foreach (InstalledVoice voice in  
          synthesizer.GetInstalledVoices(new CultureInfo("en-US")))  
        {  
          VoiceInfo info = voice.VoiceInfo;  
          OutputVoiceInfo(info);  
        }  
  
        // Output information about the current voice.  
        Console.WriteLine();  
        Console.WriteLine("Current voice:");  
        OutputVoiceInfo(synthesizer.Voice);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  
    // Display information about a synthesizer voice.  
    private static void OutputVoiceInfo(VoiceInfo info)  
    {  
      Console.WriteLine("  Name: {0}, culture: {1}, gender: {2}, age: {3}.",  
        info.Name, info.Culture, info.Gender, info.Age);  
      Console.WriteLine("    Description: {0}", info.Description);  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Synthesis.InstalledVoice" />
      </Docs>
    </Member>
    <Member MemberName="Pause">
      <MemberSignature Language="C#" Value="public void Pause ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Pause() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.Pause" />
      <MemberSignature Language="VB.NET" Value="Public Sub Pause ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Pause();" />
      <MemberSignature Language="F#" Value="member this.Pause : unit -&gt; unit" Usage="speechSynthesizer.Pause " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9a4f8-176">Hace una pausa en el objeto <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" />.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-176">Pauses the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.Resume" />
        <altmember cref="P:System.Speech.Synthesis.SpeechSynthesizer.State" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.StateChanged" />
      </Docs>
    </Member>
    <Member MemberName="PhonemeReached">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Speech.Synthesis.PhonemeReachedEventArgs&gt; PhonemeReached;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Speech.Synthesis.PhonemeReachedEventArgs&gt; PhonemeReached" />
      <MemberSignature Language="DocId" Value="E:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PhonemeReached As EventHandler(Of PhonemeReachedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Speech::Synthesis::PhonemeReachedEventArgs ^&gt; ^ PhonemeReached;" />
      <MemberSignature Language="F#" Value="member this.PhonemeReached : EventHandler&lt;System.Speech.Synthesis.PhonemeReachedEventArgs&gt; " Usage="member this.PhonemeReached : System.EventHandler&lt;System.Speech.Synthesis.PhonemeReachedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Speech.Synthesis.PhonemeReachedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9a4f8-177">Se genera cuando se alcanza un fonema.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-177">Raised when a phoneme is reached.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a4f8-178">Un fonema es un componente básico del lenguaje escrito, que suele ser una letra de un alfabeto (o la combinación de dos letras) que representa uno o varios sonidos distintos.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-178">A phoneme is a basic component of written language, typically a letter of an alphabet (or the combination of two letters) that represents one or more distinct sounds.</span></span> <span data-ttu-id="9a4f8-179">Por ejemplo, la letra "c" es un fonema que suene como "s" en "fuera" o como "k" en "catch".</span><span class="sxs-lookup"><span data-stu-id="9a4f8-179">For example, the letter "c" is a phoneme that may sound like "s" in "cinder", or like "k" in "catch".</span></span> <span data-ttu-id="9a4f8-180">La palabra escrita es un ensamblado a partir de los fonemas.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-180">A written word is an assemblage of phonemes.</span></span> <span data-ttu-id="9a4f8-181">Cambiar un fonema en una palabra, modificará la ortografía.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-181">Changing a phoneme in a word will alter its spelling.</span></span>  
  
 <span data-ttu-id="9a4f8-182">Un <xref:System.Speech.Synthesis.SpeechSynthesizer> instancia genera un <xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached> eventos para cada parte de una palabra que constituye un fonema.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-182">A <xref:System.Speech.Synthesis.SpeechSynthesizer> instance generates a <xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached> event for each portion of a word that constitutes a phoneme.</span></span> <span data-ttu-id="9a4f8-183">Por ejemplo, para la palabra "tema" generaría tres <xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached> eventos; uno para el sonido "th", uno para el sonido "e" y otro para el sonido "m" (me).</span><span class="sxs-lookup"><span data-stu-id="9a4f8-183">For example, for the word "theme" would generate three <xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached> events; one for the "th" sound, one for the "e" sound, and one for the "m" sound (me).</span></span>  
  
 <span data-ttu-id="9a4f8-184">Para un ejemplo y obtener información acerca de los datos asociados al evento, vea <xref:System.Speech.Synthesis.PhonemeReachedEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-184">For an example and information about data associated with the event, see <xref:System.Speech.Synthesis.PhonemeReachedEventArgs>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="Rate">
      <MemberSignature Language="C#" Value="public int Rate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Rate" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.SpeechSynthesizer.Rate" />
      <MemberSignature Language="VB.NET" Value="Public Property Rate As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Rate { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Rate : int with get, set" Usage="System.Speech.Synthesis.SpeechSynthesizer.Rate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9a4f8-185">Obtiene o establece la velocidad de habla del objeto <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" />.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-185">Gets or sets the speaking rate of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span></span></summary>
        <value><span data-ttu-id="9a4f8-186">Devuelve la velocidad de habla del objeto <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" />, de -10 a 10.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-186">Returns the speaking rate of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object, from -10 through 10.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9a4f8-187">En el ejemplo siguiente, se habla de una cadena con la velocidad de habla que se establece en -2.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-187">The following example speaks a string with the speaking rate set to -2.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Set a value for the speaking rate.  
      synth.Rate = -2;  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Speak a text string synchronously.  
      synth.Speak("This example speaks a string with the speaking rate set to -2.");  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }     
  }    
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Synthesis.PromptStyle" />
        <altmember cref="T:System.Speech.Synthesis.PromptRate" />
      </Docs>
    </Member>
    <Member MemberName="RemoveLexicon">
      <MemberSignature Language="C#" Value="public void RemoveLexicon (Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveLexicon(class System.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.RemoveLexicon(System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveLexicon(Uri ^ uri);" />
      <MemberSignature Language="F#" Value="member this.RemoveLexicon : Uri -&gt; unit" Usage="speechSynthesizer.RemoveLexicon uri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="uri"><span data-ttu-id="9a4f8-188">Ubicación del documento de léxico.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-188">The location of the lexicon document.</span></span></param>
        <summary><span data-ttu-id="9a4f8-189">Quita un léxico del objeto <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" />.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-189">Removes a lexicon from the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a4f8-190">Vea <xref:System.Speech.Synthesis.SpeechSynthesizer.AddLexicon%2A> para obtener un ejemplo.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-190">See <xref:System.Speech.Synthesis.SpeechSynthesizer.AddLexicon%2A> for an example.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.AddLexicon(System.Uri,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Resume">
      <MemberSignature Language="C#" Value="public void Resume ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Resume() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.Resume" />
      <MemberSignature Language="VB.NET" Value="Public Sub Resume ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Resume();" />
      <MemberSignature Language="F#" Value="member this.Resume : unit -&gt; unit" Usage="speechSynthesizer.Resume " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9a4f8-191">Reanuda el objeto de <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> después de haberse pausado.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-191">Resumes the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object after it has been paused.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.Pause" />
        <altmember cref="P:System.Speech.Synthesis.SpeechSynthesizer.State" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.StateChanged" />
      </Docs>
    </Member>
    <Member MemberName="SelectVoice">
      <MemberSignature Language="C#" Value="public void SelectVoice (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SelectVoice(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectVoice (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectVoice(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.SelectVoice : string -&gt; unit" Usage="speechSynthesizer.SelectVoice name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="9a4f8-192">Nombre de la voz que se va a seleccionar.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-192">The name of the voice to select.</span></span></param>
        <summary><span data-ttu-id="9a4f8-193">Selecciona una voz concreta por nombre.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-193">Selects a specific voice by name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a4f8-194">Use la <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> método y <xref:System.Speech.Synthesis.VoiceInfo> instalado de clase para obtener los nombres de las voces de texto a voz (TTS) que se pueden seleccionar.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-194">Use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method and <xref:System.Speech.Synthesis.VoiceInfo> class to obtain the names of installed text-to-speech (TTS) voices that you can select.</span></span> <span data-ttu-id="9a4f8-195">Para seleccionar una voz, pasar todo el contenido de la <xref:System.Speech.Synthesis.VoiceInfo.Name%2A> propiedad como argumento para el <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> método.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-195">To select a voice, pass the entire contents of the <xref:System.Speech.Synthesis.VoiceInfo.Name%2A> property as the argument for the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> method.</span></span> <span data-ttu-id="9a4f8-196">El <xref:System.Speech.Synthesis.SpeechSynthesizer> objeto selecciona el primer voz instalada que contiene `name` en la voz <xref:System.Speech.Synthesis.VoiceInfo.Name%2A?displayProperty=nameWithType> propiedad.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-196">The <xref:System.Speech.Synthesis.SpeechSynthesizer> object selects the first installed voice that contains `name` in the voice's <xref:System.Speech.Synthesis.VoiceInfo.Name%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="9a4f8-197">El <xref:System.Speech.Synthesis.SpeechSynthesizer> realiza una comparación entre mayúsculas y minúsculas, de subcadena para determinar si coincide con la voz del `name`.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-197">The <xref:System.Speech.Synthesis.SpeechSynthesizer> performs a case-sensitive, substring comparison to determine if the voice matches the `name`.</span></span>  
  
 <span data-ttu-id="9a4f8-198">Cuando una aplicación llama <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, el método comprueba que cada una de las voces busca en el registro cumple determinados criterios mínimos.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-198">When an application calls <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, the method verifies that each of the voices it finds in the registry meets certain minimum criteria.</span></span> <span data-ttu-id="9a4f8-199">Para cualquier voz que se produce un error de comprobación, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> establece su <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> propiedad `False`.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-199">For any voice that fails verification, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> sets its <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property to `False`.</span></span> <span data-ttu-id="9a4f8-200">Una aplicación no puede seleccionar una voz cuyo <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> propiedad es `False`.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-200">An application cannot select a voice whose <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property is `False`.</span></span> <span data-ttu-id="9a4f8-201">Normalmente, las aplicaciones no establecerá una voz <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-201">Typically, applications will not set a voice's <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property.</span></span>  
  
 <span data-ttu-id="9a4f8-202">Para seleccionar una voz por sexo, edad o configuración regional, use uno de los <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-202">To select a voice by gender, age, or locale, use one of the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SelectVoiceByHints">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9a4f8-203">Selecciona una voz con características concretas.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-203">Selects a voice with specific characteristics.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a4f8-204">Use la <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> método y <xref:System.Speech.Synthesis.VoiceInfo> instalado de clase para obtener los nombres de las voces de texto a voz (TTS) que se pueden seleccionar.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-204">Use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method and <xref:System.Speech.Synthesis.VoiceInfo> class to obtain the names of installed text-to-speech (TTS) voices that you can select.</span></span> <span data-ttu-id="9a4f8-205">La <xref:System.Speech.Synthesis.SpeechSynthesizer> objeto selecciona el primer voz instalada que coincida con las características especificadas.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-205">The <xref:System.Speech.Synthesis.SpeechSynthesizer> object selects the first installed voice that matches the specified characteristics.</span></span>  
  
 <span data-ttu-id="9a4f8-206">Cuando una aplicación llama <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, el método comprueba que cada una de las voces busca en el registro cumple determinados criterios mínimos.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-206">When an application calls <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, the method verifies that each of the voices it finds in the registry meets certain minimum criteria.</span></span> <span data-ttu-id="9a4f8-207">Para cualquier voz que se produce un error de comprobación, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> establece su <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> propiedad `False`.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-207">For any voice that fails verification, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> sets its <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property to `False`.</span></span> <span data-ttu-id="9a4f8-208">Una aplicación no puede seleccionar una voz cuyo <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> propiedad es `False`.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-208">An application cannot select a voice whose <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property is `False`.</span></span> <span data-ttu-id="9a4f8-209">Normalmente, las aplicaciones no establecerá una voz <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-209">Typically, applications will not set a voice's <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property.</span></span>  
  
 <span data-ttu-id="9a4f8-210">Para seleccionar una voz por su nombre, use la <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> (método)</span><span class="sxs-lookup"><span data-stu-id="9a4f8-210">To select a voice by name, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> method</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="SelectVoiceByHints">
      <MemberSignature Language="C#" Value="public void SelectVoiceByHints (System.Speech.Synthesis.VoiceGender gender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SelectVoiceByHints(valuetype System.Speech.Synthesis.VoiceGender gender) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectVoiceByHints (gender As VoiceGender)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectVoiceByHints(System::Speech::Synthesis::VoiceGender gender);" />
      <MemberSignature Language="F#" Value="member this.SelectVoiceByHints : System.Speech.Synthesis.VoiceGender -&gt; unit" Usage="speechSynthesizer.SelectVoiceByHints gender" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gender" Type="System.Speech.Synthesis.VoiceGender" />
      </Parameters>
      <Docs>
        <param name="gender"><span data-ttu-id="9a4f8-211">Género de la voz para seleccionar.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-211">The gender of the voice to select.</span></span></param>
        <summary><span data-ttu-id="9a4f8-212">Selecciona una voz con un género concreto.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-212">Selects a voice with a specific gender.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a4f8-213">Use la <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> método y <xref:System.Speech.Synthesis.VoiceInfo> instalado de clase para obtener los nombres de las voces de texto a voz (TTS) que se pueden seleccionar.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-213">Use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method and <xref:System.Speech.Synthesis.VoiceInfo> class to obtain the names of installed text-to-speech (TTS) voices that you can select.</span></span> <span data-ttu-id="9a4f8-214">El <xref:System.Speech.Synthesis.SpeechSynthesizer> objeto selecciona el primer voz instalada cuyo <xref:System.Speech.Synthesis.VoiceInfo.Gender%2A> coincidencias de propiedad el `gender` parámetro.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-214">The <xref:System.Speech.Synthesis.SpeechSynthesizer> object selects the first installed voice whose <xref:System.Speech.Synthesis.VoiceInfo.Gender%2A> property matches the `gender` parameter.</span></span>  
  
 <span data-ttu-id="9a4f8-215">Cuando una aplicación llama <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, el método comprueba que cada una de las voces busca en el registro cumple determinados criterios mínimos.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-215">When an application calls <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, the method verifies that each of the voices it finds in the registry meets certain minimum criteria.</span></span> <span data-ttu-id="9a4f8-216">Para cualquier voz que se produce un error de comprobación, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> establece su <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> propiedad `False`.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-216">For any voice that fails verification, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> sets its <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property to `False`.</span></span> <span data-ttu-id="9a4f8-217">Una aplicación no puede seleccionar una voz cuyo <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> propiedad es `False`.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-217">An application cannot select a voice whose <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property is `False`.</span></span> <span data-ttu-id="9a4f8-218">Normalmente, las aplicaciones no establecerá una voz <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-218">Typically, applications will not set a voice's <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property.</span></span>  
  
 <span data-ttu-id="9a4f8-219">Para seleccionar una voz en función de otras características, vea el otro <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-219">To select a voice based on other characteristics, see the other <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> methods.</span></span>  
  
 <span data-ttu-id="9a4f8-220">Para seleccionar una voz por su nombre, use la <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> método.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-220">To select a voice by name, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Synthesis.VoiceGender" />
        <altmember cref="T:System.Speech.Synthesis.VoiceInfo" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SelectVoiceByHints">
      <MemberSignature Language="C#" Value="public void SelectVoiceByHints (System.Speech.Synthesis.VoiceGender gender, System.Speech.Synthesis.VoiceAge age);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SelectVoiceByHints(valuetype System.Speech.Synthesis.VoiceGender gender, valuetype System.Speech.Synthesis.VoiceAge age) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectVoiceByHints (gender As VoiceGender, age As VoiceAge)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectVoiceByHints(System::Speech::Synthesis::VoiceGender gender, System::Speech::Synthesis::VoiceAge age);" />
      <MemberSignature Language="F#" Value="member this.SelectVoiceByHints : System.Speech.Synthesis.VoiceGender * System.Speech.Synthesis.VoiceAge -&gt; unit" Usage="speechSynthesizer.SelectVoiceByHints (gender, age)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gender" Type="System.Speech.Synthesis.VoiceGender" />
        <Parameter Name="age" Type="System.Speech.Synthesis.VoiceAge" />
      </Parameters>
      <Docs>
        <param name="gender"><span data-ttu-id="9a4f8-221">Género de la voz para seleccionar.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-221">The gender of the voice to select.</span></span></param>
        <param name="age"><span data-ttu-id="9a4f8-222">Edad de la voz para seleccionar.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-222">The age of the voice to select.</span></span></param>
        <summary><span data-ttu-id="9a4f8-223">Selecciona una voz con un género y edad específicos.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-223">Selects a voice with a specific gender and age.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a4f8-224">Use la <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> método y <xref:System.Speech.Synthesis.VoiceInfo> instalado de clase para obtener los nombres de las voces de texto a voz (TTS) que se pueden seleccionar.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-224">Use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method and <xref:System.Speech.Synthesis.VoiceInfo> class to obtain the names of installed text-to-speech (TTS) voices that you can select.</span></span> <span data-ttu-id="9a4f8-225">El <xref:System.Speech.Synthesis.SpeechSynthesizer> objeto selecciona el primer voz instalada cuyo <xref:System.Speech.Synthesis.VoiceInfo.Gender%2A> y <xref:System.Speech.Synthesis.VoiceInfo.Age%2A> coincidencia de propiedades el `gender` y `age` parámetros.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-225">The <xref:System.Speech.Synthesis.SpeechSynthesizer> object selects the first installed voice whose <xref:System.Speech.Synthesis.VoiceInfo.Gender%2A> and <xref:System.Speech.Synthesis.VoiceInfo.Age%2A> properties match the `gender` and `age` parameters.</span></span>  
  
 <span data-ttu-id="9a4f8-226">Cuando una aplicación llama <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, el método comprueba que cada una de las voces busca en el registro cumple determinados criterios mínimos.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-226">When an application calls <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, the method verifies that each of the voices it finds in the registry meets certain minimum criteria.</span></span> <span data-ttu-id="9a4f8-227">Para cualquier voz que se produce un error de comprobación, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> establece su <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> propiedad `False`.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-227">For any voice that fails verification, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> sets its <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property to `False`.</span></span> <span data-ttu-id="9a4f8-228">Una aplicación no puede seleccionar una voz cuyo <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> propiedad es `False`.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-228">An application cannot select a voice whose <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property is `False`.</span></span> <span data-ttu-id="9a4f8-229">Normalmente, las aplicaciones no establecerá una voz <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-229">Typically, applications will not set a voice's <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property.</span></span>  
  
 <span data-ttu-id="9a4f8-230">Para seleccionar una voz en función de otras características, vea el otro <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-230">To select a voice based on other characteristics, see the other <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> methods.</span></span>  
  
 <span data-ttu-id="9a4f8-231">Para seleccionar una voz por su nombre, use la <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> método.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-231">To select a voice by name, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Synthesis.VoiceAge" />
        <altmember cref="T:System.Speech.Synthesis.VoiceGender" />
        <altmember cref="T:System.Speech.Synthesis.VoiceInfo" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SelectVoiceByHints">
      <MemberSignature Language="C#" Value="public void SelectVoiceByHints (System.Speech.Synthesis.VoiceGender gender, System.Speech.Synthesis.VoiceAge age, int voiceAlternate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SelectVoiceByHints(valuetype System.Speech.Synthesis.VoiceGender gender, valuetype System.Speech.Synthesis.VoiceAge age, int32 voiceAlternate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectVoiceByHints (gender As VoiceGender, age As VoiceAge, voiceAlternate As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectVoiceByHints(System::Speech::Synthesis::VoiceGender gender, System::Speech::Synthesis::VoiceAge age, int voiceAlternate);" />
      <MemberSignature Language="F#" Value="member this.SelectVoiceByHints : System.Speech.Synthesis.VoiceGender * System.Speech.Synthesis.VoiceAge * int -&gt; unit" Usage="speechSynthesizer.SelectVoiceByHints (gender, age, voiceAlternate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gender" Type="System.Speech.Synthesis.VoiceGender" />
        <Parameter Name="age" Type="System.Speech.Synthesis.VoiceAge" />
        <Parameter Name="voiceAlternate" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="gender"><span data-ttu-id="9a4f8-232">Género de la voz para seleccionar.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-232">The gender of the voice to select.</span></span></param>
        <param name="age"><span data-ttu-id="9a4f8-233">Edad de la voz para seleccionar.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-233">The age of the voice to select.</span></span></param>
        <param name="voiceAlternate"><span data-ttu-id="9a4f8-234">La posición de la voz para seleccionar.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-234">The position of the voice to select.</span></span></param>
        <summary><span data-ttu-id="9a4f8-235">Selecciona una voz con un género y edad específicos, en función de la posición en la que se ordenan las voces.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-235">Selects a voice with a specific gender and age, based on the position in which the voices are ordered.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a4f8-236">Use la <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> método y <xref:System.Speech.Synthesis.VoiceInfo> instalado de clase para obtener los nombres de las voces de texto a voz (TTS) que se pueden seleccionar.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-236">Use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method and <xref:System.Speech.Synthesis.VoiceInfo> class to obtain the names of installed text-to-speech (TTS) voices that you can select.</span></span> <span data-ttu-id="9a4f8-237">El <xref:System.Speech.Synthesis.SpeechSynthesizer> objeto busca instalado voces cuya <xref:System.Speech.Synthesis.VoiceInfo.Gender%2A> y <xref:System.Speech.Synthesis.VoiceInfo.Age%2A> coincidencia de propiedades el `gender` y `age` parámetros.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-237">The <xref:System.Speech.Synthesis.SpeechSynthesizer> object finds installed voices whose <xref:System.Speech.Synthesis.VoiceInfo.Gender%2A> and <xref:System.Speech.Synthesis.VoiceInfo.Age%2A> properties match the `gender` and `age` parameters.</span></span> <span data-ttu-id="9a4f8-238">El <xref:System.Speech.Synthesis.SpeechSynthesizer> cuenta las coincidencias que busca y devuelve la voz cuando el recuento es igual a la `voiceAlternate` parámetro.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-238">The <xref:System.Speech.Synthesis.SpeechSynthesizer> counts the matches it finds, and returns the voice when the count equals the `voiceAlternate` parameter.</span></span>  
  
 <span data-ttu-id="9a4f8-239">Cuando una aplicación llama <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, el método comprueba que cada una de las voces busca en el registro cumple determinados criterios mínimos.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-239">When an application calls <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, the method verifies that each of the voices it finds in the registry meets certain minimum criteria.</span></span> <span data-ttu-id="9a4f8-240">Para cualquier voz que se produce un error de comprobación, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> establece su <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> propiedad `False`.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-240">For any voice that fails verification, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> sets its <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property to `False`.</span></span> <span data-ttu-id="9a4f8-241">Una aplicación no puede seleccionar una voz cuyo <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> propiedad es `False`.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-241">An application cannot select a voice whose <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property is `False`.</span></span> <span data-ttu-id="9a4f8-242">Normalmente, las aplicaciones no establecerá una voz <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-242">Typically, applications will not set a voice's <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property.</span></span>  
  
 <span data-ttu-id="9a4f8-243">Para seleccionar una voz en función de otras características, vea el otro <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> sobrecargas.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-243">To select a voice based on other characteristics, see the other <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> overloads.</span></span>  
  
 <span data-ttu-id="9a4f8-244">Para seleccionar una voz por su nombre, use la <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> método.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-244">To select a voice by name, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Synthesis.VoiceAge" />
        <altmember cref="T:System.Speech.Synthesis.VoiceGender" />
        <altmember cref="T:System.Speech.Synthesis.VoiceInfo" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SelectVoiceByHints">
      <MemberSignature Language="C#" Value="public void SelectVoiceByHints (System.Speech.Synthesis.VoiceGender gender, System.Speech.Synthesis.VoiceAge age, int voiceAlternate, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SelectVoiceByHints(valuetype System.Speech.Synthesis.VoiceGender gender, valuetype System.Speech.Synthesis.VoiceAge age, int32 voiceAlternate, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge,System.Int32,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectVoiceByHints (gender As VoiceGender, age As VoiceAge, voiceAlternate As Integer, culture As CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectVoiceByHints(System::Speech::Synthesis::VoiceGender gender, System::Speech::Synthesis::VoiceAge age, int voiceAlternate, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="member this.SelectVoiceByHints : System.Speech.Synthesis.VoiceGender * System.Speech.Synthesis.VoiceAge * int * System.Globalization.CultureInfo -&gt; unit" Usage="speechSynthesizer.SelectVoiceByHints (gender, age, voiceAlternate, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gender" Type="System.Speech.Synthesis.VoiceGender" />
        <Parameter Name="age" Type="System.Speech.Synthesis.VoiceAge" />
        <Parameter Name="voiceAlternate" Type="System.Int32" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="gender"><span data-ttu-id="9a4f8-245">Género de la voz para seleccionar.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-245">The gender of the voice to select.</span></span></param>
        <param name="age"><span data-ttu-id="9a4f8-246">Edad de la voz para seleccionar.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-246">The age of the voice to select.</span></span></param>
        <param name="voiceAlternate"><span data-ttu-id="9a4f8-247">La posición de la voz para seleccionar.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-247">The position of the voice to select.</span></span></param>
        <param name="culture"><span data-ttu-id="9a4f8-248">Configuración regional de la voz para seleccionar.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-248">The locale of the voice to select.</span></span></param>
        <summary><span data-ttu-id="9a4f8-249">Selecciona una voz con un género, edad y configuración regional específicos, en función de la posición en la que se ordenan las voces.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-249">Selects a voice with a specific gender, age, and locale, based on the position in which the voices are ordered.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a4f8-250">El <xref:System.Speech.Synthesis.SpeechSynthesizer> objeto busca voces cuya <xref:System.Speech.Synthesis.VoiceInfo.Gender%2A>, <xref:System.Speech.Synthesis.VoiceInfo.Age%2A>, y <xref:System.Speech.Synthesis.VoiceInfo.Culture%2A> coincidencia de propiedades el `gender`, `age`, y `culture` parámetros.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-250">The <xref:System.Speech.Synthesis.SpeechSynthesizer> object finds voices whose <xref:System.Speech.Synthesis.VoiceInfo.Gender%2A>, <xref:System.Speech.Synthesis.VoiceInfo.Age%2A>, and <xref:System.Speech.Synthesis.VoiceInfo.Culture%2A> properties match the `gender`, `age`, and `culture` parameters.</span></span> <span data-ttu-id="9a4f8-251">El <xref:System.Speech.Synthesis.SpeechSynthesizer> cuenta las coincidencias que busca y devuelve la voz cuando el recuento es igual a la `voiceAlternate` parámetro.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-251">The <xref:System.Speech.Synthesis.SpeechSynthesizer> counts the matches it finds, and returns the voice when the count equals the `voiceAlternate` parameter.</span></span>  
  
 <span data-ttu-id="9a4f8-252">Microsoft Windows y la API System.Speech aceptan todos los códigos de idioma de país válidos.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-252">Microsoft Windows and the System.Speech API accept all valid language-country codes.</span></span> <span data-ttu-id="9a4f8-253">Para realizar el texto a voz con el idioma especificado en el `culture` parámetro, un motor de síntesis de voz que admite que se debe instalar el código de país de lenguaje.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-253">To perform text-to-speech using the language specified in the `culture` parameter, a speech synthesis engine that supports that language-country code must be installed.</span></span> <span data-ttu-id="9a4f8-254">Los motores de síntesis de voz que se incluye con Microsoft Windows 7 funcionan con los siguientes códigos de idioma de país:</span><span class="sxs-lookup"><span data-stu-id="9a4f8-254">The speech synthesis engines that shipped with Microsoft Windows 7 work with the following language-country codes:</span></span>  
  
-   <span data-ttu-id="9a4f8-255">en-US.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-255">en-US.</span></span> <span data-ttu-id="9a4f8-256">Inglés (Estados Unidos)</span><span class="sxs-lookup"><span data-stu-id="9a4f8-256">English (United States)</span></span>  
  
-   <span data-ttu-id="9a4f8-257">zh-CN.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-257">zh-CN.</span></span> <span data-ttu-id="9a4f8-258">Chino (China)</span><span class="sxs-lookup"><span data-stu-id="9a4f8-258">Chinese (China)</span></span>  
  
-   <span data-ttu-id="9a4f8-259">zh-TW.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-259">zh-TW.</span></span> <span data-ttu-id="9a4f8-260">Chino (Taiwán)</span><span class="sxs-lookup"><span data-stu-id="9a4f8-260">Chinese (Taiwan)</span></span>  
  
 <span data-ttu-id="9a4f8-261">También se permiten códigos de idioma de dos letras como "es-es".</span><span class="sxs-lookup"><span data-stu-id="9a4f8-261">Two-letter language codes such as "en" are also permitted.</span></span>  
  
 <span data-ttu-id="9a4f8-262">Cuando una aplicación llama <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, el método comprueba que cada una de las voces busca en el registro cumple determinados criterios mínimos.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-262">When an application calls <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, the method verifies that each of the voices it finds in the registry meets certain minimum criteria.</span></span> <span data-ttu-id="9a4f8-263">Para cualquier voz que se produce un error de comprobación, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> establece su <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> propiedad `False`.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-263">For any voice that fails verification, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> sets its <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property to `False`.</span></span> <span data-ttu-id="9a4f8-264">Una aplicación no puede seleccionar una voz cuyo <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> propiedad es `False`.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-264">An application cannot select a voice whose <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property is `False`.</span></span> <span data-ttu-id="9a4f8-265">Normalmente, las aplicaciones no establecerá una voz <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-265">Typically, applications will not set a voice's <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property.</span></span>  
  
 <span data-ttu-id="9a4f8-266">Para seleccionar una voz en función de otras características, vea el otro <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> sobrecargas.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-266">To select a voice based on other characteristics, see the other <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> overloads.</span></span>  
  
 <span data-ttu-id="9a4f8-267">Para seleccionar una voz por su nombre, use la <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> método.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-267">To select a voice by name, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Speech.Synthesis.VoiceAge" />
        <altmember cref="T:System.Speech.Synthesis.VoiceGender" />
        <altmember cref="T:System.Speech.Synthesis.VoiceInfo" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SetOutputToAudioStream">
      <MemberSignature Language="C#" Value="public void SetOutputToAudioStream (System.IO.Stream audioDestination, System.Speech.AudioFormat.SpeechAudioFormatInfo formatInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputToAudioStream(class System.IO.Stream audioDestination, class System.Speech.AudioFormat.SpeechAudioFormatInfo formatInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream(System.IO.Stream,System.Speech.AudioFormat.SpeechAudioFormatInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputToAudioStream (audioDestination As Stream, formatInfo As SpeechAudioFormatInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputToAudioStream(System::IO::Stream ^ audioDestination, System::Speech::AudioFormat::SpeechAudioFormatInfo ^ formatInfo);" />
      <MemberSignature Language="F#" Value="member this.SetOutputToAudioStream : System.IO.Stream * System.Speech.AudioFormat.SpeechAudioFormatInfo -&gt; unit" Usage="speechSynthesizer.SetOutputToAudioStream (audioDestination, formatInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioDestination" Type="System.IO.Stream" />
        <Parameter Name="formatInfo" Type="System.Speech.AudioFormat.SpeechAudioFormatInfo" />
      </Parameters>
      <Docs>
        <param name="audioDestination"><span data-ttu-id="9a4f8-268">Flujo al que se va a anexar la salida de síntesis.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-268">The stream to which to append synthesis output.</span></span></param>
        <param name="formatInfo"><span data-ttu-id="9a4f8-269">Formato que se va a usar para la salida de síntesis.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-269">The format to use for the synthesis output.</span></span></param>
        <summary><span data-ttu-id="9a4f8-270">Configura el objeto <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> para anexar el resultado a una secuencia de audio.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-270">Configures the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object to append output to an audio stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a4f8-271">Llame a <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A> para liberar el <xref:System.Speech.Synthesis.SpeechSynthesizer>de referencia a la secuencia.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-271">Call <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A> to release the <xref:System.Speech.Synthesis.SpeechSynthesizer>'s  reference to the stream.</span></span>  
  
 <span data-ttu-id="9a4f8-272">Para ver otras opciones de configuración de salida, vea el <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A>, y <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-272">For other output configuration options, see the <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A>, and <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOutputToDefaultAudioDevice">
      <MemberSignature Language="C#" Value="public void SetOutputToDefaultAudioDevice ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputToDefaultAudioDevice() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputToDefaultAudioDevice ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputToDefaultAudioDevice();" />
      <MemberSignature Language="F#" Value="member this.SetOutputToDefaultAudioDevice : unit -&gt; unit" Usage="speechSynthesizer.SetOutputToDefaultAudioDevice " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9a4f8-273">Configura el objeto <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> para enviar la salida al dispositivo de audio predeterminado.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-273">Configures the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object to send output to the default audio device.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a4f8-274">Puede usar el **sonido** ventana en el Windows **Panel de Control** para configurar el dispositivo de audio predeterminado para el equipo.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-274">You can use the  **Sound** window in the Windows **Control Panel** to configure the default audio device for the computer.</span></span>  
  
 <span data-ttu-id="9a4f8-275">Para ver otras opciones de configuración de salida, vea el <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A>, y <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-275">For other output configuration options, see the <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A>, and <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9a4f8-276">El ejemplo siguiente utiliza el sintetizador hablar de una frase a la salida de audio predeterminada.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-276">The following example uses the synthesizer to speak a phrase to the default audio output.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the speech synthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the synthesizer to send output to the default audio device.  
        synth.SetOutputToDefaultAudioDevice();  
  
        // Speak a phrase.  
        synth.Speak("This is sample text-to-speech output.");  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOutputToNull">
      <MemberSignature Language="C#" Value="public void SetOutputToNull ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputToNull() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputToNull ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputToNull();" />
      <MemberSignature Language="F#" Value="member this.SetOutputToNull : unit -&gt; unit" Usage="speechSynthesizer.SetOutputToNull " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9a4f8-277">Configura el objeto <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> para no enviar los resultados de las operaciones de síntesis a un dispositivo, un archivo o un flujo.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-277">Configures the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object to not send output from synthesis operations to a device, file, or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a4f8-278">Utilice este método para liberar el <xref:System.Speech.Synthesis.SpeechSynthesizer>de referencia a un archivo o secuencia.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-278">Use this method to release the <xref:System.Speech.Synthesis.SpeechSynthesizer>'s reference to a file or stream.</span></span> <span data-ttu-id="9a4f8-279">Vea <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> para obtener un ejemplo.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-279">See <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> for an example.</span></span>  
  
 <span data-ttu-id="9a4f8-280">Para ver otras opciones de configuración de salida, vea el <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A>, y <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-280">For other output configuration options, see the <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A>, and <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetOutputToWaveFile">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9a4f8-281">Configura el objeto <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> para anexar la salida a un archivo con formato de audio de forma de onda.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-281">Configures the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object to append output to a Waveform audio format file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a4f8-282">Para liberar el <xref:System.Speech.Synthesis.SpeechSynthesizer>referencia en el archivo, volver a configurar el <xref:System.Speech.Synthesis.SpeechSynthesizer>de salida de, por ejemplo, mediante una llamada a <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-282">To release the <xref:System.Speech.Synthesis.SpeechSynthesizer>'s  reference to the file, reconfigure the <xref:System.Speech.Synthesis.SpeechSynthesizer>'s output, for example, by calling <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>.</span></span>  
  
 <span data-ttu-id="9a4f8-283">Para ver otras opciones de configuración de salida, vea el <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, y <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-283">For other output configuration options, see the <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, and <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetOutputToWaveFile">
      <MemberSignature Language="C#" Value="public void SetOutputToWaveFile (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputToWaveFile(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputToWaveFile (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputToWaveFile(System::String ^ path);" />
      <MemberSignature Language="F#" Value="member this.SetOutputToWaveFile : string -&gt; unit" Usage="speechSynthesizer.SetOutputToWaveFile path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="9a4f8-284">Ruta de acceso al archivo.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-284">The path to the file.</span></span></param>
        <summary><span data-ttu-id="9a4f8-285">Configura el objeto <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> para anexar la salida a un archivo que contiene audio de formato de forma de onda.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-285">Configures the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object to append output to a file that contains Waveform format audio.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a4f8-286">Para configurar la salida y especificar el formato de audio, utilice el <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A> método.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-286">To configure the output and specify the audio format, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9a4f8-287">En el ejemplo siguiente se usa una instancia de <xref:System.Media.SoundPlayer> para reproducir un símbolo del sistema que ha sido de salida a un archivo .wav.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-287">The following example uses an instance of <xref:System.Media.SoundPlayer> to play a prompt that has been output to a .wav file.</span></span> <span data-ttu-id="9a4f8-288">Porque el <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> llamada es asincrónica, el <xref:System.Media.SoundPlayer> se crea la instancia (y el <xref:System.Media.SoundPlayer.Play%2A> método invocado) en el controlador para el <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> eventos.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-288">Because the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> call is asynchronous, the <xref:System.Media.SoundPlayer> instance is created (and the <xref:System.Media.SoundPlayer.Play%2A> method invoked) in the handler for the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> event.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Configure the audio output.   
      synth.SetOutputToWaveFile(@"C:\Test\Sample.wav");  
  
      // Register for the SpeakCompleted event.  
      synth.SpeakCompleted += new EventHandler<SpeakCompletedEventArgs>(synth_SpeakCompleted);  
  
      // Build a prompt.  
      PromptBuilder builder = new PromptBuilder();  
      builder.AppendText("This sample asynchronously speaks a prompt to a WAVE file.");  
  
      // Speak the string asynchronously.  
      synth.SpeakAsync(builder);  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  
    // Handle the SpeakCompleted event.  
    static void synth_SpeakCompleted(object sender, SpeakCompletedEventArgs e)  
    {  
  
      // Create a SoundPlayer instance to play the output audio file.  
      System.Media.SoundPlayer m_SoundPlayer =  
        new System.Media.SoundPlayer(@"C:\Test\Sample.wav");  
  
      //  Play the output file.  
      m_SoundPlayer.Play();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream(System.IO.Stream,System.Speech.AudioFormat.SpeechAudioFormatInfo)" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream(System.IO.Stream)" />
      </Docs>
    </Member>
    <Member MemberName="SetOutputToWaveFile">
      <MemberSignature Language="C#" Value="public void SetOutputToWaveFile (string path, System.Speech.AudioFormat.SpeechAudioFormatInfo formatInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputToWaveFile(string path, class System.Speech.AudioFormat.SpeechAudioFormatInfo formatInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile(System.String,System.Speech.AudioFormat.SpeechAudioFormatInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputToWaveFile (path As String, formatInfo As SpeechAudioFormatInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputToWaveFile(System::String ^ path, System::Speech::AudioFormat::SpeechAudioFormatInfo ^ formatInfo);" />
      <MemberSignature Language="F#" Value="member this.SetOutputToWaveFile : string * System.Speech.AudioFormat.SpeechAudioFormatInfo -&gt; unit" Usage="speechSynthesizer.SetOutputToWaveFile (path, formatInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="formatInfo" Type="System.Speech.AudioFormat.SpeechAudioFormatInfo" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="9a4f8-289">Ruta de acceso al archivo.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-289">The path to the file.</span></span></param>
        <param name="formatInfo"><span data-ttu-id="9a4f8-290">Información de formato de audio.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-290">The audio format information.</span></span></param>
        <summary><span data-ttu-id="9a4f8-291">Configura el objeto <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> para anexar la salida a un archivo de formato de audio de forma de onda en un formato especificado.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-291">Configures the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object to append output to a Waveform audio format file in a specified format.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9a4f8-292">El ejemplo siguiente especifica el formato de la salida de síntesis de voz y lo envía a un archivo WAV.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-292">The following example specifies the format of the output of speech synthesis and sends it to a WAV file.</span></span>  
  
```csharp  
using System;  
using System.IO;  
using System.Speech.Synthesis;  
using System.Speech.AudioFormat;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToWaveFile(@"C:\temp\test.wav",   
          new SpeechAudioFormatInfo(32000, AudioBitsPerSample.Sixteen, AudioChannel.Mono));  
  
        // Create a SoundPlayer instance to play output audio file.  
        System.Media.SoundPlayer m_SoundPlayer =   
          new System.Media.SoundPlayer(@"C:\temp\test.wav");  
  
        // Build a prompt.  
        PromptBuilder builder = new PromptBuilder();  
        builder.AppendText("This is sample output to a WAVE file.");  
  
        // Speak the prompt.  
        synth.Speak(builder);  
        m_SoundPlayer.Play();  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream(System.IO.Stream,System.Speech.AudioFormat.SpeechAudioFormatInfo)" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream(System.IO.Stream)" />
      </Docs>
    </Member>
    <Member MemberName="SetOutputToWaveStream">
      <MemberSignature Language="C#" Value="public void SetOutputToWaveStream (System.IO.Stream audioDestination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputToWaveStream(class System.IO.Stream audioDestination) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputToWaveStream (audioDestination As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputToWaveStream(System::IO::Stream ^ audioDestination);" />
      <MemberSignature Language="F#" Value="member this.SetOutputToWaveStream : System.IO.Stream -&gt; unit" Usage="speechSynthesizer.SetOutputToWaveStream audioDestination" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioDestination" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="audioDestination"><span data-ttu-id="9a4f8-293">Flujo al que se va a anexar la salida de síntesis.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-293">The stream to which to append synthesis output.</span></span></param>
        <summary><span data-ttu-id="9a4f8-294">Configura el objeto <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> para anexar la salida a un flujo que contiene audio de formato de forma de onda.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-294">Configures the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object to append output to a stream that contains Waveform format audio.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a4f8-295">Para liberar el <xref:System.Speech.Synthesis.SpeechSynthesizer>referencia en el flujo, reconfigure el sintetizador de salida de, por ejemplo, mediante una llamada a <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-295">To release the <xref:System.Speech.Synthesis.SpeechSynthesizer>'s reference to the stream, reconfigure the synthesizer's output, for example, by calling <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>.</span></span>  
  
 <span data-ttu-id="9a4f8-296">Para ver otras opciones de configuración de salida, vea el <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, y <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-296">For other output configuration options, see the <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, and <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9a4f8-297">El ejemplo siguiente genera una frase en una secuencia WAV.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-297">The following example outputs a phrase to a WAV stream.</span></span>  
  
```csharp  
using System;  
using System.IO;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the speech synthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      using (MemoryStream streamAudio = new MemoryStream())  
      {  
  
        // Create a SoundPlayer instance to play the output audio file.  
        System.Media.SoundPlayer m_SoundPlayer = new System.Media.SoundPlayer();  
  
        // Configure the synthesizer to output to an audio stream.  
        synth.SetOutputToWaveStream(streamAudio);  
  
        // Speak a phrase.  
        synth.Speak("This is sample text-to-speech output.");  
        streamAudio.Position = 0;  
        m_SoundPlayer.Stream = streamAudio;  
        m_SoundPlayer.Play();  
  
        // Set the synthesizer output to null to release the stream.   
        synth.SetOutputToNull();  
  
        // Insert code to persist or process the stream contents here.  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Speak">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9a4f8-298">Genera voz emitida de forma sincrónica desde una cadena, un objeto <see cref="T:System.Speech.Synthesis.Prompt" /> o un objeto <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-298">Generates speech output synchronously from a string, a <see cref="T:System.Speech.Synthesis.Prompt" /> object, or a <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a4f8-299">El <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> métodos generan voz de forma sincrónica.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-299">The <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> methods generate speech synchronously.</span></span> <span data-ttu-id="9a4f8-300">Los métodos no vuelve hasta que el contenido de la <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> instancia ha se ha expuesto por completo.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-300">The methods do not return until the content of the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> instance has been completely spoken.</span></span> <span data-ttu-id="9a4f8-301">Se trata de la manera más sencilla para generar voz.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-301">This is the simplest way to generate speech.</span></span> <span data-ttu-id="9a4f8-302">Sin embargo, si la aplicación necesita realizar tareas mientras habla, por ejemplo texto resaltado, paint animación, controles de monitor u otras tareas, use el <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> métodos o <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> método para generar voz de forma asincrónica.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-302">However, if your application needs to perform tasks while speaking, for example highlight text, paint animation, monitor controls, or other tasks, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> methods or the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> method to generate speech asynchronously.</span></span>  
  
 <span data-ttu-id="9a4f8-303">Durante una llamada a este método, el <xref:System.Speech.Synthesis.SpeechSynthesizer> puede provocar los eventos siguientes:</span><span class="sxs-lookup"><span data-stu-id="9a4f8-303">During a call to this method, the <xref:System.Speech.Synthesis.SpeechSynthesizer> can raise the following events:</span></span>  
  
-   <span data-ttu-id="9a4f8-304"><xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged>.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-304"><xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged>.</span></span> <span data-ttu-id="9a4f8-305">Se genera cuando cambia el estado de habla del sintetizador.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-305">Raised when the speaking state of the synthesizer changes.</span></span>  
  
-   <span data-ttu-id="9a4f8-306"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-306"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>.</span></span> <span data-ttu-id="9a4f8-307">Se genera cuando el sintetizador comience a generar la voz.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-307">Raised when the synthesizer begins generating speech.</span></span>  
  
-   <span data-ttu-id="9a4f8-308"><xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-308"><xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>.</span></span> <span data-ttu-id="9a4f8-309">Se genera cada vez que el sintetizador alcanza una letra o una combinación de letras que constituyen un sonido discreto de voz en un idioma.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-309">Raised each time the synthesizer reaches a letter or combination of letters that constitute a discreet sound of speech in a language.</span></span>  
  
-   <span data-ttu-id="9a4f8-310"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-310"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>.</span></span> <span data-ttu-id="9a4f8-311">Se genera cada vez que el sintetizador completa hablando de una palabra.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-311">Raised each time the synthesizer completes speaking a word.</span></span>  
  
-   <span data-ttu-id="9a4f8-312"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-312"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>.</span></span> <span data-ttu-id="9a4f8-313">Genera cada vez salida de voz requiere un cambio en la posición de la boca o los músculos faciales utilizados para generar voz.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-313">Raised each time spoken output requires a change in the position of the mouth or the facial muscles used to produce speech.</span></span>  
  
-   <span data-ttu-id="9a4f8-314"><xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-314"><xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>.</span></span> <span data-ttu-id="9a4f8-315">Se genera cuando el sintetizador encuentra un marcador en un símbolo del sistema.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-315">Raised when the synthesizer encounters a bookmark in a prompt.</span></span>  
  
-   <span data-ttu-id="9a4f8-316"><xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-316"><xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>.</span></span> <span data-ttu-id="9a4f8-317">Se genera cuando cambia el tono de voz para el sintetizador.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-317">Raised when the speaking voice for the synthesizer changes.</span></span>  
  
 <span data-ttu-id="9a4f8-318">El <xref:System.Speech.Synthesis.SpeechSynthesizer> no provoca la <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> eventos durante el procesamiento de cualquiera de los <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-318">The <xref:System.Speech.Synthesis.SpeechSynthesizer> does not raise the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> event while processing any of the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Speak">
      <MemberSignature Language="C#" Value="public void Speak (System.Speech.Synthesis.Prompt prompt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Speak(class System.Speech.Synthesis.Prompt prompt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.Speak(System.Speech.Synthesis.Prompt)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Speak(System::Speech::Synthesis::Prompt ^ prompt);" />
      <MemberSignature Language="F#" Value="member this.Speak : System.Speech.Synthesis.Prompt -&gt; unit" Usage="speechSynthesizer.Speak prompt" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prompt" Type="System.Speech.Synthesis.Prompt" />
      </Parameters>
      <Docs>
        <param name="prompt"><span data-ttu-id="9a4f8-319">El contenido para hablar.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-319">The content to speak.</span></span></param>
        <summary><span data-ttu-id="9a4f8-320">De forma sincrónica habla el contenido de un objeto <see cref="T:System.Speech.Synthesis.Prompt" />.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-320">Synchronously speaks the contents of a <see cref="T:System.Speech.Synthesis.Prompt" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a4f8-321">Para comunicar de forma asincrónica el contenido de un <xref:System.Speech.Synthesis.Prompt> de objeto, utilice <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-321">To asynchronously speak the contents of a <xref:System.Speech.Synthesis.Prompt> object, use <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9a4f8-322">En el ejemplo siguiente se crea un <xref:System.Speech.Synthesis.Prompt> cadena en un objeto y el objeto se pasa como argumento a la <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> método.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-322">The following example creates a <xref:System.Speech.Synthesis.Prompt> object from a string and passes the object as an argument to the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> method.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Create a prompt from a string.  
        Prompt color = new Prompt("What is your favorite color?");  
  
        // Speak the contents of the prompt synchronously.  
        synth.Speak(color);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="Speak">
      <MemberSignature Language="C#" Value="public void Speak (System.Speech.Synthesis.PromptBuilder promptBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Speak(class System.Speech.Synthesis.PromptBuilder promptBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.Speak(System.Speech.Synthesis.PromptBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Speak(System::Speech::Synthesis::PromptBuilder ^ promptBuilder);" />
      <MemberSignature Language="F#" Value="member this.Speak : System.Speech.Synthesis.PromptBuilder -&gt; unit" Usage="speechSynthesizer.Speak promptBuilder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="promptBuilder" Type="System.Speech.Synthesis.PromptBuilder" />
      </Parameters>
      <Docs>
        <param name="promptBuilder"><span data-ttu-id="9a4f8-323">El contenido para hablar.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-323">The content to speak.</span></span></param>
        <summary><span data-ttu-id="9a4f8-324">De forma sincrónica habla el contenido de un objeto <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-324">Synchronously speaks the contents of a <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a4f8-325">Para comunicar de forma asincrónica el contenido de un <xref:System.Speech.Synthesis.PromptBuilder> de objeto, utilice <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-325">To asynchronously speak the contents of a <xref:System.Speech.Synthesis.PromptBuilder> object, use <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9a4f8-326">En el ejemplo siguiente se crea un <xref:System.Speech.Synthesis.PromptBuilder> cadena en un objeto y el objeto se pasa como argumento a la <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> método.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-326">The following example creates a <xref:System.Speech.Synthesis.PromptBuilder> object from a string and passes the object as an argument to the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> method.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Create a PromptBuilder object and append a text string.  
        PromptBuilder song = new PromptBuilder();  
        song.AppendText("Say the name of the song you want to hear");  
  
        // Speak the contents of the prompt synchronously.  
        synth.Speak(song);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="Speak">
      <MemberSignature Language="C#" Value="public void Speak (string textToSpeak);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Speak(string textToSpeak) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.Speak(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Speak (textToSpeak As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Speak(System::String ^ textToSpeak);" />
      <MemberSignature Language="F#" Value="member this.Speak : string -&gt; unit" Usage="speechSynthesizer.Speak textToSpeak" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textToSpeak" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textToSpeak"><span data-ttu-id="9a4f8-327">Texto para hablar.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-327">The text to speak.</span></span></param>
        <summary><span data-ttu-id="9a4f8-328">De forma sincrónica habla el contenido de una cadena.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-328">Synchronously speaks the contents of a string.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a4f8-329">Para hablar de forma sincrónica una cadena que contiene el marcado SSML, utilice el <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> método.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-329">To synchronously speak a string that contains SSML markup, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> method.</span></span> <span data-ttu-id="9a4f8-330">Para hablar de forma asincrónica el contenido de una cadena, utilice el <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> método.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-330">To asynchronously speak the contents of a string, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9a4f8-331">Como se muestra en el ejemplo siguiente, la <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> método proporciona los medios más sencillos para generar voz de salida de forma sincrónica.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-331">As shown in the following example, the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> method provides the simplest means to generate speech output synchronously.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Speak a string synchronously.  
        synth.Speak("What is your favorite color?");  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SpeakAsync">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9a4f8-332">Genera voz emitida de forma asincrónica desde una cadena, un objeto <see cref="T:System.Speech.Synthesis.Prompt" /> o un objeto <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-332">Generates speech output asynchronously from a string, a <see cref="T:System.Speech.Synthesis.Prompt" /> object, or a <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a4f8-333">El <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> métodos generan voz de forma asincrónica.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-333">The <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> methods generate speech asynchronously.</span></span> <span data-ttu-id="9a4f8-334">Los métodos devuelven inmediatamente sin esperar a que el contenido de la <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> objeto termine de hablar.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-334">The methods return immediately without waiting for the content of the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> object to finish speaking.</span></span> <span data-ttu-id="9a4f8-335">Use <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> si la aplicación necesita realizar tareas mientras habla, por ejemplo, resaltar texto, pintar la animación, controles de supervisión u otras tareas.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-335">Use <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> if your application needs to perform tasks while speaking, for example highlight text, paint animation, monitor controls, or other tasks.</span></span>  
  
 <span data-ttu-id="9a4f8-336">Durante una llamada a este método, el <xref:System.Speech.Synthesis.SpeechSynthesizer> puede provocar los eventos siguientes:</span><span class="sxs-lookup"><span data-stu-id="9a4f8-336">During a call to this method, the <xref:System.Speech.Synthesis.SpeechSynthesizer> can raise the following events:</span></span>  
  
-   <span data-ttu-id="9a4f8-337"><xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged>.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-337"><xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged>.</span></span> <span data-ttu-id="9a4f8-338">Se genera cuando cambia el estado de habla del sintetizador.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-338">Raised when the speaking state of the synthesizer changes.</span></span>  
  
-   <span data-ttu-id="9a4f8-339"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-339"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>.</span></span> <span data-ttu-id="9a4f8-340">Se genera cuando el sintetizador comience a generar la voz.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-340">Raised when the synthesizer begins generating speech.</span></span>  
  
-   <span data-ttu-id="9a4f8-341"><xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-341"><xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>.</span></span> <span data-ttu-id="9a4f8-342">Se genera cada vez que el sintetizador alcanza una letra o una combinación de letras que constituyen un sonido discreto de voz en un idioma.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-342">Raised each time the synthesizer reaches a letter or combination of letters that constitute a discreet sound of speech in a language.</span></span>  
  
-   <span data-ttu-id="9a4f8-343"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-343"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>.</span></span> <span data-ttu-id="9a4f8-344">Se genera cada vez que el sintetizador completa hablando de una palabra.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-344">Raised each time the synthesizer completes speaking a word.</span></span>  
  
-   <span data-ttu-id="9a4f8-345"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-345"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>.</span></span> <span data-ttu-id="9a4f8-346">Genera cada vez salida de voz requiere un cambio en la posición de la boca o los músculos faciales utilizados para generar voz.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-346">Raised each time spoken output requires a change in the position of the mouth or the facial muscles used to produce speech.</span></span>  
  
-   <span data-ttu-id="9a4f8-347"><xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-347"><xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>.</span></span> <span data-ttu-id="9a4f8-348">Se genera cuando el sintetizador encuentra un marcador en un símbolo del sistema.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-348">Raised when the synthesizer encounters a bookmark in a prompt.</span></span>  
  
-   <span data-ttu-id="9a4f8-349"><xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-349"><xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>.</span></span> <span data-ttu-id="9a4f8-350">Se genera cuando cambia el tono de voz para el sintetizador.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-350">Raised when the speaking voice for the synthesizer changes.</span></span>  
  
-   <span data-ttu-id="9a4f8-351"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted>.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-351"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted>.</span></span> <span data-ttu-id="9a4f8-352">Se genera cuando termina el sintetizador un <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> operación.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-352">Raised when the synthesizer finishes a <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> operation.</span></span>  
  
 <span data-ttu-id="9a4f8-353">Si la aplicación no necesita realizar tareas mientras habla, puede usar el <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> métodos o <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> método para generar voz de forma sincrónica.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-353">If your application does not need to perform tasks while speaking, you can use the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> methods or the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> method to generate speech synchronously.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.StateChanged" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange" />
      </Docs>
    </MemberGroup>
    <Member MemberName="SpeakAsync">
      <MemberSignature Language="C#" Value="public void SpeakAsync (System.Speech.Synthesis.Prompt prompt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SpeakAsync(class System.Speech.Synthesis.Prompt prompt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync(System.Speech.Synthesis.Prompt)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SpeakAsync(System::Speech::Synthesis::Prompt ^ prompt);" />
      <MemberSignature Language="F#" Value="member this.SpeakAsync : System.Speech.Synthesis.Prompt -&gt; unit" Usage="speechSynthesizer.SpeakAsync prompt" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prompt" Type="System.Speech.Synthesis.Prompt" />
      </Parameters>
      <Docs>
        <param name="prompt"><span data-ttu-id="9a4f8-354">El contenido para hablar.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-354">The content to speak.</span></span></param>
        <summary><span data-ttu-id="9a4f8-355">De forma asincrónica habla el contenido de un objeto <see cref="T:System.Speech.Synthesis.Prompt" />.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-355">Asynchronously speaks the contents of a <see cref="T:System.Speech.Synthesis.Prompt" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a4f8-356">Puede cancelar la lectura asincrónica de un símbolo del sistema con el <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel%2A> o <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll%2A> método.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-356">You can cancel the asynchronous speaking of a prompt with the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel%2A> or the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll%2A> method.</span></span>  
  
 <span data-ttu-id="9a4f8-357">Para comunicar de forma sincrónica el contenido de un <xref:System.Speech.Synthesis.Prompt> de objeto, utilice <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-357">To synchronously speak the contents of a <xref:System.Speech.Synthesis.Prompt> object, use <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9a4f8-358">En el ejemplo siguiente se crea un <xref:System.Speech.Synthesis.Prompt> cadena en un objeto y el objeto se pasa como argumento a la <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> método.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-358">The following example creates a <xref:System.Speech.Synthesis.Prompt> object from a string and passes the object as an argument to the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> method.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Create a prompt from a string.  
      Prompt color = new Prompt("What is your favorite color?");  
  
      // Speak the contents of the prompt asynchronously.  
      synth.SpeakAsync(color);  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="SpeakAsync">
      <MemberSignature Language="C#" Value="public System.Speech.Synthesis.Prompt SpeakAsync (System.Speech.Synthesis.PromptBuilder promptBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Speech.Synthesis.Prompt SpeakAsync(class System.Speech.Synthesis.PromptBuilder promptBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync(System.Speech.Synthesis.PromptBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Speech::Synthesis::Prompt ^ SpeakAsync(System::Speech::Synthesis::PromptBuilder ^ promptBuilder);" />
      <MemberSignature Language="F#" Value="member this.SpeakAsync : System.Speech.Synthesis.PromptBuilder -&gt; System.Speech.Synthesis.Prompt" Usage="speechSynthesizer.SpeakAsync promptBuilder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.Prompt</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="promptBuilder" Type="System.Speech.Synthesis.PromptBuilder" />
      </Parameters>
      <Docs>
        <param name="promptBuilder"><span data-ttu-id="9a4f8-359">El contenido para hablar.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-359">The content to speak.</span></span></param>
        <summary><span data-ttu-id="9a4f8-360">De forma asincrónica habla el contenido de un objeto <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-360">Asynchronously speaks the contents of a <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
        <returns><span data-ttu-id="9a4f8-361">Devuelve el objeto que contiene el contenido para hablar.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-361">Returns the object that contains the content to speak.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a4f8-362">Para comunicar de forma sincrónica el contenido de un <xref:System.Speech.Synthesis.PromptBuilder> de objeto, utilice <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-362">To synchronously speak the contents of a <xref:System.Speech.Synthesis.PromptBuilder> object, use <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9a4f8-363">En el ejemplo siguiente se crea un <xref:System.Speech.Synthesis.PromptBuilder> cadena en un objeto y el objeto se pasa como argumento a la <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> método.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-363">The following example creates a <xref:System.Speech.Synthesis.PromptBuilder> object from a string and passes the object as an argument to the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> method.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Create a PromptBuilder object and append a text string.  
      PromptBuilder song = new PromptBuilder();  
      song.AppendText("Say the name of the song you want to hear");  
  
      // Speak the contents of the prompt asynchronously.  
      synth.SpeakAsync(song);  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="SpeakAsync">
      <MemberSignature Language="C#" Value="public System.Speech.Synthesis.Prompt SpeakAsync (string textToSpeak);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Speech.Synthesis.Prompt SpeakAsync(string textToSpeak) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SpeakAsync (textToSpeak As String) As Prompt" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Speech::Synthesis::Prompt ^ SpeakAsync(System::String ^ textToSpeak);" />
      <MemberSignature Language="F#" Value="member this.SpeakAsync : string -&gt; System.Speech.Synthesis.Prompt" Usage="speechSynthesizer.SpeakAsync textToSpeak" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.Prompt</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textToSpeak" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textToSpeak"><span data-ttu-id="9a4f8-364">Texto para hablar.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-364">The text to speak.</span></span></param>
        <summary><span data-ttu-id="9a4f8-365">De forma asincrónica habla el contenido de una cadena.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-365">Asynchronously speaks the contents of a string.</span></span></summary>
        <returns><span data-ttu-id="9a4f8-366">Devuelve el objeto que contiene el contenido para hablar.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-366">Returns the object that contains the content to speak.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a4f8-367">Para hablar de forma asincrónica una cadena que contiene el marcado SSML, utilice el <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> método.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-367">To asynchronously speak a string that contains SSML markup, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> method.</span></span> <span data-ttu-id="9a4f8-368">Para comunicar sincrónicamente el contenido de una cadena, utilice el <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> método.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-368">To synchronously speak the contents of a string, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> method.</span></span> <span data-ttu-id="9a4f8-369">Puede cancelar la lectura asincrónica de un símbolo del sistema con el <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel%2A> o <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll%2A> método.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-369">You can cancel the asynchronous speaking of a prompt with the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel%2A> or the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9a4f8-370">Como se muestra en el ejemplo siguiente, la <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> método proporciona los medios más sencillos para generar voz de salida de forma asincrónica.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-370">As shown in the following example, the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> method provides the simplest means to generate speech output asynchronously.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Speak a string asynchronously.  
      synth.SpeakAsync("What is your favorite color?");  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Speech.Synthesis.SpeechSynthesizer.Speak" />
      </Docs>
    </Member>
    <Member MemberName="SpeakAsyncCancel">
      <MemberSignature Language="C#" Value="public void SpeakAsyncCancel (System.Speech.Synthesis.Prompt prompt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SpeakAsyncCancel(class System.Speech.Synthesis.Prompt prompt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel(System.Speech.Synthesis.Prompt)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SpeakAsyncCancel(System::Speech::Synthesis::Prompt ^ prompt);" />
      <MemberSignature Language="F#" Value="member this.SpeakAsyncCancel : System.Speech.Synthesis.Prompt -&gt; unit" Usage="speechSynthesizer.SpeakAsyncCancel prompt" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prompt" Type="System.Speech.Synthesis.Prompt" />
      </Parameters>
      <Docs>
        <param name="prompt"><span data-ttu-id="9a4f8-371">El contenido para el que se va a cancelar una operación de habla.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-371">The content for which to cancel a speak operation.</span></span></param>
        <summary><span data-ttu-id="9a4f8-372">Cancela la operación asincrónica de síntesis para un mensaje en cola.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-372">Cancels the asynchronous synthesis operation for a queued prompt.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a4f8-373">También puede usar este método para cancelar una asincrónica habla de la operación para lo siguiente:</span><span class="sxs-lookup"><span data-stu-id="9a4f8-373">You can also use this method to cancel an asynchronous speak operation for the following:</span></span>  
  
-   <span data-ttu-id="9a4f8-374">El contenido de un <xref:System.String> especificado por un <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-374">The contents of a <xref:System.String> specified by a <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=nameWithType> method.</span></span>  
  
-   <span data-ttu-id="9a4f8-375">El contenido de un <xref:System.Speech.Synthesis.PromptBuilder> especificado por un <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-375">The contents of a <xref:System.Speech.Synthesis.PromptBuilder> specified by a <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=nameWithType> method.</span></span>  
  
-   <span data-ttu-id="9a4f8-376">El contenido de un <xref:System.String> que contiene SSML especificado por un <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> método.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-376">The contents of a <xref:System.String> containing SSML specified by a <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> method.</span></span>  
  
 <span data-ttu-id="9a4f8-377">Cuando se llama a <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=nameWithType>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=nameWithType>, o <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A>, System.Speech crea un <xref:System.Speech.Synthesis.Prompt> objeto y lo rellena con el contenido del parámetro del método y devuelve el <xref:System.Speech.Synthesis.Prompt> objeto.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-377">When you call <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=nameWithType>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=nameWithType>, or <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A>, System.Speech creates a <xref:System.Speech.Synthesis.Prompt> object and populates it with the contents of the method's parameter, and returns the <xref:System.Speech.Synthesis.Prompt> object.</span></span> <span data-ttu-id="9a4f8-378">Si mantiene una copia de devuelto <xref:System.Speech.Synthesis.Prompt>, puede pasar en <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel%2A> Cancelar habla el contenido especificado en un <xref:System.String> o un <xref:System.Speech.Synthesis.PromptBuilder> objeto.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-378">If you retain a copy of the returned <xref:System.Speech.Synthesis.Prompt>, you can pass it into <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel%2A> to cancel speaking content specified in a <xref:System.String> or a <xref:System.Speech.Synthesis.PromptBuilder> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="SpeakAsyncCancelAll">
      <MemberSignature Language="C#" Value="public void SpeakAsyncCancelAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SpeakAsyncCancelAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub SpeakAsyncCancelAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SpeakAsyncCancelAll();" />
      <MemberSignature Language="F#" Value="member this.SpeakAsyncCancelAll : unit -&gt; unit" Usage="speechSynthesizer.SpeakAsyncCancelAll " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9a4f8-379">Cancela todas las operaciones de síntesis de voz asincrónicas que hay en cola.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-379">Cancels all queued, asynchronous, speech synthesis operations.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9a4f8-380">En el ejemplo siguiente se muestra un uso de <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll%2A> para cancelar la lectura asincrónica de un símbolo del sistema, por lo que se puede hablar un nuevo símbolo del sistema.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-380">The following example show a use of <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll%2A> to cancel the asynchronous speaking of a prompt, so that a new prompt can be spoken.</span></span> <span data-ttu-id="9a4f8-381">Tenga en cuenta que el <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> evento desencadena cuando una <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> se ha cancelado la operación.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-381">Note that the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> event fires when a <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> operation is cancelled.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
using System.Threading;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Subscribe to the StateChanged event.  
      synth.StateChanged += new EventHandler<StateChangedEventArgs>(synth_StateChanged);  
  
      // Subscribe to the SpeakProgress event.  
      synth.SpeakProgress += new EventHandler<SpeakProgressEventArgs>(synth_SpeakProgress);  
  
      // Subscribe to the SpeakCompleted event.  
      synth.SpeakCompleted += new EventHandler<SpeakCompletedEventArgs>(synth_SpeakCompleted);  
  
      // Begin speaking a text string asynchronously.  
      synth.SpeakAsync("Speech is an effective and natural way for people to interact with applications, " +  
        "complementing or even replacing the use of mice, keyboards, controllers, and gestures.");  
  
      // Speak for four seconds.  
      Thread.Sleep(4000);  
  
      // Cancel the SpeakAsync operation and wait one second.  
      synth.SpeakAsyncCancelAll();  
      Thread.Sleep(1000);  
  
      // Speak a new text string.  
      synth.Speak("An urgent email message has arrived. Do you want to hear it?");  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  
    // Write to the console when the SpeakAsync operation has been cancelled.  
    static void synth_SpeakCompleted(object sender, SpeakCompletedEventArgs e)  
    {  
      Console.WriteLine("\nThe SpeakAsync operation was cancelled!!");  
    }  
  
    // When it changes, write the state of the SpeechSynthesizer to the console.  
    static void synth_StateChanged(object sender, StateChangedEventArgs e)  
    {  
      Console.WriteLine("\nSynthesizer State: {0}    Previous State: {1}\n", e.State, e.PreviousState);  
    }  
  
    // Write the text being spoken by the SpeechSynthesizer to the console.  
    static void synth_SpeakProgress(object sender, SpeakProgressEventArgs e)  
    {  
      Console.WriteLine(e.Text);  
    }      
  }    
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="SpeakCompleted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Speech.Synthesis.SpeakCompletedEventArgs&gt; SpeakCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Speech.Synthesis.SpeakCompletedEventArgs&gt; SpeakCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SpeakCompleted As EventHandler(Of SpeakCompletedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Speech::Synthesis::SpeakCompletedEventArgs ^&gt; ^ SpeakCompleted;" />
      <MemberSignature Language="F#" Value="member this.SpeakCompleted : EventHandler&lt;System.Speech.Synthesis.SpeakCompletedEventArgs&gt; " Usage="member this.SpeakCompleted : System.EventHandler&lt;System.Speech.Synthesis.SpeakCompletedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Speech.Synthesis.SpeakCompletedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9a4f8-382">Se genera cuando <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> termina de leer un mensaje.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-382">Raised when the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> completes the speaking of a prompt.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a4f8-383">El <xref:System.Speech.Synthesis.SpeechSynthesizer> provoca la <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> eventos en la finalización de cualquiera de los <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> o <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-383">The <xref:System.Speech.Synthesis.SpeechSynthesizer> raises the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> event at the completion of any of the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> or  <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> methods.</span></span>  
  
 <span data-ttu-id="9a4f8-384">El <xref:System.Speech.Synthesis.SpeakCompletedEventArgs> clase no tiene ninguna propiedad y no devuelve datos desde el <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> eventos.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-384">The <xref:System.Speech.Synthesis.SpeakCompletedEventArgs> class has no properties, and does not return data from the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> event.</span></span> <span data-ttu-id="9a4f8-385">Se proporciona para habilitar los autores de aplicaciones escribir controladores de eventos para el <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> eventos.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-385">It is provided to enable application authors to write event handlers for the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Synthesis.SpeakCompletedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="SpeakProgress">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Speech.Synthesis.SpeakProgressEventArgs&gt; SpeakProgress;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Speech.Synthesis.SpeakProgressEventArgs&gt; SpeakProgress" />
      <MemberSignature Language="DocId" Value="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SpeakProgress As EventHandler(Of SpeakProgressEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Speech::Synthesis::SpeakProgressEventArgs ^&gt; ^ SpeakProgress;" />
      <MemberSignature Language="F#" Value="member this.SpeakProgress : EventHandler&lt;System.Speech.Synthesis.SpeakProgressEventArgs&gt; " Usage="member this.SpeakProgress : System.EventHandler&lt;System.Speech.Synthesis.SpeakProgressEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Speech.Synthesis.SpeakProgressEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9a4f8-386">Se genera después de que <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> hable cada palabra concreta de un mensaje.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-386">Raised after the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> speaks each individual word of a prompt.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a4f8-387">El <xref:System.Speech.Synthesis.SpeechSynthesizer> genera este evento para cada palabra nueva que habla en un símbolo del sistema mediante cualquiera de los <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>, o <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-387">The <xref:System.Speech.Synthesis.SpeechSynthesizer> raises this event for each new word that it speaks in a prompt using any of the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>, or <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> methods.</span></span> <span data-ttu-id="9a4f8-388">Para un ejemplo y obtener más información acerca de los datos asociados al evento, vea <xref:System.Speech.Synthesis.SpeakProgressEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-388">For an example and more information about data associated with the event, see <xref:System.Speech.Synthesis.SpeakProgressEventArgs>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="SpeakSsml">
      <MemberSignature Language="C#" Value="public void SpeakSsml (string textToSpeak);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SpeakSsml(string textToSpeak) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SpeakSsml (textToSpeak As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SpeakSsml(System::String ^ textToSpeak);" />
      <MemberSignature Language="F#" Value="member this.SpeakSsml : string -&gt; unit" Usage="speechSynthesizer.SpeakSsml textToSpeak" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textToSpeak" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textToSpeak"><span data-ttu-id="9a4f8-389">Cadena SSML para hablar.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-389">The SSML string to speak.</span></span></param>
        <summary><span data-ttu-id="9a4f8-390">De forma sincrónica habla un <see cref="T:System.String" /> que contiene el marcado SSML.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-390">Synchronously speaks a <see cref="T:System.String" /> that contains SSML markup.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a4f8-391">El contenido de la `textToSpeak` parámetro debe incluir un `speak` elemento y debe ajustarse a la [lenguaje de marcado de síntesis de voz (SSML) versión 1.0](https://go.microsoft.com/fwlink/?LinkId=201763).</span><span class="sxs-lookup"><span data-stu-id="9a4f8-391">The contents of the `textToSpeak` parameter must include a `speak` element and must conform to the [Speech Synthesis Markup Language (SSML) Version 1.0](https://go.microsoft.com/fwlink/?LinkId=201763).</span></span> <span data-ttu-id="9a4f8-392">Para obtener más información, consulte [referencia del lenguaje de marcado de síntesis de voz](https://msdn.microsoft.com/library/0c51279e-84d2-4f73-a924-8832039abf94).</span><span class="sxs-lookup"><span data-stu-id="9a4f8-392">For more information, see [Speech Synthesis Markup Language Reference](https://msdn.microsoft.com/library/0c51279e-84d2-4f73-a924-8832039abf94).</span></span>  
  
 <span data-ttu-id="9a4f8-393">Para hablar de forma asincrónica una cadena que contiene el marcado SSML, utilice el <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> método.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-393">To asynchronously speak a string that contains SSML markup, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> method.</span></span> <span data-ttu-id="9a4f8-394">Puede usar <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> para iniciar la lectura sincrónica de una cadena que no contiene el marcado SSML.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-394">You can use <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> to initiate the synchronous speaking of a string that does not contain SSML markup.</span></span>  
  
 <span data-ttu-id="9a4f8-395">Durante una llamada a este método, el <xref:System.Speech.Synthesis.SpeechSynthesizer> puede provocar los eventos siguientes:</span><span class="sxs-lookup"><span data-stu-id="9a4f8-395">During a call to this method, the <xref:System.Speech.Synthesis.SpeechSynthesizer> can raise the following events:</span></span>  
  
-   <span data-ttu-id="9a4f8-396"><xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged>.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-396"><xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged>.</span></span> <span data-ttu-id="9a4f8-397">Se genera cuando cambia el estado de habla del sintetizador.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-397">Raised when the speaking state of the synthesizer changes.</span></span>  
  
-   <span data-ttu-id="9a4f8-398"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-398"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>.</span></span> <span data-ttu-id="9a4f8-399">Se genera cuando el sintetizador comience a generar la voz.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-399">Raised when the synthesizer begins generating speech.</span></span>  
  
-   <span data-ttu-id="9a4f8-400"><xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-400"><xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>.</span></span> <span data-ttu-id="9a4f8-401">Se genera cada vez que el sintetizador alcanza una letra o una combinación de letras que constituyen un sonido discreto de voz en un idioma.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-401">Raised each time the synthesizer reaches a letter or combination of letters that constitute a discreet sound of speech in a language.</span></span>  
  
-   <span data-ttu-id="9a4f8-402"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-402"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>.</span></span> <span data-ttu-id="9a4f8-403">Se genera cada vez que el sintetizador completa hablando de una palabra.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-403">Raised each time the synthesizer completes speaking a word.</span></span>  
  
-   <span data-ttu-id="9a4f8-404"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-404"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>.</span></span> <span data-ttu-id="9a4f8-405">Genera cada vez salida de voz requiere un cambio en la posición de la boca o los músculos faciales utilizados para generar voz.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-405">Raised each time spoken output requires a change in the position of the mouth or the facial muscles used to produce speech.</span></span>  
  
-   <span data-ttu-id="9a4f8-406"><xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-406"><xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>.</span></span> <span data-ttu-id="9a4f8-407">Se genera cuando el sintetizador encuentra un marcador en un símbolo del sistema.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-407">Raised when the synthesizer encounters a bookmark in a prompt.</span></span>  
  
-   <span data-ttu-id="9a4f8-408"><xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-408"><xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>.</span></span> <span data-ttu-id="9a4f8-409">Se genera cuando cambia el tono de voz para el sintetizador.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-409">Raised when the speaking voice for the synthesizer changes.</span></span>  
  
 <span data-ttu-id="9a4f8-410">El <xref:System.Speech.Synthesis.SpeechSynthesizer> no provoca la <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> eventos mientras se procesaba la <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> método.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-410">The <xref:System.Speech.Synthesis.SpeechSynthesizer> does not raise the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> event while processing the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9a4f8-411">En el ejemplo siguiente se representa la fecha 1/29/2009, como una fecha, mes, día, orden de año.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-411">The following example renders the date 1/29/2009 as a date, in month, day, year order.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Build an SSML prompt in a string.  
      string str = "<speak version=\"1.0\"";  
      str += " xmlns=\"http://www.w3.org/2001/10/synthesis\"";  
      str += " xml:lang=\"en-US\">";  
      str += "<say-as type=\"date:mdy\"> 1/29/2009 </say-as>";  
      str += "</speak>";  
  
      // Speak the contents of the prompt synchronously.
      synth.SpeakSsml(str);  
  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="SpeakSsmlAsync">
      <MemberSignature Language="C#" Value="public System.Speech.Synthesis.Prompt SpeakSsmlAsync (string textToSpeak);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Speech.Synthesis.Prompt SpeakSsmlAsync(string textToSpeak) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SpeakSsmlAsync (textToSpeak As String) As Prompt" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Speech::Synthesis::Prompt ^ SpeakSsmlAsync(System::String ^ textToSpeak);" />
      <MemberSignature Language="F#" Value="member this.SpeakSsmlAsync : string -&gt; System.Speech.Synthesis.Prompt" Usage="speechSynthesizer.SpeakSsmlAsync textToSpeak" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.Prompt</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textToSpeak" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textToSpeak"><span data-ttu-id="9a4f8-412">El marcado de SMML para hablar.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-412">The SMML markup to speak.</span></span></param>
        <summary><span data-ttu-id="9a4f8-413">De forma asincrónica habla un <see cref="T:System.String" /> que contiene el marcado SSML.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-413">Asynchronously speaks a <see cref="T:System.String" /> that contains SSML markup.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a4f8-414">El contenido de la `textToSpeak` parámetro debe incluir un `speak` elemento y debe ajustarse a la [lenguaje de marcado de síntesis de voz (SSML) versión 1.0](https://go.microsoft.com/fwlink/?LinkId=201763).</span><span class="sxs-lookup"><span data-stu-id="9a4f8-414">The contents of the `textToSpeak` parameter must include a `speak` element and must conform to the [Speech Synthesis Markup Language (SSML) Version 1.0](https://go.microsoft.com/fwlink/?LinkId=201763).</span></span> <span data-ttu-id="9a4f8-415">Para obtener más información, consulte [referencia del lenguaje de marcado de síntesis de voz](https://msdn.microsoft.com/library/0c51279e-84d2-4f73-a924-8832039abf94).</span><span class="sxs-lookup"><span data-stu-id="9a4f8-415">For more information, see [Speech Synthesis Markup Language Reference](https://msdn.microsoft.com/library/0c51279e-84d2-4f73-a924-8832039abf94).</span></span>  
  
 <span data-ttu-id="9a4f8-416">Para hablar de forma sincrónica una cadena que contiene el marcado SSML, utilice el <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> método.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-416">To synchronously speak a string that contains SSML markup, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> method.</span></span> <span data-ttu-id="9a4f8-417">Puede usar <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> para iniciar la lectura asincrónica de una cadena que no contiene el marcado SSML.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-417">You can use <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> to initiate the asynchronous speaking of a string that does not contain SSML markup.</span></span>  
  
 <span data-ttu-id="9a4f8-418">Durante una llamada a este método, el <xref:System.Speech.Synthesis.SpeechSynthesizer> puede provocar los eventos siguientes:</span><span class="sxs-lookup"><span data-stu-id="9a4f8-418">During a call to this method, the <xref:System.Speech.Synthesis.SpeechSynthesizer> can raise the following events:</span></span>  
  
-   <span data-ttu-id="9a4f8-419"><xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged>.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-419"><xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged>.</span></span> <span data-ttu-id="9a4f8-420">Se genera cuando cambia el estado de habla del sintetizador.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-420">Raised when the speaking state of the synthesizer changes.</span></span>  
  
-   <span data-ttu-id="9a4f8-421"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-421"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>.</span></span> <span data-ttu-id="9a4f8-422">Se genera cuando el sintetizador comience a generar la voz.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-422">Raised when the synthesizer begins generating speech.</span></span>  
  
-   <span data-ttu-id="9a4f8-423"><xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-423"><xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>.</span></span> <span data-ttu-id="9a4f8-424">Se genera cada vez que el sintetizador alcanza una letra o una combinación de letras que constituyen un sonido discreto de voz en un idioma.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-424">Raised each time the synthesizer reaches a letter or combination of letters that constitute a discreet sound of speech in a language.</span></span>  
  
-   <span data-ttu-id="9a4f8-425"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-425"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>.</span></span> <span data-ttu-id="9a4f8-426">Se genera cada vez que el sintetizador completa hablando de una palabra.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-426">Raised each time the synthesizer completes speaking a word.</span></span>  
  
-   <span data-ttu-id="9a4f8-427"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-427"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>.</span></span> <span data-ttu-id="9a4f8-428">Genera cada vez salida de voz requiere un cambio en la posición de la boca o los músculos faciales utilizados para generar voz.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-428">Raised each time spoken output requires a change in the position of the mouth or the facial muscles used to produce speech.</span></span>  
  
-   <span data-ttu-id="9a4f8-429"><xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-429"><xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>.</span></span> <span data-ttu-id="9a4f8-430">Se genera cuando el sintetizador encuentra un marcador en un símbolo del sistema.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-430">Raised when the synthesizer encounters a bookmark in a prompt.</span></span>  
  
-   <span data-ttu-id="9a4f8-431"><xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-431"><xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>.</span></span> <span data-ttu-id="9a4f8-432">Se genera cuando cambia el tono de voz para el sintetizador.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-432">Raised when the speaking voice for the synthesizer changes.</span></span>  
  
-   <span data-ttu-id="9a4f8-433"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted>.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-433"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted>.</span></span> <span data-ttu-id="9a4f8-434">Se genera cuando el sintetizador termina el procesamiento de un <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> operación.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-434">Raised when the synthesizer finishes processing a <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> operation.</span></span>  
  
 <span data-ttu-id="9a4f8-435">Si la denegación de servicio de aplicación no necesita realizar tareas mientras habla, puede usar el <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> o <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> método para generar voz de forma sincrónica.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-435">If your application dos not need to perform tasks while speaking, you can use the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> or the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> method to generate speech synchronously.</span></span>  
  
   
  
## Examples  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Build an SSML prompt in a string.  
      string str = "<speak version=\"1.0\"";  
      str += " xmlns=\"http://www.w3.org/2001/10/synthesis\"";  
      str += " xml:lang=\"en-US\">";  
      str += "<say-as type=\"date:mdy\"> 1/29/2009 </say-as>";  
      str += "</speak>";  
  
      // Speak the contents of the prompt asynchronously.  
      synth.SpeakSsmlAsync(str);  
  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="SpeakStarted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Speech.Synthesis.SpeakStartedEventArgs&gt; SpeakStarted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Speech.Synthesis.SpeakStartedEventArgs&gt; SpeakStarted" />
      <MemberSignature Language="DocId" Value="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SpeakStarted As EventHandler(Of SpeakStartedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Speech::Synthesis::SpeakStartedEventArgs ^&gt; ^ SpeakStarted;" />
      <MemberSignature Language="F#" Value="member this.SpeakStarted : EventHandler&lt;System.Speech.Synthesis.SpeakStartedEventArgs&gt; " Usage="member this.SpeakStarted : System.EventHandler&lt;System.Speech.Synthesis.SpeakStartedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Speech.Synthesis.SpeakStartedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9a4f8-436">Se genera cuando <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> comienza a leer un mensaje.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-436">Raised when the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> begins the speaking of a prompt.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a4f8-437">El <xref:System.Speech.Synthesis.SpeechSynthesizer> provoca este evento cuando comienza a procesar un mensaje con cualquiera de los <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>, o <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-437">The <xref:System.Speech.Synthesis.SpeechSynthesizer> raises this event when it begins processing a prompt using any of the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>, or <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> methods.</span></span>  
  
 <span data-ttu-id="9a4f8-438">El <xref:System.Speech.Synthesis.SpeakStartedEventArgs> clase no tiene ninguna propiedad y no devuelve datos desde el <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted> eventos.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-438">The <xref:System.Speech.Synthesis.SpeakStartedEventArgs> class has no properties, and does not return data from the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted> event.</span></span> <span data-ttu-id="9a4f8-439">Se proporciona para habilitar los autores de aplicaciones escribir controladores de eventos para el <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted> eventos.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-439">It is provided to enable application authors to write event handlers for the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted> event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public System.Speech.Synthesis.SynthesizerState State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Speech.Synthesis.SynthesizerState State" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.SpeechSynthesizer.State" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property State As SynthesizerState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Speech::Synthesis::SynthesizerState State { System::Speech::Synthesis::SynthesizerState get(); };" />
      <MemberSignature Language="F#" Value="member this.State : System.Speech.Synthesis.SynthesizerState" Usage="System.Speech.Synthesis.SpeechSynthesizer.State" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.SynthesizerState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9a4f8-440">Obtiene el estado de habla actual del objeto <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" />.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-440">Gets the current speaking state of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span></span></summary>
        <value><span data-ttu-id="9a4f8-441">Devuelve el estado actual de habla del objeto <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" />.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-441">Returns the current speaking state of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a4f8-442">Para obtener el estado nueva de la <xref:System.Speech.Synthesis.SpeechSynthesizer> después del cambio, use el <xref:System.Speech.Synthesis.StateChangedEventArgs.State%2A> propiedad de la <xref:System.Speech.Synthesis.StateChangedEventArgs> clase.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-442">To get the new state of the <xref:System.Speech.Synthesis.SpeechSynthesizer> after it changes, use the <xref:System.Speech.Synthesis.StateChangedEventArgs.State%2A> property of the <xref:System.Speech.Synthesis.StateChangedEventArgs> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9a4f8-443">El ejemplo siguiente muestra el estado de la <xref:System.Speech.Synthesis.SpeechSynthesizer> antes, durante y después de hablar de un símbolo del sistema.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-443">The following example illustrates the state of the <xref:System.Speech.Synthesis.SpeechSynthesizer> before, during, and after speaking a prompt.</span></span>  
  
```csharp  
using System;  
using System.Threading;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer() ;  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Subscribe to the SpeakProgress event.         
      synth.SpeakProgress += new EventHandler<SpeakProgressEventArgs>(synth_SpeakProgress);  
  
      // Write the state of the SpeechSynthesizer to the console.  
      Console.WriteLine("Current Synthesizer state: " + synth.State + "\n");  
  
      // Speak a string asynchronously.  
      synth.SpeakAsync("What is your favorite color?");  
  
      // Write the state of the SpeechSynthesizer to the console while it is speaking.  
      Thread.Sleep(1000);  
      Console.WriteLine("\n - Current Synthesizer state: " + synth.State + " - \n");  
  
      // Write the state of the SpeechSynthesizer to the console after it is done speaking.  
      Thread.Sleep(2000);  
      Console.WriteLine("\nCurrent Synthesizer state: " + synth.State);  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  
    static void synth_SpeakProgress(object sender, SpeakProgressEventArgs e)  
    {  
      Console.WriteLine(e.Text);  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StateChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Speech.Synthesis.StateChangedEventArgs&gt; StateChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Speech.Synthesis.StateChangedEventArgs&gt; StateChanged" />
      <MemberSignature Language="DocId" Value="E:System.Speech.Synthesis.SpeechSynthesizer.StateChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StateChanged As EventHandler(Of StateChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Speech::Synthesis::StateChangedEventArgs ^&gt; ^ StateChanged;" />
      <MemberSignature Language="F#" Value="member this.StateChanged : EventHandler&lt;System.Speech.Synthesis.StateChangedEventArgs&gt; " Usage="member this.StateChanged : System.EventHandler&lt;System.Speech.Synthesis.StateChangedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Speech.Synthesis.StateChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9a4f8-444">Se genera cuando cambia el estado de <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" />.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-444">Raised when the state of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a4f8-445">El <xref:System.Speech.Synthesis.SpeechSynthesizer> provoca este evento cuando su hablando <xref:System.Speech.Synthesis.SpeechSynthesizer.State%2A> cambios.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-445">The <xref:System.Speech.Synthesis.SpeechSynthesizer> raises this event when its speaking <xref:System.Speech.Synthesis.SpeechSynthesizer.State%2A> changes.</span></span> <span data-ttu-id="9a4f8-446">Para un ejemplo y obtener más información acerca de los datos asociados al evento, vea <xref:System.Speech.Synthesis.StateChangedEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-446">For an example and more information about data associated with the event, see <xref:System.Speech.Synthesis.StateChangedEventArgs>.</span></span>  
  
 <span data-ttu-id="9a4f8-447">Para pausar y reanudar la síntesis de voz, utilice el <xref:System.Speech.Synthesis.SpeechSynthesizer.Pause%2A> y <xref:System.Speech.Synthesis.SpeechSynthesizer.Resume%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-447">To pause and resume speech synthesis, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.Pause%2A> and <xref:System.Speech.Synthesis.SpeechSynthesizer.Resume%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="VisemeReached">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Speech.Synthesis.VisemeReachedEventArgs&gt; VisemeReached;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Speech.Synthesis.VisemeReachedEventArgs&gt; VisemeReached" />
      <MemberSignature Language="DocId" Value="E:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event VisemeReached As EventHandler(Of VisemeReachedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Speech::Synthesis::VisemeReachedEventArgs ^&gt; ^ VisemeReached;" />
      <MemberSignature Language="F#" Value="member this.VisemeReached : EventHandler&lt;System.Speech.Synthesis.VisemeReachedEventArgs&gt; " Usage="member this.VisemeReached : System.EventHandler&lt;System.Speech.Synthesis.VisemeReachedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Speech.Synthesis.VisemeReachedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9a4f8-448">Se genera cuando se alcanza un visema.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-448">Raised when a viseme is reached.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a4f8-449">Un visema es la posición básica de la boca y de cara al pronunciar un fonema.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-449">A viseme is the basic position of the mouth and face when pronouncing a phoneme.</span></span> <span data-ttu-id="9a4f8-450">Visemes son representaciones visuales de los fonemas.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-450">Visemes are visual representations of phonemes.</span></span>  
  
 <span data-ttu-id="9a4f8-451">System.Speech admite 21 visemes para inglés de Estados Unidos, cada uno de los cuales corresponde a uno o varios fonemas.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-451">System.Speech supports 21 visemes for US English, each of which corresponds to one or more phonemes.</span></span>  <span data-ttu-id="9a4f8-452"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached> los eventos se producen cuando un fonema nuevo alcanzado tiene un visema correspondiente diferente que el fonema anterior alcanzado.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-452"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached> events are raised when a new phoneme reached has a different corresponding viseme than the previous phoneme reached.</span></span> <span data-ttu-id="9a4f8-453">Puesto que algunos visemes representan más de un fonema, un <xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached> evento no se genera si el fonema siguiente alcanzado corresponde al mismo visema como fonema anterior.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-453">Since some visemes represent more than one phoneme, a <xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached> event is not generated if the next phoneme reached corresponds to the same viseme as the previous phoneme.</span></span> <span data-ttu-id="9a4f8-454">Por ejemplo, para las palabras habladas "esta zona," un <xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached> evento se genera para la "s" en "this" y "z" en "zone".</span><span class="sxs-lookup"><span data-stu-id="9a4f8-454">For example, for the spoken words "this zone", a <xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached> event is raised for the "s" in "this" and the "z" in "zone".</span></span> <span data-ttu-id="9a4f8-455">Sin embargo, un <xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached> eventos no se generan para la "z" en "zone" porque se corresponde con el mismo visema como la "s" en "this".</span><span class="sxs-lookup"><span data-stu-id="9a4f8-455">However, a <xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached> event is not raised for the "z" in "zone" because it corresponds to the same viseme as the "s" in "this".</span></span>  
  
 <span data-ttu-id="9a4f8-456">La siguiente es una lista de los 21 fonemas SAPI fonema grupos y que corresponden a un visema en inglés de Estados Unidos.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-456">The following is a list of the 21 SAPI phonemes and phoneme groups that correspond to a viseme in US English.</span></span>  
  
|<span data-ttu-id="9a4f8-457">Visema</span><span class="sxs-lookup"><span data-stu-id="9a4f8-457">Viseme</span></span>|<span data-ttu-id="9a4f8-458">Phoneme(s)</span><span class="sxs-lookup"><span data-stu-id="9a4f8-458">Phoneme(s)</span></span>|  
|------------|------------------|  
|<span data-ttu-id="9a4f8-459">0</span><span class="sxs-lookup"><span data-stu-id="9a4f8-459">0</span></span>|<span data-ttu-id="9a4f8-460">Silencio</span><span class="sxs-lookup"><span data-stu-id="9a4f8-460">silence</span></span>|  
|<span data-ttu-id="9a4f8-461">1</span><span class="sxs-lookup"><span data-stu-id="9a4f8-461">1</span></span>|<span data-ttu-id="9a4f8-462">AE, ax, ah</span><span class="sxs-lookup"><span data-stu-id="9a4f8-462">ae, ax, ah</span></span>|  
|<span data-ttu-id="9a4f8-463">2</span><span class="sxs-lookup"><span data-stu-id="9a4f8-463">2</span></span>|<span data-ttu-id="9a4f8-464">aa</span><span class="sxs-lookup"><span data-stu-id="9a4f8-464">aa</span></span>|  
|<span data-ttu-id="9a4f8-465">3</span><span class="sxs-lookup"><span data-stu-id="9a4f8-465">3</span></span>|<span data-ttu-id="9a4f8-466">ao</span><span class="sxs-lookup"><span data-stu-id="9a4f8-466">ao</span></span>|  
|<span data-ttu-id="9a4f8-467">4</span><span class="sxs-lookup"><span data-stu-id="9a4f8-467">4</span></span>|<span data-ttu-id="9a4f8-468">EY, eh, eh</span><span class="sxs-lookup"><span data-stu-id="9a4f8-468">ey, eh, uh</span></span>|  
|<span data-ttu-id="9a4f8-469">5</span><span class="sxs-lookup"><span data-stu-id="9a4f8-469">5</span></span>|<span data-ttu-id="9a4f8-470">ER</span><span class="sxs-lookup"><span data-stu-id="9a4f8-470">er</span></span>|  
|<span data-ttu-id="9a4f8-471">6</span><span class="sxs-lookup"><span data-stu-id="9a4f8-471">6</span></span>|<span data-ttu-id="9a4f8-472">y, b o z, ih, ix</span><span class="sxs-lookup"><span data-stu-id="9a4f8-472">y, iy, ih, ix</span></span>|  
|<span data-ttu-id="9a4f8-473">7</span><span class="sxs-lookup"><span data-stu-id="9a4f8-473">7</span></span>|<span data-ttu-id="9a4f8-474">w, uw</span><span class="sxs-lookup"><span data-stu-id="9a4f8-474">w, uw</span></span>|  
|<span data-ttu-id="9a4f8-475">8</span><span class="sxs-lookup"><span data-stu-id="9a4f8-475">8</span></span>|<span data-ttu-id="9a4f8-476">ow</span><span class="sxs-lookup"><span data-stu-id="9a4f8-476">ow</span></span>|  
|<span data-ttu-id="9a4f8-477">9</span><span class="sxs-lookup"><span data-stu-id="9a4f8-477">9</span></span>|<span data-ttu-id="9a4f8-478">aw</span><span class="sxs-lookup"><span data-stu-id="9a4f8-478">aw</span></span>|  
|<span data-ttu-id="9a4f8-479">10</span><span class="sxs-lookup"><span data-stu-id="9a4f8-479">10</span></span>|<span data-ttu-id="9a4f8-480">oy</span><span class="sxs-lookup"><span data-stu-id="9a4f8-480">oy</span></span>|  
|<span data-ttu-id="9a4f8-481">11</span><span class="sxs-lookup"><span data-stu-id="9a4f8-481">11</span></span>|<span data-ttu-id="9a4f8-482">Ay</span><span class="sxs-lookup"><span data-stu-id="9a4f8-482">ay</span></span>|  
|<span data-ttu-id="9a4f8-483">12</span><span class="sxs-lookup"><span data-stu-id="9a4f8-483">12</span></span>|<span data-ttu-id="9a4f8-484">h</span><span class="sxs-lookup"><span data-stu-id="9a4f8-484">h</span></span>|  
|<span data-ttu-id="9a4f8-485">13</span><span class="sxs-lookup"><span data-stu-id="9a4f8-485">13</span></span>|<span data-ttu-id="9a4f8-486">r</span><span class="sxs-lookup"><span data-stu-id="9a4f8-486">r</span></span>|  
|<span data-ttu-id="9a4f8-487">14</span><span class="sxs-lookup"><span data-stu-id="9a4f8-487">14</span></span>|<span data-ttu-id="9a4f8-488">l</span><span class="sxs-lookup"><span data-stu-id="9a4f8-488">l</span></span>|  
|<span data-ttu-id="9a4f8-489">15</span><span class="sxs-lookup"><span data-stu-id="9a4f8-489">15</span></span>|<span data-ttu-id="9a4f8-490">s, z</span><span class="sxs-lookup"><span data-stu-id="9a4f8-490">s, z</span></span>|  
|<span data-ttu-id="9a4f8-491">16</span><span class="sxs-lookup"><span data-stu-id="9a4f8-491">16</span></span>|<span data-ttu-id="9a4f8-492">sh, ch, jh, zh</span><span class="sxs-lookup"><span data-stu-id="9a4f8-492">sh, ch, jh, zh</span></span>|  
|<span data-ttu-id="9a4f8-493">17</span><span class="sxs-lookup"><span data-stu-id="9a4f8-493">17</span></span>|<span data-ttu-id="9a4f8-494">th, dh</span><span class="sxs-lookup"><span data-stu-id="9a4f8-494">th, dh</span></span>|  
|<span data-ttu-id="9a4f8-495">18</span><span class="sxs-lookup"><span data-stu-id="9a4f8-495">18</span></span>|<span data-ttu-id="9a4f8-496">f, v</span><span class="sxs-lookup"><span data-stu-id="9a4f8-496">f, v</span></span>|  
|<span data-ttu-id="9a4f8-497">19</span><span class="sxs-lookup"><span data-stu-id="9a4f8-497">19</span></span>|<span data-ttu-id="9a4f8-498">d, t, n</span><span class="sxs-lookup"><span data-stu-id="9a4f8-498">d, t, n</span></span>|  
|<span data-ttu-id="9a4f8-499">20</span><span class="sxs-lookup"><span data-stu-id="9a4f8-499">20</span></span>|<span data-ttu-id="9a4f8-500">k, g, ng</span><span class="sxs-lookup"><span data-stu-id="9a4f8-500">k, g, ng</span></span>|  
|<span data-ttu-id="9a4f8-501">21</span><span class="sxs-lookup"><span data-stu-id="9a4f8-501">21</span></span>|<span data-ttu-id="9a4f8-502">p, b, m</span><span class="sxs-lookup"><span data-stu-id="9a4f8-502">p, b, m</span></span>|  
  
 <span data-ttu-id="9a4f8-503">Para obtener información acerca de los datos asociados con el `VisemeReached` eventos, consulte <xref:System.Speech.Synthesis.VisemeReachedEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-503">For information about data associated with the `VisemeReached` event, see <xref:System.Speech.Synthesis.VisemeReachedEventArgs>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="Voice">
      <MemberSignature Language="C#" Value="public System.Speech.Synthesis.VoiceInfo Voice { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Speech.Synthesis.VoiceInfo Voice" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.SpeechSynthesizer.Voice" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Voice As VoiceInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Speech::Synthesis::VoiceInfo ^ Voice { System::Speech::Synthesis::VoiceInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Voice : System.Speech.Synthesis.VoiceInfo" Usage="System.Speech.Synthesis.SpeechSynthesizer.Voice" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.VoiceInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9a4f8-504">Obtiene información acerca de la voz actual del objeto <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" />.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-504">Gets information about the current voice of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span></span></summary>
        <value><span data-ttu-id="9a4f8-505">Devuelve información acerca de la voz actual del objeto <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" />.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-505">Returns information about the current voice of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a4f8-506">Al inicializar un nuevo <xref:System.Speech.Synthesis.SpeechSynthesizer>, usa la voz del sistema de forma predeterminada.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-506">When you initialize a new <xref:System.Speech.Synthesis.SpeechSynthesizer>, it uses the default system voice.</span></span> <span data-ttu-id="9a4f8-507">Para configurar el <xref:System.Speech.Synthesis.SpeechSynthesizer> objetos para usar una de las voces de síntesis de voz instalado, use el <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> o <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> método.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-507">To configure the <xref:System.Speech.Synthesis.SpeechSynthesizer> object to use one of the installed speech synthesis voices, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> or <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> method.</span></span> <span data-ttu-id="9a4f8-508">Para obtener información sobre la que se instalan las voces, use el <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> método y el <xref:System.Speech.Synthesis.VoiceInfo> clase.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-508">To get information about which voices are installed, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method and the <xref:System.Speech.Synthesis.VoiceInfo> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9a4f8-509">En el ejemplo siguiente se inicializa una instancia de <xref:System.Speech.Synthesis.SpeechSynthesizer> y obtiene información acerca de la voz actual.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-509">The following example initializes an instance of <xref:System.Speech.Synthesis.SpeechSynthesizer> and gets information about the current voice.</span></span>  
  
```csharp  
using System;  
using System.IO;  
using System.Speech.Synthesis;  
using System.Speech.AudioFormat;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Get information about supported audio formats.  
        string AudioFormats = "";  
        foreach (SpeechAudioFormatInfo fmt in synth.Voice.SupportedAudioFormats)  
        {  
          AudioFormats += String.Format("{0}\n",  
          fmt.EncodingFormat.ToString());  
        }  
  
        // Write information about the voice to the console.  
        Console.WriteLine(" Name:          " + synth.Voice.Name);  
        Console.WriteLine(" Culture:       " + synth.Voice.Culture);  
        Console.WriteLine(" Age:           " + synth.Voice.Age);  
        Console.WriteLine(" Gender:        " + synth.Voice.Gender);  
        Console.WriteLine(" Description:   " + synth.Voice.Description);  
        Console.WriteLine(" ID:            " + synth.Voice.Id);  
        if (synth.Voice.SupportedAudioFormats.Count != 0)  
        {  
          Console.WriteLine(" Audio formats: " + AudioFormats);  
        }  
        else  
        {  
          Console.WriteLine(" No supported audio formats found");  
        }  
  
        // Get additional information about the voice.  
        string AdditionalInfo = "";  
        foreach (string key in synth.Voice.AdditionalInfo.Keys)  
        {  
          AdditionalInfo += String.Format("  {0}: {1}\n",  
            key, synth.Voice.AdditionalInfo[key]);  
        }  
  
        Console.WriteLine(" Additional Info - " + AdditionalInfo);  
        Console.WriteLine();  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender)" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange" />
      </Docs>
    </Member>
    <Member MemberName="VoiceChange">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Speech.Synthesis.VoiceChangeEventArgs&gt; VoiceChange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Speech.Synthesis.VoiceChangeEventArgs&gt; VoiceChange" />
      <MemberSignature Language="DocId" Value="E:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event VoiceChange As EventHandler(Of VoiceChangeEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Speech::Synthesis::VoiceChangeEventArgs ^&gt; ^ VoiceChange;" />
      <MemberSignature Language="F#" Value="member this.VoiceChange : EventHandler&lt;System.Speech.Synthesis.VoiceChangeEventArgs&gt; " Usage="member this.VoiceChange : System.EventHandler&lt;System.Speech.Synthesis.VoiceChangeEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Speech.Synthesis.VoiceChangeEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9a4f8-510">Se genera cuando cambia la voz de <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" />.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-510">Raised when the voice of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a4f8-511">Para un ejemplo y obtener información acerca de los datos asociados al evento, vea <xref:System.Speech.Synthesis.VoiceChangeEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-511">For an example and information about data associated with the event, see <xref:System.Speech.Synthesis.VoiceChangeEventArgs>.</span></span>  
  
 <span data-ttu-id="9a4f8-512">Puede cambiar la voz que el <xref:System.Speech.Synthesis.SpeechSynthesizer> usa con cualquiera de los <xref:System.Speech.Synthesis.PromptBuilder>del <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> métodos o <xref:System.Speech.Synthesis.SpeechSynthesizer>del <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> o <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-512">You can change the voice that the <xref:System.Speech.Synthesis.SpeechSynthesizer> uses with any of the <xref:System.Speech.Synthesis.PromptBuilder>'s <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> methods or the <xref:System.Speech.Synthesis.SpeechSynthesizer>'s <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> or <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="Volume">
      <MemberSignature Language="C#" Value="public int Volume { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Volume" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.SpeechSynthesizer.Volume" />
      <MemberSignature Language="VB.NET" Value="Public Property Volume As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Volume { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Volume : int with get, set" Usage="System.Speech.Synthesis.SpeechSynthesizer.Volume" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9a4f8-513">Obtiene o establece el volumen de salida del objeto <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" />.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-513">Get or sets the output volume of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span></span></summary>
        <value><span data-ttu-id="9a4f8-514">Devuelve el volumen de <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" />, de 0 a 100.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-514">Returns the volume of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" />, from 0 through 100.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9a4f8-515">En el ejemplo siguiente se establece el volumen de la <xref:System.Speech.Synthesis.SpeechSynthesizer>audio de salida para la voz sintetizada y el archivo WAV.</span><span class="sxs-lookup"><span data-stu-id="9a4f8-515">The following example sets the volume of the <xref:System.Speech.Synthesis.SpeechSynthesizer>'s audio output for the synthesized voice and the WAV file.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Set the volume of the SpeechSynthesizer's ouput.  
        synth.Volume = 60;  
  
        // Build a prompt containing recorded audio and synthesized speech.  
        PromptBuilder builder = new PromptBuilder(  
          new System.Globalization.CultureInfo("en-US"));  
        builder.AppendAudio("C:\\Test\\WelcomeToContosoRadio.wav");  
        builder.AppendText(  
          "The weather forecast for today is partly cloudy with some sun breaks.");  
  
        // Speak the prompt.  
        synth.Speak(builder);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
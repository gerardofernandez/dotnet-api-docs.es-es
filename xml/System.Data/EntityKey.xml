<Type Name="EntityKey" FullName="System.Data.EntityKey">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e8524ded681b3bba62f120a5c052ed678c51cd5a" /><Meta Name="ms.sourcegitcommit" Value="42a3c35677e9d87eeb503607ae50c9d39827d414" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="12/17/2018" /><Meta Name="ms.locfileid" Value="53463288" /></Metadata><TypeSignature Language="C#" Value="public sealed class EntityKey : IEquatable&lt;System.Data.EntityKey&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit EntityKey extends System.Object implements class System.IEquatable`1&lt;class System.Data.EntityKey&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Data.EntityKey" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EntityKey&#xA;Implements IEquatable(Of EntityKey)" />
  <TypeSignature Language="C++ CLI" Value="public ref class EntityKey sealed : IEquatable&lt;System::Data::EntityKey ^&gt;" />
  <TypeSignature Language="F#" Value="type EntityKey = class&#xA;    interface IEquatable&lt;EntityKey&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Data.EntityKey&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Diagnostics.DebuggerDisplay("{ConcatKeyValue()}")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.Serialization.DataContract(IsReference=true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="1f9ef-101">Proporciona una referencia duradera a un objeto que es una instancia de un tipo de entidad.</span><span class="sxs-lookup"><span data-stu-id="1f9ef-101">Provides a durable reference to an object that is an instance of an entity type.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f9ef-102">Los objetos <xref:System.Data.EntityKey> son inmutables; es decir, una vez construidos, no se pueden modificar.</span><span class="sxs-lookup"><span data-stu-id="1f9ef-102">The <xref:System.Data.EntityKey> objects are immutable; that is, after they are constructed they cannot be modified.</span></span>  
  
 <span data-ttu-id="1f9ef-103">Para obtener más información, consulte [trabajar con claves de entidad](https://msdn.microsoft.com/library/fe3f4206-d277-43a1-a72f-4e86fdf12b9f).</span><span class="sxs-lookup"><span data-stu-id="1f9ef-103">For more information, see [Working with Entity Keys](https://msdn.microsoft.com/library/fe3f4206-d277-43a1-a72f-4e86fdf12b9f).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f9ef-104">Estos ejemplos se basan en el [modelo AdventureWorks Sales](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span><span class="sxs-lookup"><span data-stu-id="1f9ef-104">These examples are based on the [AdventureWorks Sales Model](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="1f9ef-105">Los ejemplos muestran cómo crear y usar un <xref:System.Data.EntityKey>.</span><span class="sxs-lookup"><span data-stu-id="1f9ef-105">The examples show you how to create and use an <xref:System.Data.EntityKey>.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#EntityKeyClass_TryGetObjectByKey](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#entitykeyclass_trygetobjectbykey)]
 [!code-vb[DP ObjectServices Concepts#EntityKeyClass_TryGetObjectByKey](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#entitykeyclass_trygetobjectbykey)]  
  
 [!code-csharp[DP ObjectServices Concepts#AddObjectUsingKey](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#addobjectusingkey)]
 [!code-vb[DP ObjectServices Concepts#AddObjectUsingKey](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#addobjectusingkey)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1f9ef-106">Inicializa una nueva instancia de la clase <see cref="T:System.Data.EntityKey" />.</span><span class="sxs-lookup"><span data-stu-id="1f9ef-106">Initializes a new instance of the <see cref="T:System.Data.EntityKey" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntityKey ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityKey.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EntityKey();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1f9ef-107">Inicializa una nueva instancia de la clase <see cref="T:System.Data.EntityKey" />.</span><span class="sxs-lookup"><span data-stu-id="1f9ef-107">Initializes a new instance of the <see cref="T:System.Data.EntityKey" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntityKey (string qualifiedEntitySetName, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,object&gt;&gt; entityKeyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string qualifiedEntitySetName, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt;&gt; entityKeyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityKey.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (qualifiedEntitySetName As String, entityKeyValues As IEnumerable(Of KeyValuePair(Of String, Object)))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EntityKey(System::String ^ qualifiedEntitySetName, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt;&gt; ^ entityKeyValues);" />
      <MemberSignature Language="F#" Value="new System.Data.EntityKey : string * seq&lt;System.Collections.Generic.KeyValuePair&lt;string, obj&gt;&gt; -&gt; System.Data.EntityKey" Usage="new System.Data.EntityKey (qualifiedEntitySetName, entityKeyValues)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="qualifiedEntitySetName" Type="System.String" />
        <Parameter Name="entityKeyValues" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="qualifiedEntitySetName"><span data-ttu-id="1f9ef-108"><see cref="T:System.String" /> que es el nombre del conjunto de entidades calificado por el nombre del contenedor de entidades.</span><span class="sxs-lookup"><span data-stu-id="1f9ef-108">A <see cref="T:System.String" /> that is the entity set name qualified by the entity container name.</span></span></param>
        <param name="entityKeyValues"><span data-ttu-id="1f9ef-109">Colección <see cref="T:System.Collections.Generic.KeyValuePair" /> genérica.</span><span class="sxs-lookup"><span data-stu-id="1f9ef-109">A generic <see cref="T:System.Collections.Generic.KeyValuePair" /> collection.</span></span>  
  
<span data-ttu-id="1f9ef-110">Cada par clave-valor tiene un nombre de propiedad que corresponde a la clave, y el valor de esa propiedad que corresponde al valor.</span><span class="sxs-lookup"><span data-stu-id="1f9ef-110">Each key/value pair has a property name as the key and the value of that property as the value.</span></span> <span data-ttu-id="1f9ef-111">Debe haber un par para cada propiedad que forma parte de la <see cref="T:System.Data.EntityKey" />.</span><span class="sxs-lookup"><span data-stu-id="1f9ef-111">There should be one pair for each property that is part of the <see cref="T:System.Data.EntityKey" />.</span></span> <span data-ttu-id="1f9ef-112">El orden de los pares clave-valor no es importante, pero deben incluirse todas las propiedades de clave.</span><span class="sxs-lookup"><span data-stu-id="1f9ef-112">The order of the key/value pairs is not important, but each key property should be included.</span></span> <span data-ttu-id="1f9ef-113">Los nombres de propiedad son nombres sencillos que no están calificados con un nombre de tipo de entidad ni con el nombre de esquema.</span><span class="sxs-lookup"><span data-stu-id="1f9ef-113">The property names are simple names that are not qualified with an entity type name or the schema name.</span></span></param>
        <summary><span data-ttu-id="1f9ef-114">Inicializa una nueva instancia de la clase <see cref="T:System.Data.EntityKey" /> con un nombre de conjunto de entidades y una colección <see cref="T:System.Collections.Generic.KeyValuePair" /> genérica.</span><span class="sxs-lookup"><span data-stu-id="1f9ef-114">Initializes a new instance of the <see cref="T:System.Data.EntityKey" /> class with an entity set name and a generic <see cref="T:System.Collections.Generic.KeyValuePair" /> collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1f9ef-115">En este ejemplo se basa en el [modelo AdventureWorks Sales](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span><span class="sxs-lookup"><span data-stu-id="1f9ef-115">This example is based on the [AdventureWorks Sales Model](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="1f9ef-116">El ejemplo muestra cómo crear y usar un <xref:System.Data.EntityKey>.</span><span class="sxs-lookup"><span data-stu-id="1f9ef-116">The example shows you how to create and use an <xref:System.Data.EntityKey>.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#AddObjectUsingKey](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#addobjectusingkey)]
 [!code-vb[DP ObjectServices Concepts#AddObjectUsingKey](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#addobjectusingkey)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntityKey (string qualifiedEntitySetName, System.Collections.Generic.IEnumerable&lt;System.Data.EntityKeyMember&gt; entityKeyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string qualifiedEntitySetName, class System.Collections.Generic.IEnumerable`1&lt;class System.Data.EntityKeyMember&gt; entityKeyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityKey.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Data.EntityKeyMember})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (qualifiedEntitySetName As String, entityKeyValues As IEnumerable(Of EntityKeyMember))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EntityKey(System::String ^ qualifiedEntitySetName, System::Collections::Generic::IEnumerable&lt;System::Data::EntityKeyMember ^&gt; ^ entityKeyValues);" />
      <MemberSignature Language="F#" Value="new System.Data.EntityKey : string * seq&lt;System.Data.EntityKeyMember&gt; -&gt; System.Data.EntityKey" Usage="new System.Data.EntityKey (qualifiedEntitySetName, entityKeyValues)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="qualifiedEntitySetName" Type="System.String" />
        <Parameter Name="entityKeyValues" Type="System.Collections.Generic.IEnumerable&lt;System.Data.EntityKeyMember&gt;" />
      </Parameters>
      <Docs>
        <param name="qualifiedEntitySetName"><span data-ttu-id="1f9ef-117"><see cref="T:System.String" /> que es el nombre del conjunto de entidades calificado por el nombre del contenedor de entidades.</span><span class="sxs-lookup"><span data-stu-id="1f9ef-117">A <see cref="T:System.String" /> that is the entity set name qualified by the entity container name.</span></span></param>
        <param name="entityKeyValues"><span data-ttu-id="1f9ef-118">Colección <see cref="T:System.Collections.Generic.IEnumerable`1" /> de objetos <see cref="T:System.Data.EntityKeyMember" /> con la que se va a inicializar la clave.</span><span class="sxs-lookup"><span data-stu-id="1f9ef-118">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> collection of <see cref="T:System.Data.EntityKeyMember" /> objects with which to initialize the key.</span></span></param>
        <summary><span data-ttu-id="1f9ef-119">Inicializa una nueva instancia de la clase <see cref="T:System.Data.EntityKey" /> con un nombre de conjunto de entidades y una colección <see cref="T:System.Collections.Generic.IEnumerable`1" /> de objetos <see cref="T:System.Data.EntityKeyMember" />.</span><span class="sxs-lookup"><span data-stu-id="1f9ef-119">Initializes a new instance of the <see cref="T:System.Data.EntityKey" /> class with an entity set name and an <see cref="T:System.Collections.Generic.IEnumerable`1" /> collection of <see cref="T:System.Data.EntityKeyMember" /> objects.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntityKey (string qualifiedEntitySetName, string keyName, object keyValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string qualifiedEntitySetName, string keyName, object keyValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityKey.#ctor(System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (qualifiedEntitySetName As String, keyName As String, keyValue As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EntityKey(System::String ^ qualifiedEntitySetName, System::String ^ keyName, System::Object ^ keyValue);" />
      <MemberSignature Language="F#" Value="new System.Data.EntityKey : string * string * obj -&gt; System.Data.EntityKey" Usage="new System.Data.EntityKey (qualifiedEntitySetName, keyName, keyValue)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="qualifiedEntitySetName" Type="System.String" />
        <Parameter Name="keyName" Type="System.String" />
        <Parameter Name="keyValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="qualifiedEntitySetName"><span data-ttu-id="1f9ef-120"><see cref="T:System.String" /> que es el nombre del conjunto de entidades calificado por el nombre del contenedor de entidades.</span><span class="sxs-lookup"><span data-stu-id="1f9ef-120">A <see cref="T:System.String" /> that is the entity set name qualified by the entity container name.</span></span></param>
        <param name="keyName"><span data-ttu-id="1f9ef-121"><see cref="T:System.String" /> que representa el nombre de la clave.</span><span class="sxs-lookup"><span data-stu-id="1f9ef-121">A <see cref="T:System.String" /> that is the name of the key.</span></span></param>
        <param name="keyValue"><span data-ttu-id="1f9ef-122"><see cref="T:System.Object" /> que representa el valor de la clave.</span><span class="sxs-lookup"><span data-stu-id="1f9ef-122">An <see cref="T:System.Object" /> that is the key value.</span></span></param>
        <summary><span data-ttu-id="1f9ef-123">Inicializa una nueva instancia de la clase <see cref="T:System.Data.EntityKey" /> con un nombre de conjunto de entidades y un par de nombre/valor de clave de entidad específico.</span><span class="sxs-lookup"><span data-stu-id="1f9ef-123">Initializes a new instance of the <see cref="T:System.Data.EntityKey" /> class with an entity set name and specific entity key pair.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1f9ef-124">En este ejemplo se basa en el [modelo AdventureWorks Sales](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span><span class="sxs-lookup"><span data-stu-id="1f9ef-124">This example is based on the [AdventureWorks Sales Model](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="1f9ef-125">El ejemplo muestra cómo crear y usar un <xref:System.Data.EntityKey>.</span><span class="sxs-lookup"><span data-stu-id="1f9ef-125">The example shows you how to create and use an <xref:System.Data.EntityKey>.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#AddObjectUsingKey](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#addobjectusingkey)]
 [!code-vb[DP ObjectServices Concepts#AddObjectUsingKey](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#addobjectusingkey)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EntityContainerName">
      <MemberSignature Language="C#" Value="public string EntityContainerName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EntityContainerName" />
      <MemberSignature Language="DocId" Value="P:System.Data.EntityKey.EntityContainerName" />
      <MemberSignature Language="VB.NET" Value="Public Property EntityContainerName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ EntityContainerName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EntityContainerName : string with get, set" Usage="System.Data.EntityKey.EntityContainerName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.Serialization.DataMember</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1f9ef-126">Obtiene o establece el nombre del contenedor de entidades.</span><span class="sxs-lookup"><span data-stu-id="1f9ef-126">Gets or sets the name of the entity container.</span></span></summary>
        <value><span data-ttu-id="1f9ef-127">Valor <see cref="T:System.String" /> que es el nombre del contenedor de entidades para la entidad a la que pertenece la <see cref="T:System.Data.EntityKey" />.</span><span class="sxs-lookup"><span data-stu-id="1f9ef-127">A <see cref="T:System.String" /> value that is the name of the entity container for the entity to which the <see cref="T:System.Data.EntityKey" /> belongs.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EntityKeyValues">
      <MemberSignature Language="C#" Value="public System.Data.EntityKeyMember[] EntityKeyValues { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.EntityKeyMember[] EntityKeyValues" />
      <MemberSignature Language="DocId" Value="P:System.Data.EntityKey.EntityKeyValues" />
      <MemberSignature Language="VB.NET" Value="Public Property EntityKeyValues As EntityKeyMember()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Data::EntityKeyMember ^&gt; ^ EntityKeyValues { cli::array &lt;System::Data::EntityKeyMember ^&gt; ^ get(); void set(cli::array &lt;System::Data::EntityKeyMember ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EntityKeyValues : System.Data.EntityKeyMember[] with get, set" Usage="System.Data.EntityKey.EntityKeyValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.Serialization.DataMember</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.EntityKeyMember[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1f9ef-128">Obtiene o establece los valores de clave asociados al objeto <see cref="T:System.Data.EntityKey" /> en cuestión.</span><span class="sxs-lookup"><span data-stu-id="1f9ef-128">Gets or sets the key values associated with this <see cref="T:System.Data.EntityKey" />.</span></span></summary>
        <value><span data-ttu-id="1f9ef-129"><see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> de valores de clave para esta <see cref="T:System.Data.EntityKey" />.</span><span class="sxs-lookup"><span data-stu-id="1f9ef-129">A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of key values for this <see cref="T:System.Data.EntityKey" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f9ef-130">La clase <xref:System.Data.EntityKey> contiene una copia de los valores que conforman la clave lógica especificada para este tipo de entidad.</span><span class="sxs-lookup"><span data-stu-id="1f9ef-130">The <xref:System.Data.EntityKey> class contains a copy of the values that make up the logical key that is specified for this type of entity.</span></span>  
  
 <span data-ttu-id="1f9ef-131">Cada uno de los miembros de la <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> tiene un nombre de propiedad y un valor en un <xref:System.Collections.Generic.KeyValuePair%602>, donde la clave es el nombre de la propiedad y el valor es el valor real de esa propiedad en el objeto.</span><span class="sxs-lookup"><span data-stu-id="1f9ef-131">The members of the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> each have a property name and a value in a <xref:System.Collections.Generic.KeyValuePair%602>, where the key is the property name and the value is the actual value of that property on the object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EntityNotValidKey">
      <MemberSignature Language="C#" Value="public static readonly System.Data.EntityKey EntityNotValidKey;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Data.EntityKey EntityNotValidKey" />
      <MemberSignature Language="DocId" Value="F:System.Data.EntityKey.EntityNotValidKey" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly EntityNotValidKey As EntityKey " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Data::EntityKey ^ EntityNotValidKey;" />
      <MemberSignature Language="F#" Value=" staticval mutable EntityNotValidKey : System.Data.EntityKey" Usage="System.Data.EntityKey.EntityNotValidKey" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.EntityKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1f9ef-132"><see cref="T:System.Data.EntityKey" /> simple que identifica una entidad que es el resultado de una operación [TREAT](~/docs/framework/data/adonet/ef/language-reference/treat-entity-sql.md) errónea.</span><span class="sxs-lookup"><span data-stu-id="1f9ef-132">A simple <see cref="T:System.Data.EntityKey" /> identifying an entity that resulted from a failed [TREAT](~/docs/framework/data/adonet/ef/language-reference/treat-entity-sql.md) operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f9ef-133">Hay varias maneras de obtener una entidad no válida.</span><span class="sxs-lookup"><span data-stu-id="1f9ef-133">There are various ways to get an invalid entity.</span></span> <span data-ttu-id="1f9ef-134">El escenario más común es cuando un [!INCLUDE[esql](~/includes/esql-md.md)] consulta utiliza la [tratar](~/docs/framework/data/adonet/ef/language-reference/treat-entity-sql.md) no coincide con el operador para interpretar una instancia de un tipo polimórfico como un tipo concreto y la instancia en cuestión.</span><span class="sxs-lookup"><span data-stu-id="1f9ef-134">The most common scenario is when an [!INCLUDE[esql](~/includes/esql-md.md)] query uses the [TREAT](~/docs/framework/data/adonet/ef/language-reference/treat-entity-sql.md) operator to interpret an instance of a polymorphic type as a particular type, and the instance in question does not match.</span></span> <span data-ttu-id="1f9ef-135">([Tratar](~/docs/framework/data/adonet/ef/language-reference/treat-entity-sql.md) es similar a C# `as` operador).</span><span class="sxs-lookup"><span data-stu-id="1f9ef-135">([TREAT](~/docs/framework/data/adonet/ef/language-reference/treat-entity-sql.md) is similar to the C# `as` operator).</span></span> <span data-ttu-id="1f9ef-136">En este caso, la consulta devuelve una entidad que no es válida, y la clave de entidad de la entidad resultante se establece en <xref:System.Data.EntityKey.EntityNotValidKey>.</span><span class="sxs-lookup"><span data-stu-id="1f9ef-136">In this case, the query returns an entity that is not valid, and the entity key of the resulting entity is set to <xref:System.Data.EntityKey.EntityNotValidKey>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EntitySetName">
      <MemberSignature Language="C#" Value="public string EntitySetName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EntitySetName" />
      <MemberSignature Language="DocId" Value="P:System.Data.EntityKey.EntitySetName" />
      <MemberSignature Language="VB.NET" Value="Public Property EntitySetName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ EntitySetName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EntitySetName : string with get, set" Usage="System.Data.EntityKey.EntitySetName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.Serialization.DataMember</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1f9ef-137">Obtiene o establece el nombre del conjunto de entidades.</span><span class="sxs-lookup"><span data-stu-id="1f9ef-137">Gets or sets the name of the entity set.</span></span></summary>
        <value><span data-ttu-id="1f9ef-138">Valor <see cref="T:System.String" /> que es el nombre del conjunto de entidades para la entidad a la que pertenece la <see cref="T:System.Data.EntityKey" />.</span><span class="sxs-lookup"><span data-stu-id="1f9ef-138">A <see cref="T:System.String" /> value that is the name of the entity set for the entity to which the <see cref="T:System.Data.EntityKey" /> belongs.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1f9ef-139">Devuelve un valor que indica si esta instancia es igual que un objeto especificado.</span><span class="sxs-lookup"><span data-stu-id="1f9ef-139">Returns a value that indicates whether this instance is equal to a specified object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Data.EntityKey other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class System.Data.EntityKey other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityKey.Equals(System.Data.EntityKey)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As EntityKey) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Data::EntityKey ^ other);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Data.EntityKey -&gt; bool" Usage="entityKey.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Data.EntityKey" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="1f9ef-140">Objeto <see cref="T:System.Data.EntityKey" /> que se va a comparar con esta instancia.</span><span class="sxs-lookup"><span data-stu-id="1f9ef-140">An <see cref="T:System.Data.EntityKey" /> object to compare with this instance.</span></span></param>
        <summary><span data-ttu-id="1f9ef-141">Devuelve un valor que indica si esta instancia es igual que una <see cref="T:System.Data.EntityKey" /> especificada.</span><span class="sxs-lookup"><span data-stu-id="1f9ef-141">Returns a value that indicates whether this instance is equal to a specified <see cref="T:System.Data.EntityKey" />.</span></span></summary>
        <returns><span data-ttu-id="1f9ef-142">Es <see langword="true" /> si esta instancia y <paramref name="other" /> tienen los mismos valores; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1f9ef-142"><see langword="true" /> if this instance and <paramref name="other" /> have equal values; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f9ef-143">Las claves temporales tienen una semántica de comparación distinta de la de las claves permanentes:</span><span class="sxs-lookup"><span data-stu-id="1f9ef-143">Temporary keys have different comparison semantics than permanent keys:</span></span>  
  
-   <span data-ttu-id="1f9ef-144">Las claves temporales usan la igualdad de las referencias.</span><span class="sxs-lookup"><span data-stu-id="1f9ef-144">Temporary keys use reference equality.</span></span> <span data-ttu-id="1f9ef-145">Es decir, dos referencias a la misma instancia temporal de <xref:System.Data.EntityKey> son iguales, pero ninguna otra instancia de <xref:System.Data.EntityKey> lo es.</span><span class="sxs-lookup"><span data-stu-id="1f9ef-145">That is, two references to the exact same temporary <xref:System.Data.EntityKey> instance are equal but no other <xref:System.Data.EntityKey> instances are equal.</span></span>  
  
-   <span data-ttu-id="1f9ef-146">Las claves permanentes determinan la igualdad en función de los valores de las propiedades de clave contenidas y del <xref:System.Data.Metadata.Edm.EntitySet>.</span><span class="sxs-lookup"><span data-stu-id="1f9ef-146">Permanent keys determine equality based on the values of the contained key properties and the <xref:System.Data.Metadata.Edm.EntitySet>.</span></span> <span data-ttu-id="1f9ef-147">Es decir, puede tener dos instancias de <xref:System.Data.EntityKey> independientes que serán iguales si sus conjuntos de entidades son los mismos y también lo son sus valores de clave.</span><span class="sxs-lookup"><span data-stu-id="1f9ef-147">That is, you can have two separate <xref:System.Data.EntityKey> instances that are equal if their entity sets are the same and their key values are equal.</span></span>  
  
 <span data-ttu-id="1f9ef-148">Además, las claves temporales no tienen ningún <xref:System.Data.Metadata.Edm.EntitySet> ni valores de clave, pero las claves permanentes sí.</span><span class="sxs-lookup"><span data-stu-id="1f9ef-148">In addition, temporary keys have no <xref:System.Data.Metadata.Edm.EntitySet> or key values, but permanent keys do.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityKey.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="entityKey.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="1f9ef-149"><see cref="T:System.Object" /> que se va a comparar con esta instancia.</span><span class="sxs-lookup"><span data-stu-id="1f9ef-149">An <see cref="T:System.Object" /> to compare with this instance.</span></span></param>
        <summary><span data-ttu-id="1f9ef-150">Devuelve un valor que indica si esta instancia es igual que un objeto especificado.</span><span class="sxs-lookup"><span data-stu-id="1f9ef-150">Returns a value that indicates whether this instance is equal to a specified object.</span></span></summary>
        <returns><span data-ttu-id="1f9ef-151">Es <see langword="true" /> si esta instancia y <paramref name="obj" /> tienen los mismos valores; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1f9ef-151"><see langword="true" /> if this instance and <paramref name="obj" /> have equal values; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f9ef-152">Las claves temporales tienen una semántica de comparación distinta de la de las claves permanentes:</span><span class="sxs-lookup"><span data-stu-id="1f9ef-152">Temporary keys have different comparison semantics than permanent keys:</span></span>  
  
-   <span data-ttu-id="1f9ef-153">Las claves temporales usan la igualdad de las referencias.</span><span class="sxs-lookup"><span data-stu-id="1f9ef-153">Temporary keys use reference equality.</span></span> <span data-ttu-id="1f9ef-154">Es decir, dos referencias a la misma instancia temporal de <xref:System.Data.EntityKey> son iguales, pero ninguna otra instancia de <xref:System.Data.EntityKey> lo es.</span><span class="sxs-lookup"><span data-stu-id="1f9ef-154">That is, two references to the exact same temporary <xref:System.Data.EntityKey> instance are equal but no other <xref:System.Data.EntityKey> instances are equal.</span></span>  
  
-   <span data-ttu-id="1f9ef-155">Las claves permanentes determinan la igualdad en función de los valores de las propiedades de clave contenidas y del <xref:System.Data.Metadata.Edm.EntitySet>.</span><span class="sxs-lookup"><span data-stu-id="1f9ef-155">Permanent keys determine equality based on the values of the contained key properties and the <xref:System.Data.Metadata.Edm.EntitySet>.</span></span> <span data-ttu-id="1f9ef-156">Es decir, puede tener dos instancias de <xref:System.Data.EntityKey> independientes que serán iguales si sus objetos <xref:System.Data.Metadata.Edm.EntitySet> son los mismos y también lo son sus valores de clave.</span><span class="sxs-lookup"><span data-stu-id="1f9ef-156">That is, you can have two separate <xref:System.Data.EntityKey> instances that are equal if their <xref:System.Data.Metadata.Edm.EntitySet> objects are the same and their key values are equal.</span></span>  
  
 <span data-ttu-id="1f9ef-157">Además, las claves temporales no tienen ningún <xref:System.Data.Metadata.Edm.EntitySet> ni valores de clave, pero las claves permanentes sí.</span><span class="sxs-lookup"><span data-stu-id="1f9ef-157">In addition, temporary keys have no <xref:System.Data.Metadata.Edm.EntitySet> or key values, but permanent keys do.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEntitySet">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.EntitySet GetEntitySet (System.Data.Metadata.Edm.MetadataWorkspace metadataWorkspace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Metadata.Edm.EntitySet GetEntitySet(class System.Data.Metadata.Edm.MetadataWorkspace metadataWorkspace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityKey.GetEntitySet(System.Data.Metadata.Edm.MetadataWorkspace)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Metadata::Edm::EntitySet ^ GetEntitySet(System::Data::Metadata::Edm::MetadataWorkspace ^ metadataWorkspace);" />
      <MemberSignature Language="F#" Value="member this.GetEntitySet : System.Data.Metadata.Edm.MetadataWorkspace -&gt; System.Data.Metadata.Edm.EntitySet" Usage="entityKey.GetEntitySet metadataWorkspace" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.EntitySet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadataWorkspace" Type="System.Data.Metadata.Edm.MetadataWorkspace" />
      </Parameters>
      <Docs>
        <param name="metadataWorkspace"><span data-ttu-id="1f9ef-158">Área de trabajo de metadatos que contiene la entidad.</span><span class="sxs-lookup"><span data-stu-id="1f9ef-158">The metadata workspace that contains the entity.</span></span></param>
        <summary><span data-ttu-id="1f9ef-159">Obtiene el conjunto de entidades para esta clave de entidad a partir del área de trabajo de metadatos especificada.</span><span class="sxs-lookup"><span data-stu-id="1f9ef-159">Gets the entity set for this entity key from the given metadata workspace.</span></span></summary>
        <returns><span data-ttu-id="1f9ef-160"><see cref="T:System.Data.Metadata.Edm.EntitySet" /> para la clave de entidad.</span><span class="sxs-lookup"><span data-stu-id="1f9ef-160">The <see cref="T:System.Data.Metadata.Edm.EntitySet" /> for the entity key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f9ef-161">La obtención de acceso al conjunto de entidades depende del nombre del contenedor de entidades y del nombre del conjunto de entidades de la clave.</span><span class="sxs-lookup"><span data-stu-id="1f9ef-161">The entity set is accessed based on the entity container name and entity set name of the key.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1f9ef-162">No se ha podido encontrar el conjunto de entidades en el área de trabajo de metadatos especificada.</span><span class="sxs-lookup"><span data-stu-id="1f9ef-162">The entity set could not be located in the specified metadata workspace.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityKey.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="entityKey.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1f9ef-163">Sirve como función hash para el objeto <see cref="T:System.Data.EntityKey" /> actual.</span><span class="sxs-lookup"><span data-stu-id="1f9ef-163">Serves as a hash function for the current <see cref="T:System.Data.EntityKey" /> object.</span></span> <span data-ttu-id="1f9ef-164">El método <see cref="M:System.Data.EntityKey.GetHashCode" /> se puede utilizar en algoritmos hash y estructuras de datos, como una tabla hash.</span><span class="sxs-lookup"><span data-stu-id="1f9ef-164"><see cref="M:System.Data.EntityKey.GetHashCode" /> is suitable for hashing algorithms and data structures such as a hash table.</span></span></summary>
        <returns><span data-ttu-id="1f9ef-165">Código hash para el objeto <see cref="T:System.Data.EntityKey" /> actual.</span><span class="sxs-lookup"><span data-stu-id="1f9ef-165">A hash code for the current <see cref="T:System.Data.EntityKey" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTemporary">
      <MemberSignature Language="C#" Value="public bool IsTemporary { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTemporary" />
      <MemberSignature Language="DocId" Value="P:System.Data.EntityKey.IsTemporary" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsTemporary As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsTemporary { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsTemporary : bool" Usage="System.Data.EntityKey.IsTemporary" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1f9ef-166">Obtiene un valor que indica si la <see cref="T:System.Data.EntityKey" /> es de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="1f9ef-166">Gets a value that indicates whether the <see cref="T:System.Data.EntityKey" /> is temporary.</span></span></summary>
        <value><span data-ttu-id="1f9ef-167">Es <see langword="true" /> si <see cref="T:System.Data.EntityKey" /> es temporal; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1f9ef-167"><see langword="true" /> if the <see cref="T:System.Data.EntityKey" /> is temporary; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f9ef-168">Cuando se crea una nueva entidad, [!INCLUDE[adonet_ef](~/includes/adonet-ef-md.md)] define la clave temporal y establece la propiedad <xref:System.Data.EntityKey.IsTemporary%2A> en `true`.</span><span class="sxs-lookup"><span data-stu-id="1f9ef-168">When a new entity is created, the [!INCLUDE[adonet_ef](~/includes/adonet-ef-md.md)] defines temporary key and sets the <xref:System.Data.EntityKey.IsTemporary%2A> property to `true`.</span></span> <span data-ttu-id="1f9ef-169">Cuando se llama a la <xref:System.Data.Objects.ObjectContext.SaveChanges%2A> método, el [!INCLUDE[adonet_ef](~/includes/adonet-ef-md.md)] asigna una clave permanente y establece el <xref:System.Data.EntityKey.IsTemporary%2A> propiedad `false`.</span><span class="sxs-lookup"><span data-stu-id="1f9ef-169">When you call the <xref:System.Data.Objects.ObjectContext.SaveChanges%2A> method, the [!INCLUDE[adonet_ef](~/includes/adonet-ef-md.md)] assigns a permanent key and sets the <xref:System.Data.EntityKey.IsTemporary%2A> property to `false`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1f9ef-170">El marco de trabajo es el que construye las claves temporales de manera automática; los usuarios no pueden construirlas directamente.</span><span class="sxs-lookup"><span data-stu-id="1f9ef-170">Temporary keys are constructed automatically by the framework; they cannot be constructed directly by a user.</span></span>  
  
 <span data-ttu-id="1f9ef-171">Las claves temporales tienen una semántica de comparación distinta de la de las claves permanentes:</span><span class="sxs-lookup"><span data-stu-id="1f9ef-171">Temporary keys have different comparison semantics than permanent keys:</span></span>  
  
-   <span data-ttu-id="1f9ef-172">Las claves temporales usan la igualdad de las referencias.</span><span class="sxs-lookup"><span data-stu-id="1f9ef-172">Temporary keys use reference equality.</span></span> <span data-ttu-id="1f9ef-173">Es decir, dos referencias a la misma instancia temporal de <xref:System.Data.EntityKey> son iguales, pero ninguna otra instancia de <xref:System.Data.EntityKey> lo es.</span><span class="sxs-lookup"><span data-stu-id="1f9ef-173">That is, two references to the exact same temporary <xref:System.Data.EntityKey> instance are equal but no other <xref:System.Data.EntityKey> instances are equal.</span></span>  
  
-   <span data-ttu-id="1f9ef-174">Las claves permanentes determinan la igualdad en función de los valores de las propiedades de clave contenidas y del <xref:System.Data.Metadata.Edm.EntitySet>.</span><span class="sxs-lookup"><span data-stu-id="1f9ef-174">Permanent keys determine equality based on the values of the contained key properties and the <xref:System.Data.Metadata.Edm.EntitySet>.</span></span> <span data-ttu-id="1f9ef-175">Es decir, puede tener dos instancias de <xref:System.Data.EntityKey> independientes que serán iguales si sus conjuntos de entidades son los mismos y también lo son sus valores de clave.</span><span class="sxs-lookup"><span data-stu-id="1f9ef-175">That is, you can have two separate <xref:System.Data.EntityKey> instances that are equal if their entity sets are the same and their key values are equal.</span></span>  
  
 <span data-ttu-id="1f9ef-176">Además, las claves temporales no tienen ningún <xref:System.Data.Metadata.Edm.EntitySet> ni valores de clave, pero las claves permanentes sí.</span><span class="sxs-lookup"><span data-stu-id="1f9ef-176">In addition, temporary keys have no <xref:System.Data.Metadata.Edm.EntitySet> or key values, but permanent keys do.</span></span>  
  
 <span data-ttu-id="1f9ef-177">Cuando se llama al método <xref:System.Data.Objects.ObjectStateEntry.AcceptChanges%2A> en una <xref:System.Data.Objects.ObjectStateEntry> de una entidad y la entidad pasa del estado <xref:System.Data.EntityState.Added> al estado <xref:System.Data.EntityState.Unchanged>, [!INCLUDE[adonet_ef](~/includes/adonet-ef-md.md)] calcula automáticamente una nueva clave permanente para la entidad y sincroniza todas las referencias de claves temporales.</span><span class="sxs-lookup"><span data-stu-id="1f9ef-177">When the <xref:System.Data.Objects.ObjectStateEntry.AcceptChanges%2A> method is called on an entity's <xref:System.Data.Objects.ObjectStateEntry> and the entity transitions from the <xref:System.Data.EntityState.Added> state to <xref:System.Data.EntityState.Unchanged> state, the [!INCLUDE[adonet_ef](~/includes/adonet-ef-md.md)] automatically computes a new permanent key for the entity and synchronizes all temporary key references.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NoEntitySetKey">
      <MemberSignature Language="C#" Value="public static readonly System.Data.EntityKey NoEntitySetKey;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Data.EntityKey NoEntitySetKey" />
      <MemberSignature Language="DocId" Value="F:System.Data.EntityKey.NoEntitySetKey" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly NoEntitySetKey As EntityKey " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Data::EntityKey ^ NoEntitySetKey;" />
      <MemberSignature Language="F#" Value=" staticval mutable NoEntitySetKey : System.Data.EntityKey" Usage="System.Data.EntityKey.NoEntitySetKey" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.EntityKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1f9ef-178"><see cref="T:System.Data.EntityKey" /> singleton por la que se identifica una entidad de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="1f9ef-178">A singleton <see cref="T:System.Data.EntityKey" /> by which a read-only entity is identified.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f9ef-179">Una entidad de solo lectura identifica una entidad que es válida en todos los sentidos, a excepción de que no está asociada a un conjunto de entidades real.</span><span class="sxs-lookup"><span data-stu-id="1f9ef-179">A read-only entity identifies an entity that is valid in every way, except that it is not associated with an actual entity set.</span></span> <span data-ttu-id="1f9ef-180">Esto se puede producir como parte del resultado de una consulta de [!INCLUDE[esql](~/includes/esql-md.md)] que construye y devuelve una instancia de una entidad especificada en el texto de la consulta (en contraposición a una entidad que se ha recuperado de una tabla de base de datos).</span><span class="sxs-lookup"><span data-stu-id="1f9ef-180">This can occur as part of the result of an [!INCLUDE[esql](~/includes/esql-md.md)] query that constructs and returns an entity instance specified within the text of the query (as opposed to an entity that was retrieved from a database table).</span></span> <span data-ttu-id="1f9ef-181">Una entidad que no tiene un conjunto de entidades no puede permanecer en la base de datos; es necesario que esté asociada a un conjunto de entidades.</span><span class="sxs-lookup"><span data-stu-id="1f9ef-181">An entity that does not have an entity set cannot be persisted to the database until it is associated with some entity set.</span></span> <span data-ttu-id="1f9ef-182">Por consiguiente, el materializador de objetos tratará este tipo de entidad como si se hubiera especificado la opción de combinación <xref:System.Data.Objects.MergeOption.NoTracking>, sin tener en cuenta la opción de combinación real especificada.</span><span class="sxs-lookup"><span data-stu-id="1f9ef-182">Therefore, the object materializer will treat this kind of entity as if the <xref:System.Data.Objects.MergeOption.NoTracking> merge option was specified, regardless of the actual merge option that was specified.</span></span> <span data-ttu-id="1f9ef-183">Se creará un objeto entidad, pero no se resolverá su identidad ni se agregará al administrador de estados como parte del proceso de materialización.</span><span class="sxs-lookup"><span data-stu-id="1f9ef-183">An entity object will be created, but its identity will not be resolved and it will not be added to the state manager as part of the materialization process.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDeserialized">
      <MemberSignature Language="C#" Value="public void OnDeserialized (System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OnDeserialized(valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityKey.OnDeserialized(System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnDeserialized (context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OnDeserialized(System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="member this.OnDeserialized : System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="entityKey.OnDeserialized context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.Serialization.OnDeserialized</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="1f9ef-184">Describe el origen y el destino de una secuencia serializada determinada y proporciona un contexto adicional definido por el llamador.</span><span class="sxs-lookup"><span data-stu-id="1f9ef-184">Describes the source and destination of a given serialized stream and provides an additional caller-defined context.</span></span></param>
        <summary><span data-ttu-id="1f9ef-185">método del asistente que se usa para deserializar una <see cref="T:System.Data.EntityKey" />.</span><span class="sxs-lookup"><span data-stu-id="1f9ef-185">Helper method that is used to deserialize an <see cref="T:System.Data.EntityKey" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f9ef-186">Servicios de objeto usa <xref:System.Data.EntityKey.OnDeserialized%2A> cuando deserializa una <xref:System.Data.EntityKey>.</span><span class="sxs-lookup"><span data-stu-id="1f9ef-186"><xref:System.Data.EntityKey.OnDeserialized%2A> is used by Object Services when deserializing an <xref:System.Data.EntityKey>.</span></span> <span data-ttu-id="1f9ef-187">Para obtener más información, consulte [serializar objetos](https://msdn.microsoft.com/library/06c77f9b-5b2e-4c78-b3e3-8c148ba0ea99).</span><span class="sxs-lookup"><span data-stu-id="1f9ef-187">For more information, see [Serializing Objects](https://msdn.microsoft.com/library/06c77f9b-5b2e-4c78-b3e3-8c148ba0ea99).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDeserializing">
      <MemberSignature Language="C#" Value="public void OnDeserializing (System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OnDeserializing(valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityKey.OnDeserializing(System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnDeserializing (context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OnDeserializing(System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="member this.OnDeserializing : System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="entityKey.OnDeserializing context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.Serialization.OnDeserializing</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="1f9ef-188">Describe el origen y el destino de una secuencia serializada determinada y proporciona un contexto adicional definido por el llamador.</span><span class="sxs-lookup"><span data-stu-id="1f9ef-188">Describes the source and destination of a given serialized stream, and provides an additional caller-defined context.</span></span></param>
        <summary><span data-ttu-id="1f9ef-189">método del asistente que se usa para deserializar una <see cref="T:System.Data.EntityKey" />.</span><span class="sxs-lookup"><span data-stu-id="1f9ef-189">Helper method that is used to deserialize an <see cref="T:System.Data.EntityKey" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f9ef-190">Servicios de objeto usa <xref:System.Data.EntityKey.OnDeserializing%2A> cuando deserializa una <xref:System.Data.EntityKey>.</span><span class="sxs-lookup"><span data-stu-id="1f9ef-190"><xref:System.Data.EntityKey.OnDeserializing%2A> is used by Object Services when deserializing an <xref:System.Data.EntityKey>.</span></span> <span data-ttu-id="1f9ef-191">Para obtener más información, consulte [serializar objetos](https://msdn.microsoft.com/library/06c77f9b-5b2e-4c78-b3e3-8c148ba0ea99).</span><span class="sxs-lookup"><span data-stu-id="1f9ef-191">For more information, see [Serializing Objects](https://msdn.microsoft.com/library/06c77f9b-5b2e-4c78-b3e3-8c148ba0ea99).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Data.EntityKey key1, System.Data.EntityKey key2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class System.Data.EntityKey key1, class System.Data.EntityKey key2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityKey.op_Equality(System.Data.EntityKey,System.Data.EntityKey)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (key1 As EntityKey, key2 As EntityKey) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Data::EntityKey ^ key1, System::Data::EntityKey ^ key2);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Data.EntityKey * System.Data.EntityKey -&gt; bool" Usage="key1 = key2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key1" Type="System.Data.EntityKey" />
        <Parameter Name="key2" Type="System.Data.EntityKey" />
      </Parameters>
      <Docs>
        <param name="key1"><span data-ttu-id="1f9ef-192"><see cref="T:System.Data.EntityKey" /> que se va comparar.</span><span class="sxs-lookup"><span data-stu-id="1f9ef-192">A <see cref="T:System.Data.EntityKey" /> to compare.</span></span></param>
        <param name="key2"><span data-ttu-id="1f9ef-193"><see cref="T:System.Data.EntityKey" /> que se va comparar.</span><span class="sxs-lookup"><span data-stu-id="1f9ef-193">A <see cref="T:System.Data.EntityKey" /> to compare.</span></span></param>
        <summary><span data-ttu-id="1f9ef-194">Compara dos objetos <see cref="T:System.Data.EntityKey" />.</span><span class="sxs-lookup"><span data-stu-id="1f9ef-194">Compares two <see cref="T:System.Data.EntityKey" /> objects.</span></span></summary>
        <returns><span data-ttu-id="1f9ef-195">Es <see langword="true" /> si los valores de <paramref name="key1" /> y <paramref name="key2" /> son iguales; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1f9ef-195"><see langword="true" /> if the <paramref name="key1" /> and <paramref name="key2" /> values are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f9ef-196">Las claves temporales tienen una semántica de comparación distinta de la de las claves permanentes:</span><span class="sxs-lookup"><span data-stu-id="1f9ef-196">Temporary keys have different comparison semantics than permanent keys:</span></span>  
  
-   <span data-ttu-id="1f9ef-197">Las claves temporales usan la igualdad de las referencias.</span><span class="sxs-lookup"><span data-stu-id="1f9ef-197">Temporary keys use reference equality.</span></span> <span data-ttu-id="1f9ef-198">Es decir, dos referencias a la misma instancia temporal de <xref:System.Data.EntityKey> son iguales, pero ninguna otra instancia de <xref:System.Data.EntityKey> lo es.</span><span class="sxs-lookup"><span data-stu-id="1f9ef-198">That is, two references to the exact same temporary <xref:System.Data.EntityKey> instance are equal but no other <xref:System.Data.EntityKey> instances are equal.</span></span>  
  
-   <span data-ttu-id="1f9ef-199">Las claves permanentes determinan la igualdad en función de los valores de las propiedades de clave contenidas y del <xref:System.Data.Metadata.Edm.EntitySet>.</span><span class="sxs-lookup"><span data-stu-id="1f9ef-199">Permanent keys determine equality based on the values of the contained key properties and the <xref:System.Data.Metadata.Edm.EntitySet>.</span></span> <span data-ttu-id="1f9ef-200">Es decir, puede tener dos instancias de <xref:System.Data.EntityKey> independientes que serán iguales si sus conjuntos de entidades son los mismos y también lo son sus valores de clave.</span><span class="sxs-lookup"><span data-stu-id="1f9ef-200">That is, you can have two separate <xref:System.Data.EntityKey> instances that are equal if their entity sets are the same and their key values are equal.</span></span>  
  
 <span data-ttu-id="1f9ef-201">Además, las claves temporales no tienen ningún <xref:System.Data.Metadata.Edm.EntitySet> ni valores de clave, pero las claves permanentes sí.</span><span class="sxs-lookup"><span data-stu-id="1f9ef-201">In addition, temporary keys have no <xref:System.Data.Metadata.Edm.EntitySet> or key values, but permanent keys do.</span></span>  
  
 <span data-ttu-id="1f9ef-202">Es el método equivalente para este operador <xref:System.Data.EntityKey.Equals%28System.Data.EntityKey%29?displayProperty=nameWithType></format>
        </span><span class="sxs-lookup"><span data-stu-id="1f9ef-202">The equivalent method for this operator is <xref:System.Data.EntityKey.Equals%28System.Data.EntityKey%29?displayProperty=nameWithType></format>
        </span></span></remarks>
      <span data-ttu-id="1f9ef-203"></Docs>
    </Member>
    <Member MemberName="op_Inequality"> <MemberSignature Language="C#" Value="public static bool op_Inequality (System.Data.EntityKey key1, System.Data.EntityKey key2);" /></span><span class="sxs-lookup"><span data-stu-id="1f9ef-203"></Docs>
    </Member>
    <Member MemberName="op_Inequality"> <MemberSignature Language="C#" Value="public static bool op_Inequality (System.Data.EntityKey key1, System.Data.EntityKey key2);" /></span></span>
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Data.EntityKey key1, class System.Data.EntityKey key2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityKey.op_Inequality(System.Data.EntityKey,System.Data.EntityKey)" />
      <span data-ttu-id="1f9ef-204"><MemberType>Método</MemberType> <AssemblyInfo> <AssemblyName>System.Data.Entity</AssemblyName> <AssemblyVersion>4.0.0.0</AssemblyVersion> </AssemblyInfo></span><span class="sxs-lookup"><span data-stu-id="1f9ef-204"><MemberType>Method</MemberType> <AssemblyInfo> <AssemblyName>System.Data.Entity</AssemblyName> <AssemblyVersion>4.0.0.0</AssemblyVersion> </AssemblyInfo></span></span>
      <span data-ttu-id="1f9ef-205"><ReturnValue> <ReturnType>System.Boolean</ReturnType> </ReturnValue></span><span class="sxs-lookup"><span data-stu-id="1f9ef-205"><ReturnValue> <ReturnType>System.Boolean</ReturnType> </ReturnValue></span></span>
      <span data-ttu-id="1f9ef-206"><Parameters> <Parameter Name="key1" Type="System.Data.EntityKey" /> <Parameter Name="key2" Type="System.Data.EntityKey" /> </Parameters></span><span class="sxs-lookup"><span data-stu-id="1f9ef-206"><Parameters> <Parameter Name="key1" Type="System.Data.EntityKey" /> <Parameter Name="key2" Type="System.Data.EntityKey" /> </Parameters></span></span>
      <Docs>
        <param name="key1"><span data-ttu-id="1f9ef-207"><see cref="T:System.Data.EntityKey" /> que se va comparar.</span><span class="sxs-lookup"><span data-stu-id="1f9ef-207">A <see cref="T:System.Data.EntityKey" /> to compare.</span></span></param>
        <param name="key2"><span data-ttu-id="1f9ef-208"><see cref="T:System.Data.EntityKey" /> que se va comparar.</span><span class="sxs-lookup"><span data-stu-id="1f9ef-208">A <see cref="T:System.Data.EntityKey" /> to compare.</span></span></param>
        <summary><span data-ttu-id="1f9ef-209">Compara dos objetos <see cref="T:System.Data.EntityKey" />.</span><span class="sxs-lookup"><span data-stu-id="1f9ef-209">Compares two <see cref="T:System.Data.EntityKey" /> objects.</span></span></summary>
        <returns>
          <span data-ttu-id="1f9ef-210">Es <see langword="true" /> si los valores de <paramref name="key1" /> y <paramref name="key2" /> no son iguales; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1f9ef-210"><see langword="true" /> if the <paramref name="key1" /> and <paramref name="key2" /> values are not equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <span data-ttu-id="1f9ef-211"><format type="text/markdown">&LT;! [CDATA [</span><span class="sxs-lookup"><span data-stu-id="1f9ef-211"><format type="text/markdown"><![CDATA[</span></span>  
  
## Remarks  
 <span data-ttu-id="1f9ef-212">Las claves temporales tienen una semántica de comparación distinta de la de las claves permanentes:</span><span class="sxs-lookup"><span data-stu-id="1f9ef-212">Temporary keys have different comparison semantics than permanent keys:</span></span>  
  
-   <span data-ttu-id="1f9ef-213">Las claves temporales usan la igualdad de las referencias.</span><span class="sxs-lookup"><span data-stu-id="1f9ef-213">Temporary keys use reference equality.</span></span> <span data-ttu-id="1f9ef-214">Es decir, dos referencias a la misma instancia temporal de <xref:System.Data.EntityKey> son iguales, pero ninguna otra instancia de <xref:System.Data.EntityKey> lo es.</span><span class="sxs-lookup"><span data-stu-id="1f9ef-214">That is, two references to the exact same temporary <xref:System.Data.EntityKey> instance are equal but no other <xref:System.Data.EntityKey> instances are equal.</span></span>  
  
-   <span data-ttu-id="1f9ef-215">Las claves permanentes determinan la igualdad en función de los valores de las propiedades de clave contenidas y del <xref:System.Data.Metadata.Edm.EntitySet>.</span><span class="sxs-lookup"><span data-stu-id="1f9ef-215">Permanent keys determine equality based on the values of the contained key properties and the <xref:System.Data.Metadata.Edm.EntitySet>.</span></span> <span data-ttu-id="1f9ef-216">Es decir, puede tener dos instancias de <xref:System.Data.EntityKey> independientes que serán iguales si sus conjuntos de entidades son los mismos y también lo son sus valores de clave.</span><span class="sxs-lookup"><span data-stu-id="1f9ef-216">That is, you can have two separate <xref:System.Data.EntityKey> instances that are equal if their entity sets are the same and their key values are equal.</span></span>  
  
 <span data-ttu-id="1f9ef-217">Además, las claves temporales no tienen ningún <xref:System.Data.Metadata.Edm.EntitySet> ni valores de clave, pero las claves regulares sí.</span><span class="sxs-lookup"><span data-stu-id="1f9ef-217">In addition, temporary keys have no <xref:System.Data.Metadata.Edm.EntitySet> or key values, but regular keys do.</span></span>  
  
 <span data-ttu-id="1f9ef-218">El método equivalente para este operador es <xref:System.Data.EntityKey.Equals%28System.Data.EntityKey%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1f9ef-218">The equivalent method for this operator is <xref:System.Data.EntityKey.Equals%28System.Data.EntityKey%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Data.EntityKey key1, System.Data.EntityKey key2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Data.EntityKey key1, class System.Data.EntityKey key2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityKey.op_Inequality(System.Data.EntityKey,System.Data.EntityKey)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (key1 As EntityKey, key2 As EntityKey) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Data::EntityKey ^ key1, System::Data::EntityKey ^ key2);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Data.EntityKey * System.Data.EntityKey -&gt; bool" Usage="System.Data.EntityKey.op_Inequality (key1, key2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key1" Type="System.Data.EntityKey" />
        <Parameter Name="key2" Type="System.Data.EntityKey" />
      </Parameters>
      <Docs>
        <param name="key1"><span data-ttu-id="1f9ef-219"><see cref="T:System.Data.EntityKey" /> que se va comparar.</span><span class="sxs-lookup"><span data-stu-id="1f9ef-219">A <see cref="T:System.Data.EntityKey" /> to compare.</span></span></param>
        <param name="key2"><span data-ttu-id="1f9ef-220"><see cref="T:System.Data.EntityKey" /> que se va comparar.</span><span class="sxs-lookup"><span data-stu-id="1f9ef-220">A <see cref="T:System.Data.EntityKey" /> to compare.</span></span></param>
        <summary><span data-ttu-id="1f9ef-221">Compara dos objetos <see cref="T:System.Data.EntityKey" />.</span><span class="sxs-lookup"><span data-stu-id="1f9ef-221">Compares two <see cref="T:System.Data.EntityKey" /> objects.</span></span></summary>
        <returns><span data-ttu-id="1f9ef-222">Es <see langword="true" /> si los valores de <paramref name="key1" /> y <paramref name="key2" /> no son iguales; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1f9ef-222"><see langword="true" /> if the <paramref name="key1" /> and <paramref name="key2" /> values are not equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f9ef-223">Las claves temporales tienen una semántica de comparación distinta de la de las claves permanentes:</span><span class="sxs-lookup"><span data-stu-id="1f9ef-223">Temporary keys have different comparison semantics than permanent keys:</span></span>  
  
-   <span data-ttu-id="1f9ef-224">Las claves temporales usan la igualdad de las referencias.</span><span class="sxs-lookup"><span data-stu-id="1f9ef-224">Temporary keys use reference equality.</span></span> <span data-ttu-id="1f9ef-225">Es decir, dos referencias a la misma instancia temporal de <xref:System.Data.EntityKey> son iguales, pero ninguna otra instancia de <xref:System.Data.EntityKey> lo es.</span><span class="sxs-lookup"><span data-stu-id="1f9ef-225">That is, two references to the exact same temporary <xref:System.Data.EntityKey> instance are equal but no other <xref:System.Data.EntityKey> instances are equal.</span></span>  
  
-   <span data-ttu-id="1f9ef-226">Las claves permanentes determinan la igualdad en función de los valores de las propiedades de clave contenidas y del <xref:System.Data.Metadata.Edm.EntitySet>.</span><span class="sxs-lookup"><span data-stu-id="1f9ef-226">Permanent keys determine equality based on the values of the contained key properties and the <xref:System.Data.Metadata.Edm.EntitySet>.</span></span> <span data-ttu-id="1f9ef-227">Es decir, puede tener dos instancias de <xref:System.Data.EntityKey> independientes que serán iguales si sus conjuntos de entidades son los mismos y también lo son sus valores de clave.</span><span class="sxs-lookup"><span data-stu-id="1f9ef-227">That is, you can have two separate <xref:System.Data.EntityKey> instances that are equal if their entity sets are the same and their key values are equal.</span></span>  
  
 <span data-ttu-id="1f9ef-228">Además, las claves temporales no tienen ningún <xref:System.Data.Metadata.Edm.EntitySet> ni valores de clave, pero las claves regulares sí.</span><span class="sxs-lookup"><span data-stu-id="1f9ef-228">In addition, temporary keys have no <xref:System.Data.Metadata.Edm.EntitySet> or key values, but regular keys do.</span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
<Type Name="IDataAdapter" FullName="System.Data.IDataAdapter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="06caaef9a586c574d61ee524383ea2abf2caf68a" /><Meta Name="ms.sourcegitcommit" Value="1bb00d2f4343e73ae8d58668f02297a3cf10a4c1" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="06/15/2019" /><Meta Name="ms.locfileid" Value="63889577" /></Metadata><TypeSignature Language="C#" Value="public interface IDataAdapter" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDataAdapter" />
  <TypeSignature Language="DocId" Value="T:System.Data.IDataAdapter" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDataAdapter" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDataAdapter" />
  <TypeSignature Language="F#" Value="type IDataAdapter = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="5b1d0-101">Permite que un objeto implemente un DataAdapter. Representa un conjunto de métodos y propiedades relacionadas con acciones de asignación que se usan para rellenar y actualizar un <see cref="T:System.Data.DataSet" /> y actualizar un origen de datos.</span><span class="sxs-lookup"><span data-stu-id="5b1d0-101">Allows an object to implement a DataAdapter, and represents a set of methods and mapping action-related properties that are used to fill and update a <see cref="T:System.Data.DataSet" /> and update a data source.</span></span>  
  
 <span data-ttu-id="5b1d0-102">Las instancias <see cref="T:System.Data.IDbDataAdapter" /> son para los orígenes de datos que son (o se asemejan a) bases de datos relacionales con comandos textuales (como Transact-SQL), mientras que las instancias <see cref="T:System.Data.IDataAdapter" /> pueden usar cualquier tipo de origen de datos.</span><span class="sxs-lookup"><span data-stu-id="5b1d0-102"><see cref="T:System.Data.IDbDataAdapter" /> instances are for data sources that are (or resemble) relational databases with textual commands (like Transact-SQL), while <see cref="T:System.Data.IDataAdapter" /> instances could can use any type of data source.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5b1d0-103">El <xref:System.Data.IDataAdapter> interfaz permite que una clase heredera implemente una clase DataAdapter, que representa el puente entre un origen de datos y un <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="5b1d0-103">The <xref:System.Data.IDataAdapter> interface allows an inheriting class to implement a DataAdapter class, which represents the bridge between a data source and a <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="5b1d0-104">Para obtener más información sobre las clases DataAdapter, vea [llenar un DataSet desde un objeto DataAdapter](~/docs/framework/data/adonet/populating-a-dataset-from-a-dataadapter.md).</span><span class="sxs-lookup"><span data-stu-id="5b1d0-104">For more information about DataAdapter classes, see [Populating a DataSet from a DataAdapter](~/docs/framework/data/adonet/populating-a-dataset-from-a-dataadapter.md).</span></span>  
  
 <span data-ttu-id="5b1d0-105">Una aplicación no crea una instancia de la <xref:System.Data.IDataAdapter> directamente la interfaz, pero implementa una instancia de una clase que herede <xref:System.Data.IDataAdapter>.</span><span class="sxs-lookup"><span data-stu-id="5b1d0-105">An application does not create an instance of the <xref:System.Data.IDataAdapter> interface directly, but implements an instance of a class that inherits <xref:System.Data.IDataAdapter>.</span></span>  
  
 <span data-ttu-id="5b1d0-106">Las clases que heredan <xref:System.Data.IDataAdapter> debe implementar los miembros heredados y suelen definir miembros adicionales para agregar funcionalidad específica del proveedor.</span><span class="sxs-lookup"><span data-stu-id="5b1d0-106">Classes that inherit <xref:System.Data.IDataAdapter> must implement the inherited members, and they typically define additional members to add provider-specific functionality.</span></span> <span data-ttu-id="5b1d0-107">Por ejemplo, el <xref:System.Data.IDataAdapter> interfaz define un <xref:System.Data.IDataAdapter.Fill%2A> método que toma un <xref:System.Data.DataSet> como un parámetro.</span><span class="sxs-lookup"><span data-stu-id="5b1d0-107">For example, the <xref:System.Data.IDataAdapter> interface defines a <xref:System.Data.IDataAdapter.Fill%2A> method that takes a <xref:System.Data.DataSet> as a parameter.</span></span> <span data-ttu-id="5b1d0-108">A su vez, el <xref:System.Data.OleDb.OleDbDataAdapter> clase hereda la <xref:System.Data.Common.DbDataAdapter.Fill%2A> método y también define dos sobrecargas adicionales de la <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> método que toma un objeto ADO Recordset como parámetro.</span><span class="sxs-lookup"><span data-stu-id="5b1d0-108">In turn, the <xref:System.Data.OleDb.OleDbDataAdapter> class inherits the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method and also defines two additional overloads of the <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> method that take an ADO Recordset object as a parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5b1d0-109">El ejemplo siguiente utiliza las clases derivadas, <xref:System.Data.SqlClient.SqlCommand>, <xref:System.Data.SqlClient.SqlDataAdapter>, y <xref:System.Data.SqlClient.SqlConnection>, para seleccionar los registros de una base de datos.</span><span class="sxs-lookup"><span data-stu-id="5b1d0-109">The following example uses the derived classes, <xref:System.Data.SqlClient.SqlCommand>, <xref:System.Data.SqlClient.SqlDataAdapter>, and <xref:System.Data.SqlClient.SqlConnection>, to select records from a database.</span></span> <span data-ttu-id="5b1d0-110">El relleno <xref:System.Data.DataSet> , a continuación, se devuelve.</span><span class="sxs-lookup"><span data-stu-id="5b1d0-110">The filled <xref:System.Data.DataSet> is then returned.</span></span> <span data-ttu-id="5b1d0-111">Para ello, se pasa al método inicializada <xref:System.Data.DataSet>, una cadena de conexión y una cadena de consulta que es una instrucción SELECT de Transact-SQL.</span><span class="sxs-lookup"><span data-stu-id="5b1d0-111">To do this, the method is passed an initialized <xref:System.Data.DataSet>, a connection string, and a query string that is a Transact-SQL SELECT statement.</span></span>  
  
 [!code-csharp[Classic WebData SqlDataAdapter Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlDataAdapter Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="5b1d0-112">Para promover la coherencia entre los proveedores de datos de .NET Framework, asigne el nombre de la clase heredada en el formulario <paramref name="Prv" /> DataAdapter donde <paramref name="Prv" /> es el prefijo uniforme que se asigna a todas las clases en un espacio de nombres del proveedor de datos de .NET Framework específico.</span><span class="sxs-lookup"><span data-stu-id="5b1d0-112">To promote consistency among .NET Framework data providers, name the inheriting class in the form <paramref name="Prv" /> DataAdapter where <paramref name="Prv" /> is the uniform prefix given to all classes in a specific .NET Framework data provider namespace.</span></span> <span data-ttu-id="5b1d0-113">Por ejemplo, <paramref name="Sql" /> es el prefijo de la <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> clase en el <see langword="System.Data.SqlClient" /> espacio de nombres.</span><span class="sxs-lookup"><span data-stu-id="5b1d0-113">For example, <paramref name="Sql" /> is the prefix of the <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> class in the <see langword="System.Data.SqlClient" /> namespace.</span></span>  
  
<span data-ttu-id="5b1d0-114">Al heredar de la <see cref="T:System.Data.IDataAdapter" /> interfaz, debe implementar los constructores siguientes:</span><span class="sxs-lookup"><span data-stu-id="5b1d0-114">When you inherit from the <see cref="T:System.Data.IDataAdapter" /> interface, you should implement the following constructors:</span></span> 
 <list type="table"><listheader><term> <span data-ttu-id="5b1d0-115">Elemento</span><span class="sxs-lookup"><span data-stu-id="5b1d0-115">Item</span></span> 
 </term><description> <span data-ttu-id="5b1d0-116">Descripción</span><span class="sxs-lookup"><span data-stu-id="5b1d0-116">Description</span></span> 
 </description></listheader><item><term> <span data-ttu-id="5b1d0-117">PrvDataAdapter()</span><span class="sxs-lookup"><span data-stu-id="5b1d0-117">PrvDataAdapter()</span></span> 
 </term><description> <span data-ttu-id="5b1d0-118">Inicializa una nueva instancia de la clase PrvDataAdapter.</span><span class="sxs-lookup"><span data-stu-id="5b1d0-118">Initializes a new instance of the PrvDataAdapter class.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="5b1d0-119">PrvDataAdapter (PrvCommand selectCommand)</span><span class="sxs-lookup"><span data-stu-id="5b1d0-119">PrvDataAdapter(PrvCommand selectCommand)</span></span> 
 </term><description> <span data-ttu-id="5b1d0-120">Inicializa una nueva instancia de la clase PrvDataAdapter mediante la instrucción SQL SELECT especificada.</span><span class="sxs-lookup"><span data-stu-id="5b1d0-120">Initializes a new instance of the PrvDataAdapter class by using the specified SQL SELECT statement.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="5b1d0-121">PrvDataAdapter (selectCommandText de cadena, cadena selectConnectionString)</span><span class="sxs-lookup"><span data-stu-id="5b1d0-121">PrvDataAdapter(string selectCommandText, string selectConnectionString)</span></span> 
 </term><description> <span data-ttu-id="5b1d0-122">Inicializa una nueva instancia de la clase PrvDataAdapter mediante una instrucción SELECT de SQL y una cadena de conexión.</span><span class="sxs-lookup"><span data-stu-id="5b1d0-122">Initializes a new instance of the PrvDataAdapter class by using an SQL SELECT statement and a connection string.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="5b1d0-123">PrvDataAdapter (cadena selectCommandText, PrvConnection selectConnection)</span><span class="sxs-lookup"><span data-stu-id="5b1d0-123">PrvDataAdapter(string selectCommandText, PrvConnection selectConnection)</span></span> 
 </term><description> <span data-ttu-id="5b1d0-124">Inicializa una nueva instancia de la clase PrvDataAdapter mediante una instrucción SELECT de SQL y un objeto PrvConnection.</span><span class="sxs-lookup"><span data-stu-id="5b1d0-124">Initializes a new instance of the PrvDataAdapter class by using an SQL SELECT statement and a PrvConnection object.</span></span>  
  
 </description></item></list></para></block>
  </Docs>
  <Members>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public int Fill (System.Data.DataSet dataSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Fill(class System.Data.DataSet dataSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Fill(System::Data::DataSet ^ dataSet);" />
      <MemberSignature Language="F#" Value="abstract member Fill : System.Data.DataSet -&gt; int" Usage="iDataAdapter.Fill dataSet" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
      </Parameters>
      <Docs>
        <param name="dataSet"><span data-ttu-id="5b1d0-125">Clase <see cref="T:System.Data.DataSet" /> que se va a rellenar con registros y, si es necesario, con un esquema.</span><span class="sxs-lookup"><span data-stu-id="5b1d0-125">A <see cref="T:System.Data.DataSet" /> to fill with records and, if necessary, schema.</span></span></param>
        <summary><span data-ttu-id="5b1d0-126">Agrega filas a la clase <see cref="T:System.Data.DataSet" /> o las actualiza para hacerlas coincidir con las del origen de datos mediante el nombre de <see cref="T:System.Data.DataSet" /> y crea un objeto <see cref="T:System.Data.DataTable" /> denominado "Table".</span><span class="sxs-lookup"><span data-stu-id="5b1d0-126">Adds or updates rows in the <see cref="T:System.Data.DataSet" /> to match those in the data source using the <see cref="T:System.Data.DataSet" /> name, and creates a <see cref="T:System.Data.DataTable" /> named "Table".</span></span></summary>
        <returns><span data-ttu-id="5b1d0-127">Número de filas agregadas o actualizadas correctamente en la clase <see cref="T:System.Data.DataSet" />.</span><span class="sxs-lookup"><span data-stu-id="5b1d0-127">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />.</span></span> <span data-ttu-id="5b1d0-128">No se incluyen las filas afectadas por instrucciones que no devuelven filas.</span><span class="sxs-lookup"><span data-stu-id="5b1d0-128">This does not include rows affected by statements that do not return rows.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5b1d0-129"><xref:System.Data.IDataAdapter.Fill%2A> recupera filas de origen de datos mediante la instrucción SELECT especificada por un asociado <xref:System.Data.IDbDataAdapter.SelectCommand%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="5b1d0-129"><xref:System.Data.IDataAdapter.Fill%2A> retrieves rows from the data source using the SELECT statement specified by an associated <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property.</span></span> <span data-ttu-id="5b1d0-130">El objeto de conexión asociado con la instrucción SELECT debe ser válido, pero no es necesario que esté abierto.</span><span class="sxs-lookup"><span data-stu-id="5b1d0-130">The connection object associated with the SELECT statement must be valid, but it does not need to be open.</span></span> <span data-ttu-id="5b1d0-131">Si se cierra la conexión antes de <xref:System.Data.IDataAdapter.Fill%2A> es llamado, se abre para recuperar datos, a continuación, se cierra.</span><span class="sxs-lookup"><span data-stu-id="5b1d0-131">If the connection is closed before <xref:System.Data.IDataAdapter.Fill%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="5b1d0-132">Si la conexión está abierta antes de <xref:System.Data.IDataAdapter.Fill%2A> es llamado, permanece abierta.</span><span class="sxs-lookup"><span data-stu-id="5b1d0-132">If the connection is open before <xref:System.Data.IDataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="5b1d0-133">El <xref:System.Data.IDataAdapter.Fill%2A> operación, a continuación, agrega las filas al destino <xref:System.Data.DataTable> objetos en el <xref:System.Data.DataSet>, creando el <xref:System.Data.DataTable> objetos si aún no existen.</span><span class="sxs-lookup"><span data-stu-id="5b1d0-133">The <xref:System.Data.IDataAdapter.Fill%2A> operation then adds the rows to destination <xref:System.Data.DataTable> objects in the <xref:System.Data.DataSet>, creating the <xref:System.Data.DataTable> objects if they do not already exist.</span></span> <span data-ttu-id="5b1d0-134">Al crear <xref:System.Data.DataTable> objetos, el <xref:System.Data.IDataAdapter.Fill%2A> operación normalmente crea únicamente los metadatos de nombre de columna.</span><span class="sxs-lookup"><span data-stu-id="5b1d0-134">When creating <xref:System.Data.DataTable> objects, the <xref:System.Data.IDataAdapter.Fill%2A> operation usually creates only column name metadata.</span></span> <span data-ttu-id="5b1d0-135">Sin embargo, si la <xref:System.Data.IDataAdapter.MissingSchemaAction%2A> propiedad está establecida en `AddWithKey`, también se crean claves principales adecuadas y restricciones.</span><span class="sxs-lookup"><span data-stu-id="5b1d0-135">However, if the <xref:System.Data.IDataAdapter.MissingSchemaAction%2A> property is set to `AddWithKey`, appropriate primary keys and constraints are also created.</span></span>  
  
 <span data-ttu-id="5b1d0-136">Si `SelectCommand` devuelve los resultados de OUTER JOIN, `DataAdapter` no establece un valor <xref:System.Data.DataTable.PrimaryKey%2A> para el objeto <xref:System.Data.DataTable>resultante.</span><span class="sxs-lookup"><span data-stu-id="5b1d0-136">If the `SelectCommand` returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="5b1d0-137">Debe definir explícitamente la clave principal para garantizar que las filas duplicadas se resuelven correctamente.</span><span class="sxs-lookup"><span data-stu-id="5b1d0-137">You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="5b1d0-138">Para obtener más información, consulte [definir claves principales](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span><span class="sxs-lookup"><span data-stu-id="5b1d0-138">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
 <span data-ttu-id="5b1d0-139">Si el <xref:System.Data.IDataAdapter> detecta columnas duplicadas al rellenar un <xref:System.Data.DataTable>, genera nombres para las columnas sucesivas, con el patrón "columnname1", "columnname2", "nombredecolumna3" y así sucesivamente.</span><span class="sxs-lookup"><span data-stu-id="5b1d0-139">If the <xref:System.Data.IDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the successive columns, using the pattern "columnname1", "columnname2", "columnname3", and so on.</span></span> <span data-ttu-id="5b1d0-140">Si los datos entrantes contienen columnas sin nombre, se colocan en el <xref:System.Data.DataSet> según el modelo "Columna1", "Columna2" y así sucesivamente.</span><span class="sxs-lookup"><span data-stu-id="5b1d0-140">If the incoming data contains unnamed columns, they are put in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="5b1d0-141">Cuando se agregan varios conjuntos de resultados a la <xref:System.Data.DataSet>, cada conjunto de resultados se coloca en una tabla independiente.</span><span class="sxs-lookup"><span data-stu-id="5b1d0-141">When multiple result sets are added to the <xref:System.Data.DataSet>, each result set is put in a separate table.</span></span> <span data-ttu-id="5b1d0-142">Conjuntos de resultados adicionales se denominan agregando valores enteros al nombre de tabla especificado (por ejemplo, "Table", "Tabla1", "Tabla2" y así sucesivamente).</span><span class="sxs-lookup"><span data-stu-id="5b1d0-142">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</span></span> <span data-ttu-id="5b1d0-143">Las aplicaciones deben tener cuidado al usar nombres de columna y tabla para asegurarse de que no se producen conflictos con estos modelos de nomenclatura.</span><span class="sxs-lookup"><span data-stu-id="5b1d0-143">Applications should use caution when using column and table names to ensure that conflicts with these naming patterns do not occur.</span></span>  
  
 <span data-ttu-id="5b1d0-144">Cuando la instrucción SELECT que se usa para rellenar el <xref:System.Data.DataSet> devuelve varios resultados, como una instrucción SQL por lotes, si uno de los resultados contiene un error, todos los resultados sucesivos omitidos y no se agrega a la <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="5b1d0-144">When the SELECT statement that is used to populate the <xref:System.Data.DataSet> returns multiple results, such as a batch SQL statement, if one of the results contains an error, all successive results are skipped and not added to the <xref:System.Data.DataSet>.</span></span>  
  
 <span data-ttu-id="5b1d0-145">Puede usar el <xref:System.Data.IDataAdapter.Fill%2A> método varias veces en el mismo <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="5b1d0-145">You can use the <xref:System.Data.IDataAdapter.Fill%2A> method multiple times on the same <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="5b1d0-146">Si existe una clave principal, las filas entrantes se combinan con las filas coincidentes que ya existen.</span><span class="sxs-lookup"><span data-stu-id="5b1d0-146">If a primary key exists, incoming rows are merged with matching rows that already exist.</span></span> <span data-ttu-id="5b1d0-147">Si no existe ninguna clave principal, las filas entrantes se anexan a la <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="5b1d0-147">If no primary key exists, incoming rows are appended to the <xref:System.Data.DataTable>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5b1d0-148">Al controlar instrucciones SQL por lotes que devuelven varios resultados, la implementación de <xref:System.Data.IDataAdapter.Fill%2A> y <xref:System.Data.IDataAdapter.FillSchema%2A> de datos .NET Framework proveedor recupera información de esquema para que solo el primer resultado.</span><span class="sxs-lookup"><span data-stu-id="5b1d0-148">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.IDataAdapter.Fill%2A> and <xref:System.Data.IDataAdapter.FillSchema%2A> for a .NET Framework data provider retrieves schema information for only the first result.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" />
      </Docs>
    </Member>
    <Member MemberName="FillSchema">
      <MemberSignature Language="C#" Value="public System.Data.DataTable[] FillSchema (System.Data.DataSet dataSet, System.Data.SchemaType schemaType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.DataTable[] FillSchema(class System.Data.DataSet dataSet, valuetype System.Data.SchemaType schemaType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataTable ^&gt; ^ FillSchema(System::Data::DataSet ^ dataSet, System::Data::SchemaType schemaType);" />
      <MemberSignature Language="F#" Value="abstract member FillSchema : System.Data.DataSet * System.Data.SchemaType -&gt; System.Data.DataTable[]" Usage="iDataAdapter.FillSchema (dataSet, schemaType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="schemaType" Type="System.Data.SchemaType" />
      </Parameters>
      <Docs>
        <param name="dataSet"><span data-ttu-id="5b1d0-149">Clase <see cref="T:System.Data.DataSet" /> que se va a rellenar con el esquema a partir del origen de datos.</span><span class="sxs-lookup"><span data-stu-id="5b1d0-149">The <see cref="T:System.Data.DataSet" /> to be filled with the schema from the data source.</span></span></param>
        <param name="schemaType"><span data-ttu-id="5b1d0-150">Uno de los valores de <see cref="T:System.Data.SchemaType" />.</span><span class="sxs-lookup"><span data-stu-id="5b1d0-150">One of the <see cref="T:System.Data.SchemaType" /> values.</span></span></param>
        <summary><span data-ttu-id="5b1d0-151">Agrega una <see cref="T:System.Data.DataTable" /> denominada "Table" para el <see cref="T:System.Data.DataSet" /> especificado y configura el esquema para que coincida con el origen de datos basado en el <see cref="T:System.Data.SchemaType" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="5b1d0-151">Adds a <see cref="T:System.Data.DataTable" /> named "Table" to the specified <see cref="T:System.Data.DataSet" /> and configures the schema to match that in the data source based on the specified <see cref="T:System.Data.SchemaType" />.</span></span></summary>
        <returns><span data-ttu-id="5b1d0-152">Matriz de objetos <see cref="T:System.Data.DataTable" /> que contienen la información de esquema devuelta a partir del origen de datos.</span><span class="sxs-lookup"><span data-stu-id="5b1d0-152">An array of <see cref="T:System.Data.DataTable" /> objects that contain schema information returned from the data source.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5b1d0-153">El <xref:System.Data.IDataAdapter.FillSchema%2A> método recupera el esquema de origen de datos mediante el <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</span><span class="sxs-lookup"><span data-stu-id="5b1d0-153">The <xref:System.Data.IDataAdapter.FillSchema%2A> method retrieves the schema from the data source using the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</span></span> <span data-ttu-id="5b1d0-154">El objeto de conexión asociado con el <xref:System.Data.IDbDataAdapter.SelectCommand%2A> debe ser válido, pero no es necesario que esté abierto.</span><span class="sxs-lookup"><span data-stu-id="5b1d0-154">The connection object associated with the <xref:System.Data.IDbDataAdapter.SelectCommand%2A> must be valid, but it does not need to be open.</span></span> <span data-ttu-id="5b1d0-155">Si se cierra la conexión antes de <xref:System.Data.IDataAdapter.FillSchema%2A> es llamado, se abre para recuperar datos, a continuación, se cierra.</span><span class="sxs-lookup"><span data-stu-id="5b1d0-155">If the connection is closed before <xref:System.Data.IDataAdapter.FillSchema%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="5b1d0-156">Si la conexión está abierta antes de <xref:System.Data.IDataAdapter.FillSchema%2A> es llamado, permanece abierta.</span><span class="sxs-lookup"><span data-stu-id="5b1d0-156">If the connection is open before <xref:System.Data.IDataAdapter.FillSchema%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="5b1d0-157">Un <xref:System.Data.IDataAdapter.FillSchema%2A> operación agrega un <xref:System.Data.DataTable> al destino <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="5b1d0-157">A <xref:System.Data.IDataAdapter.FillSchema%2A> operation adds a <xref:System.Data.DataTable> to the destination <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="5b1d0-158">A continuación, agrega columnas a la <xref:System.Data.DataColumnCollection> de la <xref:System.Data.DataTable> y configura las siguientes <xref:System.Data.DataColumn> propiedades si existen en el origen de datos:</span><span class="sxs-lookup"><span data-stu-id="5b1d0-158">It then adds columns to the <xref:System.Data.DataColumnCollection> of the <xref:System.Data.DataTable> and configures the following <xref:System.Data.DataColumn> properties if they exist at the data source:</span></span>  
  
-   <xref:System.Data.DataColumn.AllowDBNull%2A>  
  
-   <span data-ttu-id="5b1d0-159"><xref:System.Data.DataColumn.AutoIncrement%2A>.</span><span class="sxs-lookup"><span data-stu-id="5b1d0-159"><xref:System.Data.DataColumn.AutoIncrement%2A>.</span></span> <span data-ttu-id="5b1d0-160">Debe establecer <xref:System.Data.DataColumn.AutoIncrementStep%2A> y <xref:System.Data.DataColumn.AutoIncrementSeed%2A> por separado.</span><span class="sxs-lookup"><span data-stu-id="5b1d0-160">You must set <xref:System.Data.DataColumn.AutoIncrementStep%2A> and <xref:System.Data.DataColumn.AutoIncrementSeed%2A> separately.</span></span>  
  
-   <xref:System.Data.DataColumn.MaxLength%2A>  
  
-   <xref:System.Data.DataColumn.ReadOnly%2A>  
  
-   <xref:System.Data.DataColumn.Unique%2A>  
  
 <span data-ttu-id="5b1d0-161"><xref:System.Data.IDataAdapter.FillSchema%2A> también configura el <xref:System.Data.DataTable.PrimaryKey%2A> y <xref:System.Data.DataTable.Constraints%2A> propiedades según las reglas siguientes:</span><span class="sxs-lookup"><span data-stu-id="5b1d0-161"><xref:System.Data.IDataAdapter.FillSchema%2A> also configures the <xref:System.Data.DataTable.PrimaryKey%2A> and <xref:System.Data.DataTable.Constraints%2A> properties according to the following rules:</span></span>  
  
-   <span data-ttu-id="5b1d0-162">Si se devuelven uno o más columnas de clave principal por la <xref:System.Data.IDbDataAdapter.SelectCommand%2A>, se usan como columnas de clave principal para el <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="5b1d0-162">If one or more primary key columns are returned by the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>, they are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
-   <span data-ttu-id="5b1d0-163">Si no hay columnas de clave principal se devuelven, pero columnas únicas, las columnas únicas se usan como clave principal si todas las columnas son que no aceptan valores NULL.</span><span class="sxs-lookup"><span data-stu-id="5b1d0-163">If no primary key columns are returned but unique columns are, the unique columns are used as the primary key if all the unique columns are non-nullable.</span></span> <span data-ttu-id="5b1d0-164">Si alguna de las columnas que aceptan valores NULL, un <xref:System.Data.UniqueConstraint> se agrega a la <xref:System.Data.ConstraintCollection>, pero la <xref:System.Data.DataTable.PrimaryKey%2A> no se establece la propiedad.</span><span class="sxs-lookup"><span data-stu-id="5b1d0-164">If any of the columns are nullable, a <xref:System.Data.UniqueConstraint> is added to the <xref:System.Data.ConstraintCollection>, but the <xref:System.Data.DataTable.PrimaryKey%2A> property is not set.</span></span>  
  
-   <span data-ttu-id="5b1d0-165">Si se devuelven las columnas de clave principal y columnas únicas, las columnas de clave principales se utilizan como columnas de clave principal para el <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="5b1d0-165">If both primary key columns and unique columns are returned, the primary key columns are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="5b1d0-166">Tenga en cuenta que las claves principales y restricciones unique se agregan a la <xref:System.Data.ConstraintCollection> según las reglas anteriores, pero otra restricción de tipos no se agregan.</span><span class="sxs-lookup"><span data-stu-id="5b1d0-166">Note that primary keys and unique constraints are added to the <xref:System.Data.ConstraintCollection> according to the previous rules, but other constraint types are not added.</span></span>  
  
 <span data-ttu-id="5b1d0-167">Si un único clúster índice está definido en una o varias columnas en una tabla de SQL Server y la restricción de clave principal se define en un conjunto diferente de columnas, se devolverá los nombres de las columnas en el índice clúster.</span><span class="sxs-lookup"><span data-stu-id="5b1d0-167">If a unique clustered index is defined on a column or columns in a SQL Server table and the primary key constraint is defined on a separate set of columns, then the names of the columns in the clustered index will be returned.</span></span> <span data-ttu-id="5b1d0-168">Para devolver el nombre o nombres de las columnas de clave principal, use una sugerencia de consulta con la instrucción SELECT que especifica el nombre del índice de clave principal.</span><span class="sxs-lookup"><span data-stu-id="5b1d0-168">To return the name or names of the primary key columns, use a query hint with the SELECT statement that specifies the name of the primary key index.</span></span> <span data-ttu-id="5b1d0-169">Para obtener más información sobre cómo especificar sugerencias de consulta, vea [sugerencia de consulta (Transact-SQL)](https://msdn.microsoft.com/library/ms181714.aspx).</span><span class="sxs-lookup"><span data-stu-id="5b1d0-169">For more information about how to specify query hints, see [Query Hint (Transact-SQL)](https://msdn.microsoft.com/library/ms181714.aspx).</span></span>  
  
 <span data-ttu-id="5b1d0-170">Si el <xref:System.Data.IDataAdapter> detecta columnas duplicadas al rellenar un <xref:System.Data.DataTable>, genera nombres para las columnas sucesivas, con el patrón "columnname1", "columnname2", "nombredecolumna3" y así sucesivamente.</span><span class="sxs-lookup"><span data-stu-id="5b1d0-170">If the <xref:System.Data.IDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the successive columns, using the pattern "columnname1", "columnname2", "columnname3", and so on.</span></span> <span data-ttu-id="5b1d0-171">Si los datos entrantes contienen columnas sin nombre, se colocan en el <xref:System.Data.DataSet> según el modelo "Columna1", "Columna2" y así sucesivamente.</span><span class="sxs-lookup"><span data-stu-id="5b1d0-171">If the incoming data contains unnamed columns, they are put in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="5b1d0-172">Cuando se agregan varios conjuntos de resultados a la <xref:System.Data.DataSet>, cada conjunto de resultados se coloca en una tabla independiente.</span><span class="sxs-lookup"><span data-stu-id="5b1d0-172">When multiple result sets are added to the <xref:System.Data.DataSet>, each result set is put in a separate table.</span></span> <span data-ttu-id="5b1d0-173">Conjuntos de resultados adicionales se denominan agregando valores enteros al nombre de tabla especificado (por ejemplo, "Table", "Tabla1", "Tabla2" y así sucesivamente).</span><span class="sxs-lookup"><span data-stu-id="5b1d0-173">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</span></span> <span data-ttu-id="5b1d0-174">Las aplicaciones deben tener cuidado al usar nombres de columna y tabla para asegurarse de que no se producen conflictos con estos modelos de nomenclatura.</span><span class="sxs-lookup"><span data-stu-id="5b1d0-174">Applications should use caution when using column and table names to ensure that conflicts with these naming patterns do not occur.</span></span>  
  
 <span data-ttu-id="5b1d0-175"><xref:System.Data.IDataAdapter.FillSchema%2A> no devuelve ninguna fila.</span><span class="sxs-lookup"><span data-stu-id="5b1d0-175"><xref:System.Data.IDataAdapter.FillSchema%2A> returns no rows.</span></span> <span data-ttu-id="5b1d0-176">Use la <xref:System.Data.IDataAdapter.Fill%2A> método para agregar filas a una <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="5b1d0-176">Use the <xref:System.Data.IDataAdapter.Fill%2A> method to add rows to a <xref:System.Data.DataTable>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" />
      </Docs>
    </Member>
    <Member MemberName="GetFillParameters">
      <MemberSignature Language="C#" Value="public System.Data.IDataParameter[] GetFillParameters ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.IDataParameter[] GetFillParameters() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDataAdapter.GetFillParameters" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFillParameters () As IDataParameter()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::IDataParameter ^&gt; ^ GetFillParameters();" />
      <MemberSignature Language="F#" Value="abstract member GetFillParameters : unit -&gt; System.Data.IDataParameter[]" Usage="iDataAdapter.GetFillParameters " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDataParameter[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5b1d0-177">Obtiene los parámetros establecidos por el usuario al ejecutar una instrucción SELECT de SQL.</span><span class="sxs-lookup"><span data-stu-id="5b1d0-177">Gets the parameters set by the user when executing an SQL SELECT statement.</span></span></summary>
        <returns><span data-ttu-id="5b1d0-178">Matriz de objetos <see cref="T:System.Data.IDataParameter" /> que contienen los parámetros establecidos por el usuario.</span><span class="sxs-lookup"><span data-stu-id="5b1d0-178">An array of <see cref="T:System.Data.IDataParameter" /> objects that contains the parameters set by the user.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
```  
private static void GetParameters(String connectionString) {  
           using (SqlConnection conn = new SqlConnection(connectionString)) {  
              String queryString = "Select [CourseID],[Title],[Credits] from [MySchool].[dbo].[Course] where [Year]=@Year and [Credits]>=@Credits";   
              SqlParameter year = new SqlParameter("@Year", 2012);   
              SqlParameter credits = new SqlParameter("@Credits", SqlDbType.Int, 4, "Credits");   
              credits.Value = 4; SqlCommand command = new SqlCommand(queryString, conn);   
              command.Parameters.Add(year);   
              command.Parameters.Add(credits);   
              IDbDataAdapter mySchool = new SqlDataAdapter(command);   
              IDataParameter[] parameters = mySchool.GetFillParameters();  
              Console.WriteLine("{0,-15}{1,-15}{2,-15}{3,-15}{4,-15}", "ParameterName", "SourceColumn", "Direction", "DbType", "Value");   
              foreach (IDataParameter parameter in parameters) {   
                 Console.WriteLine("{0,-15}{1,-15}{2,-15}{3,-15}{4,-15}", parameter.ParameterName, parameter.SourceColumn, parameter.Direction, parameter.DbType, parameter.Value);   
              }  
           }  
        }  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MissingMappingAction">
      <MemberSignature Language="C#" Value="public System.Data.MissingMappingAction MissingMappingAction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.MissingMappingAction MissingMappingAction" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDataAdapter.MissingMappingAction" />
      <MemberSignature Language="VB.NET" Value="Public Property MissingMappingAction As MissingMappingAction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::MissingMappingAction MissingMappingAction { System::Data::MissingMappingAction get(); void set(System::Data::MissingMappingAction value); };" />
      <MemberSignature Language="F#" Value="member this.MissingMappingAction : System.Data.MissingMappingAction with get, set" Usage="System.Data.IDataAdapter.MissingMappingAction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.MissingMappingAction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5b1d0-179">Indica o especifica si las tablas o columnas de origen no asignadas se pasan con sus nombres de origen, para que se filtren o para generar un error.</span><span class="sxs-lookup"><span data-stu-id="5b1d0-179">Indicates or specifies whether unmapped source tables or columns are passed with their source names in order to be filtered or to raise an error.</span></span></summary>
        <value><span data-ttu-id="5b1d0-180">Uno de los valores de <see cref="T:System.Data.MissingMappingAction" />.</span><span class="sxs-lookup"><span data-stu-id="5b1d0-180">One of the <see cref="T:System.Data.MissingMappingAction" /> values.</span></span> <span data-ttu-id="5b1d0-181">De manera predeterminada, es <see langword="Passthrough" />.</span><span class="sxs-lookup"><span data-stu-id="5b1d0-181">The default is <see langword="Passthrough" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5b1d0-182">El <xref:System.Data.IDataAdapter.TableMappings%2A> propiedad proporciona la asignación maestra entre los registros devueltos y la <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="5b1d0-182">The <xref:System.Data.IDataAdapter.TableMappings%2A> property provides the master mapping between the returned records and the <xref:System.Data.DataSet>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="5b1d0-183">El valor establecido no es ninguno de los valores de <see cref="T:System.Data.MissingMappingAction" />.</span><span class="sxs-lookup"><span data-stu-id="5b1d0-183">The value set is not one of the <see cref="T:System.Data.MissingMappingAction" /> values.</span></span></exception>
        <altmember cref="P:System.Data.IDataAdapter.MissingSchemaAction" />
      </Docs>
    </Member>
    <Member MemberName="MissingSchemaAction">
      <MemberSignature Language="C#" Value="public System.Data.MissingSchemaAction MissingSchemaAction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.MissingSchemaAction MissingSchemaAction" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDataAdapter.MissingSchemaAction" />
      <MemberSignature Language="VB.NET" Value="Public Property MissingSchemaAction As MissingSchemaAction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::MissingSchemaAction MissingSchemaAction { System::Data::MissingSchemaAction get(); void set(System::Data::MissingSchemaAction value); };" />
      <MemberSignature Language="F#" Value="member this.MissingSchemaAction : System.Data.MissingSchemaAction with get, set" Usage="System.Data.IDataAdapter.MissingSchemaAction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.MissingSchemaAction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5b1d0-184">Indica o especifica si las tablas y columnas de origen y las relaciones entre ellas que faltan se agregan al esquema del conjunto de datos, se omiten o hacen que se genere un error.</span><span class="sxs-lookup"><span data-stu-id="5b1d0-184">Indicates or specifies whether missing source tables, columns, and their relationships are added to the dataset schema, ignored, or cause an error to be raised.</span></span></summary>
        <value><span data-ttu-id="5b1d0-185">Uno de los valores de <see cref="T:System.Data.MissingSchemaAction" />.</span><span class="sxs-lookup"><span data-stu-id="5b1d0-185">One of the <see cref="T:System.Data.MissingSchemaAction" /> values.</span></span> <span data-ttu-id="5b1d0-186">De manera predeterminada, es <see langword="Add" />.</span><span class="sxs-lookup"><span data-stu-id="5b1d0-186">The default is <see langword="Add" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="5b1d0-187">El valor establecido no es ninguno de los valores de <see cref="T:System.Data.MissingSchemaAction" />.</span><span class="sxs-lookup"><span data-stu-id="5b1d0-187">The value set is not one of the <see cref="T:System.Data.MissingSchemaAction" /> values.</span></span></exception>
        <altmember cref="P:System.Data.Common.DataAdapter.MissingMappingAction" />
      </Docs>
    </Member>
    <Member MemberName="TableMappings">
      <MemberSignature Language="C#" Value="public System.Data.ITableMappingCollection TableMappings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.ITableMappingCollection TableMappings" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDataAdapter.TableMappings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TableMappings As ITableMappingCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::ITableMappingCollection ^ TableMappings { System::Data::ITableMappingCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TableMappings : System.Data.ITableMappingCollection" Usage="System.Data.IDataAdapter.TableMappings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.ITableMappingCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5b1d0-188">Indica cómo se asigna una tabla de origen a una tabla de conjuntos de datos.</span><span class="sxs-lookup"><span data-stu-id="5b1d0-188">Indicates how a source table is mapped to a dataset table.</span></span></summary>
        <value><span data-ttu-id="5b1d0-189">Colección que proporciona la asignación maestra entre los registros devueltos y la clase <see cref="T:System.Data.DataSet" />.</span><span class="sxs-lookup"><span data-stu-id="5b1d0-189">A collection that provides the master mapping between the returned records and the <see cref="T:System.Data.DataSet" />.</span></span> <span data-ttu-id="5b1d0-190">El valor predeterminado es una colección vacía.</span><span class="sxs-lookup"><span data-stu-id="5b1d0-190">The default value is an empty collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5b1d0-191">El <xref:System.Data.IDataAdapter> sólo utiliza las asignaciones para la tabla de origen denominada "Table".</span><span class="sxs-lookup"><span data-stu-id="5b1d0-191">The <xref:System.Data.IDataAdapter> uses only the mappings for the source table named "Table".</span></span> <span data-ttu-id="5b1d0-192">Seleccione todo, las instrucciones INSERT, DELETE y UPDATE devolver datos deben hacerlo mediante nombres de columna coherente.</span><span class="sxs-lookup"><span data-stu-id="5b1d0-192">All SELECT, INSERT, DELETE, and UPDATE statements returning data must do so using consistent column naming.</span></span> <span data-ttu-id="5b1d0-193">Los nombres de columna devueltos en los registros deben ser únicos, de lo contrario, las columnas con nombres duplicados sobrescriben datos anteriores.</span><span class="sxs-lookup"><span data-stu-id="5b1d0-193">The column names returned in the records must be unique, otherwise columns with duplicate names overwrite previous data.</span></span> <span data-ttu-id="5b1d0-194">En <xref:System.Data.IDataAdapter.Update%2A>, solo la tabla asignada a la tabla de origen denominada "Table" tendrán reconciliarán los cambios.</span><span class="sxs-lookup"><span data-stu-id="5b1d0-194">On <xref:System.Data.IDataAdapter.Update%2A>, only the table mapped to the source table named "Table" will have its changes reconciled.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public int Update (System.Data.DataSet dataSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Update(class System.Data.DataSet dataSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Update(System::Data::DataSet ^ dataSet);" />
      <MemberSignature Language="F#" Value="abstract member Update : System.Data.DataSet -&gt; int" Usage="iDataAdapter.Update dataSet" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
      </Parameters>
      <Docs>
        <param name="dataSet"><span data-ttu-id="5b1d0-195">Clase <see cref="T:System.Data.DataSet" /> que se utiliza para actualizar el origen de datos.</span><span class="sxs-lookup"><span data-stu-id="5b1d0-195">The <see cref="T:System.Data.DataSet" /> used to update the data source.</span></span></param>
        <summary><span data-ttu-id="5b1d0-196">Llama a las instrucciones INSERT, UPDATE o DELETE respectivas para cada fila insertada, actualizada o eliminada en la clase <see cref="T:System.Data.DataSet" /> especificada a partir de un objeto <see cref="T:System.Data.DataTable" /> denominado "Table".</span><span class="sxs-lookup"><span data-stu-id="5b1d0-196">Calls the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified <see cref="T:System.Data.DataSet" /> from a <see cref="T:System.Data.DataTable" /> named "Table".</span></span></summary>
        <returns><span data-ttu-id="5b1d0-197">Número de filas del <see cref="T:System.Data.DataSet" /> actualizadas correctamente.</span><span class="sxs-lookup"><span data-stu-id="5b1d0-197">The number of rows successfully updated from the <see cref="T:System.Data.DataSet" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5b1d0-198">Cuando una aplicación llama el <xref:System.Data.IDataAdapter.Update%2A> método, el <xref:System.Data.IDataAdapter> examina el <xref:System.Data.DataRow.RowState%2A> propiedad y ejecuta las instrucciones INSERT, UPDATE o DELETE necesarias forma iterativa para cada fila, según el orden de los índices configurados en el <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="5b1d0-198">When an application calls the <xref:System.Data.IDataAdapter.Update%2A> method, the <xref:System.Data.IDataAdapter> examines the <xref:System.Data.DataRow.RowState%2A> property, and executes the required INSERT, UPDATE, or DELETE statements iteratively for each row, based on the order of the indexes configured in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="5b1d0-199">Por ejemplo, <xref:System.Data.IDataAdapter.Update%2A> podría ejecutar una instrucción DELETE, seguida de una instrucción INSERT y, a continuación, otra instrucción DELETE, debido al orden de las filas de la <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="5b1d0-199">For example, <xref:System.Data.IDataAdapter.Update%2A> might execute a DELETE statement, followed by an INSERT statement, and then another DELETE statement, because of the ordering of the rows in the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="5b1d0-200">Tenga en cuenta que estas instrucciones no se realizan como un proceso por lotes; cada fila se actualiza de forma individual.</span><span class="sxs-lookup"><span data-stu-id="5b1d0-200">Be aware that these statements are not performed as a batch process; each row is updated individually.</span></span> <span data-ttu-id="5b1d0-201">Una aplicación puede llamar a la <xref:System.Data.DataSet.GetChanges%2A> método si se debe controlar la secuencia de tipos de instrucciones (por ejemplo, INSERT antes que las actualizaciones).</span><span class="sxs-lookup"><span data-stu-id="5b1d0-201">An application can call the <xref:System.Data.DataSet.GetChanges%2A> method if you must control the sequence of statement types (for example, INSERTs before UPDATEs).</span></span> <span data-ttu-id="5b1d0-202">Para obtener más información, consulte [actualizar orígenes de datos con objetos DataAdapter](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md).</span><span class="sxs-lookup"><span data-stu-id="5b1d0-202">For more information, see [Updating Data Sources with DataAdapters](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md).</span></span>  
  
 <span data-ttu-id="5b1d0-203">Si no se han especificado las instrucciones INSERT, UPDATE o DELETE, la <xref:System.Data.Common.DataAdapter.Update%2A> método genera una excepción.</span><span class="sxs-lookup"><span data-stu-id="5b1d0-203">If INSERT, UPDATE, or DELETE statements have not been specified, the <xref:System.Data.Common.DataAdapter.Update%2A> method generates an exception.</span></span> <span data-ttu-id="5b1d0-204">Sin embargo, puede crear un <xref:System.Data.SqlClient.SqlCommandBuilder> o <xref:System.Data.OleDb.OleDbCommandBuilder> objeto para generar automáticamente instrucciones SQL para las actualizaciones de tabla única, si establece la `SelectCommand` propiedad de un proveedor de datos de .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="5b1d0-204">However, you can create a <xref:System.Data.SqlClient.SqlCommandBuilder> or <xref:System.Data.OleDb.OleDbCommandBuilder> object to automatically generate SQL statements for single-table updates if you set the `SelectCommand` property of a .NET Framework data provider.</span></span> <span data-ttu-id="5b1d0-205">A continuación, se generan las instrucciones SQL que no se establece CommandBuilder.</span><span class="sxs-lookup"><span data-stu-id="5b1d0-205">Then, any additional SQL statements that you do not set are generated by the CommandBuilder.</span></span> <span data-ttu-id="5b1d0-206">Esta lógica de generación requiere información de columna de clave esté presente en el <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="5b1d0-206">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="5b1d0-207">Para obtener más información, consulte [generar comandos con objetos CommandBuilder](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span><span class="sxs-lookup"><span data-stu-id="5b1d0-207">For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="5b1d0-208">El <xref:System.Data.Common.DataAdapter.Update%2A> método recupera filas de la tabla que aparece en la primera asignación antes de realizar una actualización.</span><span class="sxs-lookup"><span data-stu-id="5b1d0-208">The <xref:System.Data.Common.DataAdapter.Update%2A> method retrieves rows from the table listed in the first mapping before performing an update.</span></span> <span data-ttu-id="5b1d0-209">El <xref:System.Data.Common.DataAdapter.Update%2A> , a continuación, actualiza la fila con el valor de la <xref:System.Data.IDbCommand.UpdatedRowSource%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="5b1d0-209">The <xref:System.Data.Common.DataAdapter.Update%2A> then updates the row using the value of the <xref:System.Data.IDbCommand.UpdatedRowSource%2A> property.</span></span> <span data-ttu-id="5b1d0-210">Se omiten todas las filas adicionales devueltas.</span><span class="sxs-lookup"><span data-stu-id="5b1d0-210">Any additional rows returned are ignored.</span></span>  
  
 <span data-ttu-id="5b1d0-211">Después de que todos los datos se vuelve a cargar en el <xref:System.Data.DataSet>, el <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> se genera el evento, que permite al usuario inspeccionar el reconciliar <xref:System.Data.DataSet> fila y los parámetros devueltos por el comando de salida.</span><span class="sxs-lookup"><span data-stu-id="5b1d0-211">After any data is loaded back into the <xref:System.Data.DataSet>, the <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised, allowing the user to inspect the reconciled <xref:System.Data.DataSet> row and any output parameters returned by the command.</span></span> <span data-ttu-id="5b1d0-212">Después de una fila se actualiza correctamente, se aceptan los cambios en esa fila.</span><span class="sxs-lookup"><span data-stu-id="5b1d0-212">After a row updates successfully, the changes to that row are accepted.</span></span>  
  
 <span data-ttu-id="5b1d0-213">Cuando se usa <xref:System.Data.IDataAdapter.Update%2A>, el orden de ejecución es como sigue:</span><span class="sxs-lookup"><span data-stu-id="5b1d0-213">When using <xref:System.Data.IDataAdapter.Update%2A>, the order of execution is as follows:</span></span>  
  
1.  <span data-ttu-id="5b1d0-214">Los valores de la <xref:System.Data.DataRow> se mueven a los valores de parámetro.</span><span class="sxs-lookup"><span data-stu-id="5b1d0-214">The values in the <xref:System.Data.DataRow> are moved to the parameter values.</span></span>  
  
2.  <span data-ttu-id="5b1d0-215">Se genera el evento <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A>.</span><span class="sxs-lookup"><span data-stu-id="5b1d0-215">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> event is raised.</span></span>  
  
3.  <span data-ttu-id="5b1d0-216">Ejecuta el comando.</span><span class="sxs-lookup"><span data-stu-id="5b1d0-216">The command executes.</span></span>  
  
4.  <span data-ttu-id="5b1d0-217">Si el comando se establece en `FirstReturnedRecord`, el primero devuelve el resultado se coloca en el <xref:System.Data.DataRow>.</span><span class="sxs-lookup"><span data-stu-id="5b1d0-217">If the command is set to `FirstReturnedRecord`, then the first returned result is put in the <xref:System.Data.DataRow>.</span></span>  
  
5.  <span data-ttu-id="5b1d0-218">Si hay parámetros de salida, se colocan en el <xref:System.Data.DataRow>.</span><span class="sxs-lookup"><span data-stu-id="5b1d0-218">If there are output parameters, they are put in the <xref:System.Data.DataRow>.</span></span>  
  
6.  <span data-ttu-id="5b1d0-219">Se genera el evento <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>.</span><span class="sxs-lookup"><span data-stu-id="5b1d0-219">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised.</span></span>  
  
7.  <span data-ttu-id="5b1d0-220">Se llama a <xref:System.Data.DataRow.AcceptChanges%2A>.</span><span class="sxs-lookup"><span data-stu-id="5b1d0-220"><xref:System.Data.DataRow.AcceptChanges%2A> is called.</span></span>  
  
 <span data-ttu-id="5b1d0-221">Cada comando asociado a la <xref:System.Data.IDataAdapter> normalmente tiene una colección de parámetros asociada con él.</span><span class="sxs-lookup"><span data-stu-id="5b1d0-221">Each command associated with the <xref:System.Data.IDataAdapter> usually has a parameter collection associated with it.</span></span> <span data-ttu-id="5b1d0-222">Los parámetros se asignan a la fila actual a través de la `SourceColumn` y `SourceVersion` propiedades de un proveedor de datos de .NET Framework `Parameter` clase.</span><span class="sxs-lookup"><span data-stu-id="5b1d0-222">Parameters are mapped to the current row through the `SourceColumn` and `SourceVersion` properties of a .NET Framework data provider's `Parameter` class.</span></span> <span data-ttu-id="5b1d0-223">`SourceColumn` hace referencia a un <xref:System.Data.DataTable> columna que el <xref:System.Data.IDataAdapter> referencias para obtener valores de parámetro para la fila actual.</span><span class="sxs-lookup"><span data-stu-id="5b1d0-223">`SourceColumn` refers to a <xref:System.Data.DataTable> column that the <xref:System.Data.IDataAdapter> references to obtain parameter values for the current row.</span></span>  
  
 <span data-ttu-id="5b1d0-224">`SourceColumn` hace referencia al nombre de columna no asignada antes de que se han aplicado las asignaciones de tabla.</span><span class="sxs-lookup"><span data-stu-id="5b1d0-224">`SourceColumn` refers to the unmapped column name before any table mappings have been applied.</span></span> <span data-ttu-id="5b1d0-225">Si `SourceColumn` hace referencia a una columna que no existe, la acción realizada depende de uno de los siguientes <xref:System.Data.MissingMappingAction> valores.</span><span class="sxs-lookup"><span data-stu-id="5b1d0-225">If `SourceColumn` refers to a nonexistent column, the action taken depends on one of the following <xref:System.Data.MissingMappingAction> values.</span></span>  
  
|<span data-ttu-id="5b1d0-226">Valor de enumeración</span><span class="sxs-lookup"><span data-stu-id="5b1d0-226">Enumeration Value</span></span>|<span data-ttu-id="5b1d0-227">Acción realizada</span><span class="sxs-lookup"><span data-stu-id="5b1d0-227">Action Taken</span></span>|  
|-----------------------|------------------|  
|`MissingMappingAction.Passthrough`|<span data-ttu-id="5b1d0-228">Use los nombres de columna de origen y los nombres de tabla en la <xref:System.Data.DataSet> si no hay ninguna asignación.</span><span class="sxs-lookup"><span data-stu-id="5b1d0-228">Use the source column names and table names in the <xref:System.Data.DataSet> if no mapping is present.</span></span>|  
|`MissingMappingAction.Ignore`|<span data-ttu-id="5b1d0-229">Un <xref:System.SystemException> se genera.</span><span class="sxs-lookup"><span data-stu-id="5b1d0-229">A <xref:System.SystemException> is generated.</span></span> <span data-ttu-id="5b1d0-230">Cuando las asignaciones se establecen explícitamente, falta de una asignación para un parámetro de entrada puede deberse a un error.</span><span class="sxs-lookup"><span data-stu-id="5b1d0-230">When the mappings are explicitly set, a missing mapping for an input parameter is usually caused by an error.</span></span>|  
|`MissingMappingAction.Error`|<span data-ttu-id="5b1d0-231">Un <xref:System.SystemException> se genera.</span><span class="sxs-lookup"><span data-stu-id="5b1d0-231">A <xref:System.SystemException> is generated.</span></span>|  
  
 <span data-ttu-id="5b1d0-232">El `SourceColumn` propiedad también se usa para asignar el valor de salida o realizar una copia de los parámetros de entrada/salida para el `DataSet`.</span><span class="sxs-lookup"><span data-stu-id="5b1d0-232">The `SourceColumn` property is also used to map the value for output or input/output parameters back to the `DataSet`.</span></span> <span data-ttu-id="5b1d0-233">Si hace referencia a una columna que no existe, se genera una excepción.</span><span class="sxs-lookup"><span data-stu-id="5b1d0-233">An exception is generated if it refers to a nonexistent column.</span></span>  
  
 <span data-ttu-id="5b1d0-234">El `SourceVersion` propiedad de un proveedor de datos de .NET Framework `Parameter` clase determina si se utiliza el `Original`, `Current`, o `Proposed` versión del valor de columna.</span><span class="sxs-lookup"><span data-stu-id="5b1d0-234">The `SourceVersion` property of a .NET Framework data provider's `Parameter` class determines whether to use the `Original`, `Current`, or `Proposed` version of the column value.</span></span> <span data-ttu-id="5b1d0-235">Esta capacidad se utiliza con frecuencia para incluir valores originales en la cláusula WHERE de una instrucción UPDATE para comprobar las infracciones de simultaneidad optimista.</span><span class="sxs-lookup"><span data-stu-id="5b1d0-235">This capability is frequently used to include original values in the WHERE clause of an UPDATE statement to check for optimistic concurrency violations.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5b1d0-236">Si se produce un error al actualizar una fila, se produce una excepción y se interrumpe la ejecución de la actualización.</span><span class="sxs-lookup"><span data-stu-id="5b1d0-236">If an error occurs while updating a row, an exception is thrown and execution of the update is discontinued.</span></span> <span data-ttu-id="5b1d0-237">Para continuar la operación de actualización sin generar excepciones cuando se produce un error, establezca el <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> propiedad `true` antes de llamar a <xref:System.Data.Common.DbDataAdapter.Update%2A>.</span><span class="sxs-lookup"><span data-stu-id="5b1d0-237">To continue the update operation without generating exceptions when an error is encountered, set the <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> property to `true` before calling <xref:System.Data.Common.DbDataAdapter.Update%2A>.</span></span> <span data-ttu-id="5b1d0-238">También puede responder a los errores según una fila por fila dentro de la `RowUpdated` eventos de DataAdapter.</span><span class="sxs-lookup"><span data-stu-id="5b1d0-238">You may also respond to errors on a per-row basis within the `RowUpdated` event of a DataAdapter.</span></span> <span data-ttu-id="5b1d0-239">Para continuar la operación de actualización sin generar una excepción dentro de la `RowUpdated` conjunto de eventos, el <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> propiedad de la <xref:System.Data.Common.RowUpdatedEventArgs> a <xref:System.Data.UpdateStatus.Continue>.</span><span class="sxs-lookup"><span data-stu-id="5b1d0-239">To continue the update operation without generating an exception within the `RowUpdated` event, set the <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> property of the <xref:System.Data.Common.RowUpdatedEventArgs> to <xref:System.Data.UpdateStatus.Continue>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5b1d0-240">En el ejemplo siguiente se usa la clase derivada, <xref:System.Data.OleDb.OleDbDataAdapter>a <xref:System.Data.Common.DataAdapter.Update%2A> el origen de datos.</span><span class="sxs-lookup"><span data-stu-id="5b1d0-240">The following example uses the derived class, <xref:System.Data.OleDb.OleDbDataAdapter>, to <xref:System.Data.Common.DataAdapter.Update%2A> the data source.</span></span> <span data-ttu-id="5b1d0-241">En este ejemplo se da por supuesto que ha creado un <xref:System.Data.OleDb.OleDbDataAdapter> y un <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="5b1d0-241">This example assumes that you have created an <xref:System.Data.OleDb.OleDbDataAdapter> and a <xref:System.Data.DataSet>.</span></span>  
  
 [!code-csharp[Classic WebData DataAdapter.IDataAdapter.Update Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataAdapter.IDataAdapter.Update Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataAdapter.IDataAdapter.Update Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataAdapter.IDataAdapter.Update Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.DBConcurrencyException"><span data-ttu-id="5b1d0-242">El hecho de intentar ejecutar una instrucción INSERT, UPDATE o DELETE no ha afectado a ningún registro.</span><span class="sxs-lookup"><span data-stu-id="5b1d0-242">An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
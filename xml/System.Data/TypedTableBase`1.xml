<Type Name="TypedTableBase&lt;T&gt;" FullName="System.Data.TypedTableBase&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="11b0b2265e5a50d92a25879cce70f496c2532b90" /><Meta Name="ms.sourcegitcommit" Value="2767b5903996fbd7e2b81eda1114dfc9d0d9db63" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="05/02/2019" /><Meta Name="ms.locfileid" Value="65006339" /></Metadata><TypeSignature Language="C#" Value="public abstract class TypedTableBase&lt;T&gt; : System.Data.DataTable, System.Collections.Generic.IEnumerable&lt;T&gt; where T : DataRow" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit TypedTableBase`1&lt;(class System.Data.DataRow) T&gt; extends System.Data.DataTable implements class System.Collections.Generic.IEnumerable`1&lt;!T&gt;, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Data.TypedTableBase`1" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TypedTableBase(Of T)&#xA;Inherits DataTable&#xA;Implements IEnumerable(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA; where T : DataRowpublic ref class TypedTableBase abstract : System::Data::DataTable, System::Collections::Generic::IEnumerable&lt;T&gt;" />
  <TypeSignature Language="F#" Value="type TypedTableBase&lt;'T (requires 'T :&gt; DataRow)&gt; = class&#xA;    inherit DataTable&#xA;    interface seq&lt;'T (requires 'T :&gt; DataRow)&gt;&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <BaseTypeName>System.Data.DataRow</BaseTypeName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Data.DataTable</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="T"><span data-ttu-id="076db-101">El tipo de objetos de la secuencia de origen representada por la tabla, normalmente <see cref="T:System.Data.DataRow" />.</span><span class="sxs-lookup"><span data-stu-id="076db-101">The type of objects in the source sequence represented by the table, typically <see cref="T:System.Data.DataRow" />.</span></span></typeparam>
    <summary><span data-ttu-id="076db-102">Este tipo se usa como clase base para la generación de objetos de tipo <see cref="T:System.Data.DataTable" /> por parte de Visual Studio y la herramienta XSD.exe .NET Framework y no está pensado para usarse directamente desde el código.</span><span class="sxs-lookup"><span data-stu-id="076db-102">This type is used as a base class for typed-<see cref="T:System.Data.DataTable" /> object generation by Visual Studio and the XSD.exe .NET Framework tool, and is not intended to be used directly from your code.</span></span></summary>
    <remarks>To be added.</remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/ad712fa1-2baf-462a-b163-574cce6d376a"><span data-ttu-id="076db-103">Consultar objetos DataSet con tipo</span><span class="sxs-lookup"><span data-stu-id="076db-103">Querying Typed DataSets</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/54333cbf-bb43-4314-a7d4-6dc1dd1c44b3"><span data-ttu-id="076db-104">Generar conjuntos de datos fuertemente tipados</span><span class="sxs-lookup"><span data-stu-id="076db-104">Generating Strongly Typed DataSets</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="076db-105">Inicializa un nuevo objeto <see cref="T:System.Data.TypedTableBase`1" />.</span><span class="sxs-lookup"><span data-stu-id="076db-105">Initializes a new <see cref="T:System.Data.TypedTableBase`1" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TypedTableBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.TypedTableBase`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TypedTableBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="076db-106">Inicializa un nuevo objeto <see cref="T:System.Data.TypedTableBase`1" />.</span><span class="sxs-lookup"><span data-stu-id="076db-106">Initializes a new <see cref="T:System.Data.TypedTableBase`1" />.</span></span> <span data-ttu-id="076db-107">Este método admite la generación de objetos <see cref="T:System.Data.DataTable" /> tipados mediante Visual Studio y la herramienta XSD.exe de .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="076db-107">This method supports typed-<see cref="T:System.Data.DataTable" /> object generation by Visual Studio and the XSD.exe .NET Framework tool.</span></span> <span data-ttu-id="076db-108">Este tipo no está pensado para utilizarse directamente desde el código.</span><span class="sxs-lookup"><span data-stu-id="076db-108">This type is not intended to be used directly from your code.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TypedTableBase (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.TypedTableBase`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TypedTableBase(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.Data.TypedTableBase&lt;'T (requires 'T :&gt; System.Data.DataRow)&gt; : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Data.TypedTableBase&lt;'T (requires 'T :&gt; System.Data.DataRow)&gt;" Usage="new System.Data.TypedTableBase&lt;'T (requires 'T :&gt; System.Data.DataRow)&gt; (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="076db-109">Un <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que contiene los datos para construir el objeto.</span><span class="sxs-lookup"><span data-stu-id="076db-109">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that contains data to construct the object.</span></span></param>
        <param name="context"><span data-ttu-id="076db-110">Contexto de transmisión por secuencias del objeto que se está deserializando.</span><span class="sxs-lookup"><span data-stu-id="076db-110">The streaming context for the object being deserialized.</span></span></param>
        <summary><span data-ttu-id="076db-111">Inicializa un nuevo objeto <see cref="T:System.Data.TypedTableBase`1" />.</span><span class="sxs-lookup"><span data-stu-id="076db-111">Initializes a new <see cref="T:System.Data.TypedTableBase`1" />.</span></span> <span data-ttu-id="076db-112">Este método admite la generación de objetos <see cref="T:System.Data.DataTable" /> tipados mediante Visual Studio y la herramienta XSD.exe de .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="076db-112">This method supports typed-<see cref="T:System.Data.DataTable" /> object generation by Visual Studio and the XSD.exe .NET Framework tool.</span></span> <span data-ttu-id="076db-113">Este método no está pensado para usarse directamente desde su código.</span><span class="sxs-lookup"><span data-stu-id="076db-113">This method is not intended to be used directly from your code.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Cast&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Data.EnumerableRowCollection&lt;TResult&gt; Cast&lt;TResult&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.EnumerableRowCollection`1&lt;!!TResult&gt; Cast&lt;TResult&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.TypedTableBase`1.Cast``1" />
      <MemberSignature Language="VB.NET" Value="Public Function Cast(Of TResult) () As EnumerableRowCollection(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; System::Data::EnumerableRowCollection&lt;TResult&gt; ^ Cast();" />
      <MemberSignature Language="F#" Value="member this.Cast : unit -&gt; System.Data.EnumerableRowCollection&lt;'Result&gt;" Usage="typedTableBase.Cast " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.EnumerableRowCollection&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="TResult">To be added.</typeparam>
        <summary><span data-ttu-id="076db-114">Convierte los elementos de <see cref="T:System.Data.TypedTableBase`1" /> en el tipo especificado.</span><span class="sxs-lookup"><span data-stu-id="076db-114">Converts the elements of an <see cref="T:System.Data.TypedTableBase`1" /> to the specified type.</span></span> <span data-ttu-id="076db-115">Este método admite la generación de objetos <see cref="T:System.Data.DataTable" /> tipados mediante Visual Studio y la herramienta XSD.exe de .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="076db-115">This method supports typed <see cref="T:System.Data.DataTable" /> object generation by Visual Studio and the XSD.exe .NET Framework tool.</span></span> <span data-ttu-id="076db-116">Este método no está pensado para usarse directamente desde su código.</span><span class="sxs-lookup"><span data-stu-id="076db-116">This method is not intended to be used directly from your code.</span></span></summary>
        <returns><span data-ttu-id="076db-117"><see cref="T:System.Data.EnumerableRowCollection" /> que contiene cada elemento de la secuencia de origen convertido en el tipo especificado.</span><span class="sxs-lookup"><span data-stu-id="076db-117">An <see cref="T:System.Data.EnumerableRowCollection" /> that contains each element of the source sequence converted to the specified type.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerator&lt;T&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;!T&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.TypedTableBase`1.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerator&lt;T&gt; ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;'T (requires 'T :&gt; System.Data.DataRow)&gt;&#xA;override this.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;'T (requires 'T :&gt; System.Data.DataRow)&gt;" Usage="typedTableBase.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="076db-118">Devuelve un enumerador para el tipo -<see cref="T:System.Data.DataRow" />.</span><span class="sxs-lookup"><span data-stu-id="076db-118">Returns an enumerator for the typed-<see cref="T:System.Data.DataRow" />.</span></span> <span data-ttu-id="076db-119">Este método admite la generación de objetos <see cref="T:System.Data.DataTable" /> tipados mediante Visual Studio y la herramienta XSD.exe de .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="076db-119">This method supports typed-<see cref="T:System.Data.DataTable" /> object generation by Visual Studio and the XSD.exe .NET Framework tool.</span></span> <span data-ttu-id="076db-120">Este método no está pensado para usarse directamente desde su código.</span><span class="sxs-lookup"><span data-stu-id="076db-120">This method is not intended to be used directly from your code.</span></span></summary>
        <returns><span data-ttu-id="076db-121">Objeto que implementa la interfaz <see cref="T:System.Collections.Generic.IEnumerator`1" />.</span><span class="sxs-lookup"><span data-stu-id="076db-121">An object that implements the <see cref="T:System.Collections.Generic.IEnumerator`1" /> interface.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.TypedTableBase`1.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="076db-122">Devuelve un enumerador para el tipo -<see cref="T:System.Data.DataRow" />.</span><span class="sxs-lookup"><span data-stu-id="076db-122">Returns an enumerator for the typed-<see cref="T:System.Data.DataRow" />.</span></span> <span data-ttu-id="076db-123">Este método admite la generación de objetos <see cref="T:System.Data.DataTable" /> tipados mediante Visual Studio y la herramienta XSD.exe de .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="076db-123">This method supports typed-<see cref="T:System.Data.DataTable" /> object generation by Visual Studio and the XSD.exe .NET Framework tool.</span></span> <span data-ttu-id="076db-124">Este método no está pensado para usarse directamente desde su código.</span><span class="sxs-lookup"><span data-stu-id="076db-124">This method is not intended to be used directly from your code.</span></span></summary>
        <returns><span data-ttu-id="076db-125">Objeto que implementa la interfaz <see cref="T:System.Collections.Generic.IEnumerator`1" />.</span><span class="sxs-lookup"><span data-stu-id="076db-125">An object that implements the <see cref="T:System.Collections.Generic.IEnumerator`1" /> interface.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
<Type Name="OracleDataAdapter" FullName="System.Data.OracleClient.OracleDataAdapter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="94f86c93ff97b9677347766b9725ecec623716b2" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55350430" /></Metadata><TypeSignature Language="C#" Value="public sealed class OracleDataAdapter : System.Data.Common.DbDataAdapter, ICloneable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OracleDataAdapter extends System.Data.Common.DbDataAdapter implements class System.Data.IDataAdapter, class System.Data.IDbDataAdapter, class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Data.OracleClient.OracleDataAdapter" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OracleDataAdapter&#xA;Inherits DbDataAdapter&#xA;Implements ICloneable" />
  <TypeSignature Language="C++ CLI" Value="public ref class OracleDataAdapter sealed : System::Data::Common::DbDataAdapter, ICloneable" />
  <TypeSignature Language="F#" Value="type OracleDataAdapter = class&#xA;    inherit DbDataAdapter&#xA;    interface IDbDataAdapter&#xA;    interface IDataAdapter&#xA;    interface ICloneable" />
  <AssemblyInfo>
    <AssemblyName>System.Data.OracleClient</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbDataAdapter</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Data.IDataAdapter</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Data.IDbDataAdapter</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("RowUpdated")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.OracleDataAdapterDesigner, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.ToolboxItem("Microsoft.VSDesigner.Data.VS.OracleDataAdapterToolboxItem, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("OracleDataAdapter has been deprecated. http://go.microsoft.com/fwlink/?LinkID=144260", false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.OracleDataAdapterDesigner, Microsoft.VSDesigner, Version=7.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.ToolboxItem("Microsoft.VSDesigner.Data.VS.OracleDataAdapterToolboxItem, Microsoft.VSDesigner, Version=7.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.OracleDataAdapterDesigner, Microsoft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.ToolboxItem("Microsoft.VSDesigner.Data.VS.OracleDataAdapterToolboxItem, Microsoft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="67d0a-101">Representa un conjunto de comandos de datos y una conexión a una base de datos que se usan para rellenar <see cref="T:System.Data.DataSet" /> y actualizar la base de datos.</span><span class="sxs-lookup"><span data-stu-id="67d0a-101">Represents a set of data commands and a connection to a database that are used to fill the <see cref="T:System.Data.DataSet" /> and update the database.</span></span> <span data-ttu-id="67d0a-102">Esta clase no puede heredarse.</span><span class="sxs-lookup"><span data-stu-id="67d0a-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67d0a-103">Este tipo está en desuso y se quitará en una futura versión de .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="67d0a-103">This type is deprecated and will be removed in a future version of the .NET Framework.</span></span> <span data-ttu-id="67d0a-104">Para obtener más información, consulte [Oracle y ADO.NET](~/docs/framework/data/adonet/oracle-and-adonet.md).</span><span class="sxs-lookup"><span data-stu-id="67d0a-104">For more information, see [Oracle and ADO.NET](~/docs/framework/data/adonet/oracle-and-adonet.md).</span></span>  
  
 <span data-ttu-id="67d0a-105">El <xref:System.Data.OracleClient.OracleDataAdapter> actúa como puente entre un **DataSet** y base de datos para recuperar y guardar datos.</span><span class="sxs-lookup"><span data-stu-id="67d0a-105">The <xref:System.Data.OracleClient.OracleDataAdapter> serves as a bridge between a **DataSet** and database for retrieving and saving data.</span></span> <span data-ttu-id="67d0a-106">El <xref:System.Data.OracleClient.OracleDataAdapter> proporciona este puente mediante <xref:System.Data.Common.DbDataAdapter.Fill%2A> para cargar datos de la base de datos en el <xref:System.Data.DataSet>y el uso de <xref:System.Data.Common.DbDataAdapter.Update%2A> para enviar los cambios realizados en el <xref:System.Data.DataSet> en el origen de datos.</span><span class="sxs-lookup"><span data-stu-id="67d0a-106">The <xref:System.Data.OracleClient.OracleDataAdapter> provides this bridge by using <xref:System.Data.Common.DbDataAdapter.Fill%2A> to load data from the database into the <xref:System.Data.DataSet>, and using <xref:System.Data.Common.DbDataAdapter.Update%2A> to send changes made in the <xref:System.Data.DataSet> back to the data source.</span></span>  
  
 <span data-ttu-id="67d0a-107">Cuando el <xref:System.Data.OracleClient.OracleDataAdapter> rellena un <xref:System.Data.DataSet>, crea las tablas y columnas necesarias para los datos devueltos, si aún no existen.</span><span class="sxs-lookup"><span data-stu-id="67d0a-107">When the <xref:System.Data.OracleClient.OracleDataAdapter> fills a <xref:System.Data.DataSet>, it creates the necessary tables and columns for the returned data if they do not already exist.</span></span> <span data-ttu-id="67d0a-108">Sin embargo, la información de clave principal no está incluida en el esquema creado implícitamente a menos que el <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> propiedad está establecida en <xref:System.Data.MissingSchemaAction.AddWithKey>.</span><span class="sxs-lookup"><span data-stu-id="67d0a-108">However, primary key information is not included in the implicitly created schema unless the <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> property is set to <xref:System.Data.MissingSchemaAction.AddWithKey>.</span></span> <span data-ttu-id="67d0a-109">También puede tener la <xref:System.Data.OracleClient.OracleDataAdapter> cree el esquema de la <xref:System.Data.DataSet>, incluida la información de clave principal, antes de llenarlo con datos mediante <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>.</span><span class="sxs-lookup"><span data-stu-id="67d0a-109">You may also have the <xref:System.Data.OracleClient.OracleDataAdapter> create the schema of the <xref:System.Data.DataSet>, including primary key information, before filling it with data using <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>.</span></span> <span data-ttu-id="67d0a-110">Para obtener más información, consulte [agregar restricciones existentes a un conjunto de datos](~/docs/framework/data/adonet/adding-existing-constraints-to-a-dataset.md).</span><span class="sxs-lookup"><span data-stu-id="67d0a-110">For more information, see [Adding Existing Constraints to a DataSet](~/docs/framework/data/adonet/adding-existing-constraints-to-a-dataset.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="67d0a-111">De forma predeterminada, los campos numéricos se importan a un <xref:System.Data.DataTable> con <xref:System.Data.Common.DbDataAdapter.Fill%2A> se asignan a <xref:System.Data.OracleClient.OracleNumber> objetos.</span><span class="sxs-lookup"><span data-stu-id="67d0a-111">By default, numeric fields imported to a <xref:System.Data.DataTable> with <xref:System.Data.Common.DbDataAdapter.Fill%2A> are mapped to <xref:System.Data.OracleClient.OracleNumber> objects.</span></span> <span data-ttu-id="67d0a-112">Es posible desbordamiento el <xref:System.Data.OracleClient.OracleNumber>e inicia una excepción de Oracle, mediante la importación de un valor numérico no entero que es demasiado grande o demasiado alta precisión para el <xref:System.Data.OracleClient.OracleNumber>de las limitaciones de precisión.</span><span class="sxs-lookup"><span data-stu-id="67d0a-112">It is possible to overflow the <xref:System.Data.OracleClient.OracleNumber>, and throw an Oracle exception, by importing a non-integral numeric value that is either too large or too high precision for the <xref:System.Data.OracleClient.OracleNumber>'s precision limitations.</span></span> <span data-ttu-id="67d0a-113">Consulte la descripción de <xref:System.Data.OracleClient.OracleNumber> para obtener más información.</span><span class="sxs-lookup"><span data-stu-id="67d0a-113">Refer to the description of <xref:System.Data.OracleClient.OracleNumber> for more information.</span></span>  
  
 <span data-ttu-id="67d0a-114">El <xref:System.Data.OracleClient.OracleDataAdapter> también incluye el <xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A>, <xref:System.Data.OracleClient.OracleDataAdapter.InsertCommand%2A>, <xref:System.Data.OracleClient.OracleDataAdapter.DeleteCommand%2A>, <xref:System.Data.OracleClient.OracleDataAdapter.UpdateCommand%2A>, y `TableMappings` propiedades para facilitar la carga y actualización de datos.</span><span class="sxs-lookup"><span data-stu-id="67d0a-114">The <xref:System.Data.OracleClient.OracleDataAdapter> also includes the <xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A>, <xref:System.Data.OracleClient.OracleDataAdapter.InsertCommand%2A>, <xref:System.Data.OracleClient.OracleDataAdapter.DeleteCommand%2A>, <xref:System.Data.OracleClient.OracleDataAdapter.UpdateCommand%2A>, and `TableMappings` properties to facilitate loading and updating of data.</span></span>  
  
 <span data-ttu-id="67d0a-115">El proveedor de datos de .NET Framework para Oracle no admite instrucciones SQL por lotes.</span><span class="sxs-lookup"><span data-stu-id="67d0a-115">The .NET Framework Data Provider for Oracle does not support batched SQL statements.</span></span> <span data-ttu-id="67d0a-116">Sin embargo, le permite utilizar varios `REF CURSOR` parámetros de salida para rellenar un **DataSet**, cada uno en su propio <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="67d0a-116">However, it does allow you to use multiple `REF CURSOR` output parameters to fill a **DataSet**, each in its own <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="67d0a-117">Debe definir los parámetros, marcarlos como parámetros de salida e indican que están `REF CURSOR` tipos de datos.</span><span class="sxs-lookup"><span data-stu-id="67d0a-117">You must define the parameters, mark them as output parameters, and indicate that they are `REF CURSOR` data types.</span></span> <span data-ttu-id="67d0a-118">Tenga en cuenta que no puede usar el <xref:System.Data.Common.DbDataAdapter.Update%2A> método cuando el <xref:System.Data.OracleClient.OracleDataAdapter> se rellena mediante `REF CURSOR` parámetros devueltos por un procedimiento almacenado, porque Oracle no proporciona la información necesaria para determinar cuáles son los nombres de tabla y columna Cuando se ejecuta la instrucción SQL.</span><span class="sxs-lookup"><span data-stu-id="67d0a-118">Note that you cannot use the <xref:System.Data.Common.DbDataAdapter.Update%2A> method when the <xref:System.Data.OracleClient.OracleDataAdapter> is filled using `REF CURSOR` parameters returned by a stored procedure, because Oracle does not provide the information necessary to determine what the table name and column names are when the SQL statement is executed.</span></span> <span data-ttu-id="67d0a-119">En el ejemplo de C# siguiente se supone que ha creado este procedimiento almacenado.</span><span class="sxs-lookup"><span data-stu-id="67d0a-119">The following C# example assumes that you have created this stored procedure.</span></span>  
  
 <span data-ttu-id="67d0a-120">Cree el siguiente paquete de Oracle en el servidor de Oracle.</span><span class="sxs-lookup"><span data-stu-id="67d0a-120">Create the following Oracle package on the Oracle server.</span></span>  
  
```  
CREATE OR REPLACE PACKAGE CURSPKG AS   
   TYPE T_CURSOR IS REF CURSOR;   
   PROCEDURE OPEN_ONE_CURSOR (N_EMPNO IN NUMBER,   
      IO_CURSOR OUT T_CURSOR);   
   PROCEDURE OPEN_TWO_CURSORS (EMPCURSOR OUT T_CURSOR,   
      DEPTCURSOR OUT T_CURSOR);  
END CURSPKG;  
/  
```  
  
 <span data-ttu-id="67d0a-121">Cree el siguiente cuerpo del paquete de Oracle en el servidor Oracle.</span><span class="sxs-lookup"><span data-stu-id="67d0a-121">Create the following Oracle package body on the Oracle server.</span></span>  
  
```  
CREATE OR REPLACE PACKAGE BODY CURSPKG AS   
    PROCEDURE OPEN_ONE_CURSOR (N_EMPNO IN NUMBER,   
                               IO_CURSOR OUT T_CURSOR)   
    IS   
        V_CURSOR T_CURSOR;   
    BEGIN   
        IF N_EMPNO <> 0 THEN   
             OPEN V_CURSOR FOR   
             SELECT EMP.EMPNO, EMP.ENAME, DEPT.DEPTNO, DEPT.DNAME   
                  FROM EMP, DEPT   
                  WHERE EMP.DEPTNO = DEPT.DEPTNO   
                        AND EMP.EMPNO = N_EMPNO;   
        ELSE   
             OPEN V_CURSOR FOR   
             SELECT EMP.EMPNO, EMP.ENAME, DEPT.DEPTNO, DEPT.DNAME   
                  FROM EMP, DEPT   
                  WHERE EMP.DEPTNO = DEPT.DEPTNO;   
        END IF;   
        IO_CURSOR := V_CURSOR;   
    END OPEN_ONE_CURSOR;   
    PROCEDURE OPEN_TWO_CURSORS (EMPCURSOR OUT T_CURSOR,   
                                DEPTCURSOR OUT T_CURSOR)   
    IS   
        V_CURSOR1 T_CURSOR;   
        V_CURSOR2 T_CURSOR;   
    BEGIN   
        OPEN V_CURSOR1 FOR SELECT * FROM EMP;   
        OPEN V_CURSOR2 FOR SELECT * FROM DEPT;   
        EMPCURSOR  := V_CURSOR1;   
        DEPTCURSOR := V_CURSOR2;   
    END OPEN_TWO_CURSORS;   
END CURSPKG;  
 /  
```  
  
 <span data-ttu-id="67d0a-122">En el ejemplo de C# siguiente se muestra cómo se puede obtener la información de tabla y columna mediante el procedimiento almacenado.</span><span class="sxs-lookup"><span data-stu-id="67d0a-122">The following C# example demonstrates how you might obtain table and column information using the stored procedure.</span></span>  
  
```csharp  
// GetConnectionString() returns a connection string for  
// the data source.  
  
string connString = GetConnectionString();  
DataSet ds = new DataSet();  
OracleConnection conn = new OracleConnection(connString);  
OracleCommand cmd = conn.CreateCommand();  
  
cmd.CommandText = "CURSPKG.OPEN_TWO_CURSORS";  
cmd.CommandType = CommandType.StoredProcedure;  
cmd.Parameters.Add("EMPCURSOR", OracleType.Cursor).Direction =   
       ParameterDirection.Output;  
cmd.Parameters.Add("DEPTCURSOR", OracleType.Cursor).Direction =   
       ParameterDirection.Output;  
  
OracleDataAdapter da = new OracleDataAdapter(cmd);  
da.TableMappings.Add("Table", "Emp");  
da.TableMappings.Add("Table1", "Dept");  
da.Fill(ds);  
  
ds.Relations.Add("EmpDept", ds.Tables["Dept"].Columns["Deptno"],   
      ds.Tables["Emp"].Columns["Deptno"], false);  
```  
  
 <span data-ttu-id="67d0a-123">El siguiente ejemplo de Visual Basic muestra cómo usar un <xref:System.Data.OracleClient.OracleDataAdapter> para rellenar un <xref:System.Data.DataSet> mediante Oracle `REF CURSOR`.</span><span class="sxs-lookup"><span data-stu-id="67d0a-123">The following Visual Basic example demonstrates how to use an <xref:System.Data.OracleClient.OracleDataAdapter> to fill a <xref:System.Data.DataSet> using an Oracle `REF CURSOR`.</span></span> <span data-ttu-id="67d0a-124">Estos ejemplos utilizan tablas que se definen en el esquema Scott/Tiger de Oracle y que requieren el siguiente paquete PL/SQL y cuerpo del paquete.</span><span class="sxs-lookup"><span data-stu-id="67d0a-124">These examples use tables that are defined in the Oracle Scott/Tiger schema, and require the following PL/SQL package and package body.</span></span> <span data-ttu-id="67d0a-125">Deben crearse en el servidor para usar los ejemplos.</span><span class="sxs-lookup"><span data-stu-id="67d0a-125">You must create these on your server to use the examples.</span></span>  
  
 <span data-ttu-id="67d0a-126">Cree el siguiente paquete de Oracle en el servidor de Oracle.</span><span class="sxs-lookup"><span data-stu-id="67d0a-126">Create the following Oracle package on the Oracle server.</span></span>  
  
```  
CREATE OR REPLACE PACKAGE CURSPKG AS   
   TYPE T_CURSOR IS REF CURSOR;   
   PROCEDURE OPEN_ONE_CURSOR (N_EMPNO IN NUMBER,   
      IO_CURSOR OUT T_CURSOR);   
   PROCEDURE OPEN_TWO_CURSORS (EMPCURSOR OUT T_CURSOR,   
      DEPTCURSOR OUT T_CURSOR);  
END CURSPKG;  
/  
```  
  
 <span data-ttu-id="67d0a-127">Cree el siguiente cuerpo del paquete de Oracle en el servidor Oracle.</span><span class="sxs-lookup"><span data-stu-id="67d0a-127">Create the following Oracle package body on the Oracle server.</span></span>  
  
``` 
CREATE OR REPLACE PACKAGE BODY CURSPKG AS   
    PROCEDURE OPEN_ONE_CURSOR (N_EMPNO IN NUMBER,   
                               IO_CURSOR OUT T_CURSOR)   
    IS   
        V_CURSOR T_CURSOR;   
    BEGIN   
        IF N_EMPNO <> 0 THEN   
             OPEN V_CURSOR FOR   
             SELECT EMP.EMPNO, EMP.ENAME, DEPT.DEPTNO, DEPT.DNAME   
                  FROM EMP, DEPT   
                  WHERE EMP.DEPTNO = DEPT.DEPTNO   
                        AND EMP.EMPNO = N_EMPNO;   
        ELSE   
             OPEN V_CURSOR FOR   
             SELECT EMP.EMPNO, EMP.ENAME, DEPT.DEPTNO, DEPT.DNAME   
                  FROM EMP, DEPT   
                  WHERE EMP.DEPTNO = DEPT.DEPTNO;   
        END IF;   
        IO_CURSOR := V_CURSOR;   
    END OPEN_ONE_CURSOR;   
    PROCEDURE OPEN_TWO_CURSORS (EMPCURSOR OUT T_CURSOR,   
                                DEPTCURSOR OUT T_CURSOR)   
    IS   
        V_CURSOR1 T_CURSOR;   
        V_CURSOR2 T_CURSOR;   
    BEGIN   
        OPEN V_CURSOR1 FOR SELECT * FROM EMP;   
        OPEN V_CURSOR2 FOR SELECT * FROM DEPT;   
        EMPCURSOR  := V_CURSOR1;   
        DEPTCURSOR := V_CURSOR2;   
    END OPEN_TWO_CURSORS;   
END CURSPKG;  
 /  
```  
  
 <span data-ttu-id="67d0a-128">Este ejemplo de Visual Basic ejecuta un procedimiento almacenado PL/SQL que devuelve dos `REF CURSOR` parámetros y rellena un <xref:System.Data.DataSet> con las filas que se devuelven.</span><span class="sxs-lookup"><span data-stu-id="67d0a-128">This Visual Basic example executes a PL/SQL stored procedure that returns two `REF CURSOR` parameters, and fills a <xref:System.Data.DataSet> with the rows that are returned.</span></span>  
  
```vb  
  
' GetConnectionString() returns a connection string for  
' the data source.  
  
    Dim connString As New String(GetConnectionString())  
    Dim ds As New DataSet()  
    Dim conn As New OracleConnection(connString)  
    Dim cmd As OracleCommand = conn.CreateCommand()  
  
    cmd.CommandText = "CURSPKG.OPEN_TWO_CURSORS"  
    cmd.CommandType = CommandType.StoredProcedure  
    cmd.Parameters.Add("EMPCURSOR", OracleType.Cursor).Direction = _  
       ParameterDirection.Output  
    cmd.Parameters.Add("DEPTCURSOR", OracleType.Cursor).Direction = _  
       ParameterDirection.Output  
  
    Dim da As New OracleDataAdapter(cmd)  
    da.TableMappings.Add("Table", "Emp")  
    da.TableMappings.Add("Table1", "Dept")  
    da.Fill(ds)  
  
    ds.Relations.Add("EmpDept", ds.Tables("Dept").Columns("Deptno"), _  
      ds.Tables("Emp").Columns("Deptno"), False)  
```  
  
 <span data-ttu-id="67d0a-129">Después de usar el <xref:System.Data.OracleClient.OracleDataAdapter> para realizar un `Fill` o `FillSchema` operación, el `DataColumn.ReadOnly` propiedad siempre devuelve false, independientemente de si una columna puede actualizarse o no, porque el servidor de Oracle no devuelve esta información.</span><span class="sxs-lookup"><span data-stu-id="67d0a-129">After using the <xref:System.Data.OracleClient.OracleDataAdapter> to perform a `Fill` or `FillSchema` operation, the `DataColumn.ReadOnly` property always returns false, regardless of whether a column can be updated or not, because the Oracle server does not return this information.</span></span>  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md"><span data-ttu-id="67d0a-130">Recuperar y modificar datos en ADO.NET</span><span class="sxs-lookup"><span data-stu-id="67d0a-130">Retrieving and Modifying Data in ADO.NET</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="67d0a-131">Inicializa una nueva instancia de la clase <see cref="T:System.Data.OracleClient.OracleDataAdapter" />.</span><span class="sxs-lookup"><span data-stu-id="67d0a-131">Initializes a new instance of the <see cref="T:System.Data.OracleClient.OracleDataAdapter" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OracleDataAdapter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataAdapter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OracleDataAdapter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="67d0a-132">Inicializa una nueva instancia de la clase <see cref="T:System.Data.OracleClient.OracleDataAdapter" />.</span><span class="sxs-lookup"><span data-stu-id="67d0a-132">Initializes a new instance of the <see cref="T:System.Data.OracleClient.OracleDataAdapter" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67d0a-133">Cuando se crea una instancia de <xref:System.Data.OracleClient.OracleDataAdapter>, las siguientes propiedades de lectura y escritura se establecen en sus valores predeterminados, como se muestra en la tabla.</span><span class="sxs-lookup"><span data-stu-id="67d0a-133">When you create an instance of <xref:System.Data.OracleClient.OracleDataAdapter>, the following read/write properties are set to their default values, as shown in the table.</span></span>  
  
|<span data-ttu-id="67d0a-134">Propiedades</span><span class="sxs-lookup"><span data-stu-id="67d0a-134">Properties</span></span>|<span data-ttu-id="67d0a-135">Valor predeterminado</span><span class="sxs-lookup"><span data-stu-id="67d0a-135">Default value</span></span>|  
|----------------|-------------------|  
|<xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>|`MissingMappingAction.Passthrough`|  
|<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>|`MissingSchemaAction.Add`|  
  
 <span data-ttu-id="67d0a-136">Puede cambiar el valor de cualquiera de estas propiedades mediante una llamada independiente a la propiedad.</span><span class="sxs-lookup"><span data-stu-id="67d0a-136">You can change the value of any of these properties through a separate call to the property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="67d0a-137">En el ejemplo siguiente se crea un <xref:System.Data.OracleClient.OracleDataAdapter> y se establecen algunas de sus propiedades.</span><span class="sxs-lookup"><span data-stu-id="67d0a-137">The following example creates an <xref:System.Data.OracleClient.OracleDataAdapter> and sets some of its properties.</span></span>  
  
```vb  
Public Sub CreateOracleDataAdapter()  
    Dim myOracleConnection As OracleConnection = New OracleConnection("Data Source=Oracle8i;Integrated Security=yes")  
    Dim custDA As OracleDataAdapter = New OracleDataAdapter  
    custDA.MissingSchemaAction = MissingSchemaAction.AddWithKey  
  
    custDA.SelectCommand = New OracleCommand("SELECT DeptNo, DName FROM Dept", myOracleConnection)  
    custDA.InsertCommand = New OracleCommand("INSERT INTO Dept (DeptNo, DName) " & _  
                                            "VALUES (:pDeptNo, :pDName)", myOracleConnection)  
    custDA.UpdateCommand = New OracleCommand("UPDATE Dept SET DeptNo = :pDeptNo, DName = :pDName " & _  
                                            "WHERE DeptNo = :pDeptNo", myOracleConnection)  
    custDA.DeleteCommand = New OracleCommand("DELETE FROM Dept WHERE DeptNo = :pDeptNo", myOracleConnection)  
  
    custDA.InsertCommand.Parameters.Add("pDeptNo", OracleType.Number, 2, "DeptNo")  
    custDA.InsertCommand.Parameters.Add("pDName", OracleType.VarChar, 14, "DName")  
  
    custDA.UpdateCommand.Parameters.Add("pDeptNo", OracleType.Number, 2, "DeptNo")  
    custDA.UpdateCommand.Parameters.Add("pDName", OracleType.VarChar, 14, "DName")  
    custDA.UpdateCommand.Parameters.Add("poldDeptNo", OracleType.Number, 2, "DeptNo").SourceVersion = DataRowVersion.Original  
  
    custDA.DeleteCommand.Parameters.Add("pDeptNo", OracleType.Number, 2, "DeptNo").SourceVersion = DataRowVersion.Original  
End Sub  
```  
  
```csharp  
public static void CreateOracleDataAdapter()   
{  
    OracleConnection myOracleConnection = new OracleConnection("Data Source=Oracle8i;Integrated Security=yes");  
    OracleDataAdapter custDA = new OracleDataAdapter();  
    custDA.MissingSchemaAction = MissingSchemaAction.AddWithKey;  
  
    custDA.SelectCommand = new OracleCommand("SELECT DeptNo, CompanyName FROM Dept", myOracleConnection);  
    custDA.InsertCommand = new OracleCommand("INSERT INTO Dept (DeptNo, CompanyName) " +  
                                            "VALUES (:pDeptNo, :pCompanyName)", myOracleConnection);  
    custDA.UpdateCommand = new OracleCommand("UPDATE Dept SET DeptNo = :pDeptNo, CompanyName = :pCompanyName " +  
                                            "WHERE DeptNo = :pDeptNo", myOracleConnection);  
    custDA.DeleteCommand = new OracleCommand("DELETE FROM Dept WHERE DeptNo = :pDeptNo", myOracleConnection);  
  
    custDA.InsertCommand.Parameters.Add("pDeptNo", OracleType.Number, 2, "DeptNo");  
    custDA.InsertCommand.Parameters.Add("pCompanyName", OracleType.VarChar, 14, "CompanyName");  
  
    custDA.UpdateCommand.Parameters.Add("pDeptNo", OracleType.Number, 2, "DeptNo");  
    custDA.UpdateCommand.Parameters.Add("pCompanyName", OracleType.VarChar, 14, "CompanyName");  
    custDA.UpdateCommand.Parameters.Add("poldDeptNo", OracleType.Number, 2, "DeptNo").SourceVersion = DataRowVersion.Original;  
  
    custDA.DeleteCommand.Parameters.Add("pDeptNo", OracleType.Number, 2, "DeptNo").SourceVersion = DataRowVersion.Original;  
}  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md"><span data-ttu-id="67d0a-138">Recuperar y modificar datos en ADO.NET</span><span class="sxs-lookup"><span data-stu-id="67d0a-138">Retrieving and Modifying Data in ADO.NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OracleDataAdapter (System.Data.OracleClient.OracleCommand selectCommand);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.OracleClient.OracleCommand selectCommand) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataAdapter.#ctor(System.Data.OracleClient.OracleCommand)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (selectCommand As OracleCommand)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OracleDataAdapter(System::Data::OracleClient::OracleCommand ^ selectCommand);" />
      <MemberSignature Language="F#" Value="new System.Data.OracleClient.OracleDataAdapter : System.Data.OracleClient.OracleCommand -&gt; System.Data.OracleClient.OracleDataAdapter" Usage="new System.Data.OracleClient.OracleDataAdapter selectCommand" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="selectCommand" Type="System.Data.OracleClient.OracleCommand" />
      </Parameters>
      <Docs>
        <param name="selectCommand"><span data-ttu-id="67d0a-139"><see cref="T:System.Data.OracleClient.OracleCommand" /> que es una instrucción SQL SELECT o un procedimiento almacenado y se establece como la propiedad <see cref="P:System.Data.OracleClient.OracleDataAdapter.SelectCommand" /> de <see cref="T:System.Data.OracleClient.OracleDataAdapter" />.</span><span class="sxs-lookup"><span data-stu-id="67d0a-139">An <see cref="T:System.Data.OracleClient.OracleCommand" /> that is an SQL SELECT statement or stored procedure, and is set as the <see cref="P:System.Data.OracleClient.OracleDataAdapter.SelectCommand" /> property of the <see cref="T:System.Data.OracleClient.OracleDataAdapter" />.</span></span></param>
        <summary><span data-ttu-id="67d0a-140">Inicializa una nueva instancia de la clase <see cref="T:System.Data.OracleClient.OracleDataAdapter" /> con la instrucción SQL SELECT especificada.</span><span class="sxs-lookup"><span data-stu-id="67d0a-140">Initializes a new instance of the <see cref="T:System.Data.OracleClient.OracleDataAdapter" /> class with the specified SQL SELECT statement.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67d0a-141">Esta implementación de la <xref:System.Data.OracleClient.OracleDataAdapter> constructor establece el <xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A> propiedad al valor especificado en el `selectCommand` parámetro.</span><span class="sxs-lookup"><span data-stu-id="67d0a-141">This implementation of the <xref:System.Data.OracleClient.OracleDataAdapter> constructor sets the <xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A> property to the value specified in the `selectCommand` parameter.</span></span>  
  
 <span data-ttu-id="67d0a-142">Cuando se crea una instancia de <xref:System.Data.OracleClient.OracleDataAdapter>, las siguientes propiedades de lectura y escritura se establecen en sus valores predeterminados, como se muestra en la tabla.</span><span class="sxs-lookup"><span data-stu-id="67d0a-142">When you create an instance of <xref:System.Data.OracleClient.OracleDataAdapter>, the following read/write properties are set to their default values, as shown in the table.</span></span>  
  
|<span data-ttu-id="67d0a-143">Propiedades</span><span class="sxs-lookup"><span data-stu-id="67d0a-143">Properties</span></span>|<span data-ttu-id="67d0a-144">Valor inicial</span><span class="sxs-lookup"><span data-stu-id="67d0a-144">Initial value</span></span>|  
|----------------|-------------------|  
|<xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>|`MissingMappingAction.Passthrough`|  
|<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>|`MissingSchemaAction.Add`|  
  
 <span data-ttu-id="67d0a-145">Puede cambiar el valor de cualquiera de estas propiedades mediante una llamada independiente a la propiedad.</span><span class="sxs-lookup"><span data-stu-id="67d0a-145">You can change the value of any of these properties through a separate call to the property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="67d0a-146">En el ejemplo siguiente se crea un <xref:System.Data.OracleClient.OracleDataAdapter> y se establecen algunas de sus propiedades.</span><span class="sxs-lookup"><span data-stu-id="67d0a-146">The following example creates an <xref:System.Data.OracleClient.OracleDataAdapter> and sets some of its properties.</span></span>  
  
```vb  
Public Sub CreateOracleDataAdapter()  
    Dim myOracleConnection As OracleConnection = New OracleConnection("Data Source=Oracle8i;Integrated Security=yes")  
    Dim myOracleCommand As OracleCommand = New OracleCommand("SELECT DeptNo, DName FROM Dept", myOracleConnection)  
    Dim custDA As OracleDataAdapter = New OracleDataAdapter(myOracleCommand)  
    custDA.MissingSchemaAction = MissingSchemaAction.AddWithKey  
  
    custDA.InsertCommand = New OracleCommand("INSERT INTO Dept (DeptNo, DName) " & _  
                                            "VALUES (:pDeptNo, :pDName)", myOracleConnection)  
    custDA.UpdateCommand = New OracleCommand("UPDATE Dept SET DeptNo = :pDeptNo, DName = :pDName " & _  
                                            "WHERE DeptNo = :pDeptNo", myOracleConnection)  
    custDA.DeleteCommand = New OracleCommand("DELETE FROM Dept WHERE DeptNo = :pDeptNo", myOracleConnection)  
  
    custDA.InsertCommand.Parameters.Add("pDeptNo", OracleType.Number, 2, "DeptNo")  
    custDA.InsertCommand.Parameters.Add("pDName", OracleType.VarChar, 14, "DName")  
  
    custDA.UpdateCommand.Parameters.Add("pDeptNo", OracleType.Number, 2, "DeptNo")  
    custDA.UpdateCommand.Parameters.Add("pDName", OracleType.VarChar, 14, "DName")  
    custDA.UpdateCommand.Parameters.Add("poldDeptNo", OracleType.Number, 2, "DeptNo").SourceVersion = DataRowVersion.Original  
  
    custDA.DeleteCommand.Parameters.Add("pDeptNo", OracleType.Number, 2, "DeptNo").SourceVersion = DataRowVersion.Original  
End Sub  
```  
  
```csharp  
public static void CreateOracleDataAdapter()   
{  
    OracleConnection myOracleConnection = new OracleConnection("Data Source=Oracle8i;Integrated Security=yes");  
    OracleCommand myOracleCommand = new OracleCommand("SELECT DeptNo, DName FROM Dept", myOracleConnection);  
    OracleDataAdapter custDA = new OracleDataAdapter(myOracleCommand);  
    custDA.MissingSchemaAction = MissingSchemaAction.AddWithKey;  
  
    custDA.InsertCommand = new OracleCommand("INSERT INTO Dept (DeptNo, DName) " +  
                                            "VALUES (:pDeptNo, :pDName)", myOracleConnection);  
    custDA.UpdateCommand = new OracleCommand("UPDATE Dept SET DeptNo = :pDeptNo, DName = :pDName " +  
                                            "WHERE DeptNo = :pDeptNo", myOracleConnection);  
    custDA.DeleteCommand = new OracleCommand("DELETE FROM Dept WHERE DeptNo = :pDeptNo", myOracleConnection);  
  
    custDA.InsertCommand.Parameters.Add("pDeptNo", OracleType.Number, 2, "DeptNo");  
    custDA.InsertCommand.Parameters.Add("pDName", OracleType.VarChar, 14, "DName");  
  
    custDA.UpdateCommand.Parameters.Add("pDeptNo", OracleType.Number, 2, "DeptNo");  
    custDA.UpdateCommand.Parameters.Add("pDName", OracleType.VarChar, 14, "DName");  
    custDA.UpdateCommand.Parameters.Add("poldDeptNo", OracleType.Number, 2, "DeptNo").SourceVersion = DataRowVersion.Original;  
  
    custDA.DeleteCommand.Parameters.Add("pDeptNo", OracleType.Number, 2, "DeptNo").SourceVersion = DataRowVersion.Original;  
}  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md"><span data-ttu-id="67d0a-147">Recuperar y modificar datos en ADO.NET</span><span class="sxs-lookup"><span data-stu-id="67d0a-147">Retrieving and Modifying Data in ADO.NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OracleDataAdapter (string selectCommandText, System.Data.OracleClient.OracleConnection selectConnection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string selectCommandText, class System.Data.OracleClient.OracleConnection selectConnection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataAdapter.#ctor(System.String,System.Data.OracleClient.OracleConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (selectCommandText As String, selectConnection As OracleConnection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OracleDataAdapter(System::String ^ selectCommandText, System::Data::OracleClient::OracleConnection ^ selectConnection);" />
      <MemberSignature Language="F#" Value="new System.Data.OracleClient.OracleDataAdapter : string * System.Data.OracleClient.OracleConnection -&gt; System.Data.OracleClient.OracleDataAdapter" Usage="new System.Data.OracleClient.OracleDataAdapter (selectCommandText, selectConnection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="selectCommandText" Type="System.String" />
        <Parameter Name="selectConnection" Type="System.Data.OracleClient.OracleConnection" />
      </Parameters>
      <Docs>
        <param name="selectCommandText"><span data-ttu-id="67d0a-148">Cadena que es una instrucción SQL SELECT o un procedimiento almacenado que debe utilizar la propiedad <see cref="P:System.Data.OracleClient.OracleDataAdapter.SelectCommand" /> de <see cref="T:System.Data.OracleClient.OracleDataAdapter" />.</span><span class="sxs-lookup"><span data-stu-id="67d0a-148">A string that is an SQL SELECT statement or stored procedure to be used by the <see cref="P:System.Data.OracleClient.OracleDataAdapter.SelectCommand" /> property of the <see cref="T:System.Data.OracleClient.OracleDataAdapter" />.</span></span></param>
        <param name="selectConnection"><span data-ttu-id="67d0a-149"><see cref="T:System.Data.OracleClient.OracleConnection" /> que representa la conexión.</span><span class="sxs-lookup"><span data-stu-id="67d0a-149">An <see cref="T:System.Data.OracleClient.OracleConnection" /> that represents the connection.</span></span></param>
        <summary><span data-ttu-id="67d0a-150">Inicializa una nueva instancia de la clase <see cref="T:System.Data.OracleClient.OracleDataAdapter" /> con una instrucción SQL SELECT y <see cref="T:System.Data.OracleClient.OracleConnection" />.</span><span class="sxs-lookup"><span data-stu-id="67d0a-150">Initializes a new instance of the <see cref="T:System.Data.OracleClient.OracleDataAdapter" /> class with an SQL SELECT statement and an <see cref="T:System.Data.OracleClient.OracleConnection" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67d0a-151">Esta implementación de la <xref:System.Data.OracleClient.OracleDataAdapter> puede ser útil en una aplicación que debe llamar a la `Fill` método para dos o más <xref:System.Data.OracleClient.OracleDataAdapter> objetos.</span><span class="sxs-lookup"><span data-stu-id="67d0a-151">This implementation of the <xref:System.Data.OracleClient.OracleDataAdapter> can be useful in an application that must call the `Fill` method for two or more <xref:System.Data.OracleClient.OracleDataAdapter> objects.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="67d0a-152">En el ejemplo siguiente se crea un <xref:System.Data.OracleClient.OracleDataAdapter> y se establecen algunas de sus propiedades.</span><span class="sxs-lookup"><span data-stu-id="67d0a-152">The following example creates an <xref:System.Data.OracleClient.OracleDataAdapter> and sets some of its properties.</span></span>  
  
```vb  
Public Sub CreateOracleDataAdapter()  
    Dim myOracleConnection As OracleConnection = New OracleConnection("Data Source=Oracle8i;Integrated Security=yes")  
    Dim mySelectText As String = "SELECT DeptNo, DName FROM Dept"  
    Dim custDA As OracleDataAdapter = New OracleDataAdapter(mySelectText, myOracleConnection)   
    custDA.MissingSchemaAction = MissingSchemaAction.AddWithKey  
  
    custDA.InsertCommand = New OracleCommand("INSERT INTO Dept (DeptNo, DName) " & _  
                                            "VALUES (:pDeptNo, :pDName)", myOracleConnection)  
    custDA.UpdateCommand = New OracleCommand("UPDATE Dept SET DeptNo = :pDeptNo, DName = :pDName " & _  
                                            "WHERE DeptNo = :pDeptNo", myOracleConnection)  
    custDA.DeleteCommand = New OracleCommand("DELETE FROM Dept WHERE DeptNo = :pDeptNo", myOracleConnection)  
  
    custDA.InsertCommand.Parameters.Add("pDeptNo", OracleType.Number, 2, "DeptNo")  
    custDA.InsertCommand.Parameters.Add("pDName", OracleType.VarChar, 14, "DName")  
  
    custDA.UpdateCommand.Parameters.Add("pDeptNo", OracleType.Number, 2, "DeptNo")  
    custDA.UpdateCommand.Parameters.Add("pDName", OracleType.VarChar, 14, "DName")  
    custDA.UpdateCommand.Parameters.Add("poldDeptNo", OracleType.Number, 2, "DeptNo").SourceVersion = DataRowVersion.Original  
  
    custDA.DeleteCommand.Parameters.Add("pDeptNo", OracleType.Number, 2, "DeptNo").SourceVersion = DataRowVersion.Original  
End Sub  
```  
  
```csharp  
public static void CreateOracleDataAdapter()   
{  
    OracleConnection myOracleConnection = new OracleConnection("Data Source=Oracle8i;Integrated Security=yes");  
  
    string mySelectText = "SELECT DeptNo, DName FROM Dept";  
  
    OracleDataAdapter custDA = new OracleDataAdapter(mySelectText, myOracleConnection );  
    custDA.MissingSchemaAction = MissingSchemaAction.AddWithKey;  
  
    custDA.InsertCommand = new OracleCommand("INSERT INTO Dept (DeptNo, DName) " +  
                                            "VALUES (:pDeptNo, :pDName)", myOracleConnection);  
    custDA.UpdateCommand = new OracleCommand("UPDATE Dept SET DeptNo = :pDeptNo, DName = :pDName " +  
                                            "WHERE DeptNo = :pDeptNo", myOracleConnection);  
    custDA.DeleteCommand = new OracleCommand("DELETE FROM Dept WHERE DeptNo = :pDeptNo", myOracleConnection);  
  
    custDA.InsertCommand.Parameters.Add("pDeptNo", OracleType.Number, 2, "DeptNo");  
    custDA.InsertCommand.Parameters.Add("pDName", OracleType.VarChar, 14, "DName");  
  
    custDA.UpdateCommand.Parameters.Add("pDeptNo", OracleType.Number, 2, "DeptNo");  
    custDA.UpdateCommand.Parameters.Add("pDName", OracleType.VarChar, 14, "DName");  
    custDA.UpdateCommand.Parameters.Add("poldDeptNo", OracleType.Number, 2, "DeptNo").SourceVersion = DataRowVersion.Original;  
  
    custDA.DeleteCommand.Parameters.Add("pDeptNo", OracleType.Number, 2, "DeptNo").SourceVersion = DataRowVersion.Original;  
}  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md"><span data-ttu-id="67d0a-153">Recuperar y modificar datos en ADO.NET</span><span class="sxs-lookup"><span data-stu-id="67d0a-153">Retrieving and Modifying Data in ADO.NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OracleDataAdapter (string selectCommandText, string selectConnectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string selectCommandText, string selectConnectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataAdapter.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (selectCommandText As String, selectConnectionString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OracleDataAdapter(System::String ^ selectCommandText, System::String ^ selectConnectionString);" />
      <MemberSignature Language="F#" Value="new System.Data.OracleClient.OracleDataAdapter : string * string -&gt; System.Data.OracleClient.OracleDataAdapter" Usage="new System.Data.OracleClient.OracleDataAdapter (selectCommandText, selectConnectionString)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="selectCommandText" Type="System.String" />
        <Parameter Name="selectConnectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="selectCommandText"><span data-ttu-id="67d0a-154">Cadena que es una instrucción SQL SELECT o un procedimiento almacenado que debe utilizar la propiedad <see cref="P:System.Data.OracleClient.OracleDataAdapter.SelectCommand" /> de <see cref="T:System.Data.OracleClient.OracleDataAdapter" />.</span><span class="sxs-lookup"><span data-stu-id="67d0a-154">A string that is an SQL SELECT statement or stored procedure to be used by the <see cref="P:System.Data.OracleClient.OracleDataAdapter.SelectCommand" /> property of the <see cref="T:System.Data.OracleClient.OracleDataAdapter" />.</span></span></param>
        <param name="selectConnectionString"><span data-ttu-id="67d0a-155">La cadena de conexión.</span><span class="sxs-lookup"><span data-stu-id="67d0a-155">The connection string.</span></span></param>
        <summary><span data-ttu-id="67d0a-156">Inicializa una nueva instancia de la clase <see cref="T:System.Data.OracleClient.OracleDataAdapter" /> con una instrucción SQL SELECT y una cadena de conexión.</span><span class="sxs-lookup"><span data-stu-id="67d0a-156">Initializes a new instance of the <see cref="T:System.Data.OracleClient.OracleDataAdapter" /> class with an SQL SELECT statement and a connection string.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="67d0a-157">En el ejemplo siguiente se crea un <xref:System.Data.OracleClient.OracleDataAdapter> y se establecen algunas de sus propiedades.</span><span class="sxs-lookup"><span data-stu-id="67d0a-157">The following example creates an <xref:System.Data.OracleClient.OracleDataAdapter> and sets some of its properties.</span></span>  
  
```vb  
Public Sub CreateOracleDataAdapter()  
    Dim myConnectionText As String = "Data Source=Oracle8i;Integrated Security=yes"  
    Dim mySelectText As String = "SELECT DeptNo, DName FROM Dept"  
    Dim custDA As OracleDataAdapter = New OracleDataAdapter(mySelectText, myConnectionText )   
    Dim myOracleConnection As OracleConnection = custDA.SelectCommand.Connection  
  
    custDA.MissingSchemaAction = MissingSchemaAction.AddWithKey     
  
    custDA.InsertCommand = New OracleCommand("INSERT INTO Dept (DeptNo, DName) " & _  
                                            "VALUES (:pDeptNo, :pDName)", myOracleConnection)  
    custDA.UpdateCommand = New OracleCommand("UPDATE Dept SET DeptNo = :pDeptNo, DName = :pDName " & _  
                                            "WHERE DeptNo = :pDeptNo", myOracleConnection)  
    custDA.DeleteCommand = New OracleCommand("DELETE FROM Dept WHERE DeptNo = :pDeptNo", myOracleConnection)  
  
    custDA.InsertCommand.Parameters.Add("pDeptNo", OracleType.Number, 2, "DeptNo")  
    custDA.InsertCommand.Parameters.Add("pDName", OracleType.VarChar, 14, "DName")  
  
    custDA.UpdateCommand.Parameters.Add("pDeptNo", OracleType.Number, 2, "DeptNo")  
    custDA.UpdateCommand.Parameters.Add("pDName", OracleType.VarChar, 14, "DName")  
    custDA.UpdateCommand.Parameters.Add("poldDeptNo", OracleType.Number, 2, "DeptNo").SourceVersion = DataRowVersion.Original  
  
    custDA.DeleteCommand.Parameters.Add("pDeptNo", OracleType.Number, 2, "DeptNo").SourceVersion = DataRowVersion.Original  
End Sub  
```  
  
```csharp  
public static void CreateOracleDataAdapter()   
{  
    string myConnectionText = "Data Source=Oracle8i;Integrated Security=yes";  
  
    string mySelectText = "SELECT DeptNo, DName FROM Dept";  
  
    OracleDataAdapter custDA = new OracleDataAdapter(mySelectText, myConnectionText );  
   OracleConnection myOracleConnection = custDA.SelectCommand.Connection;  
  
    custDA.MissingSchemaAction = MissingSchemaAction.AddWithKey;  
  
    custDA.InsertCommand = new OracleCommand("INSERT INTO Dept (DeptNo, DName) " +  
                                            "VALUES (:pDeptNo, :pDName)", myOracleConnection);  
    custDA.UpdateCommand = new OracleCommand("UPDATE Dept SET DeptNo = :pDeptNo, DName = :pDName " +  
                                            "WHERE DeptNo = :pDeptNo", myOracleConnection);  
    custDA.DeleteCommand = new OracleCommand("DELETE FROM Dept WHERE DeptNo = :pDeptNo", myOracleConnection);  
  
    custDA.InsertCommand.Parameters.Add("pDeptNo", OracleType.Number, 2, "DeptNo");  
    custDA.InsertCommand.Parameters.Add("pDName", OracleType.VarChar, 14, "DName");  
  
    custDA.UpdateCommand.Parameters.Add("pDeptNo", OracleType.Number, 2, "DeptNo");  
    custDA.UpdateCommand.Parameters.Add("pDName", OracleType.VarChar, 14, "DName");  
    custDA.UpdateCommand.Parameters.Add("poldDeptNo", OracleType.Number, 2, "DeptNo").SourceVersion = DataRowVersion.Original;  
  
    custDA.DeleteCommand.Parameters.Add("pDeptNo", OracleType.Number, 2, "DeptNo").SourceVersion = DataRowVersion.Original;  
}  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md"><span data-ttu-id="67d0a-158">Recuperar y modificar datos en ADO.NET</span><span class="sxs-lookup"><span data-stu-id="67d0a-158">Retrieving and Modifying Data in ADO.NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AddToBatch">
      <MemberSignature Language="C#" Value="protected override int AddToBatch (System.Data.IDbCommand command);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance int32 AddToBatch(class System.Data.IDbCommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataAdapter.AddToBatch(System.Data.IDbCommand)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function AddToBatch (command As IDbCommand) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override int AddToBatch(System::Data::IDbCommand ^ command);" />
      <MemberSignature Language="F#" Value="override this.AddToBatch : System.Data.IDbCommand -&gt; int" Usage="oracleDataAdapter.AddToBatch command" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.Data.IDbCommand" />
      </Parameters>
      <Docs>
        <param name="command">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearBatch">
      <MemberSignature Language="C#" Value="protected override void ClearBatch ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ClearBatch() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataAdapter.ClearBatch" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub ClearBatch ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ClearBatch();" />
      <MemberSignature Language="F#" Value="override this.ClearBatch : unit -&gt; unit" Usage="oracleDataAdapter.ClearBatch " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRowUpdatedEvent">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.RowUpdatedEventArgs CreateRowUpdatedEvent (System.Data.DataRow dataRow, System.Data.IDbCommand command, System.Data.StatementType statementType, System.Data.Common.DataTableMapping tableMapping);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.RowUpdatedEventArgs CreateRowUpdatedEvent(class System.Data.DataRow dataRow, class System.Data.IDbCommand command, valuetype System.Data.StatementType statementType, class System.Data.Common.DataTableMapping tableMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::RowUpdatedEventArgs ^ CreateRowUpdatedEvent(System::Data::DataRow ^ dataRow, System::Data::IDbCommand ^ command, System::Data::StatementType statementType, System::Data::Common::DataTableMapping ^ tableMapping);" />
      <MemberSignature Language="F#" Value="override this.CreateRowUpdatedEvent : System.Data.DataRow * System.Data.IDbCommand * System.Data.StatementType * System.Data.Common.DataTableMapping -&gt; System.Data.Common.RowUpdatedEventArgs" Usage="oracleDataAdapter.CreateRowUpdatedEvent (dataRow, command, statementType, tableMapping)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.RowUpdatedEventArgs</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataRow" Type="System.Data.DataRow" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="statementType" Type="System.Data.StatementType" />
        <Parameter Name="tableMapping" Type="System.Data.Common.DataTableMapping" />
      </Parameters>
      <Docs>
        <param name="dataRow">To be added.</param>
        <param name="command">To be added.</param>
        <param name="statementType">To be added.</param>
        <param name="tableMapping">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRowUpdatingEvent">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.RowUpdatingEventArgs CreateRowUpdatingEvent (System.Data.DataRow dataRow, System.Data.IDbCommand command, System.Data.StatementType statementType, System.Data.Common.DataTableMapping tableMapping);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.RowUpdatingEventArgs CreateRowUpdatingEvent(class System.Data.DataRow dataRow, class System.Data.IDbCommand command, valuetype System.Data.StatementType statementType, class System.Data.Common.DataTableMapping tableMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::RowUpdatingEventArgs ^ CreateRowUpdatingEvent(System::Data::DataRow ^ dataRow, System::Data::IDbCommand ^ command, System::Data::StatementType statementType, System::Data::Common::DataTableMapping ^ tableMapping);" />
      <MemberSignature Language="F#" Value="override this.CreateRowUpdatingEvent : System.Data.DataRow * System.Data.IDbCommand * System.Data.StatementType * System.Data.Common.DataTableMapping -&gt; System.Data.Common.RowUpdatingEventArgs" Usage="oracleDataAdapter.CreateRowUpdatingEvent (dataRow, command, statementType, tableMapping)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.RowUpdatingEventArgs</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataRow" Type="System.Data.DataRow" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="statementType" Type="System.Data.StatementType" />
        <Parameter Name="tableMapping" Type="System.Data.Common.DataTableMapping" />
      </Parameters>
      <Docs>
        <param name="dataRow">To be added.</param>
        <param name="command">To be added.</param>
        <param name="statementType">To be added.</param>
        <param name="tableMapping">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteCommand">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleCommand DeleteCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.OracleClient.OracleCommand DeleteCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleDataAdapter.DeleteCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property DeleteCommand As OracleCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OracleClient::OracleCommand ^ DeleteCommand { System::Data::OracleClient::OracleCommand ^ get(); void set(System::Data::OracleClient::OracleCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DeleteCommand : System.Data.OracleClient.OracleCommand with get, set" Usage="System.Data.OracleClient.OracleDataAdapter.DeleteCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=7.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="67d0a-159">Obtiene o establece la instrucción SQL o el procedimiento almacenado utilizado para eliminar registros de la base de datos.</span><span class="sxs-lookup"><span data-stu-id="67d0a-159">Gets or sets an SQL statement or stored procedure used to delete records in the database.</span></span></summary>
        <value><span data-ttu-id="67d0a-160"><see cref="T:System.Data.OracleClient.OracleCommand" /> que se utiliza durante una operación de actualización para eliminar de la base de datos los registros correspondientes a las filas eliminadas en <see langword="DataSet" />.</span><span class="sxs-lookup"><span data-stu-id="67d0a-160">An <see cref="T:System.Data.OracleClient.OracleCommand" /> used during an update operation to delete records in the database that correspond to deleted rows in the <see langword="DataSet" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67d0a-161">Cuando el <xref:System.Data.OracleClient.OracleDataAdapter.DeleteCommand%2A> propiedad se asigna a creada anteriormente <xref:System.Data.OracleClient.OracleCommand>, el <xref:System.Data.OracleClient.OracleCommand> no se clona.</span><span class="sxs-lookup"><span data-stu-id="67d0a-161">When the <xref:System.Data.OracleClient.OracleDataAdapter.DeleteCommand%2A> property is assigned to a previously created <xref:System.Data.OracleClient.OracleCommand>, the <xref:System.Data.OracleClient.OracleCommand> is not cloned.</span></span> <span data-ttu-id="67d0a-162">En su lugar, el <xref:System.Data.OracleClient.OracleDataAdapter.DeleteCommand%2A> mantiene una referencia a la que se han creado anteriormente <xref:System.Data.OracleClient.OracleCommand>.</span><span class="sxs-lookup"><span data-stu-id="67d0a-162">Instead, the <xref:System.Data.OracleClient.OracleDataAdapter.DeleteCommand%2A> maintains a reference to the previously created <xref:System.Data.OracleClient.OracleCommand>.</span></span>  
  
 <span data-ttu-id="67d0a-163">Durante una operación de actualización, si <xref:System.Data.OracleClient.OracleDataAdapter.DeleteCommand%2A> no está establecida y la clave principal información esté presente en el <xref:System.Data.DataSet>, puede usar el <xref:System.Data.OracleClient.OracleCommandBuilder> clase para generar automáticamente el <xref:System.Data.OracleClient.OracleDataAdapter.DeleteCommand%2A>y los comandos adicionales necesarios para la conciliación el <xref:System.Data.DataSet>a la base de datos.</span><span class="sxs-lookup"><span data-stu-id="67d0a-163">During an update operation, if <xref:System.Data.OracleClient.OracleDataAdapter.DeleteCommand%2A> is not set and primary key information is present in the <xref:System.Data.DataSet>, you can use the <xref:System.Data.OracleClient.OracleCommandBuilder> class to automatically generate the <xref:System.Data.OracleClient.OracleDataAdapter.DeleteCommand%2A>, and additional commands needed to reconcile the <xref:System.Data.DataSet> to the database.</span></span> <span data-ttu-id="67d0a-164">Para ello, establezca el <xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A> propiedad de la <xref:System.Data.OracleClient.OracleDataAdapter>.</span><span class="sxs-lookup"><span data-stu-id="67d0a-164">To do this, set the <xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A> property of the <xref:System.Data.OracleClient.OracleDataAdapter>.</span></span> <span data-ttu-id="67d0a-165">La lógica de generación también requiere información de columna clave esté presente en el <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="67d0a-165">The generation logic also requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="67d0a-166">Para obtener más información, consulte [generar comandos con objetos CommandBuilder](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span><span class="sxs-lookup"><span data-stu-id="67d0a-166">For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="67d0a-167">En el ejemplo siguiente se crea un <xref:System.Data.OracleClient.OracleDataAdapter> y establece el <xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A> y <xref:System.Data.OracleClient.OracleDataAdapter.DeleteCommand%2A> propiedades.</span><span class="sxs-lookup"><span data-stu-id="67d0a-167">The following example creates an <xref:System.Data.OracleClient.OracleDataAdapter> and sets the <xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A> and <xref:System.Data.OracleClient.OracleDataAdapter.DeleteCommand%2A> properties.</span></span> <span data-ttu-id="67d0a-168">Supone que ya ha creado un <xref:System.Data.OracleClient.OracleConnection> objeto.</span><span class="sxs-lookup"><span data-stu-id="67d0a-168">It assumes you have already created an <xref:System.Data.OracleClient.OracleConnection> object.</span></span>  
  
```vb  
Public Shared Function CreateCustomerAdapter(conn As OracleConnection) As OracleDataAdapter   
  
  Dim da As OracleDataAdapter = New OracleDataAdapter()  
  Dim cmd As OracleCommand  
  Dim parm As OracleParameter  
  
  ' Create the SelectCommand.  
  
  cmd = New OracleCommand("SELECT * FROM Dept " & _  
                       "WHERE DName = :pDName AND Loc = :pLoc", conn)  
  
  cmd.Parameters.Add("pDName", OracleType.NVarChar, 14)  
  cmd.Parameters.Add("pLoc", OracleType.NVarChar, 13)  
  
  da.SelectCommand = cmd  
  
  ' Create the DeleteCommand.  
  
  cmd = New OracleCommand("DELETE FROM Dept WHERE DeptNo = :pDeptNo", conn)  
  
  parm = cmd.Parameters.Add("pDeptNo", OracleType.Number, 2, "DeptNo")  
  parm.SourceVersion = DataRowVersion.Original  
  
  da.DeleteCommand = cmd  
  
  Return da  
End Function  
```  
  
```csharp  
public static OracleDataAdapter CreateCustomerAdapter(OracleConnection conn)  
{  
  OracleDataAdapter da = new OracleDataAdapter();  
  OracleCommand cmd;  
  OracleParameter parm;  
  
  // Create the SelectCommand.  
  
  cmd = new OracleCommand("SELECT * FROM Dept " +  
                       "WHERE DName = :pDName AND Loc = :pLoc", conn);  
  
  cmd.Parameters.Add("pDName", OracleType.NVarChar, 14);  
  cmd.Parameters.Add("pLoc", OracleType.NVarChar, 13);  
  
  da.SelectCommand = cmd;  
  
  // Create the DeleteCommand.  
  
  cmd = new OracleCommand("DELETE FROM Dept WHERE DeptNo = :pDeptNo", conn);  
  
  parm = cmd.Parameters.Add("pDeptNo", OracleType.Number, 2, "DeptNo");  
  parm.SourceVersion = DataRowVersion.Original;  
  
  da.DeleteCommand = cmd;  
  
  return da;  
}  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md"><span data-ttu-id="67d0a-169">Recuperar y modificar datos en ADO.NET</span><span class="sxs-lookup"><span data-stu-id="67d0a-169">Retrieving and Modifying Data in ADO.NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ExecuteBatch">
      <MemberSignature Language="C#" Value="protected override int ExecuteBatch ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance int32 ExecuteBatch() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataAdapter.ExecuteBatch" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ExecuteBatch () As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override int ExecuteBatch();" />
      <MemberSignature Language="F#" Value="override this.ExecuteBatch : unit -&gt; int" Usage="oracleDataAdapter.ExecuteBatch " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBatchedParameter">
      <MemberSignature Language="C#" Value="protected override System.Data.IDataParameter GetBatchedParameter (int commandIdentifier, int parameterIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.IDataParameter GetBatchedParameter(int32 commandIdentifier, int32 parameterIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataAdapter.GetBatchedParameter(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetBatchedParameter (commandIdentifier As Integer, parameterIndex As Integer) As IDataParameter" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::IDataParameter ^ GetBatchedParameter(int commandIdentifier, int parameterIndex);" />
      <MemberSignature Language="F#" Value="override this.GetBatchedParameter : int * int -&gt; System.Data.IDataParameter" Usage="oracleDataAdapter.GetBatchedParameter (commandIdentifier, parameterIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDataParameter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandIdentifier" Type="System.Int32" />
        <Parameter Name="parameterIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="commandIdentifier">To be added.</param>
        <param name="parameterIndex">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBatchedRecordsAffected">
      <MemberSignature Language="C#" Value="protected override bool GetBatchedRecordsAffected (int commandIdentifier, out int recordsAffected, out Exception error);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool GetBatchedRecordsAffected(int32 commandIdentifier, [out] int32&amp; recordsAffected, [out] class System.Exception&amp; error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataAdapter.GetBatchedRecordsAffected(System.Int32,System.Int32@,System.Exception@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetBatchedRecordsAffected (commandIdentifier As Integer, ByRef recordsAffected As Integer, ByRef error As Exception) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool GetBatchedRecordsAffected(int commandIdentifier, [Runtime::InteropServices::Out] int % recordsAffected, [Runtime::InteropServices::Out] Exception ^ % error);" />
      <MemberSignature Language="F#" Value="override this.GetBatchedRecordsAffected : int *  *  -&gt; bool" Usage="oracleDataAdapter.GetBatchedRecordsAffected (commandIdentifier, recordsAffected, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandIdentifier" Type="System.Int32" />
        <Parameter Name="recordsAffected" Type="System.Int32" RefType="out" />
        <Parameter Name="error" Type="System.Exception" RefType="out" />
      </Parameters>
      <Docs>
        <param name="commandIdentifier">To be added.</param>
        <param name="recordsAffected">To be added.</param>
        <param name="error">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeBatching">
      <MemberSignature Language="C#" Value="protected override void InitializeBatching ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InitializeBatching() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataAdapter.InitializeBatching" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InitializeBatching ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InitializeBatching();" />
      <MemberSignature Language="F#" Value="override this.InitializeBatching : unit -&gt; unit" Usage="oracleDataAdapter.InitializeBatching " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertCommand">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleCommand InsertCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.OracleClient.OracleCommand InsertCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleDataAdapter.InsertCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property InsertCommand As OracleCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OracleClient::OracleCommand ^ InsertCommand { System::Data::OracleClient::OracleCommand ^ get(); void set(System::Data::OracleClient::OracleCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InsertCommand : System.Data.OracleClient.OracleCommand with get, set" Usage="System.Data.OracleClient.OracleDataAdapter.InsertCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=7.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="67d0a-170">Obtiene o establece la instrucción SQL o el procedimiento almacenado utilizado para insertar nuevos registros en la base de datos.</span><span class="sxs-lookup"><span data-stu-id="67d0a-170">Gets or sets an SQL statement or stored procedure used to insert new records into the database.</span></span></summary>
        <value><span data-ttu-id="67d0a-171"><see cref="T:System.Data.OracleClient.OracleCommand" /> que se utiliza durante una operación de actualización para insertar en la base de datos los registros correspondientes a las nuevas filas de <see cref="T:System.Data.DataSet" />.</span><span class="sxs-lookup"><span data-stu-id="67d0a-171">An <see cref="T:System.Data.OracleClient.OracleCommand" /> used during an update operation to insert records in the database that correspond to new rows in the <see cref="T:System.Data.DataSet" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67d0a-172">Cuando el <xref:System.Data.OracleClient.OracleDataAdapter.InsertCommand%2A> propiedad se asigna a creada anteriormente <xref:System.Data.OracleClient.OracleCommand> objeto, el <xref:System.Data.OracleClient.OracleCommand> no se clona.</span><span class="sxs-lookup"><span data-stu-id="67d0a-172">When the <xref:System.Data.OracleClient.OracleDataAdapter.InsertCommand%2A> property is assigned to a previously created <xref:System.Data.OracleClient.OracleCommand> object, the <xref:System.Data.OracleClient.OracleCommand> is not cloned.</span></span> <span data-ttu-id="67d0a-173">En su lugar, <xref:System.Data.OracleClient.OracleDataAdapter.InsertCommand%2A> mantiene una referencia a la que se han creado anteriormente <xref:System.Data.OracleClient.OracleCommand>.</span><span class="sxs-lookup"><span data-stu-id="67d0a-173">Instead, <xref:System.Data.OracleClient.OracleDataAdapter.InsertCommand%2A> maintains a reference to the previously created <xref:System.Data.OracleClient.OracleCommand>.</span></span>  
  
 <span data-ttu-id="67d0a-174">Durante una operación de actualización, si <xref:System.Data.OracleClient.OracleDataAdapter.InsertCommand%2A> no está establecida y la clave principal información esté presente en el <xref:System.Data.DataSet>, puede usar el <xref:System.Data.OracleClient.OracleCommandBuilder> clase para generar automáticamente <xref:System.Data.OracleClient.OracleDataAdapter.InsertCommand%2A>y los comandos adicionales necesarios para la conciliación el <xref:System.Data.DataSet> la base de datos.</span><span class="sxs-lookup"><span data-stu-id="67d0a-174">During an update operation, if <xref:System.Data.OracleClient.OracleDataAdapter.InsertCommand%2A> is not set and primary key information is present in the <xref:System.Data.DataSet>, you can use the <xref:System.Data.OracleClient.OracleCommandBuilder> class to automatically generate <xref:System.Data.OracleClient.OracleDataAdapter.InsertCommand%2A>, and additional commands needed to reconcile the <xref:System.Data.DataSet> to the database.</span></span> <span data-ttu-id="67d0a-175">Para ello, establezca el <xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A> propiedad de la <xref:System.Data.OracleClient.OracleDataAdapter>.</span><span class="sxs-lookup"><span data-stu-id="67d0a-175">To do this, set the <xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A> property of the <xref:System.Data.OracleClient.OracleDataAdapter>.</span></span> <span data-ttu-id="67d0a-176">La lógica de generación también requiere información de columna clave esté presente en el <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="67d0a-176">The generation logic also requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="67d0a-177">Para obtener más información, consulte [generar comandos con objetos CommandBuilder](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span><span class="sxs-lookup"><span data-stu-id="67d0a-177">For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="67d0a-178">Si la ejecución de este comando devuelve filas, estas filas se pueden agregar a la <xref:System.Data.DataSet> dependiendo de cómo establecer el <xref:System.Data.OracleClient.OracleCommand.UpdatedRowSource%2A> propiedad de la <xref:System.Data.OracleClient.OracleCommand> objeto.</span><span class="sxs-lookup"><span data-stu-id="67d0a-178">If execution of this command returns rows, these rows may be added to the <xref:System.Data.DataSet> depending upon how you set the <xref:System.Data.OracleClient.OracleCommand.UpdatedRowSource%2A> property of the <xref:System.Data.OracleClient.OracleCommand> object.</span></span>  
  
 <span data-ttu-id="67d0a-179">Al actualizar una columna con el `LONG RAW` tipo de datos, se produce una excepción al especificar un valor de `NULL` en la columna.</span><span class="sxs-lookup"><span data-stu-id="67d0a-179">When you update a column with the `LONG RAW` data type, an exception is thrown when you enter a value of `NULL` in the column.</span></span> <span data-ttu-id="67d0a-180">Oracle `LONG RAW` tipo de datos es un tipo en desuso en Oracle versión 8.0.</span><span class="sxs-lookup"><span data-stu-id="67d0a-180">The Oracle `LONG RAW` data type is a deprecated type in Oracle version 8.0.</span></span> <span data-ttu-id="67d0a-181">Para evitar este error, use la `BLOB` en lugar del tipo de datos `LONG RAW`.</span><span class="sxs-lookup"><span data-stu-id="67d0a-181">To avoid this error, use the `BLOB` data type instead of `LONG RAW`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="67d0a-182">En el ejemplo siguiente se crea un <xref:System.Data.OracleClient.OracleDataAdapter> y establece el <xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A> y <xref:System.Data.OracleClient.OracleDataAdapter.InsertCommand%2A> propiedades.</span><span class="sxs-lookup"><span data-stu-id="67d0a-182">The following example creates an <xref:System.Data.OracleClient.OracleDataAdapter> and sets the <xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A> and <xref:System.Data.OracleClient.OracleDataAdapter.InsertCommand%2A> properties.</span></span> <span data-ttu-id="67d0a-183">Supone que ya ha creado un <xref:System.Data.OracleClient.OracleConnection> objeto.</span><span class="sxs-lookup"><span data-stu-id="67d0a-183">It assumes you have already created an <xref:System.Data.OracleClient.OracleConnection> object.</span></span>  
  
```vb  
Public Shared Function CreateCustomerAdapter(conn As OracleConnection) As OracleDataAdapter   
  
  Dim da As OracleDataAdapter = New OracleDataAdapter()  
  Dim cmd As OracleCommand  
  
  ' Create the SelectCommand.  
  
  cmd = New OracleCommand("SELECT * FROM Dept " & _  
                       "WHERE DName = :pDName AND Loc = :pLoc", conn)  
  
  cmd.Parameters.Add("pDName", OracleType.NVarChar, 14)  
  cmd.Parameters.Add("pLoc", OracleType.NVarChar, 13)  
  
  da.SelectCommand = cmd  
  
  ' Create the InsertCommand.  
  
  cmd = New OracleCommand("INSERT INTO Dept (DeptNo, DName) " & _  
                       "VALUES (:pDeptNo, :pDName)", conn)  
  
  cmd.Parameters.Add("pDeptNo", OracleType.Number, 2, "DeptNo")  
  cmd.Parameters.Add("pDName", OracleType.NVarChar, 14, "DName")  
  
  da.InsertCommand = cmd  
  
  Return da  
End Function  
```  
  
```csharp  
public static OracleDataAdapter CreateCustomerAdapter(OracleConnection conn)  
{  
  OracleDataAdapter da = new OracleDataAdapter();  
  OracleCommand cmd;  
  
  // Create the SelectCommand.  
  
  cmd = new OracleCommand("SELECT * FROM Dept " +  
                       "WHERE DName = :pDName AND Loc = :pLoc", conn);  
  
  cmd.Parameters.Add("pDName", OracleType.NVarChar, 14);  
  cmd.Parameters.Add("pLoc", OracleType.NVarChar, 13);  
  
  da.SelectCommand = cmd;  
  
  // Create the InsertCommand.  
  
  cmd = new OracleCommand("INSERT INTO Dept (DeptNo, DName) " +  
                       "VALUES (:pDeptNo, :pDName)", conn);  
  
  cmd.Parameters.Add("pDeptNo", OracleType.Number, 2, "DeptNo");  
  cmd.Parameters.Add("pDName", OracleType.NVarChar, 14, "DName");  
  
  da.InsertCommand = cmd;  
  
  return da;  
}  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md"><span data-ttu-id="67d0a-184">Recuperar y modificar datos en ADO.NET</span><span class="sxs-lookup"><span data-stu-id="67d0a-184">Retrieving and Modifying Data in ADO.NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OnRowUpdated">
      <MemberSignature Language="C#" Value="protected override void OnRowUpdated (System.Data.Common.RowUpdatedEventArgs value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnRowUpdated(class System.Data.Common.RowUpdatedEventArgs value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnRowUpdated (value As RowUpdatedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnRowUpdated(System::Data::Common::RowUpdatedEventArgs ^ value);" />
      <MemberSignature Language="F#" Value="override this.OnRowUpdated : System.Data.Common.RowUpdatedEventArgs -&gt; unit" Usage="oracleDataAdapter.OnRowUpdated value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.RowUpdatedEventArgs" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRowUpdating">
      <MemberSignature Language="C#" Value="protected override void OnRowUpdating (System.Data.Common.RowUpdatingEventArgs value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnRowUpdating(class System.Data.Common.RowUpdatingEventArgs value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnRowUpdating (value As RowUpdatingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnRowUpdating(System::Data::Common::RowUpdatingEventArgs ^ value);" />
      <MemberSignature Language="F#" Value="override this.OnRowUpdating : System.Data.Common.RowUpdatingEventArgs -&gt; unit" Usage="oracleDataAdapter.OnRowUpdating value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.RowUpdatingEventArgs" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RowUpdated">
      <MemberSignature Language="C#" Value="public event System.Data.OracleClient.OracleRowUpdatedEventHandler RowUpdated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.OracleClient.OracleRowUpdatedEventHandler RowUpdated" />
      <MemberSignature Language="DocId" Value="E:System.Data.OracleClient.OracleDataAdapter.RowUpdated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowUpdated As OracleRowUpdatedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::OracleClient::OracleRowUpdatedEventHandler ^ RowUpdated;" />
      <MemberSignature Language="F#" Value="member this.RowUpdated : System.Data.OracleClient.OracleRowUpdatedEventHandler " Usage="member this.RowUpdated : System.Data.OracleClient.OracleRowUpdatedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleRowUpdatedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="67d0a-185">Se produce durante una operación de actualización después de que se ejecute un comando en la base de datos.</span><span class="sxs-lookup"><span data-stu-id="67d0a-185">Occurs during an update operation after a command is executed against the database.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67d0a-186">Cuando se usa el `Update` método, hay dos eventos que se producen por cada fila de datos actualizada.</span><span class="sxs-lookup"><span data-stu-id="67d0a-186">When using the `Update` method, there are two events that occur per data row updated.</span></span> <span data-ttu-id="67d0a-187">El orden de ejecución es como sigue:</span><span class="sxs-lookup"><span data-stu-id="67d0a-187">The order of execution is as follows:</span></span>  
  
1.  <span data-ttu-id="67d0a-188">Los valores de la <xref:System.Data.DataRow> se mueven a los valores de parámetro.</span><span class="sxs-lookup"><span data-stu-id="67d0a-188">The values in the <xref:System.Data.DataRow> are moved to the parameter values.</span></span>  
  
2.  <span data-ttu-id="67d0a-189">Se genera el evento `OnRowUpdating`.</span><span class="sxs-lookup"><span data-stu-id="67d0a-189">The `OnRowUpdating` event is raised.</span></span>  
  
3.  <span data-ttu-id="67d0a-190">Ejecuta el comando.</span><span class="sxs-lookup"><span data-stu-id="67d0a-190">The command executes.</span></span>  
  
4.  <span data-ttu-id="67d0a-191">Si el `UpdateRowSource` enumeración está establecida en `FirstReturnedRecord`, el primer resultado devuelto se coloca en el **DataRow**.</span><span class="sxs-lookup"><span data-stu-id="67d0a-191">If the `UpdateRowSource` enumeration is set to `FirstReturnedRecord`, the first returned result is placed in the **DataRow**.</span></span>  
  
5.  <span data-ttu-id="67d0a-192">Si hay parámetros de salida, se colocan en el **DataRow**.</span><span class="sxs-lookup"><span data-stu-id="67d0a-192">If there are output parameters, they are placed in the **DataRow**.</span></span>  
  
6.  <span data-ttu-id="67d0a-193">Se genera el evento `OnRowUpdated`.</span><span class="sxs-lookup"><span data-stu-id="67d0a-193">The `OnRowUpdated` event is raised.</span></span>  
  
7.  <span data-ttu-id="67d0a-194">Se llama a `AcceptChanges`.</span><span class="sxs-lookup"><span data-stu-id="67d0a-194">`AcceptChanges` is called.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RowUpdating">
      <MemberSignature Language="C#" Value="public event System.Data.OracleClient.OracleRowUpdatingEventHandler RowUpdating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.OracleClient.OracleRowUpdatingEventHandler RowUpdating" />
      <MemberSignature Language="DocId" Value="E:System.Data.OracleClient.OracleDataAdapter.RowUpdating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowUpdating As OracleRowUpdatingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::OracleClient::OracleRowUpdatingEventHandler ^ RowUpdating;" />
      <MemberSignature Language="F#" Value="member this.RowUpdating : System.Data.OracleClient.OracleRowUpdatingEventHandler " Usage="member this.RowUpdating : System.Data.OracleClient.OracleRowUpdatingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleRowUpdatingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="67d0a-195">Se produce durante el método <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />, antes de que se ejecute un comando en el origen de datos.</span><span class="sxs-lookup"><span data-stu-id="67d0a-195">Occurs during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> before a command is executed against the data source.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67d0a-196">Cuando se usa el `Update` método, hay dos eventos que se producen por cada fila de datos actualizada.</span><span class="sxs-lookup"><span data-stu-id="67d0a-196">When using the `Update` method, there are two events that occur per data row updated.</span></span> <span data-ttu-id="67d0a-197">El orden de ejecución es como sigue:</span><span class="sxs-lookup"><span data-stu-id="67d0a-197">The order of execution is as follows:</span></span>  
  
1.  <span data-ttu-id="67d0a-198">Los valores de la <xref:System.Data.DataRow> se mueven a los valores de parámetro.</span><span class="sxs-lookup"><span data-stu-id="67d0a-198">The values in the <xref:System.Data.DataRow> are moved to the parameter values.</span></span>  
  
2.  <span data-ttu-id="67d0a-199">Se genera el evento `OnRowUpdating`.</span><span class="sxs-lookup"><span data-stu-id="67d0a-199">The `OnRowUpdating` event is raised.</span></span>  
  
3.  <span data-ttu-id="67d0a-200">Ejecuta el comando.</span><span class="sxs-lookup"><span data-stu-id="67d0a-200">The command executes.</span></span>  
  
4.  <span data-ttu-id="67d0a-201">Si el `UpdateRowSource` enumeración está establecida en `FirstReturnedRecord`, el primer resultado devuelto se coloca en el **DataRow**.</span><span class="sxs-lookup"><span data-stu-id="67d0a-201">If the `UpdateRowSource` enumeration is set to `FirstReturnedRecord`, the first returned result is placed in the **DataRow**.</span></span>  
  
5.  <span data-ttu-id="67d0a-202">Si hay parámetros de salida, se colocan en el **DataRow**.</span><span class="sxs-lookup"><span data-stu-id="67d0a-202">If there are output parameters, they are placed in the **DataRow**.</span></span>  
  
6.  <span data-ttu-id="67d0a-203">Se genera el evento `OnRowUpdated`.</span><span class="sxs-lookup"><span data-stu-id="67d0a-203">The `OnRowUpdated` event is raised.</span></span>  
  
7.  <span data-ttu-id="67d0a-204">Se llama a `AcceptChanges`.</span><span class="sxs-lookup"><span data-stu-id="67d0a-204">`AcceptChanges` is called.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectCommand">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleCommand SelectCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.OracleClient.OracleCommand SelectCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleDataAdapter.SelectCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectCommand As OracleCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OracleClient::OracleCommand ^ SelectCommand { System::Data::OracleClient::OracleCommand ^ get(); void set(System::Data::OracleClient::OracleCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectCommand : System.Data.OracleClient.OracleCommand with get, set" Usage="System.Data.OracleClient.OracleDataAdapter.SelectCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=7.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="67d0a-205">Obtiene o establece la instrucción SQL o el procedimiento almacenado utilizado para seleccionar registros de la base de datos.</span><span class="sxs-lookup"><span data-stu-id="67d0a-205">Gets or sets an SQL statement or stored procedure used to select records in the database.</span></span></summary>
        <value><span data-ttu-id="67d0a-206"><see cref="T:System.Data.OracleClient.OracleCommand" /> que se utiliza durante una operación de relleno para seleccionar registros de la base de datos y colocarlos en <see cref="T:System.Data.DataSet" />.</span><span class="sxs-lookup"><span data-stu-id="67d0a-206">An <see cref="T:System.Data.OracleClient.OracleCommand" /> that is used during a fill operation to select records from database for placement in the <see cref="T:System.Data.DataSet" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67d0a-207">Cuando <xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A> se asigna a creada anteriormente <xref:System.Data.OracleClient.OracleCommand>, el <xref:System.Data.OracleClient.OracleCommand> no se clona.</span><span class="sxs-lookup"><span data-stu-id="67d0a-207">When <xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A> is assigned to a previously created <xref:System.Data.OracleClient.OracleCommand>, the <xref:System.Data.OracleClient.OracleCommand> is not cloned.</span></span> <span data-ttu-id="67d0a-208">En su lugar, el <xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A> mantiene una referencia a la que se han creado anteriormente <xref:System.Data.OracleClient.OracleCommand> objeto.</span><span class="sxs-lookup"><span data-stu-id="67d0a-208">Instead, the <xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A> maintains a reference to the previously created <xref:System.Data.OracleClient.OracleCommand> object.</span></span>  
  
 <span data-ttu-id="67d0a-209">Si <xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A> no devuelve ninguna fila, no hay tablas se agregan a la **DataSet**, y no se genera ninguna excepción.</span><span class="sxs-lookup"><span data-stu-id="67d0a-209">If <xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A> does not return any rows, no tables are added to the **DataSet**, and no exception is raised.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="67d0a-210">En el ejemplo siguiente se crea un <xref:System.Data.OracleClient.OracleDataAdapter> y establece el <xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A> y <xref:System.Data.OracleClient.OracleDataAdapter.InsertCommand%2A> propiedades.</span><span class="sxs-lookup"><span data-stu-id="67d0a-210">The following example creates an <xref:System.Data.OracleClient.OracleDataAdapter> and sets the <xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A> and <xref:System.Data.OracleClient.OracleDataAdapter.InsertCommand%2A> properties.</span></span> <span data-ttu-id="67d0a-211">Supone que ya ha creado un <xref:System.Data.OracleClient.OracleConnection> objeto.</span><span class="sxs-lookup"><span data-stu-id="67d0a-211">It assumes you have already created an <xref:System.Data.OracleClient.OracleConnection> object.</span></span>  
  
```vb  
Public Shared Function CreateCustomerAdapter(conn As OracleConnection) As OracleDataAdapter   
  
  Dim da As OracleDataAdapter = New OracleDataAdapter()  
  Dim cmd As OracleCommand  
  
  ' Create the SelectCommand.  
  
  cmd = New OracleCommand("SELECT * FROM Dept " & _  
                       "WHERE DName = :pDName AND Loc = :pLoc", conn)  
  
  cmd.Parameters.Add("pDName", OracleType.NVarChar, 14)  
  cmd.Parameters.Add("pLoc", OracleType.NVarChar, 13)  
  
  da.SelectCommand = cmd  
  
  ' Create the InsertCommand.  
  
  cmd = New OracleCommand("INSERT INTO Dept (DeptNo, DName) " & _  
                       "VALUES (pDeptNo, pDName)", conn)  
  
  cmd.Parameters.Add("pDeptNo", OracleType.Number, 2, "DeptNo")  
  cmd.Parameters.Add("pDName", OracleType.NVarChar, 14, "DName")  
  
  da.InsertCommand = cmd  
  
  Return da  
End Function  
```  
  
```csharp  
public static OracleDataAdapter CreateCustomerAdapter(OracleConnection conn)  
{  
  OracleDataAdapter da = new OracleDataAdapter();  
  OracleCommand cmd;  
  
  // Create the SelectCommand.  
  
  cmd = new OracleCommand("SELECT * FROM Dept " +  
                       "WHERE DName = :pDName AND Loc = :pLoc", conn);  
  
  cmd.Parameters.Add("pDName", OracleType.NVarChar, 14);  
  cmd.Parameters.Add("pLoc", OracleType.NVarChar, 13);  
  
  da.SelectCommand = cmd;  
  
  // Create the InsertCommand.  
  
  cmd = new OracleCommand("INSERT INTO Dept (DeptNo, DName) " +  
                       "VALUES (:pDeptNo, :pDName)", conn);  
  
  cmd.Parameters.Add("pDeptNo", OracleType.Number, 2, "DeptNo");  
  cmd.Parameters.Add("pDName", OracleType.NVarChar, 14, "DName");  
  
  da.InsertCommand = cmd;  
  
  return da;  
}  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md"><span data-ttu-id="67d0a-212">Recuperar y modificar datos en ADO.NET</span><span class="sxs-lookup"><span data-stu-id="67d0a-212">Retrieving and Modifying Data in ADO.NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.DeleteCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.DeleteCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.DeleteCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleDataAdapter.System#Data#IDbDataAdapter#DeleteCommand" />
      <MemberSignature Language="VB.NET" Value=" Property DeleteCommand As IDbCommand Implements IDbDataAdapter.DeleteCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System::Data::IDbDataAdapter::DeleteCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Data.IDbDataAdapter.DeleteCommand" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.DeleteCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="67d0a-213">Para obtener una descripción de este miembro, vea <see cref="P:System.Data.IDbDataAdapter.DeleteCommand" />.</span><span class="sxs-lookup"><span data-stu-id="67d0a-213">For a description of this member, see <see cref="P:System.Data.IDbDataAdapter.DeleteCommand" />.</span></span></summary>
        <value><span data-ttu-id="67d0a-214">Cadena que representa el comando.</span><span class="sxs-lookup"><span data-stu-id="67d0a-214">A string representing the command.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67d0a-215">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="67d0a-215">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="67d0a-216">Solo se puede utilizar cuando la instancia de <xref:System.Data.OracleClient.OracleDataAdapter> se convierte en una interfaz <xref:System.Data.IDbDataAdapter>.</span><span class="sxs-lookup"><span data-stu-id="67d0a-216">It can be used only when the <xref:System.Data.OracleClient.OracleDataAdapter> instance is cast to an <xref:System.Data.IDbDataAdapter> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.InsertCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.InsertCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.InsertCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleDataAdapter.System#Data#IDbDataAdapter#InsertCommand" />
      <MemberSignature Language="VB.NET" Value=" Property InsertCommand As IDbCommand Implements IDbDataAdapter.InsertCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System::Data::IDbDataAdapter::InsertCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Data.IDbDataAdapter.InsertCommand" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.InsertCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="67d0a-217">Para obtener una descripción de este miembro, vea <see cref="P:System.Data.IDbDataAdapter.InsertCommand" />.</span><span class="sxs-lookup"><span data-stu-id="67d0a-217">For a description of this member, see <see cref="P:System.Data.IDbDataAdapter.InsertCommand" />.</span></span></summary>
        <value><span data-ttu-id="67d0a-218">Cadena que representa el comando.</span><span class="sxs-lookup"><span data-stu-id="67d0a-218">A string representing the command.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67d0a-219">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="67d0a-219">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="67d0a-220">Solo se puede utilizar cuando la instancia de <xref:System.Data.OracleClient.OracleDataAdapter> se convierte en una interfaz <xref:System.Data.IDbDataAdapter>.</span><span class="sxs-lookup"><span data-stu-id="67d0a-220">It can be used only when the <xref:System.Data.OracleClient.OracleDataAdapter> instance is cast to an <xref:System.Data.IDbDataAdapter> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.SelectCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.SelectCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.SelectCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleDataAdapter.System#Data#IDbDataAdapter#SelectCommand" />
      <MemberSignature Language="VB.NET" Value=" Property SelectCommand As IDbCommand Implements IDbDataAdapter.SelectCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System::Data::IDbDataAdapter::SelectCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Data.IDbDataAdapter.SelectCommand" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.SelectCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="67d0a-221">Para obtener una descripción de este miembro, vea <see cref="P:System.Data.IDbDataAdapter.SelectCommand" />.</span><span class="sxs-lookup"><span data-stu-id="67d0a-221">For a description of this member, see <see cref="P:System.Data.IDbDataAdapter.SelectCommand" />.</span></span></summary>
        <value><span data-ttu-id="67d0a-222">Cadena que representa el comando.</span><span class="sxs-lookup"><span data-stu-id="67d0a-222">A string representing the command.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67d0a-223">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="67d0a-223">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="67d0a-224">Solo se puede utilizar cuando la instancia de <xref:System.Data.OracleClient.OracleDataAdapter> se convierte en una interfaz <xref:System.Data.IDbDataAdapter>.</span><span class="sxs-lookup"><span data-stu-id="67d0a-224">It can be used only when the <xref:System.Data.OracleClient.OracleDataAdapter> instance is cast to an <xref:System.Data.IDbDataAdapter> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.UpdateCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.UpdateCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.UpdateCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleDataAdapter.System#Data#IDbDataAdapter#UpdateCommand" />
      <MemberSignature Language="VB.NET" Value=" Property UpdateCommand As IDbCommand Implements IDbDataAdapter.UpdateCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System::Data::IDbDataAdapter::UpdateCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Data.IDbDataAdapter.UpdateCommand" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.UpdateCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="67d0a-225">Para obtener una descripción de este miembro, vea <see cref="P:System.Data.IDbDataAdapter.UpdateCommand" />.</span><span class="sxs-lookup"><span data-stu-id="67d0a-225">For a description of this member, see <see cref="P:System.Data.IDbDataAdapter.UpdateCommand" />.</span></span></summary>
        <value><span data-ttu-id="67d0a-226">Cadena que representa el comando.</span><span class="sxs-lookup"><span data-stu-id="67d0a-226">A string representing the command.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67d0a-227">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="67d0a-227">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="67d0a-228">Solo se puede utilizar cuando la instancia de <xref:System.Data.OracleClient.OracleDataAdapter> se convierte en una interfaz <xref:System.Data.IDbDataAdapter>.</span><span class="sxs-lookup"><span data-stu-id="67d0a-228">It can be used only when the <xref:System.Data.OracleClient.OracleDataAdapter> instance is cast to an <xref:System.Data.IDbDataAdapter> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataAdapter.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="67d0a-229">Para obtener una descripción de este miembro, vea <see cref="M:System.ICloneable.Clone" />.</span><span class="sxs-lookup"><span data-stu-id="67d0a-229">For a description of this member, see <see cref="M:System.ICloneable.Clone" />.</span></span></summary>
        <returns><span data-ttu-id="67d0a-230">Nuevo objeto que es copia de esta instancia.</span><span class="sxs-lookup"><span data-stu-id="67d0a-230">A new object that is a copy of this instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67d0a-231">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="67d0a-231">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="67d0a-232">Solo se puede utilizar cuando la instancia de <xref:System.Data.OracleClient.OracleDataAdapter> se convierte en una interfaz <xref:System.ICloneable>.</span><span class="sxs-lookup"><span data-stu-id="67d0a-232">It can be used only when the <xref:System.Data.OracleClient.OracleDataAdapter> instance is cast to an <xref:System.ICloneable> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TerminateBatching">
      <MemberSignature Language="C#" Value="protected override void TerminateBatching ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TerminateBatching() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataAdapter.TerminateBatching" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TerminateBatching ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TerminateBatching();" />
      <MemberSignature Language="F#" Value="override this.TerminateBatching : unit -&gt; unit" Usage="oracleDataAdapter.TerminateBatching " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateBatchSize">
      <MemberSignature Language="C#" Value="public override int UpdateBatchSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 UpdateBatchSize" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleDataAdapter.UpdateBatchSize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property UpdateBatchSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int UpdateBatchSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateBatchSize : int with get, set" Usage="System.Data.OracleClient.OracleDataAdapter.UpdateBatchSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="67d0a-233">Obtiene o establece un valor que habilita o deshabilita la compatibilidad con el procesamiento por lotes, y especifica el número de comandos que se pueden ejecutar en un lote.</span><span class="sxs-lookup"><span data-stu-id="67d0a-233">Gets or sets a value that enables or disables batch processing support, and specifies the number of commands that can be executed in a batch.</span></span></summary>
        <value><span data-ttu-id="67d0a-234">Número de filas que se van a procesar por lote.</span><span class="sxs-lookup"><span data-stu-id="67d0a-234">The number of rows to process per batch.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="67d0a-235">Valor:</span><span class="sxs-lookup"><span data-stu-id="67d0a-235">Value:</span></span> 
 </term><description> <span data-ttu-id="67d0a-236">Efecto:</span><span class="sxs-lookup"><span data-stu-id="67d0a-236">Effect:</span></span> 
 </description></listheader><item><term> <span data-ttu-id="67d0a-237">0</span><span class="sxs-lookup"><span data-stu-id="67d0a-237">0</span></span> 
 </term><description> <span data-ttu-id="67d0a-238">No hay límite para el tamaño de lotes.</span><span class="sxs-lookup"><span data-stu-id="67d0a-238">There is no limit on the batch size.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="67d0a-239">1</span><span class="sxs-lookup"><span data-stu-id="67d0a-239">1</span></span> 
 </term><description> <span data-ttu-id="67d0a-240">Deshabilita la actualización por lotes.</span><span class="sxs-lookup"><span data-stu-id="67d0a-240">Disables batch updating.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="67d0a-241">&gt; 1</span><span class="sxs-lookup"><span data-stu-id="67d0a-241">&gt; 1</span></span> 
 </term><description> <span data-ttu-id="67d0a-242">Los cambios se envían utilizando los lotes de las operaciones <see cref="P:System.Data.OracleClient.OracleDataAdapter.UpdateBatchSize" /> a la vez.</span><span class="sxs-lookup"><span data-stu-id="67d0a-242">Changes are sent using batches of <see cref="P:System.Data.OracleClient.OracleDataAdapter.UpdateBatchSize" /> operations at a time.</span></span>  
  
 </description></item></list>  

 <span data-ttu-id="67d0a-243">Si se establece en un valor que no sea 1, todos los comandos asociados a <see cref="T:System.Data.OracleClient.OracleDataAdapter" /> deben tener establecido el valor de su propiedad <see cref="P:System.Data.IDbCommand.UpdatedRowSource" /> en <see langword="None" /> u <see langword="OutputParameters" />.</span><span class="sxs-lookup"><span data-stu-id="67d0a-243">When setting this to a value other than 1 all the commands associated with the <see cref="T:System.Data.OracleClient.OracleDataAdapter" /> have to have their <see cref="P:System.Data.IDbCommand.UpdatedRowSource" /> property set to <see langword="None" /> or <see langword="OutputParameters" />.</span></span> <span data-ttu-id="67d0a-244">De lo contrario, se produce una excepción.</span><span class="sxs-lookup"><span data-stu-id="67d0a-244">An exception is thrown otherwise.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67d0a-245">Use la <xref:System.Data.OracleClient.OracleDataAdapter.UpdateBatchSize%2A> propiedad para actualizar un origen de datos con los cambios de un <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="67d0a-245">Use the <xref:System.Data.OracleClient.OracleDataAdapter.UpdateBatchSize%2A> property to update a data source with changes from a <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="67d0a-246">Esto puede aumentar el rendimiento de la aplicación al reducir el número de idas y vueltas al servidor.</span><span class="sxs-lookup"><span data-stu-id="67d0a-246">This can increase application performance by reducing the number of round-trips to the server.</span></span>  
  
 <span data-ttu-id="67d0a-247">Si se ejecuta un lote demasiado grande, el rendimiento podría verse afectado.</span><span class="sxs-lookup"><span data-stu-id="67d0a-247">Executing an extremely large batch could decrease performance.</span></span> <span data-ttu-id="67d0a-248">Por lo tanto, se debe comprobar la configuración de tamaño de lote óptimo antes de implementar la aplicación.</span><span class="sxs-lookup"><span data-stu-id="67d0a-248">Therefore, you should test for the optimum batch size setting before you implement your application.</span></span>  
  
 <span data-ttu-id="67d0a-249">Un <xref:System.ArgumentOutOfRangeException> se produce si el valor se establece en un número menor que cero.</span><span class="sxs-lookup"><span data-stu-id="67d0a-249">An <xref:System.ArgumentOutOfRangeException> is thrown if the value is set to a number less than zero.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md"><span data-ttu-id="67d0a-250">Recuperar y modificar datos en ADO.NET</span><span class="sxs-lookup"><span data-stu-id="67d0a-250">Retrieving and Modifying Data in ADO.NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="UpdateCommand">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleCommand UpdateCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.OracleClient.OracleCommand UpdateCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleDataAdapter.UpdateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateCommand As OracleCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OracleClient::OracleCommand ^ UpdateCommand { System::Data::OracleClient::OracleCommand ^ get(); void set(System::Data::OracleClient::OracleCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateCommand : System.Data.OracleClient.OracleCommand with get, set" Usage="System.Data.OracleClient.OracleDataAdapter.UpdateCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=7.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="67d0a-251">Obtiene o establece la instrucción SQL o el procedimiento almacenado utilizado para actualizar registros de la base de datos.</span><span class="sxs-lookup"><span data-stu-id="67d0a-251">Gets or sets an SQL statement or stored procedure used to update records in the database.</span></span></summary>
        <value><span data-ttu-id="67d0a-252"><see cref="T:System.Data.OracleClient.OracleCommand" /> que se utiliza durante una operación de actualización para actualizar en la base de datos los registros correspondientes a las filas modificadas en <see cref="T:System.Data.DataSet" />.</span><span class="sxs-lookup"><span data-stu-id="67d0a-252">An <see cref="T:System.Data.OracleClient.OracleCommand" /> used during an update operation to update records in the database that correspond to modified rows in the <see cref="T:System.Data.DataSet" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67d0a-253">Cuando <xref:System.Data.OracleClient.OracleDataAdapter.UpdateCommand%2A> se asigna a creada anteriormente <xref:System.Data.OracleClient.OracleCommand>, el <xref:System.Data.OracleClient.OracleCommand> no se clona.</span><span class="sxs-lookup"><span data-stu-id="67d0a-253">When <xref:System.Data.OracleClient.OracleDataAdapter.UpdateCommand%2A> is assigned to a previously created <xref:System.Data.OracleClient.OracleCommand>, the <xref:System.Data.OracleClient.OracleCommand> is not cloned.</span></span> <span data-ttu-id="67d0a-254">En su lugar, el <xref:System.Data.OracleClient.OracleDataAdapter.UpdateCommand%2A> mantiene una referencia a la que se han creado anteriormente <xref:System.Data.OracleClient.OracleCommand> objeto.</span><span class="sxs-lookup"><span data-stu-id="67d0a-254">Instead, the <xref:System.Data.OracleClient.OracleDataAdapter.UpdateCommand%2A> maintains a reference to the previously created <xref:System.Data.OracleClient.OracleCommand> object.</span></span>  
  
 <span data-ttu-id="67d0a-255">Durante una operación de actualización, si <xref:System.Data.OracleClient.OracleDataAdapter.InsertCommand%2A> no está establecida y la clave principal información esté presente en el **DataSet**, puede usar el <xref:System.Data.OracleClient.OracleCommandBuilder> clase para generar automáticamente <xref:System.Data.OracleClient.OracleDataAdapter.InsertCommand%2A>, y los comandos adicionales necesarios para Conciliar el <xref:System.Data.DataSet> a la base de datos.</span><span class="sxs-lookup"><span data-stu-id="67d0a-255">During an update operation, if <xref:System.Data.OracleClient.OracleDataAdapter.InsertCommand%2A> is not set and primary key information is present in the **DataSet**, you can use the <xref:System.Data.OracleClient.OracleCommandBuilder> class to automatically generate <xref:System.Data.OracleClient.OracleDataAdapter.InsertCommand%2A>, and additional commands needed to reconcile the <xref:System.Data.DataSet> to the database.</span></span> <span data-ttu-id="67d0a-256">Para ello, establezca el <xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A> propiedad de la <xref:System.Data.OracleClient.OracleDataAdapter>.</span><span class="sxs-lookup"><span data-stu-id="67d0a-256">To do this, set the <xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A> property of the <xref:System.Data.OracleClient.OracleDataAdapter>.</span></span> <span data-ttu-id="67d0a-257">La lógica de generación también requiere información de columna clave esté presente en el <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="67d0a-257">The generation logic also requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="67d0a-258">Para obtener más información, consulte [generar comandos con objetos CommandBuilder](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span><span class="sxs-lookup"><span data-stu-id="67d0a-258">For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="67d0a-259">Si la ejecución de este comando devuelve filas, estas filas se pueden combinar con el <xref:System.Data.DataSet> dependiendo de cómo establecer el <xref:System.Data.OracleClient.OracleCommand.UpdatedRowSource%2A> propiedad de la <xref:System.Data.OracleClient.OracleCommand> objeto.</span><span class="sxs-lookup"><span data-stu-id="67d0a-259">If execution of this command returns rows, these rows may be merged with the <xref:System.Data.DataSet> depending upon how you set the <xref:System.Data.OracleClient.OracleCommand.UpdatedRowSource%2A> property of the <xref:System.Data.OracleClient.OracleCommand> object.</span></span>  
  
 <span data-ttu-id="67d0a-260">Al actualizar una columna con el `LONG RAW` tipo de datos, se produce una excepción al especificar un valor de `NULL` en la columna.</span><span class="sxs-lookup"><span data-stu-id="67d0a-260">When you update a column with the `LONG RAW` data type, an exception is thrown when you enter a value of `NULL` in the column.</span></span> <span data-ttu-id="67d0a-261">Oracle `LONG RAW` tipo de datos es un tipo en desuso en Oracle versión 8.0.</span><span class="sxs-lookup"><span data-stu-id="67d0a-261">The Oracle `LONG RAW` data type is a deprecated type in Oracle version 8.0.</span></span> <span data-ttu-id="67d0a-262">Para evitar este error, use la `BLOB` en lugar del tipo de datos `LONG RAW`.</span><span class="sxs-lookup"><span data-stu-id="67d0a-262">To avoid this error, use the `BLOB` data type instead of `LONG RAW`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="67d0a-263">En el ejemplo siguiente se crea un <xref:System.Data.OracleClient.OracleDataAdapter> y establece el <xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A> y <xref:System.Data.OracleClient.OracleDataAdapter.UpdateCommand%2A> propiedades.</span><span class="sxs-lookup"><span data-stu-id="67d0a-263">The following example creates an <xref:System.Data.OracleClient.OracleDataAdapter> and sets the <xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A> and <xref:System.Data.OracleClient.OracleDataAdapter.UpdateCommand%2A> properties.</span></span> <span data-ttu-id="67d0a-264">Supone que ya ha creado un <xref:System.Data.OracleClient.OracleConnection> objeto.</span><span class="sxs-lookup"><span data-stu-id="67d0a-264">It assumes you have already created an <xref:System.Data.OracleClient.OracleConnection> object.</span></span>  
  
```vb  
Public Shared Function CreateCustomerAdapter(conn As OracleConnection) As OracleDataAdapter   
  
  Dim da As OracleDataAdapter = New OracleDataAdapter()  
  Dim cmd As OracleCommand  
  Dim parm As OracleParameter  
  
  ' Create the SelectCommand.  
  
  cmd = New OracleCommand("SELECT * FROM Dept " & _  
                       "WHERE DName = pDName AND Loc = pLoc", conn)  
  
  cmd.Parameters.Add("pDName", OracleType.NVarChar, 14)  
  cmd.Parameters.Add("pLoc", OracleType.NVarChar, 13)  
  
  da.SelectCommand = cmd  
  
  ' Create the UpdateCommand.  
  
  cmd = New OracleCommand("UPDATE Dept SET DeptNo = pDeptNo, DName = pDName " & _  
                       "WHERE DeptNo = poldDeptNo", conn)  
  
  cmd.Parameters.Add("pDeptNo", OracleType.Number, 2, "DeptNo")  
  cmd.Parameters.Add("pDName", OracleType.NVarChar, 14, "DName")  
  
  parm = cmd.Parameters.Add("poldDeptNo", OracleType.Number, 2, "DeptNo")  
  parm.SourceVersion = DataRowVersion.Original  
  
  da.UpdateCommand = cmd  
  
  Return da  
End Function  
```  
  
```csharp  
public static OracleDataAdapter CreateCustomerAdapter(OracleConnection conn)  
{  
  OracleDataAdapter da = new OracleDataAdapter();  
  OracleCommand cmd;  
  OracleParameter parm;  
  
  // Create the SelectCommand.  
  
  cmd = new OracleCommand("SELECT * FROM Dept " +  
                       "WHERE DName = pDName AND Loc = pLoc", conn);  
  
  cmd.Parameters.Add("pDName", OracleType.NVarChar, 14);  
  cmd.Parameters.Add("pLoc", OracleType.NVarChar, 13);  
  
  da.SelectCommand = cmd;  
  
  // Create the UpdateCommand.  
  
  cmd = new OracleCommand("UPDATE Dept SET DeptNo = pDeptNo, DName = pDName " +  
                       "WHERE DeptNo = poldDeptNo", conn);  
  
  cmd.Parameters.Add("pDeptNo", OracleType.Number, 2, "DeptNo");  
  cmd.Parameters.Add("pDName", OracleType.NVarChar, 14, "DName");  
  
  parm = cmd.Parameters.Add("poldDeptNo", OracleType.Number, 2, "DeptNo");  
  parm.SourceVersion = DataRowVersion.Original;  
  
  da.UpdateCommand = cmd;  
  
  return da;  
}  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md"><span data-ttu-id="67d0a-265">Recuperar y modificar datos en ADO.NET</span><span class="sxs-lookup"><span data-stu-id="67d0a-265">Retrieving and Modifying Data in ADO.NET</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
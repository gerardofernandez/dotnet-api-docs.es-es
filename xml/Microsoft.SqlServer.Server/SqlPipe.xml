<Type Name="SqlPipe" FullName="Microsoft.SqlServer.Server.SqlPipe">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f715fd742165d7d4ffbc7cb2e9be3f2dfa6d157e" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37715753" /></Metadata><TypeSignature Language="C#" Value="public sealed class SqlPipe" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SqlPipe extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.SqlServer.Server.SqlPipe" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlPipe" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlPipe sealed" />
  <TypeSignature Language="F#" Value="type SqlPipe = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="7c4b6-101">Permite a los procedimientos almacenados administrados que se ejecutan en un proceso de una base de datos de SQL Server devolver los resultados al llamador.</span><span class="sxs-lookup"><span data-stu-id="7c4b6-101">Allows managed stored procedures running in-process on a SQL Server database to return results back to the caller.</span></span> <span data-ttu-id="7c4b6-102">Esta clase no puede heredarse.</span><span class="sxs-lookup"><span data-stu-id="7c4b6-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c4b6-103">Una instancia de esta clase está disponible para los procedimientos almacenados administrados a través de la <xref:Microsoft.SqlServer.Server.SqlContext.Pipe%2A> propiedad de la <xref:Microsoft.SqlServer.Server.SqlContext> clase.</span><span class="sxs-lookup"><span data-stu-id="7c4b6-103">An instance of this class is made available to managed stored procedures through the <xref:Microsoft.SqlServer.Server.SqlContext.Pipe%2A> property of the <xref:Microsoft.SqlServer.Server.SqlContext> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7c4b6-104">En el ejemplo siguiente se usa <xref:System.Data.SqlClient.SqlConnection> y <xref:System.Data.SqlClient.SqlCommand> para seleccionar las filas de un origen de datos en un procedimiento almacenado.</span><span class="sxs-lookup"><span data-stu-id="7c4b6-104">The following example uses <xref:System.Data.SqlClient.SqlConnection> and <xref:System.Data.SqlClient.SqlCommand> to select rows from a data source in a stored procedure.</span></span> <span data-ttu-id="7c4b6-105">El ejemplo se utiliza un <xref:Microsoft.SqlServer.Server.SqlPipe> para ejecutar el comando y enviar los resultados al cliente.</span><span class="sxs-lookup"><span data-stu-id="7c4b6-105">The example then uses a <xref:Microsoft.SqlServer.Server.SqlPipe> to execute the command and send the results back to the client.</span></span>  
  
 [!code-csharp[DataWorks SqlPipe#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlPipe/CS/source.cs#1)]
 [!code-vb[DataWorks SqlPipe#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlPipe/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ExecuteAndSend">
      <MemberSignature Language="C#" Value="public void ExecuteAndSend (System.Data.SqlClient.SqlCommand command);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ExecuteAndSend(class System.Data.SqlClient.SqlCommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Server.SqlPipe.ExecuteAndSend(System.Data.SqlClient.SqlCommand)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExecuteAndSend (command As SqlCommand)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ExecuteAndSend(System::Data::SqlClient::SqlCommand ^ command);" />
      <MemberSignature Language="F#" Value="member this.ExecuteAndSend : System.Data.SqlClient.SqlCommand -&gt; unit" Usage="sqlPipe.ExecuteAndSend command" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.Data.SqlClient.SqlCommand" />
      </Parameters>
      <Docs>
        <param name="command"><span data-ttu-id="7c4b6-106">Objeto <see cref="T:System.Data.SqlClient.SqlCommand" /> que se va a ejecutar.</span><span class="sxs-lookup"><span data-stu-id="7c4b6-106">The <see cref="T:System.Data.SqlClient.SqlCommand" /> object to be executed.</span></span></param>
        <summary><span data-ttu-id="7c4b6-107">Ejecuta el comando pasado como parámetro y envía los resultados al cliente.</span><span class="sxs-lookup"><span data-stu-id="7c4b6-107">Executes the command passed as a parameter and sends the results to the client.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c4b6-108">Además de los resultados reales, los errores y otros mensajes también se envían directamente al cliente.</span><span class="sxs-lookup"><span data-stu-id="7c4b6-108">In addition to any actual results, other messages and errors are also sent directly to the client.</span></span>  
  
 <span data-ttu-id="7c4b6-109">Los parámetros de salida y valores devueltos no se envían al cliente; están disponibles al llamador, a través de la colección de parámetros del objeto command.</span><span class="sxs-lookup"><span data-stu-id="7c4b6-109">Output parameters and return values are not sent to the client; these are available to the caller, through the parameters collection of the command object.</span></span>  
  
 <span data-ttu-id="7c4b6-110">Si el comando no está enlazado a una conexión en curso, una <xref:System.InvalidOperationException> se produce.</span><span class="sxs-lookup"><span data-stu-id="7c4b6-110">If the command is not bound to an in-process connection, an <xref:System.InvalidOperationException> is thrown.</span></span> <span data-ttu-id="7c4b6-111">Este método no se admite en los comandos enlazados a las conexiones que se establecen fuera del proceso.</span><span class="sxs-lookup"><span data-stu-id="7c4b6-111">This method is not supported on commands bound to out-of-process connections.</span></span>  
  
 <span data-ttu-id="7c4b6-112">Si hay errores en el <xref:System.Data.SqlClient.SqlCommand> objeto que se envió, las excepciones se envían a la canalización, pero también se envía una copia al llamar a código administrado.</span><span class="sxs-lookup"><span data-stu-id="7c4b6-112">If there are errors in the <xref:System.Data.SqlClient.SqlCommand> object that was submitted, exceptions are sent to the pipe, but a copy is also sent to calling managed code.</span></span> <span data-ttu-id="7c4b6-113">Si el código de llamada no detecta la excepción, se propague hacia arriba en la pila para el código de Transact-SQL y aparezca dos veces en la salida.</span><span class="sxs-lookup"><span data-stu-id="7c4b6-113">If the calling code doesn't catch the exception, it will propagate up the stack to the Transact-SQL code and appear in the output twice.</span></span> <span data-ttu-id="7c4b6-114">Si el código de llamada sí detecta la excepción, el consumidor de la canalización seguirán viendo el error, pero no habrá un error duplicada.</span><span class="sxs-lookup"><span data-stu-id="7c4b6-114">If the calling code does catch the exception, the pipe consumer will still see the error, but there will not be a duplicate error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7c4b6-115">En el ejemplo siguiente se usa <xref:System.Data.SqlClient.SqlConnection> y <xref:System.Data.SqlClient.SqlCommand> para seleccionar las filas de un origen de datos en un procedimiento almacenado.</span><span class="sxs-lookup"><span data-stu-id="7c4b6-115">The following example uses <xref:System.Data.SqlClient.SqlConnection> and <xref:System.Data.SqlClient.SqlCommand> to select rows from a data source in a stored procedure.</span></span> <span data-ttu-id="7c4b6-116">El ejemplo se utiliza un <xref:Microsoft.SqlServer.Server.SqlPipe> para ejecutar el comando y enviar los resultados al cliente.</span><span class="sxs-lookup"><span data-stu-id="7c4b6-116">The example then uses a <xref:Microsoft.SqlServer.Server.SqlPipe> to execute the command and send the results back to the client.</span></span>  
  
 [!code-csharp[DataWorks SqlPipe.ExecuteAndSend#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlPipe.ExecuteAndSend/CS/source.cs#1)]
 [!code-vb[DataWorks SqlPipe.ExecuteAndSend#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlPipe.ExecuteAndSend/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7c4b6-117">El valor de <paramref name="command" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7c4b6-117">The <paramref name="command" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7c4b6-118">Este método no se admite en los comandos enlazados a las conexiones que se establecen fuera del proceso.</span><span class="sxs-lookup"><span data-stu-id="7c4b6-118">This method is not supported on commands bound to out-of-process connections.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsSendingResults">
      <MemberSignature Language="C#" Value="public bool IsSendingResults { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSendingResults" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlPipe.IsSendingResults" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSendingResults As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSendingResults { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSendingResults : bool" Usage="Microsoft.SqlServer.Server.SqlPipe.IsSendingResults" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c4b6-119">Obtiene un valor que indica si <see cref="T:Microsoft.SqlServer.Server.SqlPipe" /> está en el modo de devolver al cliente los conjuntos de resultados únicos.</span><span class="sxs-lookup"><span data-stu-id="7c4b6-119">Gets a value that indicates whether the <see cref="T:Microsoft.SqlServer.Server.SqlPipe" /> is in the mode of sending single result sets back to the client.</span></span> <span data-ttu-id="7c4b6-120">Esta propiedad es de sólo lectura.</span><span class="sxs-lookup"><span data-stu-id="7c4b6-120">This property is read-only.</span></span></summary>
        <value><span data-ttu-id="7c4b6-121">Su valor es <see langword="true" /> si se ha llamado al método <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" /> y <see cref="T:Microsoft.SqlServer.Server.SqlPipe" /> está en el modo de devolver al cliente los conjuntos de resultados únicos; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7c4b6-121"><see langword="true" /> if the <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" /> method has been called and the <see cref="T:Microsoft.SqlServer.Server.SqlPipe" /> is in the mode of sending single result sets back to the client; otherwise <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Send">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7c4b6-122">Envía los resultados directamente al cliente o al consumidor actual de los resultados.</span><span class="sxs-lookup"><span data-stu-id="7c4b6-122">Sends results directly to the client or current output consumer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c4b6-123">El **enviar** método envía datos directamente al cliente o autor de llamada.</span><span class="sxs-lookup"><span data-stu-id="7c4b6-123">The **Send** method sends data straight to the client or caller.</span></span> <span data-ttu-id="7c4b6-124">Suele ser el cliente que consume los resultados de la **canalización** método, pero en el caso de CLR anidado procedimientos almacenados de los consumidores de salida también pueden ser un procedimiento almacenado.</span><span class="sxs-lookup"><span data-stu-id="7c4b6-124">It is usually the client that consumes the output from the **Pipe** method, but in the case of nested CLR stored procedures the output consumer can also be a stored procedure.</span></span> <span data-ttu-id="7c4b6-125">Por ejemplo, Procedure1 llama <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> con el texto del comando "EXEC Procedure2".</span><span class="sxs-lookup"><span data-stu-id="7c4b6-125">For example, Procedure1 calls <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> with the command text "EXEC Procedure2".</span></span> <span data-ttu-id="7c4b6-126">Procedure2 también es un procedimiento almacenado administrado.</span><span class="sxs-lookup"><span data-stu-id="7c4b6-126">Procedure2 is also a managed stored procedure.</span></span> <span data-ttu-id="7c4b6-127">Si Procedure2 llama ahora a <xref:Microsoft.SqlServer.Server.SqlPipe.Send%2A>, la fila se envía al lector de Procedure1, no al cliente.</span><span class="sxs-lookup"><span data-stu-id="7c4b6-127">If Procedure2 now calls <xref:Microsoft.SqlServer.Server.SqlPipe.Send%2A>, the row is sent to Procedure1's reader, not to the client.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public void Send (Microsoft.SqlServer.Server.SqlDataRecord record);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Send(class Microsoft.SqlServer.Server.SqlDataRecord record) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Server.SqlPipe.Send(Microsoft.SqlServer.Server.SqlDataRecord)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Send (record As SqlDataRecord)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Send(Microsoft::SqlServer::Server::SqlDataRecord ^ record);" />
      <MemberSignature Language="F#" Value="member this.Send : Microsoft.SqlServer.Server.SqlDataRecord -&gt; unit" Usage="sqlPipe.Send record" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="record" Type="Microsoft.SqlServer.Server.SqlDataRecord" />
      </Parameters>
      <Docs>
        <param name="record"><span data-ttu-id="7c4b6-128">Conjunto de resultados de una sola fila enviado al cliente: un objeto <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" />.</span><span class="sxs-lookup"><span data-stu-id="7c4b6-128">The single-row result set sent to the client: a <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" /> object.</span></span></param>
        <summary><span data-ttu-id="7c4b6-129">Envía un conjunto de resultados de una sola fila directamente al cliente o al consumidor actual de los resultados.</span><span class="sxs-lookup"><span data-stu-id="7c4b6-129">Sends a single-row result set directly to the client or current output consumer.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7c4b6-130">El valor de <paramref name="record" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7c4b6-130">The <paramref name="record" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public void Send (System.Data.SqlClient.SqlDataReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Send(class System.Data.SqlClient.SqlDataReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Server.SqlPipe.Send(System.Data.SqlClient.SqlDataReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Send (reader As SqlDataReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Send(System::Data::SqlClient::SqlDataReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.Send : System.Data.SqlClient.SqlDataReader -&gt; unit" Usage="sqlPipe.Send reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.SqlClient.SqlDataReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="7c4b6-131">Conjunto de resultados multifila que se va a enviar al cliente: un objeto <see cref="T:System.Data.SqlClient.SqlDataReader" />.</span><span class="sxs-lookup"><span data-stu-id="7c4b6-131">The multirow result set to be sent to the client: a <see cref="T:System.Data.SqlClient.SqlDataReader" /> object.</span></span></param>
        <summary><span data-ttu-id="7c4b6-132">Envía un conjunto de resultados multifila directamente al cliente o al consumidor actual de los resultados.</span><span class="sxs-lookup"><span data-stu-id="7c4b6-132">Sends a multirow result set directly to the client or current output consumer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c4b6-133">Si el <xref:System.Data.SqlClient.SqlDataReader> objeto pasado como un parámetro tiene columnas ocultas, esas columnas no se propagan al conjunto de resultados al cliente.</span><span class="sxs-lookup"><span data-stu-id="7c4b6-133">If the <xref:System.Data.SqlClient.SqlDataReader> object passed in as a parameter has hidden columns, those columns are not propagated to the result set sent to the client.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7c4b6-134">El valor de <paramref name="reader" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7c4b6-134">The <paramref name="reader" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public void Send (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Send(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Server.SqlPipe.Send(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Send (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Send(System::String ^ message);" />
      <MemberSignature Language="F#" Value="member this.Send : string -&gt; unit" Usage="sqlPipe.Send message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="7c4b6-135">Cadena de mensaje que se va a enviar al cliente.</span><span class="sxs-lookup"><span data-stu-id="7c4b6-135">The message string to be sent to the client.</span></span></param>
        <summary><span data-ttu-id="7c4b6-136">Envía un mensaje de la cadena directamente al cliente o al consumidor actual de los resultados.</span><span class="sxs-lookup"><span data-stu-id="7c4b6-136">Sends a string message directly to the client or current output consumer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c4b6-137">La cadena de mensaje se envía como un mensaje informativo al cliente.</span><span class="sxs-lookup"><span data-stu-id="7c4b6-137">The message string is sent as an informational message to the client.</span></span> <span data-ttu-id="7c4b6-138">Las aplicaciones cliente pueden escuchar los mensajes a través de mecanismos diferentes, dependiendo de lo datos acceso aplicación interfaz de programación (API) que usan.</span><span class="sxs-lookup"><span data-stu-id="7c4b6-138">Client applications can listen to messages through different mechanisms, depending on the data access application programming interface (API) that they use.</span></span> <span data-ttu-id="7c4b6-139">Por ejemplo, si el cliente utiliza ADO.NET, los mensajes se transmiten a través de la <xref:System.Data.SqlClient.SqlConnection.InfoMessage> eventos.</span><span class="sxs-lookup"><span data-stu-id="7c4b6-139">For example, if the client is using ADO.NET, the messages transmit through the <xref:System.Data.SqlClient.SqlConnection.InfoMessage> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7c4b6-140">En el ejemplo siguiente se usa el <xref:Microsoft.SqlServer.Server.SqlPipe.Send%2A> método para enviar una cadena de mensaje directamente al cliente.</span><span class="sxs-lookup"><span data-stu-id="7c4b6-140">The following example uses the <xref:Microsoft.SqlServer.Server.SqlPipe.Send%2A> method to send a message string directly to the client.</span></span>  
  
 [!code-csharp[DataWorks SqlPipe.Send#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlPipe.Send/CS/source.cs#1)]
 [!code-vb[DataWorks SqlPipe.Send#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlPipe.Send/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7c4b6-141"><paramref name="message" /> supera los 4.000 caracteres.</span><span class="sxs-lookup"><span data-stu-id="7c4b6-141">The <paramref name="message" /> is greater than 4,000 characters.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7c4b6-142">El valor de <paramref name="message" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7c4b6-142">The <paramref name="message" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SendResultsEnd">
      <MemberSignature Language="C#" Value="public void SendResultsEnd ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendResultsEnd() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendResultsEnd ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendResultsEnd();" />
      <MemberSignature Language="F#" Value="member this.SendResultsEnd : unit -&gt; unit" Usage="sqlPipe.SendResultsEnd " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7c4b6-143">Marca el fin de un conjunto de resultados y devuelve la instancia de <see cref="T:Microsoft.SqlServer.Server.SqlPipe" /> al estado inicial.</span><span class="sxs-lookup"><span data-stu-id="7c4b6-143">Marks the end of a result set, and returns the <see cref="T:Microsoft.SqlServer.Server.SqlPipe" /> instance back to the initial state.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c4b6-144">Los procedimientos almacenados administrados pueden enviar conjuntos de resultados a los clientes que no están implementando un <xref:System.Data.SqlClient.SqlDataReader>.</span><span class="sxs-lookup"><span data-stu-id="7c4b6-144">Managed stored procedures can send result sets to clients that are not implementing a <xref:System.Data.SqlClient.SqlDataReader>.</span></span> <span data-ttu-id="7c4b6-145">Este método, junto con <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> y <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A>, permite a los procedimientos almacenados enviar conjuntos de resultados personalizados al cliente.</span><span class="sxs-lookup"><span data-stu-id="7c4b6-145">This method, along with <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> and <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A>, allow stored procedures to send custom result sets to the client.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7c4b6-146">En el ejemplo siguiente se crea un nuevo <xref:Microsoft.SqlServer.Server.SqlDataRecord> y su <xref:Microsoft.SqlServer.Server.SqlMetaData>.</span><span class="sxs-lookup"><span data-stu-id="7c4b6-146">The following example creates a new <xref:Microsoft.SqlServer.Server.SqlDataRecord> and its <xref:Microsoft.SqlServer.Server.SqlMetaData>.</span></span> <span data-ttu-id="7c4b6-147">En el ejemplo, a continuación, marca el principio de un conjunto de resultados mediante el <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> método, envía los registros con datos de ejemplo al cliente utilizando el <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> método y marca el final del resultado se establece con el <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> método.</span><span class="sxs-lookup"><span data-stu-id="7c4b6-147">The example then marks the beginning of a result set using the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> method, sends records with example data back to the client using the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> method, and marks the end of the result set with the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> method.</span></span>  
  
 [!code-csharp[DataWorks SqlPipe.SendResultsEnd#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlPipe.SendResultsEnd/CS/source.cs#1)]
 [!code-vb[DataWorks SqlPipe.SendResultsEnd#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlPipe.SendResultsEnd/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7c4b6-148">No se ha llamado previamente al método <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" />.</span><span class="sxs-lookup"><span data-stu-id="7c4b6-148">The <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" /> method was not previously called.</span></span></exception>
        <altmember cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow(Microsoft.SqlServer.Server.SqlDataRecord)" />
        <altmember cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" />
      </Docs>
    </Member>
    <Member MemberName="SendResultsRow">
      <MemberSignature Language="C#" Value="public void SendResultsRow (Microsoft.SqlServer.Server.SqlDataRecord record);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendResultsRow(class Microsoft.SqlServer.Server.SqlDataRecord record) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow(Microsoft.SqlServer.Server.SqlDataRecord)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendResultsRow (record As SqlDataRecord)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendResultsRow(Microsoft::SqlServer::Server::SqlDataRecord ^ record);" />
      <MemberSignature Language="F#" Value="member this.SendResultsRow : Microsoft.SqlServer.Server.SqlDataRecord -&gt; unit" Usage="sqlPipe.SendResultsRow record" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="record" Type="Microsoft.SqlServer.Server.SqlDataRecord" />
      </Parameters>
      <Docs>
        <param name="record"><span data-ttu-id="7c4b6-149">Objeto <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" /> con los valores de columna de la fila que se va a enviar al cliente.</span><span class="sxs-lookup"><span data-stu-id="7c4b6-149">A <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" /> object with the column values for the row to be sent to the client.</span></span> <span data-ttu-id="7c4b6-150">El esquema del registro debe coincidir con el esquema descrito por los metadatos del objeto <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" /> pasados al método <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" />.</span><span class="sxs-lookup"><span data-stu-id="7c4b6-150">The schema for the record must match the schema described by the metadata of the <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" /> passed to the <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" /> method.</span></span></param>
        <summary><span data-ttu-id="7c4b6-151">Devuelve al cliente una fila de datos única.</span><span class="sxs-lookup"><span data-stu-id="7c4b6-151">Sends a single row of data back to the client.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c4b6-152">Los procedimientos almacenados administrados pueden enviar conjuntos de resultados a los clientes que no están implementando un <xref:System.Data.SqlClient.SqlDataReader>.</span><span class="sxs-lookup"><span data-stu-id="7c4b6-152">Managed stored procedures can send result sets to clients that are not implementing a <xref:System.Data.SqlClient.SqlDataReader>.</span></span> <span data-ttu-id="7c4b6-153">Este método, junto con <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> y <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A>, permite que los procedimientos almacenados enviar conjuntos de resultados personalizados al cliente.</span><span class="sxs-lookup"><span data-stu-id="7c4b6-153">This method, along with <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> and <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A>, allows stored procedures to send custom result sets to the client.</span></span>  
  
 <span data-ttu-id="7c4b6-154">El <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> método envía una sola fila de datos al cliente.</span><span class="sxs-lookup"><span data-stu-id="7c4b6-154">The <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> method sends a single row of data back to the client.</span></span> <span data-ttu-id="7c4b6-155">Filas posteriormente pueden devolverse al autor de llamada mediante una llamada a <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A>, una vez por cada fila que se va a enviar.</span><span class="sxs-lookup"><span data-stu-id="7c4b6-155">Rows can subsequently be returned to the caller by calling <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A>, one time for each row being sent.</span></span> <span data-ttu-id="7c4b6-156">Una vez todas las filas que se ha enviado, una llamada a la <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> método es necesario para marcar el final del conjunto de resultados.</span><span class="sxs-lookup"><span data-stu-id="7c4b6-156">After all the rows have been sent, a call to the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> method is required to mark the end of the result set.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7c4b6-157">En el ejemplo siguiente se crea un nuevo <xref:Microsoft.SqlServer.Server.SqlDataRecord> y su <xref:Microsoft.SqlServer.Server.SqlMetaData>.</span><span class="sxs-lookup"><span data-stu-id="7c4b6-157">The following example creates a new <xref:Microsoft.SqlServer.Server.SqlDataRecord> and its <xref:Microsoft.SqlServer.Server.SqlMetaData>.</span></span> <span data-ttu-id="7c4b6-158">En el ejemplo, a continuación, marca el principio de un conjunto de resultados mediante el <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> método, envía los registros con datos de ejemplo al cliente utilizando el <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> método y marca el final del resultado se establece con el <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> método.</span><span class="sxs-lookup"><span data-stu-id="7c4b6-158">The example then marks the beginning of a result set using the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> method, sends records with example data back to the client using the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> method, and marks the end of the result set with the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> method.</span></span>  
  
 [!code-csharp[DataWorks SqlPipe.SendResultsRow#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlPipe.SendResultsRow/CS/source.cs#1)]
 [!code-vb[DataWorks SqlPipe.SendResultsRow#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlPipe.SendResultsRow/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7c4b6-159">El valor de <paramref name="record" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7c4b6-159">The <paramref name="record" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7c4b6-160">No se ha llamado previamente al método <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" />.</span><span class="sxs-lookup"><span data-stu-id="7c4b6-160">The <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" /> method was not previously called.</span></span></exception>
        <altmember cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" />
        <altmember cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd" />
      </Docs>
    </Member>
    <Member MemberName="SendResultsStart">
      <MemberSignature Language="C#" Value="public void SendResultsStart (Microsoft.SqlServer.Server.SqlDataRecord record);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendResultsStart(class Microsoft.SqlServer.Server.SqlDataRecord record) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendResultsStart (record As SqlDataRecord)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendResultsStart(Microsoft::SqlServer::Server::SqlDataRecord ^ record);" />
      <MemberSignature Language="F#" Value="member this.SendResultsStart : Microsoft.SqlServer.Server.SqlDataRecord -&gt; unit" Usage="sqlPipe.SendResultsStart record" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="record" Type="Microsoft.SqlServer.Server.SqlDataRecord" />
      </Parameters>
      <Docs>
        <param name="record"><span data-ttu-id="7c4b6-161">Objeto <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" /> del que se extraen los metadatos que se utilizan para describir el conjunto de resultados.</span><span class="sxs-lookup"><span data-stu-id="7c4b6-161">A <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" /> object from which metadata is extracted and used to describe the result set.</span></span></param>
        <summary><span data-ttu-id="7c4b6-162">Marca el inicio de un conjunto de resultados que se va a devolver al cliente y utiliza el parámetro de registro para generar los metadatos que describen el conjunto de resultados.</span><span class="sxs-lookup"><span data-stu-id="7c4b6-162">Marks the beginning of a result set to be sent back to the client, and uses the record parameter to construct the metadata that describes the result set.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c4b6-163">Los procedimientos almacenados administrados pueden enviar conjuntos de resultados a los clientes que no están implementando un <xref:System.Data.SqlClient.SqlDataReader>.</span><span class="sxs-lookup"><span data-stu-id="7c4b6-163">Managed stored procedures can send result sets to clients that are not implementing a <xref:System.Data.SqlClient.SqlDataReader>.</span></span> <span data-ttu-id="7c4b6-164">Este método, junto con <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> y <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A>, permite a los procedimientos almacenados enviar conjuntos de resultados personalizados al cliente.</span><span class="sxs-lookup"><span data-stu-id="7c4b6-164">This method, along with <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> and <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A>, allow stored procedures to send custom result sets to the client.</span></span>  
  
 <span data-ttu-id="7c4b6-165">El <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> método marca el principio de un conjunto de resultados y utiliza el parámetro de registro para construir los metadatos que describen el conjunto de resultados.</span><span class="sxs-lookup"><span data-stu-id="7c4b6-165">The <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> method marks the beginning of a result set, and uses the record parameter to construct the metadata that describes the result set.</span></span> <span data-ttu-id="7c4b6-166">Todas las filas subsiguientes, enviadas mediante el <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> método, debe coincidir con la definición de los metadatos.</span><span class="sxs-lookup"><span data-stu-id="7c4b6-166">All the subsequent rows, sent using the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> method, must match that metadata definition.</span></span>  
  
 <span data-ttu-id="7c4b6-167">Tenga en cuenta que al llamar a after <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A>, solo <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> y <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> se puede llamar.</span><span class="sxs-lookup"><span data-stu-id="7c4b6-167">Note that after calling <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A>, only <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> and <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> can be called.</span></span> <span data-ttu-id="7c4b6-168">Cualquier otro método en la misma instancia de <xref:Microsoft.SqlServer.Server.SqlPipe> produce una <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="7c4b6-168">Any other method in the same instance of <xref:Microsoft.SqlServer.Server.SqlPipe> throws an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="7c4b6-169"><xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> establece <xref:Microsoft.SqlServer.Server.SqlPipe> vuelve al estado inicial que se pueden llamar a otros métodos.</span><span class="sxs-lookup"><span data-stu-id="7c4b6-169"><xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> sets <xref:Microsoft.SqlServer.Server.SqlPipe> back to the initial state where other methods can be called.</span></span>  
  
 <span data-ttu-id="7c4b6-170">Una vez el control vuelve a Transact-SQL de ejecución de CLR, no intente usar una variable estática o local inicializada en la memoria CLR.</span><span class="sxs-lookup"><span data-stu-id="7c4b6-170">After control returns to Transact-SQL from CLR execution, do not attempt to use a static or local variable initialized to CLR memory.</span></span> <span data-ttu-id="7c4b6-171">Por ejemplo, no almacene una instancia de un proceso en la clase, por ejemplo `SQLDataRecord`, que se utilizará después de que devuelve el control de CLR.</span><span class="sxs-lookup"><span data-stu-id="7c4b6-171">For example, do not store an instance of an in process class, for example `SQLDataRecord`, which will be used after control returns from CLR.</span></span> <span data-ttu-id="7c4b6-172">Una excepción es el `SQLMetaData` en la clase process.</span><span class="sxs-lookup"><span data-stu-id="7c4b6-172">One exception is the `SQLMetaData` in process class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7c4b6-173">En el ejemplo siguiente se crea un nuevo <xref:Microsoft.SqlServer.Server.SqlDataRecord> y su <xref:Microsoft.SqlServer.Server.SqlMetaData>.</span><span class="sxs-lookup"><span data-stu-id="7c4b6-173">The following example creates a new <xref:Microsoft.SqlServer.Server.SqlDataRecord> and its <xref:Microsoft.SqlServer.Server.SqlMetaData>.</span></span> <span data-ttu-id="7c4b6-174">En el ejemplo, a continuación, marca el principio de un conjunto de resultados mediante el <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> método, envía los registros con datos de ejemplo al cliente utilizando el <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> método y marca el final del resultado se establece con el <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> método.</span><span class="sxs-lookup"><span data-stu-id="7c4b6-174">The example then marks the beginning of a result set using the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> method, sends records with example data back to the client using the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> method, and marks the end of the result set with the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> method.</span></span>  
  
 [!code-csharp[DataWorks SqlPipe.SendResultsStart#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlPipe.SendResultsStart/CS/source.cs#1)]
 [!code-vb[DataWorks SqlPipe.SendResultsStart#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlPipe.SendResultsStart/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7c4b6-175">El valor de <paramref name="record" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7c4b6-175">The <paramref name="record" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7c4b6-176"><paramref name="record" /> no tiene columnas o no se ha inicializado.</span><span class="sxs-lookup"><span data-stu-id="7c4b6-176">The <paramref name="record" /> has no columns or has not been initialized.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7c4b6-177">Se ha invocado un método distinto de <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow(Microsoft.SqlServer.Server.SqlDataRecord)" /> o <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd" /> después del método <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" />.</span><span class="sxs-lookup"><span data-stu-id="7c4b6-177">A method other than <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow(Microsoft.SqlServer.Server.SqlDataRecord)" /> or <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd" /> was called after the <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" /> method.</span></span></exception>
        <altmember cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow(Microsoft.SqlServer.Server.SqlDataRecord)" />
        <altmember cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd" />
      </Docs>
    </Member>
  </Members>
</Type>
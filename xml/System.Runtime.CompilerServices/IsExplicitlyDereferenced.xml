<Type Name="IsExplicitlyDereferenced" FullName="System.Runtime.CompilerServices.IsExplicitlyDereferenced">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f1b9e7255e4f7e2e5cad5ad153c24605563481a5" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58683762" /></Metadata><TypeSignature Language="C#" Value="public static class IsExplicitlyDereferenced" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit IsExplicitlyDereferenced extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.CompilerServices.IsExplicitlyDereferenced" />
  <TypeSignature Language="VB.NET" Value="Public Class IsExplicitlyDereferenced" />
  <TypeSignature Language="C++ CLI" Value="public ref class IsExplicitlyDereferenced abstract sealed" />
  <TypeSignature Language="F#" Value="type IsExplicitlyDereferenced = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.CompilerServices.VisualC</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="60fbe-101">Indica que un puntero administrado representa un parámetro de puntero dentro de una firma de método.</span><span class="sxs-lookup"><span data-stu-id="60fbe-101">Indicates that a managed pointer represents a pointer parameter within a method signature.</span></span> <span data-ttu-id="60fbe-102">Esta clase no puede heredarse.</span><span class="sxs-lookup"><span data-stu-id="60fbe-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60fbe-103">En C++, los punteros administrados y las referencias administradas se emiten en metadatos como punteros.</span><span class="sxs-lookup"><span data-stu-id="60fbe-103">In C++, managed pointers and managed references are emitted into metadata as pointers.</span></span>  <span data-ttu-id="60fbe-104">Para distinguir entre los dos tipos de metadatos, el compilador de Microsoft C++ aplica este modificador a punteros administrados.</span><span class="sxs-lookup"><span data-stu-id="60fbe-104">To distinguish between the two types in metadata, the Microsoft  C++ compiler applies this modifier to managed pointers.</span></span>  <span data-ttu-id="60fbe-105">No emite ningún modificador en tipos de referencia administrados.</span><span class="sxs-lookup"><span data-stu-id="60fbe-105">It emits no modifier on managed reference types.</span></span>  <span data-ttu-id="60fbe-106">Los compiladores necesitan conocer la sintaxis llamada correcta al importar un método de ámbito de metadatos.</span><span class="sxs-lookup"><span data-stu-id="60fbe-106">Compilers need to know the correct calling syntax when importing a method from metadata scope.</span></span>  <span data-ttu-id="60fbe-107">El <xref:System.Runtime.CompilerServices.IsExplicitlyDereferenced> clase y su asociado, el <xref:System.Runtime.CompilerServices.IsImplicitlyDereferenced> class, eliminar la ambigüedad de los parámetros de referencia de los parámetros de puntero.</span><span class="sxs-lookup"><span data-stu-id="60fbe-107">The <xref:System.Runtime.CompilerServices.IsExplicitlyDereferenced> class and its partner, the <xref:System.Runtime.CompilerServices.IsImplicitlyDereferenced> class, disambiguate reference parameters from pointer parameters.</span></span>  
  
 <span data-ttu-id="60fbe-108">Los compiladores emiten modificadores personalizados dentro de los metadatos para cambiar la forma en que el compilador de just-in-time (JIT) controla los valores cuando el comportamiento predeterminado no es adecuado.</span><span class="sxs-lookup"><span data-stu-id="60fbe-108">Compilers emit custom modifiers within metadata to change the way that the just-in-time (JIT) compiler handles values when the default behavior is not appropriate.</span></span>  <span data-ttu-id="60fbe-109">Cuando el compilador JIT encuentra un modificador personalizado, controla el valor de la manera que especifica el modificador.</span><span class="sxs-lookup"><span data-stu-id="60fbe-109">When the JIT compiler encounters a custom modifier, it handles the value in the way that the modifier specifies.</span></span>  <span data-ttu-id="60fbe-110">Los compiladores pueden modificadores personalizados se aplican a métodos, parámetros y valores devueltos.</span><span class="sxs-lookup"><span data-stu-id="60fbe-110">Compilers can apply custom modifiers to methods, parameters, and return values.</span></span>  <span data-ttu-id="60fbe-111">El compilador JIT debe responder a los modificadores obligatorios, pero puede pasar por alto los modificadores opcionales.</span><span class="sxs-lookup"><span data-stu-id="60fbe-111">The JIT compiler must respond to required modifiers but can ignore optional modifiers.</span></span>  
  
 <span data-ttu-id="60fbe-112">Puede emitir modificadores personalizados en los metadatos mediante una de las técnicas siguientes:</span><span class="sxs-lookup"><span data-stu-id="60fbe-112">You can emit custom modifiers into metadata using one of the following techniques:</span></span>  
  
-   <span data-ttu-id="60fbe-113">Uso de métodos en el <xref:System.Reflection.Emit.TypeBuilder> como clase <xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineField%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A>, y <xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A>.</span><span class="sxs-lookup"><span data-stu-id="60fbe-113">Using methods in the <xref:System.Reflection.Emit.TypeBuilder> class such as <xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineField%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A>, and <xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A>.</span></span>  
  
-   <span data-ttu-id="60fbe-114">Generar un archivo de instrucciones de lenguaje intermedio (MSIL) de Microsoft que contenga llamadas a `modopt` y `modreq`y el ensamblado en el archivo con el [Ilasm.exe (ensamblador de IL)](~/docs/framework/tools/ilasm-exe-il-assembler.md).</span><span class="sxs-lookup"><span data-stu-id="60fbe-114">Generating a Microsoft intermediate language (MSIL) instruction file that contains calls to `modopt` and `modreq`, and assembling the file with the [Ilasm.exe (IL Assembler)](~/docs/framework/tools/ilasm-exe-il-assembler.md).</span></span>  
  
-   <span data-ttu-id="60fbe-115">Uso de la API de reflexión no administrada.</span><span class="sxs-lookup"><span data-stu-id="60fbe-115">Using the unmanaged reflection API.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="60fbe-116">En el ejemplo siguiente se muestra cómo emitir una <xref:System.Runtime.CompilerServices.IsExplicitlyDereferenced> objeto en un ensamblado mediante reflexión.</span><span class="sxs-lookup"><span data-stu-id="60fbe-116">The following example demonstrates how to emit an <xref:System.Runtime.CompilerServices.IsExplicitlyDereferenced> object into an assembly using reflection.</span></span>  
  
 [!code-cpp[Runtime.CompilerServices.IsExplicitlyDereferenced#1](~/samples/snippets/cpp/VS_Snippets_CLR/Runtime.CompilerServices.IsExplicitlyDereferenced/cpp/sample.cpp#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members />
</Type>
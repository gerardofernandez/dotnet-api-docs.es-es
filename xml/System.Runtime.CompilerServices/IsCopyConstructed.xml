<Type Name="IsCopyConstructed" FullName="System.Runtime.CompilerServices.IsCopyConstructed">
  <Metadata><Meta Name="ms.openlocfilehash" Value="38905f8c9832a171a91648224aa150f1b8b76c31" /><Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="10/04/2018" /><Meta Name="ms.locfileid" Value="48737263" /></Metadata><TypeSignature Language="C#" Value="public static class IsCopyConstructed" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit IsCopyConstructed extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.CompilerServices.IsCopyConstructed" />
  <TypeSignature Language="VB.NET" Value="Public Class IsCopyConstructed" />
  <TypeSignature Language="C++ CLI" Value="public ref class IsCopyConstructed abstract sealed" />
  <TypeSignature Language="F#" Value="type IsCopyConstructed = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.CompilerServices.VisualC</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="75294-101">Indica que al copiar valores de este tipo se debe utilizar el constructor de copias que proporciona el tipo.</span><span class="sxs-lookup"><span data-stu-id="75294-101">Indicates that any copying of values of this type must use the copy constructor provided by the type.</span></span>  <span data-ttu-id="75294-102">Esta clase no puede heredarse.</span><span class="sxs-lookup"><span data-stu-id="75294-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75294-103">Cualquier tipo modificado por la <xref:System.Runtime.CompilerServices.IsCopyConstructed> clase debe implementar un método denominado `MarshalCopy` que llama al constructor de copias nativo.</span><span class="sxs-lookup"><span data-stu-id="75294-103">Any type modified by the <xref:System.Runtime.CompilerServices.IsCopyConstructed> class must implement a method named `MarshalCopy` that calls the native copy constructor.</span></span>  
  
 <span data-ttu-id="75294-104">Cualquier tipo de C++ nativo que se emite en metadatos con constructores de copias debe tener los métodos llamados por el serializador cuando se copian los valores a través del límite de cálculo de referencias.</span><span class="sxs-lookup"><span data-stu-id="75294-104">Any native C++ type that is emitted into metadata with copy constructors needs to have those methods called by the marshaler when copying values across the marshaling boundary.</span></span>  <span data-ttu-id="75294-105">El compilador de Microsoft C++ modifica todos los tipos de C++ nativos en los parámetros de método y devolver tipos que tienen este modificador para desencadenar este comportamiento en el código de serialización.</span><span class="sxs-lookup"><span data-stu-id="75294-105">The Microsoft C++ compiler modifies all native C++ types in method parameters and return types that have this modifier to trigger this behavior in the marshaling code.</span></span>  
  
 <span data-ttu-id="75294-106">Los compiladores emiten modificadores personalizados dentro de los metadatos para cambiar la forma en que el compilador de just-in-time (JIT) controla los valores cuando el comportamiento predeterminado no es adecuado.</span><span class="sxs-lookup"><span data-stu-id="75294-106">Compilers emit custom modifiers within metadata to change the way that the just-in-time (JIT) compiler handles values when the default behavior is not appropriate.</span></span>  <span data-ttu-id="75294-107">Cuando el compilador JIT encuentra un modificador personalizado, controla el valor de la manera que especifica el modificador.</span><span class="sxs-lookup"><span data-stu-id="75294-107">When the JIT compiler encounters a custom modifier, it handles the value in the way that the modifier specifies.</span></span>  <span data-ttu-id="75294-108">Los compiladores pueden modificadores personalizados se aplican a métodos, parámetros y valores devueltos.</span><span class="sxs-lookup"><span data-stu-id="75294-108">Compilers can apply custom modifiers to methods, parameters, and return values.</span></span>  <span data-ttu-id="75294-109">El compilador JIT debe responder a los modificadores obligatorios, pero puede pasar por alto los modificadores opcionales.</span><span class="sxs-lookup"><span data-stu-id="75294-109">The JIT compiler must respond to required modifiers but can ignore optional modifiers.</span></span>  
  
 <span data-ttu-id="75294-110">Puede emitir modificadores personalizados en los metadatos mediante una de las técnicas siguientes:</span><span class="sxs-lookup"><span data-stu-id="75294-110">You can emit custom modifiers into metadata using one of the following techniques:</span></span>  
  
-   <span data-ttu-id="75294-111">Uso de métodos en el <xref:System.Reflection.Emit.TypeBuilder> como clase <xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineField%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A>, y <xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A>.</span><span class="sxs-lookup"><span data-stu-id="75294-111">Using methods in the <xref:System.Reflection.Emit.TypeBuilder> class such as <xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineField%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A>, and <xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A>.</span></span>  
  
-   <span data-ttu-id="75294-112">Generar un archivo de instrucciones de lenguaje intermedio (MSIL) de Microsoft que contenga llamadas a `modopt` y `modreq`y el ensamblado en el archivo con el [Ilasm.exe (ensamblador de IL)](~/docs/framework/tools/ilasm-exe-il-assembler.md).</span><span class="sxs-lookup"><span data-stu-id="75294-112">Generating a Microsoft intermediate language (MSIL) instruction file that contains calls to `modopt` and `modreq`, and assembling the file with the [Ilasm.exe (IL Assembler)](~/docs/framework/tools/ilasm-exe-il-assembler.md).</span></span>  
  
-   <span data-ttu-id="75294-113">Uso de la API de reflexión no administrada.</span><span class="sxs-lookup"><span data-stu-id="75294-113">Using the unmanaged reflection API.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members />
</Type>
<Type Name="IsByValue" FullName="System.Runtime.CompilerServices.IsByValue">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7f51b5c0290e49444bd599d0ca24496e46d0668f" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37472117" /></Metadata><TypeSignature Language="C#" Value="public static class IsByValue" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit IsByValue extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.CompilerServices.IsByValue" />
  <TypeSignature Language="VB.NET" Value="Public Class IsByValue" />
  <TypeSignature Language="C++ CLI" Value="public ref class IsByValue abstract sealed" />
  <TypeSignature Language="F#" Value="type IsByValue = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.CompilerServices.VisualC</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="dfec4-101">Indica que un argumento de método modificado se debería interpretar como si tuviera semántica de objeto pasado por valor.</span><span class="sxs-lookup"><span data-stu-id="dfec4-101">Indicates that a modified method argument should be interpreted as having object passed-by-value semantics.</span></span> <span data-ttu-id="dfec4-102">Este modificador se aplica para hacer referencia a los tipos.</span><span class="sxs-lookup"><span data-stu-id="dfec4-102">This modifier is applied to reference types.</span></span>  <span data-ttu-id="dfec4-103">Esta clase no puede heredarse.</span><span class="sxs-lookup"><span data-stu-id="dfec4-103">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfec4-104">La <xref:System.Runtime.CompilerServices.IsByValue> clase se usa el compilador de Microsoft C++ para denotar los parámetros de método y devolver valores cuya semántica sigue las reglas de C++ para objetos que se pasan por valor.</span><span class="sxs-lookup"><span data-stu-id="dfec4-104">The <xref:System.Runtime.CompilerServices.IsByValue> class is used by the Microsoft C++ compiler to denote method parameters and return values whose semantics follow the C++ rules for objects passed by value.</span></span>  
  
 <span data-ttu-id="dfec4-105">Los compiladores emiten modificadores personalizados dentro de los metadatos para cambiar la forma en que el compilador de just-in-time (JIT) controla los valores cuando el comportamiento predeterminado no es adecuado.</span><span class="sxs-lookup"><span data-stu-id="dfec4-105">Compilers emit custom modifiers within metadata to change the way that the just-in-time (JIT) compiler handles values when the default behavior is not appropriate.</span></span>  <span data-ttu-id="dfec4-106">Cuando el compilador JIT encuentra un modificador personalizado, controla el valor de la manera que especifica el modificador.</span><span class="sxs-lookup"><span data-stu-id="dfec4-106">When the JIT compiler encounters a custom modifier, it handles the value in the way that the modifier specifies.</span></span>  <span data-ttu-id="dfec4-107">Los compiladores pueden modificadores personalizados se aplican a métodos, parámetros y valores devueltos.</span><span class="sxs-lookup"><span data-stu-id="dfec4-107">Compilers can apply custom modifiers to methods, parameters, and return values.</span></span>  <span data-ttu-id="dfec4-108">El compilador JIT debe responder a los modificadores obligatorios, pero puede pasar por alto los modificadores opcionales.</span><span class="sxs-lookup"><span data-stu-id="dfec4-108">The JIT compiler must respond to required modifiers but can ignore optional modifiers.</span></span>  
  
 <span data-ttu-id="dfec4-109">Puede emitir modificadores personalizados en los metadatos mediante una de las técnicas siguientes:</span><span class="sxs-lookup"><span data-stu-id="dfec4-109">You can emit custom modifiers into metadata using one of the following techniques:</span></span>  
  
-   <span data-ttu-id="dfec4-110">Uso de métodos en el <xref:System.Reflection.Emit.TypeBuilder> como clase <xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineField%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A>, y <xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfec4-110">Using methods in the <xref:System.Reflection.Emit.TypeBuilder> class such as <xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineField%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A>, and <xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A>.</span></span>  
  
-   <span data-ttu-id="dfec4-111">Generar un archivo de instrucciones de lenguaje intermedio (MSIL) de Microsoft que contenga llamadas a `modopt` y `modreq`y el ensamblado en el archivo con el [Ilasm.exe (ensamblador de IL)](~/docs/framework/tools/ilasm-exe-il-assembler.md).</span><span class="sxs-lookup"><span data-stu-id="dfec4-111">Generating a Microsoft intermediate language (MSIL) instruction file that contains calls to `modopt` and `modreq`, and assembling the file with the [Ilasm.exe (IL Assembler)](~/docs/framework/tools/ilasm-exe-il-assembler.md).</span></span>  
  
-   <span data-ttu-id="dfec4-112">Uso de la API de reflexión no administrada.</span><span class="sxs-lookup"><span data-stu-id="dfec4-112">Using the unmanaged reflection API.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dfec4-113">En el ejemplo siguiente se muestra cómo emitir una <xref:System.Runtime.CompilerServices.IsByValue> objeto en un ensamblado mediante reflexión.</span><span class="sxs-lookup"><span data-stu-id="dfec4-113">The following example demonstrates how to emit an <xref:System.Runtime.CompilerServices.IsByValue> object into an assembly using reflection.</span></span>  
  
 [!code-cpp[Runtime.CompilerServices.IsByValue#1](~/samples/snippets/cpp/VS_Snippets_CLR/Runtime.CompilerServices.IsByValue/cpp/sample.cpp#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members />
</Type>
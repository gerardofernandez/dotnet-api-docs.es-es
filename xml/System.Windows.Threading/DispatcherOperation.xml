<Type Name="DispatcherOperation" FullName="System.Windows.Threading.DispatcherOperation">
  <Metadata><Meta Name="ms.openlocfilehash" Value="da09fe06a99494c768fa4d0cfb5330fbf23ba697" /><Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="10/04/2018" /><Meta Name="ms.locfileid" Value="48660873" /></Metadata><TypeSignature Language="C#" Value="public class DispatcherOperation" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi DispatcherOperation extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Threading.DispatcherOperation" />
  <TypeSignature Language="VB.NET" Value="Public Class DispatcherOperation" />
  <TypeSignature Language="C++ CLI" Value="public ref class DispatcherOperation" />
  <TypeSignature Language="F#" Value="type DispatcherOperation = class" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="13829-101">Representa un objeto que se usa para interactuar con una operación expuesta en la cola de <see cref="T:System.Windows.Threading.Dispatcher" />.</span><span class="sxs-lookup"><span data-stu-id="13829-101">Represents an object that is used to interact with an operation that has been posted to the <see cref="T:System.Windows.Threading.Dispatcher" /> queue.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13829-102"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> Devuelve un <xref:System.Windows.Threading.DispatcherOperation> objeto cuando se llama.</span><span class="sxs-lookup"><span data-stu-id="13829-102"><xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> returns a <xref:System.Windows.Threading.DispatcherOperation> object when it is called.</span></span>  
  
 <span data-ttu-id="13829-103">El <xref:System.Windows.Threading.DispatcherOperation> objeto puede utilizarse para interactuar con el delegado de la <xref:System.Windows.Threading.Dispatcher> cola, como cambiar la prioridad de la operación o anular la operación.</span><span class="sxs-lookup"><span data-stu-id="13829-103">The <xref:System.Windows.Threading.DispatcherOperation> object can be used to interact with the delegate on the <xref:System.Windows.Threading.Dispatcher> queue, such as changing the priority of the operation or aborting the operation.</span></span>  
  
 <span data-ttu-id="13829-104">Para obtener el valor devuelto del delegado invocado, use el <xref:System.Windows.Threading.DispatcherOperation.Result%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="13829-104">To obtain the return value of the invoked delegate, use the <xref:System.Windows.Threading.DispatcherOperation.Result%2A> property.</span></span>  
  
 <span data-ttu-id="13829-105">El <xref:System.Windows.Threading.DispatcherOperation> no es un límite de control de excepciones.</span><span class="sxs-lookup"><span data-stu-id="13829-105">The <xref:System.Windows.Threading.DispatcherOperation> is not an exception handling boundary.</span></span> <span data-ttu-id="13829-106">Esto significa que las excepciones se controlan mediante el <xref:System.Windows.Threading.Dispatcher> y no se conservan por la operación.</span><span class="sxs-lookup"><span data-stu-id="13829-106">This means that exceptions are handled by the <xref:System.Windows.Threading.Dispatcher> and are not preserved by the operation.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public bool Abort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Abort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.DispatcherOperation.Abort" />
      <MemberSignature Language="VB.NET" Value="Public Function Abort () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Abort();" />
      <MemberSignature Language="F#" Value="member this.Abort : unit -&gt; bool" Usage="dispatcherOperation.Abort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="13829-107">Anula la operación.</span><span class="sxs-lookup"><span data-stu-id="13829-107">Aborts the operation.</span></span></summary>
        <returns><span data-ttu-id="13829-108"><see langword="true" /> si se anuló la operación; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="13829-108"><see langword="true" /> if the operation was aborted; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13829-109">Si una operación ya está en curso, este método devolverá `false`.</span><span class="sxs-lookup"><span data-stu-id="13829-109">If an operation is already in progress, this method will return `false`.</span></span>  
  
 <span data-ttu-id="13829-110">Cuando se anula una operación, el <xref:System.Windows.Threading.DispatcherOperation.Status%2A> de la <xref:System.Windows.Threading.DispatcherOperation> está establecido en <xref:System.Windows.Threading.DispatcherOperationStatus.Aborted> y <xref:System.Windows.Threading.DispatcherOperation.Aborted> provoca el evento.</span><span class="sxs-lookup"><span data-stu-id="13829-110">When an operation is aborted, the <xref:System.Windows.Threading.DispatcherOperation.Status%2A> of the <xref:System.Windows.Threading.DispatcherOperation> is set to <xref:System.Windows.Threading.DispatcherOperationStatus.Aborted> and the <xref:System.Windows.Threading.DispatcherOperation.Aborted> event is raised.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Threading.DispatcherOperation.Aborted" />
      </Docs>
    </Member>
    <Member MemberName="Aborted">
      <MemberSignature Language="C#" Value="public event EventHandler Aborted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Aborted" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Threading.DispatcherOperation.Aborted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Aborted As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Aborted;" />
      <MemberSignature Language="F#" Value="member this.Aborted : EventHandler " Usage="member this.Aborted : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="13829-111">Tiene lugar cuando se anula la operación.</span><span class="sxs-lookup"><span data-stu-id="13829-111">Occurs when the operation is aborted.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Completed">
      <MemberSignature Language="C#" Value="public event EventHandler Completed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Completed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Threading.DispatcherOperation.Completed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Completed As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Completed;" />
      <MemberSignature Language="F#" Value="member this.Completed : EventHandler " Usage="member this.Completed : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="13829-112">Se produce cuando la operación se ha completado.</span><span class="sxs-lookup"><span data-stu-id="13829-112">Occurs when the operation has completed.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispatcher">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.Dispatcher Dispatcher { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Threading.Dispatcher Dispatcher" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Threading.DispatcherOperation.Dispatcher" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Dispatcher As Dispatcher" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Threading::Dispatcher ^ Dispatcher { System::Windows::Threading::Dispatcher ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Dispatcher : System.Windows.Threading.Dispatcher" Usage="System.Windows.Threading.DispatcherOperation.Dispatcher" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.Dispatcher</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="13829-113">Obtiene el objeto <see cref="T:System.Windows.Threading.Dispatcher" /> en el que se expuso la operación.</span><span class="sxs-lookup"><span data-stu-id="13829-113">Gets the <see cref="T:System.Windows.Threading.Dispatcher" /> that the operation was posted to.</span></span></summary>
        <value><span data-ttu-id="13829-114">El distribuidor.</span><span class="sxs-lookup"><span data-stu-id="13829-114">The dispatcher.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAwaiter">
      <MemberSignature Language="C#" Value="public System.Runtime.CompilerServices.TaskAwaiter GetAwaiter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Runtime.CompilerServices.TaskAwaiter GetAwaiter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.DispatcherOperation.GetAwaiter" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAwaiter () As TaskAwaiter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::CompilerServices::TaskAwaiter GetAwaiter();" />
      <MemberSignature Language="F#" Value="member this.GetAwaiter : unit -&gt; System.Runtime.CompilerServices.TaskAwaiter" Usage="dispatcherOperation.GetAwaiter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.CompilerServices.TaskAwaiter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="13829-115">Devuelve un objeto que se notifica al finalizar la operación asincrónica.</span><span class="sxs-lookup"><span data-stu-id="13829-115">Returns an object that is notified when the asynchronous operation is finished.</span></span></summary>
        <returns><span data-ttu-id="13829-116">Un objeto al que se notifica al finalizar la operación asincrónica.</span><span class="sxs-lookup"><span data-stu-id="13829-116">An object that is notified when the asynchronous operation is finished.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeDelegateCore">
      <MemberSignature Language="C#" Value="protected virtual object InvokeDelegateCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object InvokeDelegateCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.DispatcherOperation.InvokeDelegateCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function InvokeDelegateCore () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ InvokeDelegateCore();" />
      <MemberSignature Language="F#" Value="abstract member InvokeDelegateCore : unit -&gt; obj&#xA;override this.InvokeDelegateCore : unit -&gt; obj" Usage="dispatcherOperation.InvokeDelegateCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="13829-117">Inicia la operación adjuntada a este <see cref="T:System.Windows.Threading.DispatcherOperation" />.</span><span class="sxs-lookup"><span data-stu-id="13829-117">Begins the operation that is associated with this <see cref="T:System.Windows.Threading.DispatcherOperation" />.</span></span></summary>
        <returns><span data-ttu-id="13829-118">Es <see langword="null" /> en todos los casos.</span><span class="sxs-lookup"><span data-stu-id="13829-118"><see langword="null" /> in all cases.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Priority">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.DispatcherPriority Priority { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Threading.DispatcherPriority Priority" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Threading.DispatcherOperation.Priority" />
      <MemberSignature Language="VB.NET" Value="Public Property Priority As DispatcherPriority" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Threading::DispatcherPriority Priority { System::Windows::Threading::DispatcherPriority get(); void set(System::Windows::Threading::DispatcherPriority value); };" />
      <MemberSignature Language="F#" Value="member this.Priority : System.Windows.Threading.DispatcherPriority with get, set" Usage="System.Windows.Threading.DispatcherOperation.Priority" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherPriority</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="13829-119">Obtiene o establece la prioridad de la operación en la cola de <see cref="T:System.Windows.Threading.Dispatcher" />.</span><span class="sxs-lookup"><span data-stu-id="13829-119">Gets or sets the priority of the operation in the <see cref="T:System.Windows.Threading.Dispatcher" /> queue.</span></span></summary>
        <value><span data-ttu-id="13829-120">Prioridad del delegado en la cola.</span><span class="sxs-lookup"><span data-stu-id="13829-120">The priority of the delegate on the queue.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Result">
      <MemberSignature Language="C#" Value="public object Result { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Result" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Threading.DispatcherOperation.Result" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Result As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Result { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Result : obj" Usage="System.Windows.Threading.DispatcherOperation.Result" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="13829-121">Obtiene el resultado de la operación después de haberse completado.</span><span class="sxs-lookup"><span data-stu-id="13829-121">Gets the result of the operation after it has completed.</span></span></summary>
        <value><span data-ttu-id="13829-122">Resultado de la operación o <see langword="null" /> si la operación no se ha completado.</span><span class="sxs-lookup"><span data-stu-id="13829-122">The result of the operation -or- <see langword="null" /> if the operation has not completed.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Status">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.DispatcherOperationStatus Status { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Threading.DispatcherOperationStatus Status" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Threading.DispatcherOperation.Status" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Status As DispatcherOperationStatus" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Threading::DispatcherOperationStatus Status { System::Windows::Threading::DispatcherOperationStatus get(); };" />
      <MemberSignature Language="F#" Value="member this.Status : System.Windows.Threading.DispatcherOperationStatus" Usage="System.Windows.Threading.DispatcherOperation.Status" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherOperationStatus</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="13829-123">Obtiene el estado actual de la operación.</span><span class="sxs-lookup"><span data-stu-id="13829-123">Gets the current status of the operation..</span></span></summary>
        <value><span data-ttu-id="13829-124">Estado de la operación.</span><span class="sxs-lookup"><span data-stu-id="13829-124">The status of the operation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13829-125">Las fases de un <xref:System.Windows.Threading.DispatcherOperation> son <xref:System.Windows.Threading.DispatcherOperationStatus.Pending>, <xref:System.Windows.Threading.DispatcherOperationStatus.Executing>, y <xref:System.Windows.Threading.DispatcherOperationStatus.Completed>.</span><span class="sxs-lookup"><span data-stu-id="13829-125">The stages of a <xref:System.Windows.Threading.DispatcherOperation> are <xref:System.Windows.Threading.DispatcherOperationStatus.Pending>, <xref:System.Windows.Threading.DispatcherOperationStatus.Executing>, and <xref:System.Windows.Threading.DispatcherOperationStatus.Completed>.</span></span>  <span data-ttu-id="13829-126">En cualquier momento antes de que la operación haya finalizado, el estado puede establecerse en <xref:System.Windows.Threading.DispatcherOperationStatus.Aborted>.</span><span class="sxs-lookup"><span data-stu-id="13829-126">At any point before the operation has completed, the status can be set to <xref:System.Windows.Threading.DispatcherOperationStatus.Aborted>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Task">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task Task { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.Tasks.Task Task" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Threading.DispatcherOperation.Task" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Task As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::Tasks::Task ^ Task { System::Threading::Tasks::Task ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Task : System.Threading.Tasks.Task" Usage="System.Windows.Threading.DispatcherOperation.Task" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="13829-127">Obtiene un objeto <see cref="T:System.Threading.Tasks.Task`1" /> que representa la operación actual.</span><span class="sxs-lookup"><span data-stu-id="13829-127">Gets a <see cref="T:System.Threading.Tasks.Task`1" /> that represents the current operation.</span></span></summary>
        <value><span data-ttu-id="13829-128">Objeto que representa la operación actual.</span><span class="sxs-lookup"><span data-stu-id="13829-128">An object that represents the current operation.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Wait">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="13829-129">Espera a que finalice la operación.</span><span class="sxs-lookup"><span data-stu-id="13829-129">Waits for the operation to finish.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Wait">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.DispatcherOperationStatus Wait ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Threading.DispatcherOperationStatus Wait() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.DispatcherOperation.Wait" />
      <MemberSignature Language="VB.NET" Value="Public Function Wait () As DispatcherOperationStatus" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Threading::DispatcherOperationStatus Wait();" />
      <MemberSignature Language="F#" Value="member this.Wait : unit -&gt; System.Windows.Threading.DispatcherOperationStatus" Usage="dispatcherOperation.Wait " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherOperationStatus</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="13829-130">Espera a que se complete la operación.</span><span class="sxs-lookup"><span data-stu-id="13829-130">Waits for the operation to complete</span></span></summary>
        <returns><span data-ttu-id="13829-131">Estado de la operación.</span><span class="sxs-lookup"><span data-stu-id="13829-131">The status of the operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13829-132">Para obtener el valor devuelto del delegado invocado, use el <xref:System.Windows.Threading.DispatcherOperation.Result%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="13829-132">To obtain the return value of the invoked delegate, use the <xref:System.Windows.Threading.DispatcherOperation.Result%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="13829-133"><see cref="P:System.Windows.Threading.DispatcherOperation.Status" /> es igual a <see cref="F:System.Windows.Threading.DispatcherOperationStatus.Executing" />.</span><span class="sxs-lookup"><span data-stu-id="13829-133"><see cref="P:System.Windows.Threading.DispatcherOperation.Status" /> is equal to <see cref="F:System.Windows.Threading.DispatcherOperationStatus.Executing" />.</span></span>  <span data-ttu-id="13829-134">Esto puede ocurrir al esperar a una operación que ya está en ejecución en el mismo subproceso.</span><span class="sxs-lookup"><span data-stu-id="13829-134">This can occur when waiting for an operation that is already executing on the same thread.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Wait">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.DispatcherOperationStatus Wait (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Threading.DispatcherOperationStatus Wait(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.DispatcherOperation.Wait(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function Wait (timeout As TimeSpan) As DispatcherOperationStatus" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Threading::DispatcherOperationStatus Wait(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.Wait : TimeSpan -&gt; System.Windows.Threading.DispatcherOperationStatus" Usage="dispatcherOperation.Wait timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.DispatcherOperationStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="13829-135">Período máximo de tiempo que se espera.</span><span class="sxs-lookup"><span data-stu-id="13829-135">The maximum period of time to wait.</span></span></param>
        <summary><span data-ttu-id="13829-136">Espera a que la operación se complete en el período de tiempo especificado.</span><span class="sxs-lookup"><span data-stu-id="13829-136">Waits for the operation to complete in the specified period of time.</span></span></summary>
        <returns><span data-ttu-id="13829-137">Estado de la operación.</span><span class="sxs-lookup"><span data-stu-id="13829-137">The status of the operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13829-138">Para obtener el valor devuelto del delegado invocado, use el <xref:System.Windows.Threading.DispatcherOperation.Result%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="13829-138">To obtain the return value of the invoked delegate, use the <xref:System.Windows.Threading.DispatcherOperation.Result%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="13829-139"><see cref="P:System.Windows.Threading.DispatcherOperation.Status" /> es igual a <see cref="F:System.Windows.Threading.DispatcherOperationStatus.Executing" />.</span><span class="sxs-lookup"><span data-stu-id="13829-139"><see cref="P:System.Windows.Threading.DispatcherOperation.Status" /> is equal to <see cref="F:System.Windows.Threading.DispatcherOperationStatus.Executing" />.</span></span>  <span data-ttu-id="13829-140">Esto puede ocurrir al esperar a una operación que ya está en ejecución en el mismo subproceso.</span><span class="sxs-lookup"><span data-stu-id="13829-140">This can occur when waiting for an operation that is already executing on the same thread.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
<Type Name="DispatcherTimer" FullName="System.Windows.Threading.DispatcherTimer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0dd0e4caeeda8fb99923da39b3470b069d82c651" /><Meta Name="ms.sourcegitcommit" Value="9e3550fb2088d4faf2043f0acb29da4555519937" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="12/12/2018" /><Meta Name="ms.locfileid" Value="53291501" /></Metadata><TypeSignature Language="C#" Value="public class DispatcherTimer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DispatcherTimer extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Threading.DispatcherTimer" />
  <TypeSignature Language="VB.NET" Value="Public Class DispatcherTimer" />
  <TypeSignature Language="C++ CLI" Value="public ref class DispatcherTimer" />
  <TypeSignature Language="F#" Value="type DispatcherTimer = class" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="906aa-101">Temporizador integrado en la cola de <see cref="T:System.Windows.Threading.Dispatcher" /> que se procesa en un intervalo de tiempo especificado con una prioridad especificada.</span><span class="sxs-lookup"><span data-stu-id="906aa-101">A timer that is integrated into the <see cref="T:System.Windows.Threading.Dispatcher" /> queue which is processed at a specified interval of time and at a specified priority.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="906aa-102">El <xref:System.Windows.Threading.DispatcherTimer> se reevalúa en la parte superior de cada <xref:System.Windows.Threading.Dispatcher> bucle.</span><span class="sxs-lookup"><span data-stu-id="906aa-102">The <xref:System.Windows.Threading.DispatcherTimer> is reevaluated at the top of every <xref:System.Windows.Threading.Dispatcher> loop.</span></span>  
  
 <span data-ttu-id="906aa-103">No se garantiza que los temporizadores ejecutar exactamente cuándo se produce el intervalo de tiempo, pero se garantiza que no se ejecuten antes de que se produce el intervalo de tiempo.</span><span class="sxs-lookup"><span data-stu-id="906aa-103">Timers are not guaranteed to execute exactly when the time interval occurs, but they are guaranteed to not execute before the time interval occurs.</span></span>  <span data-ttu-id="906aa-104">Esto es porque <xref:System.Windows.Threading.DispatcherTimer> operaciones se colocan en el <xref:System.Windows.Threading.Dispatcher> cola como otras operaciones.</span><span class="sxs-lookup"><span data-stu-id="906aa-104">This is because <xref:System.Windows.Threading.DispatcherTimer> operations are placed on the <xref:System.Windows.Threading.Dispatcher> queue like other operations.</span></span>  <span data-ttu-id="906aa-105">Cuando el <xref:System.Windows.Threading.DispatcherTimer> operación se ejecuta depende de los otros trabajos en la cola y sus prioridades.</span><span class="sxs-lookup"><span data-stu-id="906aa-105">When the <xref:System.Windows.Threading.DispatcherTimer> operation executes is dependent on the other jobs in the queue and their priorities.</span></span>  
  
 <span data-ttu-id="906aa-106">Si un <xref:System.Timers.Timer?displayProperty=nameWithType> se usa en un [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] aplicación, es importante destacar que el <xref:System.Timers.Timer?displayProperty=nameWithType> se ejecuta en un subproceso distinto del [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] subproceso.</span><span class="sxs-lookup"><span data-stu-id="906aa-106">If a <xref:System.Timers.Timer?displayProperty=nameWithType> is used in a [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] application, it is worth noting that the <xref:System.Timers.Timer?displayProperty=nameWithType> runs on a different thread than the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] thread.</span></span>  <span data-ttu-id="906aa-107">Para tener acceso a objetos en el [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] subproceso, es necesario registrar la operación en el <xref:System.Windows.Threading.Dispatcher> de la [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] subprocesos mediante <xref:System.Windows.Threading.Dispatcher.Invoke%2A> o <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="906aa-107">In order to access objects on the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] thread, it is necessary to post the operation onto the <xref:System.Windows.Threading.Dispatcher> of the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] thread using <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span> <span data-ttu-id="906aa-108">Razones para utilizar un <xref:System.Windows.Threading.DispatcherTimer> en contraposición a un <xref:System.Timers.Timer?displayProperty=nameWithType> son que el <xref:System.Windows.Threading.DispatcherTimer> se ejecuta en el mismo subproceso que la <xref:System.Windows.Threading.Dispatcher> y un <xref:System.Windows.Threading.DispatcherPriority> se pueden establecer en el <xref:System.Windows.Threading.DispatcherTimer>.</span><span class="sxs-lookup"><span data-stu-id="906aa-108">Reasons for using a <xref:System.Windows.Threading.DispatcherTimer> as opposed to a <xref:System.Timers.Timer?displayProperty=nameWithType> are that the <xref:System.Windows.Threading.DispatcherTimer> runs on the same thread as the <xref:System.Windows.Threading.Dispatcher> and a <xref:System.Windows.Threading.DispatcherPriority> can be set on the <xref:System.Windows.Threading.DispatcherTimer>.</span></span>  
  
 <span data-ttu-id="906aa-109">Un <xref:System.Windows.Threading.DispatcherTimer> mantendrá un objeto activo cada vez que se enlazan los métodos del objeto para el temporizador.</span><span class="sxs-lookup"><span data-stu-id="906aa-109">A <xref:System.Windows.Threading.DispatcherTimer> will keep an object alive whenever the object's methods are bound to the timer.</span></span>  
  
## Examples  
 <span data-ttu-id="906aa-110">En el ejemplo siguiente se crea un <xref:System.Windows.Threading.DispatcherTimer> que actualiza el contenido de un <xref:System.Windows.Controls.Label> y llama a la <xref:System.Windows.Input.CommandManager.InvalidateRequerySuggested%2A> método en el <xref:System.Windows.Input.CommandManager>.</span><span class="sxs-lookup"><span data-stu-id="906aa-110">The following example creates a <xref:System.Windows.Threading.DispatcherTimer> that updates the contents of a <xref:System.Windows.Controls.Label> and calls the <xref:System.Windows.Input.CommandManager.InvalidateRequerySuggested%2A> method on the <xref:System.Windows.Input.CommandManager>.</span></span>  
  
 <span data-ttu-id="906aa-111">Un <xref:System.Windows.Threading.DispatcherTimer> objeto denominado `dispatcherTimer` se crea.</span><span class="sxs-lookup"><span data-stu-id="906aa-111">A <xref:System.Windows.Threading.DispatcherTimer> object named `dispatcherTimer` is created.</span></span>  <span data-ttu-id="906aa-112">El controlador de eventos `dispatcherTimer_Tick` se agrega a la <xref:System.Windows.Threading.DispatcherTimer.Tick> událostí `dispatcherTimer`.</span><span class="sxs-lookup"><span data-stu-id="906aa-112">The event handler `dispatcherTimer_Tick` is added to the <xref:System.Windows.Threading.DispatcherTimer.Tick> event of `dispatcherTimer`.</span></span>  <span data-ttu-id="906aa-113">El <xref:System.Windows.Threading.DispatcherTimer.Interval%2A> está establecido en 1 segundo con un <xref:System.Windows.Duration.TimeSpan%2A> objeto y el temporizador se inició.</span><span class="sxs-lookup"><span data-stu-id="906aa-113">The <xref:System.Windows.Threading.DispatcherTimer.Interval%2A> is set to 1 second using a <xref:System.Windows.Duration.TimeSpan%2A> object, and the timer is started.</span></span>  
  
 [!code-csharp[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimerInit](~/samples/snippets/csharp/VS_Snippets_Wpf/InvalidateRequeryWithDispatcherTimer/CSharp/Window1.xaml.cs#invalidatesampledispatchertimerinit)]
 [!code-vb[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimerInit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InvalidateRequeryWithDispatcherTimer/visualbasic/window1.xaml.vb#invalidatesampledispatchertimerinit)]  
  
 <span data-ttu-id="906aa-114">El <xref:System.Windows.Threading.DispatcherTimer.Tick> actualizaciones del controlador de eventos un <xref:System.Windows.Controls.Label> que muestra el actual en segundo lugar, y llama a <xref:System.Windows.Input.CommandManager.InvalidateRequerySuggested%2A> en el <xref:System.Windows.Input.CommandManager>.</span><span class="sxs-lookup"><span data-stu-id="906aa-114">The <xref:System.Windows.Threading.DispatcherTimer.Tick> event handler updates a <xref:System.Windows.Controls.Label> that displays the current second, and it calls <xref:System.Windows.Input.CommandManager.InvalidateRequerySuggested%2A> on the <xref:System.Windows.Input.CommandManager>.</span></span>  
  
 [!code-csharp[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimer](~/samples/snippets/csharp/VS_Snippets_Wpf/InvalidateRequeryWithDispatcherTimer/CSharp/Window1.xaml.cs#invalidatesampledispatchertimer)]
 [!code-vb[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimer](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InvalidateRequeryWithDispatcherTimer/visualbasic/window1.xaml.vb#invalidatesampledispatchertimer)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="906aa-115">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Threading.DispatcherTimer" />.</span><span class="sxs-lookup"><span data-stu-id="906aa-115">Initializes a new instance of the <see cref="T:System.Windows.Threading.DispatcherTimer" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DispatcherTimer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.DispatcherTimer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DispatcherTimer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="906aa-116">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Threading.DispatcherTimer" />.</span><span class="sxs-lookup"><span data-stu-id="906aa-116">Initializes a new instance of the <see cref="T:System.Windows.Threading.DispatcherTimer" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="906aa-117"><xref:System.Windows.Threading.DispatcherTimer> se ejecuta en el <xref:System.Windows.Threading.Dispatcher> del subproceso actual en <xref:System.Windows.Threading.DispatcherPriority.Background> prioridad.</span><span class="sxs-lookup"><span data-stu-id="906aa-117"><xref:System.Windows.Threading.DispatcherTimer> runs on the <xref:System.Windows.Threading.Dispatcher> of the current thread at <xref:System.Windows.Threading.DispatcherPriority.Background> priority.</span></span>  <span data-ttu-id="906aa-118">Para especificar otro <xref:System.Windows.Threading.Dispatcher>, use el constructor siguiente: <xref:System.Windows.Threading.DispatcherTimer.%23ctor%28System.Windows.Threading.DispatcherPriority%2CSystem.Windows.Threading.Dispatcher%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="906aa-118">To specify a different <xref:System.Windows.Threading.Dispatcher>, use the following constructor: <xref:System.Windows.Threading.DispatcherTimer.%23ctor%28System.Windows.Threading.DispatcherPriority%2CSystem.Windows.Threading.Dispatcher%29?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DispatcherTimer (System.Windows.Threading.DispatcherPriority priority);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Threading.DispatcherPriority priority) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.DispatcherTimer.#ctor(System.Windows.Threading.DispatcherPriority)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (priority As DispatcherPriority)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DispatcherTimer(System::Windows::Threading::DispatcherPriority priority);" />
      <MemberSignature Language="F#" Value="new System.Windows.Threading.DispatcherTimer : System.Windows.Threading.DispatcherPriority -&gt; System.Windows.Threading.DispatcherTimer" Usage="new System.Windows.Threading.DispatcherTimer priority" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
      </Parameters>
      <Docs>
        <param name="priority"><span data-ttu-id="906aa-119">Prioridad con la que se invoca el temporizador.</span><span class="sxs-lookup"><span data-stu-id="906aa-119">The priority at which to invoke the timer.</span></span></param>
        <summary><span data-ttu-id="906aa-120">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Threading.DispatcherTimer" /> que procesa los eventos del temporizador con la prioridad especificada.</span><span class="sxs-lookup"><span data-stu-id="906aa-120">Initializes a new instance of the <see cref="T:System.Windows.Threading.DispatcherTimer" /> class which processes timer events at the specified priority.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="906aa-121"><xref:System.Windows.Threading.DispatcherTimer> se ejecuta en el <xref:System.Windows.Threading.Dispatcher> del subproceso actual.</span><span class="sxs-lookup"><span data-stu-id="906aa-121"><xref:System.Windows.Threading.DispatcherTimer> runs on the <xref:System.Windows.Threading.Dispatcher> of the current thread.</span></span>  <span data-ttu-id="906aa-122">Para especificar otro <xref:System.Windows.Threading.Dispatcher>, use el constructor siguiente: <xref:System.Windows.Threading.DispatcherTimer.%23ctor%28System.Windows.Threading.DispatcherPriority%2CSystem.Windows.Threading.Dispatcher%29>.</span><span class="sxs-lookup"><span data-stu-id="906aa-122">To specify a different <xref:System.Windows.Threading.Dispatcher>, use the following constructor: <xref:System.Windows.Threading.DispatcherTimer.%23ctor%28System.Windows.Threading.DispatcherPriority%2CSystem.Windows.Threading.Dispatcher%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DispatcherTimer (System.Windows.Threading.DispatcherPriority priority, System.Windows.Threading.Dispatcher dispatcher);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Threading.DispatcherPriority priority, class System.Windows.Threading.Dispatcher dispatcher) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.DispatcherTimer.#ctor(System.Windows.Threading.DispatcherPriority,System.Windows.Threading.Dispatcher)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DispatcherTimer(System::Windows::Threading::DispatcherPriority priority, System::Windows::Threading::Dispatcher ^ dispatcher);" />
      <MemberSignature Language="F#" Value="new System.Windows.Threading.DispatcherTimer : System.Windows.Threading.DispatcherPriority * System.Windows.Threading.Dispatcher -&gt; System.Windows.Threading.DispatcherTimer" Usage="new System.Windows.Threading.DispatcherTimer (priority, dispatcher)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="dispatcher" Type="System.Windows.Threading.Dispatcher" />
      </Parameters>
      <Docs>
        <param name="priority"><span data-ttu-id="906aa-123">Prioridad con la que se invoca el temporizador.</span><span class="sxs-lookup"><span data-stu-id="906aa-123">The priority at which to invoke the timer.</span></span></param>
        <param name="dispatcher"><span data-ttu-id="906aa-124">Distribuidor al que está asociado el temporizador.</span><span class="sxs-lookup"><span data-stu-id="906aa-124">The dispatcher the timer is associated with.</span></span></param>
        <summary><span data-ttu-id="906aa-125">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Threading.DispatcherTimer" /> que se ejecuta en el objeto <see cref="T:System.Windows.Threading.Dispatcher" /> especificado con la prioridad especificada.</span><span class="sxs-lookup"><span data-stu-id="906aa-125">Initializes a new instance of the <see cref="T:System.Windows.Threading.DispatcherTimer" /> class which runs on the specified <see cref="T:System.Windows.Threading.Dispatcher" /> at the specified priority.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="906aa-126">El valor de <paramref name="dispatcher" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="906aa-126"><paramref name="dispatcher" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DispatcherTimer (TimeSpan interval, System.Windows.Threading.DispatcherPriority priority, EventHandler callback, System.Windows.Threading.Dispatcher dispatcher);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.TimeSpan interval, valuetype System.Windows.Threading.DispatcherPriority priority, class System.EventHandler callback, class System.Windows.Threading.Dispatcher dispatcher) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.DispatcherTimer.#ctor(System.TimeSpan,System.Windows.Threading.DispatcherPriority,System.EventHandler,System.Windows.Threading.Dispatcher)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DispatcherTimer(TimeSpan interval, System::Windows::Threading::DispatcherPriority priority, EventHandler ^ callback, System::Windows::Threading::Dispatcher ^ dispatcher);" />
      <MemberSignature Language="F#" Value="new System.Windows.Threading.DispatcherTimer : TimeSpan * System.Windows.Threading.DispatcherPriority * EventHandler * System.Windows.Threading.Dispatcher -&gt; System.Windows.Threading.DispatcherTimer" Usage="new System.Windows.Threading.DispatcherTimer (interval, priority, callback, dispatcher)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="interval" Type="System.TimeSpan" />
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="callback" Type="System.EventHandler" />
        <Parameter Name="dispatcher" Type="System.Windows.Threading.Dispatcher" />
      </Parameters>
      <Docs>
        <param name="interval"><span data-ttu-id="906aa-127">Período de tiempo entre los pasos.</span><span class="sxs-lookup"><span data-stu-id="906aa-127">The period of time between ticks.</span></span></param>
        <param name="priority"><span data-ttu-id="906aa-128">Prioridad con la que se invoca el temporizador.</span><span class="sxs-lookup"><span data-stu-id="906aa-128">The priority at which to invoke the timer.</span></span></param>
        <param name="callback"><span data-ttu-id="906aa-129">Controlador de eventos al que se llama cuando se produce el evento <see cref="E:System.Windows.Threading.DispatcherTimer.Tick" />.</span><span class="sxs-lookup"><span data-stu-id="906aa-129">The event handler to call when the <see cref="E:System.Windows.Threading.DispatcherTimer.Tick" /> event occurs.</span></span></param>
        <param name="dispatcher"><span data-ttu-id="906aa-130">Distribuidor al que está asociado el temporizador.</span><span class="sxs-lookup"><span data-stu-id="906aa-130">The dispatcher the timer is associated with.</span></span></param>
        <summary><span data-ttu-id="906aa-131">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Threading.DispatcherTimer" /> que usa el intervalo de tiempo, prioridad, controlador de eventos y <see cref="T:System.Windows.Threading.Dispatcher" /> especificados.</span><span class="sxs-lookup"><span data-stu-id="906aa-131">Initializes a new instance of the <see cref="T:System.Windows.Threading.DispatcherTimer" /> class which uses the specified time interval, priority, event handler, and <see cref="T:System.Windows.Threading.Dispatcher" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="906aa-132">El valor de <paramref name="callback" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="906aa-132"><paramref name="callback" /> is <see langword="null" />.</span></span>

<span data-ttu-id="906aa-133">O bien</span><span class="sxs-lookup"><span data-stu-id="906aa-133">-or-</span></span>

          <span data-ttu-id="906aa-134">El valor de <paramref name="dispatcher" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="906aa-134"><paramref name="dispatcher" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="906aa-135"><paramref name="interval" /> es menor que 0 o mayor que <see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="906aa-135"><paramref name="interval" /> is less than 0 or greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Dispatcher">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.Dispatcher Dispatcher { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Threading.Dispatcher Dispatcher" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Threading.DispatcherTimer.Dispatcher" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Dispatcher As Dispatcher" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Threading::Dispatcher ^ Dispatcher { System::Windows::Threading::Dispatcher ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Dispatcher : System.Windows.Threading.Dispatcher" Usage="System.Windows.Threading.DispatcherTimer.Dispatcher" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.Dispatcher</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="906aa-136">Obtiene el objeto <see cref="T:System.Windows.Threading.Dispatcher" /> asociado a <see cref="T:System.Windows.Threading.DispatcherTimer" />.</span><span class="sxs-lookup"><span data-stu-id="906aa-136">Gets the <see cref="T:System.Windows.Threading.Dispatcher" /> associated with this <see cref="T:System.Windows.Threading.DispatcherTimer" />.</span></span></summary>
        <value><span data-ttu-id="906aa-137">El distribuidor.</span><span class="sxs-lookup"><span data-stu-id="906aa-137">The dispatcher.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="906aa-138">El <xref:System.Windows.Threading.DispatcherTimer.Dispatcher%2A> propiedad se determina en la creación de la <xref:System.Windows.Threading.DispatcherTimer> objeto.</span><span class="sxs-lookup"><span data-stu-id="906aa-138">The <xref:System.Windows.Threading.DispatcherTimer.Dispatcher%2A> property is determined at the creation of the <xref:System.Windows.Threading.DispatcherTimer> object.</span></span>  <span data-ttu-id="906aa-139">El <xref:System.Windows.Threading.Dispatcher> propiedad está establecida en actual <xref:System.Windows.Threading.Dispatcher> en el momento de creación, a menos que otro <xref:System.Windows.Threading.Dispatcher> se especifica.</span><span class="sxs-lookup"><span data-stu-id="906aa-139">The <xref:System.Windows.Threading.Dispatcher> property is set to the current <xref:System.Windows.Threading.Dispatcher> at the time of creation unless a different <xref:System.Windows.Threading.Dispatcher> is specified.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Interval">
      <MemberSignature Language="C#" Value="public TimeSpan Interval { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan Interval" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Threading.DispatcherTimer.Interval" />
      <MemberSignature Language="VB.NET" Value="Public Property Interval As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan Interval { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.Interval : TimeSpan with get, set" Usage="System.Windows.Threading.DispatcherTimer.Interval" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="906aa-140">Obtiene o establece el período de tiempo entre los pasos del temporizador.</span><span class="sxs-lookup"><span data-stu-id="906aa-140">Gets or sets the period of time between timer ticks.</span></span></summary>
        <value><span data-ttu-id="906aa-141">Período de tiempo entre los pasos.</span><span class="sxs-lookup"><span data-stu-id="906aa-141">The period of time between ticks.</span></span> <span data-ttu-id="906aa-142">El valor predeterminado es 00:00:00.</span><span class="sxs-lookup"><span data-stu-id="906aa-142">The default is 00:00:00.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="906aa-143">No se garantiza que los temporizadores ejecutar exactamente cuándo se produce el intervalo de tiempo, pero se garantiza que no se ejecuten antes de que se produce el intervalo de tiempo.</span><span class="sxs-lookup"><span data-stu-id="906aa-143">Timers are not guaranteed to execute exactly when the time interval occurs, but they are guaranteed to not execute before the time interval occurs.</span></span>  <span data-ttu-id="906aa-144">Esto es porque <xref:System.Windows.Threading.DispatcherTimer> operaciones se colocan en el <xref:System.Windows.Threading.Dispatcher> cola como otras operaciones.</span><span class="sxs-lookup"><span data-stu-id="906aa-144">This is because <xref:System.Windows.Threading.DispatcherTimer> operations are placed on the <xref:System.Windows.Threading.Dispatcher> queue like other operations.</span></span>  <span data-ttu-id="906aa-145">Cuando el <xref:System.Windows.Threading.DispatcherTimer> operación se ejecuta depende de los otros trabajos en la cola y sus prioridades.</span><span class="sxs-lookup"><span data-stu-id="906aa-145">When the <xref:System.Windows.Threading.DispatcherTimer> operation executes is dependent on the other jobs in the queue and their priorities.</span></span>  
  
## Examples  
 <span data-ttu-id="906aa-146">En el ejemplo siguiente se crea un <xref:System.Windows.Threading.DispatcherTimer>.</span><span class="sxs-lookup"><span data-stu-id="906aa-146">The following example creates a <xref:System.Windows.Threading.DispatcherTimer>.</span></span>  <span data-ttu-id="906aa-147">Un nuevo <xref:System.Windows.Threading.DispatcherTimer> objeto denominado `dispatcherTimer` se crea.</span><span class="sxs-lookup"><span data-stu-id="906aa-147">A new <xref:System.Windows.Threading.DispatcherTimer> object named `dispatcherTimer` is created.</span></span>  <span data-ttu-id="906aa-148">El controlador de eventos `dispatcherTimer_Tick` se agrega a la <xref:System.Windows.Threading.DispatcherTimer.Tick> eventos.</span><span class="sxs-lookup"><span data-stu-id="906aa-148">The event handler `dispatcherTimer_Tick` is added to the <xref:System.Windows.Threading.DispatcherTimer.Tick> event.</span></span>  <span data-ttu-id="906aa-149">El <xref:System.Windows.Threading.DispatcherTimer.Interval%2A> está establecido en 1 segundo con un <xref:System.TimeSpan> objeto.</span><span class="sxs-lookup"><span data-stu-id="906aa-149">The <xref:System.Windows.Threading.DispatcherTimer.Interval%2A> is set to 1 second using a <xref:System.TimeSpan> object.</span></span>  
  
 [!code-csharp[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimerInit](~/samples/snippets/csharp/VS_Snippets_Wpf/InvalidateRequeryWithDispatcherTimer/CSharp/Window1.xaml.cs#invalidatesampledispatchertimerinit)]
 [!code-vb[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimerInit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InvalidateRequeryWithDispatcherTimer/visualbasic/window1.xaml.vb#invalidatesampledispatchertimerinit)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="906aa-150"><paramref name="interval" /> es menor que 0 o mayor que <see cref="F:System.Int32.MaxValue" /> milisegundos.</span><span class="sxs-lookup"><span data-stu-id="906aa-150"><paramref name="interval" /> is less than 0 or greater than <see cref="F:System.Int32.MaxValue" /> milliseconds.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsEnabled">
      <MemberSignature Language="C#" Value="public bool IsEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Threading.DispatcherTimer.IsEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsEnabled : bool with get, set" Usage="System.Windows.Threading.DispatcherTimer.IsEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="906aa-151">Obtiene o establece un valor que indica si el temporizador está en ejecución.</span><span class="sxs-lookup"><span data-stu-id="906aa-151">Gets or sets a value that indicates whether the timer is running.</span></span></summary>
        <value><span data-ttu-id="906aa-152"><see langword="true" /> si el temporizador está habilitado; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="906aa-152"><see langword="true" /> if the timer is enabled; otherwise, <see langword="false" />.</span></span>  <span data-ttu-id="906aa-153">De manera predeterminada, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="906aa-153">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="906aa-154"><xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> debe establecerse en `true` para el <xref:System.Windows.Threading.DispatcherTimer.Tick> evento.</span><span class="sxs-lookup"><span data-stu-id="906aa-154"><xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> must be set to `true` for the <xref:System.Windows.Threading.DispatcherTimer.Tick> event to be raised.</span></span>  
  
 <span data-ttu-id="906aa-155">Una llamada a <xref:System.Windows.Threading.DispatcherTimer.Start%2A> establece <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> a `true`.</span><span class="sxs-lookup"><span data-stu-id="906aa-155">Calling <xref:System.Windows.Threading.DispatcherTimer.Start%2A> sets <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> to `true`.</span></span>  
  
 <span data-ttu-id="906aa-156">Una llamada a <xref:System.Windows.Threading.DispatcherTimer.Stop%2A> establece <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> a `false`.</span><span class="sxs-lookup"><span data-stu-id="906aa-156">Calling <xref:System.Windows.Threading.DispatcherTimer.Stop%2A> sets <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> to `false`.</span></span>  
  
## Examples  
 <span data-ttu-id="906aa-157">En el ejemplo siguiente se crea un <xref:System.Windows.Threading.DispatcherTimer>.</span><span class="sxs-lookup"><span data-stu-id="906aa-157">The following example creates a <xref:System.Windows.Threading.DispatcherTimer>.</span></span>  <span data-ttu-id="906aa-158">Un nuevo <xref:System.Windows.Threading.DispatcherTimer> objeto denominado `dispatcherTimer` se crea.</span><span class="sxs-lookup"><span data-stu-id="906aa-158">A new <xref:System.Windows.Threading.DispatcherTimer> object named `dispatcherTimer` is created.</span></span>  <span data-ttu-id="906aa-159">El controlador de eventos `dispatcherTimer_Tick` se agrega a la <xref:System.Windows.Threading.DispatcherTimer.Tick> eventos.</span><span class="sxs-lookup"><span data-stu-id="906aa-159">The event handler `dispatcherTimer_Tick` is added to the <xref:System.Windows.Threading.DispatcherTimer.Tick> event.</span></span>  <span data-ttu-id="906aa-160">El <xref:System.Windows.Threading.DispatcherTimer.Interval%2A> está establecido en 1 segundo con un <xref:System.TimeSpan> objeto.</span><span class="sxs-lookup"><span data-stu-id="906aa-160">The <xref:System.Windows.Threading.DispatcherTimer.Interval%2A> is set to 1 second using a <xref:System.TimeSpan> object.</span></span>  
  
 [!code-csharp[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimerInit](~/samples/snippets/csharp/VS_Snippets_Wpf/InvalidateRequeryWithDispatcherTimer/CSharp/Window1.xaml.cs#invalidatesampledispatchertimerinit)]
 [!code-vb[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimerInit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InvalidateRequeryWithDispatcherTimer/visualbasic/window1.xaml.vb#invalidatesampledispatchertimerinit)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.DispatcherTimer.Start" />
      <MemberSignature Language="VB.NET" Value="Public Sub Start ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Start();" />
      <MemberSignature Language="F#" Value="member this.Start : unit -&gt; unit" Usage="dispatcherTimer.Start " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="906aa-161">Inicia <see cref="T:System.Windows.Threading.DispatcherTimer" />.</span><span class="sxs-lookup"><span data-stu-id="906aa-161">Starts the <see cref="T:System.Windows.Threading.DispatcherTimer" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="906aa-162">Establecer <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> a `false` cuando se inicia el temporizador detiene el temporizador.</span><span class="sxs-lookup"><span data-stu-id="906aa-162">Setting <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> to `false` when the timer is started stops the timer.</span></span>  
  
 <span data-ttu-id="906aa-163">Establecer <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> a `true` cuando se detiene el temporizador inicia el temporizador.</span><span class="sxs-lookup"><span data-stu-id="906aa-163">Setting <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> to `true` when the timer is stopped starts the timer.</span></span>  
  
 <span data-ttu-id="906aa-164"><xref:System.Windows.Threading.DispatcherTimer.Start%2A> establece <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> a `true`.</span><span class="sxs-lookup"><span data-stu-id="906aa-164"><xref:System.Windows.Threading.DispatcherTimer.Start%2A> sets <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> to `true`.</span></span>  
  
 <span data-ttu-id="906aa-165"><xref:System.Windows.Threading.DispatcherTimer.Start%2A> Restablece el temporizador <xref:System.Windows.Threading.DispatcherTimer.Interval%2A>.</span><span class="sxs-lookup"><span data-stu-id="906aa-165"><xref:System.Windows.Threading.DispatcherTimer.Start%2A> resets the timer <xref:System.Windows.Threading.DispatcherTimer.Interval%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="906aa-166">En el ejemplo siguiente se crea un <xref:System.Windows.Threading.DispatcherTimer>.</span><span class="sxs-lookup"><span data-stu-id="906aa-166">The following example creates a <xref:System.Windows.Threading.DispatcherTimer>.</span></span>  <span data-ttu-id="906aa-167">Un nuevo <xref:System.Windows.Threading.DispatcherTimer> objeto denominado `dispatcherTimer` se crea.</span><span class="sxs-lookup"><span data-stu-id="906aa-167">A new <xref:System.Windows.Threading.DispatcherTimer> object named `dispatcherTimer` is created.</span></span>  <span data-ttu-id="906aa-168">El controlador de eventos `dispatcherTimer_Tick` se agrega a la <xref:System.Windows.Threading.DispatcherTimer.Tick> eventos.</span><span class="sxs-lookup"><span data-stu-id="906aa-168">The event handler `dispatcherTimer_Tick` is added to the <xref:System.Windows.Threading.DispatcherTimer.Tick> event.</span></span>  <span data-ttu-id="906aa-169">El <xref:System.Windows.Threading.DispatcherTimer.Interval%2A> está establecido en 1 segundo con un <xref:System.Windows.Duration.TimeSpan%2A> objeto.</span><span class="sxs-lookup"><span data-stu-id="906aa-169">The <xref:System.Windows.Threading.DispatcherTimer.Interval%2A> is set to 1 second using a <xref:System.Windows.Duration.TimeSpan%2A> object.</span></span>  
  
 [!code-csharp[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimerInit](~/samples/snippets/csharp/VS_Snippets_Wpf/InvalidateRequeryWithDispatcherTimer/CSharp/Window1.xaml.cs#invalidatesampledispatchertimerinit)]
 [!code-vb[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimerInit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InvalidateRequeryWithDispatcherTimer/visualbasic/window1.xaml.vb#invalidatesampledispatchertimerinit)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.DispatcherTimer.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberSignature Language="F#" Value="member this.Stop : unit -&gt; unit" Usage="dispatcherTimer.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="906aa-170">Detiene <see cref="T:System.Windows.Threading.DispatcherTimer" />.</span><span class="sxs-lookup"><span data-stu-id="906aa-170">Stops the <see cref="T:System.Windows.Threading.DispatcherTimer" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="906aa-171">Establecer <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> a `false` cuando se inicia el temporizador detiene el temporizador.</span><span class="sxs-lookup"><span data-stu-id="906aa-171">Setting <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> to `false` when the timer is started stops the timer.</span></span>  
  
 <span data-ttu-id="906aa-172">Establecer <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> a `true` cuando se detiene el temporizador inicia el temporizador.</span><span class="sxs-lookup"><span data-stu-id="906aa-172">Setting <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> to `true` when the timer is stopped starts the timer.</span></span>  
  
 <span data-ttu-id="906aa-173">Una llamada a <xref:System.Windows.Threading.DispatcherTimer.Stop%2A> establece <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> a `false`.</span><span class="sxs-lookup"><span data-stu-id="906aa-173">Calling <xref:System.Windows.Threading.DispatcherTimer.Stop%2A> sets <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> to `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public object Tag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Tag" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Threading.DispatcherTimer.Tag" />
      <MemberSignature Language="VB.NET" Value="Public Property Tag As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Tag { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Tag : obj with get, set" Usage="System.Windows.Threading.DispatcherTimer.Tag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="906aa-174">Obtiene o establece un objeto de datos definido por el usuario.</span><span class="sxs-lookup"><span data-stu-id="906aa-174">Gets or sets a user-defined data object.</span></span></summary>
        <value><span data-ttu-id="906aa-175">Los datos definidos por el usuario.</span><span class="sxs-lookup"><span data-stu-id="906aa-175">The user-defined data.</span></span>  <span data-ttu-id="906aa-176">El valor predeterminado es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="906aa-176">The default is <see langword="null" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Tick">
      <MemberSignature Language="C#" Value="public event EventHandler Tick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Tick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Threading.DispatcherTimer.Tick" />
      <MemberSignature Language="VB.NET" Value="Public Event Tick As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Tick;" />
      <MemberSignature Language="F#" Value="member this.Tick : EventHandler " Usage="member this.Tick : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="906aa-177">Se produce cuando ha transcurrido el intervalo del temporizador.</span><span class="sxs-lookup"><span data-stu-id="906aa-177">Occurs when the timer interval has elapsed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="906aa-178">En el ejemplo siguiente se crea un <xref:System.Windows.Threading.DispatcherTimer.Tick> controlador de eventos.</span><span class="sxs-lookup"><span data-stu-id="906aa-178">The following example creates a <xref:System.Windows.Threading.DispatcherTimer.Tick> event handler.</span></span>  <span data-ttu-id="906aa-179">Las actualizaciones del controlador de eventos un <xref:System.Windows.Controls.Label> que muestra el actual en segundo lugar, y llama a <xref:System.Windows.Input.CommandManager.InvalidateRequerySuggested%2A> en el <xref:System.Windows.Input.CommandManager>.</span><span class="sxs-lookup"><span data-stu-id="906aa-179">The event handler updates a <xref:System.Windows.Controls.Label> that displays the current second, and it calls <xref:System.Windows.Input.CommandManager.InvalidateRequerySuggested%2A> on the <xref:System.Windows.Input.CommandManager>.</span></span>  
  
 [!code-csharp[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimer](~/samples/snippets/csharp/VS_Snippets_Wpf/InvalidateRequeryWithDispatcherTimer/CSharp/Window1.xaml.cs#invalidatesampledispatchertimer)]
 [!code-vb[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimer](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InvalidateRequeryWithDispatcherTimer/visualbasic/window1.xaml.vb#invalidatesampledispatchertimer)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
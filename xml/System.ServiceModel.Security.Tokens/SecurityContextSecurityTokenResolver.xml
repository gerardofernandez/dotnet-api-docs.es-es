<Type Name="SecurityContextSecurityTokenResolver" FullName="System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4b07774c53703c6b8e3c4db5dbaa896b4551fa4e" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39811088" /></Metadata><TypeSignature Language="C#" Value="public class SecurityContextSecurityTokenResolver : System.IdentityModel.Selectors.SecurityTokenResolver, System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SecurityContextSecurityTokenResolver extends System.IdentityModel.Selectors.SecurityTokenResolver implements class System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver" />
  <TypeSignature Language="VB.NET" Value="Public Class SecurityContextSecurityTokenResolver&#xA;Inherits SecurityTokenResolver&#xA;Implements ISecurityContextSecurityTokenCache" />
  <TypeSignature Language="C++ CLI" Value="public ref class SecurityContextSecurityTokenResolver : System::IdentityModel::Selectors::SecurityTokenResolver, System::ServiceModel::Security::Tokens::ISecurityContextSecurityTokenCache" />
  <TypeSignature Language="F#" Value="type SecurityContextSecurityTokenResolver = class&#xA;    inherit SecurityTokenResolver&#xA;    interface ISecurityContextSecurityTokenCache" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Selectors.SecurityTokenResolver</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="0908f-101">Resuelve los tokens de contexto de seguridad.</span><span class="sxs-lookup"><span data-stu-id="0908f-101">Resolves security context tokens.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0908f-102">Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver" />.</span><span class="sxs-lookup"><span data-stu-id="0908f-102">Initializes a new instance of the <see cref="T:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SecurityContextSecurityTokenResolver (int securityContextCacheCapacity, bool removeOldestTokensOnCacheFull);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 securityContextCacheCapacity, bool removeOldestTokensOnCacheFull) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.#ctor(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (securityContextCacheCapacity As Integer, removeOldestTokensOnCacheFull As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SecurityContextSecurityTokenResolver(int securityContextCacheCapacity, bool removeOldestTokensOnCacheFull);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver : int * bool -&gt; System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver" Usage="new System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver (securityContextCacheCapacity, removeOldestTokensOnCacheFull)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="securityContextCacheCapacity" Type="System.Int32" />
        <Parameter Name="removeOldestTokensOnCacheFull" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="securityContextCacheCapacity"><span data-ttu-id="0908f-103">El tamaño de la caché de contexto de seguridad.</span><span class="sxs-lookup"><span data-stu-id="0908f-103">The size of the security context cache.</span></span></param>
        <param name="removeOldestTokensOnCacheFull"><span data-ttu-id="0908f-104"><see langword="true" /> si se deben eliminar los tokens más antiguos cuando la caché esté llena; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0908f-104"><see langword="true" /> if the oldest tokens should be removed when the cache is full; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="0908f-105">Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver" />.</span><span class="sxs-lookup"><span data-stu-id="0908f-105">Initializes a new instance of the <see cref="T:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0908f-106">Si `removeOldestTokensOnCacheFull` es `false`, `AddContext` produce una <xref:System.ServiceModel.QuotaExceededException> si se ha alcanzado la capacidad de memoria caché.</span><span class="sxs-lookup"><span data-stu-id="0908f-106">If `removeOldestTokensOnCacheFull` is `false`, `AddContext` throws a <xref:System.ServiceModel.QuotaExceededException> if the cache capacity has been reached.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SecurityContextSecurityTokenResolver (int securityContextCacheCapacity, bool removeOldestTokensOnCacheFull, TimeSpan clockSkew);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 securityContextCacheCapacity, bool removeOldestTokensOnCacheFull, valuetype System.TimeSpan clockSkew) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.#ctor(System.Int32,System.Boolean,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (securityContextCacheCapacity As Integer, removeOldestTokensOnCacheFull As Boolean, clockSkew As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SecurityContextSecurityTokenResolver(int securityContextCacheCapacity, bool removeOldestTokensOnCacheFull, TimeSpan clockSkew);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver : int * bool * TimeSpan -&gt; System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver" Usage="new System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver (securityContextCacheCapacity, removeOldestTokensOnCacheFull, clockSkew)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="securityContextCacheCapacity" Type="System.Int32" />
        <Parameter Name="removeOldestTokensOnCacheFull" Type="System.Boolean" />
        <Parameter Name="clockSkew" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="securityContextCacheCapacity"><span data-ttu-id="0908f-107">El tamaño de la caché de contexto de seguridad.</span><span class="sxs-lookup"><span data-stu-id="0908f-107">The size of the security context cache.</span></span></param>
        <param name="removeOldestTokensOnCacheFull"><span data-ttu-id="0908f-108"><see langword="true" /> si se deben eliminar los tokens más antiguos cuando la caché esté llena; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0908f-108"><see langword="true" /> if the oldest tokens should be removed when the cache is full; otherwise, <see langword="false" />.</span></span></param>
        <param name="clockSkew"><span data-ttu-id="0908f-109">Diferencia máxima de tiempo permitida entre la configuración del reloj del cliente y del servidor.</span><span class="sxs-lookup"><span data-stu-id="0908f-109">The maximum allowable time difference between client and server clock settings.</span></span></param>
        <summary><span data-ttu-id="0908f-110">Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver" /> con la capacidad de la memoria caché de contexto de seguridad especificada y el máximo de desplazamiento del reloj.</span><span class="sxs-lookup"><span data-stu-id="0908f-110">Initializes a new instance of the <see cref="T:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver" /> class with the specified security context cache capacity and clock skew maximum.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddContext">
      <MemberSignature Language="C#" Value="public void AddContext (System.ServiceModel.Security.Tokens.SecurityContextSecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddContext(class System.ServiceModel.Security.Tokens.SecurityContextSecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.AddContext(System.ServiceModel.Security.Tokens.SecurityContextSecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddContext (token As SecurityContextSecurityToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddContext(System::ServiceModel::Security::Tokens::SecurityContextSecurityToken ^ token);" />
      <MemberSignature Language="F#" Value="abstract member AddContext : System.ServiceModel.Security.Tokens.SecurityContextSecurityToken -&gt; unit&#xA;override this.AddContext : System.ServiceModel.Security.Tokens.SecurityContextSecurityToken -&gt; unit" Usage="securityContextSecurityTokenResolver.AddContext token" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.AddContext(System.ServiceModel.Security.Tokens.SecurityContextSecurityToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.ServiceModel.Security.Tokens.SecurityContextSecurityToken" />
      </Parameters>
      <Docs>
        <param name="token"><span data-ttu-id="0908f-111">Token de contexto de seguridad.</span><span class="sxs-lookup"><span data-stu-id="0908f-111">The security context token.</span></span></param>
        <summary><span data-ttu-id="0908f-112">Añade un contexto de seguridad (token de seguridad) a la caché del token.</span><span class="sxs-lookup"><span data-stu-id="0908f-112">Adds a security context security token to the token cache.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ServiceModel.QuotaExceededException"><span data-ttu-id="0908f-113">La propiedad <see cref="P:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.RemoveOldestTokensOnCacheFull" /> es <see langword="false" /> y se ha alcanzado o superado la capacidad de la memoria caché.</span><span class="sxs-lookup"><span data-stu-id="0908f-113">The <see cref="P:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.RemoveOldestTokensOnCacheFull" /> property is <see langword="false" /> and the cache capacity has been reached or exceeded.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ClearContexts">
      <MemberSignature Language="C#" Value="public void ClearContexts ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearContexts() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.ClearContexts" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearContexts ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ClearContexts();" />
      <MemberSignature Language="F#" Value="abstract member ClearContexts : unit -&gt; unit&#xA;override this.ClearContexts : unit -&gt; unit" Usage="securityContextSecurityTokenResolver.ClearContexts " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.ClearContexts</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0908f-114">Borra el contenido de la caché del token.</span><span class="sxs-lookup"><span data-stu-id="0908f-114">Clears the token cache of content.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClockSkew">
      <MemberSignature Language="C#" Value="public TimeSpan ClockSkew { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan ClockSkew" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.ClockSkew" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClockSkew As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan ClockSkew { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.ClockSkew : TimeSpan" Usage="System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.ClockSkew" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0908f-115">Devuelve la diferencia máxima de tiempo permitida entre la configuración del reloj del cliente y del servidor.</span><span class="sxs-lookup"><span data-stu-id="0908f-115">Returns the maximum allowable time difference between client and server clock settings.</span></span></summary>
        <value><span data-ttu-id="0908f-116">Diferencia máxima de tiempo permitida entre la configuración del reloj del cliente y del servidor.</span><span class="sxs-lookup"><span data-stu-id="0908f-116">The maximum allowable time difference between client and server clock settings.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllContexts">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Security.Tokens.SecurityContextSecurityToken&gt; GetAllContexts (System.Xml.UniqueId contextId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ObjectModel.Collection`1&lt;class System.ServiceModel.Security.Tokens.SecurityContextSecurityToken&gt; GetAllContexts(class System.Xml.UniqueId contextId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.GetAllContexts(System.Xml.UniqueId)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllContexts (contextId As UniqueId) As Collection(Of SecurityContextSecurityToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Security::Tokens::SecurityContextSecurityToken ^&gt; ^ GetAllContexts(System::Xml::UniqueId ^ contextId);" />
      <MemberSignature Language="F#" Value="abstract member GetAllContexts : System.Xml.UniqueId -&gt; System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Security.Tokens.SecurityContextSecurityToken&gt;&#xA;override this.GetAllContexts : System.Xml.UniqueId -&gt; System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Security.Tokens.SecurityContextSecurityToken&gt;" Usage="securityContextSecurityTokenResolver.GetAllContexts contextId" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.GetAllContexts(System.Xml.UniqueId)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Security.Tokens.SecurityContextSecurityToken&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contextId" Type="System.Xml.UniqueId" />
      </Parameters>
      <Docs>
        <param name="contextId"><span data-ttu-id="0908f-117">Identificador del contexto de seguridad especificado.</span><span class="sxs-lookup"><span data-stu-id="0908f-117">The specified security context ID.</span></span></param>
        <summary><span data-ttu-id="0908f-118">Obtiene una colección de id. de contexto de seguridad (token de seguridad) que coinciden con un id. de contexto especificado.</span><span class="sxs-lookup"><span data-stu-id="0908f-118">Gets a collection of security context security token IDs that match a specified context ID.</span></span></summary>
        <returns><span data-ttu-id="0908f-119">Colección genérica de tokens de contexto de seguridad.</span><span class="sxs-lookup"><span data-stu-id="0908f-119">A generic collection of security context tokens.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContext">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Security.Tokens.SecurityContextSecurityToken GetContext (System.Xml.UniqueId contextId, System.Xml.UniqueId generation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Security.Tokens.SecurityContextSecurityToken GetContext(class System.Xml.UniqueId contextId, class System.Xml.UniqueId generation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.GetContext(System.Xml.UniqueId,System.Xml.UniqueId)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetContext (contextId As UniqueId, generation As UniqueId) As SecurityContextSecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ServiceModel::Security::Tokens::SecurityContextSecurityToken ^ GetContext(System::Xml::UniqueId ^ contextId, System::Xml::UniqueId ^ generation);" />
      <MemberSignature Language="F#" Value="abstract member GetContext : System.Xml.UniqueId * System.Xml.UniqueId -&gt; System.ServiceModel.Security.Tokens.SecurityContextSecurityToken&#xA;override this.GetContext : System.Xml.UniqueId * System.Xml.UniqueId -&gt; System.ServiceModel.Security.Tokens.SecurityContextSecurityToken" Usage="securityContextSecurityTokenResolver.GetContext (contextId, generation)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.GetContext(System.Xml.UniqueId,System.Xml.UniqueId)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.Tokens.SecurityContextSecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contextId" Type="System.Xml.UniqueId" />
        <Parameter Name="generation" Type="System.Xml.UniqueId" />
      </Parameters>
      <Docs>
        <param name="contextId"><span data-ttu-id="0908f-120">Identificador del contexto de seguridad especificado.</span><span class="sxs-lookup"><span data-stu-id="0908f-120">The specified security context ID.</span></span></param>
        <param name="generation"><span data-ttu-id="0908f-121">La generación.</span><span class="sxs-lookup"><span data-stu-id="0908f-121">The generation.</span></span></param>
        <summary><span data-ttu-id="0908f-122">Obtiene el identificador del token de contexto de seguridad que coincide con una generación y un identificador de contexto determinados.</span><span class="sxs-lookup"><span data-stu-id="0908f-122">Gets the security context security token ID that matches a specified context ID and generation.</span></span></summary>
        <returns><span data-ttu-id="0908f-123">Token de contexto de seguridad coincidente.</span><span class="sxs-lookup"><span data-stu-id="0908f-123">The matching security context token.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAllContexts">
      <MemberSignature Language="C#" Value="public void RemoveAllContexts (System.Xml.UniqueId contextId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAllContexts(class System.Xml.UniqueId contextId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.RemoveAllContexts(System.Xml.UniqueId)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAllContexts (contextId As UniqueId)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAllContexts(System::Xml::UniqueId ^ contextId);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAllContexts : System.Xml.UniqueId -&gt; unit&#xA;override this.RemoveAllContexts : System.Xml.UniqueId -&gt; unit" Usage="securityContextSecurityTokenResolver.RemoveAllContexts contextId" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.RemoveAllContexts(System.Xml.UniqueId)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contextId" Type="System.Xml.UniqueId" />
      </Parameters>
      <Docs>
        <param name="contextId"><span data-ttu-id="0908f-124">Identificador del contexto de seguridad especificado.</span><span class="sxs-lookup"><span data-stu-id="0908f-124">The specified security context ID.</span></span></param>
        <summary><span data-ttu-id="0908f-125">Quita todos los tokens de la memoria caché que coinciden con un determinado identificador de contexto.</span><span class="sxs-lookup"><span data-stu-id="0908f-125">Removes all tokens from the cache that match a given context ID.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveContext">
      <MemberSignature Language="C#" Value="public void RemoveContext (System.Xml.UniqueId contextId, System.Xml.UniqueId generation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveContext(class System.Xml.UniqueId contextId, class System.Xml.UniqueId generation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.RemoveContext(System.Xml.UniqueId,System.Xml.UniqueId)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveContext (contextId As UniqueId, generation As UniqueId)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveContext(System::Xml::UniqueId ^ contextId, System::Xml::UniqueId ^ generation);" />
      <MemberSignature Language="F#" Value="abstract member RemoveContext : System.Xml.UniqueId * System.Xml.UniqueId -&gt; unit&#xA;override this.RemoveContext : System.Xml.UniqueId * System.Xml.UniqueId -&gt; unit" Usage="securityContextSecurityTokenResolver.RemoveContext (contextId, generation)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.RemoveContext(System.Xml.UniqueId,System.Xml.UniqueId)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contextId" Type="System.Xml.UniqueId" />
        <Parameter Name="generation" Type="System.Xml.UniqueId" />
      </Parameters>
      <Docs>
        <param name="contextId"><span data-ttu-id="0908f-126">Identificador del contexto de seguridad especificado.</span><span class="sxs-lookup"><span data-stu-id="0908f-126">The specified security context ID.</span></span></param>
        <param name="generation"><span data-ttu-id="0908f-127">La generación.</span><span class="sxs-lookup"><span data-stu-id="0908f-127">The generation.</span></span></param>
        <summary><span data-ttu-id="0908f-128">Quita de la memoria caché el token que coincide con una generación y un identificador de contexto determinados.</span><span class="sxs-lookup"><span data-stu-id="0908f-128">Removes the token from the cache that matches a given context ID and generation.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveOldestTokensOnCacheFull">
      <MemberSignature Language="C#" Value="public bool RemoveOldestTokensOnCacheFull { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RemoveOldestTokensOnCacheFull" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.RemoveOldestTokensOnCacheFull" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RemoveOldestTokensOnCacheFull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RemoveOldestTokensOnCacheFull { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RemoveOldestTokensOnCacheFull : bool" Usage="System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.RemoveOldestTokensOnCacheFull" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0908f-129">Obtiene un valor que indica si se deben eliminar los tokens más antiguos cuando la caché esté llena.</span><span class="sxs-lookup"><span data-stu-id="0908f-129">Gets a value that indicates whether the oldest tokens should be removed when the cache is full.</span></span></summary>
        <value><span data-ttu-id="0908f-130"><see langword="true" /> si se deben eliminar los tokens más antiguos cuando la caché esté llena; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0908f-130"><see langword="true" /> if the oldest tokens should be removed when the cache is full; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SecurityContextTokenCacheCapacity">
      <MemberSignature Language="C#" Value="public int SecurityContextTokenCacheCapacity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SecurityContextTokenCacheCapacity" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.SecurityContextTokenCacheCapacity" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SecurityContextTokenCacheCapacity As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SecurityContextTokenCacheCapacity { int get(); };" />
      <MemberSignature Language="F#" Value="member this.SecurityContextTokenCacheCapacity : int" Usage="System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.SecurityContextTokenCacheCapacity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0908f-131">Obtiene el tamaño de caché del token de contexto de seguridad.</span><span class="sxs-lookup"><span data-stu-id="0908f-131">Gets the security context token cache size.</span></span></summary>
        <value><span data-ttu-id="0908f-132">El tamaño de la caché del token de contexto de seguridad.</span><span class="sxs-lookup"><span data-stu-id="0908f-132">The security context token cache size.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryAddContext">
      <MemberSignature Language="C#" Value="public bool TryAddContext (System.ServiceModel.Security.Tokens.SecurityContextSecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryAddContext(class System.ServiceModel.Security.Tokens.SecurityContextSecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.TryAddContext(System.ServiceModel.Security.Tokens.SecurityContextSecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryAddContext (token As SecurityContextSecurityToken) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool TryAddContext(System::ServiceModel::Security::Tokens::SecurityContextSecurityToken ^ token);" />
      <MemberSignature Language="F#" Value="abstract member TryAddContext : System.ServiceModel.Security.Tokens.SecurityContextSecurityToken -&gt; bool&#xA;override this.TryAddContext : System.ServiceModel.Security.Tokens.SecurityContextSecurityToken -&gt; bool" Usage="securityContextSecurityTokenResolver.TryAddContext token" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.TryAddContext(System.ServiceModel.Security.Tokens.SecurityContextSecurityToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.ServiceModel.Security.Tokens.SecurityContextSecurityToken" />
      </Parameters>
      <Docs>
        <param name="token"><span data-ttu-id="0908f-133">Token de contexto de seguridad.</span><span class="sxs-lookup"><span data-stu-id="0908f-133">The security context token.</span></span></param>
        <summary><span data-ttu-id="0908f-134">Intenta agregar un token a la memoria caché.</span><span class="sxs-lookup"><span data-stu-id="0908f-134">Attempts to add a token to the cache.</span></span></summary>
        <returns><span data-ttu-id="0908f-135"><see langword="true" /> si el token se ha agregado correctamente; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0908f-135"><see langword="true" /> if the token was added successfully to the cache; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0908f-136">El valor de <paramref name="token" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="0908f-136">The <paramref name="token" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0908f-137">La fecha o la hora de <paramref name="token" /> está fuera de los límites.</span><span class="sxs-lookup"><span data-stu-id="0908f-137">The <paramref name="token" /> date or time is outside limits.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryResolveSecurityKeyCore">
      <MemberSignature Language="C#" Value="protected override bool TryResolveSecurityKeyCore (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause, out System.IdentityModel.Tokens.SecurityKey key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool TryResolveSecurityKeyCore(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause, [out] class System.IdentityModel.Tokens.SecurityKey&amp; key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.TryResolveSecurityKeyCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function TryResolveSecurityKeyCore (keyIdentifierClause As SecurityKeyIdentifierClause, ByRef key As SecurityKey) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool TryResolveSecurityKeyCore(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ keyIdentifierClause, [Runtime::InteropServices::Out] System::IdentityModel::Tokens::SecurityKey ^ % key);" />
      <MemberSignature Language="F#" Value="override this.TryResolveSecurityKeyCore : System.IdentityModel.Tokens.SecurityKeyIdentifierClause *  -&gt; bool" Usage="securityContextSecurityTokenResolver.TryResolveSecurityKeyCore (keyIdentifierClause, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
        <Parameter Name="key" Type="System.IdentityModel.Tokens.SecurityKey" RefType="out" />
      </Parameters>
      <Docs>
        <param name="keyIdentifierClause"><span data-ttu-id="0908f-138">Cláusula de identificador de clave de seguridad.</span><span class="sxs-lookup"><span data-stu-id="0908f-138">The security key identifier clause.</span></span></param>
        <param name="key"><span data-ttu-id="0908f-139">Cuando este método vuelve, contiene el núcleo de la clave resuelto.</span><span class="sxs-lookup"><span data-stu-id="0908f-139">When this method returns, contains resolved key core.</span></span> <span data-ttu-id="0908f-140">Este parámetro se pasa sin inicializar.</span><span class="sxs-lookup"><span data-stu-id="0908f-140">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="0908f-141">Intenta resolver el núcleo de la clave de seguridad cuando hay una cláusula de identificador de clave especificada.</span><span class="sxs-lookup"><span data-stu-id="0908f-141">Attempts to resolve the security key core, given a specified key identifier clause.</span></span></summary>
        <returns><span data-ttu-id="0908f-142"><see langword="true" /> si se resolviera el núcleo de la clave correctamente; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0908f-142"><see langword="true" /> if the key core was successfully resolved; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryResolveTokenCore">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0908f-143">Intenta resolver el token cuando hay un identificador de clave especificado.</span><span class="sxs-lookup"><span data-stu-id="0908f-143">Attempts to resolve the token, given a specified key identifier.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryResolveTokenCore">
      <MemberSignature Language="C#" Value="protected override bool TryResolveTokenCore (System.IdentityModel.Tokens.SecurityKeyIdentifier keyIdentifier, out System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool TryResolveTokenCore(class System.IdentityModel.Tokens.SecurityKeyIdentifier keyIdentifier, [out] class System.IdentityModel.Tokens.SecurityToken&amp; token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function TryResolveTokenCore (keyIdentifier As SecurityKeyIdentifier, ByRef token As SecurityToken) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool TryResolveTokenCore(System::IdentityModel::Tokens::SecurityKeyIdentifier ^ keyIdentifier, [Runtime::InteropServices::Out] System::IdentityModel::Tokens::SecurityToken ^ % token);" />
      <MemberSignature Language="F#" Value="override this.TryResolveTokenCore : System.IdentityModel.Tokens.SecurityKeyIdentifier *  -&gt; bool" Usage="securityContextSecurityTokenResolver.TryResolveTokenCore (keyIdentifier, token)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifier" Type="System.IdentityModel.Tokens.SecurityKeyIdentifier" />
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" RefType="out" />
      </Parameters>
      <Docs>
        <param name="keyIdentifier"><span data-ttu-id="0908f-144">Identificador de clave de seguridad.</span><span class="sxs-lookup"><span data-stu-id="0908f-144">The security key identifier.</span></span></param>
        <param name="token"><span data-ttu-id="0908f-145">Cuando este método vuelve, contiene el núcleo de la clave resuelto.</span><span class="sxs-lookup"><span data-stu-id="0908f-145">When this method returns, contains the resolved key core.</span></span> <span data-ttu-id="0908f-146">Este parámetro se pasa sin inicializar.</span><span class="sxs-lookup"><span data-stu-id="0908f-146">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="0908f-147">Intenta resolver el token cuando hay un identificador de clave especificado.</span><span class="sxs-lookup"><span data-stu-id="0908f-147">Attempts to resolve the token, given a specified key identifier.</span></span></summary>
        <returns><span data-ttu-id="0908f-148"><see langword="true" /> si se resolviera el token de clave correctamente; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0908f-148"><see langword="true" /> if the key token was successfully resolved; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryResolveTokenCore">
      <MemberSignature Language="C#" Value="protected override bool TryResolveTokenCore (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause, out System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool TryResolveTokenCore(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause, [out] class System.IdentityModel.Tokens.SecurityToken&amp; token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function TryResolveTokenCore (keyIdentifierClause As SecurityKeyIdentifierClause, ByRef token As SecurityToken) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool TryResolveTokenCore(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ keyIdentifierClause, [Runtime::InteropServices::Out] System::IdentityModel::Tokens::SecurityToken ^ % token);" />
      <MemberSignature Language="F#" Value="override this.TryResolveTokenCore : System.IdentityModel.Tokens.SecurityKeyIdentifierClause *  -&gt; bool" Usage="securityContextSecurityTokenResolver.TryResolveTokenCore (keyIdentifierClause, token)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" RefType="out" />
      </Parameters>
      <Docs>
        <param name="keyIdentifierClause"><span data-ttu-id="0908f-149">Cláusula de identificador de clave de seguridad.</span><span class="sxs-lookup"><span data-stu-id="0908f-149">The security key identifier clause.</span></span></param>
        <param name="token"><span data-ttu-id="0908f-150">Cuando este método vuelve, contiene el núcleo de la clave resuelto.</span><span class="sxs-lookup"><span data-stu-id="0908f-150">When this method returns, contains the resolved key core.</span></span> <span data-ttu-id="0908f-151">Este parámetro se pasa sin inicializar.</span><span class="sxs-lookup"><span data-stu-id="0908f-151">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="0908f-152">Intenta resolver el token cuando hay una cláusula de identificador de clave especificada.</span><span class="sxs-lookup"><span data-stu-id="0908f-152">Attempts to resolve the token, given a specified key identifier clause.</span></span></summary>
        <returns><span data-ttu-id="0908f-153"><see langword="true" /> si se resolviera el token de clave correctamente; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0908f-153"><see langword="true" /> if the key token was successfully resolved; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateContextCachingTime">
      <MemberSignature Language="C#" Value="public void UpdateContextCachingTime (System.ServiceModel.Security.Tokens.SecurityContextSecurityToken context, DateTime expirationTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateContextCachingTime(class System.ServiceModel.Security.Tokens.SecurityContextSecurityToken context, valuetype System.DateTime expirationTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.UpdateContextCachingTime(System.ServiceModel.Security.Tokens.SecurityContextSecurityToken,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateContextCachingTime (context As SecurityContextSecurityToken, expirationTime As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void UpdateContextCachingTime(System::ServiceModel::Security::Tokens::SecurityContextSecurityToken ^ context, DateTime expirationTime);" />
      <MemberSignature Language="F#" Value="abstract member UpdateContextCachingTime : System.ServiceModel.Security.Tokens.SecurityContextSecurityToken * DateTime -&gt; unit&#xA;override this.UpdateContextCachingTime : System.ServiceModel.Security.Tokens.SecurityContextSecurityToken * DateTime -&gt; unit" Usage="securityContextSecurityTokenResolver.UpdateContextCachingTime (context, expirationTime)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.UpdateContextCachingTime(System.ServiceModel.Security.Tokens.SecurityContextSecurityToken,System.DateTime)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Security.Tokens.SecurityContextSecurityToken" />
        <Parameter Name="expirationTime" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="0908f-154">Contexto de seguridad.</span><span class="sxs-lookup"><span data-stu-id="0908f-154">The security context.</span></span></param>
        <param name="expirationTime"><span data-ttu-id="0908f-155">La nueva hora y fecha de expiración.</span><span class="sxs-lookup"><span data-stu-id="0908f-155">The new expiration time and date.</span></span></param>
        <summary><span data-ttu-id="0908f-156">Actualiza la fecha de expiración para un token en la caché.</span><span class="sxs-lookup"><span data-stu-id="0908f-156">Updates the expiration date for a token in the cache.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
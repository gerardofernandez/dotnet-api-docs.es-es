<Type Name="ObjectType" FullName="Microsoft.VisualBasic.CompilerServices.ObjectType">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3f816c95180aa0f29827756bb076be206ee47309" /><Meta Name="ms.sourcegitcommit" Value="42a3c35677e9d87eeb503607ae50c9d39827d414" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="12/17/2018" /><Meta Name="ms.locfileid" Value="53524414" /></Metadata><TypeSignature Language="C#" Value="public sealed class ObjectType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ObjectType extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.CompilerServices.ObjectType" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ObjectType" />
  <TypeSignature Language="C++ CLI" Value="public ref class ObjectType sealed" />
  <TypeSignature Language="F#" Value="type ObjectType = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="b9125-101">Esta clase ha quedado obsoleta en Visual Basic 2005.</span><span class="sxs-lookup"><span data-stu-id="b9125-101">This class has been deprecated as of Visual Basic 2005.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9125-102">Esta clase es compatible con el compilador de Visual Basic y no está pensada para utilizarse directamente desde el código.</span><span class="sxs-lookup"><span data-stu-id="b9125-102">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
    </remarks>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectType ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectType();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b9125-103">Inicializa una nueva instancia de la clase <see cref="T:Microsoft.VisualBasic.CompilerServices.ObjectType" />.</span><span class="sxs-lookup"><span data-stu-id="b9125-103">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.CompilerServices.ObjectType" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9125-104">Esta clase es compatible con el compilador de Visual Basic y no está pensada para utilizarse directamente desde el código.</span><span class="sxs-lookup"><span data-stu-id="b9125-104">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="AddObj">
      <MemberSignature Language="C#" Value="public static object AddObj (object o1, object o2);" />
      <MemberSignature Language="ILAsm" Value=".method public static object AddObj(object o1, object o2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.AddObj(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AddObj (o1 As Object, o2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ AddObj(System::Object ^ o1, System::Object ^ o2);" />
      <MemberSignature Language="F#" Value="static member AddObj : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.AddObj (o1, o2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o1" Type="System.Object" />
        <Parameter Name="o2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o1"><span data-ttu-id="b9125-105">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="b9125-105">Required.</span></span> <span data-ttu-id="b9125-106">Cualquier expresión numérica.</span><span class="sxs-lookup"><span data-stu-id="b9125-106">Any numeric expression.</span></span></param>
        <param name="o2"><span data-ttu-id="b9125-107">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="b9125-107">Required.</span></span> <span data-ttu-id="b9125-108">Cualquier expresión numérica.</span><span class="sxs-lookup"><span data-stu-id="b9125-108">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="b9125-109">Realiza una operación de suma (+).</span><span class="sxs-lookup"><span data-stu-id="b9125-109">Performs an addition (+) operation.</span></span></summary>
        <returns><span data-ttu-id="b9125-110">La suma de <paramref name="o1" /> y <paramref name="o2" />.</span><span class="sxs-lookup"><span data-stu-id="b9125-110">The sum of <paramref name="o1" /> and <paramref name="o2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9125-111">Esta clase es compatible con el compilador de Visual Basic y no está pensada para utilizarse directamente desde el código.</span><span class="sxs-lookup"><span data-stu-id="b9125-111">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/addition-operator.md"><span data-ttu-id="b9125-112">+ (Operador, Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="b9125-112">+ Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="BitAndObj">
      <MemberSignature Language="C#" Value="public static object BitAndObj (object obj1, object obj2);" />
      <MemberSignature Language="ILAsm" Value=".method public static object BitAndObj(object obj1, object obj2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.BitAndObj(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BitAndObj (obj1 As Object, obj2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ BitAndObj(System::Object ^ obj1, System::Object ^ obj2);" />
      <MemberSignature Language="F#" Value="static member BitAndObj : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.BitAndObj (obj1, obj2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj1" Type="System.Object" />
        <Parameter Name="obj2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj1"><span data-ttu-id="b9125-113">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="b9125-113">Required.</span></span> <span data-ttu-id="b9125-114">Cualquier expresión numérica o de tipo <see langword="Boolean" />.</span><span class="sxs-lookup"><span data-stu-id="b9125-114">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <param name="obj2"><span data-ttu-id="b9125-115">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="b9125-115">Required.</span></span> <span data-ttu-id="b9125-116">Cualquier expresión numérica o de tipo <see langword="Boolean" />.</span><span class="sxs-lookup"><span data-stu-id="b9125-116">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <summary><span data-ttu-id="b9125-117">Realiza una operación <see langword="And" /> bit a bit.</span><span class="sxs-lookup"><span data-stu-id="b9125-117">Performs a bitwise <see langword="And" /> operation.</span></span></summary>
        <returns><span data-ttu-id="b9125-118">Se devuelve 1 si tanto <paramref name="obj1" /> como <paramref name="obj2" /> se evalúan como 1; de lo contrario, se devuelve 0.</span><span class="sxs-lookup"><span data-stu-id="b9125-118">1 if both <paramref name="obj1" /> and <paramref name="obj2" /> evaluate to 1; otherwise, 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9125-119">Esta clase es compatible con el compilador de Visual Basic y no está pensada para utilizarse directamente desde el código.</span><span class="sxs-lookup"><span data-stu-id="b9125-119">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/and-operator.md"><span data-ttu-id="b9125-120">And (Operador, Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="b9125-120">And Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="BitOrObj">
      <MemberSignature Language="C#" Value="public static object BitOrObj (object obj1, object obj2);" />
      <MemberSignature Language="ILAsm" Value=".method public static object BitOrObj(object obj1, object obj2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.BitOrObj(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BitOrObj (obj1 As Object, obj2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ BitOrObj(System::Object ^ obj1, System::Object ^ obj2);" />
      <MemberSignature Language="F#" Value="static member BitOrObj : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.BitOrObj (obj1, obj2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj1" Type="System.Object" />
        <Parameter Name="obj2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj1"><span data-ttu-id="b9125-121">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="b9125-121">Required.</span></span> <span data-ttu-id="b9125-122">Cualquier expresión numérica o de tipo <see langword="Boolean" />.</span><span class="sxs-lookup"><span data-stu-id="b9125-122">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <param name="obj2"><span data-ttu-id="b9125-123">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="b9125-123">Required.</span></span> <span data-ttu-id="b9125-124">Cualquier expresión numérica o de tipo <see langword="Boolean" />.</span><span class="sxs-lookup"><span data-stu-id="b9125-124">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <summary><span data-ttu-id="b9125-125">Realiza una operación <see langword="Or" /> bit a bit.</span><span class="sxs-lookup"><span data-stu-id="b9125-125">Performs a bitwise <see langword="Or" /> operation.</span></span></summary>
        <returns><span data-ttu-id="b9125-126">Se devuelve 0 si tanto <paramref name="obj1" /> como <paramref name="obj2" /> se evalúan como 0; de lo contrario, se devuelve 1.</span><span class="sxs-lookup"><span data-stu-id="b9125-126">0 if both <paramref name="obj1" /> and <paramref name="obj2" /> evaluate to 0; otherwise, 1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9125-127">Esta clase es compatible con el compilador de Visual Basic y no está pensada para utilizarse directamente desde el código.</span><span class="sxs-lookup"><span data-stu-id="b9125-127">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/or-operator.md"><span data-ttu-id="b9125-128">Or (Operador, Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="b9125-128">Or Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="BitXorObj">
      <MemberSignature Language="C#" Value="public static object BitXorObj (object obj1, object obj2);" />
      <MemberSignature Language="ILAsm" Value=".method public static object BitXorObj(object obj1, object obj2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.BitXorObj(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BitXorObj (obj1 As Object, obj2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ BitXorObj(System::Object ^ obj1, System::Object ^ obj2);" />
      <MemberSignature Language="F#" Value="static member BitXorObj : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.BitXorObj (obj1, obj2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj1" Type="System.Object" />
        <Parameter Name="obj2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj1"><span data-ttu-id="b9125-129">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="b9125-129">Required.</span></span> <span data-ttu-id="b9125-130">Cualquier expresión numérica o de tipo <see langword="Boolean" />.</span><span class="sxs-lookup"><span data-stu-id="b9125-130">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <param name="obj2"><span data-ttu-id="b9125-131">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="b9125-131">Required.</span></span> <span data-ttu-id="b9125-132">Cualquier expresión numérica o de tipo <see langword="Boolean" />.</span><span class="sxs-lookup"><span data-stu-id="b9125-132">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <summary><span data-ttu-id="b9125-133">Realiza una operación <see langword="Xor" />.</span><span class="sxs-lookup"><span data-stu-id="b9125-133">Performs an <see langword="Xor" /> operation.</span></span></summary>
        <returns><span data-ttu-id="b9125-134">Valor numérico que representa la exclusión bit a bit (disyunción bit a bit exclusiva) de dos modelos de bits numéricos.</span><span class="sxs-lookup"><span data-stu-id="b9125-134">A numeric value that represents the bitwise exclusion (exclusive bitwise disjunction) of two numeric bit patterns.</span></span> <span data-ttu-id="b9125-135">Para obtener más información, vea <see href="https://docs.microsoft.com/dotnet/visual-basic/language-reference/operators/xor-operator">Operador Xor</see>.</span><span class="sxs-lookup"><span data-stu-id="b9125-135">For more information, see <see href="https://docs.microsoft.com/dotnet/visual-basic/language-reference/operators/xor-operator">Xor Operator</see>.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9125-136">Esta clase es compatible con el compilador de Visual Basic y no está pensada para utilizarse directamente desde el código.</span><span class="sxs-lookup"><span data-stu-id="b9125-136">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/xor-operator.md"><span data-ttu-id="b9125-137">Xor (Operador, Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="b9125-137">Xor Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DivObj">
      <MemberSignature Language="C#" Value="public static object DivObj (object o1, object o2);" />
      <MemberSignature Language="ILAsm" Value=".method public static object DivObj(object o1, object o2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.DivObj(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DivObj (o1 As Object, o2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ DivObj(System::Object ^ o1, System::Object ^ o2);" />
      <MemberSignature Language="F#" Value="static member DivObj : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.DivObj (o1, o2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o1" Type="System.Object" />
        <Parameter Name="o2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o1"><span data-ttu-id="b9125-138">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="b9125-138">Required.</span></span> <span data-ttu-id="b9125-139">Cualquier expresión numérica.</span><span class="sxs-lookup"><span data-stu-id="b9125-139">Any numeric expression.</span></span></param>
        <param name="o2"><span data-ttu-id="b9125-140">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="b9125-140">Required.</span></span> <span data-ttu-id="b9125-141">Cualquier expresión numérica.</span><span class="sxs-lookup"><span data-stu-id="b9125-141">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="b9125-142">Realiza una operación de división (/).</span><span class="sxs-lookup"><span data-stu-id="b9125-142">Performs a division (/) operation.</span></span></summary>
        <returns><span data-ttu-id="b9125-143">Cociente completo de <paramref name="o1" /> dividido entre <paramref name="o2" />, incluido cualquier resto.</span><span class="sxs-lookup"><span data-stu-id="b9125-143">The full quotient of <paramref name="o1" /> divided by <paramref name="o2" />, including any remainder.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9125-144">Esta clase es compatible con el compilador de Visual Basic y no está pensada para utilizarse directamente desde el código.</span><span class="sxs-lookup"><span data-stu-id="b9125-144">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/floating-point-division-operator.md"><span data-ttu-id="b9125-145">/ (Operador, Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="b9125-145">/ Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetObjectValuePrimitive">
      <MemberSignature Language="C#" Value="public static object GetObjectValuePrimitive (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public static object GetObjectValuePrimitive(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.GetObjectValuePrimitive(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetObjectValuePrimitive (o As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetObjectValuePrimitive(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="static member GetObjectValuePrimitive : obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.GetObjectValuePrimitive o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o"><span data-ttu-id="b9125-146">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="b9125-146">Required.</span></span> <span data-ttu-id="b9125-147">Cualquier expresión.</span><span class="sxs-lookup"><span data-stu-id="b9125-147">Any expression.</span></span></param>
        <summary><span data-ttu-id="b9125-148">Devuelve un valor primitivo al que se ha aplicado la conversión boxing.</span><span class="sxs-lookup"><span data-stu-id="b9125-148">Returns a boxed primitive value.</span></span> <span data-ttu-id="b9125-149">Este método se utiliza para evitar que las estructuras se copien varias veces.</span><span class="sxs-lookup"><span data-stu-id="b9125-149">This method is used to prevent copying structures multiple times.</span></span></summary>
        <returns><span data-ttu-id="b9125-150">Valor primitivo de <paramref name="o" /> como objeto.</span><span class="sxs-lookup"><span data-stu-id="b9125-150">The primitive value of <paramref name="o" /> typed as object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9125-151">Esta clase es compatible con el compilador de Visual Basic y no está pensada para utilizarse directamente desde el código.</span><span class="sxs-lookup"><span data-stu-id="b9125-151">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="IDivObj">
      <MemberSignature Language="C#" Value="public static object IDivObj (object o1, object o2);" />
      <MemberSignature Language="ILAsm" Value=".method public static object IDivObj(object o1, object o2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.IDivObj(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IDivObj (o1 As Object, o2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ IDivObj(System::Object ^ o1, System::Object ^ o2);" />
      <MemberSignature Language="F#" Value="static member IDivObj : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.IDivObj (o1, o2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o1" Type="System.Object" />
        <Parameter Name="o2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o1"><span data-ttu-id="b9125-152">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="b9125-152">Required.</span></span> <span data-ttu-id="b9125-153">Cualquier expresión numérica.</span><span class="sxs-lookup"><span data-stu-id="b9125-153">Any numeric expression.</span></span></param>
        <param name="o2"><span data-ttu-id="b9125-154">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="b9125-154">Required.</span></span> <span data-ttu-id="b9125-155">Cualquier expresión numérica.</span><span class="sxs-lookup"><span data-stu-id="b9125-155">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="b9125-156">Realiza una operación de división de enteros (\\).</span><span class="sxs-lookup"><span data-stu-id="b9125-156">Performs an integer division (\\) operation.</span></span></summary>
        <returns><span data-ttu-id="b9125-157">Cociente entero de <paramref name="o1" /> dividido entre <paramref name="o2" />, que descarta cualquier resto y conserva sólo la parte entera.</span><span class="sxs-lookup"><span data-stu-id="b9125-157">The integer quotient of <paramref name="o1" /> divided by <paramref name="o2" />, which discards any remainder and retains only the integer portion.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9125-158">Esta clase es compatible con el compilador de Visual Basic y no está pensada para utilizarse directamente desde el código.</span><span class="sxs-lookup"><span data-stu-id="b9125-158">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/integer-division-operator.md"><span data-ttu-id="b9125-159">\ (Operador)</span><span class="sxs-lookup"><span data-stu-id="b9125-159">\ Operator</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="LikeObj">
      <MemberSignature Language="C#" Value="public static bool LikeObj (object vLeft, object vRight, Microsoft.VisualBasic.CompareMethod CompareOption);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool LikeObj(object vLeft, object vRight, valuetype Microsoft.VisualBasic.CompareMethod CompareOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.LikeObj(System.Object,System.Object,Microsoft.VisualBasic.CompareMethod)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LikeObj (vLeft As Object, vRight As Object, CompareOption As CompareMethod) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool LikeObj(System::Object ^ vLeft, System::Object ^ vRight, Microsoft::VisualBasic::CompareMethod CompareOption);" />
      <MemberSignature Language="F#" Value="static member LikeObj : obj * obj * Microsoft.VisualBasic.CompareMethod -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.LikeObj (vLeft, vRight, CompareOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vLeft" Type="System.Object" />
        <Parameter Name="vRight" Type="System.Object" />
        <Parameter Name="CompareOption" Type="Microsoft.VisualBasic.CompareMethod" />
      </Parameters>
      <Docs>
        <param name="vLeft"><span data-ttu-id="b9125-160">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="b9125-160">Required.</span></span> <span data-ttu-id="b9125-161">Cualquier expresión.</span><span class="sxs-lookup"><span data-stu-id="b9125-161">Any expression.</span></span></param>
        <param name="vRight"><span data-ttu-id="b9125-162">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="b9125-162">Required.</span></span> <span data-ttu-id="b9125-163">Expresión de cadena que se ajuste a las convenciones de coincidencia de modelos descritas en Like (Operador).</span><span class="sxs-lookup"><span data-stu-id="b9125-163">Any string expression conforming to the pattern-matching conventions described in Like Operator.</span></span></param>
        <param name="CompareOption"><span data-ttu-id="b9125-164">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="b9125-164">Required.</span></span> <span data-ttu-id="b9125-165">Valor de <see cref="T:Microsoft.VisualBasic.CompareMethod" /> que especifica que la operación usa texto o una comparación binaria.</span><span class="sxs-lookup"><span data-stu-id="b9125-165">A <see cref="T:Microsoft.VisualBasic.CompareMethod" /> value that specifies that the operation use either text or binary comparison.</span></span></param>
        <summary><span data-ttu-id="b9125-166">Realiza una comparación <see langword="Like" />.</span><span class="sxs-lookup"><span data-stu-id="b9125-166">Performs a <see langword="Like" /> comparison.</span></span></summary>
        <returns><span data-ttu-id="b9125-167">Es <see langword="True" /> si la representación de cadena del valor en <paramref name="vLeft" /> se ajusta al modelo incluido en <paramref name="vRight" />; de lo contrario, es <see langword="False" />.</span><span class="sxs-lookup"><span data-stu-id="b9125-167"><see langword="True" /> if the string representation of the value in <paramref name="vLeft" /> satisfies the pattern that is contained in <paramref name="vRight" />; otherwise, <see langword="False" />.</span></span> <span data-ttu-id="b9125-168">Es <see langword="True" /> si tanto <paramref name="vLeft" /> como <paramref name="vRight" /> son <see langword="Nothing" />.</span><span class="sxs-lookup"><span data-stu-id="b9125-168"><see langword="True" /> if both <paramref name="vLeft" /> and <paramref name="vRight" /> are <see langword="Nothing" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9125-169">Esta clase es compatible con el compilador de Visual Basic y no está pensada para utilizarse directamente desde el código.</span><span class="sxs-lookup"><span data-stu-id="b9125-169">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/like-operator.md"><span data-ttu-id="b9125-170">Like (Operador)</span><span class="sxs-lookup"><span data-stu-id="b9125-170">Like Operator</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ModObj">
      <MemberSignature Language="C#" Value="public static object ModObj (object o1, object o2);" />
      <MemberSignature Language="ILAsm" Value=".method public static object ModObj(object o1, object o2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.ModObj(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ModObj (o1 As Object, o2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ModObj(System::Object ^ o1, System::Object ^ o2);" />
      <MemberSignature Language="F#" Value="static member ModObj : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.ModObj (o1, o2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o1" Type="System.Object" />
        <Parameter Name="o2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o1"><span data-ttu-id="b9125-171">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="b9125-171">Required.</span></span> <span data-ttu-id="b9125-172">Cualquier expresión numérica.</span><span class="sxs-lookup"><span data-stu-id="b9125-172">Any numeric expression.</span></span></param>
        <param name="o2"><span data-ttu-id="b9125-173">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="b9125-173">Required.</span></span> <span data-ttu-id="b9125-174">Cualquier expresión numérica.</span><span class="sxs-lookup"><span data-stu-id="b9125-174">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="b9125-175">Realiza una operación de módulo (<see langword="Mod" />).</span><span class="sxs-lookup"><span data-stu-id="b9125-175">Performs a modulus (<see langword="Mod" />) operation.</span></span></summary>
        <returns><span data-ttu-id="b9125-176">Resto después de dividir <paramref name="o1" /> entre <paramref name="o2" />.</span><span class="sxs-lookup"><span data-stu-id="b9125-176">The remainder after <paramref name="o1" /> is divided by <paramref name="o2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9125-177">Esta clase es compatible con el compilador de Visual Basic y no está pensada para utilizarse directamente desde el código.</span><span class="sxs-lookup"><span data-stu-id="b9125-177">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/mod-operator.md"><span data-ttu-id="b9125-178">Mod (Operador, Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="b9125-178">Mod Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MulObj">
      <MemberSignature Language="C#" Value="public static object MulObj (object o1, object o2);" />
      <MemberSignature Language="ILAsm" Value=".method public static object MulObj(object o1, object o2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.MulObj(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MulObj (o1 As Object, o2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ MulObj(System::Object ^ o1, System::Object ^ o2);" />
      <MemberSignature Language="F#" Value="static member MulObj : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.MulObj (o1, o2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o1" Type="System.Object" />
        <Parameter Name="o2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o1"><span data-ttu-id="b9125-179">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="b9125-179">Required.</span></span> <span data-ttu-id="b9125-180">Cualquier expresión numérica.</span><span class="sxs-lookup"><span data-stu-id="b9125-180">Any numeric expression.</span></span></param>
        <param name="o2"><span data-ttu-id="b9125-181">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="b9125-181">Required.</span></span> <span data-ttu-id="b9125-182">Cualquier expresión numérica.</span><span class="sxs-lookup"><span data-stu-id="b9125-182">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="b9125-183">Realiza una operación de multiplicación (\*).</span><span class="sxs-lookup"><span data-stu-id="b9125-183">Performs a multiplication (\*) operation.</span></span></summary>
        <returns><span data-ttu-id="b9125-184">Producto de <paramref name="o1" /> y <paramref name="o2" />.</span><span class="sxs-lookup"><span data-stu-id="b9125-184">The product of <paramref name="o1" /> and <paramref name="o2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9125-185">Esta clase es compatible con el compilador de Visual Basic y no está pensada para utilizarse directamente desde el código.</span><span class="sxs-lookup"><span data-stu-id="b9125-185">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/multiplication-operator.md"><span data-ttu-id="b9125-186">\* (Operador, Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="b9125-186">\* Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="NegObj">
      <MemberSignature Language="C#" Value="public static object NegObj (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public static object NegObj(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.NegObj(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NegObj (obj As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ NegObj(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="static member NegObj : obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.NegObj obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="b9125-187">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="b9125-187">Required.</span></span> <span data-ttu-id="b9125-188">Cualquier expresión numérica.</span><span class="sxs-lookup"><span data-stu-id="b9125-188">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="b9125-189">Realiza una operación unaria menos (-).</span><span class="sxs-lookup"><span data-stu-id="b9125-189">Performs a unary minus (-) operation.</span></span></summary>
        <returns><span data-ttu-id="b9125-190">Valor negativo de <paramref name="obj" />.</span><span class="sxs-lookup"><span data-stu-id="b9125-190">The negative value of <paramref name="obj" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9125-191">Esta clase es compatible con el compilador de Visual Basic y no está pensada para utilizarse directamente desde el código.</span><span class="sxs-lookup"><span data-stu-id="b9125-191">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/subtraction-operator.md"><span data-ttu-id="b9125-192">- (Operador, Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="b9125-192">- Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="NotObj">
      <MemberSignature Language="C#" Value="public static object NotObj (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public static object NotObj(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.NotObj(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NotObj (obj As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ NotObj(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="static member NotObj : obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.NotObj obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="b9125-193">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="b9125-193">Required.</span></span> <span data-ttu-id="b9125-194">Cualquier expresión numérica o de tipo <see langword="Boolean" />.</span><span class="sxs-lookup"><span data-stu-id="b9125-194">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <summary><span data-ttu-id="b9125-195">Realiza una operación <see langword="Not" />.</span><span class="sxs-lookup"><span data-stu-id="b9125-195">Performs a <see langword="Not" /> operation.</span></span></summary>
        <returns><span data-ttu-id="b9125-196">Para las operaciones <see langword="Boolean" />, es <see langword="False" /> si <paramref name="obj" /> es <see langword="True" />; de lo contrario, es <see langword="True" />.</span><span class="sxs-lookup"><span data-stu-id="b9125-196">For <see langword="Boolean" /> operations, <see langword="False" /> if <paramref name="obj" /> is <see langword="True" />; otherwise, <see langword="True" />.</span></span> <span data-ttu-id="b9125-197">Para las operaciones bit a bit, es 1 si <paramref name="obj" /> es 0; de lo contrario, es 0.</span><span class="sxs-lookup"><span data-stu-id="b9125-197">For bitwise operations, 1 if <paramref name="obj" /> is 0; otherwise, 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9125-198">Esta clase es compatible con el compilador de Visual Basic y no está pensada para utilizarse directamente desde el código.</span><span class="sxs-lookup"><span data-stu-id="b9125-198">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/not-operator.md"><span data-ttu-id="b9125-199">Not (Operador, Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="b9125-199">Not Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ObjTst">
      <MemberSignature Language="C#" Value="public static int ObjTst (object o1, object o2, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 ObjTst(object o1, object o2, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.ObjTst(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ObjTst (o1 As Object, o2 As Object, TextCompare As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ObjTst(System::Object ^ o1, System::Object ^ o2, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member ObjTst : obj * obj * bool -&gt; int" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.ObjTst (o1, o2, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o1" Type="System.Object" />
        <Parameter Name="o2" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="o1"><span data-ttu-id="b9125-200">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="b9125-200">Required.</span></span> <span data-ttu-id="b9125-201">Cualquier expresión.</span><span class="sxs-lookup"><span data-stu-id="b9125-201">Any expression.</span></span></param>
        <param name="o2"><span data-ttu-id="b9125-202">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="b9125-202">Required.</span></span> <span data-ttu-id="b9125-203">Cualquier expresión.</span><span class="sxs-lookup"><span data-stu-id="b9125-203">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="b9125-204">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="b9125-204">Required.</span></span> <span data-ttu-id="b9125-205"><see langword="True" /> si se va a realizar una comparación de cadenas sin distinguir mayúsculas de minúsculas; de lo contrario, <see langword="False" />.</span><span class="sxs-lookup"><span data-stu-id="b9125-205"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="b9125-206">Realiza una comparación de cadenas de texto o binarias dados dos objetos.</span><span class="sxs-lookup"><span data-stu-id="b9125-206">Performs binary or text string comparison when given two objects.</span></span></summary>
        <returns><list type="table">
            <listheader>
              <term> <span data-ttu-id="b9125-207">Valor</span><span class="sxs-lookup"><span data-stu-id="b9125-207">Value</span></span> 
 </term>
              <description> <span data-ttu-id="b9125-208">Condición</span><span class="sxs-lookup"><span data-stu-id="b9125-208">Condition</span></span> 
 </description>
            </listheader>
            <item>
              <term> <span data-ttu-id="b9125-209">-1</span><span class="sxs-lookup"><span data-stu-id="b9125-209">-1</span></span> 
 </term>
              <description><span data-ttu-id="b9125-210">
                <paramref name="o1" /> es menor que <paramref name="o2" />.</span><span class="sxs-lookup"><span data-stu-id="b9125-210">
                <paramref name="o1" /> is less than <paramref name="o2" />.</span></span>  
  
 </description>
            </item>
            <item>
              <term> <span data-ttu-id="b9125-211">0</span><span class="sxs-lookup"><span data-stu-id="b9125-211">0</span></span> 
 </term>
              <description><span data-ttu-id="b9125-212">
                <paramref name="o1" /> es igual a <paramref name="o2" />.</span><span class="sxs-lookup"><span data-stu-id="b9125-212">
                <paramref name="o1" /> is equal to <paramref name="o2" />.</span></span>  
  
 </description>
            </item>
            <item>
              <term> <span data-ttu-id="b9125-213">1</span><span class="sxs-lookup"><span data-stu-id="b9125-213">1</span></span> 
 </term>
              <description><span data-ttu-id="b9125-214">
                <paramref name="o1" /> es mayor que <paramref name="o2" />.</span><span class="sxs-lookup"><span data-stu-id="b9125-214">
                <paramref name="o1" /> is greater than <paramref name="o2" />.</span></span>  
  
 </description>
            </item>
          </list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9125-215">Esta clase es compatible con el compilador de Visual Basic y no está pensada para utilizarse directamente desde el código.</span><span class="sxs-lookup"><span data-stu-id="b9125-215">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/comparison-operators.md"><span data-ttu-id="b9125-216">Operadores de comparación (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="b9125-216">Comparison Operators (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="PlusObj">
      <MemberSignature Language="C#" Value="public static object PlusObj (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public static object PlusObj(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.PlusObj(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PlusObj (obj As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ PlusObj(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="static member PlusObj : obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.PlusObj obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="b9125-217">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="b9125-217">Required.</span></span> <span data-ttu-id="b9125-218">Cualquier expresión numérica.</span><span class="sxs-lookup"><span data-stu-id="b9125-218">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="b9125-219">Realiza una operación unaria más (+).</span><span class="sxs-lookup"><span data-stu-id="b9125-219">Performs a unary plus (+) operation.</span></span></summary>
        <returns><span data-ttu-id="b9125-220">El valor de <paramref name="obj" />.</span><span class="sxs-lookup"><span data-stu-id="b9125-220">The value of <paramref name="obj" />.</span></span> <span data-ttu-id="b9125-221">(El signo de <paramref name="obj" /> no cambia.)</span><span class="sxs-lookup"><span data-stu-id="b9125-221">(The sign of the <paramref name="obj" /> is unchanged.)</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9125-222">Esta clase es compatible con el compilador de Visual Basic y no está pensada para utilizarse directamente desde el código.</span><span class="sxs-lookup"><span data-stu-id="b9125-222">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/addition-operator.md"><span data-ttu-id="b9125-223">+ (Operador, Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="b9125-223">+ Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="PowObj">
      <MemberSignature Language="C#" Value="public static object PowObj (object obj1, object obj2);" />
      <MemberSignature Language="ILAsm" Value=".method public static object PowObj(object obj1, object obj2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.PowObj(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PowObj (obj1 As Object, obj2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ PowObj(System::Object ^ obj1, System::Object ^ obj2);" />
      <MemberSignature Language="F#" Value="static member PowObj : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.PowObj (obj1, obj2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj1" Type="System.Object" />
        <Parameter Name="obj2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj1"><span data-ttu-id="b9125-224">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="b9125-224">Required.</span></span> <span data-ttu-id="b9125-225">Cualquier expresión numérica.</span><span class="sxs-lookup"><span data-stu-id="b9125-225">Any numeric expression.</span></span></param>
        <param name="obj2"><span data-ttu-id="b9125-226">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="b9125-226">Required.</span></span> <span data-ttu-id="b9125-227">Cualquier expresión numérica.</span><span class="sxs-lookup"><span data-stu-id="b9125-227">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="b9125-228">Realiza una operación exponencial (^).</span><span class="sxs-lookup"><span data-stu-id="b9125-228">Performs an exponent (^) operation.</span></span></summary>
        <returns><span data-ttu-id="b9125-229">Resultado de <paramref name="obj1" /> elevado a la potencia de <paramref name="obj2" />.</span><span class="sxs-lookup"><span data-stu-id="b9125-229">The result of <paramref name="obj1" /> raised to the power of <paramref name="obj2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9125-230">Esta clase es compatible con el compilador de Visual Basic y no está pensada para utilizarse directamente desde el código.</span><span class="sxs-lookup"><span data-stu-id="b9125-230">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/exponentiation-operators.md"><span data-ttu-id="b9125-231">^ (Operador, Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="b9125-231">^ Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ShiftLeftObj">
      <MemberSignature Language="C#" Value="public static object ShiftLeftObj (object o1, int amount);" />
      <MemberSignature Language="ILAsm" Value=".method public static object ShiftLeftObj(object o1, int32 amount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.ShiftLeftObj(System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ShiftLeftObj (o1 As Object, amount As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ShiftLeftObj(System::Object ^ o1, int amount);" />
      <MemberSignature Language="F#" Value="static member ShiftLeftObj : obj * int -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.ShiftLeftObj (o1, amount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o1" Type="System.Object" />
        <Parameter Name="amount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="o1"><span data-ttu-id="b9125-232">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="b9125-232">Required.</span></span> <span data-ttu-id="b9125-233">Expresión numérica integral.</span><span class="sxs-lookup"><span data-stu-id="b9125-233">Integral numeric expression.</span></span> <span data-ttu-id="b9125-234">Modelo de bits que se va a desplazar.</span><span class="sxs-lookup"><span data-stu-id="b9125-234">The bit pattern to be shifted.</span></span> <span data-ttu-id="b9125-235">El tipo de datos debe ser un tipo entero (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" /> o <see langword="ULong" />).</span><span class="sxs-lookup"><span data-stu-id="b9125-235">The data type must be an integral type (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" />, or <see langword="ULong" />).</span></span></param>
        <param name="amount"><span data-ttu-id="b9125-236">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="b9125-236">Required.</span></span> <span data-ttu-id="b9125-237">Expresión numérica.</span><span class="sxs-lookup"><span data-stu-id="b9125-237">Numeric expression.</span></span> <span data-ttu-id="b9125-238">Número de bits que se va a desplazar el modelo de bits.</span><span class="sxs-lookup"><span data-stu-id="b9125-238">The number of bits to shift the bit pattern.</span></span> <span data-ttu-id="b9125-239">El tipo de datos debe ser <see langword="Integer" /> o ampliarse a <see langword="Integer" />.</span><span class="sxs-lookup"><span data-stu-id="b9125-239">The data type must be <see langword="Integer" /> or widen to <see langword="Integer" />.</span></span></param>
        <summary><span data-ttu-id="b9125-240">Realiza una operación de desplazamiento aritmético a la izquierda (&lt;&lt;).</span><span class="sxs-lookup"><span data-stu-id="b9125-240">Performs an arithmetic left shift (&lt;&lt;) operation.</span></span></summary>
        <returns><span data-ttu-id="b9125-241">Valor numérico integral.</span><span class="sxs-lookup"><span data-stu-id="b9125-241">An integral numeric value.</span></span> <span data-ttu-id="b9125-242">Resultado de desplazar el modelo de bits.</span><span class="sxs-lookup"><span data-stu-id="b9125-242">The result of shifting the bit pattern.</span></span> <span data-ttu-id="b9125-243">El tipo de datos es el mismo que el de <paramref name="o1" />.</span><span class="sxs-lookup"><span data-stu-id="b9125-243">The data type is the same as that of <paramref name="o1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9125-244">Esta clase es compatible con el compilador de Visual Basic y no está pensada para utilizarse directamente desde el código.</span><span class="sxs-lookup"><span data-stu-id="b9125-244">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/left-shift-operator.md"><span data-ttu-id="b9125-245">&lt;&lt; Operador (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="b9125-245">&lt;&lt; Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ShiftRightObj">
      <MemberSignature Language="C#" Value="public static object ShiftRightObj (object o1, int amount);" />
      <MemberSignature Language="ILAsm" Value=".method public static object ShiftRightObj(object o1, int32 amount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.ShiftRightObj(System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ShiftRightObj (o1 As Object, amount As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ShiftRightObj(System::Object ^ o1, int amount);" />
      <MemberSignature Language="F#" Value="static member ShiftRightObj : obj * int -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.ShiftRightObj (o1, amount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o1" Type="System.Object" />
        <Parameter Name="amount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="o1"><span data-ttu-id="b9125-246">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="b9125-246">Required.</span></span> <span data-ttu-id="b9125-247">Expresión numérica integral.</span><span class="sxs-lookup"><span data-stu-id="b9125-247">Integral numeric expression.</span></span> <span data-ttu-id="b9125-248">Modelo de bits que se va a desplazar.</span><span class="sxs-lookup"><span data-stu-id="b9125-248">The bit pattern to be shifted.</span></span> <span data-ttu-id="b9125-249">El tipo de datos debe ser un tipo entero (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" /> o <see langword="ULong" />).</span><span class="sxs-lookup"><span data-stu-id="b9125-249">The data type must be an integral type (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" />, or <see langword="ULong" />).</span></span></param>
        <param name="amount"><span data-ttu-id="b9125-250">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="b9125-250">Required.</span></span> <span data-ttu-id="b9125-251">Expresión numérica.</span><span class="sxs-lookup"><span data-stu-id="b9125-251">Numeric expression.</span></span> <span data-ttu-id="b9125-252">Número de bits que se va a desplazar el modelo de bits.</span><span class="sxs-lookup"><span data-stu-id="b9125-252">The number of bits to shift the bit pattern.</span></span> <span data-ttu-id="b9125-253">El tipo de datos debe ser <see langword="Integer" /> o ampliarse a <see langword="Integer" />.</span><span class="sxs-lookup"><span data-stu-id="b9125-253">The data type must be <see langword="Integer" /> or widen to <see langword="Integer" />.</span></span></param>
        <summary><span data-ttu-id="b9125-254">Realiza una operación de desplazamiento aritmético a la derecha (&gt;&gt;).</span><span class="sxs-lookup"><span data-stu-id="b9125-254">Performs an arithmetic right shift (&gt;&gt;) operation.</span></span></summary>
        <returns><span data-ttu-id="b9125-255">Valor numérico integral.</span><span class="sxs-lookup"><span data-stu-id="b9125-255">An integral numeric value.</span></span> <span data-ttu-id="b9125-256">Resultado de desplazar el modelo de bits.</span><span class="sxs-lookup"><span data-stu-id="b9125-256">The result of shifting the bit pattern.</span></span> <span data-ttu-id="b9125-257">El tipo de datos es el mismo que el de <paramref name="o1" />.</span><span class="sxs-lookup"><span data-stu-id="b9125-257">The data type is the same as that of <paramref name="o1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9125-258">Esta clase es compatible con el compilador de Visual Basic y no está pensada para utilizarse directamente desde el código.</span><span class="sxs-lookup"><span data-stu-id="b9125-258">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/right-shift-operator.md"><span data-ttu-id="b9125-259">&gt;&gt; Operador (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="b9125-259">&gt;&gt; Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="StrCatObj">
      <MemberSignature Language="C#" Value="public static object StrCatObj (object vLeft, object vRight);" />
      <MemberSignature Language="ILAsm" Value=".method public static object StrCatObj(object vLeft, object vRight) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.StrCatObj(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StrCatObj (vLeft As Object, vRight As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ StrCatObj(System::Object ^ vLeft, System::Object ^ vRight);" />
      <MemberSignature Language="F#" Value="static member StrCatObj : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.StrCatObj (vLeft, vRight)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vLeft" Type="System.Object" />
        <Parameter Name="vRight" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="vLeft"><span data-ttu-id="b9125-260">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="b9125-260">Required.</span></span> <span data-ttu-id="b9125-261">Cualquier expresión.</span><span class="sxs-lookup"><span data-stu-id="b9125-261">Any expression.</span></span></param>
        <param name="vRight"><span data-ttu-id="b9125-262">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="b9125-262">Required.</span></span> <span data-ttu-id="b9125-263">Cualquier expresión.</span><span class="sxs-lookup"><span data-stu-id="b9125-263">Any expression.</span></span></param>
        <summary><span data-ttu-id="b9125-264">Realiza una operación de concatenación de cadenas (&amp;).</span><span class="sxs-lookup"><span data-stu-id="b9125-264">Performs a string concatenation (&amp;) operation.</span></span></summary>
        <returns><span data-ttu-id="b9125-265">Cadena que representa la concatenación de <paramref name="vLeft" /> y <paramref name="vRight" />.</span><span class="sxs-lookup"><span data-stu-id="b9125-265">A string representing the concatenation of <paramref name="vLeft" /> and <paramref name="vRight" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9125-266">Esta clase es compatible con el compilador de Visual Basic y no está pensada para utilizarse directamente desde el código.</span><span class="sxs-lookup"><span data-stu-id="b9125-266">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/concatenation-operator.md"><span data-ttu-id="b9125-267">&amp; Operador (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="b9125-267">&amp; Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SubObj">
      <MemberSignature Language="C#" Value="public static object SubObj (object o1, object o2);" />
      <MemberSignature Language="ILAsm" Value=".method public static object SubObj(object o1, object o2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.SubObj(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SubObj (o1 As Object, o2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ SubObj(System::Object ^ o1, System::Object ^ o2);" />
      <MemberSignature Language="F#" Value="static member SubObj : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.SubObj (o1, o2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o1" Type="System.Object" />
        <Parameter Name="o2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o1"><span data-ttu-id="b9125-268">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="b9125-268">Required.</span></span> <span data-ttu-id="b9125-269">Cualquier expresión numérica.</span><span class="sxs-lookup"><span data-stu-id="b9125-269">Any numeric expression.</span></span></param>
        <param name="o2"><span data-ttu-id="b9125-270">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="b9125-270">Required.</span></span> <span data-ttu-id="b9125-271">Cualquier expresión numérica.</span><span class="sxs-lookup"><span data-stu-id="b9125-271">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="b9125-272">Realiza una operación de resta (-).</span><span class="sxs-lookup"><span data-stu-id="b9125-272">Performs a subtraction (-) operation.</span></span></summary>
        <returns><span data-ttu-id="b9125-273">Diferencia entre <paramref name="o1" /> y <paramref name="o2" />.</span><span class="sxs-lookup"><span data-stu-id="b9125-273">The difference between <paramref name="o1" /> and <paramref name="o2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9125-274">Esta clase es compatible con el compilador de Visual Basic y no está pensada para utilizarse directamente desde el código.</span><span class="sxs-lookup"><span data-stu-id="b9125-274">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/subtraction-operator.md"><span data-ttu-id="b9125-275">- (Operador, Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="b9125-275">- Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="XorObj">
      <MemberSignature Language="C#" Value="public static object XorObj (object obj1, object obj2);" />
      <MemberSignature Language="ILAsm" Value=".method public static object XorObj(object obj1, object obj2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.XorObj(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function XorObj (obj1 As Object, obj2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ XorObj(System::Object ^ obj1, System::Object ^ obj2);" />
      <MemberSignature Language="F#" Value="static member XorObj : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.XorObj (obj1, obj2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj1" Type="System.Object" />
        <Parameter Name="obj2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj1"><span data-ttu-id="b9125-276">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="b9125-276">Required.</span></span> <span data-ttu-id="b9125-277">Cualquier expresión numérica o de tipo <see langword="Boolean" />.</span><span class="sxs-lookup"><span data-stu-id="b9125-277">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <param name="obj2"><span data-ttu-id="b9125-278">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="b9125-278">Required.</span></span> <span data-ttu-id="b9125-279">Cualquier expresión numérica o de tipo <see langword="Boolean" />.</span><span class="sxs-lookup"><span data-stu-id="b9125-279">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <summary><span data-ttu-id="b9125-280">Realiza una comparación <see langword="Xor" />.</span><span class="sxs-lookup"><span data-stu-id="b9125-280">Performs an <see langword="Xor" /> comparison.</span></span></summary>
        <returns><span data-ttu-id="b9125-281">Valor de tipo <see langword="Boolean" /> o valor numérico.</span><span class="sxs-lookup"><span data-stu-id="b9125-281">A <see langword="Boolean" /> or numeric value.</span></span> <span data-ttu-id="b9125-282">Para una comparación <see langword="Boolean" />, el valor devuelto es la exclusión lógica (disyunción lógica exclusiva) de dos valores <see langword="Boolean" />.</span><span class="sxs-lookup"><span data-stu-id="b9125-282">For a <see langword="Boolean" /> comparison, the return value is the logical exclusion (exclusive logical disjunction) of two <see langword="Boolean" /> values.</span></span> <span data-ttu-id="b9125-283">Para las operaciones (numéricas) bit a bit, el valor devuelto es un valor numérico que representa la exclusión bit a bit (disyunción bit a bit exclusiva) de dos modelos de bits numéricos.</span><span class="sxs-lookup"><span data-stu-id="b9125-283">For bitwise (numeric) operations, the return value is a numeric value that represents the bitwise exclusion (exclusive bitwise disjunction) of two numeric bit patterns.</span></span> <span data-ttu-id="b9125-284">Para obtener más información, vea <see href="https://docs.microsoft.com/dotnet/visual-basic/language-reference/operators/xor-operator">Operador Xor</see>.</span><span class="sxs-lookup"><span data-stu-id="b9125-284">For more information, see <see href="https://docs.microsoft.com/dotnet/visual-basic/language-reference/operators/xor-operator">Xor Operator</see>.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9125-285">Esta clase es compatible con el compilador de Visual Basic y no está pensada para utilizarse directamente desde el código.</span><span class="sxs-lookup"><span data-stu-id="b9125-285">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/xor-operator.md"><span data-ttu-id="b9125-286">Xor (Operador, Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="b9125-286">Xor Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
<Type Name="ObjectType" FullName="Microsoft.VisualBasic.CompilerServices.ObjectType">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9b451b86a3f1309daea6673349b4569b41ce95c0" /><Meta Name="ms.sourcegitcommit" Value="95e24aee1283af2f120fc5da4b0bdc0712ab698f" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="05/06/2019" /><Meta Name="ms.locfileid" Value="65156736" /></Metadata><TypeSignature Language="C#" Value="public sealed class ObjectType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ObjectType extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.CompilerServices.ObjectType" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ObjectType" />
  <TypeSignature Language="C++ CLI" Value="public ref class ObjectType sealed" />
  <TypeSignature Language="F#" Value="type ObjectType = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
    <AssemblyVersion>10.0.4.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="09910-101">Esta clase ha quedado obsoleta en Visual Basic 2005.</span><span class="sxs-lookup"><span data-stu-id="09910-101">This class has been deprecated as of Visual Basic 2005.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09910-102">Esta clase es compatible con el compilador de Visual Basic y no está pensada para utilizarse directamente desde el código.</span><span class="sxs-lookup"><span data-stu-id="09910-102">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
    </remarks>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectType ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectType();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="09910-103">Inicializa una nueva instancia de la clase <see cref="T:Microsoft.VisualBasic.CompilerServices.ObjectType" />.</span><span class="sxs-lookup"><span data-stu-id="09910-103">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.CompilerServices.ObjectType" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09910-104">Esta clase es compatible con el compilador de Visual Basic y no está pensada para utilizarse directamente desde el código.</span><span class="sxs-lookup"><span data-stu-id="09910-104">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="AddObj">
      <MemberSignature Language="C#" Value="public static object AddObj (object o1, object o2);" />
      <MemberSignature Language="ILAsm" Value=".method public static object AddObj(object o1, object o2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.AddObj(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AddObj (o1 As Object, o2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ AddObj(System::Object ^ o1, System::Object ^ o2);" />
      <MemberSignature Language="F#" Value="static member AddObj : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.AddObj (o1, o2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o1" Type="System.Object" />
        <Parameter Name="o2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o1"><span data-ttu-id="09910-105">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="09910-105">Required.</span></span> <span data-ttu-id="09910-106">Cualquier expresión numérica.</span><span class="sxs-lookup"><span data-stu-id="09910-106">Any numeric expression.</span></span></param>
        <param name="o2"><span data-ttu-id="09910-107">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="09910-107">Required.</span></span> <span data-ttu-id="09910-108">Cualquier expresión numérica.</span><span class="sxs-lookup"><span data-stu-id="09910-108">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="09910-109">Realiza una operación de suma (+).</span><span class="sxs-lookup"><span data-stu-id="09910-109">Performs an addition (+) operation.</span></span></summary>
        <returns><span data-ttu-id="09910-110">La suma de <paramref name="o1" /> y <paramref name="o2" />.</span><span class="sxs-lookup"><span data-stu-id="09910-110">The sum of <paramref name="o1" /> and <paramref name="o2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09910-111">Esta clase es compatible con el compilador de Visual Basic y no está pensada para utilizarse directamente desde el código.</span><span class="sxs-lookup"><span data-stu-id="09910-111">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/addition-operator.md"><span data-ttu-id="09910-112">+ (Operador, Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="09910-112">+ Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="BitAndObj">
      <MemberSignature Language="C#" Value="public static object BitAndObj (object obj1, object obj2);" />
      <MemberSignature Language="ILAsm" Value=".method public static object BitAndObj(object obj1, object obj2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.BitAndObj(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BitAndObj (obj1 As Object, obj2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ BitAndObj(System::Object ^ obj1, System::Object ^ obj2);" />
      <MemberSignature Language="F#" Value="static member BitAndObj : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.BitAndObj (obj1, obj2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj1" Type="System.Object" />
        <Parameter Name="obj2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj1"><span data-ttu-id="09910-113">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="09910-113">Required.</span></span> <span data-ttu-id="09910-114">Cualquier <see langword="Boolean" /> o expresión numérica.</span><span class="sxs-lookup"><span data-stu-id="09910-114">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <param name="obj2"><span data-ttu-id="09910-115">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="09910-115">Required.</span></span> <span data-ttu-id="09910-116">Cualquier <see langword="Boolean" /> o expresión numérica.</span><span class="sxs-lookup"><span data-stu-id="09910-116">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <summary><span data-ttu-id="09910-117">Realiza un bit a bit <see langword="And" /> operación.</span><span class="sxs-lookup"><span data-stu-id="09910-117">Performs a bitwise <see langword="And" /> operation.</span></span></summary>
        <returns><span data-ttu-id="09910-118">1 si ambos <paramref name="obj1" /> y <paramref name="obj2" /> se evalúan como 1; en caso contrario, 0.</span><span class="sxs-lookup"><span data-stu-id="09910-118">1 if both <paramref name="obj1" /> and <paramref name="obj2" /> evaluate to 1; otherwise, 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09910-119">Esta clase es compatible con el compilador de Visual Basic y no está pensada para utilizarse directamente desde el código.</span><span class="sxs-lookup"><span data-stu-id="09910-119">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/and-operator.md"><span data-ttu-id="09910-120">And (Operador, Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="09910-120">And Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="BitOrObj">
      <MemberSignature Language="C#" Value="public static object BitOrObj (object obj1, object obj2);" />
      <MemberSignature Language="ILAsm" Value=".method public static object BitOrObj(object obj1, object obj2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.BitOrObj(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BitOrObj (obj1 As Object, obj2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ BitOrObj(System::Object ^ obj1, System::Object ^ obj2);" />
      <MemberSignature Language="F#" Value="static member BitOrObj : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.BitOrObj (obj1, obj2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj1" Type="System.Object" />
        <Parameter Name="obj2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj1"><span data-ttu-id="09910-121">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="09910-121">Required.</span></span> <span data-ttu-id="09910-122">Cualquier <see langword="Boolean" /> o expresión numérica.</span><span class="sxs-lookup"><span data-stu-id="09910-122">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <param name="obj2"><span data-ttu-id="09910-123">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="09910-123">Required.</span></span> <span data-ttu-id="09910-124">Cualquier <see langword="Boolean" /> o expresión numérica.</span><span class="sxs-lookup"><span data-stu-id="09910-124">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <summary><span data-ttu-id="09910-125">Realiza un bit a bit <see langword="Or" /> operación.</span><span class="sxs-lookup"><span data-stu-id="09910-125">Performs a bitwise <see langword="Or" /> operation.</span></span></summary>
        <returns><span data-ttu-id="09910-126">Se devuelve 0 si tanto <paramref name="obj1" /> como <paramref name="obj2" /> se evalúan como 0; de lo contrario, se devuelve 1.</span><span class="sxs-lookup"><span data-stu-id="09910-126">0 if both <paramref name="obj1" /> and <paramref name="obj2" /> evaluate to 0; otherwise, 1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09910-127">Esta clase es compatible con el compilador de Visual Basic y no está pensada para utilizarse directamente desde el código.</span><span class="sxs-lookup"><span data-stu-id="09910-127">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/or-operator.md"><span data-ttu-id="09910-128">Or (Operador, Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="09910-128">Or Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="BitXorObj">
      <MemberSignature Language="C#" Value="public static object BitXorObj (object obj1, object obj2);" />
      <MemberSignature Language="ILAsm" Value=".method public static object BitXorObj(object obj1, object obj2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.BitXorObj(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BitXorObj (obj1 As Object, obj2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ BitXorObj(System::Object ^ obj1, System::Object ^ obj2);" />
      <MemberSignature Language="F#" Value="static member BitXorObj : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.BitXorObj (obj1, obj2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj1" Type="System.Object" />
        <Parameter Name="obj2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj1"><span data-ttu-id="09910-129">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="09910-129">Required.</span></span> <span data-ttu-id="09910-130">Cualquier <see langword="Boolean" /> o expresión numérica.</span><span class="sxs-lookup"><span data-stu-id="09910-130">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <param name="obj2"><span data-ttu-id="09910-131">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="09910-131">Required.</span></span> <span data-ttu-id="09910-132">Cualquier <see langword="Boolean" /> o expresión numérica.</span><span class="sxs-lookup"><span data-stu-id="09910-132">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <summary><span data-ttu-id="09910-133">Realiza una <see langword="Xor" /> operación.</span><span class="sxs-lookup"><span data-stu-id="09910-133">Performs an <see langword="Xor" /> operation.</span></span></summary>
        <returns><span data-ttu-id="09910-134">Un valor numérico que representa la exclusión bit a bit (disyunción bit a bit exclusiva) de dos modelos de bits numéricos.</span><span class="sxs-lookup"><span data-stu-id="09910-134">A numeric value that represents the bitwise exclusion (exclusive bitwise disjunction) of two numeric bit patterns.</span></span> <span data-ttu-id="09910-135">Para obtener más información, vea <see href="https://docs.microsoft.com/dotnet/visual-basic/language-reference/operators/xor-operator">Operador Xor</see>.</span><span class="sxs-lookup"><span data-stu-id="09910-135">For more information, see <see href="https://docs.microsoft.com/dotnet/visual-basic/language-reference/operators/xor-operator">Xor Operator</see>.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09910-136">Esta clase es compatible con el compilador de Visual Basic y no está pensada para utilizarse directamente desde el código.</span><span class="sxs-lookup"><span data-stu-id="09910-136">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/xor-operator.md"><span data-ttu-id="09910-137">Xor (Operador, Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="09910-137">Xor Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DivObj">
      <MemberSignature Language="C#" Value="public static object DivObj (object o1, object o2);" />
      <MemberSignature Language="ILAsm" Value=".method public static object DivObj(object o1, object o2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.DivObj(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DivObj (o1 As Object, o2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ DivObj(System::Object ^ o1, System::Object ^ o2);" />
      <MemberSignature Language="F#" Value="static member DivObj : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.DivObj (o1, o2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o1" Type="System.Object" />
        <Parameter Name="o2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o1"><span data-ttu-id="09910-138">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="09910-138">Required.</span></span> <span data-ttu-id="09910-139">Cualquier expresión numérica.</span><span class="sxs-lookup"><span data-stu-id="09910-139">Any numeric expression.</span></span></param>
        <param name="o2"><span data-ttu-id="09910-140">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="09910-140">Required.</span></span> <span data-ttu-id="09910-141">Cualquier expresión numérica.</span><span class="sxs-lookup"><span data-stu-id="09910-141">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="09910-142">Realiza una operación de división (/).</span><span class="sxs-lookup"><span data-stu-id="09910-142">Performs a division (/) operation.</span></span></summary>
        <returns><span data-ttu-id="09910-143">Cociente completo de <paramref name="o1" /> dividido por <paramref name="o2" />, incluido cualquier resto.</span><span class="sxs-lookup"><span data-stu-id="09910-143">The full quotient of <paramref name="o1" /> divided by <paramref name="o2" />, including any remainder.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09910-144">Esta clase es compatible con el compilador de Visual Basic y no está pensada para utilizarse directamente desde el código.</span><span class="sxs-lookup"><span data-stu-id="09910-144">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/floating-point-division-operator.md"><span data-ttu-id="09910-145">/ (Operador, Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="09910-145">/ Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetObjectValuePrimitive">
      <MemberSignature Language="C#" Value="public static object GetObjectValuePrimitive (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public static object GetObjectValuePrimitive(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.GetObjectValuePrimitive(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetObjectValuePrimitive (o As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetObjectValuePrimitive(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="static member GetObjectValuePrimitive : obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.GetObjectValuePrimitive o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o"><span data-ttu-id="09910-146">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="09910-146">Required.</span></span> <span data-ttu-id="09910-147">Cualquier expresión.</span><span class="sxs-lookup"><span data-stu-id="09910-147">Any expression.</span></span></param>
        <summary><span data-ttu-id="09910-148">Devuelve un valor primitivo con conversión boxing.</span><span class="sxs-lookup"><span data-stu-id="09910-148">Returns a boxed primitive value.</span></span> <span data-ttu-id="09910-149">Este método se usa para evitar que las estructuras se copien varias veces.</span><span class="sxs-lookup"><span data-stu-id="09910-149">This method is used to prevent copying structures multiple times.</span></span></summary>
        <returns><span data-ttu-id="09910-150">El valor primitivo de <paramref name="o" /> de tipo object.</span><span class="sxs-lookup"><span data-stu-id="09910-150">The primitive value of <paramref name="o" /> typed as object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09910-151">Esta clase es compatible con el compilador de Visual Basic y no está pensada para utilizarse directamente desde el código.</span><span class="sxs-lookup"><span data-stu-id="09910-151">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="IDivObj">
      <MemberSignature Language="C#" Value="public static object IDivObj (object o1, object o2);" />
      <MemberSignature Language="ILAsm" Value=".method public static object IDivObj(object o1, object o2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.IDivObj(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IDivObj (o1 As Object, o2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ IDivObj(System::Object ^ o1, System::Object ^ o2);" />
      <MemberSignature Language="F#" Value="static member IDivObj : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.IDivObj (o1, o2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o1" Type="System.Object" />
        <Parameter Name="o2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o1"><span data-ttu-id="09910-152">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="09910-152">Required.</span></span> <span data-ttu-id="09910-153">Cualquier expresión numérica.</span><span class="sxs-lookup"><span data-stu-id="09910-153">Any numeric expression.</span></span></param>
        <param name="o2"><span data-ttu-id="09910-154">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="09910-154">Required.</span></span> <span data-ttu-id="09910-155">Cualquier expresión numérica.</span><span class="sxs-lookup"><span data-stu-id="09910-155">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="09910-156">Realiza una operación de división de enteros (\\).</span><span class="sxs-lookup"><span data-stu-id="09910-156">Performs an integer division (\\) operation.</span></span></summary>
        <returns><span data-ttu-id="09910-157">Cociente entero de <paramref name="o1" /> dividido por <paramref name="o2" />, que descarta cualquier resto y conserva sólo la parte entera.</span><span class="sxs-lookup"><span data-stu-id="09910-157">The integer quotient of <paramref name="o1" /> divided by <paramref name="o2" />, which discards any remainder and retains only the integer portion.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09910-158">Esta clase es compatible con el compilador de Visual Basic y no está pensada para utilizarse directamente desde el código.</span><span class="sxs-lookup"><span data-stu-id="09910-158">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/integer-division-operator.md"><span data-ttu-id="09910-159">\ (Operador)</span><span class="sxs-lookup"><span data-stu-id="09910-159">\ Operator</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="LikeObj">
      <MemberSignature Language="C#" Value="public static bool LikeObj (object vLeft, object vRight, Microsoft.VisualBasic.CompareMethod CompareOption);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool LikeObj(object vLeft, object vRight, valuetype Microsoft.VisualBasic.CompareMethod CompareOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.LikeObj(System.Object,System.Object,Microsoft.VisualBasic.CompareMethod)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LikeObj (vLeft As Object, vRight As Object, CompareOption As CompareMethod) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool LikeObj(System::Object ^ vLeft, System::Object ^ vRight, Microsoft::VisualBasic::CompareMethod CompareOption);" />
      <MemberSignature Language="F#" Value="static member LikeObj : obj * obj * Microsoft.VisualBasic.CompareMethod -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.LikeObj (vLeft, vRight, CompareOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vLeft" Type="System.Object" />
        <Parameter Name="vRight" Type="System.Object" />
        <Parameter Name="CompareOption" Type="Microsoft.VisualBasic.CompareMethod" />
      </Parameters>
      <Docs>
        <param name="vLeft"><span data-ttu-id="09910-160">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="09910-160">Required.</span></span> <span data-ttu-id="09910-161">Cualquier expresión.</span><span class="sxs-lookup"><span data-stu-id="09910-161">Any expression.</span></span></param>
        <param name="vRight"><span data-ttu-id="09910-162">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="09910-162">Required.</span></span> <span data-ttu-id="09910-163">Cualquier expresión de cadena que se ajuste a las convenciones de coincidencia de patrón descritas en Like (operador).</span><span class="sxs-lookup"><span data-stu-id="09910-163">Any string expression conforming to the pattern-matching conventions described in Like Operator.</span></span></param>
        <param name="CompareOption"><span data-ttu-id="09910-164">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="09910-164">Required.</span></span> <span data-ttu-id="09910-165">Un <see cref="T:Microsoft.VisualBasic.CompareMethod" /> valor que especifica que la operación usa la comparación de texto o binario.</span><span class="sxs-lookup"><span data-stu-id="09910-165">A <see cref="T:Microsoft.VisualBasic.CompareMethod" /> value that specifies that the operation use either text or binary comparison.</span></span></param>
        <summary><span data-ttu-id="09910-166">Realiza una <see langword="Like" /> comparación.</span><span class="sxs-lookup"><span data-stu-id="09910-166">Performs a <see langword="Like" /> comparison.</span></span></summary>
        <returns><span data-ttu-id="09910-167"><see langword="True" /> Si la representación de cadena del valor de <paramref name="vLeft" /> se ajusta al modelo que se encuentra en <paramref name="vRight" />; en caso contrario, <see langword="False" />.</span><span class="sxs-lookup"><span data-stu-id="09910-167"><see langword="True" /> if the string representation of the value in <paramref name="vLeft" /> satisfies the pattern that is contained in <paramref name="vRight" />; otherwise, <see langword="False" />.</span></span> <span data-ttu-id="09910-168"><see langword="True" /> Si ambos <paramref name="vLeft" /> y <paramref name="vRight" /> son <see langword="Nothing" />.</span><span class="sxs-lookup"><span data-stu-id="09910-168"><see langword="True" /> if both <paramref name="vLeft" /> and <paramref name="vRight" /> are <see langword="Nothing" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09910-169">Esta clase es compatible con el compilador de Visual Basic y no está pensada para utilizarse directamente desde el código.</span><span class="sxs-lookup"><span data-stu-id="09910-169">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/like-operator.md"><span data-ttu-id="09910-170">Like (Operador)</span><span class="sxs-lookup"><span data-stu-id="09910-170">Like Operator</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ModObj">
      <MemberSignature Language="C#" Value="public static object ModObj (object o1, object o2);" />
      <MemberSignature Language="ILAsm" Value=".method public static object ModObj(object o1, object o2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.ModObj(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ModObj (o1 As Object, o2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ModObj(System::Object ^ o1, System::Object ^ o2);" />
      <MemberSignature Language="F#" Value="static member ModObj : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.ModObj (o1, o2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o1" Type="System.Object" />
        <Parameter Name="o2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o1"><span data-ttu-id="09910-171">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="09910-171">Required.</span></span> <span data-ttu-id="09910-172">Cualquier expresión numérica.</span><span class="sxs-lookup"><span data-stu-id="09910-172">Any numeric expression.</span></span></param>
        <param name="o2"><span data-ttu-id="09910-173">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="09910-173">Required.</span></span> <span data-ttu-id="09910-174">Cualquier expresión numérica.</span><span class="sxs-lookup"><span data-stu-id="09910-174">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="09910-175">Realiza un módulo (<see langword="Mod" />) operación.</span><span class="sxs-lookup"><span data-stu-id="09910-175">Performs a modulus (<see langword="Mod" />) operation.</span></span></summary>
        <returns><span data-ttu-id="09910-176">Resto después de <paramref name="o1" /> se divide por <paramref name="o2" />.</span><span class="sxs-lookup"><span data-stu-id="09910-176">The remainder after <paramref name="o1" /> is divided by <paramref name="o2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09910-177">Esta clase es compatible con el compilador de Visual Basic y no está pensada para utilizarse directamente desde el código.</span><span class="sxs-lookup"><span data-stu-id="09910-177">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/mod-operator.md"><span data-ttu-id="09910-178">Mod (Operador, Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="09910-178">Mod Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MulObj">
      <MemberSignature Language="C#" Value="public static object MulObj (object o1, object o2);" />
      <MemberSignature Language="ILAsm" Value=".method public static object MulObj(object o1, object o2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.MulObj(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MulObj (o1 As Object, o2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ MulObj(System::Object ^ o1, System::Object ^ o2);" />
      <MemberSignature Language="F#" Value="static member MulObj : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.MulObj (o1, o2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o1" Type="System.Object" />
        <Parameter Name="o2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o1"><span data-ttu-id="09910-179">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="09910-179">Required.</span></span> <span data-ttu-id="09910-180">Cualquier expresión numérica.</span><span class="sxs-lookup"><span data-stu-id="09910-180">Any numeric expression.</span></span></param>
        <param name="o2"><span data-ttu-id="09910-181">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="09910-181">Required.</span></span> <span data-ttu-id="09910-182">Cualquier expresión numérica.</span><span class="sxs-lookup"><span data-stu-id="09910-182">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="09910-183">Realiza una operación de multiplicación (\*).</span><span class="sxs-lookup"><span data-stu-id="09910-183">Performs a multiplication (\*) operation.</span></span></summary>
        <returns><span data-ttu-id="09910-184">Producto de <paramref name="o1" /> y <paramref name="o2" />.</span><span class="sxs-lookup"><span data-stu-id="09910-184">The product of <paramref name="o1" /> and <paramref name="o2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09910-185">Esta clase es compatible con el compilador de Visual Basic y no está pensada para utilizarse directamente desde el código.</span><span class="sxs-lookup"><span data-stu-id="09910-185">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/multiplication-operator.md"><span data-ttu-id="09910-186">\* (Operador, Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="09910-186">\* Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="NegObj">
      <MemberSignature Language="C#" Value="public static object NegObj (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public static object NegObj(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.NegObj(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NegObj (obj As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ NegObj(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="static member NegObj : obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.NegObj obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="09910-187">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="09910-187">Required.</span></span> <span data-ttu-id="09910-188">Cualquier expresión numérica.</span><span class="sxs-lookup"><span data-stu-id="09910-188">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="09910-189">Realiza una operación unaria menos (-).</span><span class="sxs-lookup"><span data-stu-id="09910-189">Performs a unary minus (-) operation.</span></span></summary>
        <returns><span data-ttu-id="09910-190">El valor negativo de <paramref name="obj" />.</span><span class="sxs-lookup"><span data-stu-id="09910-190">The negative value of <paramref name="obj" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09910-191">Esta clase es compatible con el compilador de Visual Basic y no está pensada para utilizarse directamente desde el código.</span><span class="sxs-lookup"><span data-stu-id="09910-191">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/subtraction-operator.md"><span data-ttu-id="09910-192">- (Operador, Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="09910-192">- Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="NotObj">
      <MemberSignature Language="C#" Value="public static object NotObj (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public static object NotObj(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.NotObj(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NotObj (obj As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ NotObj(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="static member NotObj : obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.NotObj obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="09910-193">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="09910-193">Required.</span></span> <span data-ttu-id="09910-194">Cualquier <see langword="Boolean" /> o expresión numérica.</span><span class="sxs-lookup"><span data-stu-id="09910-194">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <summary><span data-ttu-id="09910-195">Realiza una <see langword="Not" /> operación.</span><span class="sxs-lookup"><span data-stu-id="09910-195">Performs a <see langword="Not" /> operation.</span></span></summary>
        <returns><span data-ttu-id="09910-196">Para <see langword="Boolean" /> operaciones, <see langword="False" /> si <paramref name="obj" /> es <see langword="True" />; en caso contrario, <see langword="True" />.</span><span class="sxs-lookup"><span data-stu-id="09910-196">For <see langword="Boolean" /> operations, <see langword="False" /> if <paramref name="obj" /> is <see langword="True" />; otherwise, <see langword="True" />.</span></span> <span data-ttu-id="09910-197">Para las operaciones bit a bit, 1 si <paramref name="obj" /> es 0; en caso contrario, 0.</span><span class="sxs-lookup"><span data-stu-id="09910-197">For bitwise operations, 1 if <paramref name="obj" /> is 0; otherwise, 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09910-198">Esta clase es compatible con el compilador de Visual Basic y no está pensada para utilizarse directamente desde el código.</span><span class="sxs-lookup"><span data-stu-id="09910-198">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/not-operator.md"><span data-ttu-id="09910-199">Not (Operador, Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="09910-199">Not Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ObjTst">
      <MemberSignature Language="C#" Value="public static int ObjTst (object o1, object o2, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 ObjTst(object o1, object o2, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.ObjTst(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ObjTst (o1 As Object, o2 As Object, TextCompare As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ObjTst(System::Object ^ o1, System::Object ^ o2, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member ObjTst : obj * obj * bool -&gt; int" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.ObjTst (o1, o2, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o1" Type="System.Object" />
        <Parameter Name="o2" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="o1"><span data-ttu-id="09910-200">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="09910-200">Required.</span></span> <span data-ttu-id="09910-201">Cualquier expresión.</span><span class="sxs-lookup"><span data-stu-id="09910-201">Any expression.</span></span></param>
        <param name="o2"><span data-ttu-id="09910-202">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="09910-202">Required.</span></span> <span data-ttu-id="09910-203">Cualquier expresión.</span><span class="sxs-lookup"><span data-stu-id="09910-203">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="09910-204">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="09910-204">Required.</span></span> <span data-ttu-id="09910-205"><see langword="True" /> para realizar una comparación de cadenas entre mayúsculas y minúsculas; en caso contrario, <see langword="False" />.</span><span class="sxs-lookup"><span data-stu-id="09910-205"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="09910-206">Realiza una comparación de cadena de texto o binarias dados dos objetos.</span><span class="sxs-lookup"><span data-stu-id="09910-206">Performs binary or text string comparison when given two objects.</span></span></summary>
        <returns><list type="table">
            <listheader>
              <term> <span data-ttu-id="09910-207">Valor</span><span class="sxs-lookup"><span data-stu-id="09910-207">Value</span></span> 
 </term>
              <description> <span data-ttu-id="09910-208">Condición</span><span class="sxs-lookup"><span data-stu-id="09910-208">Condition</span></span> 
 </description>
            </listheader>
            <item>
              <term> <span data-ttu-id="09910-209">-1</span><span class="sxs-lookup"><span data-stu-id="09910-209">-1</span></span> 
 </term>
              <description><span data-ttu-id="09910-210">
                <paramref name="o1" /> es menor que <paramref name="o2" />.</span><span class="sxs-lookup"><span data-stu-id="09910-210">
                <paramref name="o1" /> is less than <paramref name="o2" />.</span></span>  
  
 </description>
            </item>
            <item>
              <term> <span data-ttu-id="09910-211">0</span><span class="sxs-lookup"><span data-stu-id="09910-211">0</span></span> 
 </term>
              <description><span data-ttu-id="09910-212">
                <paramref name="o1" /> es igual a <paramref name="o2" />.</span><span class="sxs-lookup"><span data-stu-id="09910-212">
                <paramref name="o1" /> is equal to <paramref name="o2" />.</span></span>  
  
 </description>
            </item>
            <item>
              <term> <span data-ttu-id="09910-213">1</span><span class="sxs-lookup"><span data-stu-id="09910-213">1</span></span> 
 </term>
              <description><span data-ttu-id="09910-214">
                <paramref name="o1" /> es mayor que <paramref name="o2" />.</span><span class="sxs-lookup"><span data-stu-id="09910-214">
                <paramref name="o1" /> is greater than <paramref name="o2" />.</span></span>  
  
 </description>
            </item>
          </list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09910-215">Esta clase es compatible con el compilador de Visual Basic y no está pensada para utilizarse directamente desde el código.</span><span class="sxs-lookup"><span data-stu-id="09910-215">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/comparison-operators.md"><span data-ttu-id="09910-216">Operadores de comparación (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="09910-216">Comparison Operators (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="PlusObj">
      <MemberSignature Language="C#" Value="public static object PlusObj (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public static object PlusObj(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.PlusObj(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PlusObj (obj As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ PlusObj(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="static member PlusObj : obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.PlusObj obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="09910-217">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="09910-217">Required.</span></span> <span data-ttu-id="09910-218">Cualquier expresión numérica.</span><span class="sxs-lookup"><span data-stu-id="09910-218">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="09910-219">Realiza una operación de unario más (+).</span><span class="sxs-lookup"><span data-stu-id="09910-219">Performs a unary plus (+) operation.</span></span></summary>
        <returns><span data-ttu-id="09910-220">El valor de <paramref name="obj" />.</span><span class="sxs-lookup"><span data-stu-id="09910-220">The value of <paramref name="obj" />.</span></span> <span data-ttu-id="09910-221">(El signo de la <paramref name="obj" /> no se ha modificado.)</span><span class="sxs-lookup"><span data-stu-id="09910-221">(The sign of the <paramref name="obj" /> is unchanged.)</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09910-222">Esta clase es compatible con el compilador de Visual Basic y no está pensada para utilizarse directamente desde el código.</span><span class="sxs-lookup"><span data-stu-id="09910-222">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/addition-operator.md"><span data-ttu-id="09910-223">+ (Operador, Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="09910-223">+ Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="PowObj">
      <MemberSignature Language="C#" Value="public static object PowObj (object obj1, object obj2);" />
      <MemberSignature Language="ILAsm" Value=".method public static object PowObj(object obj1, object obj2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.PowObj(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PowObj (obj1 As Object, obj2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ PowObj(System::Object ^ obj1, System::Object ^ obj2);" />
      <MemberSignature Language="F#" Value="static member PowObj : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.PowObj (obj1, obj2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj1" Type="System.Object" />
        <Parameter Name="obj2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj1"><span data-ttu-id="09910-224">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="09910-224">Required.</span></span> <span data-ttu-id="09910-225">Cualquier expresión numérica.</span><span class="sxs-lookup"><span data-stu-id="09910-225">Any numeric expression.</span></span></param>
        <param name="obj2"><span data-ttu-id="09910-226">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="09910-226">Required.</span></span> <span data-ttu-id="09910-227">Cualquier expresión numérica.</span><span class="sxs-lookup"><span data-stu-id="09910-227">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="09910-228">Realiza una operación exponencial (^).</span><span class="sxs-lookup"><span data-stu-id="09910-228">Performs an exponent (^) operation.</span></span></summary>
        <returns><span data-ttu-id="09910-229">El resultado de <paramref name="obj1" /> elevado a la potencia de <paramref name="obj2" />.</span><span class="sxs-lookup"><span data-stu-id="09910-229">The result of <paramref name="obj1" /> raised to the power of <paramref name="obj2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09910-230">Esta clase es compatible con el compilador de Visual Basic y no está pensada para utilizarse directamente desde el código.</span><span class="sxs-lookup"><span data-stu-id="09910-230">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/exponentiation-operators.md"><span data-ttu-id="09910-231">^ (Operador, Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="09910-231">^ Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ShiftLeftObj">
      <MemberSignature Language="C#" Value="public static object ShiftLeftObj (object o1, int amount);" />
      <MemberSignature Language="ILAsm" Value=".method public static object ShiftLeftObj(object o1, int32 amount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.ShiftLeftObj(System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ShiftLeftObj (o1 As Object, amount As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ShiftLeftObj(System::Object ^ o1, int amount);" />
      <MemberSignature Language="F#" Value="static member ShiftLeftObj : obj * int -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.ShiftLeftObj (o1, amount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o1" Type="System.Object" />
        <Parameter Name="amount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="o1"><span data-ttu-id="09910-232">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="09910-232">Required.</span></span> <span data-ttu-id="09910-233">Expresión numérica integral.</span><span class="sxs-lookup"><span data-stu-id="09910-233">Integral numeric expression.</span></span> <span data-ttu-id="09910-234">Patrón de bits que se van a desplazar.</span><span class="sxs-lookup"><span data-stu-id="09910-234">The bit pattern to be shifted.</span></span> <span data-ttu-id="09910-235">El tipo de datos debe ser un tipo entero (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" />, o <see langword="ULong" />).</span><span class="sxs-lookup"><span data-stu-id="09910-235">The data type must be an integral type (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" />, or <see langword="ULong" />).</span></span></param>
        <param name="amount"><span data-ttu-id="09910-236">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="09910-236">Required.</span></span> <span data-ttu-id="09910-237">Expresión numérica.</span><span class="sxs-lookup"><span data-stu-id="09910-237">Numeric expression.</span></span> <span data-ttu-id="09910-238">El número de bits para desplazar el patrón de bits.</span><span class="sxs-lookup"><span data-stu-id="09910-238">The number of bits to shift the bit pattern.</span></span> <span data-ttu-id="09910-239">El tipo de datos debe ser <see langword="Integer" /> o ampliarse a <see langword="Integer" />.</span><span class="sxs-lookup"><span data-stu-id="09910-239">The data type must be <see langword="Integer" /> or widen to <see langword="Integer" />.</span></span></param>
        <summary><span data-ttu-id="09910-240">Realiza una operación de desplazamiento aritmético a la izquierda (&lt;&lt;).</span><span class="sxs-lookup"><span data-stu-id="09910-240">Performs an arithmetic left shift (&lt;&lt;) operation.</span></span></summary>
        <returns><span data-ttu-id="09910-241">Un valor numérico integral.</span><span class="sxs-lookup"><span data-stu-id="09910-241">An integral numeric value.</span></span> <span data-ttu-id="09910-242">El resultado de desplazar el patrón de bits.</span><span class="sxs-lookup"><span data-stu-id="09910-242">The result of shifting the bit pattern.</span></span> <span data-ttu-id="09910-243">El tipo de datos es el mismo que el de <paramref name="o1" />.</span><span class="sxs-lookup"><span data-stu-id="09910-243">The data type is the same as that of <paramref name="o1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09910-244">Esta clase es compatible con el compilador de Visual Basic y no está pensada para utilizarse directamente desde el código.</span><span class="sxs-lookup"><span data-stu-id="09910-244">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/left-shift-operator.md"><span data-ttu-id="09910-245">&lt;&lt; Operador (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="09910-245">&lt;&lt; Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ShiftRightObj">
      <MemberSignature Language="C#" Value="public static object ShiftRightObj (object o1, int amount);" />
      <MemberSignature Language="ILAsm" Value=".method public static object ShiftRightObj(object o1, int32 amount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.ShiftRightObj(System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ShiftRightObj (o1 As Object, amount As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ShiftRightObj(System::Object ^ o1, int amount);" />
      <MemberSignature Language="F#" Value="static member ShiftRightObj : obj * int -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.ShiftRightObj (o1, amount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o1" Type="System.Object" />
        <Parameter Name="amount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="o1"><span data-ttu-id="09910-246">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="09910-246">Required.</span></span> <span data-ttu-id="09910-247">Expresión numérica integral.</span><span class="sxs-lookup"><span data-stu-id="09910-247">Integral numeric expression.</span></span> <span data-ttu-id="09910-248">Patrón de bits que se van a desplazar.</span><span class="sxs-lookup"><span data-stu-id="09910-248">The bit pattern to be shifted.</span></span> <span data-ttu-id="09910-249">El tipo de datos debe ser un tipo entero (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" />, o <see langword="ULong" />).</span><span class="sxs-lookup"><span data-stu-id="09910-249">The data type must be an integral type (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" />, or <see langword="ULong" />).</span></span></param>
        <param name="amount"><span data-ttu-id="09910-250">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="09910-250">Required.</span></span> <span data-ttu-id="09910-251">Expresión numérica.</span><span class="sxs-lookup"><span data-stu-id="09910-251">Numeric expression.</span></span> <span data-ttu-id="09910-252">El número de bits para desplazar el patrón de bits.</span><span class="sxs-lookup"><span data-stu-id="09910-252">The number of bits to shift the bit pattern.</span></span> <span data-ttu-id="09910-253">El tipo de datos debe ser <see langword="Integer" /> o ampliarse a <see langword="Integer" />.</span><span class="sxs-lookup"><span data-stu-id="09910-253">The data type must be <see langword="Integer" /> or widen to <see langword="Integer" />.</span></span></param>
        <summary><span data-ttu-id="09910-254">Realiza una operación de desplazamiento aritmético a la derecha (&gt;&gt;).</span><span class="sxs-lookup"><span data-stu-id="09910-254">Performs an arithmetic right shift (&gt;&gt;) operation.</span></span></summary>
        <returns><span data-ttu-id="09910-255">Un valor numérico integral.</span><span class="sxs-lookup"><span data-stu-id="09910-255">An integral numeric value.</span></span> <span data-ttu-id="09910-256">El resultado de desplazar el patrón de bits.</span><span class="sxs-lookup"><span data-stu-id="09910-256">The result of shifting the bit pattern.</span></span> <span data-ttu-id="09910-257">El tipo de datos es el mismo que el de <paramref name="o1" />.</span><span class="sxs-lookup"><span data-stu-id="09910-257">The data type is the same as that of <paramref name="o1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09910-258">Esta clase es compatible con el compilador de Visual Basic y no está pensada para utilizarse directamente desde el código.</span><span class="sxs-lookup"><span data-stu-id="09910-258">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/right-shift-operator.md"><span data-ttu-id="09910-259">&gt;&gt; Operador (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="09910-259">&gt;&gt; Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="StrCatObj">
      <MemberSignature Language="C#" Value="public static object StrCatObj (object vLeft, object vRight);" />
      <MemberSignature Language="ILAsm" Value=".method public static object StrCatObj(object vLeft, object vRight) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.StrCatObj(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StrCatObj (vLeft As Object, vRight As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ StrCatObj(System::Object ^ vLeft, System::Object ^ vRight);" />
      <MemberSignature Language="F#" Value="static member StrCatObj : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.StrCatObj (vLeft, vRight)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vLeft" Type="System.Object" />
        <Parameter Name="vRight" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="vLeft"><span data-ttu-id="09910-260">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="09910-260">Required.</span></span> <span data-ttu-id="09910-261">Cualquier expresión.</span><span class="sxs-lookup"><span data-stu-id="09910-261">Any expression.</span></span></param>
        <param name="vRight"><span data-ttu-id="09910-262">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="09910-262">Required.</span></span> <span data-ttu-id="09910-263">Cualquier expresión.</span><span class="sxs-lookup"><span data-stu-id="09910-263">Any expression.</span></span></param>
        <summary><span data-ttu-id="09910-264">Realiza una operación de concatenación de cadenas (&amp;).</span><span class="sxs-lookup"><span data-stu-id="09910-264">Performs a string concatenation (&amp;) operation.</span></span></summary>
        <returns><span data-ttu-id="09910-265">Una cadena que representa la concatenación de <paramref name="vLeft" /> y <paramref name="vRight" />.</span><span class="sxs-lookup"><span data-stu-id="09910-265">A string representing the concatenation of <paramref name="vLeft" /> and <paramref name="vRight" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09910-266">Esta clase es compatible con el compilador de Visual Basic y no está pensada para utilizarse directamente desde el código.</span><span class="sxs-lookup"><span data-stu-id="09910-266">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/concatenation-operator.md"><span data-ttu-id="09910-267">&amp; Operador (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="09910-267">&amp; Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SubObj">
      <MemberSignature Language="C#" Value="public static object SubObj (object o1, object o2);" />
      <MemberSignature Language="ILAsm" Value=".method public static object SubObj(object o1, object o2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.SubObj(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SubObj (o1 As Object, o2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ SubObj(System::Object ^ o1, System::Object ^ o2);" />
      <MemberSignature Language="F#" Value="static member SubObj : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.SubObj (o1, o2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o1" Type="System.Object" />
        <Parameter Name="o2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o1"><span data-ttu-id="09910-268">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="09910-268">Required.</span></span> <span data-ttu-id="09910-269">Cualquier expresión numérica.</span><span class="sxs-lookup"><span data-stu-id="09910-269">Any numeric expression.</span></span></param>
        <param name="o2"><span data-ttu-id="09910-270">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="09910-270">Required.</span></span> <span data-ttu-id="09910-271">Cualquier expresión numérica.</span><span class="sxs-lookup"><span data-stu-id="09910-271">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="09910-272">Realiza una operación de resta (-).</span><span class="sxs-lookup"><span data-stu-id="09910-272">Performs a subtraction (-) operation.</span></span></summary>
        <returns><span data-ttu-id="09910-273">La diferencia entre <paramref name="o1" /> y <paramref name="o2" />.</span><span class="sxs-lookup"><span data-stu-id="09910-273">The difference between <paramref name="o1" /> and <paramref name="o2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09910-274">Esta clase es compatible con el compilador de Visual Basic y no está pensada para utilizarse directamente desde el código.</span><span class="sxs-lookup"><span data-stu-id="09910-274">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/subtraction-operator.md"><span data-ttu-id="09910-275">- (Operador, Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="09910-275">- Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="XorObj">
      <MemberSignature Language="C#" Value="public static object XorObj (object obj1, object obj2);" />
      <MemberSignature Language="ILAsm" Value=".method public static object XorObj(object obj1, object obj2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.XorObj(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function XorObj (obj1 As Object, obj2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ XorObj(System::Object ^ obj1, System::Object ^ obj2);" />
      <MemberSignature Language="F#" Value="static member XorObj : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.XorObj (obj1, obj2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj1" Type="System.Object" />
        <Parameter Name="obj2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj1"><span data-ttu-id="09910-276">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="09910-276">Required.</span></span> <span data-ttu-id="09910-277">Cualquier <see langword="Boolean" /> o expresión numérica.</span><span class="sxs-lookup"><span data-stu-id="09910-277">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <param name="obj2"><span data-ttu-id="09910-278">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="09910-278">Required.</span></span> <span data-ttu-id="09910-279">Cualquier <see langword="Boolean" /> o expresión numérica.</span><span class="sxs-lookup"><span data-stu-id="09910-279">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <summary><span data-ttu-id="09910-280">Realiza una <see langword="Xor" /> comparación.</span><span class="sxs-lookup"><span data-stu-id="09910-280">Performs an <see langword="Xor" /> comparison.</span></span></summary>
        <returns><span data-ttu-id="09910-281">Un <see langword="Boolean" /> o un valor numérico.</span><span class="sxs-lookup"><span data-stu-id="09910-281">A <see langword="Boolean" /> or numeric value.</span></span> <span data-ttu-id="09910-282">Para un <see langword="Boolean" /> comparación, el valor devuelto es la exclusión lógica (disyunción lógica exclusiva) de dos <see langword="Boolean" /> valores.</span><span class="sxs-lookup"><span data-stu-id="09910-282">For a <see langword="Boolean" /> comparison, the return value is the logical exclusion (exclusive logical disjunction) of two <see langword="Boolean" /> values.</span></span> <span data-ttu-id="09910-283">Para las operaciones (numéricas) bit a bit, el valor devuelto es un valor numérico que representa la exclusión bit a bit (disyunción bit a bit exclusiva) de dos modelos de bits numéricos.</span><span class="sxs-lookup"><span data-stu-id="09910-283">For bitwise (numeric) operations, the return value is a numeric value that represents the bitwise exclusion (exclusive bitwise disjunction) of two numeric bit patterns.</span></span> <span data-ttu-id="09910-284">Para obtener más información, vea <see href="https://docs.microsoft.com/dotnet/visual-basic/language-reference/operators/xor-operator">Operador Xor</see>.</span><span class="sxs-lookup"><span data-stu-id="09910-284">For more information, see <see href="https://docs.microsoft.com/dotnet/visual-basic/language-reference/operators/xor-operator">Xor Operator</see>.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09910-285">Esta clase es compatible con el compilador de Visual Basic y no está pensada para utilizarse directamente desde el código.</span><span class="sxs-lookup"><span data-stu-id="09910-285">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/xor-operator.md"><span data-ttu-id="09910-286">Xor (Operador, Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="09910-286">Xor Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
<Type Name="Operators" FullName="Microsoft.VisualBasic.CompilerServices.Operators">
  <Metadata><Meta Name="ms.openlocfilehash" Value="37850a070290bb0b00b90cde518bb1490aa18790" /><Meta Name="ms.sourcegitcommit" Value="adc8598fd19d91438cacaa8fa7ce613e28c8218e" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="12/11/2018" /><Meta Name="ms.locfileid" Value="53229355" /></Metadata><TypeSignature Language="C#" Value="public sealed class Operators" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Operators extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.CompilerServices.Operators" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Operators" />
  <TypeSignature Language="C++ CLI" Value="public ref class Operators sealed" />
  <TypeSignature Language="F#" Value="type Operators = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netcore-2.2">
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="4d233-101">Proporciona operadores matemáticos enlazados en tiempo de ejecución, como <see cref="M:Microsoft.VisualBasic.CompilerServices.Operators.AddObject(System.Object,System.Object)" /> y <see cref="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObject(System.Object,System.Object,System.Boolean)" />, que el compilador de Visual Basic utiliza internamente.</span><span class="sxs-lookup"><span data-stu-id="4d233-101">Provides late-bound math operators, such as <see cref="M:Microsoft.VisualBasic.CompilerServices.Operators.AddObject(System.Object,System.Object)" /> and <see cref="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObject(System.Object,System.Object,System.Boolean)" />, which the Visual Basic compiler uses internally.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d233-102">Esta clase es compatible con el compilador de Visual Basic y no está pensada para utilizarse directamente desde el código.</span><span class="sxs-lookup"><span data-stu-id="4d233-102">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
    </remarks>
    <forInternalUseOnly />
    <related type="Article" href="~/docs/visual-basic/language-reference/operators/index.md"><span data-ttu-id="4d233-103">Operadores (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="4d233-103">Operators (Visual Basic)</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="AddObject">
      <MemberSignature Language="C#" Value="public static object AddObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object AddObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.AddObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AddObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ AddObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member AddObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.AddObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="4d233-104">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="4d233-104">Required.</span></span> <span data-ttu-id="4d233-105">Cualquier expresión numérica.</span><span class="sxs-lookup"><span data-stu-id="4d233-105">Any numeric expression.</span></span></param>
        <param name="Right"><span data-ttu-id="4d233-106">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="4d233-106">Required.</span></span> <span data-ttu-id="4d233-107">Cualquier expresión numérica.</span><span class="sxs-lookup"><span data-stu-id="4d233-107">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="4d233-108">Representa el operador de suma (+) de Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="4d233-108">Represents the Visual Basic addition (+) operator.</span></span></summary>
        <returns><span data-ttu-id="4d233-109">La suma de <paramref name="Left" /> y <paramref name="Right" />.</span><span class="sxs-lookup"><span data-stu-id="4d233-109">The sum of <paramref name="Left" /> and <paramref name="Right" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d233-110">Esta clase es compatible con el compilador de Visual Basic y no está pensada para utilizarse directamente desde el código.</span><span class="sxs-lookup"><span data-stu-id="4d233-110">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/addition-operator.md"><span data-ttu-id="4d233-111">+ (Operador, Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="4d233-111">+ Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AndObject">
      <MemberSignature Language="C#" Value="public static object AndObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object AndObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.AndObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AndObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ AndObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member AndObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.AndObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="4d233-112">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="4d233-112">Required.</span></span> <span data-ttu-id="4d233-113">Cualquier expresión numérica o de tipo <see langword="Boolean" />.</span><span class="sxs-lookup"><span data-stu-id="4d233-113">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <param name="Right"><span data-ttu-id="4d233-114">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="4d233-114">Required.</span></span> <span data-ttu-id="4d233-115">Cualquier expresión numérica o de tipo <see langword="Boolean" />.</span><span class="sxs-lookup"><span data-stu-id="4d233-115">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <summary><span data-ttu-id="4d233-116">Representa el operador <see langword="And" /> de Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="4d233-116">Represents the Visual Basic <see langword="And" /> operator.</span></span></summary>
        <returns><span data-ttu-id="4d233-117">Para las operaciones <see langword="Boolean" />, es <see langword="True" /> si <paramref name="Left" /> y <paramref name="Right" /> se evalúan como <see langword="True" />; de lo contrario, es <see langword="False" />.</span><span class="sxs-lookup"><span data-stu-id="4d233-117">For <see langword="Boolean" /> operations, <see langword="True" /> if both <paramref name="Left" /> and <paramref name="Right" /> evaluate to <see langword="True" />; otherwise, <see langword="False" />.</span></span> <span data-ttu-id="4d233-118">Para las operaciones bit a bit, es 1 si <paramref name="Left" /> y <paramref name="Right" /> se evalúan como 1; de lo contrario, es 0.</span><span class="sxs-lookup"><span data-stu-id="4d233-118">For bitwise operations, 1 if both <paramref name="Left" /> and <paramref name="Right" /> evaluate to 1; otherwise, 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d233-119">Esta clase es compatible con el compilador de Visual Basic y no está pensada para utilizarse directamente desde el código.</span><span class="sxs-lookup"><span data-stu-id="4d233-119">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/and-operator.md"><span data-ttu-id="4d233-120">And (Operador, Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="4d233-120">And Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CompareObject">
      <MemberSignature Language="C#" Value="public static int CompareObject (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 CompareObject(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObject(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObject (Left As Object, Right As Object, TextCompare As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int CompareObject(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareObject : obj * obj * bool -&gt; int" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareObject (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="4d233-121">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="4d233-121">Required.</span></span> <span data-ttu-id="4d233-122">Cualquier expresión.</span><span class="sxs-lookup"><span data-stu-id="4d233-122">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="4d233-123">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="4d233-123">Required.</span></span> <span data-ttu-id="4d233-124">Cualquier expresión.</span><span class="sxs-lookup"><span data-stu-id="4d233-124">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="4d233-125">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="4d233-125">Required.</span></span> <span data-ttu-id="4d233-126"><see langword="True" /> si se va a realizar una comparación de cadenas sin distinguir mayúsculas de minúsculas; de lo contrario, <see langword="False" />.</span><span class="sxs-lookup"><span data-stu-id="4d233-126"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="4d233-127">Representa los operadores de comparación de Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="4d233-127">Represents Visual Basic comparison operators.</span></span></summary>
        <returns><list type="table">
            <listheader>
              <term> <span data-ttu-id="4d233-128">Valor</span><span class="sxs-lookup"><span data-stu-id="4d233-128">Value</span></span> 
 </term>
              <description> <span data-ttu-id="4d233-129">Condición</span><span class="sxs-lookup"><span data-stu-id="4d233-129">Condition</span></span> 
 </description>
            </listheader>
            <item>
              <term> <span data-ttu-id="4d233-130">-1</span><span class="sxs-lookup"><span data-stu-id="4d233-130">-1</span></span> 
 </term>
              <description><span data-ttu-id="4d233-131">
                <paramref name="Left" /> es menor que <paramref name="Right" />.</span><span class="sxs-lookup"><span data-stu-id="4d233-131">
                <paramref name="Left" /> is less than <paramref name="Right" />.</span></span>  
  
 </description>
            </item>
            <item>
              <term> <span data-ttu-id="4d233-132">0</span><span class="sxs-lookup"><span data-stu-id="4d233-132">0</span></span> 
 </term>
              <description><span data-ttu-id="4d233-133">
                <paramref name="Left" /> y <paramref name="Right" /> son iguales.</span><span class="sxs-lookup"><span data-stu-id="4d233-133">
                <paramref name="Left" /> and <paramref name="Right" /> are equal.</span></span>  
  
 </description>
            </item>
            <item>
              <term> <span data-ttu-id="4d233-134">1</span><span class="sxs-lookup"><span data-stu-id="4d233-134">1</span></span> 
 </term>
              <description><span data-ttu-id="4d233-135">
                <paramref name="Left" /> es mayor que <paramref name="Right" />.</span><span class="sxs-lookup"><span data-stu-id="4d233-135">
                <paramref name="Left" /> is greater than <paramref name="Right" />.</span></span>  
  
 </description>
            </item>
          </list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d233-136">Esta clase es compatible con el compilador de Visual Basic y no está pensada para utilizarse directamente desde el código.</span><span class="sxs-lookup"><span data-stu-id="4d233-136">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/comparison-operators.md"><span data-ttu-id="4d233-137">Operadores de comparación (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="4d233-137">Comparison Operators (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CompareObjectEqual">
      <MemberSignature Language="C#" Value="public static object CompareObjectEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static object CompareObjectEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObjectEqual (Left As Object, Right As Object, TextCompare As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CompareObjectEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareObjectEqual : obj * obj * bool -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectEqual (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="4d233-138">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="4d233-138">Required.</span></span> <span data-ttu-id="4d233-139">Cualquier expresión.</span><span class="sxs-lookup"><span data-stu-id="4d233-139">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="4d233-140">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="4d233-140">Required.</span></span> <span data-ttu-id="4d233-141">Cualquier expresión.</span><span class="sxs-lookup"><span data-stu-id="4d233-141">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="4d233-142">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="4d233-142">Required.</span></span> <span data-ttu-id="4d233-143"><see langword="True" /> si se va a realizar una comparación de cadenas sin distinguir mayúsculas de minúsculas; de lo contrario, <see langword="False" />.</span><span class="sxs-lookup"><span data-stu-id="4d233-143"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="4d233-144">Representa el operador de igualdad (=) de Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="4d233-144">Represents the Visual Basic equal (=) operator.</span></span></summary>
        <returns><span data-ttu-id="4d233-145"><see langword="True" /> si <paramref name="Left" /> y <paramref name="Right" /> son iguales; en caso contrario, <see langword="False" />.</span><span class="sxs-lookup"><span data-stu-id="4d233-145"><see langword="True" /> if <paramref name="Left" /> and <paramref name="Right" /> are equal; otherwise, <see langword="False" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d233-146">Esta clase es compatible con el compilador de Visual Basic y no está pensada para utilizarse directamente desde el código.</span><span class="sxs-lookup"><span data-stu-id="4d233-146">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/comparison-operators.md"><span data-ttu-id="4d233-147">Operadores de comparación (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="4d233-147">Comparison Operators (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CompareObjectGreater">
      <MemberSignature Language="C#" Value="public static object CompareObjectGreater (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static object CompareObjectGreater(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreater(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObjectGreater (Left As Object, Right As Object, TextCompare As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CompareObjectGreater(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareObjectGreater : obj * obj * bool -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreater (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="4d233-148">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="4d233-148">Required.</span></span> <span data-ttu-id="4d233-149">Cualquier expresión.</span><span class="sxs-lookup"><span data-stu-id="4d233-149">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="4d233-150">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="4d233-150">Required.</span></span> <span data-ttu-id="4d233-151">Cualquier expresión.</span><span class="sxs-lookup"><span data-stu-id="4d233-151">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="4d233-152">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="4d233-152">Required.</span></span> <span data-ttu-id="4d233-153"><see langword="True" /> si se va a realizar una comparación de cadenas sin distinguir mayúsculas de minúsculas; de lo contrario, <see langword="False" />.</span><span class="sxs-lookup"><span data-stu-id="4d233-153"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="4d233-154">Representa el operador mayor que (&gt;) de Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="4d233-154">Represents the Visual Basic greater-than (&gt;) operator.</span></span></summary>
        <returns><span data-ttu-id="4d233-155">Es <see langword="True" /> si <paramref name="Left" /> es mayor que <paramref name="Right" />; en caso contrario, es <see langword="False" />.</span><span class="sxs-lookup"><span data-stu-id="4d233-155"><see langword="True" /> if <paramref name="Left" /> is greater than <paramref name="Right" />; otherwise, <see langword="False" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d233-156">Esta clase es compatible con el compilador de Visual Basic y no está pensada para utilizarse directamente desde el código.</span><span class="sxs-lookup"><span data-stu-id="4d233-156">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/comparison-operators.md"><span data-ttu-id="4d233-157">Operadores de comparación (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="4d233-157">Comparison Operators (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CompareObjectGreaterEqual">
      <MemberSignature Language="C#" Value="public static object CompareObjectGreaterEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static object CompareObjectGreaterEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreaterEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObjectGreaterEqual (Left As Object, Right As Object, TextCompare As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CompareObjectGreaterEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareObjectGreaterEqual : obj * obj * bool -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreaterEqual (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="4d233-158">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="4d233-158">Required.</span></span> <span data-ttu-id="4d233-159">Cualquier expresión.</span><span class="sxs-lookup"><span data-stu-id="4d233-159">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="4d233-160">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="4d233-160">Required.</span></span> <span data-ttu-id="4d233-161">Cualquier expresión.</span><span class="sxs-lookup"><span data-stu-id="4d233-161">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="4d233-162">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="4d233-162">Required.</span></span> <span data-ttu-id="4d233-163"><see langword="True" /> si se va a realizar una comparación de cadenas sin distinguir mayúsculas de minúsculas; de lo contrario, <see langword="False" />.</span><span class="sxs-lookup"><span data-stu-id="4d233-163"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="4d233-164">Representa el operador mayor que o igual a (&gt;=) de Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="4d233-164">Represents the Visual Basic greater-than or equal-to (&gt;=) operator.</span></span></summary>
        <returns><span data-ttu-id="4d233-165">Es <see langword="True" /> si <paramref name="Left" /> es mayor o igual que <paramref name="Right" />; en caso contrario, es <see langword="False" />.</span><span class="sxs-lookup"><span data-stu-id="4d233-165"><see langword="True" /> if <paramref name="Left" /> is greater than or equal to <paramref name="Right" />; otherwise, <see langword="False" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d233-166">Esta clase es compatible con el compilador de Visual Basic y no está pensada para utilizarse directamente desde el código.</span><span class="sxs-lookup"><span data-stu-id="4d233-166">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/comparison-operators.md"><span data-ttu-id="4d233-167">Operadores de comparación (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="4d233-167">Comparison Operators (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CompareObjectLess">
      <MemberSignature Language="C#" Value="public static object CompareObjectLess (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static object CompareObjectLess(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLess(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObjectLess (Left As Object, Right As Object, TextCompare As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CompareObjectLess(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareObjectLess : obj * obj * bool -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLess (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="4d233-168">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="4d233-168">Required.</span></span> <span data-ttu-id="4d233-169">Cualquier expresión.</span><span class="sxs-lookup"><span data-stu-id="4d233-169">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="4d233-170">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="4d233-170">Required.</span></span> <span data-ttu-id="4d233-171">Cualquier expresión.</span><span class="sxs-lookup"><span data-stu-id="4d233-171">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="4d233-172">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="4d233-172">Required.</span></span> <span data-ttu-id="4d233-173"><see langword="True" /> si se va a realizar una comparación de cadenas sin distinguir mayúsculas de minúsculas; de lo contrario, <see langword="False" />.</span><span class="sxs-lookup"><span data-stu-id="4d233-173"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="4d233-174">Representa el operador menor que (&lt;) de Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="4d233-174">Represents the Visual Basic less-than (&lt;) operator.</span></span></summary>
        <returns><span data-ttu-id="4d233-175">Es <see langword="True" /> si <paramref name="Left" /> es menor que <paramref name="Right" />; en caso contrario, es <see langword="False" />.</span><span class="sxs-lookup"><span data-stu-id="4d233-175"><see langword="True" /> if <paramref name="Left" /> is less than <paramref name="Right" />; otherwise, <see langword="False" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d233-176">Esta clase es compatible con el compilador de Visual Basic y no está pensada para utilizarse directamente desde el código.</span><span class="sxs-lookup"><span data-stu-id="4d233-176">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/comparison-operators.md"><span data-ttu-id="4d233-177">Operadores de comparación (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="4d233-177">Comparison Operators (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CompareObjectLessEqual">
      <MemberSignature Language="C#" Value="public static object CompareObjectLessEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static object CompareObjectLessEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLessEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObjectLessEqual (Left As Object, Right As Object, TextCompare As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CompareObjectLessEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareObjectLessEqual : obj * obj * bool -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLessEqual (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="4d233-178">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="4d233-178">Required.</span></span> <span data-ttu-id="4d233-179">Cualquier expresión.</span><span class="sxs-lookup"><span data-stu-id="4d233-179">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="4d233-180">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="4d233-180">Required.</span></span> <span data-ttu-id="4d233-181">Cualquier expresión.</span><span class="sxs-lookup"><span data-stu-id="4d233-181">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="4d233-182">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="4d233-182">Required.</span></span> <span data-ttu-id="4d233-183"><see langword="True" /> si se va a realizar una comparación de cadenas sin distinguir mayúsculas de minúsculas; de lo contrario, <see langword="False" />.</span><span class="sxs-lookup"><span data-stu-id="4d233-183"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="4d233-184">Representa el operador menor que o igual a (&lt;=) de Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="4d233-184">Represents the Visual Basic less-than or equal-to (&lt;=) operator.</span></span></summary>
        <returns><span data-ttu-id="4d233-185">Es <see langword="True" /> si <paramref name="Left" /> es menor o igual que <paramref name="Right" />; en caso contrario, es <see langword="False" />.</span><span class="sxs-lookup"><span data-stu-id="4d233-185"><see langword="True" /> if <paramref name="Left" /> is less than or equal to <paramref name="Right" />; otherwise, <see langword="False" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d233-186">Esta clase es compatible con el compilador de Visual Basic y no está pensada para utilizarse directamente desde el código.</span><span class="sxs-lookup"><span data-stu-id="4d233-186">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/comparison-operators.md"><span data-ttu-id="4d233-187">Operadores de comparación (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="4d233-187">Comparison Operators (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CompareObjectNotEqual">
      <MemberSignature Language="C#" Value="public static object CompareObjectNotEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static object CompareObjectNotEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectNotEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObjectNotEqual (Left As Object, Right As Object, TextCompare As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CompareObjectNotEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareObjectNotEqual : obj * obj * bool -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectNotEqual (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="4d233-188">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="4d233-188">Required.</span></span> <span data-ttu-id="4d233-189">Cualquier expresión.</span><span class="sxs-lookup"><span data-stu-id="4d233-189">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="4d233-190">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="4d233-190">Required.</span></span> <span data-ttu-id="4d233-191">Cualquier expresión.</span><span class="sxs-lookup"><span data-stu-id="4d233-191">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="4d233-192">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="4d233-192">Required.</span></span> <span data-ttu-id="4d233-193"><see langword="True" /> si se va a realizar una comparación de cadenas sin distinguir mayúsculas de minúsculas; de lo contrario, <see langword="False" />.</span><span class="sxs-lookup"><span data-stu-id="4d233-193"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="4d233-194">Representa el operador de desigualdad (&lt;&gt;) de Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="4d233-194">Represents the Visual Basic not-equal (&lt;&gt;) operator.</span></span></summary>
        <returns><span data-ttu-id="4d233-195">Es <see langword="True" /> si <paramref name="Left" /> no es igual a <paramref name="Right" />; en caso contrario, es <see langword="False" />.</span><span class="sxs-lookup"><span data-stu-id="4d233-195"><see langword="True" /> if <paramref name="Left" /> is not equal to <paramref name="Right" />; otherwise, <see langword="False" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d233-196">Esta clase es compatible con el compilador de Visual Basic y no está pensada para utilizarse directamente desde el código.</span><span class="sxs-lookup"><span data-stu-id="4d233-196">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/comparison-operators.md"><span data-ttu-id="4d233-197">Operadores de comparación (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="4d233-197">Comparison Operators (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CompareString">
      <MemberSignature Language="C#" Value="public static int CompareString (string Left, string Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 CompareString(string Left, string Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareString(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareString (Left As String, Right As String, TextCompare As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int CompareString(System::String ^ Left, System::String ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareString : string * string * bool -&gt; int" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareString (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.String" />
        <Parameter Name="Right" Type="System.String" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="4d233-198">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="4d233-198">Required.</span></span> <span data-ttu-id="4d233-199">Cualquier expresión <see langword="String" /> .</span><span class="sxs-lookup"><span data-stu-id="4d233-199">Any <see langword="String" /> expression.</span></span></param>
        <param name="Right"><span data-ttu-id="4d233-200">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="4d233-200">Required.</span></span> <span data-ttu-id="4d233-201">Cualquier expresión <see langword="String" /> .</span><span class="sxs-lookup"><span data-stu-id="4d233-201">Any <see langword="String" /> expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="4d233-202">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="4d233-202">Required.</span></span> <span data-ttu-id="4d233-203"><see langword="True" /> si se va a realizar una comparación de cadenas sin distinguir mayúsculas de minúsculas; de lo contrario, <see langword="False" />.</span><span class="sxs-lookup"><span data-stu-id="4d233-203"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="4d233-204">Realiza una comparación de cadenas de texto o binarias dadas dos cadenas.</span><span class="sxs-lookup"><span data-stu-id="4d233-204">Performs binary or text string comparison when given two strings.</span></span></summary>
        <returns><list type="table">
            <listheader>
              <term> <span data-ttu-id="4d233-205">Valor</span><span class="sxs-lookup"><span data-stu-id="4d233-205">Value</span></span> 
 </term>
              <description> <span data-ttu-id="4d233-206">Condición</span><span class="sxs-lookup"><span data-stu-id="4d233-206">Condition</span></span> 
 </description>
            </listheader>
            <item>
              <term> <span data-ttu-id="4d233-207">-1</span><span class="sxs-lookup"><span data-stu-id="4d233-207">-1</span></span> 
 </term>
              <description><span data-ttu-id="4d233-208">
                <paramref name="Left" /> es menor que <paramref name="Right" />.</span><span class="sxs-lookup"><span data-stu-id="4d233-208">
                <paramref name="Left" /> is less than <paramref name="Right" />.</span></span>  
  
 </description>
            </item>
            <item>
              <term> <span data-ttu-id="4d233-209">0</span><span class="sxs-lookup"><span data-stu-id="4d233-209">0</span></span> 
 </term>
              <description><span data-ttu-id="4d233-210">
                <paramref name="Left" /> es igual a <paramref name="Right" />.</span><span class="sxs-lookup"><span data-stu-id="4d233-210">
                <paramref name="Left" /> is equal to <paramref name="Right" />.</span></span>  
  
 </description>
            </item>
            <item>
              <term> <span data-ttu-id="4d233-211">1</span><span class="sxs-lookup"><span data-stu-id="4d233-211">1</span></span> 
 </term>
              <description><span data-ttu-id="4d233-212">
                <paramref name="Left" /> es mayor que <paramref name="Right" />.</span><span class="sxs-lookup"><span data-stu-id="4d233-212">
                <paramref name="Left" /> is greater than <paramref name="Right" />.</span></span>  
  
 </description>
            </item>
          </list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d233-213">Esta clase es compatible con el compilador de Visual Basic y no está pensada para utilizarse directamente desde el código.</span><span class="sxs-lookup"><span data-stu-id="4d233-213">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 <span data-ttu-id="4d233-214">Cuando se usa el operador de igualdad de Visual Basic para comparar dos cadenas, pasa las cadenas para la <xref:Microsoft.VisualBasic.CompilerServices.Operators.CompareString%2A> método junto con un valor de `False` para el `TextCompare` argumento.</span><span class="sxs-lookup"><span data-stu-id="4d233-214">When the Visual Basic equality operator is used to compare two strings, it passes the strings to the <xref:Microsoft.VisualBasic.CompilerServices.Operators.CompareString%2A> method along with a value of `False` for the `TextCompare` argument.</span></span> <span data-ttu-id="4d233-215">Esto realiza una comparación entre mayúsculas y minúsculas que es el ordinal o según la referencia cultural actual, dependiendo del valor de la instrucción.</span><span class="sxs-lookup"><span data-stu-id="4d233-215">This performs a case-sensitive comparison that is either ordinal or based on the current culture, depending on the value of the  statement.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/comparison-operators.md"><span data-ttu-id="4d233-216">Operadores de comparación (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="4d233-216">Comparison Operators (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ConcatenateObject">
      <MemberSignature Language="C#" Value="public static object ConcatenateObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object ConcatenateObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConcatenateObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConcatenateObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ConcatenateObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member ConcatenateObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ConcatenateObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="4d233-217">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="4d233-217">Required.</span></span> <span data-ttu-id="4d233-218">Cualquier expresión.</span><span class="sxs-lookup"><span data-stu-id="4d233-218">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="4d233-219">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="4d233-219">Required.</span></span> <span data-ttu-id="4d233-220">Cualquier expresión.</span><span class="sxs-lookup"><span data-stu-id="4d233-220">Any expression.</span></span></param>
        <summary><span data-ttu-id="4d233-221">Representa el operador de concatenación (&amp;) de Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="4d233-221">Represents the Visual Basic concatenation (&amp;) operator.</span></span></summary>
        <returns><span data-ttu-id="4d233-222">Cadena que representa la concatenación de <paramref name="Left" /> y <paramref name="Right" />.</span><span class="sxs-lookup"><span data-stu-id="4d233-222">A string representing the concatenation of <paramref name="Left" /> and <paramref name="Right" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d233-223">Esta clase es compatible con el compilador de Visual Basic y no está pensada para utilizarse directamente desde el código.</span><span class="sxs-lookup"><span data-stu-id="4d233-223">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/concatenation-operator.md"><span data-ttu-id="4d233-224">&amp; Operador (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="4d233-224">&amp; Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ConditionalCompareObjectEqual">
      <MemberSignature Language="C#" Value="public static bool ConditionalCompareObjectEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ConditionalCompareObjectEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalCompareObjectEqual (Left As Object, Right As Object, TextCompare As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ConditionalCompareObjectEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member ConditionalCompareObjectEqual : obj * obj * bool -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectEqual (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="4d233-225">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="4d233-225">Required.</span></span> <span data-ttu-id="4d233-226">Cualquier expresión.</span><span class="sxs-lookup"><span data-stu-id="4d233-226">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="4d233-227">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="4d233-227">Required.</span></span> <span data-ttu-id="4d233-228">Cualquier expresión.</span><span class="sxs-lookup"><span data-stu-id="4d233-228">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="4d233-229">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="4d233-229">Required.</span></span> <span data-ttu-id="4d233-230"><see langword="True" /> si se va a realizar una comparación de cadenas sin distinguir mayúsculas de minúsculas; de lo contrario, <see langword="False" />.</span><span class="sxs-lookup"><span data-stu-id="4d233-230"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="4d233-231">Representa el operador de igualdad (=) sobrecargado de Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="4d233-231">Represents the overloaded Visual Basic equals (=) operator.</span></span></summary>
        <returns><span data-ttu-id="4d233-232">El resultado del operador de igualdad sobrecargado.</span><span class="sxs-lookup"><span data-stu-id="4d233-232">The result of the overloaded equals operator.</span></span> <span data-ttu-id="4d233-233">Es <see langword="False" /> si no se admite la sobrecarga del operador.</span><span class="sxs-lookup"><span data-stu-id="4d233-233"><see langword="False" /> if operator overloading is not supported.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d233-234">Esta clase es compatible con el compilador de Visual Basic y no está pensada para utilizarse directamente desde el código.</span><span class="sxs-lookup"><span data-stu-id="4d233-234">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/procedures/operator-procedures.md"><span data-ttu-id="4d233-235">Procedimientos de operador</span><span class="sxs-lookup"><span data-stu-id="4d233-235">Operator Procedures</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ConditionalCompareObjectGreater">
      <MemberSignature Language="C#" Value="public static bool ConditionalCompareObjectGreater (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ConditionalCompareObjectGreater(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreater(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalCompareObjectGreater (Left As Object, Right As Object, TextCompare As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ConditionalCompareObjectGreater(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member ConditionalCompareObjectGreater : obj * obj * bool -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreater (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="4d233-236">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="4d233-236">Required.</span></span> <span data-ttu-id="4d233-237">Cualquier expresión.</span><span class="sxs-lookup"><span data-stu-id="4d233-237">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="4d233-238">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="4d233-238">Required.</span></span> <span data-ttu-id="4d233-239">Cualquier expresión.</span><span class="sxs-lookup"><span data-stu-id="4d233-239">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="4d233-240">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="4d233-240">Required.</span></span> <span data-ttu-id="4d233-241"><see langword="True" /> si se va a realizar una comparación de cadenas sin distinguir mayúsculas de minúsculas; de lo contrario, <see langword="False" />.</span><span class="sxs-lookup"><span data-stu-id="4d233-241"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="4d233-242">Representa el operador mayor que (&gt;) sobrecargado de Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="4d233-242">Represents the overloaded Visual Basic greater-than (&gt;) operator.</span></span></summary>
        <returns><span data-ttu-id="4d233-243">Resultado del operador mayor que sobrecargado.</span><span class="sxs-lookup"><span data-stu-id="4d233-243">The result of the overloaded greater-than operator.</span></span> <span data-ttu-id="4d233-244">Es <see langword="False" /> si no se admite la sobrecarga del operador.</span><span class="sxs-lookup"><span data-stu-id="4d233-244"><see langword="False" /> if operator overloading is not supported.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d233-245">Esta clase es compatible con el compilador de Visual Basic y no está pensada para utilizarse directamente desde el código.</span><span class="sxs-lookup"><span data-stu-id="4d233-245">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/procedures/operator-procedures.md"><span data-ttu-id="4d233-246">Procedimientos de operador</span><span class="sxs-lookup"><span data-stu-id="4d233-246">Operator Procedures</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ConditionalCompareObjectGreaterEqual">
      <MemberSignature Language="C#" Value="public static bool ConditionalCompareObjectGreaterEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ConditionalCompareObjectGreaterEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreaterEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalCompareObjectGreaterEqual (Left As Object, Right As Object, TextCompare As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ConditionalCompareObjectGreaterEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member ConditionalCompareObjectGreaterEqual : obj * obj * bool -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreaterEqual (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="4d233-247">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="4d233-247">Required.</span></span> <span data-ttu-id="4d233-248">Cualquier expresión.</span><span class="sxs-lookup"><span data-stu-id="4d233-248">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="4d233-249">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="4d233-249">Required.</span></span> <span data-ttu-id="4d233-250">Cualquier expresión.</span><span class="sxs-lookup"><span data-stu-id="4d233-250">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="4d233-251">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="4d233-251">Required.</span></span> <span data-ttu-id="4d233-252"><see langword="True" /> si se va a realizar una comparación de cadenas sin distinguir mayúsculas de minúsculas; de lo contrario, <see langword="False" />.</span><span class="sxs-lookup"><span data-stu-id="4d233-252"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="4d233-253">Representa el operador mayor que o igual a (&gt;=) sobrecargado de Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="4d233-253">Represents the overloaded Visual Basic greater-than or equal-to (&gt;=) operator.</span></span></summary>
        <returns><span data-ttu-id="4d233-254">Resultado del operador mayor o igual que sobrecargado.</span><span class="sxs-lookup"><span data-stu-id="4d233-254">The result of the overloaded greater-than or equal-to operator.</span></span> <span data-ttu-id="4d233-255">Es <see langword="False" /> si no se admite la sobrecarga del operador.</span><span class="sxs-lookup"><span data-stu-id="4d233-255"><see langword="False" /> if operator overloading is not supported.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d233-256">Esta clase es compatible con el compilador de Visual Basic y no está pensada para utilizarse directamente desde el código.</span><span class="sxs-lookup"><span data-stu-id="4d233-256">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/procedures/operator-procedures.md"><span data-ttu-id="4d233-257">Procedimientos de operador</span><span class="sxs-lookup"><span data-stu-id="4d233-257">Operator Procedures</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ConditionalCompareObjectLess">
      <MemberSignature Language="C#" Value="public static bool ConditionalCompareObjectLess (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ConditionalCompareObjectLess(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLess(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalCompareObjectLess (Left As Object, Right As Object, TextCompare As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ConditionalCompareObjectLess(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member ConditionalCompareObjectLess : obj * obj * bool -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLess (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="4d233-258">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="4d233-258">Required.</span></span> <span data-ttu-id="4d233-259">Cualquier expresión.</span><span class="sxs-lookup"><span data-stu-id="4d233-259">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="4d233-260">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="4d233-260">Required.</span></span> <span data-ttu-id="4d233-261">Cualquier expresión.</span><span class="sxs-lookup"><span data-stu-id="4d233-261">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="4d233-262">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="4d233-262">Required.</span></span> <span data-ttu-id="4d233-263"><see langword="True" /> si se va a realizar una comparación de cadenas sin distinguir mayúsculas de minúsculas; de lo contrario, <see langword="False" />.</span><span class="sxs-lookup"><span data-stu-id="4d233-263"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="4d233-264">Representa el operador menor que (&lt;) sobrecargado de Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="4d233-264">Represents the overloaded Visual Basic less-than (&lt;) operator.</span></span></summary>
        <returns><span data-ttu-id="4d233-265">Resultado del operador menor que sobrecargado.</span><span class="sxs-lookup"><span data-stu-id="4d233-265">The result of the overloaded less-than operator.</span></span> <span data-ttu-id="4d233-266">Es <see langword="False" /> si no se admite la sobrecarga del operador.</span><span class="sxs-lookup"><span data-stu-id="4d233-266"><see langword="False" /> if operator overloading is not supported.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d233-267">Esta clase es compatible con el compilador de Visual Basic y no está pensada para utilizarse directamente desde el código.</span><span class="sxs-lookup"><span data-stu-id="4d233-267">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/procedures/operator-procedures.md"><span data-ttu-id="4d233-268">Procedimientos de operador</span><span class="sxs-lookup"><span data-stu-id="4d233-268">Operator Procedures</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ConditionalCompareObjectLessEqual">
      <MemberSignature Language="C#" Value="public static bool ConditionalCompareObjectLessEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ConditionalCompareObjectLessEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLessEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalCompareObjectLessEqual (Left As Object, Right As Object, TextCompare As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ConditionalCompareObjectLessEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member ConditionalCompareObjectLessEqual : obj * obj * bool -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLessEqual (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="4d233-269">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="4d233-269">Required.</span></span> <span data-ttu-id="4d233-270">Cualquier expresión.</span><span class="sxs-lookup"><span data-stu-id="4d233-270">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="4d233-271">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="4d233-271">Required.</span></span> <span data-ttu-id="4d233-272">Cualquier expresión.</span><span class="sxs-lookup"><span data-stu-id="4d233-272">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="4d233-273">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="4d233-273">Required.</span></span> <span data-ttu-id="4d233-274"><see langword="True" /> si se va a realizar una comparación de cadenas sin distinguir mayúsculas de minúsculas; de lo contrario, <see langword="False" />.</span><span class="sxs-lookup"><span data-stu-id="4d233-274"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="4d233-275">Representa el operador menor que o igual a (&lt;=) sobrecargado de Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="4d233-275">Represents the overloaded Visual Basic less-than or equal-to (&lt;=) operator.</span></span></summary>
        <returns><span data-ttu-id="4d233-276">Resultado del operador menor o igual que sobrecargado.</span><span class="sxs-lookup"><span data-stu-id="4d233-276">The result of the overloaded less-than or equal-to operator.</span></span> <span data-ttu-id="4d233-277">Es <see langword="False" /> si no se admite la sobrecarga del operador.</span><span class="sxs-lookup"><span data-stu-id="4d233-277"><see langword="False" /> if operator overloading is not supported.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d233-278">Esta clase es compatible con el compilador de Visual Basic y no está pensada para utilizarse directamente desde el código.</span><span class="sxs-lookup"><span data-stu-id="4d233-278">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/procedures/operator-procedures.md"><span data-ttu-id="4d233-279">Procedimientos de operador</span><span class="sxs-lookup"><span data-stu-id="4d233-279">Operator Procedures</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ConditionalCompareObjectNotEqual">
      <MemberSignature Language="C#" Value="public static bool ConditionalCompareObjectNotEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ConditionalCompareObjectNotEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectNotEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalCompareObjectNotEqual (Left As Object, Right As Object, TextCompare As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ConditionalCompareObjectNotEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member ConditionalCompareObjectNotEqual : obj * obj * bool -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectNotEqual (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="4d233-280">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="4d233-280">Required.</span></span> <span data-ttu-id="4d233-281">Cualquier expresión.</span><span class="sxs-lookup"><span data-stu-id="4d233-281">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="4d233-282">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="4d233-282">Required.</span></span> <span data-ttu-id="4d233-283">Cualquier expresión.</span><span class="sxs-lookup"><span data-stu-id="4d233-283">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="4d233-284">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="4d233-284">Required.</span></span> <span data-ttu-id="4d233-285"><see langword="True" /> si se va a realizar una comparación de cadenas sin distinguir mayúsculas de minúsculas; de lo contrario, <see langword="False" />.</span><span class="sxs-lookup"><span data-stu-id="4d233-285"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="4d233-286">Representa el operador de desigualdad (&lt;&gt;) sobrecargado de Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="4d233-286">Represents the overloaded Visual Basic not-equal (&lt;&gt;) operator.</span></span></summary>
        <returns><span data-ttu-id="4d233-287">Resultado del operador de desigualdad sobrecargado.</span><span class="sxs-lookup"><span data-stu-id="4d233-287">The result of the overloaded not-equal operator.</span></span> <span data-ttu-id="4d233-288">Es <see langword="False" /> si no se admite la sobrecarga del operador.</span><span class="sxs-lookup"><span data-stu-id="4d233-288"><see langword="False" /> if operator overloading is not supported.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d233-289">Esta clase es compatible con el compilador de Visual Basic y no está pensada para utilizarse directamente desde el código.</span><span class="sxs-lookup"><span data-stu-id="4d233-289">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/procedures/operator-procedures.md"><span data-ttu-id="4d233-290">Procedimientos de operador</span><span class="sxs-lookup"><span data-stu-id="4d233-290">Operator Procedures</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DivideObject">
      <MemberSignature Language="C#" Value="public static object DivideObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object DivideObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.DivideObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DivideObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ DivideObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member DivideObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.DivideObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="4d233-291">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="4d233-291">Required.</span></span> <span data-ttu-id="4d233-292">Cualquier expresión numérica.</span><span class="sxs-lookup"><span data-stu-id="4d233-292">Any numeric expression.</span></span></param>
        <param name="Right"><span data-ttu-id="4d233-293">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="4d233-293">Required.</span></span> <span data-ttu-id="4d233-294">Cualquier expresión numérica.</span><span class="sxs-lookup"><span data-stu-id="4d233-294">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="4d233-295">Representa el operador de división (/) de Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="4d233-295">Represents the Visual Basic division (/) operator.</span></span></summary>
        <returns><span data-ttu-id="4d233-296">Cociente completo de <paramref name="Left" /> dividido entre <paramref name="Right" />, incluido cualquier resto.</span><span class="sxs-lookup"><span data-stu-id="4d233-296">The full quotient of <paramref name="Left" /> divided by <paramref name="Right" />, including any remainder.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d233-297">Esta clase es compatible con el compilador de Visual Basic y no está pensada para utilizarse directamente desde el código.</span><span class="sxs-lookup"><span data-stu-id="4d233-297">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/floating-point-division-operator.md"><span data-ttu-id="4d233-298">/ (Operador, Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="4d233-298">/ Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ExponentObject">
      <MemberSignature Language="C#" Value="public static object ExponentObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object ExponentObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ExponentObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ExponentObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ExponentObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member ExponentObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ExponentObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="4d233-299">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="4d233-299">Required.</span></span> <span data-ttu-id="4d233-300">Cualquier expresión numérica.</span><span class="sxs-lookup"><span data-stu-id="4d233-300">Any numeric expression.</span></span></param>
        <param name="Right"><span data-ttu-id="4d233-301">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="4d233-301">Required.</span></span> <span data-ttu-id="4d233-302">Cualquier expresión numérica.</span><span class="sxs-lookup"><span data-stu-id="4d233-302">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="4d233-303">Representa el operador exponencial (^) de Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="4d233-303">Represents the Visual Basic exponent (^) operator.</span></span></summary>
        <returns><span data-ttu-id="4d233-304">Resultado de <paramref name="Left" /> elevado a la potencia de <paramref name="Right" />.</span><span class="sxs-lookup"><span data-stu-id="4d233-304">The result of <paramref name="Left" /> raised to the power of <paramref name="Right" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d233-305">Esta clase es compatible con el compilador de Visual Basic y no está pensada para utilizarse directamente desde el código.</span><span class="sxs-lookup"><span data-stu-id="4d233-305">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/exponentiation-operators.md"><span data-ttu-id="4d233-306">^ (Operador, Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="4d233-306">^ Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FallbackInvokeUserDefinedOperator">
      <MemberSignature Language="C#" Value="public static object FallbackInvokeUserDefinedOperator (object vbOp, object[] Arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static object FallbackInvokeUserDefinedOperator(object vbOp, object[] Arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.FallbackInvokeUserDefinedOperator(System.Object,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FallbackInvokeUserDefinedOperator (vbOp As Object, Arguments As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ FallbackInvokeUserDefinedOperator(System::Object ^ vbOp, cli::array &lt;System::Object ^&gt; ^ Arguments);" />
      <MemberSignature Language="F#" Value="static member FallbackInvokeUserDefinedOperator : obj * obj[] -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.FallbackInvokeUserDefinedOperator (vbOp, Arguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("do not use this method", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vbOp" Type="System.Object" />
        <Parameter Name="Arguments" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="vbOp"><span data-ttu-id="4d233-307">Operador definido por el usuario.</span><span class="sxs-lookup"><span data-stu-id="4d233-307">The user-defined operator.</span></span></param>
        <param name="Arguments"><span data-ttu-id="4d233-308">Valores de argumento que se van a pasar al operador definido por el usuario.</span><span class="sxs-lookup"><span data-stu-id="4d233-308">Argument values to pass to the user-defined operator.</span></span></param>
        <summary><span data-ttu-id="4d233-309">Ejecuta una evaluación enlazada en tiempo de ejecución de un operador definido por el usuario.</span><span class="sxs-lookup"><span data-stu-id="4d233-309">Executes a late-bound evaluation of a user-defined operator.</span></span> <span data-ttu-id="4d233-310">Este método del asistente no está diseñado para ser llamado directamente desde el código.</span><span class="sxs-lookup"><span data-stu-id="4d233-310">This helper method is not meant to be called directly from your code.</span></span></summary>
        <returns><span data-ttu-id="4d233-311">Resultado devuelto por el operador definido por el usuario.</span><span class="sxs-lookup"><span data-stu-id="4d233-311">The result returned from the user-defined operator.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="IntDivideObject">
      <MemberSignature Language="C#" Value="public static object IntDivideObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object IntDivideObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.IntDivideObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IntDivideObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ IntDivideObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member IntDivideObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.IntDivideObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="4d233-312">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="4d233-312">Required.</span></span> <span data-ttu-id="4d233-313">Cualquier expresión numérica.</span><span class="sxs-lookup"><span data-stu-id="4d233-313">Any numeric expression.</span></span></param>
        <param name="Right"><span data-ttu-id="4d233-314">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="4d233-314">Required.</span></span> <span data-ttu-id="4d233-315">Cualquier expresión numérica.</span><span class="sxs-lookup"><span data-stu-id="4d233-315">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="4d233-316">Representa el operador de división (\\) de enteros de Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="4d233-316">Represents the Visual Basic integer division (\\) operator.</span></span></summary>
        <returns><span data-ttu-id="4d233-317">Cociente entero de <paramref name="Left" /> dividido entre <paramref name="Right" />, que descarta cualquier resto y conserva sólo la parte entera.</span><span class="sxs-lookup"><span data-stu-id="4d233-317">The integer quotient of <paramref name="Left" /> divided by <paramref name="Right" />, which discards any remainder and retains only the integer portion.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d233-318">Esta clase es compatible con el compilador de Visual Basic y no está pensada para utilizarse directamente desde el código.</span><span class="sxs-lookup"><span data-stu-id="4d233-318">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/integer-division-operator.md"><span data-ttu-id="4d233-319">\ (Operador)</span><span class="sxs-lookup"><span data-stu-id="4d233-319">\ Operator</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="LeftShiftObject">
      <MemberSignature Language="C#" Value="public static object LeftShiftObject (object Operand, object Amount);" />
      <MemberSignature Language="ILAsm" Value=".method public static object LeftShiftObject(object Operand, object Amount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.LeftShiftObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LeftShiftObject (Operand As Object, Amount As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ LeftShiftObject(System::Object ^ Operand, System::Object ^ Amount);" />
      <MemberSignature Language="F#" Value="static member LeftShiftObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.LeftShiftObject (Operand, Amount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Operand" Type="System.Object" />
        <Parameter Name="Amount" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Operand"><span data-ttu-id="4d233-320">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="4d233-320">Required.</span></span> <span data-ttu-id="4d233-321">Expresión numérica integral.</span><span class="sxs-lookup"><span data-stu-id="4d233-321">Integral numeric expression.</span></span> <span data-ttu-id="4d233-322">Modelo de bits que se va a desplazar.</span><span class="sxs-lookup"><span data-stu-id="4d233-322">The bit pattern to be shifted.</span></span> <span data-ttu-id="4d233-323">El tipo de datos debe ser un tipo entero (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" /> o <see langword="ULong" />).</span><span class="sxs-lookup"><span data-stu-id="4d233-323">The data type must be an integral type (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" />, or <see langword="ULong" />).</span></span></param>
        <param name="Amount"><span data-ttu-id="4d233-324">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="4d233-324">Required.</span></span> <span data-ttu-id="4d233-325">Expresión numérica.</span><span class="sxs-lookup"><span data-stu-id="4d233-325">Numeric expression.</span></span> <span data-ttu-id="4d233-326">Número de bits que se va a desplazar el modelo de bits.</span><span class="sxs-lookup"><span data-stu-id="4d233-326">The number of bits to shift the bit pattern.</span></span> <span data-ttu-id="4d233-327">El tipo de datos debe ser <see langword="Integer" /> o ampliarse a <see langword="Integer" />.</span><span class="sxs-lookup"><span data-stu-id="4d233-327">The data type must be <see langword="Integer" /> or widen to <see langword="Integer" />.</span></span></param>
        <summary><span data-ttu-id="4d233-328">Representa el operador de desplazamiento aritmético a la izquierda (&lt;&lt;) de Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="4d233-328">Represents the Visual Basic arithmetic left shift (&lt;&lt;) operator.</span></span></summary>
        <returns><span data-ttu-id="4d233-329">Valor numérico integral.</span><span class="sxs-lookup"><span data-stu-id="4d233-329">An integral numeric value.</span></span> <span data-ttu-id="4d233-330">Resultado de desplazar el modelo de bits.</span><span class="sxs-lookup"><span data-stu-id="4d233-330">The result of shifting the bit pattern.</span></span> <span data-ttu-id="4d233-331">El tipo de datos es el mismo que el de <paramref name="Operand" />.</span><span class="sxs-lookup"><span data-stu-id="4d233-331">The data type is the same as that of <paramref name="Operand" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d233-332">Esta clase es compatible con el compilador de Visual Basic y no está pensada para utilizarse directamente desde el código.</span><span class="sxs-lookup"><span data-stu-id="4d233-332">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/left-shift-operator.md"><span data-ttu-id="4d233-333">&lt;&lt; Operador (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="4d233-333">&lt;&lt; Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="LikeObject">
      <MemberSignature Language="C#" Value="public static object LikeObject (object Source, object Pattern, Microsoft.VisualBasic.CompareMethod CompareOption);" />
      <MemberSignature Language="ILAsm" Value=".method public static object LikeObject(object Source, object Pattern, valuetype Microsoft.VisualBasic.CompareMethod CompareOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.LikeObject(System.Object,System.Object,Microsoft.VisualBasic.CompareMethod)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LikeObject (Source As Object, Pattern As Object, CompareOption As CompareMethod) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ LikeObject(System::Object ^ Source, System::Object ^ Pattern, Microsoft::VisualBasic::CompareMethod CompareOption);" />
      <MemberSignature Language="F#" Value="static member LikeObject : obj * obj * Microsoft.VisualBasic.CompareMethod -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.LikeObject (Source, Pattern, CompareOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Source" Type="System.Object" />
        <Parameter Name="Pattern" Type="System.Object" />
        <Parameter Name="CompareOption" Type="Microsoft.VisualBasic.CompareMethod" />
      </Parameters>
      <Docs>
        <param name="Source"><span data-ttu-id="4d233-334">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="4d233-334">Required.</span></span> <span data-ttu-id="4d233-335">Cualquier expresión.</span><span class="sxs-lookup"><span data-stu-id="4d233-335">Any expression.</span></span></param>
        <param name="Pattern"><span data-ttu-id="4d233-336">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="4d233-336">Required.</span></span> <span data-ttu-id="4d233-337">Expresión de cadena que se ajuste a las convenciones de coincidencia de modelos descritas en Like (Operador).</span><span class="sxs-lookup"><span data-stu-id="4d233-337">Any string expression conforming to the pattern-matching conventions described in Like Operator.</span></span></param>
        <param name="CompareOption"><span data-ttu-id="4d233-338">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="4d233-338">Required.</span></span> <span data-ttu-id="4d233-339">Valor de <see cref="T:Microsoft.VisualBasic.CompareMethod" /> que especifica que la operación usa texto o una comparación binaria.</span><span class="sxs-lookup"><span data-stu-id="4d233-339">A <see cref="T:Microsoft.VisualBasic.CompareMethod" /> value that specifies that the operation use either text or binary comparison.</span></span></param>
        <summary><span data-ttu-id="4d233-340">Representa el operador <see langword="Like" /> de Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="4d233-340">Represents the Visual Basic <see langword="Like" /> operator.</span></span></summary>
        <returns><span data-ttu-id="4d233-341">Es <see langword="True" /> si la representación de cadena del valor en <paramref name="Source" /> se ajusta al modelo incluido en <paramref name="Pattern" />; de lo contrario, es <see langword="False" />.</span><span class="sxs-lookup"><span data-stu-id="4d233-341"><see langword="True" /> if the string representation of the value in <paramref name="Source" /> satisfies the pattern that is contained in <paramref name="Pattern" />; otherwise, <see langword="False" />.</span></span> <span data-ttu-id="4d233-342">Es <see langword="True" /> si tanto <paramref name="Source" /> como <paramref name="Pattern" /> son <see langword="Nothing" />.</span><span class="sxs-lookup"><span data-stu-id="4d233-342"><see langword="True" /> if both <paramref name="Source" /> and <paramref name="Pattern" /> are <see langword="Nothing" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d233-343">Esta clase es compatible con el compilador de Visual Basic y no está pensada para utilizarse directamente desde el código.</span><span class="sxs-lookup"><span data-stu-id="4d233-343">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/like-operator.md"><span data-ttu-id="4d233-344">Like (Operador)</span><span class="sxs-lookup"><span data-stu-id="4d233-344">Like Operator</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="LikeString">
      <MemberSignature Language="C#" Value="public static bool LikeString (string Source, string Pattern, Microsoft.VisualBasic.CompareMethod CompareOption);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool LikeString(string Source, string Pattern, valuetype Microsoft.VisualBasic.CompareMethod CompareOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.LikeString(System.String,System.String,Microsoft.VisualBasic.CompareMethod)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LikeString (Source As String, Pattern As String, CompareOption As CompareMethod) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool LikeString(System::String ^ Source, System::String ^ Pattern, Microsoft::VisualBasic::CompareMethod CompareOption);" />
      <MemberSignature Language="F#" Value="static member LikeString : string * string * Microsoft.VisualBasic.CompareMethod -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.Operators.LikeString (Source, Pattern, CompareOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Source" Type="System.String" />
        <Parameter Name="Pattern" Type="System.String" />
        <Parameter Name="CompareOption" Type="Microsoft.VisualBasic.CompareMethod" />
      </Parameters>
      <Docs>
        <param name="Source"><span data-ttu-id="4d233-345">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="4d233-345">Required.</span></span> <span data-ttu-id="4d233-346">Cualquier expresión <see langword="String" /> .</span><span class="sxs-lookup"><span data-stu-id="4d233-346">Any <see langword="String" /> expression.</span></span></param>
        <param name="Pattern"><span data-ttu-id="4d233-347">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="4d233-347">Required.</span></span> <span data-ttu-id="4d233-348">Expresión <see langword="String" /> que se ajuste a las convenciones de coincidencia de modelos descritas en Like (Operador).</span><span class="sxs-lookup"><span data-stu-id="4d233-348">Any <see langword="String" /> expression conforming to the pattern-matching conventions described in Like Operator.</span></span></param>
        <param name="CompareOption"><span data-ttu-id="4d233-349">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="4d233-349">Required.</span></span> <span data-ttu-id="4d233-350">Valor de <see cref="T:Microsoft.VisualBasic.CompareMethod" /> que especifica que la operación usa texto o una comparación binaria.</span><span class="sxs-lookup"><span data-stu-id="4d233-350">A <see cref="T:Microsoft.VisualBasic.CompareMethod" /> value that specifies that the operation use either text or binary comparison.</span></span></param>
        <summary><span data-ttu-id="4d233-351">Representa el operador <see langword="Like" /> de Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="4d233-351">Represents the Visual Basic <see langword="Like" /> operator.</span></span></summary>
        <returns><span data-ttu-id="4d233-352"><see langword="True" /> si el valor de <paramref name="Source" /> se ajusta al modelo contenido en <paramref name="Pattern" />; en caso contrario, <see langword="False" />.</span><span class="sxs-lookup"><span data-stu-id="4d233-352"><see langword="True" /> if the value in <paramref name="Source" /> satisfies the pattern that is contained in <paramref name="Pattern" />; otherwise, <see langword="False" />.</span></span> <span data-ttu-id="4d233-353"><see langword="True" /> si tanto <paramref name="Source" /> como <paramref name="Pattern" /> están vacíos.</span><span class="sxs-lookup"><span data-stu-id="4d233-353"><see langword="True" /> if both <paramref name="Source" /> and <paramref name="Pattern" /> are empty.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d233-354">Esta clase es compatible con el compilador de Visual Basic y no está pensada para utilizarse directamente desde el código.</span><span class="sxs-lookup"><span data-stu-id="4d233-354">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/like-operator.md"><span data-ttu-id="4d233-355">Like (Operador)</span><span class="sxs-lookup"><span data-stu-id="4d233-355">Like Operator</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ModObject">
      <MemberSignature Language="C#" Value="public static object ModObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object ModObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ModObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ModObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ModObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member ModObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ModObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="4d233-356">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="4d233-356">Required.</span></span> <span data-ttu-id="4d233-357">Cualquier expresión numérica.</span><span class="sxs-lookup"><span data-stu-id="4d233-357">Any numeric expression.</span></span></param>
        <param name="Right"><span data-ttu-id="4d233-358">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="4d233-358">Required.</span></span> <span data-ttu-id="4d233-359">Cualquier expresión numérica.</span><span class="sxs-lookup"><span data-stu-id="4d233-359">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="4d233-360">Representa el operador <see langword="Mod" /> de Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="4d233-360">Represents the Visual Basic <see langword="Mod" /> operator.</span></span></summary>
        <returns><span data-ttu-id="4d233-361">Resto después de dividir <paramref name="Left" /> entre <paramref name="Right" />.</span><span class="sxs-lookup"><span data-stu-id="4d233-361">The remainder after <paramref name="Left" /> is divided by <paramref name="Right" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d233-362">Esta clase es compatible con el compilador de Visual Basic y no está pensada para utilizarse directamente desde el código.</span><span class="sxs-lookup"><span data-stu-id="4d233-362">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/mod-operator.md"><span data-ttu-id="4d233-363">Mod (Operador, Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="4d233-363">Mod Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MultiplyObject">
      <MemberSignature Language="C#" Value="public static object MultiplyObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object MultiplyObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.MultiplyObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MultiplyObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ MultiplyObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member MultiplyObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.MultiplyObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="4d233-364">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="4d233-364">Required.</span></span> <span data-ttu-id="4d233-365">Cualquier expresión numérica.</span><span class="sxs-lookup"><span data-stu-id="4d233-365">Any numeric expression.</span></span></param>
        <param name="Right"><span data-ttu-id="4d233-366">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="4d233-366">Required.</span></span> <span data-ttu-id="4d233-367">Cualquier expresión numérica.</span><span class="sxs-lookup"><span data-stu-id="4d233-367">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="4d233-368">Representa el operador de multiplicación (\*) de Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="4d233-368">Represents the Visual Basic multiply (\*) operator.</span></span></summary>
        <returns><span data-ttu-id="4d233-369">Producto de <paramref name="Left" /> y <paramref name="Right" />.</span><span class="sxs-lookup"><span data-stu-id="4d233-369">The product of <paramref name="Left" /> and <paramref name="Right" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d233-370">Esta clase es compatible con el compilador de Visual Basic y no está pensada para utilizarse directamente desde el código.</span><span class="sxs-lookup"><span data-stu-id="4d233-370">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/multiplication-operator.md"><span data-ttu-id="4d233-371">\* (Operador, Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="4d233-371">\* Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="NegateObject">
      <MemberSignature Language="C#" Value="public static object NegateObject (object Operand);" />
      <MemberSignature Language="ILAsm" Value=".method public static object NegateObject(object Operand) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.NegateObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NegateObject (Operand As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ NegateObject(System::Object ^ Operand);" />
      <MemberSignature Language="F#" Value="static member NegateObject : obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.NegateObject Operand" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Operand" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Operand"><span data-ttu-id="4d233-372">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="4d233-372">Required.</span></span> <span data-ttu-id="4d233-373">Cualquier expresión numérica.</span><span class="sxs-lookup"><span data-stu-id="4d233-373">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="4d233-374">Representa el operador unario menos (-) de Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="4d233-374">Represents the Visual Basic unary minus (-) operator.</span></span></summary>
        <returns><span data-ttu-id="4d233-375">Valor negativo de <paramref name="Operand" />.</span><span class="sxs-lookup"><span data-stu-id="4d233-375">The negative value of <paramref name="Operand" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d233-376">Esta clase es compatible con el compilador de Visual Basic y no está pensada para utilizarse directamente desde el código.</span><span class="sxs-lookup"><span data-stu-id="4d233-376">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/subtraction-operator.md"><span data-ttu-id="4d233-377">- (Operador, Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="4d233-377">- Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="NotObject">
      <MemberSignature Language="C#" Value="public static object NotObject (object Operand);" />
      <MemberSignature Language="ILAsm" Value=".method public static object NotObject(object Operand) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.NotObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NotObject (Operand As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ NotObject(System::Object ^ Operand);" />
      <MemberSignature Language="F#" Value="static member NotObject : obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.NotObject Operand" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Operand" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Operand"><span data-ttu-id="4d233-378">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="4d233-378">Required.</span></span> <span data-ttu-id="4d233-379">Cualquier expresión numérica o de tipo <see langword="Boolean" />.</span><span class="sxs-lookup"><span data-stu-id="4d233-379">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <summary><span data-ttu-id="4d233-380">Representa el operador <see langword="Not" /> de Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="4d233-380">Represents the Visual Basic <see langword="Not" /> operator.</span></span></summary>
        <returns><span data-ttu-id="4d233-381">Para las operaciones <see langword="Boolean" />, es <see langword="False" /> si <paramref name="Operand" /> es <see langword="True" />; de lo contrario, es <see langword="True" />.</span><span class="sxs-lookup"><span data-stu-id="4d233-381">For <see langword="Boolean" /> operations, <see langword="False" /> if <paramref name="Operand" /> is <see langword="True" />; otherwise, <see langword="True" />.</span></span> <span data-ttu-id="4d233-382">Para las operaciones bit a bit, es 1 si <paramref name="Operand" /> es 0; de lo contrario, es 0.</span><span class="sxs-lookup"><span data-stu-id="4d233-382">For bitwise operations, 1 if <paramref name="Operand" /> is 0; otherwise, 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d233-383">Esta clase es compatible con el compilador de Visual Basic y no está pensada para utilizarse directamente desde el código.</span><span class="sxs-lookup"><span data-stu-id="4d233-383">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/not-operator.md"><span data-ttu-id="4d233-384">Not (Operador, Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="4d233-384">Not Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OrObject">
      <MemberSignature Language="C#" Value="public static object OrObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object OrObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.OrObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OrObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ OrObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member OrObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.OrObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="4d233-385">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="4d233-385">Required.</span></span> <span data-ttu-id="4d233-386">Cualquier expresión numérica o de tipo <see langword="Boolean" />.</span><span class="sxs-lookup"><span data-stu-id="4d233-386">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <param name="Right"><span data-ttu-id="4d233-387">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="4d233-387">Required.</span></span> <span data-ttu-id="4d233-388">Cualquier expresión numérica o de tipo <see langword="Boolean" />.</span><span class="sxs-lookup"><span data-stu-id="4d233-388">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <summary><span data-ttu-id="4d233-389">Representa el operador <see langword="Or" /> de Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="4d233-389">Represents the Visual Basic <see langword="Or" /> operator.</span></span></summary>
        <returns><span data-ttu-id="4d233-390">Para las operaciones <see langword="Boolean" />, es <see langword="False" /> si <paramref name="Left" /> y <paramref name="Right" /> se evalúan como <see langword="False" />; de lo contrario, es <see langword="True" />.</span><span class="sxs-lookup"><span data-stu-id="4d233-390">For <see langword="Boolean" /> operations, <see langword="False" /> if both <paramref name="Left" /> and <paramref name="Right" /> evaluate to <see langword="False" />; otherwise, <see langword="True" />.</span></span> <span data-ttu-id="4d233-391">Para las operaciones bit a bit, es 0 si <paramref name="Left" /> y <paramref name="Right" /> se evalúan como 0; de lo contrario, es 1.</span><span class="sxs-lookup"><span data-stu-id="4d233-391">For bitwise operations, 0 if both <paramref name="Left" /> and <paramref name="Right" /> evaluate to 0; otherwise, 1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d233-392">Esta clase es compatible con el compilador de Visual Basic y no está pensada para utilizarse directamente desde el código.</span><span class="sxs-lookup"><span data-stu-id="4d233-392">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/or-operator.md"><span data-ttu-id="4d233-393">Or (Operador, Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="4d233-393">Or Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="PlusObject">
      <MemberSignature Language="C#" Value="public static object PlusObject (object Operand);" />
      <MemberSignature Language="ILAsm" Value=".method public static object PlusObject(object Operand) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.PlusObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PlusObject (Operand As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ PlusObject(System::Object ^ Operand);" />
      <MemberSignature Language="F#" Value="static member PlusObject : obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.PlusObject Operand" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Operand" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Operand"><span data-ttu-id="4d233-394">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="4d233-394">Required.</span></span> <span data-ttu-id="4d233-395">Cualquier expresión numérica.</span><span class="sxs-lookup"><span data-stu-id="4d233-395">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="4d233-396">Representa el operador unario más (+) de Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="4d233-396">Represents the Visual Basic unary plus (+) operator.</span></span></summary>
        <returns><span data-ttu-id="4d233-397">El valor de <paramref name="Operand" />.</span><span class="sxs-lookup"><span data-stu-id="4d233-397">The value of <paramref name="Operand" />.</span></span> <span data-ttu-id="4d233-398">(El signo de <paramref name="Operand" /> no cambia.)</span><span class="sxs-lookup"><span data-stu-id="4d233-398">(The sign of the <paramref name="Operand" /> is unchanged.)</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d233-399">Esta clase es compatible con el compilador de Visual Basic y no está pensada para utilizarse directamente desde el código.</span><span class="sxs-lookup"><span data-stu-id="4d233-399">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/addition-operator.md"><span data-ttu-id="4d233-400">+ (Operador, Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="4d233-400">+ Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="RightShiftObject">
      <MemberSignature Language="C#" Value="public static object RightShiftObject (object Operand, object Amount);" />
      <MemberSignature Language="ILAsm" Value=".method public static object RightShiftObject(object Operand, object Amount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.RightShiftObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RightShiftObject (Operand As Object, Amount As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ RightShiftObject(System::Object ^ Operand, System::Object ^ Amount);" />
      <MemberSignature Language="F#" Value="static member RightShiftObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.RightShiftObject (Operand, Amount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Operand" Type="System.Object" />
        <Parameter Name="Amount" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Operand"><span data-ttu-id="4d233-401">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="4d233-401">Required.</span></span> <span data-ttu-id="4d233-402">Expresión numérica integral.</span><span class="sxs-lookup"><span data-stu-id="4d233-402">Integral numeric expression.</span></span> <span data-ttu-id="4d233-403">Modelo de bits que se va a desplazar.</span><span class="sxs-lookup"><span data-stu-id="4d233-403">The bit pattern to be shifted.</span></span> <span data-ttu-id="4d233-404">El tipo de datos debe ser un tipo entero (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" /> o <see langword="ULong" />).</span><span class="sxs-lookup"><span data-stu-id="4d233-404">The data type must be an integral type (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" />, or <see langword="ULong" />).</span></span></param>
        <param name="Amount"><span data-ttu-id="4d233-405">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="4d233-405">Required.</span></span> <span data-ttu-id="4d233-406">Expresión numérica.</span><span class="sxs-lookup"><span data-stu-id="4d233-406">Numeric expression.</span></span> <span data-ttu-id="4d233-407">Número de bits que se va a desplazar el modelo de bits.</span><span class="sxs-lookup"><span data-stu-id="4d233-407">The number of bits to shift the bit pattern.</span></span> <span data-ttu-id="4d233-408">El tipo de datos debe ser <see langword="Integer" /> o ampliarse a <see langword="Integer" />.</span><span class="sxs-lookup"><span data-stu-id="4d233-408">The data type must be <see langword="Integer" /> or widen to <see langword="Integer" />.</span></span></param>
        <summary><span data-ttu-id="4d233-409">Representa el operador de desplazamiento aritmético a la derecha (&gt;&gt;) de Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="4d233-409">Represents the Visual Basic arithmetic right shift (&gt;&gt;) operator.</span></span></summary>
        <returns><span data-ttu-id="4d233-410">Valor numérico integral.</span><span class="sxs-lookup"><span data-stu-id="4d233-410">An integral numeric value.</span></span> <span data-ttu-id="4d233-411">Resultado de desplazar el modelo de bits.</span><span class="sxs-lookup"><span data-stu-id="4d233-411">The result of shifting the bit pattern.</span></span> <span data-ttu-id="4d233-412">El tipo de datos es el mismo que el de <paramref name="Operand" />.</span><span class="sxs-lookup"><span data-stu-id="4d233-412">The data type is the same as that of <paramref name="Operand" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d233-413">Esta clase es compatible con el compilador de Visual Basic y no está pensada para utilizarse directamente desde el código.</span><span class="sxs-lookup"><span data-stu-id="4d233-413">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/right-shift-operator.md"><span data-ttu-id="4d233-414">&gt;&gt; Operador (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="4d233-414">&gt;&gt; Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SubtractObject">
      <MemberSignature Language="C#" Value="public static object SubtractObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object SubtractObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.SubtractObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SubtractObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ SubtractObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member SubtractObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.SubtractObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="4d233-415">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="4d233-415">Required.</span></span> <span data-ttu-id="4d233-416">Cualquier expresión numérica.</span><span class="sxs-lookup"><span data-stu-id="4d233-416">Any numeric expression.</span></span></param>
        <param name="Right"><span data-ttu-id="4d233-417">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="4d233-417">Required.</span></span> <span data-ttu-id="4d233-418">Cualquier expresión numérica.</span><span class="sxs-lookup"><span data-stu-id="4d233-418">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="4d233-419">Representa el operador de resta (-) de Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="4d233-419">Represents the Visual Basic subtraction (-) operator.</span></span></summary>
        <returns><span data-ttu-id="4d233-420">Diferencia entre <paramref name="Left" /> y <paramref name="Right" />.</span><span class="sxs-lookup"><span data-stu-id="4d233-420">The difference between <paramref name="Left" /> and <paramref name="Right" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d233-421">Esta clase es compatible con el compilador de Visual Basic y no está pensada para utilizarse directamente desde el código.</span><span class="sxs-lookup"><span data-stu-id="4d233-421">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/subtraction-operator.md"><span data-ttu-id="4d233-422">- (Operador, Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="4d233-422">- Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="XorObject">
      <MemberSignature Language="C#" Value="public static object XorObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object XorObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.XorObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function XorObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ XorObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member XorObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.XorObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="4d233-423">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="4d233-423">Required.</span></span> <span data-ttu-id="4d233-424">Cualquier expresión numérica o de tipo <see langword="Boolean" />.</span><span class="sxs-lookup"><span data-stu-id="4d233-424">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <param name="Right"><span data-ttu-id="4d233-425">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="4d233-425">Required.</span></span> <span data-ttu-id="4d233-426">Cualquier expresión numérica o de tipo <see langword="Boolean" />.</span><span class="sxs-lookup"><span data-stu-id="4d233-426">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <summary><span data-ttu-id="4d233-427">Representa el operador <see langword="Xor" /> de Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="4d233-427">Represents the Visual Basic <see langword="Xor" /> operator.</span></span></summary>
        <returns><span data-ttu-id="4d233-428">Valor de tipo <see langword="Boolean" /> o valor numérico.</span><span class="sxs-lookup"><span data-stu-id="4d233-428">A <see langword="Boolean" /> or numeric value.</span></span> <span data-ttu-id="4d233-429">Para una comparación <see langword="Boolean" />, el valor devuelto es la exclusión lógica (disyunción lógica exclusiva) de dos valores <see langword="Boolean" />.</span><span class="sxs-lookup"><span data-stu-id="4d233-429">For a <see langword="Boolean" /> comparison, the return value is the logical exclusion (exclusive logical disjunction) of two <see langword="Boolean" /> values.</span></span> <span data-ttu-id="4d233-430">Para las operaciones (numéricas) bit a bit, el valor devuelto es un valor numérico que representa la exclusión bit a bit (disyunción bit a bit exclusiva) de dos modelos de bits numéricos.</span><span class="sxs-lookup"><span data-stu-id="4d233-430">For bitwise (numeric) operations, the return value is a numeric value that represents the bitwise exclusion (exclusive bitwise disjunction) of two numeric bit patterns.</span></span> <span data-ttu-id="4d233-431">Para obtener más información, vea <see href="https://docs.microsoft.com/dotnet/visual-basic/language-reference/operators/xor-operator">Operador Xor</see>.</span><span class="sxs-lookup"><span data-stu-id="4d233-431">For more information, see <see href="https://docs.microsoft.com/dotnet/visual-basic/language-reference/operators/xor-operator">Xor Operator</see>.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d233-432">Esta clase es compatible con el compilador de Visual Basic y no está pensada para utilizarse directamente desde el código.</span><span class="sxs-lookup"><span data-stu-id="4d233-432">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/xor-operator.md"><span data-ttu-id="4d233-433">Xor (Operador, Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="4d233-433">Xor Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
<Type Name="StringType" FullName="Microsoft.VisualBasic.CompilerServices.StringType">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b3d69e7067423a53d11f2d33040ffbeb94402151" /><Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="11/20/2018" /><Meta Name="ms.locfileid" Value="52214383" /></Metadata><TypeSignature Language="C#" Value="public sealed class StringType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed StringType extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.CompilerServices.StringType" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class StringType" />
  <TypeSignature Language="C++ CLI" Value="public ref class StringType sealed" />
  <TypeSignature Language="F#" Value="type StringType = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>Microsoft.VisualBasic.CompilerServices.StandardModule</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="83075-101">Esta clase ha quedado obsoleta en Visual Basic 2005.</span><span class="sxs-lookup"><span data-stu-id="83075-101">This class has been deprecated as of Visual Basic 2005.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83075-102">Esta clase proporciona métodos para manipular los datos que representan potencialmente un `String` valor.</span><span class="sxs-lookup"><span data-stu-id="83075-102">This class provides methods for manipulating data that potentially represents a `String` value.</span></span>  
  
 ]]></format>
    </remarks>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <Member MemberName="FromBoolean">
      <MemberSignature Language="C#" Value="public static string FromBoolean (bool Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static string FromBoolean(bool Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.StringType.FromBoolean(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromBoolean (Value As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ FromBoolean(bool Value);" />
      <MemberSignature Language="F#" Value="static member FromBoolean : bool -&gt; string" Usage="Microsoft.VisualBasic.CompilerServices.StringType.FromBoolean Value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Value"><span data-ttu-id="83075-103">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="83075-103">Required.</span></span> <span data-ttu-id="83075-104">Valor <see langword="Boolean" /> que se va a convertir a un valor <see langword="String" />.</span><span class="sxs-lookup"><span data-stu-id="83075-104"><see langword="Boolean" /> to convert to a <see langword="String" /> value.</span></span></param>
        <summary><span data-ttu-id="83075-105">Devuelve un valor de tipo <see langword="String" /> que corresponde al valor de tipo <see langword="Boolean" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="83075-105">Returns a <see langword="String" /> value that corresponds to the specified <see langword="Boolean" />.</span></span></summary>
        <returns><span data-ttu-id="83075-106">Valor de tipo <see langword="String" /> correspondiente a <paramref name="Value" />.</span><span class="sxs-lookup"><span data-stu-id="83075-106">The <see langword="String" /> value corresponding to <paramref name="Value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83075-107">Esta clase es compatible con el compilador de Visual Basic y no está pensada para utilizarse directamente desde el código.</span><span class="sxs-lookup"><span data-stu-id="83075-107">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="FromByte">
      <MemberSignature Language="C#" Value="public static string FromByte (byte Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static string FromByte(unsigned int8 Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.StringType.FromByte(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromByte (Value As Byte) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ FromByte(System::Byte Value);" />
      <MemberSignature Language="F#" Value="static member FromByte : byte -&gt; string" Usage="Microsoft.VisualBasic.CompilerServices.StringType.FromByte Value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="Value"><span data-ttu-id="83075-108">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="83075-108">Required.</span></span> <span data-ttu-id="83075-109">Valor <see langword="Byte" /> que se va a convertir a un valor <see langword="String" />.</span><span class="sxs-lookup"><span data-stu-id="83075-109"><see langword="Byte" /> to convert to a <see langword="String" /> value.</span></span></param>
        <summary><span data-ttu-id="83075-110">Devuelve un valor de tipo <see langword="String" /> que corresponde al valor de tipo <see langword="Byte" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="83075-110">Returns a <see langword="String" /> value that corresponds to the specified <see langword="Byte" />.</span></span></summary>
        <returns><span data-ttu-id="83075-111">Valor de tipo <see langword="String" /> correspondiente a <paramref name="Value" />.</span><span class="sxs-lookup"><span data-stu-id="83075-111">The <see langword="String" /> value corresponding to <paramref name="Value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83075-112">Esta clase es compatible con el compilador de Visual Basic y no está pensada para utilizarse directamente desde el código.</span><span class="sxs-lookup"><span data-stu-id="83075-112">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="FromChar">
      <MemberSignature Language="C#" Value="public static string FromChar (char Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static string FromChar(char Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.StringType.FromChar(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromChar (Value As Char) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ FromChar(char Value);" />
      <MemberSignature Language="F#" Value="static member FromChar : char -&gt; string" Usage="Microsoft.VisualBasic.CompilerServices.StringType.FromChar Value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="Value"><span data-ttu-id="83075-113">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="83075-113">Required.</span></span> <span data-ttu-id="83075-114">Valor <see langword="Char" /> que se va a convertir a un valor <see langword="String" />.</span><span class="sxs-lookup"><span data-stu-id="83075-114"><see langword="Char" /> to convert to a <see langword="String" /> value.</span></span></param>
        <summary><span data-ttu-id="83075-115">Devuelve un valor de tipo <see langword="String" /> que corresponde al valor de tipo <see langword="Char" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="83075-115">Returns a <see langword="String" /> value that corresponds to the specified <see langword="Char" />.</span></span></summary>
        <returns><span data-ttu-id="83075-116">Valor de tipo <see langword="String" /> correspondiente a <paramref name="Value" />.</span><span class="sxs-lookup"><span data-stu-id="83075-116">The <see langword="String" /> value corresponding to <paramref name="Value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83075-117">Esta clase es compatible con el compilador de Visual Basic y no está pensada para utilizarse directamente desde el código.</span><span class="sxs-lookup"><span data-stu-id="83075-117">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="FromDate">
      <MemberSignature Language="C#" Value="public static string FromDate (DateTime Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static string FromDate(valuetype System.DateTime Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.StringType.FromDate(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromDate (Value As DateTime) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ FromDate(DateTime Value);" />
      <MemberSignature Language="F#" Value="static member FromDate : DateTime -&gt; string" Usage="Microsoft.VisualBasic.CompilerServices.StringType.FromDate Value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Value" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="Value"><span data-ttu-id="83075-118">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="83075-118">Required.</span></span> <span data-ttu-id="83075-119">Fecha que se va a convertir en un valor de tipo <see langword="String" />.</span><span class="sxs-lookup"><span data-stu-id="83075-119">Date to convert to a <see langword="String" /> value.</span></span></param>
        <summary><span data-ttu-id="83075-120">Devuelve un valor de tipo <see langword="String" /> que corresponde a la fecha especificada.</span><span class="sxs-lookup"><span data-stu-id="83075-120">Returns a <see langword="String" /> value that corresponds to the specified date.</span></span></summary>
        <returns><span data-ttu-id="83075-121">Valor de tipo <see langword="String" /> correspondiente a <paramref name="Value" />.</span><span class="sxs-lookup"><span data-stu-id="83075-121">The <see langword="String" /> value corresponding to <paramref name="Value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83075-122">Esta clase es compatible con el compilador de Visual Basic y no está pensada para utilizarse directamente desde el código.</span><span class="sxs-lookup"><span data-stu-id="83075-122">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <MemberGroup MemberName="FromDecimal">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="83075-123">Devuelve un valor de tipo <see langword="String" /> que se corresponde con el valor <see langword="Decimal" /> especificado y la información de formato numérico opcional.</span><span class="sxs-lookup"><span data-stu-id="83075-123">Returns a <see langword="String" /> value that corresponds to a specified <see langword="Decimal" /> and optional number format information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83075-124">Esta clase es compatible con el compilador de Visual Basic y no está pensada para utilizarse directamente desde el código.</span><span class="sxs-lookup"><span data-stu-id="83075-124">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="FromDecimal">
      <MemberSignature Language="C#" Value="public static string FromDecimal (decimal Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static string FromDecimal(valuetype System.Decimal Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.StringType.FromDecimal(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromDecimal (Value As Decimal) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ FromDecimal(System::Decimal Value);" />
      <MemberSignature Language="F#" Value="static member FromDecimal : decimal -&gt; string" Usage="Microsoft.VisualBasic.CompilerServices.StringType.FromDecimal Value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="Value"><span data-ttu-id="83075-125">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="83075-125">Required.</span></span> <span data-ttu-id="83075-126">Valor <see langword="Decimal" /> que se va a convertir a un valor <see langword="String" />.</span><span class="sxs-lookup"><span data-stu-id="83075-126"><see langword="Decimal" /> to convert to a <see langword="String" /> value.</span></span></param>
        <summary><span data-ttu-id="83075-127">Devuelve un valor de tipo <see langword="String" /> que corresponde al valor de tipo <see langword="Decimal" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="83075-127">Returns a <see langword="String" /> value that corresponds to the specified <see langword="Decimal" />.</span></span></summary>
        <returns><span data-ttu-id="83075-128">Valor de tipo <see langword="String" /> correspondiente a <paramref name="Value" />.</span><span class="sxs-lookup"><span data-stu-id="83075-128">The <see langword="String" /> value corresponding to <paramref name="Value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83075-129">Esta clase es compatible con el compilador de Visual Basic y no está pensada para utilizarse directamente desde el código.</span><span class="sxs-lookup"><span data-stu-id="83075-129">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="FromDecimal">
      <MemberSignature Language="C#" Value="public static string FromDecimal (decimal Value, System.Globalization.NumberFormatInfo NumberFormat);" />
      <MemberSignature Language="ILAsm" Value=".method public static string FromDecimal(valuetype System.Decimal Value, class System.Globalization.NumberFormatInfo NumberFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.StringType.FromDecimal(System.Decimal,System.Globalization.NumberFormatInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromDecimal (Value As Decimal, NumberFormat As NumberFormatInfo) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ FromDecimal(System::Decimal Value, System::Globalization::NumberFormatInfo ^ NumberFormat);" />
      <MemberSignature Language="F#" Value="static member FromDecimal : decimal * System.Globalization.NumberFormatInfo -&gt; string" Usage="Microsoft.VisualBasic.CompilerServices.StringType.FromDecimal (Value, NumberFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Value" Type="System.Decimal" />
        <Parameter Name="NumberFormat" Type="System.Globalization.NumberFormatInfo" />
      </Parameters>
      <Docs>
        <param name="Value"><span data-ttu-id="83075-130">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="83075-130">Required.</span></span> <span data-ttu-id="83075-131">Valor <see langword="Decimal" /> que se va a convertir a un valor <see langword="String" />.</span><span class="sxs-lookup"><span data-stu-id="83075-131"><see langword="Decimal" /> to convert to a <see langword="String" /> value.</span></span></param>
        <param name="NumberFormat"><span data-ttu-id="83075-132">Objeto <see cref="T:System.Globalization.NumberFormatInfo" /> que define cómo se aplica formato y se muestran los valores numéricos, dependiendo de la referencia cultural.</span><span class="sxs-lookup"><span data-stu-id="83075-132">A <see cref="T:System.Globalization.NumberFormatInfo" /> object that defines how numeric values are formatted and displayed, depending on the culture.</span></span></param>
        <summary><span data-ttu-id="83075-133">Devuelve un valor de tipo <see langword="String" /> que se corresponde con el valor <see langword="Decimal" /> especificado y la información de formato numérico.</span><span class="sxs-lookup"><span data-stu-id="83075-133">Returns a <see langword="String" /> value that corresponds to a specified <see langword="Decimal" /> and number format information.</span></span></summary>
        <returns><span data-ttu-id="83075-134">Valor de tipo <see langword="String" /> correspondiente a <paramref name="Value" />.</span><span class="sxs-lookup"><span data-stu-id="83075-134">The <see langword="String" /> value corresponding to <paramref name="Value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83075-135">Esta clase es compatible con el compilador de Visual Basic y no está pensada para utilizarse directamente desde el código.</span><span class="sxs-lookup"><span data-stu-id="83075-135">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <MemberGroup MemberName="FromDouble">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="83075-136">Devuelve un valor de tipo <see langword="String" /> que se corresponde con el valor <see langword="Double" /> especificado y la información de formato numérico opcional.</span><span class="sxs-lookup"><span data-stu-id="83075-136">Returns a <see langword="String" /> value that corresponds to a specified <see langword="Double" /> and optional number format information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83075-137">Esta clase es compatible con el compilador de Visual Basic y no está pensada para utilizarse directamente desde el código.</span><span class="sxs-lookup"><span data-stu-id="83075-137">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="FromDouble">
      <MemberSignature Language="C#" Value="public static string FromDouble (double Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static string FromDouble(float64 Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.StringType.FromDouble(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromDouble (Value As Double) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ FromDouble(double Value);" />
      <MemberSignature Language="F#" Value="static member FromDouble : double -&gt; string" Usage="Microsoft.VisualBasic.CompilerServices.StringType.FromDouble Value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Value"><span data-ttu-id="83075-138">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="83075-138">Required.</span></span> <span data-ttu-id="83075-139">Valor <see langword="Double" /> que se va a convertir a un valor <see langword="String" />.</span><span class="sxs-lookup"><span data-stu-id="83075-139"><see langword="Double" /> to convert to a <see langword="String" /> value.</span></span></param>
        <summary><span data-ttu-id="83075-140">Devuelve un valor de tipo <see langword="String" /> que corresponde al valor de tipo <see langword="Double" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="83075-140">Returns a <see langword="String" /> value that corresponds to a specified <see langword="Double" />.</span></span></summary>
        <returns><span data-ttu-id="83075-141">Valor de tipo <see langword="String" /> correspondiente a <paramref name="Value" />.</span><span class="sxs-lookup"><span data-stu-id="83075-141">The <see langword="String" /> value corresponding to <paramref name="Value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83075-142">Esta clase es compatible con el compilador de Visual Basic y no está pensada para utilizarse directamente desde el código.</span><span class="sxs-lookup"><span data-stu-id="83075-142">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="FromDouble">
      <MemberSignature Language="C#" Value="public static string FromDouble (double Value, System.Globalization.NumberFormatInfo NumberFormat);" />
      <MemberSignature Language="ILAsm" Value=".method public static string FromDouble(float64 Value, class System.Globalization.NumberFormatInfo NumberFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.StringType.FromDouble(System.Double,System.Globalization.NumberFormatInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromDouble (Value As Double, NumberFormat As NumberFormatInfo) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ FromDouble(double Value, System::Globalization::NumberFormatInfo ^ NumberFormat);" />
      <MemberSignature Language="F#" Value="static member FromDouble : double * System.Globalization.NumberFormatInfo -&gt; string" Usage="Microsoft.VisualBasic.CompilerServices.StringType.FromDouble (Value, NumberFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Value" Type="System.Double" />
        <Parameter Name="NumberFormat" Type="System.Globalization.NumberFormatInfo" />
      </Parameters>
      <Docs>
        <param name="Value"><span data-ttu-id="83075-143">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="83075-143">Required.</span></span> <span data-ttu-id="83075-144">Valor <see langword="Double" /> que se va a convertir a un valor <see langword="String" />.</span><span class="sxs-lookup"><span data-stu-id="83075-144"><see langword="Double" /> to convert to a <see langword="String" /> value.</span></span></param>
        <param name="NumberFormat"><span data-ttu-id="83075-145">Objeto <see cref="T:System.Globalization.NumberFormatInfo" /> que define cómo se aplica formato y se muestran los valores numéricos, dependiendo de la referencia cultural.</span><span class="sxs-lookup"><span data-stu-id="83075-145">A <see cref="T:System.Globalization.NumberFormatInfo" /> object that defines how numeric values are formatted and displayed, depending on the culture.</span></span></param>
        <summary><span data-ttu-id="83075-146">Devuelve un valor de tipo <see langword="String" /> que se corresponde con el valor <see langword="Double" /> especificado y la información de formato numérico.</span><span class="sxs-lookup"><span data-stu-id="83075-146">Returns a <see langword="String" /> value that corresponds to a specified <see langword="Double" /> and number format information.</span></span></summary>
        <returns><span data-ttu-id="83075-147">Valor de tipo <see langword="String" /> correspondiente a <paramref name="Value" />.</span><span class="sxs-lookup"><span data-stu-id="83075-147">The <see langword="String" /> value corresponding to <paramref name="Value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83075-148">Esta clase es compatible con el compilador de Visual Basic y no está pensada para utilizarse directamente desde el código.</span><span class="sxs-lookup"><span data-stu-id="83075-148">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="FromInteger">
      <MemberSignature Language="C#" Value="public static string FromInteger (int Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static string FromInteger(int32 Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.StringType.FromInteger(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromInteger (Value As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ FromInteger(int Value);" />
      <MemberSignature Language="F#" Value="static member FromInteger : int -&gt; string" Usage="Microsoft.VisualBasic.CompilerServices.StringType.FromInteger Value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Value"><span data-ttu-id="83075-149">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="83075-149">Required.</span></span> <span data-ttu-id="83075-150">Valor <see langword="Integer" /> que se va a convertir a un valor <see langword="String" />.</span><span class="sxs-lookup"><span data-stu-id="83075-150"><see langword="Integer" /> to convert to a <see langword="String" /> value.</span></span></param>
        <summary><span data-ttu-id="83075-151">Devuelve un valor de tipo <see langword="String" /> que corresponde al valor de tipo <see langword="Integer" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="83075-151">Returns a <see langword="String" /> value that corresponds to a specified <see langword="Integer" />.</span></span></summary>
        <returns><span data-ttu-id="83075-152">Valor de tipo <see langword="String" /> correspondiente a <paramref name="Value" />.</span><span class="sxs-lookup"><span data-stu-id="83075-152">The <see langword="String" /> value corresponding to <paramref name="Value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83075-153">Esta clase es compatible con el compilador de Visual Basic y no está pensada para utilizarse directamente desde el código.</span><span class="sxs-lookup"><span data-stu-id="83075-153">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="FromLong">
      <MemberSignature Language="C#" Value="public static string FromLong (long Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static string FromLong(int64 Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.StringType.FromLong(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromLong (Value As Long) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ FromLong(long Value);" />
      <MemberSignature Language="F#" Value="static member FromLong : int64 -&gt; string" Usage="Microsoft.VisualBasic.CompilerServices.StringType.FromLong Value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="Value"><span data-ttu-id="83075-154">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="83075-154">Required.</span></span> <span data-ttu-id="83075-155">Valor <see langword="Int64" /> que se va a convertir a un valor <see langword="String" />.</span><span class="sxs-lookup"><span data-stu-id="83075-155"><see langword="Int64" /> to convert to a <see langword="String" /> value.</span></span></param>
        <summary><span data-ttu-id="83075-156">Devuelve un valor de tipo <see langword="String" /> que corresponde al valor de tipo <see langword="Int64" /> especificado (entero de 64 bits).</span><span class="sxs-lookup"><span data-stu-id="83075-156">Returns a <see langword="String" /> value that corresponds to a specified <see langword="Int64" /> (64-bit integer).</span></span></summary>
        <returns><span data-ttu-id="83075-157">Valor de tipo <see langword="String" /> correspondiente a <paramref name="Value" />.</span><span class="sxs-lookup"><span data-stu-id="83075-157">The <see langword="String" /> value corresponding to <paramref name="Value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83075-158">Esta clase es compatible con el compilador de Visual Basic y no está pensada para utilizarse directamente desde el código.</span><span class="sxs-lookup"><span data-stu-id="83075-158">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="FromObject">
      <MemberSignature Language="C#" Value="public static string FromObject (object Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static string FromObject(object Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.StringType.FromObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromObject (Value As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ FromObject(System::Object ^ Value);" />
      <MemberSignature Language="F#" Value="static member FromObject : obj -&gt; string" Usage="Microsoft.VisualBasic.CompilerServices.StringType.FromObject Value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Value"><span data-ttu-id="83075-159">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="83075-159">Required.</span></span> <span data-ttu-id="83075-160">Objeto que se va a convertir en un valor <see langword="String" />.</span><span class="sxs-lookup"><span data-stu-id="83075-160">Object to convert to a <see langword="String" /> value.</span></span></param>
        <summary><span data-ttu-id="83075-161">Devuelve un valor de tipo <see langword="String" /> que corresponde al objeto especificado.</span><span class="sxs-lookup"><span data-stu-id="83075-161">Returns a <see langword="String" /> value that corresponds to the specified object.</span></span></summary>
        <returns><span data-ttu-id="83075-162">Valor de tipo <see langword="String" /> correspondiente a <paramref name="Value" />.</span><span class="sxs-lookup"><span data-stu-id="83075-162">The <see langword="String" /> value corresponding to <paramref name="Value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83075-163">Esta clase es compatible con el compilador de Visual Basic y no está pensada para utilizarse directamente desde el código.</span><span class="sxs-lookup"><span data-stu-id="83075-163">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="FromShort">
      <MemberSignature Language="C#" Value="public static string FromShort (short Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static string FromShort(int16 Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.StringType.FromShort(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromShort (Value As Short) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ FromShort(short Value);" />
      <MemberSignature Language="F#" Value="static member FromShort : int16 -&gt; string" Usage="Microsoft.VisualBasic.CompilerServices.StringType.FromShort Value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="Value"><span data-ttu-id="83075-164">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="83075-164">Required.</span></span> <span data-ttu-id="83075-165">Valor <see langword="Int616" /> que se va a convertir a un valor <see langword="String" />.</span><span class="sxs-lookup"><span data-stu-id="83075-165"><see langword="Int616" /> to convert to a <see langword="String" /> value.</span></span></param>
        <summary><span data-ttu-id="83075-166">Devuelve un valor de tipo <see langword="String" /> que corresponde al valor de tipo <see langword="Int16" /> especificado (entero de 16 bits).</span><span class="sxs-lookup"><span data-stu-id="83075-166">Returns a <see langword="String" /> value that corresponds to a specified <see langword="Int16" /> (16-bit integer).</span></span></summary>
        <returns><span data-ttu-id="83075-167">Valor de tipo <see langword="String" /> correspondiente a <paramref name="Value" />.</span><span class="sxs-lookup"><span data-stu-id="83075-167">The <see langword="String" /> value corresponding to <paramref name="Value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83075-168">Esta clase es compatible con el compilador de Visual Basic y no está pensada para utilizarse directamente desde el código.</span><span class="sxs-lookup"><span data-stu-id="83075-168">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <MemberGroup MemberName="FromSingle">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="83075-169">Devuelve un valor de tipo <see langword="String" /> que se corresponde con el valor <see langword="Single" /> especificado y la información de formato numérico opcional.</span><span class="sxs-lookup"><span data-stu-id="83075-169">Returns a <see langword="String" /> value that corresponds to a specified <see langword="Single" /> and optional number format information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83075-170">Esta clase es compatible con el compilador de Visual Basic y no está pensada para utilizarse directamente desde el código.</span><span class="sxs-lookup"><span data-stu-id="83075-170">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="FromSingle">
      <MemberSignature Language="C#" Value="public static string FromSingle (float Value);" />
      <MemberSignature Language="ILAsm" Value=".method public static string FromSingle(float32 Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.StringType.FromSingle(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromSingle (Value As Single) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ FromSingle(float Value);" />
      <MemberSignature Language="F#" Value="static member FromSingle : single -&gt; string" Usage="Microsoft.VisualBasic.CompilerServices.StringType.FromSingle Value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="Value"><span data-ttu-id="83075-171">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="83075-171">Required.</span></span> <span data-ttu-id="83075-172">Valor <see langword="Single" /> que se va a convertir a un valor <see langword="String" />.</span><span class="sxs-lookup"><span data-stu-id="83075-172"><see langword="Single" /> to convert to a <see langword="String" /> value.</span></span></param>
        <summary><span data-ttu-id="83075-173">Devuelve un valor de tipo <see langword="String" /> que corresponde al valor de tipo <see langword="Single" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="83075-173">Returns a <see langword="String" /> value that corresponds to a specified <see langword="Single" />.</span></span></summary>
        <returns><span data-ttu-id="83075-174">Valor de tipo <see langword="String" /> correspondiente a <paramref name="Value" />.</span><span class="sxs-lookup"><span data-stu-id="83075-174">The <see langword="String" /> value corresponding to <paramref name="Value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83075-175">Esta clase es compatible con el compilador de Visual Basic y no está pensada para utilizarse directamente desde el código.</span><span class="sxs-lookup"><span data-stu-id="83075-175">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="FromSingle">
      <MemberSignature Language="C#" Value="public static string FromSingle (float Value, System.Globalization.NumberFormatInfo NumberFormat);" />
      <MemberSignature Language="ILAsm" Value=".method public static string FromSingle(float32 Value, class System.Globalization.NumberFormatInfo NumberFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.StringType.FromSingle(System.Single,System.Globalization.NumberFormatInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromSingle (Value As Single, NumberFormat As NumberFormatInfo) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ FromSingle(float Value, System::Globalization::NumberFormatInfo ^ NumberFormat);" />
      <MemberSignature Language="F#" Value="static member FromSingle : single * System.Globalization.NumberFormatInfo -&gt; string" Usage="Microsoft.VisualBasic.CompilerServices.StringType.FromSingle (Value, NumberFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Value" Type="System.Single" />
        <Parameter Name="NumberFormat" Type="System.Globalization.NumberFormatInfo" />
      </Parameters>
      <Docs>
        <param name="Value"><span data-ttu-id="83075-176">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="83075-176">Required.</span></span> <span data-ttu-id="83075-177">Valor <see langword="Sinble" /> que se va a convertir a un valor <see langword="String" />.</span><span class="sxs-lookup"><span data-stu-id="83075-177"><see langword="Sinble" /> to convert to a <see langword="String" /> value.</span></span></param>
        <param name="NumberFormat"><span data-ttu-id="83075-178">Objeto <see cref="T:System.Globalization.NumberFormatInfo" /> que define cómo se aplica formato y se muestran los valores numéricos, dependiendo de la referencia cultural.</span><span class="sxs-lookup"><span data-stu-id="83075-178">A <see cref="T:System.Globalization.NumberFormatInfo" /> object that defines how numeric values are formatted and displayed, depending on the culture.</span></span></param>
        <summary><span data-ttu-id="83075-179">Devuelve un valor de tipo <see langword="String" /> que se corresponde con el valor <see langword="Single" /> especificado y la información de formato numérico.</span><span class="sxs-lookup"><span data-stu-id="83075-179">Returns a <see langword="String" /> value that corresponds to a specified <see langword="Single" /> and number format information.</span></span></summary>
        <returns><span data-ttu-id="83075-180">Valor de tipo <see langword="String" /> correspondiente a <paramref name="Value" />.</span><span class="sxs-lookup"><span data-stu-id="83075-180">The <see langword="String" /> value corresponding to <paramref name="Value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83075-181">Esta clase es compatible con el compilador de Visual Basic y no está pensada para utilizarse directamente desde el código.</span><span class="sxs-lookup"><span data-stu-id="83075-181">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="MidStmtStr">
      <MemberSignature Language="C#" Value="public static void MidStmtStr (ref string sDest, int StartPosition, int MaxInsertLength, string sInsert);" />
      <MemberSignature Language="ILAsm" Value=".method public static void MidStmtStr(string&amp; sDest, int32 StartPosition, int32 MaxInsertLength, string sInsert) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.StringType.MidStmtStr(System.String@,System.Int32,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub MidStmtStr (ByRef sDest As String, StartPosition As Integer, MaxInsertLength As Integer, sInsert As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void MidStmtStr(System::String ^ % sDest, int StartPosition, int MaxInsertLength, System::String ^ sInsert);" />
      <MemberSignature Language="F#" Value="static member MidStmtStr :  * int * int * string -&gt; unit" Usage="Microsoft.VisualBasic.CompilerServices.StringType.MidStmtStr (sDest, StartPosition, MaxInsertLength, sInsert)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sDest" Type="System.String" RefType="ref" />
        <Parameter Name="StartPosition" Type="System.Int32" />
        <Parameter Name="MaxInsertLength" Type="System.Int32" />
        <Parameter Name="sInsert" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sDest"><span data-ttu-id="83075-182">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="83075-182">Required.</span></span> <span data-ttu-id="83075-183">Variable de cadena que se va a modificar.</span><span class="sxs-lookup"><span data-stu-id="83075-183">String variable to modify.</span></span></param>
        <param name="StartPosition"><span data-ttu-id="83075-184">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="83075-184">Required.</span></span> <span data-ttu-id="83075-185">Ubicación en el parámetro <paramref name="sDest" /> desde la que se comienza a sobrescribir.</span><span class="sxs-lookup"><span data-stu-id="83075-185">Location in the <paramref name="sDest" /> parameter to begin overwriting from.</span></span> <span data-ttu-id="83075-186">El índice es de base 1.</span><span class="sxs-lookup"><span data-stu-id="83075-186">The index is 1-based.</span></span></param>
        <param name="MaxInsertLength"><span data-ttu-id="83075-187">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="83075-187">Required.</span></span> <span data-ttu-id="83075-188">Número máximo de caracteres del parámetro <paramref name="sInsert" /> que se van a utilizar, a partir del primer carácter.</span><span class="sxs-lookup"><span data-stu-id="83075-188">Maximum number of characters from the <paramref name="sInsert" /> parameter to use, starting from the first character.</span></span></param>
        <param name="sInsert"><span data-ttu-id="83075-189">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="83075-189">Required.</span></span> <span data-ttu-id="83075-190">Valor de cadena con el que se va a sobrescribir el parámetro <paramref name="sDest" />.</span><span class="sxs-lookup"><span data-stu-id="83075-190">String value to overwrite the <paramref name="sDest" /> parameter with.</span></span></param>
        <summary><span data-ttu-id="83075-191">Sobrescribe el parámetro <paramref name="sDest" /> con el contenido del parámetro <paramref name="sInsert" />.</span><span class="sxs-lookup"><span data-stu-id="83075-191">Overwrites the <paramref name="sDest" /> parameter with the contents of the <paramref name="sInsert" /> parameter.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83075-192">Esta clase es compatible con el compilador de Visual Basic y no está pensada para utilizarse directamente desde el código.</span><span class="sxs-lookup"><span data-stu-id="83075-192">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="StrCmp">
      <MemberSignature Language="C#" Value="public static int StrCmp (string sLeft, string sRight, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 StrCmp(string sLeft, string sRight, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.StringType.StrCmp(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StrCmp (sLeft As String, sRight As String, TextCompare As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int StrCmp(System::String ^ sLeft, System::String ^ sRight, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member StrCmp : string * string * bool -&gt; int" Usage="Microsoft.VisualBasic.CompilerServices.StringType.StrCmp (sLeft, sRight, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sLeft" Type="System.String" />
        <Parameter Name="sRight" Type="System.String" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="sLeft"><span data-ttu-id="83075-193">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="83075-193">Required.</span></span> <span data-ttu-id="83075-194">Cadena que se va a comparar con <paramref name="sRight" />.</span><span class="sxs-lookup"><span data-stu-id="83075-194">String to compare with <paramref name="sRight" />.</span></span></param>
        <param name="sRight"><span data-ttu-id="83075-195">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="83075-195">Required.</span></span> <span data-ttu-id="83075-196">Cadena que se va a comparar con <paramref name="sLeft" />.</span><span class="sxs-lookup"><span data-stu-id="83075-196">String to compare with <paramref name="sLeft" />.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="83075-197">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="83075-197">Required.</span></span> <span data-ttu-id="83075-198"><see langword="True" /> si se va a realizar una comparación sin distinguir mayúsculas de minúsculas; de lo contrario, <see langword="False" />.</span><span class="sxs-lookup"><span data-stu-id="83075-198"><see langword="True" /> to perform a case-insensitive comparison; otherwise <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="83075-199">Compara dos cadenas.</span><span class="sxs-lookup"><span data-stu-id="83075-199">Compares two strings.</span></span></summary>
        <returns><list type="table">
            <listheader>
              <term> <span data-ttu-id="83075-200">Valor</span><span class="sxs-lookup"><span data-stu-id="83075-200">Value</span></span> 
 </term>
              <description> <span data-ttu-id="83075-201">Condición</span><span class="sxs-lookup"><span data-stu-id="83075-201">Condition</span></span> 
 </description>
            </listheader>
            <item>
              <term> <span data-ttu-id="83075-202">cero</span><span class="sxs-lookup"><span data-stu-id="83075-202">zero</span></span> 
 </term>
              <description> <span data-ttu-id="83075-203">Las dos cadenas son iguales.</span><span class="sxs-lookup"><span data-stu-id="83075-203">The two strings are equal.</span></span>  
  
 </description>
            </item>
            <item>
              <term> <span data-ttu-id="83075-204">menor que cero</span><span class="sxs-lookup"><span data-stu-id="83075-204">less than zero</span></span> 
 </term>
              <description><span data-ttu-id="83075-205">
                <paramref name="sLeft" /> es menor que <paramref name="sRight" />.</span><span class="sxs-lookup"><span data-stu-id="83075-205">
                <paramref name="sLeft" /> is less than <paramref name="sRight" />.</span></span>  
  
 </description>
            </item>
            <item>
              <term> <span data-ttu-id="83075-206">mayor que cero</span><span class="sxs-lookup"><span data-stu-id="83075-206">greater than zero</span></span> 
 </term>
              <description><span data-ttu-id="83075-207">
                <paramref name="sLeft" /> es mayor que <paramref name="sRight" />.</span><span class="sxs-lookup"><span data-stu-id="83075-207">
                <paramref name="sLeft" /> is greater than <paramref name="sRight" />.</span></span>  
  
 </description>
            </item>
          </list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83075-208">Esta clase es compatible con el compilador de Visual Basic y no está pensada para utilizarse directamente desde el código.</span><span class="sxs-lookup"><span data-stu-id="83075-208">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="StrLike">
      <MemberSignature Language="C#" Value="public static bool StrLike (string Source, string Pattern, Microsoft.VisualBasic.CompareMethod CompareOption);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool StrLike(string Source, string Pattern, valuetype Microsoft.VisualBasic.CompareMethod CompareOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.StringType.StrLike(System.String,System.String,Microsoft.VisualBasic.CompareMethod)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StrLike (Source As String, Pattern As String, CompareOption As CompareMethod) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool StrLike(System::String ^ Source, System::String ^ Pattern, Microsoft::VisualBasic::CompareMethod CompareOption);" />
      <MemberSignature Language="F#" Value="static member StrLike : string * string * Microsoft.VisualBasic.CompareMethod -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.StringType.StrLike (Source, Pattern, CompareOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Source" Type="System.String" />
        <Parameter Name="Pattern" Type="System.String" />
        <Parameter Name="CompareOption" Type="Microsoft.VisualBasic.CompareMethod" />
      </Parameters>
      <Docs>
        <param name="Source"><span data-ttu-id="83075-209">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="83075-209">Required.</span></span> <span data-ttu-id="83075-210">Cualquier expresión <see langword="String" /> .</span><span class="sxs-lookup"><span data-stu-id="83075-210">Any <see langword="String" /> expression.</span></span></param>
        <param name="Pattern"><span data-ttu-id="83075-211">Expresión <see langword="String" /> que se ajuste a las convenciones de coincidencia de modelos descritas en Like (Operador).</span><span class="sxs-lookup"><span data-stu-id="83075-211">Any <see langword="String" /> expression conforming to the pattern-matching conventions described in Like Operator.</span></span></param>
        <param name="CompareOption"><span data-ttu-id="83075-212">Especifica cómo comparar las cadenas con los modelos, según <see cref="T:Microsoft.VisualBasic.CompareMethod" />.</span><span class="sxs-lookup"><span data-stu-id="83075-212">Specifies how to compare strings to patterns, according to the <see cref="T:Microsoft.VisualBasic.CompareMethod" />.</span></span> <span data-ttu-id="83075-213">Puede ser <see langword="vbBinaryCompare" /> para la comparación binaria o <see langword="vbTextCompare" /> para la basada en un criterio de ordenación de texto sin distinción entre mayúsculas y minúsculas determinado por el valor <see langword="LocaleID" /> del sistema.</span><span class="sxs-lookup"><span data-stu-id="83075-213">Can be <see langword="vbBinaryCompare" /> for binary comparison or <see langword="vbTextCompare" /> for comparison based on a case-insensitive text sort order determined by your system's <see langword="LocaleID" /> value.</span></span></param>
        <summary><span data-ttu-id="83075-214">Compara los parámetros <paramref name="Source" /> y <paramref name="Pattern" /> y devuelve los mismos resultados que el operador <see langword="Like" />.</span><span class="sxs-lookup"><span data-stu-id="83075-214">Compares the parameters <paramref name="Source" /> and <paramref name="Pattern" /> and returns the same results as the <see langword="Like" /> operator.</span></span></summary>
        <returns><span data-ttu-id="83075-215">Valor de tipo <see langword="Boolean" /> que indica si la cadena se ajusta al modelo.</span><span class="sxs-lookup"><span data-stu-id="83075-215">A <see langword="Boolean" /> value indicating whether or not the string satisfies the pattern.</span></span> <span data-ttu-id="83075-216">Si el valor de la cadena se ajusta al modelo incluido en Pattern, el resultado es <see langword="True" />.</span><span class="sxs-lookup"><span data-stu-id="83075-216">If the value in string satisfies the pattern contained in pattern, result is <see langword="True" />.</span></span> <span data-ttu-id="83075-217">Si la cadena no se ajusta al modelo, el resultado es <see langword="False" />.</span><span class="sxs-lookup"><span data-stu-id="83075-217">If the string does not satisfy the pattern, result is <see langword="False" />.</span></span> <span data-ttu-id="83075-218">Si tanto la cadena como el modelo son cadenas vacías, el resultado es <see langword="True" />.</span><span class="sxs-lookup"><span data-stu-id="83075-218">If both string and pattern are empty strings, the result is <see langword="True" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83075-219">Este método compara los parámetros `Source` y `Pattern` y devuelve los mismos resultados que la [Like (operador)](~/docs/visual-basic/language-reference/operators/like-operator.md).</span><span class="sxs-lookup"><span data-stu-id="83075-219">This method compares the parameters `Source` and `Pattern` and returns the same results as the [Like Operator](~/docs/visual-basic/language-reference/operators/like-operator.md).</span></span> <span data-ttu-id="83075-220">El resultado es un valor booleano que indica si la cadena ajusta al modelo.</span><span class="sxs-lookup"><span data-stu-id="83075-220">The result is a Boolean value indicating whether or not the string satisfies the pattern.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="StrLikeBinary">
      <MemberSignature Language="C#" Value="public static bool StrLikeBinary (string Source, string Pattern);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool StrLikeBinary(string Source, string Pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.StringType.StrLikeBinary(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StrLikeBinary (Source As String, Pattern As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool StrLikeBinary(System::String ^ Source, System::String ^ Pattern);" />
      <MemberSignature Language="F#" Value="static member StrLikeBinary : string * string -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.StringType.StrLikeBinary (Source, Pattern)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Source" Type="System.String" />
        <Parameter Name="Pattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Source"><span data-ttu-id="83075-221">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="83075-221">Required.</span></span> <span data-ttu-id="83075-222">Cualquier expresión <see langword="String" /> .</span><span class="sxs-lookup"><span data-stu-id="83075-222">Any <see langword="String" /> expression.</span></span></param>
        <param name="Pattern"><span data-ttu-id="83075-223">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="83075-223">Required.</span></span> <span data-ttu-id="83075-224">Expresión <see langword="String" /> que se ajuste a las convenciones de coincidencia de modelos descritas en Like (Operador).</span><span class="sxs-lookup"><span data-stu-id="83075-224">Any <see langword="String" /> expression conforming to the pattern-matching conventions described in Like Operator.</span></span></param>
        <summary><span data-ttu-id="83075-225">Compara los parámetros <paramref name="Source" /> y <paramref name="Pattern" /> y devuelve los mismos resultados que el operador <see langword="Like" />, mediante la comparación binaria.</span><span class="sxs-lookup"><span data-stu-id="83075-225">Compares the parameters <paramref name="Source" /> and <paramref name="Pattern" /> and returns the same results as the <see langword="Like" /> operator, using binary comparison.</span></span></summary>
        <returns><span data-ttu-id="83075-226">Valor de tipo <see langword="Boolean" /> que indica si la cadena se ajusta al modelo.</span><span class="sxs-lookup"><span data-stu-id="83075-226">A <see langword="Boolean" /> value indicating whether or not the string satisfies the pattern.</span></span> <span data-ttu-id="83075-227">Si el valor de la cadena se ajusta al modelo incluido en Pattern, el resultado es <see langword="True" />.</span><span class="sxs-lookup"><span data-stu-id="83075-227">If the value in string satisfies the pattern contained in pattern, result is <see langword="True" />.</span></span> <span data-ttu-id="83075-228">Si la cadena no se ajusta al modelo, el resultado es <see langword="False" />.</span><span class="sxs-lookup"><span data-stu-id="83075-228">If the string does not satisfy the pattern, result is <see langword="False" />.</span></span> <span data-ttu-id="83075-229">Si tanto la cadena como el modelo son cadenas vacías, el resultado es <see langword="True" />.</span><span class="sxs-lookup"><span data-stu-id="83075-229">If both string and pattern are empty strings, the result is <see langword="True" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83075-230">Este método compara los parámetros `Source` y `Pattern` y devuelve los mismos resultados que la [Like (operador)](~/docs/visual-basic/language-reference/operators/like-operator.md).</span><span class="sxs-lookup"><span data-stu-id="83075-230">This method compares the parameters `Source` and `Pattern` and returns the same results as the [Like Operator](~/docs/visual-basic/language-reference/operators/like-operator.md).</span></span> <span data-ttu-id="83075-231">El resultado es un valor booleano que indica si la cadena ajusta al modelo.</span><span class="sxs-lookup"><span data-stu-id="83075-231">The result is a Boolean value indicating whether or not the string satisfies the pattern.</span></span>  
  
 <span data-ttu-id="83075-232">Este método es similar a <xref:Microsoft.VisualBasic.CompilerServices.StringType.StrLike%2A> , salvo que siempre realiza una comparación binaria entre mayúsculas y minúsculas.</span><span class="sxs-lookup"><span data-stu-id="83075-232">This method is similar to <xref:Microsoft.VisualBasic.CompilerServices.StringType.StrLike%2A> except that it always performs a case-sensitive binary comparison.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="StrLikeText">
      <MemberSignature Language="C#" Value="public static bool StrLikeText (string Source, string Pattern);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool StrLikeText(string Source, string Pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.StringType.StrLikeText(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StrLikeText (Source As String, Pattern As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool StrLikeText(System::String ^ Source, System::String ^ Pattern);" />
      <MemberSignature Language="F#" Value="static member StrLikeText : string * string -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.StringType.StrLikeText (Source, Pattern)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Source" Type="System.String" />
        <Parameter Name="Pattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Source"><span data-ttu-id="83075-233">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="83075-233">Required.</span></span> <span data-ttu-id="83075-234">Cualquier expresión <see langword="String" /> .</span><span class="sxs-lookup"><span data-stu-id="83075-234">Any <see langword="String" /> expression.</span></span></param>
        <param name="Pattern"><span data-ttu-id="83075-235">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="83075-235">Required.</span></span> <span data-ttu-id="83075-236">Expresión <see langword="String" /> que se ajuste a las convenciones de coincidencia de modelos descritas en Like (Operador).</span><span class="sxs-lookup"><span data-stu-id="83075-236">Any <see langword="String" /> expression conforming to the pattern-matching conventions described in Like Operator.</span></span></param>
        <summary><span data-ttu-id="83075-237">Compara los parámetros <paramref name="Source" /> y <paramref name="Pattern" /> y devuelve los mismos resultados que el operador <see langword="Like" />, mediante la comparación de texto.</span><span class="sxs-lookup"><span data-stu-id="83075-237">Compares the parameters <paramref name="Source" /> and <paramref name="Pattern" /> and returns the same results as the <see langword="Like" /> operator, using text comparison.</span></span></summary>
        <returns><span data-ttu-id="83075-238">Valor de tipo <see langword="Boolean" /> que indica si la cadena se ajusta al modelo.</span><span class="sxs-lookup"><span data-stu-id="83075-238">A <see langword="Boolean" /> value indicating whether or not the string satisfies the pattern.</span></span> <span data-ttu-id="83075-239">Si el valor de la cadena se ajusta al modelo incluido en Pattern, el resultado es <see langword="True" />.</span><span class="sxs-lookup"><span data-stu-id="83075-239">If the value in string satisfies the pattern contained in pattern, result is <see langword="True" />.</span></span> <span data-ttu-id="83075-240">Si la cadena no se ajusta al modelo, el resultado es <see langword="False" />.</span><span class="sxs-lookup"><span data-stu-id="83075-240">If the string does not satisfy the pattern, result is <see langword="False" />.</span></span> <span data-ttu-id="83075-241">Si tanto la cadena como el modelo son cadenas vacías, el resultado es <see langword="True" />.</span><span class="sxs-lookup"><span data-stu-id="83075-241">If both string and pattern are empty strings, the result is <see langword="True" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="83075-242">Este método compara los parámetros `Source` y `Pattern` y devuelve los mismos resultados que la [Like (operador)](~/docs/visual-basic/language-reference/operators/like-operator.md).</span><span class="sxs-lookup"><span data-stu-id="83075-242">This method compares the parameters `Source` and `Pattern` and returns the same results as the [Like Operator](~/docs/visual-basic/language-reference/operators/like-operator.md).</span></span> <span data-ttu-id="83075-243">El resultado es un `Boolean` valor que indica si la cadena ajusta al modelo.</span><span class="sxs-lookup"><span data-stu-id="83075-243">The result is a `Boolean` value indicating whether or not the string satisfies the pattern.</span></span>  
  
 <span data-ttu-id="83075-244">Este método es similar a <xref:Microsoft.VisualBasic.CompilerServices.StringType.StrLike%2A> , salvo que siempre realiza una comparación basada en un criterio de ordenación de texto de mayúsculas y minúsculas determinado por el sistema `LocaleID` valor.</span><span class="sxs-lookup"><span data-stu-id="83075-244">This method is similar to <xref:Microsoft.VisualBasic.CompilerServices.StringType.StrLike%2A> except that it always performs a comparison based on a case-insensitive text sort order determined by your system's `LocaleID` value.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>
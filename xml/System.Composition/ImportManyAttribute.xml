<Type Name="ImportManyAttribute" FullName="System.Composition.ImportManyAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4c87a434b5a57ca0cfb9e0ff682ef4708b20b137" /><Meta Name="ms.sourcegitcommit" Value="d40b35262cbc997b79bf76da3a39ccf59b738efc" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="12/05/2018" /><Meta Name="ms.locfileid" Value="52909691" /></Metadata><TypeSignature Language="C#" Value="public class ImportManyAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ImportManyAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Composition.ImportManyAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class ImportManyAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ImportManyAttribute : Attribute" />
  <TypeSignature Language="F#" Value="type ImportManyAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Composition.AttributedModel</AssemblyName>
    <AssemblyVersion>1.0.31.0</AssemblyVersion>
    <AssemblyVersion>1.0.32.0</AssemblyVersion>
    <AssemblyVersion>1.0.33.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.1;netcore-2.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Parameter | System.AttributeTargets.Property, AllowMultiple=false, Inherited=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="b9bd3-101">Especifica que una propiedad, campo o parámetro debe rellenarse con todas las exportaciones coincidentes mediante el contenedor del host.</span><span class="sxs-lookup"><span data-stu-id="b9bd3-101">Specifies that a property, field, or parameter should be populated with all matching exports by the host container.</span></span></summary>
    <remarks></remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImportManyAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.ImportManyAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ImportManyAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.AttributedModel</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
        <AssemblyVersion>1.0.33.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b9bd3-102">Inicializa una nueva instancia de la <see cref="T:System.Composition.ImportManyAttribute" /> (clase), importando el conjunto de exportaciones que tienen el nombre de contrato predeterminado.</span><span class="sxs-lookup"><span data-stu-id="b9bd3-102">Initializes a new instance of the <see cref="T:System.Composition.ImportManyAttribute" /> class, importing the set of exports that have the default contract name.</span></span></summary>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImportManyAttribute (string contractName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string contractName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.ImportManyAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (contractName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ImportManyAttribute(System::String ^ contractName);" />
      <MemberSignature Language="F#" Value="new System.Composition.ImportManyAttribute : string -&gt; System.Composition.ImportManyAttribute" Usage="new System.Composition.ImportManyAttribute contractName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.AttributedModel</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
        <AssemblyVersion>1.0.33.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contractName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="contractName"><span data-ttu-id="b9bd3-103">El nombre de contrato de las exportaciones que se va a importar, o <see langword="null" /> o una cadena vacía ("") para usar el nombre de contrato predeterminado.</span><span class="sxs-lookup"><span data-stu-id="b9bd3-103">The contract name of the exports to import, or <see langword="null" /> or an empty string ("") to use the default contract name.</span></span></param>
        <summary><span data-ttu-id="b9bd3-104">Inicializa una nueva instancia de la <see cref="T:System.Composition.ImportManyAttribute" /> (clase), importando el conjunto de exportaciones que tienen el nombre de contrato especificado.</span><span class="sxs-lookup"><span data-stu-id="b9bd3-104">Initializes a new instance of the <see cref="T:System.Composition.ImportManyAttribute" /> class, importing the set of exports that have the specified contract name.</span></span></summary>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="ContractName">
      <MemberSignature Language="C#" Value="public string ContractName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContractName" />
      <MemberSignature Language="DocId" Value="P:System.Composition.ImportManyAttribute.ContractName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContractName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ContractName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContractName : string" Usage="System.Composition.ImportManyAttribute.ContractName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.AttributedModel</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
        <AssemblyVersion>1.0.33.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9bd3-105">Obtiene el nombre de contrato de las exportaciones que se va a importar.</span><span class="sxs-lookup"><span data-stu-id="b9bd3-105">Gets the contract name of the exports to import.</span></span></summary>
        <value><span data-ttu-id="b9bd3-106">El nombre de contrato de las exportaciones que se va a importar.</span><span class="sxs-lookup"><span data-stu-id="b9bd3-106">The contract name of the exports to import.</span></span> <span data-ttu-id="b9bd3-107">El valor predeterminado es una cadena vacía ("").</span><span class="sxs-lookup"><span data-stu-id="b9bd3-107">The default value is an empty string ("").</span></span></value>
        <remarks></remarks>
      </Docs>
    </Member>
  </Members>
</Type>
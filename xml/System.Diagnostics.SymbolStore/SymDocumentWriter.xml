<Type Name="SymDocumentWriter" FullName="System.Diagnostics.SymbolStore.SymDocumentWriter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a31cd93804b97b12d1afe8a3cee909ac6cb5f8cf" /><Meta Name="ms.sourcegitcommit" Value="42a3c35677e9d87eeb503607ae50c9d39827d414" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="12/17/2018" /><Meta Name="ms.locfileid" Value="53476016" /></Metadata><TypeSignature Language="C#" Value="public class SymDocumentWriter : System.Diagnostics.SymbolStore.SymDocumentWriterBase, IDisposable, System.Diagnostics.SymbolStore.ISymbolDocumentWriter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SymDocumentWriter extends System.Diagnostics.SymbolStore.SymDocumentWriterBase implements class System.Diagnostics.SymbolStore.ISymbolDocumentWriter, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.SymbolStore.SymDocumentWriter" />
  <TypeSignature Language="VB.NET" Value="Public Class SymDocumentWriter&#xA;Inherits SymDocumentWriterBase&#xA;Implements IDisposable, ISymbolDocumentWriter" />
  <TypeSignature Language="C++ CLI" Value="public ref class SymDocumentWriter : System::Diagnostics::SymbolStore::SymDocumentWriterBase, IDisposable, System::Diagnostics::SymbolStore::ISymbolDocumentWriter" />
  <TypeSignature Language="F#" Value="type SymDocumentWriter = class&#xA;    inherit SymDocumentWriterBase&#xA;    interface ISymbolDocumentWriter&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>ISymWrapper</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Diagnostics.SymbolStore.SymDocumentWriterBase</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-1.1">System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Diagnostics.SymbolStore.ISymbolDocumentWriter</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="9b5e3-101">Proporciona métodos para escribir en un documento al que hace referencia un almacén de símbolos.</span><span class="sxs-lookup"><span data-stu-id="9b5e3-101">Provides methods for writing to a document referenced by a symbol store.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b5e3-102">Un documento se define mediante una dirección URL y un GUID de tipo de documento.</span><span class="sxs-lookup"><span data-stu-id="9b5e3-102">A document is defined by a URL and a document type GUID.</span></span> <span data-ttu-id="9b5e3-103">Opcionalmente, el código fuente del documento puede almacenarse en el almacén de símbolos.</span><span class="sxs-lookup"><span data-stu-id="9b5e3-103">Optionally, the document source can be stored in the symbol store.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SymDocumentWriter (ISymUnmanagedDocumentWriter* pDocumentWriter);" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor(ISymUnmanagedDocumentWriter* pDocumentWriter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymDocumentWriter.#ctor(ISymUnmanagedDocumentWriter*)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SymDocumentWriter(ISymUnmanagedDocumentWriter* pDocumentWriter);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.SymbolStore.SymDocumentWriter : nativeptr&lt;ISymUnmanagedDocumentWriter&gt; -&gt; System.Diagnostics.SymbolStore.SymDocumentWriter" Usage="new System.Diagnostics.SymbolStore.SymDocumentWriter pDocumentWriter" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pDocumentWriter" Type="ISymUnmanagedDocumentWriter*" />
      </Parameters>
      <Docs>
        <param name="pDocumentWriter"><span data-ttu-id="9b5e3-104">Puntero para el sistema de escritura del documento no administrado.</span><span class="sxs-lookup"><span data-stu-id="9b5e3-104">A pointer to the unmanaged document writer.</span></span></param>
        <summary><span data-ttu-id="9b5e3-105">Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.SymbolStore.SymDocumentWriter" />.</span><span class="sxs-lookup"><span data-stu-id="9b5e3-105">Initializes a new instance of the <see cref="T:System.Diagnostics.SymbolStore.SymDocumentWriter" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SymDocumentWriter (System.Diagnostics.SymbolStore.Private.ISymUnmanagedDocumentWriter* pDocumentWriter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Diagnostics.SymbolStore.Private.ISymUnmanagedDocumentWriter* pDocumentWriter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymDocumentWriter.#ctor(System.Diagnostics.SymbolStore.Private.ISymUnmanagedDocumentWriter*)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SymDocumentWriter(System::Diagnostics::SymbolStore::Private::ISymUnmanagedDocumentWriter* pDocumentWriter);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.SymbolStore.SymDocumentWriter : nativeptr&lt;System.Diagnostics.SymbolStore.Private.ISymUnmanagedDocumentWriter&gt; -&gt; System.Diagnostics.SymbolStore.SymDocumentWriter" Usage="new System.Diagnostics.SymbolStore.SymDocumentWriter pDocumentWriter" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pDocumentWriter" Type="System.Diagnostics.SymbolStore.Private.ISymUnmanagedDocumentWriter*" />
      </Parameters>
      <Docs>
        <param name="pDocumentWriter">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="__dtor">
      <MemberSignature Language="C#" Value="public void __dtor ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance void __dtor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymDocumentWriter.__dtor" />
      <MemberSignature Language="VB.NET" Value="Public Sub __dtor ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void __dtor();" />
      <MemberSignature Language="F#" Value="member this.__dtor : unit -&gt; unit" Usage="symDocumentWriter.__dtor " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9b5e3-106">Libera los recursos mantenidos por la instancia actual del objeto <see cref="T:System.Diagnostics.SymbolStore.SymDocumentWriter" />.</span><span class="sxs-lookup"><span data-stu-id="9b5e3-106">Releases the resources held by the current instance of the <see cref="T:System.Diagnostics.SymbolStore.SymDocumentWriter" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="9b5e3-107">Use el <xref:System.Diagnostics.SymbolStore.SymDocumentWriter.Finalize> método para liberar los recursos.</span><span class="sxs-lookup"><span data-stu-id="9b5e3-107">Use the <xref:System.Diagnostics.SymbolStore.SymDocumentWriter.Finalize> method to release resources.</span></span>

]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="{dtor}">
      <MemberSignature Language="C#" Value="public void {dtor} ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance void {dtor}() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymDocumentWriter.{dtor}" />
      <MemberSignature Language="VB.NET" Value="Public Sub {dtor} ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void {dtor}();" />
      <MemberSignature Language="F#" Value="member this.{dtor} : unit -&gt; unit" Usage="symDocumentWriter.{dtor} " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9b5e3-108">Libera los recursos mantenidos por la instancia actual del objeto <see cref="T:System.Diagnostics.SymbolStore.SymDocumentWriter" />.</span><span class="sxs-lookup"><span data-stu-id="9b5e3-108">Releases the resources held by the current instance of the <see cref="T:System.Diagnostics.SymbolStore.SymDocumentWriter" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks

<span data-ttu-id="9b5e3-109">Use el <xref:System.Diagnostics.SymbolStore.SymDocumentWriter.Finalize> método para liberar los recursos.</span><span class="sxs-lookup"><span data-stu-id="9b5e3-109">Use the <xref:System.Diagnostics.SymbolStore.SymDocumentWriter.Finalize> method to release resources.</span></span>
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9b5e3-110">Libera los recursos utilizados por la instancia actual de la clase <see cref="T:System.Diagnostics.SymbolStore.SymDocumentWriter" />.</span><span class="sxs-lookup"><span data-stu-id="9b5e3-110">Releases the resources used by the current instance of the <see cref="T:System.Diagnostics.SymbolStore.SymDocumentWriter" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public override sealed void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymDocumentWriter.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="symDocumentWriter.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9b5e3-111">Libera los recursos utilizados por la instancia actual de la clase <see cref="T:System.Diagnostics.SymbolStore.SymDocumentWriter" />.</span><span class="sxs-lookup"><span data-stu-id="9b5e3-111">Releases the resources used by the current instance of the <see cref="T:System.Diagnostics.SymbolStore.SymDocumentWriter" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool A_0);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool A_0) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymDocumentWriter.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (A_0 As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool A_0);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="symDocumentWriter.Dispose A_0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptions</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="A_0" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="A_0"><span data-ttu-id="9b5e3-112"><see langword="true" /> para liberar tanto los recursos administrados como los no administrados, <see langword="false" /> para liberar solo los recursos no administrados.</span><span class="sxs-lookup"><span data-stu-id="9b5e3-112"><see langword="true" /> to release managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="9b5e3-113">Lo llaman los métodos <see cref="M:System.Diagnostics.SymbolStore.SymDocumentWriter.Dispose" /> y <see cref="M:System.Diagnostics.SymbolStore.SymDocumentWriter.Finalize" /> para liberar los recursos administrados y no administrados usados por la instancia actual de la clase <see cref="T:System.Diagnostics.SymbolStore.SymBinder" />.</span><span class="sxs-lookup"><span data-stu-id="9b5e3-113">Called by the <see cref="M:System.Diagnostics.SymbolStore.SymDocumentWriter.Dispose" /> and <see cref="M:System.Diagnostics.SymbolStore.SymDocumentWriter.Finalize" /> methods to release the managed and unmanaged resources used by the current instance of the <see cref="T:System.Diagnostics.SymbolStore.SymBinder" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b5e3-114">Se llama a este método solo por el público <xref:System.Diagnostics.SymbolStore.SymDocumentWriter.Dispose%2A> y <xref:System.Diagnostics.SymbolStore.SymDocumentWriter.Finalize%2A> métodos; no llame a este método directamente.</span><span class="sxs-lookup"><span data-stu-id="9b5e3-114">This method is called only by the public <xref:System.Diagnostics.SymbolStore.SymDocumentWriter.Dispose%2A> and <xref:System.Diagnostics.SymbolStore.SymDocumentWriter.Finalize%2A> methods; do not call this method directly.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~SymDocumentWriter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymDocumentWriter.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!SymDocumentWriter ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="symDocumentWriter.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9b5e3-115">Libera recursos no administrados y realiza otras operaciones de limpieza antes de que se reclame el elemento <see cref="T:System.Diagnostics.SymbolStore.SymDocumentWriter" /> durante la recolección de elementos no usados.</span><span class="sxs-lookup"><span data-stu-id="9b5e3-115">Releases unmanaged resources and performs other cleanup operations before the <see cref="T:System.Diagnostics.SymbolStore.SymDocumentWriter" /> is reclaimed by garbage collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b5e3-116">Este método invalida <xref:System.Object.Finalize%2A>.</span><span class="sxs-lookup"><span data-stu-id="9b5e3-116">This method overrides <xref:System.Object.Finalize%2A>.</span></span> <span data-ttu-id="9b5e3-117">Código de la aplicación no debe llamar a este método; un objeto `Finalize` método se invoca automáticamente durante la recolección de elementos no utilizados, a menos que se ha deshabilitado la finalización por el recolector de elementos no utilizados mediante una llamada a la <xref:System.GC.SuppressFinalize%2A> método.</span><span class="sxs-lookup"><span data-stu-id="9b5e3-117">Application code should not call this method; an object's `Finalize` method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <xref:System.GC.SuppressFinalize%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUnmanaged">
      <MemberSignature Language="C#" Value="public ISymUnmanagedDocumentWriter* GetUnmanaged ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance ISymUnmanagedDocumentWriter* GetUnmanaged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymDocumentWriter.GetUnmanaged" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ISymUnmanagedDocumentWriter* GetUnmanaged();" />
      <MemberSignature Language="F#" Value="member this.GetUnmanaged : unit -&gt; nativeptr&lt;ISymUnmanagedDocumentWriter&gt;" Usage="symDocumentWriter.GetUnmanaged " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>ISymUnmanagedDocumentWriter*</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9b5e3-118">Obtiene el sistema de escritura del documento no administrado para la instancia actual.</span><span class="sxs-lookup"><span data-stu-id="9b5e3-118">Gets the unmanaged document writer for the current instance.</span></span></summary>
        <returns><span data-ttu-id="9b5e3-119">Sistema de escritura del documento no administrado para la instancia <see cref="T:System.Diagnostics.SymbolStore.SymDocumentWriter" /> actual.</span><span class="sxs-lookup"><span data-stu-id="9b5e3-119">The unmanaged document writer for the current <see cref="T:System.Diagnostics.SymbolStore.SymDocumentWriter" /> instance.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCheckSum">
      <MemberSignature Language="C#" Value="public virtual void SetCheckSum (Guid algorithmId, byte[] source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetCheckSum(valuetype System.Guid algorithmId, unsigned int8[] source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymDocumentWriter.SetCheckSum(System.Guid,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetCheckSum (algorithmId As Guid, source As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetCheckSum(Guid algorithmId, cli::array &lt;System::Byte&gt; ^ source);" />
      <MemberSignature Language="F#" Value="abstract member SetCheckSum : Guid * byte[] -&gt; unit&#xA;override this.SetCheckSum : Guid * byte[] -&gt; unit" Usage="symDocumentWriter.SetCheckSum (algorithmId, source)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Diagnostics.SymbolStore.ISymbolDocumentWriter.SetCheckSum(System.Guid,System.Byte[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithmId" Type="System.Guid" />
        <Parameter Name="source" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="algorithmId"><span data-ttu-id="9b5e3-120">Este parámetro no se utiliza.</span><span class="sxs-lookup"><span data-stu-id="9b5e3-120">This parameter is not used.</span></span></param>
        <param name="source"><span data-ttu-id="9b5e3-121">Este parámetro no se utiliza.</span><span class="sxs-lookup"><span data-stu-id="9b5e3-121">This parameter is not used.</span></span></param>
        <summary><span data-ttu-id="9b5e3-122">Devuelve <see cref="T:System.NotImplementedException" /> en todos los casos</span><span class="sxs-lookup"><span data-stu-id="9b5e3-122">Throws a <see cref="T:System.NotImplementedException" /> in all cases.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="9b5e3-123">En todos los casos.</span><span class="sxs-lookup"><span data-stu-id="9b5e3-123">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetSource">
      <MemberSignature Language="C#" Value="public virtual void SetSource (byte[] source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetSource(unsigned int8[] source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymDocumentWriter.SetSource(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetSource (source As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetSource(cli::array &lt;System::Byte&gt; ^ source);" />
      <MemberSignature Language="F#" Value="abstract member SetSource : byte[] -&gt; unit&#xA;override this.SetSource : byte[] -&gt; unit" Usage="symDocumentWriter.SetSource source" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Diagnostics.SymbolStore.ISymbolDocumentWriter.SetSource(System.Byte[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="9b5e3-124">Este parámetro no se utiliza.</span><span class="sxs-lookup"><span data-stu-id="9b5e3-124">This parameter is not used.</span></span></param>
        <summary><span data-ttu-id="9b5e3-125">Devuelve <see cref="T:System.NotSupportedException" /> en todos los casos</span><span class="sxs-lookup"><span data-stu-id="9b5e3-125">Throws a <see cref="T:System.NotSupportedException" /> in all cases.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="9b5e3-126">En todos los casos.</span><span class="sxs-lookup"><span data-stu-id="9b5e3-126">In all cases.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
<Type Name="SymReader" FullName="System.Diagnostics.SymbolStore.SymReader">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fe8beef0c9f735e65aa6285128f214410bf0416d" /><Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="11/29/2018" /><Meta Name="ms.locfileid" Value="52598465" /></Metadata><TypeSignature Language="C#" Value="public class SymReader : System.Diagnostics.SymbolStore.SymReaderBase, IDisposable, System.Diagnostics.SymbolStore.ISymbolReader" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SymReader extends System.Diagnostics.SymbolStore.SymReaderBase implements class System.Diagnostics.SymbolStore.ISymbolReader, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.SymbolStore.SymReader" />
  <TypeSignature Language="VB.NET" Value="Public Class SymReader&#xA;Inherits SymReaderBase&#xA;Implements IDisposable, ISymbolReader" />
  <TypeSignature Language="C++ CLI" Value="public ref class SymReader : System::Diagnostics::SymbolStore::SymReaderBase, IDisposable, System::Diagnostics::SymbolStore::ISymbolReader" />
  <TypeSignature Language="F#" Value="type SymReader = class&#xA;    inherit SymReaderBase&#xA;    interface ISymbolReader&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>ISymWrapper</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Diagnostics.SymbolStore.SymReaderBase</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-1.1">System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Diagnostics.SymbolStore.ISymbolReader</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="08ff1-101">Proporciona acceso a los documentos, métodos y variables incluidos en un almacén de símbolos.</span><span class="sxs-lookup"><span data-stu-id="08ff1-101">Provides access to documents, methods, and variables within a symbol store.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SymReader (ISymUnmanagedReader* pReader);" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor(ISymUnmanagedReader* pReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymReader.#ctor(ISymUnmanagedReader*)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SymReader(ISymUnmanagedReader* pReader);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.SymbolStore.SymReader : nativeptr&lt;ISymUnmanagedReader&gt; -&gt; System.Diagnostics.SymbolStore.SymReader" Usage="new System.Diagnostics.SymbolStore.SymReader pReader" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pReader" Type="ISymUnmanagedReader*" />
      </Parameters>
      <Docs>
        <param name="pReader"><span data-ttu-id="08ff1-102">Puntero a un objeto ISymUnmanagedReader no administrado.</span><span class="sxs-lookup"><span data-stu-id="08ff1-102">A pointer to an unmanaged ISymUnmanagedReader object.</span></span></param>
        <summary><span data-ttu-id="08ff1-103">Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.SymbolStore.SymReader" /> mediante el puntero especificado a un objeto **ISymUnmanagedReader** no administrado.</span><span class="sxs-lookup"><span data-stu-id="08ff1-103">Initializes a new instance of the <see cref="T:System.Diagnostics.SymbolStore.SymReader" /> class by using the specified pointer to an unmanaged **ISymUnmanagedReader** object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="08ff1-104">Normalmente, las instancias de este tipo se obtienen utilizando la <xref:System.Diagnostics.SymbolStore.SymBinder.GetReader%2A> método en lugar de crearlas directamente con este constructor.</span><span class="sxs-lookup"><span data-stu-id="08ff1-104">Typically, instances of this type are obtained by using the <xref:System.Diagnostics.SymbolStore.SymBinder.GetReader%2A> method instead of being created directly with this constructor.</span></span>

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SymReader (System.Diagnostics.SymbolStore.Private.ISymUnmanagedReader* pReader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Diagnostics.SymbolStore.Private.ISymUnmanagedReader* pReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymReader.#ctor(System.Diagnostics.SymbolStore.Private.ISymUnmanagedReader*)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SymReader(System::Diagnostics::SymbolStore::Private::ISymUnmanagedReader* pReader);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.SymbolStore.SymReader : nativeptr&lt;System.Diagnostics.SymbolStore.Private.ISymUnmanagedReader&gt; -&gt; System.Diagnostics.SymbolStore.SymReader" Usage="new System.Diagnostics.SymbolStore.SymReader pReader" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pReader" Type="System.Diagnostics.SymbolStore.Private.ISymUnmanagedReader*" />
      </Parameters>
      <Docs>
        <param name="pReader">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="__dtor">
      <MemberSignature Language="C#" Value="public void __dtor ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance void __dtor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymReader.__dtor" />
      <MemberSignature Language="VB.NET" Value="Public Sub __dtor ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void __dtor();" />
      <MemberSignature Language="F#" Value="member this.__dtor : unit -&gt; unit" Usage="symReader.__dtor " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="08ff1-105">Libera los recursos mantenidos por la instancia actual.</span><span class="sxs-lookup"><span data-stu-id="08ff1-105">Releases the resources held by the current instance.</span></span> <span data-ttu-id="08ff1-106">Este método es solo para uso interno.</span><span class="sxs-lookup"><span data-stu-id="08ff1-106">This method is for internal use only.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="08ff1-107">Use el <xref:System.Diagnostics.SymbolStore.SymReader.Finalize> método para liberar los recursos.</span><span class="sxs-lookup"><span data-stu-id="08ff1-107">Use the <xref:System.Diagnostics.SymbolStore.SymReader.Finalize> method to release resources.</span></span>

]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="{dtor}">
      <MemberSignature Language="C#" Value="public void {dtor} ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance void {dtor}() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymReader.{dtor}" />
      <MemberSignature Language="VB.NET" Value="Public Sub {dtor} ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void {dtor}();" />
      <MemberSignature Language="F#" Value="member this.{dtor} : unit -&gt; unit" Usage="symReader.{dtor} " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="08ff1-108">Libera los recursos mantenidos por la instancia actual.</span><span class="sxs-lookup"><span data-stu-id="08ff1-108">Releases the resources held by the current instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks

<span data-ttu-id="08ff1-109">Use el <xref:System.Diagnostics.SymbolStore.SymReader.Finalize> método para liberar los recursos.</span><span class="sxs-lookup"><span data-stu-id="08ff1-109">Use the <xref:System.Diagnostics.SymbolStore.SymReader.Finalize> method to release resources.</span></span>
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="08ff1-110">Libera los recursos utilizados por la instancia actual de la clase <see cref="T:System.Diagnostics.SymbolStore.SymReader" />.</span><span class="sxs-lookup"><span data-stu-id="08ff1-110">Releases the resources used by the current instance of the <see cref="T:System.Diagnostics.SymbolStore.SymReader" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public override sealed void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymReader.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="symReader.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="08ff1-111">Libera los recursos utilizados por la instancia actual de la clase <see cref="T:System.Diagnostics.SymbolStore.SymReader" />.</span><span class="sxs-lookup"><span data-stu-id="08ff1-111">Releases the resources used by the current instance of the <see cref="T:System.Diagnostics.SymbolStore.SymReader" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool A_0);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool A_0) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymReader.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (A_0 As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool A_0);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="symReader.Dispose A_0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptions</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="A_0" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="A_0"><span data-ttu-id="08ff1-112"><see langword="true" /> para liberar tanto los recursos administrados como los no administrados, <see langword="false" /> para liberar solo los recursos no administrados.</span><span class="sxs-lookup"><span data-stu-id="08ff1-112"><see langword="true" /> to release managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="08ff1-113">Lo llaman los métodos <see cref="M:System.Diagnostics.SymbolStore.SymReader.Dispose" /> y <see cref="M:System.Diagnostics.SymbolStore.SymReader.Finalize" /> para liberar los recursos administrados y no administrados usados por la instancia actual de la clase <see cref="T:System.Diagnostics.SymbolStore.SymReader" />.</span><span class="sxs-lookup"><span data-stu-id="08ff1-113">Called by the <see cref="M:System.Diagnostics.SymbolStore.SymReader.Dispose" /> and <see cref="M:System.Diagnostics.SymbolStore.SymReader.Finalize" /> methods to release the managed and unmanaged resources used by the current instance of the <see cref="T:System.Diagnostics.SymbolStore.SymReader" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="08ff1-114">Se llama a este método solo por el público <xref:System.Diagnostics.SymbolStore.SymReader.Dispose%2A> y <xref:System.Diagnostics.SymbolStore.SymReader.Finalize%2A> métodos; no llame a este método directamente.</span><span class="sxs-lookup"><span data-stu-id="08ff1-114">This method is called only by the public <xref:System.Diagnostics.SymbolStore.SymReader.Dispose%2A> and <xref:System.Diagnostics.SymbolStore.SymReader.Finalize%2A> methods; do not call this method directly.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~SymReader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymReader.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!SymReader ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="symReader.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="08ff1-115">Libera recursos no administrados y realiza otras operaciones de limpieza antes de que se reclame el elemento <see cref="T:System.Diagnostics.SymbolStore.SymReader" /> durante la recolección de elementos no usados.</span><span class="sxs-lookup"><span data-stu-id="08ff1-115">Releases unmanaged resources and performs other cleanup operations before the <see cref="T:System.Diagnostics.SymbolStore.SymReader" /> is reclaimed by garbage collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="08ff1-116">Este método invalida <xref:System.Object.Finalize%2A>.</span><span class="sxs-lookup"><span data-stu-id="08ff1-116">This method overrides  <xref:System.Object.Finalize%2A>.</span></span> <span data-ttu-id="08ff1-117">Código de la aplicación no debe llamar a este método; un objeto `Finalize` método se invoca automáticamente durante la recolección de elementos no utilizados, a menos que se ha deshabilitado la finalización por el recolector de elementos no utilizados mediante una llamada a la <xref:System.GC.SuppressFinalize%2A> método.</span><span class="sxs-lookup"><span data-stu-id="08ff1-117">Application code should not call this method; an object's `Finalize` method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <xref:System.GC.SuppressFinalize%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDocument">
      <MemberSignature Language="C#" Value="public virtual System.Diagnostics.SymbolStore.ISymbolDocument GetDocument (string url, Guid language, Guid languageVendor, Guid documentType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Diagnostics.SymbolStore.ISymbolDocument GetDocument(string url, valuetype System.Guid language, valuetype System.Guid languageVendor, valuetype System.Guid documentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymReader.GetDocument(System.String,System.Guid,System.Guid,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDocument (url As String, language As Guid, languageVendor As Guid, documentType As Guid) As ISymbolDocument" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Diagnostics::SymbolStore::ISymbolDocument ^ GetDocument(System::String ^ url, Guid language, Guid languageVendor, Guid documentType);" />
      <MemberSignature Language="F#" Value="abstract member GetDocument : string * Guid * Guid * Guid -&gt; System.Diagnostics.SymbolStore.ISymbolDocument&#xA;override this.GetDocument : string * Guid * Guid * Guid -&gt; System.Diagnostics.SymbolStore.ISymbolDocument" Usage="symReader.GetDocument (url, language, languageVendor, documentType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.SymbolStore.ISymbolDocument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="language" Type="System.Guid" />
        <Parameter Name="languageVendor" Type="System.Guid" />
        <Parameter Name="documentType" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="url"><span data-ttu-id="08ff1-118">Dirección URL que identifica el documento.</span><span class="sxs-lookup"><span data-stu-id="08ff1-118">The URL that identifies the document.</span></span></param>
        <param name="language"><span data-ttu-id="08ff1-119">Lenguaje del documento.</span><span class="sxs-lookup"><span data-stu-id="08ff1-119">The document language.</span></span> <span data-ttu-id="08ff1-120">Puede especificar este parámetro como <see cref="F:System.Guid.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="08ff1-120">You can specify this parameter as <see cref="F:System.Guid.Empty" />.</span></span> <span data-ttu-id="08ff1-121">para indicar cualquier lenguaje.</span><span class="sxs-lookup"><span data-stu-id="08ff1-121">to indicate any language.</span></span></param>
        <param name="languageVendor"><span data-ttu-id="08ff1-122">Identidad del proveedor del lenguaje del documento.</span><span class="sxs-lookup"><span data-stu-id="08ff1-122">The identity of the vendor for the document language.</span></span> <span data-ttu-id="08ff1-123">Puede especificar este parámetro como <see cref="F:System.Guid.Empty" /> para indicar cualquier proveedor de lenguaje.</span><span class="sxs-lookup"><span data-stu-id="08ff1-123">You can specify this parameter as <see cref="F:System.Guid.Empty" /> to indicate any language vendor.</span></span></param>
        <param name="documentType"><span data-ttu-id="08ff1-124">Tipo del documento.</span><span class="sxs-lookup"><span data-stu-id="08ff1-124">The type of the document.</span></span> <span data-ttu-id="08ff1-125">Puede especificar este parámetro como <see cref="F:System.Guid.Empty" /> para indicar cualquier proveedor de lenguaje.</span><span class="sxs-lookup"><span data-stu-id="08ff1-125">You can specify this parameter as <see cref="F:System.Guid.Empty" /> to indicate any document type.</span></span></param>
        <summary><span data-ttu-id="08ff1-126">Obtiene el documento que especifica la dirección URL para el documento y, de manera opcional, su lenguaje, proveedor de lenguaje y tipo.</span><span class="sxs-lookup"><span data-stu-id="08ff1-126">Gets a document specified by the URL for the document and optionally the language, language vendor, and type.</span></span></summary>
        <returns><span data-ttu-id="08ff1-127">Documento con la dirección URL especificada, si se encuentra en el almacén de símbolos, o <see langword="null" />, si el documento no existe.</span><span class="sxs-lookup"><span data-stu-id="08ff1-127">The document with the specified URL if found in the symbol store, or <see langword="null" /> if the document does not exist.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="08ff1-128">El `language`, `languageVendor`, y `documentType` actualmente se omiten los parámetros.</span><span class="sxs-lookup"><span data-stu-id="08ff1-128">The `language`, `languageVendor`, and `documentType` parameters are currently ignored.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDocuments">
      <MemberSignature Language="C#" Value="public virtual System.Diagnostics.SymbolStore.ISymbolDocument[] GetDocuments ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Diagnostics.SymbolStore.ISymbolDocument[] GetDocuments() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymReader.GetDocuments" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDocuments () As ISymbolDocument()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Diagnostics::SymbolStore::ISymbolDocument ^&gt; ^ GetDocuments();" />
      <MemberSignature Language="F#" Value="abstract member GetDocuments : unit -&gt; System.Diagnostics.SymbolStore.ISymbolDocument[]&#xA;override this.GetDocuments : unit -&gt; System.Diagnostics.SymbolStore.ISymbolDocument[]" Usage="symReader.GetDocuments " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.SymbolStore.ISymbolDocument[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="08ff1-129">Obtiene una matriz de todos los documentos definidos en el almacén de símbolos.</span><span class="sxs-lookup"><span data-stu-id="08ff1-129">Gets an array of all documents defined in the symbol store.</span></span></summary>
        <returns><span data-ttu-id="08ff1-130">Una matriz de todos los documentos definidos en el almacén de símbolos.</span><span class="sxs-lookup"><span data-stu-id="08ff1-130">An array of all documents defined in the symbol store.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="08ff1-131">No hay memoria suficiente para satisfacer la solicitud.</span><span class="sxs-lookup"><span data-stu-id="08ff1-131">There is insufficient memory to satisfy the request.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetGlobalVariables">
      <MemberSignature Language="C#" Value="public virtual System.Diagnostics.SymbolStore.ISymbolVariable[] GetGlobalVariables ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Diagnostics.SymbolStore.ISymbolVariable[] GetGlobalVariables() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymReader.GetGlobalVariables" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetGlobalVariables () As ISymbolVariable()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Diagnostics::SymbolStore::ISymbolVariable ^&gt; ^ GetGlobalVariables();" />
      <MemberSignature Language="F#" Value="abstract member GetGlobalVariables : unit -&gt; System.Diagnostics.SymbolStore.ISymbolVariable[]&#xA;override this.GetGlobalVariables : unit -&gt; System.Diagnostics.SymbolStore.ISymbolVariable[]" Usage="symReader.GetGlobalVariables " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.SymbolStore.ISymbolVariable[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="08ff1-132">Devuelve <see cref="T:System.NotSupportedException" /> en todos los casos</span><span class="sxs-lookup"><span data-stu-id="08ff1-132">Throws a <see cref="T:System.NotSupportedException" /> in all cases.</span></span></summary>
        <returns><span data-ttu-id="08ff1-133">Devuelve <see cref="T:System.NotSupportedException" /> en todos los casos</span><span class="sxs-lookup"><span data-stu-id="08ff1-133">Throws a <see cref="T:System.NotSupportedException" /> in all cases.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="08ff1-134">En todos los casos.</span><span class="sxs-lookup"><span data-stu-id="08ff1-134">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetMethod">
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="08ff1-135">Obtiene un objeto del método del lector de símbolos.</span><span class="sxs-lookup"><span data-stu-id="08ff1-135">Gets a symbol reader method object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetMethod">
      <MemberSignature Language="C#" Value="public virtual System.Diagnostics.SymbolStore.ISymbolMethod GetMethod (System.Diagnostics.SymbolStore.SymbolToken method);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Diagnostics.SymbolStore.ISymbolMethod GetMethod(valuetype System.Diagnostics.SymbolStore.SymbolToken method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymReader.GetMethod(System.Diagnostics.SymbolStore.SymbolToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMethod (method As SymbolToken) As ISymbolMethod" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Diagnostics::SymbolStore::ISymbolMethod ^ GetMethod(System::Diagnostics::SymbolStore::SymbolToken method);" />
      <MemberSignature Language="F#" Value="abstract member GetMethod : System.Diagnostics.SymbolStore.SymbolToken -&gt; System.Diagnostics.SymbolStore.ISymbolMethod&#xA;override this.GetMethod : System.Diagnostics.SymbolStore.SymbolToken -&gt; System.Diagnostics.SymbolStore.ISymbolMethod" Usage="symReader.GetMethod method" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.SymbolStore.ISymbolMethod</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Diagnostics.SymbolStore.SymbolToken" />
      </Parameters>
      <Docs>
        <param name="method"><span data-ttu-id="08ff1-136">Símbolo (token) de metadatos del método.</span><span class="sxs-lookup"><span data-stu-id="08ff1-136">The metadata token of the method.</span></span></param>
        <summary><span data-ttu-id="08ff1-137">Obtiene un objeto del método del lector de símbolos cuando se especifica el identificador de un método.</span><span class="sxs-lookup"><span data-stu-id="08ff1-137">Gets a symbol reader method object when given the identifier of a method.</span></span></summary>
        <returns><span data-ttu-id="08ff1-138">Objeto del método del lector de símbolos para el identificador de método especificado.</span><span class="sxs-lookup"><span data-stu-id="08ff1-138">The symbol reader method object for the specified method identifier.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMethod">
      <MemberSignature Language="C#" Value="public virtual System.Diagnostics.SymbolStore.ISymbolMethod GetMethod (System.Diagnostics.SymbolStore.SymbolToken method, int version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Diagnostics.SymbolStore.ISymbolMethod GetMethod(valuetype System.Diagnostics.SymbolStore.SymbolToken method, int32 version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymReader.GetMethod(System.Diagnostics.SymbolStore.SymbolToken,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMethod (method As SymbolToken, version As Integer) As ISymbolMethod" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Diagnostics::SymbolStore::ISymbolMethod ^ GetMethod(System::Diagnostics::SymbolStore::SymbolToken method, int version);" />
      <MemberSignature Language="F#" Value="abstract member GetMethod : System.Diagnostics.SymbolStore.SymbolToken * int -&gt; System.Diagnostics.SymbolStore.ISymbolMethod&#xA;override this.GetMethod : System.Diagnostics.SymbolStore.SymbolToken * int -&gt; System.Diagnostics.SymbolStore.ISymbolMethod" Usage="symReader.GetMethod (method, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.SymbolStore.ISymbolMethod</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Diagnostics.SymbolStore.SymbolToken" />
        <Parameter Name="version" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="method"><span data-ttu-id="08ff1-139">Símbolo (token) de metadatos del método.</span><span class="sxs-lookup"><span data-stu-id="08ff1-139">The metadata token of the method.</span></span></param>
        <param name="version"><span data-ttu-id="08ff1-140">Versión de edición y continuación del método.</span><span class="sxs-lookup"><span data-stu-id="08ff1-140">The edit and continue version of the method.</span></span></param>
        <summary><span data-ttu-id="08ff1-141">Obtiene un objeto del método del lector de símbolos cuando se especifica el identificador de un método y su versión de edición y continuación.</span><span class="sxs-lookup"><span data-stu-id="08ff1-141">Gets a symbol reader method object when given the identifier of a method and its edit and continue version.</span></span></summary>
        <returns><span data-ttu-id="08ff1-142">Objeto del método del lector de símbolos para la versión y el identificador del método especificados.</span><span class="sxs-lookup"><span data-stu-id="08ff1-142">The symbol reader method object for the specified method identifier and version.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMethodFromDocumentPosition">
      <MemberSignature Language="C#" Value="public virtual System.Diagnostics.SymbolStore.ISymbolMethod GetMethodFromDocumentPosition (System.Diagnostics.SymbolStore.ISymbolDocument document, int line, int column);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Diagnostics.SymbolStore.ISymbolMethod GetMethodFromDocumentPosition(class System.Diagnostics.SymbolStore.ISymbolDocument document, int32 line, int32 column) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymReader.GetMethodFromDocumentPosition(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMethodFromDocumentPosition (document As ISymbolDocument, line As Integer, column As Integer) As ISymbolMethod" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Diagnostics::SymbolStore::ISymbolMethod ^ GetMethodFromDocumentPosition(System::Diagnostics::SymbolStore::ISymbolDocument ^ document, int line, int column);" />
      <MemberSignature Language="F#" Value="abstract member GetMethodFromDocumentPosition : System.Diagnostics.SymbolStore.ISymbolDocument * int * int -&gt; System.Diagnostics.SymbolStore.ISymbolMethod&#xA;override this.GetMethodFromDocumentPosition : System.Diagnostics.SymbolStore.ISymbolDocument * int * int -&gt; System.Diagnostics.SymbolStore.ISymbolMethod" Usage="symReader.GetMethodFromDocumentPosition (document, line, column)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.SymbolStore.ISymbolMethod</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="document" Type="System.Diagnostics.SymbolStore.ISymbolDocument" />
        <Parameter Name="line" Type="System.Int32" />
        <Parameter Name="column" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="document"><span data-ttu-id="08ff1-143">Documento en el que está ubicado el método.</span><span class="sxs-lookup"><span data-stu-id="08ff1-143">The document in which the method is located.</span></span></param>
        <param name="line"><span data-ttu-id="08ff1-144">Posición de la línea dentro del documento.</span><span class="sxs-lookup"><span data-stu-id="08ff1-144">The position of the line within the document.</span></span> <span data-ttu-id="08ff1-145">Las líneas están numeradas, comenzando por 1.</span><span class="sxs-lookup"><span data-stu-id="08ff1-145">The lines are numbered, beginning with 1.</span></span></param>
        <param name="column"><span data-ttu-id="08ff1-146">Posición de la columna dentro del documento.</span><span class="sxs-lookup"><span data-stu-id="08ff1-146">The position of column within the document.</span></span> <span data-ttu-id="08ff1-147">Las columnas están numeradas, comenzando por 1.</span><span class="sxs-lookup"><span data-stu-id="08ff1-147">The columns are numbered, beginning with 1.</span></span></param>
        <summary><span data-ttu-id="08ff1-148">Obtiene un objeto del método del lector de símbolos que contiene una posición especificada en un documento.</span><span class="sxs-lookup"><span data-stu-id="08ff1-148">Gets a symbol reader method object that contains a specified position in a document.</span></span></summary>
        <returns><span data-ttu-id="08ff1-149">Objeto del método del lector de símbolos para la posición especificada en el documento.</span><span class="sxs-lookup"><span data-stu-id="08ff1-149">The symbol reader method object for the specified position in the document.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNamespaces">
      <MemberSignature Language="C#" Value="public virtual System.Diagnostics.SymbolStore.ISymbolNamespace[] GetNamespaces ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Diagnostics.SymbolStore.ISymbolNamespace[] GetNamespaces() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymReader.GetNamespaces" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNamespaces () As ISymbolNamespace()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Diagnostics::SymbolStore::ISymbolNamespace ^&gt; ^ GetNamespaces();" />
      <MemberSignature Language="F#" Value="abstract member GetNamespaces : unit -&gt; System.Diagnostics.SymbolStore.ISymbolNamespace[]&#xA;override this.GetNamespaces : unit -&gt; System.Diagnostics.SymbolStore.ISymbolNamespace[]" Usage="symReader.GetNamespaces " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.SymbolStore.ISymbolNamespace[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="08ff1-150">Devuelve <see cref="T:System.NotSupportedException" /> en todos los casos</span><span class="sxs-lookup"><span data-stu-id="08ff1-150">Throws a <see cref="T:System.NotSupportedException" /> in all cases.</span></span></summary>
        <returns><span data-ttu-id="08ff1-151">Devuelve <see cref="T:System.NotSupportedException" /> en todos los casos</span><span class="sxs-lookup"><span data-stu-id="08ff1-151">Throws a <see cref="T:System.NotSupportedException" /> in all cases.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="08ff1-152">En todos los casos.</span><span class="sxs-lookup"><span data-stu-id="08ff1-152">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetSymAttribute">
      <MemberSignature Language="C#" Value="public virtual byte[] GetSymAttribute (System.Diagnostics.SymbolStore.SymbolToken parent, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] GetSymAttribute(valuetype System.Diagnostics.SymbolStore.SymbolToken parent, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymReader.GetSymAttribute(System.Diagnostics.SymbolStore.SymbolToken,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSymAttribute (parent As SymbolToken, name As String) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ GetSymAttribute(System::Diagnostics::SymbolStore::SymbolToken parent, System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member GetSymAttribute : System.Diagnostics.SymbolStore.SymbolToken * string -&gt; byte[]&#xA;override this.GetSymAttribute : System.Diagnostics.SymbolStore.SymbolToken * string -&gt; byte[]" Usage="symReader.GetSymAttribute (parent, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parent" Type="System.Diagnostics.SymbolStore.SymbolToken" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="parent"><span data-ttu-id="08ff1-153">Este parámetro no se utiliza.</span><span class="sxs-lookup"><span data-stu-id="08ff1-153">This parameter is not used.</span></span></param>
        <param name="name"><span data-ttu-id="08ff1-154">Este parámetro no se utiliza.</span><span class="sxs-lookup"><span data-stu-id="08ff1-154">This parameter is not used.</span></span></param>
        <summary><span data-ttu-id="08ff1-155">Devuelve <see cref="T:System.NotSupportedException" /> en todos los casos</span><span class="sxs-lookup"><span data-stu-id="08ff1-155">Throws a <see cref="T:System.NotSupportedException" /> in all cases.</span></span></summary>
        <returns><span data-ttu-id="08ff1-156">Devuelve <see cref="T:System.NotSupportedException" /> en todos los casos</span><span class="sxs-lookup"><span data-stu-id="08ff1-156">Throws a <see cref="T:System.NotSupportedException" /> in all cases.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="08ff1-157">En todos los casos.</span><span class="sxs-lookup"><span data-stu-id="08ff1-157">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetVariables">
      <MemberSignature Language="C#" Value="public virtual System.Diagnostics.SymbolStore.ISymbolVariable[] GetVariables (System.Diagnostics.SymbolStore.SymbolToken parent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Diagnostics.SymbolStore.ISymbolVariable[] GetVariables(valuetype System.Diagnostics.SymbolStore.SymbolToken parent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymReader.GetVariables(System.Diagnostics.SymbolStore.SymbolToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVariables (parent As SymbolToken) As ISymbolVariable()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Diagnostics::SymbolStore::ISymbolVariable ^&gt; ^ GetVariables(System::Diagnostics::SymbolStore::SymbolToken parent);" />
      <MemberSignature Language="F#" Value="abstract member GetVariables : System.Diagnostics.SymbolStore.SymbolToken -&gt; System.Diagnostics.SymbolStore.ISymbolVariable[]&#xA;override this.GetVariables : System.Diagnostics.SymbolStore.SymbolToken -&gt; System.Diagnostics.SymbolStore.ISymbolVariable[]" Usage="symReader.GetVariables parent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.SymbolStore.ISymbolVariable[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parent" Type="System.Diagnostics.SymbolStore.SymbolToken" />
      </Parameters>
      <Docs>
        <param name="parent"><span data-ttu-id="08ff1-158">Este parámetro no se utiliza.</span><span class="sxs-lookup"><span data-stu-id="08ff1-158">This parameter is not used.</span></span></param>
        <summary><span data-ttu-id="08ff1-159">Devuelve <see cref="T:System.NotSupportedException" /> en todos los casos</span><span class="sxs-lookup"><span data-stu-id="08ff1-159">Throws a <see cref="T:System.NotSupportedException" /> in all cases.</span></span></summary>
        <returns><span data-ttu-id="08ff1-160">Devuelve <see cref="T:System.NotSupportedException" /> en todos los casos</span><span class="sxs-lookup"><span data-stu-id="08ff1-160">Throws a <see cref="T:System.NotSupportedException" /> in all cases.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="08ff1-161">En todos los casos.</span><span class="sxs-lookup"><span data-stu-id="08ff1-161">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReplaceSymbolStore">
      <MemberSignature Language="C#" Value="public virtual void ReplaceSymbolStore (string fileName, IntPtr stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReplaceSymbolStore(string fileName, native int stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymReader.ReplaceSymbolStore(System.String,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ReplaceSymbolStore (fileName As String, stream As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ReplaceSymbolStore(System::String ^ fileName, IntPtr stream);" />
      <MemberSignature Language="F#" Value="abstract member ReplaceSymbolStore : string * nativeint -&gt; unit&#xA;override this.ReplaceSymbolStore : string * nativeint -&gt; unit" Usage="symReader.ReplaceSymbolStore (fileName, stream)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="stream" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="08ff1-162">Nombre del archivo que contiene el almacén de símbolos o <see langword="null" /> si se usa un usa en memoria.</span><span class="sxs-lookup"><span data-stu-id="08ff1-162">The name of the file containing the symbol store, or <see langword="null" /> if using an in-memory store.</span></span></param>
        <param name="stream"><span data-ttu-id="08ff1-163">Puntero de la secuencia de entrada para el almacén de símbolos o <see cref="F:System.IntPtr.Zero" /> si se usa un almacén en disco.</span><span class="sxs-lookup"><span data-stu-id="08ff1-163">The pointer to the input stream for the symbol store, or <see cref="F:System.IntPtr.Zero" /> if using an on-disk store.</span></span></param>
        <summary><span data-ttu-id="08ff1-164">Reemplaza el almacén de símbolos existente con un almacén de símbolos delta.</span><span class="sxs-lookup"><span data-stu-id="08ff1-164">Replaces the existing symbol store with a delta symbol store.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="08ff1-165">El <xref:System.Diagnostics.SymbolStore.SymReader.ReplaceSymbolStore%2A> es muy similar a la <xref:System.Diagnostics.SymbolStore.SymReader.UpdateSymbolStore%2A> método pero el delta especificado actúa como un reemplazo completo en lugar de una actualización.</span><span class="sxs-lookup"><span data-stu-id="08ff1-165">The <xref:System.Diagnostics.SymbolStore.SymReader.ReplaceSymbolStore%2A> is much like the <xref:System.Diagnostics.SymbolStore.SymReader.UpdateSymbolStore%2A> method, but the given delta acts as a complete replacement rather than an update.</span></span>  
  
 <span data-ttu-id="08ff1-166">Solo uno de los parámetros, `fileName` o `stream`, debe especificarse.</span><span class="sxs-lookup"><span data-stu-id="08ff1-166">Only one of the parameters, `fileName` or `stream`, needs to be specified.</span></span> <span data-ttu-id="08ff1-167">Si `fileName` se especifica, el almacén de símbolos se actualiza con los símbolos de ese archivo.</span><span class="sxs-lookup"><span data-stu-id="08ff1-167">If `fileName` is specified, the symbol store is updated with the symbols in that file.</span></span> <span data-ttu-id="08ff1-168">Si `stream` se especifica, el almacén de símbolos se actualiza con los datos de la <xref:System.Runtime.InteropServices.ComTypes.IStream> .</span><span class="sxs-lookup"><span data-stu-id="08ff1-168">If `stream` is specified, the symbol store is updated with the data from the <xref:System.Runtime.InteropServices.ComTypes.IStream> .</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateSymbolStore">
      <MemberSignature Language="C#" Value="public virtual void UpdateSymbolStore (string fileName, IntPtr stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateSymbolStore(string fileName, native int stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymReader.UpdateSymbolStore(System.String,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub UpdateSymbolStore (fileName As String, stream As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void UpdateSymbolStore(System::String ^ fileName, IntPtr stream);" />
      <MemberSignature Language="F#" Value="abstract member UpdateSymbolStore : string * nativeint -&gt; unit&#xA;override this.UpdateSymbolStore : string * nativeint -&gt; unit" Usage="symReader.UpdateSymbolStore (fileName, stream)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="stream" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="08ff1-169">Nombre del archivo que contiene el almacén de símbolos o <see langword="null" /> si se usa un usa en memoria.</span><span class="sxs-lookup"><span data-stu-id="08ff1-169">The name of the file containing the symbol store, or <see langword="null" /> if using an in-memory store.</span></span></param>
        <param name="stream"><span data-ttu-id="08ff1-170">Puntero de la secuencia de entrada para el almacén de símbolos o <see cref="F:System.IntPtr.Zero" /> si se usa un almacén en disco.</span><span class="sxs-lookup"><span data-stu-id="08ff1-170">The pointer to the input stream for the symbol store, or <see cref="F:System.IntPtr.Zero" /> if using an on-disk store.</span></span></param>
        <summary><span data-ttu-id="08ff1-171">Actualiza el almacén de símbolos existente con un almacén de símbolos delta.</span><span class="sxs-lookup"><span data-stu-id="08ff1-171">Updates the existing symbol store with a delta symbol store.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="08ff1-172">Este método se usa en escenarios de editar y continuar como una manera de actualizar el almacén de símbolos para que coincida con deltas en el archivo PE original.</span><span class="sxs-lookup"><span data-stu-id="08ff1-172">This method is used in Edit and Continue scenarios as a way to update the symbol store to match deltas to the original PE file.</span></span>  
  
 <span data-ttu-id="08ff1-173">Solo uno de los parámetros, `fileName` o `stream`, debe especificarse.</span><span class="sxs-lookup"><span data-stu-id="08ff1-173">Only one of the parameters, `fileName` or `stream`, needs to be specified.</span></span> <span data-ttu-id="08ff1-174">Si `fileName` se especifica, el almacén de símbolos se actualiza con los símbolos de ese archivo.</span><span class="sxs-lookup"><span data-stu-id="08ff1-174">If `fileName` is specified, the symbol store is updated with the symbols in that file.</span></span> <span data-ttu-id="08ff1-175">Si `stream` se especifica, el almacén de símbolos se actualiza con los datos de la <xref:System.Runtime.InteropServices.ComTypes.IStream> .</span><span class="sxs-lookup"><span data-stu-id="08ff1-175">If `stream` is specified, the symbol store is updated with the data from the <xref:System.Runtime.InteropServices.ComTypes.IStream> .</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UserEntryPoint">
      <MemberSignature Language="C#" Value="public virtual System.Diagnostics.SymbolStore.SymbolToken UserEntryPoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Diagnostics.SymbolStore.SymbolToken UserEntryPoint" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.SymbolStore.SymReader.UserEntryPoint" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property UserEntryPoint As SymbolToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Diagnostics::SymbolStore::SymbolToken UserEntryPoint { System::Diagnostics::SymbolStore::SymbolToken get(); };" />
      <MemberSignature Language="F#" Value="member this.UserEntryPoint : System.Diagnostics.SymbolStore.SymbolToken" Usage="System.Diagnostics.SymbolStore.SymReader.UserEntryPoint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.SymbolStore.SymbolToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="08ff1-176">Obtiene el símbolo (token) de metadatos del método especificado como punto de entrada del usuario para el módulo, en caso de que haya alguno.</span><span class="sxs-lookup"><span data-stu-id="08ff1-176">Gets the metadata token for the method that was specified as the user entry point for the module, if any.</span></span></summary>
        <value><span data-ttu-id="08ff1-177">Símbolo (token) de metadatos del método que constituye el punto de entrada para el módulo.</span><span class="sxs-lookup"><span data-stu-id="08ff1-177">The metadata token for the method that is the user entry point for the module.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="08ff1-178">El valor devuelto es normalmente el método main.</span><span class="sxs-lookup"><span data-stu-id="08ff1-178">The return value is normally the main method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="08ff1-179">No se encontró un punto de entrada.</span><span class="sxs-lookup"><span data-stu-id="08ff1-179">An entry point was not found.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
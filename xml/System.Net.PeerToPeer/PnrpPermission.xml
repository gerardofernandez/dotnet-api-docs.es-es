<Type Name="PnrpPermission" FullName="System.Net.PeerToPeer.PnrpPermission">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7eb19c1a4766825699a4a0659d4cb7fec6503ba2" /><Meta Name="ms.sourcegitcommit" Value="220917117f9d774aaa482439aa7324e39dc1f5b6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="02/25/2019" /><Meta Name="ms.locfileid" Value="56762916" /></Metadata><TypeSignature Language="C#" Value="public sealed class PnrpPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit PnrpPermission extends System.Security.CodeAccessPermission implements class System.Security.Permissions.IUnrestrictedPermission" />
  <TypeSignature Language="DocId" Value="T:System.Net.PeerToPeer.PnrpPermission" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PnrpPermission&#xA;Inherits CodeAccessPermission&#xA;Implements IUnrestrictedPermission" />
  <TypeSignature Language="C++ CLI" Value="public ref class PnrpPermission sealed : System::Security::CodeAccessPermission, System::Security::Permissions::IUnrestrictedPermission" />
  <TypeSignature Language="F#" Value="type PnrpPermission = class&#xA;    inherit CodeAccessPermission&#xA;    interface IUnrestrictedPermission" />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.CodeAccessPermission</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Security.Permissions.IUnrestrictedPermission</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="3f06c-101">Especifica los valores que se usan en los permisos del objeto <see cref="N:System.Net.PeerToPeer" />.</span><span class="sxs-lookup"><span data-stu-id="3f06c-101">Specifies the values that are used in <see cref="N:System.Net.PeerToPeer" /> object permissions.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f06c-102">Los permisos predeterminados permiten todas las locales y aplicaciones de la zona de Intranet para tener acceso a servicios PNRP.</span><span class="sxs-lookup"><span data-stu-id="3f06c-102">The default permissions allow all local and Intranet zone applications to access PNRP services.</span></span> <span data-ttu-id="3f06c-103">Si no se cambian los permisos predeterminados, todas las aplicaciones locales de vínculo y local del sitio tienen acceso a los servicios de punto a punto, pero las aplicaciones globales (internet) no tienen acceso.</span><span class="sxs-lookup"><span data-stu-id="3f06c-103">If the default permissions are not changed, all link-local and site-local applications have access to Peer-to-Peer services, but global (internet) applications have no access.</span></span>  
  
 <span data-ttu-id="3f06c-104">Las instancias de este tipo tienen dos Estados de permiso: no tienen ningún acceso a los recursos protegidos por el permiso o tienen acceso completo sin restricciones a esos recursos.</span><span class="sxs-lookup"><span data-stu-id="3f06c-104">Instances of this type have two permission states: they either have no access to the resource(s) protected by the permission, or they have unrestricted full access to those resources.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Copy" />
    <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.FromXml(System.Security.SecurityElement)" />
    <altmember cref="T:System.Net.PeerToPeer.PnrpPermissionAttribute" />
    <altmember cref="N:System.Security.Permissions" />
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink?LinkID=92731"><span data-ttu-id="3f06c-105">API del proveedor de PNRP Namespace</span><span class="sxs-lookup"><span data-stu-id="3f06c-105">PNRP Namespace Provider API</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PnrpPermission (System.Security.Permissions.PermissionState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.PermissionState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.#ctor(System.Security.Permissions.PermissionState)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (state As PermissionState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PnrpPermission(System::Security::Permissions::PermissionState state);" />
      <MemberSignature Language="F#" Value="new System.Net.PeerToPeer.PnrpPermission : System.Security.Permissions.PermissionState -&gt; System.Net.PeerToPeer.PnrpPermission" Usage="new System.Net.PeerToPeer.PnrpPermission state" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="state" Type="System.Security.Permissions.PermissionState" />
      </Parameters>
      <Docs>
        <param name="state"><span data-ttu-id="3f06c-106">Uno de los valores de la enumeración <see cref="T:System.Security.Permissions.PermissionState" />.</span><span class="sxs-lookup"><span data-stu-id="3f06c-106">One of the values in the <see cref="T:System.Security.Permissions.PermissionState" /> enumeration.</span></span></param>
        <summary><span data-ttu-id="3f06c-107">Inicializa una nueva instancia de la clase <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> con el estado de permiso inicial suministrado.</span><span class="sxs-lookup"><span data-stu-id="3f06c-107">Initializes a new instance of the <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> class with the supplied initial permission state.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f06c-108">Las instancias de este tipo tienen dos Estados de permiso: no tienen ningún acceso a los recursos protegidos por el permiso o tienen acceso completo sin restricciones a esos recursos.</span><span class="sxs-lookup"><span data-stu-id="3f06c-108">Instances of this type have two permission states: they either have no access to the resource(s) protected by the permission, or they have unrestricted full access to those resources.</span></span>  
  
 <span data-ttu-id="3f06c-109">Si `state` es sin restricciones, la instancia de PnrpPermission pasa todas las peticiones.</span><span class="sxs-lookup"><span data-stu-id="3f06c-109">If `state` is Unrestricted, the PnrpPermission instance passes all demands.</span></span> <span data-ttu-id="3f06c-110">Si `state` contiene cualquier otro valor, se produce un error en la instancia de PnrpPermission todas las peticiones.</span><span class="sxs-lookup"><span data-stu-id="3f06c-110">If `state` contains any other value, the PnrpPermission instance fails all demands.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Copy" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.IsUnrestricted" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.ToXml" />
        <altmember cref="T:System.Net.PeerToPeer.PnrpPermissionAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Copy () As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Copy();" />
      <MemberSignature Language="F#" Value="override this.Copy : unit -&gt; System.Security.IPermission" Usage="pnrpPermission.Copy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3f06c-111">Crea y devuelve una copia idéntica del objeto <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> actual.</span><span class="sxs-lookup"><span data-stu-id="3f06c-111">Creates and returns an identical copy of the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" />.</span></span></summary>
        <returns><span data-ttu-id="3f06c-112">Objeto con una interfaz IPermission cuya instancia contiene una copia de la instancia actual de <see cref="T:System.Net.PeerToPeer.PnrpPermission" />.</span><span class="sxs-lookup"><span data-stu-id="3f06c-112">An object with an IPermission interface, whose instance contains a copy of the current instance of <see cref="T:System.Net.PeerToPeer.PnrpPermission" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f06c-113">Una copia de un permiso representa el mismo acceso a los recursos que el permiso original.</span><span class="sxs-lookup"><span data-stu-id="3f06c-113">A copy of a permission represents the same access to resources as the original permission.</span></span>  
  
 <span data-ttu-id="3f06c-114">Las instancias de este tipo tienen dos Estados de permiso: no tienen ningún acceso a los recursos protegidos por el permiso o tienen acceso completo sin restricciones a esos recursos.</span><span class="sxs-lookup"><span data-stu-id="3f06c-114">Instances of this type have two permission states: they either have no access to the resource(s) protected by the permission, or they have unrestricted full access to those resources.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3f06c-115">-   El parámetro no es un elemento <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> válido.</span><span class="sxs-lookup"><span data-stu-id="3f06c-115">-   The parameter is not a valid <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> element.</span></span>  
  
<span data-ttu-id="3f06c-116">-   No se admite el número de la versión del parámetro.</span><span class="sxs-lookup"><span data-stu-id="3f06c-116">-   The parameter's version number is not supported.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3f06c-117">El parámetro es una referencia <see langword="null" /> (<see langword="Nothing" /> en Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="3f06c-117">The parameter is a <see langword="null" /> reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.FromXml(System.Security.SecurityElement)" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.ToXml" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink?LinkID=92731"><span data-ttu-id="3f06c-118">API del proveedor de PNRP Namespace</span><span class="sxs-lookup"><span data-stu-id="3f06c-118">PNRP Namespace Provider API</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FromXml">
      <MemberSignature Language="C#" Value="public override void FromXml (System.Security.SecurityElement e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void FromXml(class System.Security.SecurityElement e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.FromXml(System.Security.SecurityElement)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub FromXml (e As SecurityElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void FromXml(System::Security::SecurityElement ^ e);" />
      <MemberSignature Language="F#" Value="override this.FromXml : System.Security.SecurityElement -&gt; unit" Usage="pnrpPermission.FromXml e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Security.SecurityElement" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="3f06c-119">Codificación XML que se usa para reconstruir el permiso.</span><span class="sxs-lookup"><span data-stu-id="3f06c-119">The XML encoding to use to reconstruct the permission.</span></span></param>
        <summary><span data-ttu-id="3f06c-120">Reconstruye un objeto de seguridad con un estado especificado a partir de codificación XML.</span><span class="sxs-lookup"><span data-stu-id="3f06c-120">Reconstructs a security object with a specified state from an XML encoding.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f06c-121">Representa el modelo de objetos XML para codificar objetos de seguridad.</span><span class="sxs-lookup"><span data-stu-id="3f06c-121">Represents the XML object model for encoding security objects.</span></span> <span data-ttu-id="3f06c-122">Esta clase no puede heredarse.</span><span class="sxs-lookup"><span data-stu-id="3f06c-122">This class cannot be inherited.</span></span>  
  
 <span data-ttu-id="3f06c-123">Esta clase está diseñada para ser una implementación ligera de un modelo de objetos XML simple para su uso en el sistema de seguridad y no para su uso como un modelo de objetos XML general.</span><span class="sxs-lookup"><span data-stu-id="3f06c-123">This class is intended to be a lightweight implementation of a simple XML object model for use within the security system, and not for use as a general XML object model.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3f06c-124">-   El parámetro no es un elemento <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> válido.</span><span class="sxs-lookup"><span data-stu-id="3f06c-124">-   The parameter is not a valid <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> element.</span></span>  
  
<span data-ttu-id="3f06c-125">-   No se admite el número de la versión del parámetro.</span><span class="sxs-lookup"><span data-stu-id="3f06c-125">-   The parameter's version number is not supported.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3f06c-126">El parámetro es una referencia <see langword="null" /> (<see langword="Nothing" /> en Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="3f06c-126">The parameter is a <see langword="null" /> reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Copy" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.ToXml" />
        <altmember cref="T:System.Security.SecurityElement" />
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Intersect (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Intersect(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Intersect (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Intersect(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="override this.Intersect : System.Security.IPermission -&gt; System.Security.IPermission" Usage="pnrpPermission.Intersect target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="3f06c-127">Permiso para el método <see cref="M:System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)" /> con el permiso actual.</span><span class="sxs-lookup"><span data-stu-id="3f06c-127">A permission to <see cref="M:System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)" /> with the current permission.</span></span> <span data-ttu-id="3f06c-128">Debe ser del mismo tipo que el permiso actual.</span><span class="sxs-lookup"><span data-stu-id="3f06c-128">It must be of the same type as the current permission.</span></span></param>
        <summary><span data-ttu-id="3f06c-129">Crea y devuelve un permiso que es la intersección entre el objeto <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> actual y el permiso especificado.</span><span class="sxs-lookup"><span data-stu-id="3f06c-129">Creates and returns a permission that is the intersection of the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> and the specified permission.</span></span></summary>
        <returns><span data-ttu-id="3f06c-130">Nuevo permiso que representa la intersección entre el objeto <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> actual y el permiso especificado.</span><span class="sxs-lookup"><span data-stu-id="3f06c-130">A new permission that represents the intersection of the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> and the specified permission.</span></span> <span data-ttu-id="3f06c-131">Este nuevo permiso es una referencia <see langword="null" /> (<see langword="Nothing" /> en Visual Basic) si la intersección está vacía.</span><span class="sxs-lookup"><span data-stu-id="3f06c-131">This new permission is a <see langword="null" /> reference (<see langword="Nothing" /> in Visual Basic) if the intersection is empty.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f06c-132">La intersección de dos permisos es un permiso que describe el conjunto de operaciones descritas en ambos.</span><span class="sxs-lookup"><span data-stu-id="3f06c-132">The intersection of two permissions is a permission that describes the set of operations they both describe in common.</span></span> <span data-ttu-id="3f06c-133">Sólo una petición que pase ambos permisos originales pasará la intersección.</span><span class="sxs-lookup"><span data-stu-id="3f06c-133">Only a demand that passes both original permissions will pass the intersection.</span></span>  
  
 <span data-ttu-id="3f06c-134">Las siguientes instrucciones tienen que ser `true` para todas las implementaciones del método Intersect.</span><span class="sxs-lookup"><span data-stu-id="3f06c-134">The following statements are required to be `true` for all implementations of the Intersect method.</span></span> <span data-ttu-id="3f06c-135">X e Y representan <xref:System.Security.IPermission> referencias a objetos que no son un `null` referencia (Nothing en Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="3f06c-135">X and Y represent <xref:System.Security.IPermission> object references that are not a `null` reference (Nothing in Visual Basic).</span></span>  
  
-   <span data-ttu-id="3f06c-136">X.Intersect (x) devuelve un valor igual a X.</span><span class="sxs-lookup"><span data-stu-id="3f06c-136">X.Intersect(X) returns a value equal to X.</span></span>  
  
-   <span data-ttu-id="3f06c-137">X.Intersect (y) devuelve el mismo valor que y.Intersect (x).</span><span class="sxs-lookup"><span data-stu-id="3f06c-137">X.Intersect(Y) returns the same value as Y.Intersect(X).</span></span>  
  
-   <span data-ttu-id="3f06c-138">X.Intersect (una `null` referencia (`Nothing` en Visual Basic)) devuelve un `null` referencia (`Nothing` en Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="3f06c-138">X.Intersect(a `null` reference (`Nothing` in Visual Basic)) returns a `null` reference (`Nothing` in Visual Basic).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3f06c-139">El parámetro de destino no es una referencia <see langword="null" /> (<see langword="Nothing" /> en Visual Basic) y no es una instancia de la misma clase que el permiso actual.</span><span class="sxs-lookup"><span data-stu-id="3f06c-139">The target parameter is not a <see langword="null" /> reference (<see langword="Nothing" /> in Visual Basic) and is not an instance of the same class as the current permission.</span></span></exception>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.IsSubsetOf(System.Security.IPermission)" />
        <altmember cref="T:System.Net.PeerToPeer.PnrpPermissionAttribute" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)" />
      </Docs>
    </Member>
    <Member MemberName="IsSubsetOf">
      <MemberSignature Language="C#" Value="public override bool IsSubsetOf (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsSubsetOf(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.IsSubsetOf(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsSubsetOf (target As IPermission) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsSubsetOf(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="override this.IsSubsetOf : System.Security.IPermission -&gt; bool" Usage="pnrpPermission.IsSubsetOf target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="3f06c-140">Permiso que se va a probar para la relación del subconjunto.</span><span class="sxs-lookup"><span data-stu-id="3f06c-140">A permission that is to be tested for the subset relationship.</span></span> <span data-ttu-id="3f06c-141">Este permiso debe ser del mismo tipo que el permiso actual.</span><span class="sxs-lookup"><span data-stu-id="3f06c-141">This permission must be of the same type as the current permission.</span></span></param>
        <summary><span data-ttu-id="3f06c-142">Determina si el objeto <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> actual es un subconjunto del permiso especificado.</span><span class="sxs-lookup"><span data-stu-id="3f06c-142">Determines whether the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> is a subset of the specified permission.</span></span></summary>
        <returns><span data-ttu-id="3f06c-143"><see langword="true" /> si el objeto <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> actual es un subconjunto del permiso especificado; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="3f06c-143"><see langword="true" /> if the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> is a subset of the specified permission; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f06c-144">Actual <xref:System.Net.PeerToPeer.PnrpPermission> es un subconjunto del permiso especificado si el permiso actual especifica un conjunto de operaciones que está incluido completamente por el permiso especificado.</span><span class="sxs-lookup"><span data-stu-id="3f06c-144">The current <xref:System.Net.PeerToPeer.PnrpPermission> is a subset of the specified permission if the current permission specifies a set of operations that is wholly contained by the specified permission.</span></span> <span data-ttu-id="3f06c-145">Por ejemplo, un permiso que representa el acceso a "*C:\example.txt*"es un subconjunto de un permiso que representa el acceso a"*C:\\*".</span><span class="sxs-lookup"><span data-stu-id="3f06c-145">For example, a permission that represents access to "*C:\example.txt*" is a subset of a permission that represents access to "*C:\\*".</span></span> <span data-ttu-id="3f06c-146">Si este método devuelve `true`, el permiso actual no representa ningún más acceso al recurso protegido que tiene el permiso especificado.</span><span class="sxs-lookup"><span data-stu-id="3f06c-146">If this method returns `true`, the current permission represents no more access to the protected resource than does the specified permission.</span></span>  
  
 <span data-ttu-id="3f06c-147">Las siguientes instrucciones tienen que ser `true` para todas las implementaciones del método IsSubsetOf.</span><span class="sxs-lookup"><span data-stu-id="3f06c-147">The following statements are required to be `true` for all implementations of the IsSubsetOf method.</span></span> <span data-ttu-id="3f06c-148">X, Y y Z representan <xref:System.Security.IPermission> objetos que no son un `null` referencia (`Nothing` en Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="3f06c-148">X, Y, and Z represent <xref:System.Security.IPermission> objects that are not a `null` reference (`Nothing` in Visual Basic).</span></span>  
  
-   <span data-ttu-id="3f06c-149">X.IsSubsetOf (x) devuelve `true`.</span><span class="sxs-lookup"><span data-stu-id="3f06c-149">X.IsSubsetOf(X) returns `true`.</span></span>  
  
-   <span data-ttu-id="3f06c-150">X.IsSubsetOf devuelve el mismo valor que y.IsSubsetOf (x) si y solo si X e Y representan el mismo conjunto de permisos.</span><span class="sxs-lookup"><span data-stu-id="3f06c-150">X.IsSubsetOf(Y) returns the same value as Y.IsSubsetOf(X) if and only if X and Y represent the same set of permissions.</span></span>  
  
-   <span data-ttu-id="3f06c-151">Si X.IsSubsetOf y Y.IsSubsetOf ambos devuelven `true`, x.IsSubsetOf (z) devuelve `true`.</span><span class="sxs-lookup"><span data-stu-id="3f06c-151">If X.IsSubsetOf(Y) and Y.IsSubsetOf(Z) both return `true`, X.IsSubsetOf(Z) returns `true`.</span></span>  
  
-  
  
 <span data-ttu-id="3f06c-152">Si X representa un objeto IPermission vacío con un estado de permiso *ninguno* e Y representa un objeto IPermission que es un `null` referencia (`Nothing` en Visual Basic), X.IsSubsetOf devuelve `true`.</span><span class="sxs-lookup"><span data-stu-id="3f06c-152">If X represents an empty IPermission object with a permission state of *None* and Y represents an IPermission object that is a `null` reference (`Nothing` in Visual Basic), X.IsSubsetOf(Y) returns `true`.</span></span> <span data-ttu-id="3f06c-153">Si Z es también un permiso vacío, la conjunto compuesta x.Union (z) de la operación. También devuelve IsSubsetOf `true` porque el <xref:System.Net.PeerToPeer.PnrpPermission.Union%2A> de dos permisos vacíos es un permiso vacío.</span><span class="sxs-lookup"><span data-stu-id="3f06c-153">If Z is also an empty permission, the compound set operation X.Union(Z).IsSubsetOf(Y) also returns `true` because the <xref:System.Net.PeerToPeer.PnrpPermission.Union%2A> of two empty permissions is an empty permission.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3f06c-154">El parámetro de destino no es una referencia <see langword="null" /> (<see langword="Nothing" /> en Visual Basic) y no es una instancia de la misma clase que el permiso actual.</span><span class="sxs-lookup"><span data-stu-id="3f06c-154">The target parameter is not a <see langword="null" /> reference (<see langword="Nothing" /> in Visual Basic) and is not an instance of the same class as the current permission.</span></span></exception>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.FromXml(System.Security.SecurityElement)" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.ToXml" />
      </Docs>
    </Member>
    <Member MemberName="IsUnrestricted">
      <MemberSignature Language="C#" Value="public bool IsUnrestricted ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsUnrestricted() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.IsUnrestricted" />
      <MemberSignature Language="VB.NET" Value="Public Function IsUnrestricted () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsUnrestricted();" />
      <MemberSignature Language="F#" Value="abstract member IsUnrestricted : unit -&gt; bool&#xA;override this.IsUnrestricted : unit -&gt; bool" Usage="pnrpPermission.IsUnrestricted " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.Permissions.IUnrestrictedPermission.IsUnrestricted</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3f06c-155">Devuelve un valor que especifica si el objeto <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> actual no tiene restricciones.</span><span class="sxs-lookup"><span data-stu-id="3f06c-155">Returns a value specifying whether the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> is unrestricted.</span></span></summary>
        <returns><span data-ttu-id="3f06c-156"><see langword="true" /> si el permiso actual es no restringido; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="3f06c-156"><see langword="true" /> if the current permission is unrestricted; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f06c-157">Un permiso no restringido representa el acceso a todos los recursos protegidos por el permiso.</span><span class="sxs-lookup"><span data-stu-id="3f06c-157">An unrestricted permission represents access to any and all resources protected by the permission.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Copy" />
        <altmember cref="T:System.Net.PeerToPeer.PnrpPermissionAttribute" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.ToXml" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)" />
      </Docs>
    </Member>
    <Member MemberName="ToXml">
      <MemberSignature Language="C#" Value="public override System.Security.SecurityElement ToXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.SecurityElement ToXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.ToXml" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToXml () As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::SecurityElement ^ ToXml();" />
      <MemberSignature Language="F#" Value="override this.ToXml : unit -&gt; System.Security.SecurityElement" Usage="pnrpPermission.ToXml " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3f06c-158">Crea una codificación XML de <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> y de su estado actual.</span><span class="sxs-lookup"><span data-stu-id="3f06c-158">Creates an XML encoding of the <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> and its current state.</span></span></summary>
        <returns><span data-ttu-id="3f06c-159">Objeto <see cref="T:System.Security.SecurityElement" /> que contiene una codificación XML del permiso, incluida la información de estado.</span><span class="sxs-lookup"><span data-stu-id="3f06c-159">A <see cref="T:System.Security.SecurityElement" /> object that contains an XML encoding of the permission, including any state information.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Copy" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.FromXml(System.Security.SecurityElement)" />
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Union (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Union(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Union (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Union(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="override this.Union : System.Security.IPermission -&gt; System.Security.IPermission" Usage="pnrpPermission.Union target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="3f06c-160">Permiso para combinar con el permiso actual.</span><span class="sxs-lookup"><span data-stu-id="3f06c-160">A permission to combine with the current permission.</span></span> <span data-ttu-id="3f06c-161">Debe ser del mismo tipo que el permiso actual.</span><span class="sxs-lookup"><span data-stu-id="3f06c-161">It must be of the same type as the current permission.</span></span></param>
        <summary><span data-ttu-id="3f06c-162">Crea un permiso que consiste en la unión del objeto <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> actual y del permiso especificado.</span><span class="sxs-lookup"><span data-stu-id="3f06c-162">Creates a permission that is the union of the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> and the specified permission.</span></span></summary>
        <returns><span data-ttu-id="3f06c-163">Nuevo permiso que representa el método <see cref="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)" /> del objeto <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> actual y del permiso especificado.</span><span class="sxs-lookup"><span data-stu-id="3f06c-163">A new permission that represents the <see cref="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)" /> of the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> and the specified permission.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f06c-164">El resultado de una llamada a <xref:System.Net.PeerToPeer.PnrpPermission.Union%2A> es un permiso que representa todas las operaciones representadas por el actual <xref:System.Net.PeerToPeer.PnrpPermission> y el permiso especificado.</span><span class="sxs-lookup"><span data-stu-id="3f06c-164">The result of a call to <xref:System.Net.PeerToPeer.PnrpPermission.Union%2A> is a permission that represents all the operations represented by both the current <xref:System.Net.PeerToPeer.PnrpPermission> and the specified permission.</span></span> <span data-ttu-id="3f06c-165">Cualquier solicitud que pase alguno de estos permisos pasa su unión.</span><span class="sxs-lookup"><span data-stu-id="3f06c-165">Any demand that passes either permission passes their union.</span></span>  
  
 <span data-ttu-id="3f06c-166">Las siguientes instrucciones tienen que ser `true` para todas las implementaciones del método Union.</span><span class="sxs-lookup"><span data-stu-id="3f06c-166">The following statements are required to be `true` for all implementations of the Union method.</span></span> <span data-ttu-id="3f06c-167">X e Y representan <xref:System.Security.IPermission> objetos que no son un `null` referencia (`Nothing` en Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="3f06c-167">X and Y represent <xref:System.Security.IPermission> objects that are not a `null` reference (`Nothing` in Visual Basic).</span></span>  
  
-   <span data-ttu-id="3f06c-168">X.Union (x) devuelve un objeto que tiene el mismo valor que X.</span><span class="sxs-lookup"><span data-stu-id="3f06c-168">X.Union(X) returns an object that has the same value as X.</span></span>  
  
-   <span data-ttu-id="3f06c-169">X.Union (y) devuelve un objeto que tiene el mismo valor que el objeto devuelto por y.Union (x).</span><span class="sxs-lookup"><span data-stu-id="3f06c-169">X.Union(Y) returns an object that has the same value as the object returned by Y.Union(X).</span></span>  
  
-   <span data-ttu-id="3f06c-170">X.Union (una `null` referencia (`Nothing` en Visual Basic)) devuelve un objeto que tiene el mismo valor que X.</span><span class="sxs-lookup"><span data-stu-id="3f06c-170">X.Union(a `null` reference (`Nothing` in Visual Basic)) returns an object that has the same value as X.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3f06c-171">El parámetro <paramref name="target" /> no es válido.</span><span class="sxs-lookup"><span data-stu-id="3f06c-171"><paramref name="target" /> parameter is invalid.</span></span></exception>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.IsSubsetOf(System.Security.IPermission)" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.IsUnrestricted" />
      </Docs>
    </Member>
  </Members>
</Type>
<Type Name="PeerNameResolver" FullName="System.Net.PeerToPeer.PeerNameResolver">
  <Metadata><Meta Name="ms.openlocfilehash" Value="97ae5e632ef32ac564a931d5e857b1eac247da22" /><Meta Name="ms.sourcegitcommit" Value="1654a92bac785a221098172d9cacd405ceaac9b7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="12/01/2018" /><Meta Name="ms.locfileid" Value="52733660" /></Metadata><TypeSignature Language="C#" Value="public class PeerNameResolver" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi PeerNameResolver extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.PeerToPeer.PeerNameResolver" />
  <TypeSignature Language="VB.NET" Value="Public Class PeerNameResolver" />
  <TypeSignature Language="C++ CLI" Value="public ref class PeerNameResolver" />
  <TypeSignature Language="F#" Value="type PeerNameResolver = class" />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="fbd87-101">Especifica los valores que resuelven <see cref="T:System.Net.PeerToPeer.PeerName" /> como <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> mediante el protocolo de API del proveedor de espacio de nombres PNRP.</span><span class="sxs-lookup"><span data-stu-id="fbd87-101">Specifies the values that resolve a <see cref="T:System.Net.PeerToPeer.PeerName" /> to a <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> using the PNRP Namespace Provider API protocol.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbd87-102">Un <xref:System.Net.PeerToPeer.PeerNameRecord> que contiene toda la información de la <xref:System.Net.PeerToPeer.PeerName> que se publicó en el <xref:System.Net.PeerToPeer.Cloud> o nubes que se consultaron durante el proceso de resolución.</span><span class="sxs-lookup"><span data-stu-id="fbd87-102">A <xref:System.Net.PeerToPeer.PeerNameRecord> which contains all the information for the <xref:System.Net.PeerToPeer.PeerName> that was published in the <xref:System.Net.PeerToPeer.Cloud> or cloud(s) that were queried during the resolve process.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PeerNameResolver ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PeerNameResolver();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fbd87-103">Inicializa una nueva instancia predeterminada de la clase <see cref="T:System.Net.PeerToPeer.PeerNameResolver" />.</span><span class="sxs-lookup"><span data-stu-id="fbd87-103">Initializes a new default instance of the <see cref="T:System.Net.PeerToPeer.PeerNameResolver" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbd87-104">Después de resolver correctamente un <xref:System.Net.PeerToPeer.PeerName>, <xref:System.Net.PeerToPeer.PeerNameRecord> contiene toda la información para el elemento especificado <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A> que se publicó en las nubes que se consultaron durante la <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> operación.</span><span class="sxs-lookup"><span data-stu-id="fbd87-104">After successfully resolving a <xref:System.Net.PeerToPeer.PeerName>, the <xref:System.Net.PeerToPeer.PeerNameRecord> contains all the information for the specified <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A> that was published in the cloud(s) that were queried during the <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnResolveCompleted">
      <MemberSignature Language="C#" Value="protected void OnResolveCompleted (System.Net.PeerToPeer.ResolveCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnResolveCompleted(class System.Net.PeerToPeer.ResolveCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted(System.Net.PeerToPeer.ResolveCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnResolveCompleted (e As ResolveCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnResolveCompleted(System::Net::PeerToPeer::ResolveCompletedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.OnResolveCompleted : System.Net.PeerToPeer.ResolveCompletedEventArgs -&gt; unit" Usage="peerNameResolver.OnResolveCompleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.PeerToPeer.ResolveCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="fbd87-105">Objeto <see cref="T:System.Net.PeerToPeer.ResolveCompletedEventArgs" /> que contiene los datos devueltos por el evento <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" />.</span><span class="sxs-lookup"><span data-stu-id="fbd87-105">The <see cref="T:System.Net.PeerToPeer.ResolveCompletedEventArgs" /> object that contains the data returned by the <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" /> event.</span></span></param>
        <summary><span data-ttu-id="fbd87-106">Devuelve los datos de resolución del mismo nivel después de generarse el evento <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" />.</span><span class="sxs-lookup"><span data-stu-id="fbd87-106">Returns peer resolution data after the <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" /> event is raised.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbd87-107">Este método es una devolución de llamada asincrónica que se utiliza para procesar datos de resolución de nombres del mismo nivel, una vez finalizada la resolución del mismo nivel.</span><span class="sxs-lookup"><span data-stu-id="fbd87-107">This method is an asynchronous callback used to process peer name resolution data after peer resolution has completed.</span></span>  
  
 <span data-ttu-id="fbd87-108">Los tipos derivados pueden invalidar este método para realizar más tareas cuando el <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> evento es desencadenado por el objeto de resolución del mismo nivel.</span><span class="sxs-lookup"><span data-stu-id="fbd87-108">Derived types can override this method to perform additional tasks when the <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event is raised by the peer resolver object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsyncCancel(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="OnResolveProgressChanged">
      <MemberSignature Language="C#" Value="protected void OnResolveProgressChanged (System.Net.PeerToPeer.ResolveProgressChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnResolveProgressChanged(class System.Net.PeerToPeer.ResolveProgressChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged(System.Net.PeerToPeer.ResolveProgressChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnResolveProgressChanged (e As ResolveProgressChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnResolveProgressChanged(System::Net::PeerToPeer::ResolveProgressChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.OnResolveProgressChanged : System.Net.PeerToPeer.ResolveProgressChangedEventArgs -&gt; unit" Usage="peerNameResolver.OnResolveProgressChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.PeerToPeer.ResolveProgressChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="fbd87-109">Objeto <see cref="T:System.Net.PeerToPeer.ResolveProgressChangedEventArgs" /> que contiene información de progreso de la resolución del nombre de mismo nivel devuelto por el evento <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged" />.</span><span class="sxs-lookup"><span data-stu-id="fbd87-109"><see cref="T:System.Net.PeerToPeer.ResolveProgressChangedEventArgs" /> object that contains peer name resolution progress information returned by the <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged" /> event.</span></span></param>
        <summary><span data-ttu-id="fbd87-110">Devuelve los datos de progreso de resolución del mismo nivel cuando se genera el evento <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged" />.</span><span class="sxs-lookup"><span data-stu-id="fbd87-110">Returns peer resolution progress data when the <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged" /> event is raised.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbd87-111">Este método es una devolución de llamada asincrónica que se utiliza para procesar los datos de la resolución del mismo nivel después de que se ha solicitado el progreso de la resolución del mismo nivel.</span><span class="sxs-lookup"><span data-stu-id="fbd87-111">This method is an asynchronous callback used to process peer resolution data after peer resolution progress has been requested.</span></span>  
  
 <span data-ttu-id="fbd87-112">Los tipos derivados pueden invalidar este método para realizar más tareas cuando el <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> se produce el evento.</span><span class="sxs-lookup"><span data-stu-id="fbd87-112">Derived types can override this method to perform additional tasks when the <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> event occurs.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="fbd87-113">Al reemplazar este método en un tipo derivado, asegúrese de llamar al tipo base <see cref="M:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged(System.Net.PeerToPeer.ResolveProgressChangedEventArgs)" /> método para que los delegados registrados reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="fbd87-113">When overriding this method in a derived type, be sure to call the base type's <see cref="M:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged(System.Net.PeerToPeer.ResolveProgressChangedEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <MemberGroup MemberName="Resolve">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fbd87-114">Resuelve un objeto <see cref="T:System.Net.PeerToPeer.PeerName" /> como <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> mediante el protocolo PNRP.</span><span class="sxs-lookup"><span data-stu-id="fbd87-114">Resolves a <see cref="T:System.Net.PeerToPeer.PeerName" /> object to a <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> using the PNRP protocol.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbd87-115">Este método asocia nombres de mismo nivel a las nubes.</span><span class="sxs-lookup"><span data-stu-id="fbd87-115">This method associates peer names to clouds.</span></span> <span data-ttu-id="fbd87-116">Una llamada a la <xref:System.Net.PeerToPeer.PeerNameResolver> es similar a llamar al método el <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> método para cada registro de nombres del mismo nivel en el <xref:System.Net.PeerToPeer.PeerNameRecordCollection>.</span><span class="sxs-lookup"><span data-stu-id="fbd87-116">Calling the <xref:System.Net.PeerToPeer.PeerNameResolver> method is similar to calling the <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> method for each peer name record in the <xref:System.Net.PeerToPeer.PeerNameRecordCollection>.</span></span> <span data-ttu-id="fbd87-117">Tenga en cuenta que utiliza el método de resolución en un registro de nombre individual del mismo nivel no invalida la resolución de varios nombres de mismo nivel.</span><span class="sxs-lookup"><span data-stu-id="fbd87-117">Note that using the Resolve method on an individual peer name record does not invalidate resolving multiple peer names.</span></span>  
  
 <span data-ttu-id="fbd87-118">Para cada <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> método, hay un equivalente <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> método.</span><span class="sxs-lookup"><span data-stu-id="fbd87-118">For every <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> method, there is an equivalent <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> method.</span></span>  <span data-ttu-id="fbd87-119">Son idénticos en los parámetros se pasan, salvo que el método ResolveAsync incluye un token del sistema en su lista de parámetros para el control de eventos asincrónicos.</span><span class="sxs-lookup"><span data-stu-id="fbd87-119">They are identical in the parameters they are passed, except that the ResolveAsync method includes a system token in its parameter list for asynchronous event handling.</span></span>  
  
 <span data-ttu-id="fbd87-120">Si el <xref:System.Net.PeerToPeer.Cloud> no se proporciona el parámetro, el método usa el <xref:System.Net.PeerToPeer.Cloud.Available> acceso directo a rellenar parámetros en la nube.</span><span class="sxs-lookup"><span data-stu-id="fbd87-120">If the <xref:System.Net.PeerToPeer.Cloud> parameter is not supplied, the method uses the <xref:System.Net.PeerToPeer.Cloud.Available> shortcut to fill in cloud parameters.</span></span>  <span data-ttu-id="fbd87-121">Si el `maxRecords` falta el parámetro, el valor predeterminado de cero, se produce un <xref:System.ArgumentOutOfRangeException> excepción.</span><span class="sxs-lookup"><span data-stu-id="fbd87-121">If the `maxRecords` parameter is missing, the default value of zero causes an <xref:System.ArgumentOutOfRangeException> exception to be thrown.</span></span>  
  
 <span data-ttu-id="fbd87-122">Este evento también se genera si la operación de resolución completa con errores o se cancela.</span><span class="sxs-lookup"><span data-stu-id="fbd87-122">This event will also be raised if the resolve operation completes in error or is canceled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.PeerToPeer.PeerNameRegistration" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.PeerNameRecordCollection Resolve (System.Net.PeerToPeer.PeerName peerName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.PeerNameRecordCollection Resolve(class System.Net.PeerToPeer.PeerName peerName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::PeerNameRecordCollection ^ Resolve(System::Net::PeerToPeer::PeerName ^ peerName);" />
      <MemberSignature Language="F#" Value="member this.Resolve : System.Net.PeerToPeer.PeerName -&gt; System.Net.PeerToPeer.PeerNameRecordCollection" Usage="peerNameResolver.Resolve peerName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerNameRecordCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
      </Parameters>
      <Docs>
        <param name="peerName"><span data-ttu-id="fbd87-123"><see cref="T:System.Net.PeerToPeer.PeerName" /> que se va a resolver.</span><span class="sxs-lookup"><span data-stu-id="fbd87-123">The <see cref="T:System.Net.PeerToPeer.PeerName" /> to resolve.</span></span></param>
        <summary><span data-ttu-id="fbd87-124">Resuelve el objeto <see cref="T:System.Net.PeerToPeer.PeerName" /> especificado en todas las nubes conocidas para el elemento del mismo nivel de la llamada.</span><span class="sxs-lookup"><span data-stu-id="fbd87-124">Resolves the specified <see cref="T:System.Net.PeerToPeer.PeerName" /> in all clouds known to the calling peer.</span></span></summary>
        <returns><span data-ttu-id="fbd87-125"><see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" /> que contiene todos los registros de nombre del mismo nivel (representados como objetos <see cref="T:System.Net.PeerToPeer.PeerNameRecord" />) asociados al nombre del mismo nivel especificado.</span><span class="sxs-lookup"><span data-stu-id="fbd87-125">A <see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" /> that contains all peer name records (represented as <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> objects) associated with the specified peer name.</span></span> <span data-ttu-id="fbd87-126">Para los nombres del mismo nivel no protegidos, diferentes usuarios pueden registrar el mismo objeto <see cref="T:System.Net.PeerToPeer.PeerName" /> en el mismo objeto <see cref="T:System.Net.PeerToPeer.Cloud" /> y asociarlo con extremos diferentes.</span><span class="sxs-lookup"><span data-stu-id="fbd87-126">For unsecured peer names, the same <see cref="T:System.Net.PeerToPeer.PeerName" /> can be registered by different users in the same <see cref="T:System.Net.PeerToPeer.Cloud" />, and associated with different endpoints.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbd87-127">Este método asocia un nombre de mismo nivel a las nubes.</span><span class="sxs-lookup"><span data-stu-id="fbd87-127">This method associates a peer name to clouds.</span></span> <span data-ttu-id="fbd87-128">Todas las nubes se consultan para ver el <xref:System.Net.PeerToPeer.PeerName>.</span><span class="sxs-lookup"><span data-stu-id="fbd87-128">All clouds are queried for the <xref:System.Net.PeerToPeer.PeerName>.</span></span> <span data-ttu-id="fbd87-129">Si el nombre del mismo nivel no se puede resolver o es `null`, un <xref:System.Net.PeerToPeer.PeerToPeerException> se produce.</span><span class="sxs-lookup"><span data-stu-id="fbd87-129">If the peer name cannot be resolved or is `null`, an <xref:System.Net.PeerToPeer.PeerToPeerException> is thrown.</span></span>  
  
 <span data-ttu-id="fbd87-130">Para los nombres de mismo nivel no protegidos, el mismo nombre puede ser registrado (y asociarlo con extremos diferentes) diferentes elementos del mismo nivel dentro de la misma nube.</span><span class="sxs-lookup"><span data-stu-id="fbd87-130">For unsecured peer names, the same name can be registered (and associated with different endpoints) by different peers within the same cloud.</span></span>  
  
 <span data-ttu-id="fbd87-131">Una llamada a la <xref:System.Net.PeerToPeer.PeerNameResolver> es similar a llamar al método el <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> método para cada registro de nombres del mismo nivel en el <xref:System.Net.PeerToPeer.PeerNameRecordCollection>.</span><span class="sxs-lookup"><span data-stu-id="fbd87-131">Calling the <xref:System.Net.PeerToPeer.PeerNameResolver> method is similar to calling the <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> method for each peer name record in the <xref:System.Net.PeerToPeer.PeerNameRecordCollection>.</span></span> <span data-ttu-id="fbd87-132">Tenga en cuenta que utiliza el método de resolución en un registro de nombre individual del mismo nivel no invalida la resolución de varios nombres de mismo nivel.</span><span class="sxs-lookup"><span data-stu-id="fbd87-132">Note that using the Resolve method on an individual peer name record does not invalidate resolving multiple peer names.</span></span>  
  
 <span data-ttu-id="fbd87-133">Para cada <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> método, hay un equivalente <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> método.</span><span class="sxs-lookup"><span data-stu-id="fbd87-133">For every <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> method, there is an equivalent <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> method.</span></span>  <span data-ttu-id="fbd87-134">Las listas de parámetros son idénticas, salvo que el método ResolveAsync incluye un token del sistema de control de eventos asincrónico.</span><span class="sxs-lookup"><span data-stu-id="fbd87-134">Their parameter lists are identical, except that the ResolveAsync method includes a system token for asynchronous event handling.</span></span>  
  
 <span data-ttu-id="fbd87-135">Si el <xref:System.Net.PeerToPeer.Cloud> no se proporciona el parámetro, el método usa el <xref:System.Net.PeerToPeer.Cloud.Available> acceso directo a rellenar parámetros en la nube.</span><span class="sxs-lookup"><span data-stu-id="fbd87-135">If the <xref:System.Net.PeerToPeer.Cloud> parameter is not supplied, the method uses the <xref:System.Net.PeerToPeer.Cloud.Available> shortcut to fill in cloud parameters.</span></span>  
  
 <span data-ttu-id="fbd87-136">El <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> evento se genera si la operación de resolución completa con errores o se cancela.</span><span class="sxs-lookup"><span data-stu-id="fbd87-136">The <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event will be raised if the resolve operation completes in error or is canceled.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fbd87-137">El ejemplo de código siguiente muestra cómo resolver un <xref:System.Net.PeerToPeer.PeerName> publicados en cualquier <xref:System.Net.PeerToPeer.Cloud>.</span><span class="sxs-lookup"><span data-stu-id="fbd87-137">The following code example illustrates how to resolve a <xref:System.Net.PeerToPeer.PeerName> published in any <xref:System.Net.PeerToPeer.Cloud>.</span></span>  
  
 [!code-csharp[NCLPNRPPeerNameResolver#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPNRPPeerNameResolver/CS/PeerNameResolver.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fbd87-138">El parámetro <paramref name="peerName" /> debe establecerse en <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fbd87-138">The <paramref name="peerName" /> parameter is set to <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException"><span data-ttu-id="fbd87-139">No se puede resolver el nombre del mismo nivel especificado.</span><span class="sxs-lookup"><span data-stu-id="fbd87-139">The peer name specified cannot be resolved.</span></span></exception>
        <altmember cref="T:System.Net.PeerToPeer.PeerNameRegistration" />
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.PeerNameRecordCollection Resolve (System.Net.PeerToPeer.PeerName peerName, int maxRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.PeerNameRecordCollection Resolve(class System.Net.PeerToPeer.PeerName peerName, int32 maxRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::PeerNameRecordCollection ^ Resolve(System::Net::PeerToPeer::PeerName ^ peerName, int maxRecords);" />
      <MemberSignature Language="F#" Value="member this.Resolve : System.Net.PeerToPeer.PeerName * int -&gt; System.Net.PeerToPeer.PeerNameRecordCollection" Usage="peerNameResolver.Resolve (peerName, maxRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerNameRecordCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="maxRecords" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="peerName"><span data-ttu-id="fbd87-140"><see cref="T:System.Net.PeerToPeer.PeerName" /> que se va a resolver.</span><span class="sxs-lookup"><span data-stu-id="fbd87-140">The <see cref="T:System.Net.PeerToPeer.PeerName" /> to resolve.</span></span></param>
        <param name="maxRecords"><span data-ttu-id="fbd87-141">Número máximo de objetos <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> que se deben obtener de todos los objetos <see cref="T:System.Net.PeerToPeer.Cloud" /> para el <paramref name="peerName" />proporcionado.</span><span class="sxs-lookup"><span data-stu-id="fbd87-141">The maximum number of <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> objects to obtain from all <see cref="T:System.Net.PeerToPeer.Cloud" /> objects for the supplied <paramref name="peerName" />.</span></span></param>
        <summary><span data-ttu-id="fbd87-142">Resuelve el nombre del mismo nivel especificado en todas las nubes conocidas para el elemento del mismo nivel de la llamada y no devuelve más que el número especificado de objetos <see cref="T:System.Net.PeerToPeer.PeerNameRecord" />.</span><span class="sxs-lookup"><span data-stu-id="fbd87-142">Resolves the specified peer name in all clouds known to the calling peer, returning no more than the specified number of <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> objects.</span></span></summary>
        <returns><span data-ttu-id="fbd87-143"><see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" /> cuyo tamaño es menor o igual que las entradas de <paramref name="maxRecords" />.</span><span class="sxs-lookup"><span data-stu-id="fbd87-143">A <see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" /> whose size is less than or equal to <paramref name="maxRecords" /> entries.</span></span> <span data-ttu-id="fbd87-144">Esta colección contiene registros de nombre del mismo nivel asociados al objeto <see cref="T:System.Net.PeerToPeer.PeerName" /> que se resolvió.</span><span class="sxs-lookup"><span data-stu-id="fbd87-144">This collection contains peer name records associated with the <see cref="T:System.Net.PeerToPeer.PeerName" /> that was resolved.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbd87-145">Este método asocia un nombre de mismo nivel a las nubes.</span><span class="sxs-lookup"><span data-stu-id="fbd87-145">This method associates a peer name to clouds.</span></span> <span data-ttu-id="fbd87-146">Todas las nubes se consultan el nombre del mismo nivel.</span><span class="sxs-lookup"><span data-stu-id="fbd87-146">All clouds are queried for the peer name.</span></span> <span data-ttu-id="fbd87-147">Para los nombres de mismo nivel no protegidos, el mismo nombre del mismo nivel se puede registrar por usuarios diferentes en el mismo <xref:System.Net.PeerToPeer.Cloud>y asociarlo con extremos diferentes.</span><span class="sxs-lookup"><span data-stu-id="fbd87-147">For unsecured peer names, the same peer name can be registered by different users in the same <xref:System.Net.PeerToPeer.Cloud>, and associated with different endpoints.</span></span> <span data-ttu-id="fbd87-148">Si el <xref:System.Net.PeerToPeer.PeerName> no se puede resolver (por ejemplo, no se publica el nombre del mismo nivel) un <xref:System.Net.PeerToPeer.PeerToPeerException> se produce.</span><span class="sxs-lookup"><span data-stu-id="fbd87-148">If the <xref:System.Net.PeerToPeer.PeerName> cannot be resolved (for example, the peer name is not published) an <xref:System.Net.PeerToPeer.PeerToPeerException> is thrown.</span></span>  
  
 <span data-ttu-id="fbd87-149">Para cada <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> método, hay un equivalente <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> método.</span><span class="sxs-lookup"><span data-stu-id="fbd87-149">For every <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> method, there is an equivalent <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> method.</span></span>  <span data-ttu-id="fbd87-150">Las listas de parámetros son idénticas, salvo que el método ResolveAsync incluye un token del sistema de control de eventos asincrónico.</span><span class="sxs-lookup"><span data-stu-id="fbd87-150">Their parameter lists are identical, except that the ResolveAsync method includes a system token for asynchronous event handling.</span></span>  
  
 <span data-ttu-id="fbd87-151">El <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> evento se genera si la operación de resolución completa con errores o se cancela.</span><span class="sxs-lookup"><span data-stu-id="fbd87-151">The <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event will be raised if the resolve operation completes in error or is canceled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fbd87-152">El parámetro <paramref name="peerName" /> debe establecerse en <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fbd87-152">The <paramref name="peerName" /> parameter is set to <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="fbd87-153">El parámetro <paramref name="maxRecords" /> es menor o igual que cero.</span><span class="sxs-lookup"><span data-stu-id="fbd87-153">The <paramref name="maxRecords" /> parameter is less than or equal to zero.</span></span></exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException"><span data-ttu-id="fbd87-154">El nombre del mismo nivel proporcionado no se puede resolver.</span><span class="sxs-lookup"><span data-stu-id="fbd87-154">The supplied peer name cannot be resolved.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.PeerNameRecordCollection Resolve (System.Net.PeerToPeer.PeerName peerName, System.Net.PeerToPeer.Cloud cloud);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.PeerNameRecordCollection Resolve(class System.Net.PeerToPeer.PeerName peerName, class System.Net.PeerToPeer.Cloud cloud) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::PeerNameRecordCollection ^ Resolve(System::Net::PeerToPeer::PeerName ^ peerName, System::Net::PeerToPeer::Cloud ^ cloud);" />
      <MemberSignature Language="F#" Value="member this.Resolve : System.Net.PeerToPeer.PeerName * System.Net.PeerToPeer.Cloud -&gt; System.Net.PeerToPeer.PeerNameRecordCollection" Usage="peerNameResolver.Resolve (peerName, cloud)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerNameRecordCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="cloud" Type="System.Net.PeerToPeer.Cloud" />
      </Parameters>
      <Docs>
        <param name="peerName"><span data-ttu-id="fbd87-155"><see cref="T:System.Net.PeerToPeer.PeerName" /> que se va a resolver.</span><span class="sxs-lookup"><span data-stu-id="fbd87-155">The <see cref="T:System.Net.PeerToPeer.PeerName" /> to resolve.</span></span></param>
        <param name="cloud"><span data-ttu-id="fbd87-156"><see cref="T:System.Net.PeerToPeer.Cloud" /> en que se va a resolver el nombre del mismo nivel.</span><span class="sxs-lookup"><span data-stu-id="fbd87-156">The <see cref="T:System.Net.PeerToPeer.Cloud" /> in which to resolve the peer name.</span></span></param>
        <summary><span data-ttu-id="fbd87-157">Resuelve la propiedad <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /> especificada en el objeto <see cref="T:System.Net.PeerToPeer.Cloud" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="fbd87-157">Resolves the specified <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /> in the specified <see cref="T:System.Net.PeerToPeer.Cloud" />.</span></span></summary>
        <returns><span data-ttu-id="fbd87-158"><see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" /> que contiene todos los registros de nombre del mismo nivel (representados como objetos <see cref="T:System.Net.PeerToPeer.PeerNameRecord" />) asociados al nombre del mismo nivel especificado.</span><span class="sxs-lookup"><span data-stu-id="fbd87-158"><see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" /> that contains all peer name records (represented as <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> objects) associated with the specified peer name.</span></span> <span data-ttu-id="fbd87-159">Para los nombres del mismo nivel no protegidos, diferentes usuarios pueden registrar el mismo objeto <see cref="T:System.Net.PeerToPeer.PeerName" /> en el mismo objeto <see cref="T:System.Net.PeerToPeer.Cloud" /> y asociarlo con extremos diferentes.</span><span class="sxs-lookup"><span data-stu-id="fbd87-159">For unsecured peer names, the same <see cref="T:System.Net.PeerToPeer.PeerName" /> can be registered by different users in the same <see cref="T:System.Net.PeerToPeer.Cloud" />, and associated with different endpoints.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbd87-160">Si el <xref:System.Net.PeerToPeer.PeerName> no se puede resolver (es decir, no se publica el nombre del mismo nivel) un <xref:System.Net.PeerToPeer.PeerToPeerException> se produce.</span><span class="sxs-lookup"><span data-stu-id="fbd87-160">If the <xref:System.Net.PeerToPeer.PeerName> cannot be resolved (that is, the peer name is not published) an <xref:System.Net.PeerToPeer.PeerToPeerException> is thrown.</span></span>  
  
 <span data-ttu-id="fbd87-161">Para los nombres de mismo nivel no protegidos, el mismo nombre puede ser registrado (y asociarlo con extremos diferentes) diferentes elementos del mismo nivel dentro de la misma nube.</span><span class="sxs-lookup"><span data-stu-id="fbd87-161">For unsecured peer names, the same name can be registered (and associated with different endpoints) by different peers within the same cloud.</span></span>  
  
 <span data-ttu-id="fbd87-162">Para cada <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> método, hay un equivalente <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> método.</span><span class="sxs-lookup"><span data-stu-id="fbd87-162">For every <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> method, there is an equivalent <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> method.</span></span>  <span data-ttu-id="fbd87-163">Las listas de parámetros son idénticas, salvo que el método ResolveAsync incluye un token del sistema de control de eventos asincrónico.</span><span class="sxs-lookup"><span data-stu-id="fbd87-163">Their parameter lists are identical, except that the ResolveAsync method includes a system token for asynchronous event handling.</span></span>  
  
 <span data-ttu-id="fbd87-164">Si el <xref:System.Net.PeerToPeer.Cloud> parámetro es `null`, el <xref:System.Net.PeerToPeer.PeerNameResolver> usa el <xref:System.Net.PeerToPeer.Cloud.Available> acceso directo para rellenar el <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, y <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>.</span><span class="sxs-lookup"><span data-stu-id="fbd87-164">If the <xref:System.Net.PeerToPeer.Cloud> parameter is `null`, the <xref:System.Net.PeerToPeer.PeerNameResolver> uses the <xref:System.Net.PeerToPeer.Cloud.Available> shortcut to fill in the <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, and <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>.</span></span>  
  
 <span data-ttu-id="fbd87-165">El <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> evento se genera si la operación de resolución completa con errores o se cancela.</span><span class="sxs-lookup"><span data-stu-id="fbd87-165">The <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event will be raised if the resolve operation completes in error or is canceled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fbd87-166">El parámetro <paramref name="peerName" /> debe establecerse en <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fbd87-166">The <paramref name="peerName" /> parameter is set to <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException"><span data-ttu-id="fbd87-167">El nombre del mismo nivel proporcionado no se puede resolver.</span><span class="sxs-lookup"><span data-stu-id="fbd87-167">The supplied peer name cannot be resolved.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.PeerNameRecordCollection Resolve (System.Net.PeerToPeer.PeerName peerName, System.Net.PeerToPeer.Cloud cloud, int maxRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.PeerNameRecordCollection Resolve(class System.Net.PeerToPeer.PeerName peerName, class System.Net.PeerToPeer.Cloud cloud, int32 maxRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::PeerNameRecordCollection ^ Resolve(System::Net::PeerToPeer::PeerName ^ peerName, System::Net::PeerToPeer::Cloud ^ cloud, int maxRecords);" />
      <MemberSignature Language="F#" Value="member this.Resolve : System.Net.PeerToPeer.PeerName * System.Net.PeerToPeer.Cloud * int -&gt; System.Net.PeerToPeer.PeerNameRecordCollection" Usage="peerNameResolver.Resolve (peerName, cloud, maxRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerNameRecordCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="cloud" Type="System.Net.PeerToPeer.Cloud" />
        <Parameter Name="maxRecords" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="peerName"><span data-ttu-id="fbd87-168"><see cref="T:System.Net.PeerToPeer.PeerName" /> que se va a resolver.</span><span class="sxs-lookup"><span data-stu-id="fbd87-168">The <see cref="T:System.Net.PeerToPeer.PeerName" /> to resolve.</span></span></param>
        <param name="cloud"><span data-ttu-id="fbd87-169"><see cref="T:System.Net.PeerToPeer.Cloud" /> en el que se va a resolver <paramref name="peerName" />.</span><span class="sxs-lookup"><span data-stu-id="fbd87-169">The <see cref="T:System.Net.PeerToPeer.Cloud" /> in which to resolve the <paramref name="peerName" />.</span></span></param>
        <param name="maxRecords"><span data-ttu-id="fbd87-170">Número máximo de objetos de registro de nombre del mismo nivel que se debe obtener de la nube especificada para el <paramref name="peerName" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="fbd87-170">The maximum number of peer name record objects to obtain from the specified cloud for the specified <paramref name="peerName" />.</span></span></param>
        <summary><span data-ttu-id="fbd87-171">Resuelve la propiedad <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /> especificada en el objeto <see cref="T:System.Net.PeerToPeer.Cloud" /> especificado y no devuelve más que el número especificado de objetos <see cref="T:System.Net.PeerToPeer.PeerNameRecord" />.</span><span class="sxs-lookup"><span data-stu-id="fbd87-171">Resolves the specified <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /> in the specified <see cref="T:System.Net.PeerToPeer.Cloud" />, returning no more than the specified number of <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> objects.</span></span></summary>
        <returns><span data-ttu-id="fbd87-172"><see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" /> cuyo tamaño es menor o igual que las entradas de <paramref name="maxRecords" />.</span><span class="sxs-lookup"><span data-stu-id="fbd87-172">A <see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" /> whose size is less than or equal to <paramref name="maxRecords" /> entries.</span></span> <span data-ttu-id="fbd87-173">Esta colección contiene registros de nombre del mismo nivel asociados al objeto <see cref="T:System.Net.PeerToPeer.PeerName" /> que se resolvió.</span><span class="sxs-lookup"><span data-stu-id="fbd87-173">This collection contains peer name records associated with the <see cref="T:System.Net.PeerToPeer.PeerName" /> that was resolved.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbd87-174">Para los nombres de mismo nivel no protegidos, el mismo nombre puede ser registrado (y asociarlo con extremos diferentes) diferentes elementos del mismo nivel dentro de la misma nube.</span><span class="sxs-lookup"><span data-stu-id="fbd87-174">For unsecured peer names, the same name can be registered (and associated with different endpoints) by different peers within the same cloud.</span></span> <span data-ttu-id="fbd87-175">Si el nombre del mismo nivel no se puede resolver una <xref:System.Net.PeerToPeer.PeerToPeerException> se produce.</span><span class="sxs-lookup"><span data-stu-id="fbd87-175">If the peer name cannot be resolved, an <xref:System.Net.PeerToPeer.PeerToPeerException> is thrown.</span></span>  
  
 <span data-ttu-id="fbd87-176">Para cada <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> método, hay un equivalente <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> método.</span><span class="sxs-lookup"><span data-stu-id="fbd87-176">For every <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> method, there is an equivalent <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> method.</span></span>  <span data-ttu-id="fbd87-177">Las listas de parámetros son idénticas, salvo que el método ResolveAsync incluye un token del sistema de control de eventos asincrónico.</span><span class="sxs-lookup"><span data-stu-id="fbd87-177">Their parameter lists are identical, except that the ResolveAsync method includes a system token for asynchronous event handling.</span></span>  
  
 <span data-ttu-id="fbd87-178">Si el <xref:System.Net.PeerToPeer.Cloud> parámetro es `null`, el <xref:System.Net.PeerToPeer.PeerNameResolver> usa el <xref:System.Net.PeerToPeer.Cloud.Available> acceso directo para rellenar el <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, y <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>.</span><span class="sxs-lookup"><span data-stu-id="fbd87-178">If the <xref:System.Net.PeerToPeer.Cloud> parameter is `null`, the <xref:System.Net.PeerToPeer.PeerNameResolver> uses the <xref:System.Net.PeerToPeer.Cloud.Available> shortcut to fill in the <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, and <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>.</span></span>  
  
 <span data-ttu-id="fbd87-179">El <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> evento se genera si la operación de resolución completa con errores o se cancela.</span><span class="sxs-lookup"><span data-stu-id="fbd87-179">The <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event will be raised if the resolve operation completes in error or is canceled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fbd87-180">El parámetro <paramref name="peerName" /> debe establecerse en <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fbd87-180">The <paramref name="peerName" /> parameter is set to <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="fbd87-181">El parámetro <paramref name="maxRecords" /> es menor o igual que cero.</span><span class="sxs-lookup"><span data-stu-id="fbd87-181">The <paramref name="maxRecords" /> parameter is less than or equal to zero.</span></span></exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException"><span data-ttu-id="fbd87-182">El nombre del mismo nivel proporcionado no se puede resolver.</span><span class="sxs-lookup"><span data-stu-id="fbd87-182">The supplied peer name cannot be resolved.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ResolveAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fbd87-183">Estos métodos comienzan una operación de resolución asincrónica para el objeto <see cref="T:System.Net.PeerToPeer.PeerName" /> especificado en todas las nubes conocidas para el elemento del mismo nivel de la llamada.</span><span class="sxs-lookup"><span data-stu-id="fbd87-183">These methods begin an asynchronous resolution operation for the specified <see cref="T:System.Net.PeerToPeer.PeerName" /> in all clouds known to the calling peer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbd87-184">Para cada <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> método, hay un equivalente <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> método, que se usa cuando se requiera un procesamiento asincrónico.</span><span class="sxs-lookup"><span data-stu-id="fbd87-184">For every <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> method, there is an equivalent <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> method, which is used when asynchronous processing is required.</span></span>  <span data-ttu-id="fbd87-185">Son idénticos en los parámetros se pasan, pero ResolveAsync incluye un token del sistema en su lista de parámetros para el control de eventos.</span><span class="sxs-lookup"><span data-stu-id="fbd87-185">They are identical in the parameters they are passed, except that ResolveAsync includes a system token in its parameter list for event handling.</span></span>  
  
 <span data-ttu-id="fbd87-186">Si se produce un error de coincidencia parámetro entre el método de resolución y el método ResolveAsync y el <xref:System.Net.PeerToPeer.Cloud> no se proporciona el parámetro, el método usa el <xref:System.Net.PeerToPeer.Cloud.Available> acceso directo a rellenar parámetros en la nube.</span><span class="sxs-lookup"><span data-stu-id="fbd87-186">If a parameter mismatch occurs between the Resolve method and the ResolveAsync method, and the <xref:System.Net.PeerToPeer.Cloud> parameter is not supplied, the method uses the <xref:System.Net.PeerToPeer.Cloud.Available> shortcut to fill in cloud parameters.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="ResolveAsync">
      <MemberSignature Language="C#" Value="public void ResolveAsync (System.Net.PeerToPeer.PeerName peerName, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResolveAsync(class System.Net.PeerToPeer.PeerName peerName, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResolveAsync(System::Net::PeerToPeer::PeerName ^ peerName, System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="member this.ResolveAsync : System.Net.PeerToPeer.PeerName * obj -&gt; unit" Usage="peerNameResolver.ResolveAsync (peerName, userState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="peerName"><span data-ttu-id="fbd87-187"><see cref="T:System.Net.PeerToPeer.PeerName" /> que se va a resolver.</span><span class="sxs-lookup"><span data-stu-id="fbd87-187">The <see cref="T:System.Net.PeerToPeer.PeerName" /> to resolve.</span></span></param>
        <param name="userState"><span data-ttu-id="fbd87-188">Objeto definido por el usuario que contiene información de estado sobre la operación de resolución de nombres del mismo nivel.</span><span class="sxs-lookup"><span data-stu-id="fbd87-188">A user-defined object that contains state information about the peer name resolution operation.</span></span></param>
        <summary><span data-ttu-id="fbd87-189">Comienza una operación asincrónica de resolución de nombres del mismo nivel para el <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /> especificado en todas las nubes conocidas para el elemento del mismo nivel que realizó la llamada.</span><span class="sxs-lookup"><span data-stu-id="fbd87-189">Begins an asynchronous peer name resolution operation for the specified <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /> in all clouds known to the calling peer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbd87-190">Este método asocia de forma asincrónica un nombre de mismo nivel a las nubes.</span><span class="sxs-lookup"><span data-stu-id="fbd87-190">This method asynchronously associates a peer name to clouds.</span></span> <span data-ttu-id="fbd87-191">Todas las nubes se consultan para ver el <xref:System.Net.PeerToPeer.PeerName>.</span><span class="sxs-lookup"><span data-stu-id="fbd87-191">All clouds are queried for the <xref:System.Net.PeerToPeer.PeerName>.</span></span> <span data-ttu-id="fbd87-192">Genera el <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> evento, que vuelve a llamar a la <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A> método.</span><span class="sxs-lookup"><span data-stu-id="fbd87-192">It raises the <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event, which calls back to the <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A> method.</span></span> <span data-ttu-id="fbd87-193">O bien, provoca la <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> evento, que vuelve a llamar a la <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A> método.</span><span class="sxs-lookup"><span data-stu-id="fbd87-193">Or, it raises the <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> event, which calls back to the <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A> method.</span></span>  
  
 <span data-ttu-id="fbd87-194">Si el nombre del mismo nivel no se puede resolver una <xref:System.Net.PeerToPeer.PeerToPeerException> se produce.</span><span class="sxs-lookup"><span data-stu-id="fbd87-194">If the peer name cannot be resolved, an <xref:System.Net.PeerToPeer.PeerToPeerException> is thrown.</span></span>  
  
 <span data-ttu-id="fbd87-195">Para los nombres de mismo nivel no protegidos, el mismo nombre puede ser registrado (y asociarlo con extremos diferentes) diferentes elementos del mismo nivel dentro de la misma nube.</span><span class="sxs-lookup"><span data-stu-id="fbd87-195">For unsecured peer names, the same name can be registered (and associated with different endpoints) by different peers within the same cloud.</span></span>  
  
 <span data-ttu-id="fbd87-196">Una llamada a la <xref:System.Net.PeerToPeer.PeerNameResolver> es similar a llamar al método el <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> método para cada registro de nombres del mismo nivel en el <xref:System.Net.PeerToPeer.PeerNameRecordCollection>.</span><span class="sxs-lookup"><span data-stu-id="fbd87-196">Calling the <xref:System.Net.PeerToPeer.PeerNameResolver> method is similar to calling the <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> method for each peer name record in the <xref:System.Net.PeerToPeer.PeerNameRecordCollection>.</span></span> <span data-ttu-id="fbd87-197">Tenga en cuenta que utiliza el método de resolución en un registro de nombre individual del mismo nivel no invalida la resolución de varios nombres de mismo nivel.</span><span class="sxs-lookup"><span data-stu-id="fbd87-197">Note that using the Resolve method on an individual peer name record does not invalidate resolving multiple peer names.</span></span>  
  
 <span data-ttu-id="fbd87-198">Para cada <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> método, hay un equivalente <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> método.</span><span class="sxs-lookup"><span data-stu-id="fbd87-198">For every <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> method, there is an equivalent <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> method.</span></span>  <span data-ttu-id="fbd87-199">Las listas de parámetros son idénticas, salvo que el método ResolveAsync incluye un token del sistema de control de eventos asincrónico, y el método Resolve está pensado para el procesamiento sincrónico.</span><span class="sxs-lookup"><span data-stu-id="fbd87-199">Their parameter lists are identical, except that the ResolveAsync method includes a system token for asynchronous event handling, and the Resolve method is intended for synchronous processing.</span></span>  
  
 <span data-ttu-id="fbd87-200">Todas las referencias asincrónicas al objeto de resolución se coordinan con un token de identificador único.</span><span class="sxs-lookup"><span data-stu-id="fbd87-200">All asynchronous references to the resolver object are coordinated with a unique identifier token.</span></span> <span data-ttu-id="fbd87-201">Esto `userState` identificador de mensaje o símbolo (token) permite que un sistema operativo para entregar un mensaje a un único proceso de recepción después de que el mensaje se ha colocado en la cola de mensajes.</span><span class="sxs-lookup"><span data-stu-id="fbd87-201">This `userState` token or message identifier allows an operating system to deliver a message to a single receiving process after the message has been placed on the message queue.</span></span>  
  
 <span data-ttu-id="fbd87-202">El <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> evento se genera si la operación de resolución completa con errores o se cancela.</span><span class="sxs-lookup"><span data-stu-id="fbd87-202">The <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event will be raised if the resolve operation completes in error or is canceled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fbd87-203">Uno o ambos de los parámetros <paramref name="peerName" /> y <paramref name="userState" /> se establecen en <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fbd87-203">One or both of the <paramref name="peerName" /> and <paramref name="userState" /> parameters are set to <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveAsync">
      <MemberSignature Language="C#" Value="public void ResolveAsync (System.Net.PeerToPeer.PeerName peerName, int maxRecords, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResolveAsync(class System.Net.PeerToPeer.PeerName peerName, int32 maxRecords, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Int32,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResolveAsync(System::Net::PeerToPeer::PeerName ^ peerName, int maxRecords, System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="member this.ResolveAsync : System.Net.PeerToPeer.PeerName * int * obj -&gt; unit" Usage="peerNameResolver.ResolveAsync (peerName, maxRecords, userState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="maxRecords" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="peerName"><span data-ttu-id="fbd87-204"><see cref="T:System.Net.PeerToPeer.PeerName" /> que se va a resolver.</span><span class="sxs-lookup"><span data-stu-id="fbd87-204">The <see cref="T:System.Net.PeerToPeer.PeerName" /> to resolve.</span></span></param>
        <param name="maxRecords"><span data-ttu-id="fbd87-205">Número máximo de registros que se van a obtener para el nombre del mismo nivel.</span><span class="sxs-lookup"><span data-stu-id="fbd87-205">The maximum number of records to obtain for the Peer Name.</span></span></param>
        <param name="userState"><span data-ttu-id="fbd87-206">Objeto definido por el usuario que contiene información sobre la operación de resolución.</span><span class="sxs-lookup"><span data-stu-id="fbd87-206">A user-defined object that contains information about the resolve operation.</span></span></param>
        <summary><span data-ttu-id="fbd87-207">Comienza una operación asincrónica de resolución de nombres del mismo nivel para el <see cref="T:System.Net.PeerToPeer.PeerName" /> especificado en todas las nubes conocidas para el elemento del mismo nivel que realiza la llamada, devolviendo <paramref name="maxRecords" /> entradas como máximo para el nombre del mismo nivel.</span><span class="sxs-lookup"><span data-stu-id="fbd87-207">Begins an asynchronous peer name resolution operation for the specified <see cref="T:System.Net.PeerToPeer.PeerName" /> in all clouds known to the calling peer, returning no more than <paramref name="maxRecords" /> entries for the peer name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbd87-208">Este método asocia de forma asincrónica un nombre de mismo nivel a las nubes.</span><span class="sxs-lookup"><span data-stu-id="fbd87-208">This method asynchronously associates a peer name to clouds.</span></span> <span data-ttu-id="fbd87-209">Todas las nubes se consultan para ver el <xref:System.Net.PeerToPeer.PeerName>.</span><span class="sxs-lookup"><span data-stu-id="fbd87-209">All clouds are queried for the <xref:System.Net.PeerToPeer.PeerName>.</span></span> <span data-ttu-id="fbd87-210">Para los nombres de mismo nivel no protegidos, el mismo nombre puede ser registrado (y asociarlo con extremos diferentes) diferentes elementos del mismo nivel dentro de la misma nube.</span><span class="sxs-lookup"><span data-stu-id="fbd87-210">For unsecured peer names, the same name can be registered (and associated with different endpoints) by different peers within the same cloud.</span></span> <span data-ttu-id="fbd87-211">Si el nombre del mismo nivel no se puede resolver o es `null`, un <xref:System.Net.PeerToPeer.PeerToPeerException> se produce.</span><span class="sxs-lookup"><span data-stu-id="fbd87-211">If the peer name cannot be resolved or is `null`, an <xref:System.Net.PeerToPeer.PeerToPeerException> is thrown.</span></span>  
  
 <span data-ttu-id="fbd87-212">Este método provoca la <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> evento, que vuelve a llamar a la <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A> método.</span><span class="sxs-lookup"><span data-stu-id="fbd87-212">This method raises the <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event, which calls back to the <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A> method.</span></span> <span data-ttu-id="fbd87-213">O bien, provoca la <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> evento, que vuelve a llamar a la <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A> método.</span><span class="sxs-lookup"><span data-stu-id="fbd87-213">Or, it raises the <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> event, which calls back to the <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A> method.</span></span>  
  
 <span data-ttu-id="fbd87-214">Para cada <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> método, hay un equivalente <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> método.</span><span class="sxs-lookup"><span data-stu-id="fbd87-214">For every <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> method, there is an equivalent <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> method.</span></span>  <span data-ttu-id="fbd87-215">Las listas de parámetros son idénticas, salvo que el método ResolveAsync incluye un token del sistema de control de eventos asincrónico, y el método Resolve está pensado para el procesamiento sincrónico.</span><span class="sxs-lookup"><span data-stu-id="fbd87-215">Their parameter lists are identical, except that the ResolveAsync method includes a system token for asynchronous event handling, and the Resolve method is intended for synchronous processing.</span></span>  
  
 <span data-ttu-id="fbd87-216">Todas las referencias asincrónicas al objeto de resolución se coordinan con un token de identificador único <xref:System.Object>.</span><span class="sxs-lookup"><span data-stu-id="fbd87-216">All asynchronous references to the resolver object are coordinated with a unique identifier token <xref:System.Object>.</span></span> <span data-ttu-id="fbd87-217">Esto `userState` identificador de mensaje o símbolo (token) permite que un sistema operativo para entregar un mensaje a un único proceso de recepción después de que el mensaje se ha colocado en la cola de mensajes.</span><span class="sxs-lookup"><span data-stu-id="fbd87-217">This `userState` token or message identifier allows an operating system to deliver a message to a single receiving process after the message has been placed on the message queue.</span></span>  
  
 <span data-ttu-id="fbd87-218">El <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> evento se genera si la operación de resolución completa con errores o se cancela.</span><span class="sxs-lookup"><span data-stu-id="fbd87-218">The <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event will be raised if the resolve operation completes in error or is canceled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fbd87-219">Uno o ambos de los parámetros <paramref name="peerName" /> y <paramref name="userState" /> se establecen en <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fbd87-219">One or both of the <paramref name="peerName" /> and <paramref name="userState" /> parameters are set to <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="fbd87-220">El parámetro <paramref name="maxRecords" /> es menor o igual que cero.</span><span class="sxs-lookup"><span data-stu-id="fbd87-220">The <paramref name="maxRecords" /> parameter is less than or equal to zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveAsync">
      <MemberSignature Language="C#" Value="public void ResolveAsync (System.Net.PeerToPeer.PeerName peerName, System.Net.PeerToPeer.Cloud cloud, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResolveAsync(class System.Net.PeerToPeer.PeerName peerName, class System.Net.PeerToPeer.Cloud cloud, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResolveAsync(System::Net::PeerToPeer::PeerName ^ peerName, System::Net::PeerToPeer::Cloud ^ cloud, System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="member this.ResolveAsync : System.Net.PeerToPeer.PeerName * System.Net.PeerToPeer.Cloud * obj -&gt; unit" Usage="peerNameResolver.ResolveAsync (peerName, cloud, userState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="cloud" Type="System.Net.PeerToPeer.Cloud" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="peerName"><span data-ttu-id="fbd87-221"><see cref="T:System.Net.PeerToPeer.PeerName" /> que se va a resolver.</span><span class="sxs-lookup"><span data-stu-id="fbd87-221">The <see cref="T:System.Net.PeerToPeer.PeerName" /> to resolve.</span></span></param>
        <param name="cloud"><span data-ttu-id="fbd87-222"><see cref="T:System.Net.PeerToPeer.Cloud" /> en el que se va a resolver <paramref name="peerName" />.</span><span class="sxs-lookup"><span data-stu-id="fbd87-222">The <see cref="T:System.Net.PeerToPeer.Cloud" /> in which to resolve the <paramref name="peerName" />.</span></span></param>
        <param name="userState"><span data-ttu-id="fbd87-223"><see cref="T:System.Object" /> definido por el usuario que contiene información sobre la operación de resolución de nombres del mismo nivel.</span><span class="sxs-lookup"><span data-stu-id="fbd87-223">A user-defined <see cref="T:System.Object" /> that contains information about the peer name resolution operation.</span></span></param>
        <summary><span data-ttu-id="fbd87-224">Comienza una operación asincrónica de resolución de nombres del mismo nivel para el <see cref="T:System.Net.PeerToPeer.PeerName" /> especificado en el <see cref="T:System.Net.PeerToPeer.Cloud" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="fbd87-224">Begins an asynchronous peer name resolution operation for the specified <see cref="T:System.Net.PeerToPeer.PeerName" /> in the specified <see cref="T:System.Net.PeerToPeer.Cloud" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbd87-225">Este método provoca la <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> evento, que vuelve a llamar a la <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A> método.</span><span class="sxs-lookup"><span data-stu-id="fbd87-225">This method raises the <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event, which calls back to the <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A> method.</span></span> <span data-ttu-id="fbd87-226">O bien, provoca la <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> evento, que vuelve a llamar a la <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A> método.</span><span class="sxs-lookup"><span data-stu-id="fbd87-226">Or, it raises the <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> event, which calls back to the <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A> method.</span></span>  
  
 <span data-ttu-id="fbd87-227">Para los nombres de mismo nivel no protegidos, el mismo nombre puede ser registrado (y asociarlo con extremos diferentes) diferentes elementos del mismo nivel dentro de la misma nube.</span><span class="sxs-lookup"><span data-stu-id="fbd87-227">For unsecured peer names, the same name can be registered (and associated with different endpoints) by different peers within the same cloud.</span></span>  
  
 <span data-ttu-id="fbd87-228">Si el <xref:System.Net.PeerToPeer.Cloud> parámetro es `null`, el nombre se resuelve mediante la <xref:System.Net.PeerToPeer.Cloud.Available> acceso directo, que inicializa los valores predeterminados para el <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, y <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A> propiedades.</span><span class="sxs-lookup"><span data-stu-id="fbd87-228">If the <xref:System.Net.PeerToPeer.Cloud> parameter is `null`, the name is resolved using the <xref:System.Net.PeerToPeer.Cloud.Available> shortcut, which initializes default values for the <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, and <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A> properties.</span></span>  
  
 <span data-ttu-id="fbd87-229">Para cada <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> método, hay un equivalente <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> método.</span><span class="sxs-lookup"><span data-stu-id="fbd87-229">For every <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> method, there is an equivalent <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> method.</span></span>  <span data-ttu-id="fbd87-230">Las listas de parámetros son idénticas, salvo que el método ResolveAsync incluye un token del sistema de control de eventos asincrónico, y el método Resolve está pensado para el procesamiento sincrónico.</span><span class="sxs-lookup"><span data-stu-id="fbd87-230">Their parameter lists are identical, except that the ResolveAsync method includes a system token for asynchronous event handling, and the Resolve method is intended for synchronous processing.</span></span>  
  
 <span data-ttu-id="fbd87-231">Todas las referencias asincrónicas al objeto de resolución se coordinan con un token de identificador único.</span><span class="sxs-lookup"><span data-stu-id="fbd87-231">All asynchronous references to the resolver object are coordinated with a unique identifier token.</span></span> <span data-ttu-id="fbd87-232">Esto `userState` identificador de mensaje o símbolo (token) permite que un sistema operativo para entregar un mensaje a un único proceso de recepción después de que el mensaje se ha colocado en la cola de mensajes.</span><span class="sxs-lookup"><span data-stu-id="fbd87-232">This `userState` token or message identifier allows an operating system to deliver a message to a single receiving process after the message has been placed on the message queue.</span></span>  
  
 <span data-ttu-id="fbd87-233">El <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> evento se genera si la operación de resolución completa con errores o se cancela.</span><span class="sxs-lookup"><span data-stu-id="fbd87-233">The <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event will be raised if the resolve operation completes in error or is canceled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fbd87-234">Uno o ambos de los parámetros <paramref name="peerName" /> y <paramref name="userState" /> se establecen en <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fbd87-234">One or both of the <paramref name="peerName" /> and <paramref name="userState" /> parameters are set to <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveAsync">
      <MemberSignature Language="C#" Value="public void ResolveAsync (System.Net.PeerToPeer.PeerName peerName, System.Net.PeerToPeer.Cloud cloud, int maxRecords, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResolveAsync(class System.Net.PeerToPeer.PeerName peerName, class System.Net.PeerToPeer.Cloud cloud, int32 maxRecords, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResolveAsync(System::Net::PeerToPeer::PeerName ^ peerName, System::Net::PeerToPeer::Cloud ^ cloud, int maxRecords, System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="member this.ResolveAsync : System.Net.PeerToPeer.PeerName * System.Net.PeerToPeer.Cloud * int * obj -&gt; unit" Usage="peerNameResolver.ResolveAsync (peerName, cloud, maxRecords, userState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="cloud" Type="System.Net.PeerToPeer.Cloud" />
        <Parameter Name="maxRecords" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="peerName"><span data-ttu-id="fbd87-235"><paramref name="peerName" /> que se va a resolver.</span><span class="sxs-lookup"><span data-stu-id="fbd87-235">The <paramref name="peerName" /> to resolve.</span></span></param>
        <param name="cloud"><span data-ttu-id="fbd87-236"><paramref name="cloud" /> en el que se va a resolver <paramref name="peerName" />.</span><span class="sxs-lookup"><span data-stu-id="fbd87-236">The <paramref name="cloud" /> in which to resolve <paramref name="peerName" />.</span></span></param>
        <param name="maxRecords"><span data-ttu-id="fbd87-237">Número máximo de registros que se van a obtener de <paramref name="cloud" /> para <paramref name="peerName" />.</span><span class="sxs-lookup"><span data-stu-id="fbd87-237">The maximum number of records to obtain from <paramref name="cloud" /> for <paramref name="peerName" />.</span></span></param>
        <param name="userState"><span data-ttu-id="fbd87-238">Objeto definido por el usuario que contiene información sobre la operación de resolución de nombres del mismo nivel.</span><span class="sxs-lookup"><span data-stu-id="fbd87-238">A user-defined object that contains information about the peer name resolution operation.</span></span></param>
        <summary><span data-ttu-id="fbd87-239">Comienza una operación asincrónica de resolución de nombres del mismo nivel para el <see cref="T:System.Net.PeerToPeer.PeerName" /> especificado en el <see cref="T:System.Net.PeerToPeer.Cloud" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="fbd87-239">Begins an asynchronous peer name resolution operation for the specified <see cref="T:System.Net.PeerToPeer.PeerName" /> in the specified <see cref="T:System.Net.PeerToPeer.Cloud" />.</span></span>  <span data-ttu-id="fbd87-240">La operación de resolución resolverá <paramref name="maxRecords" /> entradas como máximo para el nombre del mismo nivel especificado.</span><span class="sxs-lookup"><span data-stu-id="fbd87-240">The resolution operation will resolve no more than <paramref name="maxRecords" /> entries for the specified peer name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbd87-241">Para los nombres de mismo nivel no protegidos, el mismo nombre puede ser registrado (y asociarlo con extremos diferentes) diferentes elementos del mismo nivel dentro de la misma nube.</span><span class="sxs-lookup"><span data-stu-id="fbd87-241">For unsecured peer names, the same name can be registered (and associated with different endpoints) by different peers within the same cloud.</span></span>  
  
 <span data-ttu-id="fbd87-242">Este método provoca la <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> evento, que vuelve a llamar a la <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A> método.</span><span class="sxs-lookup"><span data-stu-id="fbd87-242">This method raises the <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event, which calls back to the <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A> method.</span></span> <span data-ttu-id="fbd87-243">O bien, provoca la <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> evento, que vuelve a llamar a la <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A> método.</span><span class="sxs-lookup"><span data-stu-id="fbd87-243">Or, it raises the <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> event, which calls back to the <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A> method.</span></span>  
  
 <span data-ttu-id="fbd87-244">Si el <xref:System.Net.PeerToPeer.Cloud> parámetro es `null`, el nombre se resuelve mediante la <xref:System.Net.PeerToPeer.Cloud.Available> acceso directo, que inicializa los valores predeterminados para el <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, y <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A> propiedades.</span><span class="sxs-lookup"><span data-stu-id="fbd87-244">If the <xref:System.Net.PeerToPeer.Cloud> parameter is `null`, the name is resolved using the <xref:System.Net.PeerToPeer.Cloud.Available> shortcut, which initializes default values for the <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, and <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A> properties.</span></span>  
  
 <span data-ttu-id="fbd87-245">Para cada <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> método, hay un equivalente <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> método.</span><span class="sxs-lookup"><span data-stu-id="fbd87-245">For every <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> method, there is an equivalent <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> method.</span></span>  <span data-ttu-id="fbd87-246">Las listas de parámetros son idénticas, salvo que el método ResolveAsync incluye un token del sistema de control de eventos asincrónico, y el método Resolve está pensado para el procesamiento sincrónico.</span><span class="sxs-lookup"><span data-stu-id="fbd87-246">Their parameter lists are identical, except that the ResolveAsync method includes a system token for asynchronous event handling, and the Resolve method is intended for synchronous processing.</span></span>  
  
 <span data-ttu-id="fbd87-247">Todas las referencias asincrónicas al objeto de resolución del mismo nivel se coordinan con un token de identificador único <xref:System.Object>.</span><span class="sxs-lookup"><span data-stu-id="fbd87-247">All asynchronous references to the peer resolver object are coordinated with a unique identifier token <xref:System.Object>.</span></span> <span data-ttu-id="fbd87-248">Esto `userState` identificador de mensaje o símbolo (token) permite que un sistema operativo para entregar un mensaje a un único proceso de recepción después de que el mensaje se ha colocado en la cola de mensajes.</span><span class="sxs-lookup"><span data-stu-id="fbd87-248">This `userState` token or message identifier allows an operating system to deliver a message to a single receiving process after the message has been placed on the message queue.</span></span>  
  
 <span data-ttu-id="fbd87-249">El <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> evento se genera si la operación de resolución completa con errores o se cancela.</span><span class="sxs-lookup"><span data-stu-id="fbd87-249">The <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event will be raised if the resolve operation completes in error or is canceled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fbd87-250">Uno o ambos de los parámetros <paramref name="peerName" /> y <paramref name="userState" /> se establecen en <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fbd87-250">One or both of the <paramref name="peerName" /> and <paramref name="userState" /> parameters are set to <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fbd87-251">Uno o varios parámetros suministrados no son válidos.</span><span class="sxs-lookup"><span data-stu-id="fbd87-251">One or more supplied parameters are invalid.</span></span></exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException"><span data-ttu-id="fbd87-252">La finalización correcta de esta operación requiere al menos un controlador de eventos.</span><span class="sxs-lookup"><span data-stu-id="fbd87-252">Successful completion of this operation requires at least one event handler.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="fbd87-253">El parámetro <paramref name="maxRecords" /> es menor o igual que cero.</span><span class="sxs-lookup"><span data-stu-id="fbd87-253">The <paramref name="maxRecords" /> parameter is less than or equal to zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveAsyncCancel">
      <MemberSignature Language="C#" Value="public void ResolveAsyncCancel (object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResolveAsyncCancel(object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsyncCancel(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResolveAsyncCancel (userState As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResolveAsyncCancel(System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="member this.ResolveAsyncCancel : obj -&gt; unit" Usage="peerNameResolver.ResolveAsyncCancel userState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="userState"><span data-ttu-id="fbd87-254">Objeto proporcionado a la instancia de método <see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" /> que inicia la operación de resolución.</span><span class="sxs-lookup"><span data-stu-id="fbd87-254">The object provided to the <see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" /> method instance which started the resolve operation.</span></span></param>
        <summary><span data-ttu-id="fbd87-255">Cancela la solicitud de resolución de nombres del mismo nivel asincrónica especificada.</span><span class="sxs-lookup"><span data-stu-id="fbd87-255">Cancels the specified asynchronous peer name resolution request.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbd87-256">Llamada a este método garantiza que el sistema no intentará obtener registros adicionales para el elemento especificado <xref:System.Net.PeerToPeer.PeerName>.</span><span class="sxs-lookup"><span data-stu-id="fbd87-256">Calling this method guarantees the system will not attempt to obtain additional records for the specified <xref:System.Net.PeerToPeer.PeerName>.</span></span>  <span data-ttu-id="fbd87-257">Si este método se llama cuando una operación de resolución de nombres del mismo nivel asincrónica no está pendiente, actúa como una "operación no" (NO OP).</span><span class="sxs-lookup"><span data-stu-id="fbd87-257">If this method is called when an asynchronous peer name resolution operation is not outstanding, it acts as a "no operation" (NO OP).</span></span>  
  
 <span data-ttu-id="fbd87-258">El `userState` debe proporcionarse el objeto ya que se utiliza para realizar un seguimiento de una llamada asincrónica concreta cuando hay varias llamadas en curso.</span><span class="sxs-lookup"><span data-stu-id="fbd87-258">The `userState` object must be provided since it is used to track a specific asynchronous call when multiple calls are in progress.</span></span> <span data-ttu-id="fbd87-259">Este objeto proporcionado por el llamador es único para cada solicitud de resolución de nombres del mismo nivel.</span><span class="sxs-lookup"><span data-stu-id="fbd87-259">This caller-supplied object is unique for each peer name resolution request.</span></span>  
  
 <span data-ttu-id="fbd87-260">Este método devolverá inmediatamente, pero la operación puede o no puede cancelar inmediatamente.</span><span class="sxs-lookup"><span data-stu-id="fbd87-260">This method will return immediately, but the operation may or may not immediately cancel.</span></span> <span data-ttu-id="fbd87-261">Los argumentos de evento devueltos por la <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> evento contiene un campo que se puede sondear los clientes para determinar si se produce la cancelación.</span><span class="sxs-lookup"><span data-stu-id="fbd87-261">The event arguments returned by the <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event contains a field which can be polled by clients to determine whether cancellation occurred.</span></span>  
  
 <span data-ttu-id="fbd87-262">Llamar a este método garantiza que el evento ResolveCompleted se señalará tan pronto como sea posible con el argumento de evento <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> establecido en `true`.</span><span class="sxs-lookup"><span data-stu-id="fbd87-262">Calling this method ensures the ResolveCompleted event will be signaled as soon as possible with the event argument <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> set to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fbd87-263">Los parámetros <paramref name="userState" /> no pueden ser <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fbd87-263">The <paramref name="userState" /> parameters cannot be <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.AsyncCompletedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="ResolveCompleted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Net.PeerToPeer.ResolveCompletedEventArgs&gt; ResolveCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Net.PeerToPeer.ResolveCompletedEventArgs&gt; ResolveCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ResolveCompleted As EventHandler(Of ResolveCompletedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Net::PeerToPeer::ResolveCompletedEventArgs ^&gt; ^ ResolveCompleted;" />
      <MemberSignature Language="F#" Value="member this.ResolveCompleted : EventHandler&lt;System.Net.PeerToPeer.ResolveCompletedEventArgs&gt; " Usage="member this.ResolveCompleted : System.EventHandler&lt;System.Net.PeerToPeer.ResolveCompletedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Net.PeerToPeer.ResolveCompletedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbd87-264">El evento <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" /> se señaliza cuando una solicitud de resolución de nombres de mismo nivel para un <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> determinado se ha completado.</span><span class="sxs-lookup"><span data-stu-id="fbd87-264">The <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" /> event is signaled when a peer name resolution request for a specific <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> has completed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbd87-265">El <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> evento se genera una vez para cada punto de conexión se encuentra y se producirá este evento sólo una vez cuando se han encontrado todos los extremos.</span><span class="sxs-lookup"><span data-stu-id="fbd87-265">The <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> event will be raised once for each endpoint found, and this event will be raised only once when all endpoints have been found.</span></span>  
  
 <span data-ttu-id="fbd87-266">Este evento también se generará si la <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> operación se completa con error o se cancela.</span><span class="sxs-lookup"><span data-stu-id="fbd87-266">This event will also be raised if the <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> operation completes in error or is canceled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="ResolveProgressChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Net.PeerToPeer.ResolveProgressChangedEventArgs&gt; ResolveProgressChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Net.PeerToPeer.ResolveProgressChangedEventArgs&gt; ResolveProgressChanged" />
      <MemberSignature Language="DocId" Value="E:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ResolveProgressChanged As EventHandler(Of ResolveProgressChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Net::PeerToPeer::ResolveProgressChangedEventArgs ^&gt; ^ ResolveProgressChanged;" />
      <MemberSignature Language="F#" Value="member this.ResolveProgressChanged : EventHandler&lt;System.Net.PeerToPeer.ResolveProgressChangedEventArgs&gt; " Usage="member this.ResolveProgressChanged : System.EventHandler&lt;System.Net.PeerToPeer.ResolveProgressChangedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Net.PeerToPeer.ResolveProgressChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbd87-267">Este evento se señala cada vez que se encuentra un objeto <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> en respuesta a una operación <see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" /> para un <see cref="T:System.Net.PeerToPeer.PeerName" /> determinado.</span><span class="sxs-lookup"><span data-stu-id="fbd87-267">This event is signaled whenever a <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> object is found in response to a <see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" /> operation for a specific <see cref="T:System.Net.PeerToPeer.PeerName" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbd87-268">Si hay varios <xref:System.Net.PeerToPeer.PeerName> objetos existen en las nubes que se está consultadas, este evento se señala una vez para cada <xref:System.Net.PeerToPeer.PeerNameRecord> encontrado.</span><span class="sxs-lookup"><span data-stu-id="fbd87-268">If multiple <xref:System.Net.PeerToPeer.PeerName> objects exist in the cloud(s) being queried, this event is signaled once for each <xref:System.Net.PeerToPeer.PeerNameRecord> found.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" />
      </Docs>
    </Member>
  </Members>
</Type>
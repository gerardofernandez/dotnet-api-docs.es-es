<Type Name="ReflectionPermission" FullName="System.Security.Permissions.ReflectionPermission">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e99ade8f31d06aa4d563932f1add6a0247ffd96a" />
    <Meta Name="ms.sourcegitcommit" Value="c0c07dbd19cd7017243f9ac36915755f79bc8da6" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="11/27/2018" />
    <Meta Name="ms.locfileid" Value="52376221" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ReflectionPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit ReflectionPermission extends System.Security.CodeAccessPermission implements class System.Security.Permissions.IUnrestrictedPermission" />
  <TypeSignature Language="DocId" Value="T:System.Security.Permissions.ReflectionPermission" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ReflectionPermission&#xA;Inherits CodeAccessPermission&#xA;Implements IUnrestrictedPermission" />
  <TypeSignature Language="C++ CLI" Value="public ref class ReflectionPermission sealed : System::Security::CodeAccessPermission, System::Security::Permissions::IUnrestrictedPermission" />
  <TypeSignature Language="F#" Value="type ReflectionPermission = class&#xA;    inherit CodeAccessPermission&#xA;    interface IUnrestrictedPermission" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.CodeAccessPermission</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Security.Permissions.IUnrestrictedPermission</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="ab371-101">Controla el acceso a tipos no públicos y miembros a través de las API de <see cref="N:System.Reflection" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ab371-101">Controls access to non-public types and members through the <see cref="N:System.Reflection" /> APIs.</span>
      </span>
      <span data-ttu-id="ab371-102">Controla algunas características de las API de <see cref="N:System.Reflection.Emit" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ab371-102">Controls some features of the <see cref="N:System.Reflection.Emit" /> APIs.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab371-103">Sin <xref:System.Security.Permissions.ReflectionPermission>, código puede usar la reflexión para tener acceso a solo los miembros públicos de objetos.</span><span class="sxs-lookup"><span data-stu-id="ab371-103">Without <xref:System.Security.Permissions.ReflectionPermission>, code can use reflection to access only the public members of objects.</span></span> <span data-ttu-id="ab371-104">Codifique con <xref:System.Security.Permissions.ReflectionPermission> y adecuado <xref:System.Security.Permissions.ReflectionPermissionFlag> marcas pueden tener acceso a la `protected` y `private` miembros de objetos.</span><span class="sxs-lookup"><span data-stu-id="ab371-104">Code with <xref:System.Security.Permissions.ReflectionPermission> and the appropriate <xref:System.Security.Permissions.ReflectionPermissionFlag> flags can access the `protected` and `private` members of objects.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="ab371-105">Dado que <xref:System.Security.Permissions.ReflectionPermission> puede proporcionar acceso a tipos no públicos y miembros, le recomendamos que no conceda <xref:System.Security.Permissions.ReflectionPermission> al código de Internet, excepto con el <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> marca.</span><span class="sxs-lookup"><span data-stu-id="ab371-105">Because <xref:System.Security.Permissions.ReflectionPermission> can provide access to non-public types and members, we recommend that you do not grant <xref:System.Security.Permissions.ReflectionPermission> to Internet code, except with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="ab371-106"><xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess> permite el acceso a miembros no públicos, con la restricción de que el conjunto de permisos de los miembros no públicos debe ser igual a o un subconjunto del conjunto de concesión del código que tiene acceso a los miembros no públicos.</span><span class="sxs-lookup"><span data-stu-id="ab371-106"><xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess> allows access to non-public members, with the restriction that the grant set of the non-public members must be equal to, or a subset of, the grant set of the code that accesses the non-public members.</span></span>  
  
 <span data-ttu-id="ab371-107">Ciertas características de reflection emit, como emitir símbolos de depuración, requieren <xref:System.Security.Permissions.ReflectionPermission> con el <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> marca.</span><span class="sxs-lookup"><span data-stu-id="ab371-107">Certain features of reflection emit, such as emitting debug symbols, require <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span>  
  
 <span data-ttu-id="ab371-108">Para obtener más información, vea la enumeración <xref:System.Security.Permissions.ReflectionPermissionFlag>.</span><span class="sxs-lookup"><span data-stu-id="ab371-108">For more information, see the <xref:System.Security.Permissions.ReflectionPermissionFlag> enumeration.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Security.Permissions.ReflectionPermissionFlag" />
    <altmember cref="T:System.Security.Permissions.ReflectionPermissionAttribute" />
    <related type="Article" href="~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md">
      <span data-ttu-id="ab371-109">Consideraciones de seguridad sobre la reflexión</span>
      <span class="sxs-lookup">
        <span data-stu-id="ab371-109">Security Considerations for Reflection</span>
      </span>
    </related>
    <related type="Article" href="~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md">
      <span data-ttu-id="ab371-110">Problemas de seguridad en la emisión de la reflexión</span>
      <span class="sxs-lookup">
        <span data-stu-id="ab371-110">Security Issues in Reflection Emit</span>
      </span>
    </related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ab371-111">Inicializa una nueva instancia de la clase <see cref="T:System.Security.Permissions.ReflectionPermission" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab371-111">Initializes a new instance of the <see cref="T:System.Security.Permissions.ReflectionPermission" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ReflectionPermission (System.Security.Permissions.PermissionState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.PermissionState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.ReflectionPermission.#ctor(System.Security.Permissions.PermissionState)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (state As PermissionState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ReflectionPermission(System::Security::Permissions::PermissionState state);" />
      <MemberSignature Language="F#" Value="new System.Security.Permissions.ReflectionPermission : System.Security.Permissions.PermissionState -&gt; System.Security.Permissions.ReflectionPermission" Usage="new System.Security.Permissions.ReflectionPermission state" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="state" Type="System.Security.Permissions.PermissionState" />
      </Parameters>
      <Docs>
        <param name="state">
          <span data-ttu-id="ab371-112">Uno de los valores de <see cref="T:System.Security.Permissions.PermissionState" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab371-112">One of the <see cref="T:System.Security.Permissions.PermissionState" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ab371-113">Inicializa una nueva instancia de la clase <see cref="T:System.Security.Permissions.ReflectionPermission" /> con permiso totalmente restringido o sin restricción tal como se especifica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab371-113">Initializes a new instance of the <see cref="T:System.Security.Permissions.ReflectionPermission" /> class with either fully restricted or unrestricted permission as specified.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab371-114">Crea un totalmente restringido (`None`) o `Unrestricted` acceso a los metadatos.</span><span class="sxs-lookup"><span data-stu-id="ab371-114">Creates either fully restricted (`None`) or `Unrestricted` access to metadata.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ab371-115">En el ejemplo de código siguiente se muestra el uso de la <xref:System.Security.Permissions.ReflectionPermission.%23ctor%28System.Security.Permissions.PermissionState%29?displayProperty=nameWithType> constructor.</span><span class="sxs-lookup"><span data-stu-id="ab371-115">The following code example shows the use of the <xref:System.Security.Permissions.ReflectionPermission.%23ctor%28System.Security.Permissions.PermissionState%29?displayProperty=nameWithType> constructor.</span></span> <span data-ttu-id="ab371-116">Este ejemplo forma parte de un ejemplo más extenso proporcionado para el <xref:System.Security.Permissions.ReflectionPermission> clase.</span><span class="sxs-lookup"><span data-stu-id="ab371-116">This example is part of a larger example provided for the <xref:System.Security.Permissions.ReflectionPermission> class.</span></span>  
  
 [!code-csharp[System.Security.Permissions.ReflectionPermission#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.ReflectionPermission/CS/reflectionpermission.cs#7)]
 [!code-vb[System.Security.Permissions.ReflectionPermission#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.ReflectionPermission/VB/reflectionpermission.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ab371-117">El parámetro <paramref name="state" /> no es un valor válido de <see cref="T:System.Security.Permissions.PermissionState" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab371-117">The <paramref name="state" /> parameter is not a valid value of <see cref="T:System.Security.Permissions.PermissionState" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ReflectionPermission (System.Security.Permissions.ReflectionPermissionFlag flag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.ReflectionPermissionFlag flag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.ReflectionPermission.#ctor(System.Security.Permissions.ReflectionPermissionFlag)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (flag As ReflectionPermissionFlag)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ReflectionPermission(System::Security::Permissions::ReflectionPermissionFlag flag);" />
      <MemberSignature Language="F#" Value="new System.Security.Permissions.ReflectionPermission : System.Security.Permissions.ReflectionPermissionFlag -&gt; System.Security.Permissions.ReflectionPermission" Usage="new System.Security.Permissions.ReflectionPermission flag" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="flag" Type="System.Security.Permissions.ReflectionPermissionFlag" />
      </Parameters>
      <Docs>
        <param name="flag">
          <span data-ttu-id="ab371-118">Uno de los valores de <see cref="T:System.Security.Permissions.ReflectionPermissionFlag" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab371-118">One of the <see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ab371-119">Inicializa una nueva instancia de la clase <see cref="T:System.Security.Permissions.ReflectionPermission" /> con el acceso especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab371-119">Initializes a new instance of the <see cref="T:System.Security.Permissions.ReflectionPermission" /> class with the specified access.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ab371-120">En el ejemplo de código siguiente se muestra el uso de la <xref:System.Security.Permissions.ReflectionPermission.%23ctor%28System.Security.Permissions.ReflectionPermissionFlag%29?displayProperty=nameWithType> constructor.</span><span class="sxs-lookup"><span data-stu-id="ab371-120">The following code example shows the use of the <xref:System.Security.Permissions.ReflectionPermission.%23ctor%28System.Security.Permissions.ReflectionPermissionFlag%29?displayProperty=nameWithType> constructor.</span></span> <span data-ttu-id="ab371-121">Este ejemplo forma parte de un ejemplo más extenso proporcionado para el <xref:System.Security.Permissions.ReflectionPermission> clase.</span><span class="sxs-lookup"><span data-stu-id="ab371-121">This example is part of a larger example provided for the <xref:System.Security.Permissions.ReflectionPermission> class.</span></span>  
  
 [!code-csharp[System.Security.Permissions.ReflectionPermission#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.ReflectionPermission/CS/reflectionpermission.cs#8)]
 [!code-vb[System.Security.Permissions.ReflectionPermission#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.ReflectionPermission/VB/reflectionpermission.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ab371-122">El parámetro <paramref name="flag" /> no es un valor válido de <see cref="T:System.Security.Permissions.ReflectionPermissionFlag" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab371-122">The <paramref name="flag" /> parameter is not a valid value of <see cref="T:System.Security.Permissions.ReflectionPermissionFlag" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.ReflectionPermission.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Copy () As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Copy();" />
      <MemberSignature Language="F#" Value="override this.Copy : unit -&gt; System.Security.IPermission" Usage="reflectionPermission.Copy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ab371-123">Crea y devuelve una copia idéntica del permiso actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab371-123">Creates and returns an identical copy of the current permission.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ab371-124">Copia del permiso actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab371-124">A copy of the current permission.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab371-125">Una copia de un permiso representa el mismo acceso a los recursos que el permiso original.</span><span class="sxs-lookup"><span data-stu-id="ab371-125">A copy of a permission represents the same access to resources as the original permission.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ab371-126">El ejemplo de código siguiente muestra el comportamiento de la <xref:System.Security.Permissions.ReflectionPermission.Copy%2A> método.</span><span class="sxs-lookup"><span data-stu-id="ab371-126">The following code example shows the behavior of the <xref:System.Security.Permissions.ReflectionPermission.Copy%2A> method.</span></span> <span data-ttu-id="ab371-127">Este ejemplo forma parte de un ejemplo más extenso proporcionado para el <xref:System.Security.Permissions.ReflectionPermission> clase.</span><span class="sxs-lookup"><span data-stu-id="ab371-127">This example is part of a larger example provided for the <xref:System.Security.Permissions.ReflectionPermission> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ab371-128">El ejemplo de código está pensado para mostrar el comportamiento del método, no para mostrar su uso.</span><span class="sxs-lookup"><span data-stu-id="ab371-128">The code example is intended to show the behavior of the method, not to demonstrate its use.</span></span> <span data-ttu-id="ab371-129">En general, se utilizan los métodos de clases de permiso por la infraestructura de seguridad. no se usan normalmente en aplicaciones.</span><span class="sxs-lookup"><span data-stu-id="ab371-129">In general, the methods of permission classes are used by the security infrastructure; they are not typically used in applications.</span></span>  
  
 [!code-csharp[System.Security.Permissions.ReflectionPermission#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.ReflectionPermission/CS/reflectionpermission.cs#5)]
 [!code-vb[System.Security.Permissions.ReflectionPermission#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.ReflectionPermission/VB/reflectionpermission.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flags">
      <MemberSignature Language="C#" Value="public System.Security.Permissions.ReflectionPermissionFlag Flags { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Permissions.ReflectionPermissionFlag Flags" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.ReflectionPermission.Flags" />
      <MemberSignature Language="VB.NET" Value="Public Property Flags As ReflectionPermissionFlag" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Permissions::ReflectionPermissionFlag Flags { System::Security::Permissions::ReflectionPermissionFlag get(); void set(System::Security::Permissions::ReflectionPermissionFlag value); };" />
      <MemberSignature Language="F#" Value="member this.Flags : System.Security.Permissions.ReflectionPermissionFlag with get, set" Usage="System.Security.Permissions.ReflectionPermission.Flags" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Permissions.ReflectionPermissionFlag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ab371-130">Obtiene o establece el tipo de reflexión permitido para el permiso actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab371-130">Gets or sets the type of reflection allowed for the current permission.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ab371-131">Marcadores establecidos para el permiso actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab371-131">The set flags for the current permission.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ab371-132">En el ejemplo de código siguiente se muestra el uso de la <xref:System.Security.Permissions.ReflectionPermission.Flags%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="ab371-132">The following code example shows the use of the <xref:System.Security.Permissions.ReflectionPermission.Flags%2A> property.</span></span> <span data-ttu-id="ab371-133">Este ejemplo forma parte de un ejemplo más extenso proporcionado para el <xref:System.Security.Permissions.ReflectionPermission> clase.</span><span class="sxs-lookup"><span data-stu-id="ab371-133">This example is part of a larger example provided for the <xref:System.Security.Permissions.ReflectionPermission> class.</span></span>  
  
 [!code-csharp[System.Security.Permissions.ReflectionPermission#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.ReflectionPermission/CS/reflectionpermission.cs#2)]
 [!code-vb[System.Security.Permissions.ReflectionPermission#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.ReflectionPermission/VB/reflectionpermission.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ab371-134">Se realiza un intento para establecer esta propiedad en un valor no válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab371-134">An attempt is made to set this property to an invalid value.</span>
          </span>
          <span data-ttu-id="ab371-135">Consulte <see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /> para obtener los valores válidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab371-135">See <see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /> for the valid values.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="FromXml">
      <MemberSignature Language="C#" Value="public override void FromXml (System.Security.SecurityElement esd);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void FromXml(class System.Security.SecurityElement esd) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.ReflectionPermission.FromXml(System.Security.SecurityElement)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub FromXml (esd As SecurityElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void FromXml(System::Security::SecurityElement ^ esd);" />
      <MemberSignature Language="F#" Value="override this.FromXml : System.Security.SecurityElement -&gt; unit" Usage="reflectionPermission.FromXml esd" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="esd" Type="System.Security.SecurityElement" />
      </Parameters>
      <Docs>
        <param name="esd">
          <span data-ttu-id="ab371-136">Codificación XML que se usa para reconstruir el permiso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab371-136">The XML encoding to use to reconstruct the permission.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ab371-137">Reconstruye un permiso con un estado especificado a partir de una codificación XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab371-137">Reconstructs a permission with a specified state from an XML encoding.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ab371-138">El ejemplo de código siguiente muestra el comportamiento de la <xref:System.Security.Permissions.ReflectionPermission.FromXml%2A> método.</span><span class="sxs-lookup"><span data-stu-id="ab371-138">The following code example shows the behavior of the <xref:System.Security.Permissions.ReflectionPermission.FromXml%2A> method.</span></span> <span data-ttu-id="ab371-139">Este ejemplo forma parte de un ejemplo más extenso proporcionado para el <xref:System.Security.Permissions.ReflectionPermission> clase.</span><span class="sxs-lookup"><span data-stu-id="ab371-139">This example is part of a larger example provided for the <xref:System.Security.Permissions.ReflectionPermission> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ab371-140">El ejemplo de código está pensado para mostrar el comportamiento del método, no para mostrar su uso.</span><span class="sxs-lookup"><span data-stu-id="ab371-140">The code example is intended to show the behavior of the method, not to demonstrate its use.</span></span> <span data-ttu-id="ab371-141">En general, se utilizan los métodos de clases de permiso por la infraestructura de seguridad. no se usan normalmente en aplicaciones.</span><span class="sxs-lookup"><span data-stu-id="ab371-141">In general, the methods of permission classes are used by the security infrastructure; they are not typically used in applications.</span></span>  
  
 [!code-csharp[System.Security.Permissions.ReflectionPermission#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.ReflectionPermission/CS/reflectionpermission.cs#6)]
 [!code-vb[System.Security.Permissions.ReflectionPermission#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.ReflectionPermission/VB/reflectionpermission.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ab371-142">El parámetro <paramref name="esd" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab371-142">The <paramref name="esd" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ab371-143">El parámetro <paramref name="esd" /> no es un elemento de permiso válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab371-143">The <paramref name="esd" /> parameter is not a valid permission element.</span>
          </span>
          <span data-ttu-id="ab371-144">O bien</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab371-144">-or-</span>
          </span>
          <span data-ttu-id="ab371-145">El número de la versión del parámetro <paramref name="esd" /> no es válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab371-145">The <paramref name="esd" /> parameter's version number is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Intersect (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Intersect(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.ReflectionPermission.Intersect(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Intersect (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Intersect(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="override this.Intersect : System.Security.IPermission -&gt; System.Security.IPermission" Usage="reflectionPermission.Intersect target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="ab371-146">Permiso para formar intersección con el permiso actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab371-146">A permission to intersect with the current permission.</span>
          </span>
          <span data-ttu-id="ab371-147">Debe ser del mismo tipo que el permiso actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab371-147">It must be of the same type as the current permission.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ab371-148">Crea y devuelve un permiso que es la intersección del permiso actual y el permiso especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab371-148">Creates and returns a permission that is the intersection of the current permission and the specified permission.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ab371-149">Nuevo permiso que representa la intersección del permiso actual y del permiso especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab371-149">A new permission that represents the intersection of the current permission and the specified permission.</span>
          </span>
          <span data-ttu-id="ab371-150">Este nuevo permiso es <see langword="null" /> si la intersección está vacía.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab371-150">This new permission is <see langword="null" /> if the intersection is empty.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab371-151">La intersección de dos permisos es un permiso que describe el conjunto de operaciones descritas en ambos.</span><span class="sxs-lookup"><span data-stu-id="ab371-151">The intersection of two permissions is a permission that describes the set of operations they both describe in common.</span></span> <span data-ttu-id="ab371-152">Sólo una petición que pase ambos permisos originales pasará la intersección.</span><span class="sxs-lookup"><span data-stu-id="ab371-152">Only a demand that passes both original permissions will pass the intersection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ab371-153">El ejemplo de código siguiente muestra el comportamiento de la <xref:System.Security.Permissions.ReflectionPermission.Intersect%2A> método.</span><span class="sxs-lookup"><span data-stu-id="ab371-153">The following code example shows the behavior of the <xref:System.Security.Permissions.ReflectionPermission.Intersect%2A> method.</span></span> <span data-ttu-id="ab371-154">Este ejemplo forma parte de un ejemplo más extenso proporcionado para el <xref:System.Security.Permissions.ReflectionPermission> clase.</span><span class="sxs-lookup"><span data-stu-id="ab371-154">This example is part of a larger example provided for the <xref:System.Security.Permissions.ReflectionPermission> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ab371-155">El ejemplo de código está pensado para mostrar el comportamiento del método, no para mostrar su uso.</span><span class="sxs-lookup"><span data-stu-id="ab371-155">The code example is intended to show the behavior of the method, not to demonstrate its use.</span></span> <span data-ttu-id="ab371-156">En general, se utilizan los métodos de clases de permiso por la infraestructura de seguridad. no se usan normalmente en aplicaciones.</span><span class="sxs-lookup"><span data-stu-id="ab371-156">In general, the methods of permission classes are used by the security infrastructure; they are not typically used in applications.</span></span>  
  
 [!code-csharp[System.Security.Permissions.ReflectionPermission#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.ReflectionPermission/CS/reflectionpermission.cs#4)]
 [!code-vb[System.Security.Permissions.ReflectionPermission#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.ReflectionPermission/VB/reflectionpermission.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ab371-157">El parámetro <paramref name="target" /> no es <see langword="null" /> y no es del mismo tipo que el permiso actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab371-157">The <paramref name="target" /> parameter is not <see langword="null" /> and is not of the same type as the current permission.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsSubsetOf">
      <MemberSignature Language="C#" Value="public override bool IsSubsetOf (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsSubsetOf(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.ReflectionPermission.IsSubsetOf(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsSubsetOf (target As IPermission) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsSubsetOf(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="override this.IsSubsetOf : System.Security.IPermission -&gt; bool" Usage="reflectionPermission.IsSubsetOf target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="ab371-158">Permiso que se va a probar para la relación de subconjunto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab371-158">A permission that is to be tested for the subset relationship.</span>
          </span>
          <span data-ttu-id="ab371-159">Este permiso debe ser del mismo tipo que el permiso actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab371-159">This permission must be of the same type as the current permission.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ab371-160">Determina si el permiso actual es un subconjunto del permiso especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab371-160">Determines whether the current permission is a subset of the specified permission.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ab371-161">
            <see langword="true" /> si el permiso actual es un subconjunto del permiso especificado; si no, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab371-161">
              <see langword="true" /> if the current permission is a subset of the specified permission; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab371-162">El permiso actual es un subconjunto del permiso especificado si el permiso actual especifica un conjunto de operaciones que está incluido completamente por el permiso especificado.</span><span class="sxs-lookup"><span data-stu-id="ab371-162">The current permission is a subset of the specified permission if the current permission specifies a set of operations that is wholly contained by the specified permission.</span></span> <span data-ttu-id="ab371-163">Por ejemplo, un permiso que representa el acceso a C:\example.txt es un subconjunto de un permiso que representa el acceso a C:\\.</span><span class="sxs-lookup"><span data-stu-id="ab371-163">For example, a permission that represents access to C:\example.txt is a subset of a permission that represents access to C:\\.</span></span> <span data-ttu-id="ab371-164">Si este método devuelve `true`, el permiso actual no representa ningún más acceso al recurso protegido que tiene el permiso especificado.</span><span class="sxs-lookup"><span data-stu-id="ab371-164">If this method returns `true`, the current permission represents no more access to the protected resource than does the specified permission.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ab371-165">El ejemplo de código siguiente muestra el comportamiento de la <xref:System.Security.Permissions.ReflectionPermission.IsSubsetOf%2A> método.</span><span class="sxs-lookup"><span data-stu-id="ab371-165">The following code example shows the behavior of the <xref:System.Security.Permissions.ReflectionPermission.IsSubsetOf%2A> method.</span></span> <span data-ttu-id="ab371-166">Este ejemplo forma parte de un ejemplo más extenso proporcionado para el <xref:System.Security.Permissions.ReflectionPermission> clase.</span><span class="sxs-lookup"><span data-stu-id="ab371-166">This example is part of a larger example provided for the <xref:System.Security.Permissions.ReflectionPermission> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ab371-167">El ejemplo de código está pensado para mostrar el comportamiento del método, no para mostrar su uso.</span><span class="sxs-lookup"><span data-stu-id="ab371-167">The code example is intended to show the behavior of the method, not to demonstrate its use.</span></span> <span data-ttu-id="ab371-168">En general, se utilizan los métodos de clases de permiso por la infraestructura de seguridad. no se usan normalmente en aplicaciones.</span><span class="sxs-lookup"><span data-stu-id="ab371-168">In general, the methods of permission classes are used by the security infrastructure; they are not typically used in applications.</span></span>  
  
 [!code-csharp[System.Security.Permissions.ReflectionPermission#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.ReflectionPermission/CS/reflectionpermission.cs#2)]
 [!code-vb[System.Security.Permissions.ReflectionPermission#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.ReflectionPermission/VB/reflectionpermission.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ab371-169">El parámetro <paramref name="target" /> no es <see langword="null" /> y no es del mismo tipo que el permiso actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab371-169">The <paramref name="target" /> parameter is not <see langword="null" /> and is not of the same type as the current permission.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsUnrestricted">
      <MemberSignature Language="C#" Value="public bool IsUnrestricted ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsUnrestricted() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.ReflectionPermission.IsUnrestricted" />
      <MemberSignature Language="VB.NET" Value="Public Function IsUnrestricted () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsUnrestricted();" />
      <MemberSignature Language="F#" Value="override this.IsUnrestricted : unit -&gt; bool" Usage="reflectionPermission.IsUnrestricted " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.Permissions.IUnrestrictedPermission.IsUnrestricted</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ab371-170">Devuelve un valor que indica si el permiso actual no está restringido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab371-170">Returns a value indicating whether the current permission is unrestricted.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ab371-171">
            <see langword="true" /> si el permiso actual no está restringido; de lo contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab371-171">
              <see langword="true" /> if the current permission is unrestricted; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab371-172">Un permiso no restringido representa el acceso a todos los recursos protegidos por el permiso.</span><span class="sxs-lookup"><span data-stu-id="ab371-172">An unrestricted permission represents access to any and all resources protected by the permission.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToXml">
      <MemberSignature Language="C#" Value="public override System.Security.SecurityElement ToXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.SecurityElement ToXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.ReflectionPermission.ToXml" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToXml () As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::SecurityElement ^ ToXml();" />
      <MemberSignature Language="F#" Value="override this.ToXml : unit -&gt; System.Security.SecurityElement" Usage="reflectionPermission.ToXml " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ab371-173">Crea una codificación XML del permiso y su estado actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab371-173">Creates an XML encoding of the permission and its current state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ab371-174">Codificación XML del permiso, incluida cualquier información de estado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab371-174">An XML encoding of the permission, including any state information.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ab371-175">El ejemplo de código siguiente muestra el comportamiento de la <xref:System.Security.Permissions.ReflectionPermission.ToXml%2A> método.</span><span class="sxs-lookup"><span data-stu-id="ab371-175">The following code example shows the behavior of the <xref:System.Security.Permissions.ReflectionPermission.ToXml%2A> method.</span></span> <span data-ttu-id="ab371-176">Este ejemplo forma parte de un ejemplo más extenso proporcionado para el <xref:System.Security.Permissions.ReflectionPermission> clase.</span><span class="sxs-lookup"><span data-stu-id="ab371-176">This example is part of a larger example provided for the <xref:System.Security.Permissions.ReflectionPermission> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ab371-177">El ejemplo de código está pensado para mostrar el comportamiento del método, no para mostrar su uso.</span><span class="sxs-lookup"><span data-stu-id="ab371-177">The code example is intended to show the behavior of the method, not to demonstrate its use.</span></span> <span data-ttu-id="ab371-178">En general, se utilizan los métodos de clases de permiso por la infraestructura de seguridad. no se usan normalmente en aplicaciones.</span><span class="sxs-lookup"><span data-stu-id="ab371-178">In general, the methods of permission classes are used by the security infrastructure; they are not typically used in applications.</span></span>  
  
 [!code-csharp[System.Security.Permissions.ReflectionPermission#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.ReflectionPermission/CS/reflectionpermission.cs#6)]
 [!code-vb[System.Security.Permissions.ReflectionPermission#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.ReflectionPermission/VB/reflectionpermission.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Union (System.Security.IPermission other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Union(class System.Security.IPermission other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.ReflectionPermission.Union(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Union (other As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Union(System::Security::IPermission ^ other);" />
      <MemberSignature Language="F#" Value="override this.Union : System.Security.IPermission -&gt; System.Security.IPermission" Usage="reflectionPermission.Union other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="ab371-179">Permiso para combinar con el permiso actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab371-179">A permission to combine with the current permission.</span>
          </span>
          <span data-ttu-id="ab371-180">Debe ser del mismo tipo que el permiso actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab371-180">It must be of the same type as the current permission.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ab371-181">Crea un permiso que es la unión del permiso actual y el permiso especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab371-181">Creates a permission that is the union of the current permission and the specified permission.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ab371-182">Nuevo permiso que representa la unión del permiso actual y el especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab371-182">A new permission that represents the union of the current permission and the specified permission.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab371-183">El resultado de una llamada a <xref:System.Security.Permissions.ReflectionPermission.Union%2A> es un permiso que representa todas las operaciones representadas por el permiso actual y el permiso especificado.</span><span class="sxs-lookup"><span data-stu-id="ab371-183">The result of a call to <xref:System.Security.Permissions.ReflectionPermission.Union%2A> is a permission that represents all the operations represented by both the current permission and the specified permission.</span></span> <span data-ttu-id="ab371-184">Cualquier solicitud que pase alguno de estos permisos pasa su unión.</span><span class="sxs-lookup"><span data-stu-id="ab371-184">Any demand that passes either permission passes their union.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ab371-185">El ejemplo de código siguiente muestra el comportamiento de la <xref:System.Security.Permissions.ReflectionPermission.Union%2A> método.</span><span class="sxs-lookup"><span data-stu-id="ab371-185">The following code example shows the behavior of the <xref:System.Security.Permissions.ReflectionPermission.Union%2A> method.</span></span> <span data-ttu-id="ab371-186">Este ejemplo forma parte de un ejemplo más extenso proporcionado para el <xref:System.Security.Permissions.ReflectionPermission> clase.</span><span class="sxs-lookup"><span data-stu-id="ab371-186">This example is part of a larger example provided for the <xref:System.Security.Permissions.ReflectionPermission> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ab371-187">El ejemplo de código está pensado para mostrar el comportamiento del método, no para mostrar su uso.</span><span class="sxs-lookup"><span data-stu-id="ab371-187">The code example is intended to show the behavior of the method, not to demonstrate its use.</span></span> <span data-ttu-id="ab371-188">En general, se utilizan los métodos de clases de permiso por la infraestructura de seguridad. no se usan normalmente en aplicaciones.</span><span class="sxs-lookup"><span data-stu-id="ab371-188">In general, the methods of permission classes are used by the security infrastructure; they are not typically used in applications.</span></span>  
  
 [!code-csharp[System.Security.Permissions.ReflectionPermission#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.ReflectionPermission/CS/reflectionpermission.cs#3)]
 [!code-vb[System.Security.Permissions.ReflectionPermission#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.ReflectionPermission/VB/reflectionpermission.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ab371-189">El parámetro <paramref name="other" /> no es <see langword="null" /> y no es del mismo tipo que el permiso actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab371-189">The <paramref name="other" /> parameter is not <see langword="null" /> and is not of the same type as the current permission.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>
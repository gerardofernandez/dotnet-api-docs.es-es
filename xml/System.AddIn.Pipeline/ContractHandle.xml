<Type Name="ContractHandle" FullName="System.AddIn.Pipeline.ContractHandle">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c28d87cbf78b300f20b08763f082be038565a46d" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39860742" /></Metadata><TypeSignature Language="C#" Value="public class ContractHandle : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ContractHandle extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.AddIn.Pipeline.ContractHandle" />
  <TypeSignature Language="VB.NET" Value="Public Class ContractHandle&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class ContractHandle : IDisposable" />
  <TypeSignature Language="F#" Value="type ContractHandle = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.AddIn</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="dcd69-101">Proporciona métodos que controlan la duración de un complemento.</span><span class="sxs-lookup"><span data-stu-id="dcd69-101">Provides methods that control the lifetime of an add-in.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcd69-102">Debido a que el modelo proporciona la capacidad de complementos para la comunicación entre dominios de aplicación y entre los procesos, no se basan en el recolector de elementos no utilizados para reclamar su.</span><span class="sxs-lookup"><span data-stu-id="dcd69-102">Because the add-in model provides the ability for add-ins to communicate between application domains and between processes, it cannot rely on the garbage collector to reclaim them.</span></span> <span data-ttu-id="dcd69-103">Esta clase proporciona una referencia al mecanismo para el complemento de recuento mediante la obtención de un token de duración a su contrato.</span><span class="sxs-lookup"><span data-stu-id="dcd69-103">This class provides a reference counting mechanism for the add-in by obtaining a lifetime token to its contract.</span></span>  
  
 <span data-ttu-id="dcd69-104">Cuando un <xref:System.AddIn.Pipeline.ContractHandle> haya construido, llama a la <xref:System.AddIn.Pipeline.ContractBase.AcquireLifetimeToken%2A> método en el contrato que se pasa al constructor.</span><span class="sxs-lookup"><span data-stu-id="dcd69-104">When a <xref:System.AddIn.Pipeline.ContractHandle> object is constructed, it calls the <xref:System.AddIn.Pipeline.ContractBase.AcquireLifetimeToken%2A> method on the contract that is passed to the constructor.</span></span> <span data-ttu-id="dcd69-105">Cuando el <xref:System.AddIn.Pipeline.ContractHandle> objeto se elimine o finalice, llama a la <xref:System.AddIn.Pipeline.ContractBase.RevokeLifetimeToken%2A> método en el contrato, que quita el bloqueo en el contrato.</span><span class="sxs-lookup"><span data-stu-id="dcd69-105">When the <xref:System.AddIn.Pipeline.ContractHandle> object is disposed or finalized, it calls the <xref:System.AddIn.Pipeline.ContractBase.RevokeLifetimeToken%2A> method on the contract, which removes its hold on the contract.</span></span>  
  
 <span data-ttu-id="dcd69-106">Adaptadores implementan el contrato.</span><span class="sxs-lookup"><span data-stu-id="dcd69-106">Adapters implement the contract.</span></span> <span data-ttu-id="dcd69-107">La <xref:System.AddIn.Pipeline.ContractHandle> clase está diseñada para usarse en un adaptador de contrato a vista para ayudar a los desarrolladores de la canalización a administrar la vigencia del contrato que se está adaptando.</span><span class="sxs-lookup"><span data-stu-id="dcd69-107">The <xref:System.AddIn.Pipeline.ContractHandle> class is designed to be used in a contract-to-view adapter to help pipeline developers manage the lifetime of the contract that is being adapted.</span></span> <span data-ttu-id="dcd69-108">Normalmente, una instancia de esta clase se crea una instancia durante la construcción de la clase de adaptador y se almacena en un campo de instancia del adaptador.</span><span class="sxs-lookup"><span data-stu-id="dcd69-108">Typically, an instance of this class is instantiated during the construction of the adapter class and is stored in an instance field of the adapter.</span></span> <span data-ttu-id="dcd69-109">Cuando la clase de adaptador es recopilar los elementos no utilizados, el <xref:System.AddIn.Pipeline.ContractHandle> objeto también se recopilarán y el <xref:System.AddIn.Pipeline.ContractHandle> objeto revocará el token de duración en el contrato.</span><span class="sxs-lookup"><span data-stu-id="dcd69-109">When the adapter class is garbage-collected, the <xref:System.AddIn.Pipeline.ContractHandle> object will also be collected and the <xref:System.AddIn.Pipeline.ContractHandle> object will revoke the lifetime token on the contract.</span></span>  
  
 <span data-ttu-id="dcd69-110">Se recomienda que los adaptadores de vista a contrato heredan el <xref:System.AddIn.Pipeline.ContractBase> clase.</span><span class="sxs-lookup"><span data-stu-id="dcd69-110">It is recommended that your view-to-contract adapters inherit from the <xref:System.AddIn.Pipeline.ContractBase> class.</span></span> <span data-ttu-id="dcd69-111">A continuación, puede usar una implementación predeterminada para los miembros de <xref:System.AddIn.Contract.IContract>, lo que significa que deba implementar solo los miembros de su contrato específico.</span><span class="sxs-lookup"><span data-stu-id="dcd69-111">You can then use a default implementation for the members of <xref:System.AddIn.Contract.IContract>, which means you need to implement only the members of your specific contract.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dcd69-112">El ejemplo siguiente muestra cómo establecer el identificador del token de duración en un adaptador de contrato a vista en el lado del complemento de una canalización.</span><span class="sxs-lookup"><span data-stu-id="dcd69-112">The following example shows how to set the lifetime token handle in a contract-to-view adapter on the add-in side of a pipeline.</span></span>  
  
 [!code-csharp[AddinP2HostSideAdapters#2](~/samples/snippets/csharp/VS_Snippets_CLR/AddInP2HostSideAdapters/cs/Calc2ContractToViewHostSideAdapter.cs#2)]
 [!code-vb[AddinP2HostSideAdapters#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/AddInP2HostSideAdapters/vb/Calc2ContractToViewHostSideAdapter.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContractHandle (System.AddIn.Contract.IContract contract);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.AddIn.Contract.IContract contract) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.ContractHandle.#ctor(System.AddIn.Contract.IContract)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (contract As IContract)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ContractHandle(System::AddIn::Contract::IContract ^ contract);" />
      <MemberSignature Language="F#" Value="new System.AddIn.Pipeline.ContractHandle : System.AddIn.Contract.IContract -&gt; System.AddIn.Pipeline.ContractHandle" Usage="new System.AddIn.Pipeline.ContractHandle contract" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contract" Type="System.AddIn.Contract.IContract" />
      </Parameters>
      <Docs>
        <param name="contract"><span data-ttu-id="dcd69-113">Contrato que se va a utilizar en la canalización.</span><span class="sxs-lookup"><span data-stu-id="dcd69-113">The contract to use in the pipeline.</span></span></param>
        <summary><span data-ttu-id="dcd69-114">Inicializa una nueva instancia de la clase <see cref="T:System.AddIn.Pipeline.ContractHandle" />.</span><span class="sxs-lookup"><span data-stu-id="dcd69-114">Initializes a new instance of the <see cref="T:System.AddIn.Pipeline.ContractHandle" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="dcd69-115"><paramref name="contract" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="dcd69-115"><paramref name="contract" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AppDomainOwner">
      <MemberSignature Language="C#" Value="public static System.AddIn.Contract.IContract AppDomainOwner (AppDomain domain);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.AddIn.Contract.IContract AppDomainOwner(class System.AppDomain domain) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.ContractHandle.AppDomainOwner(System.AppDomain)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AppDomainOwner (domain As AppDomain) As IContract" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::AddIn::Contract::IContract ^ AppDomainOwner(AppDomain ^ domain);" />
      <MemberSignature Language="F#" Value="static member AppDomainOwner : AppDomain -&gt; System.AddIn.Contract.IContract" Usage="System.AddIn.Pipeline.ContractHandle.AppDomainOwner domain" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.IContract</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="domain" Type="System.AppDomain" />
      </Parameters>
      <Docs>
        <param name="domain"><span data-ttu-id="dcd69-116">Dominio de aplicación que se va a comprobar.</span><span class="sxs-lookup"><span data-stu-id="dcd69-116">The application domain to check.</span></span></param>
        <summary><span data-ttu-id="dcd69-117">Obtiene la instancia del adaptador de conversión cuando se creó el dominio de aplicación.</span><span class="sxs-lookup"><span data-stu-id="dcd69-117">Gets the instance of the add-in-side adapter when the application domain was created.</span></span></summary>
        <returns><span data-ttu-id="dcd69-118">Objeto <see cref="T:System.AddIn.Contract.IContract" /> que representa al propietario del dominio de aplicación.</span><span class="sxs-lookup"><span data-stu-id="dcd69-118">An <see cref="T:System.AddIn.Contract.IContract" /> object that represents the owner of the application domain.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcd69-119">Los adaptadores de agregar en el lado se escriben como <xref:System.AddIn.Contract.IContract>.</span><span class="sxs-lookup"><span data-stu-id="dcd69-119">The add-in-side adapters are typed as <xref:System.AddIn.Contract.IContract>.</span></span>  
  
 <span data-ttu-id="dcd69-120">Si el dominio de aplicación se ha creado previamente por el usuario, no hay ningún propietario.</span><span class="sxs-lookup"><span data-stu-id="dcd69-120">If the application domain was previously created by a user, there is no owner.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="dcd69-121"><paramref name="domain" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="dcd69-121"><paramref name="domain" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Contract">
      <MemberSignature Language="C#" Value="public System.AddIn.Contract.IContract Contract { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.AddIn.Contract.IContract Contract" />
      <MemberSignature Language="DocId" Value="P:System.AddIn.Pipeline.ContractHandle.Contract" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Contract As IContract" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::AddIn::Contract::IContract ^ Contract { System::AddIn::Contract::IContract ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Contract : System.AddIn.Contract.IContract" Usage="System.AddIn.Pipeline.ContractHandle.Contract" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.IContract</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dcd69-122">Obtiene el contrato utilizado por una canalización.</span><span class="sxs-lookup"><span data-stu-id="dcd69-122">Gets the contract used by a pipeline.</span></span></summary>
        <value><span data-ttu-id="dcd69-123">Contrato, que se deriva de <see cref="T:System.AddIn.Contract.IContract" />.</span><span class="sxs-lookup"><span data-stu-id="dcd69-123">The contract, which is derived from <see cref="T:System.AddIn.Contract.IContract" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContractOwnsAppDomain">
      <MemberSignature Language="C#" Value="public static bool ContractOwnsAppDomain (System.AddIn.Contract.IContract contract, AppDomain domain);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ContractOwnsAppDomain(class System.AddIn.Contract.IContract contract, class System.AppDomain domain) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.ContractHandle.ContractOwnsAppDomain(System.AddIn.Contract.IContract,System.AppDomain)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContractOwnsAppDomain (contract As IContract, domain As AppDomain) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ContractOwnsAppDomain(System::AddIn::Contract::IContract ^ contract, AppDomain ^ domain);" />
      <MemberSignature Language="F#" Value="static member ContractOwnsAppDomain : System.AddIn.Contract.IContract * AppDomain -&gt; bool" Usage="System.AddIn.Pipeline.ContractHandle.ContractOwnsAppDomain (contract, domain)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contract" Type="System.AddIn.Contract.IContract" />
        <Parameter Name="domain" Type="System.AppDomain" />
      </Parameters>
      <Docs>
        <param name="contract"><span data-ttu-id="dcd69-124">Contrato que se va a comprobar.</span><span class="sxs-lookup"><span data-stu-id="dcd69-124">The contract to check.</span></span></param>
        <param name="domain"><span data-ttu-id="dcd69-125">Dominio de aplicación que se va a comprobar.</span><span class="sxs-lookup"><span data-stu-id="dcd69-125">The application domain to check.</span></span></param>
        <summary><span data-ttu-id="dcd69-126">Determina si un dominio de aplicación es propiedad del contrato especificado.</span><span class="sxs-lookup"><span data-stu-id="dcd69-126">Determines whether an application domain is owned by the specified contract.</span></span></summary>
        <returns><span data-ttu-id="dcd69-127">Es <see langword="true" /> si el contrato es el propietario del dominio de aplicación; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="dcd69-127"><see langword="true" /> if the contract owns the application domain; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="dcd69-128">El valor de <paramref name="contract" /> o <paramref name="domain" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="dcd69-128"><paramref name="contract" /> or <paramref name="domain" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="dcd69-129">Revoca el token de duración en un contrato.</span><span class="sxs-lookup"><span data-stu-id="dcd69-129">Revokes the lifetime token on a contract.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.ContractHandle.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="contractHandle.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dcd69-130">Revoca el token de duración en un contrato, sin tener en cuenta la entrada.</span><span class="sxs-lookup"><span data-stu-id="dcd69-130">Revokes the lifetime token on a contract, regardless of input.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.ContractHandle.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="contractHandle.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="dcd69-131">Es <see langword="true" /> para liberar tanto recursos administrados como no administrados; es <see langword="false" /> para liberar únicamente recursos no administrados.</span><span class="sxs-lookup"><span data-stu-id="dcd69-131"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="dcd69-132">Revoca el token de duración en el contrato sin tener en cuenta la entrada y, de manera opcional, libera los recursos administrados.</span><span class="sxs-lookup"><span data-stu-id="dcd69-132">Revokes the lifetime token on the contract regardless of input and optionally releases the managed resources.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~ContractHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.ContractHandle.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!ContractHandle ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="contractHandle.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dcd69-133">Libera los recursos asociados a la instancia <see cref="T:System.AddIn.Pipeline.ContractHandle" />.</span><span class="sxs-lookup"><span data-stu-id="dcd69-133">Releases the resources associated with the <see cref="T:System.AddIn.Pipeline.ContractHandle" /> instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcd69-134">Este método invalida <xref:System.Object.Finalize%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="dcd69-134">This method overrides <xref:System.Object.Finalize%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="dcd69-135">Código de la aplicación no debe llamar a este método; un objeto <xref:System.AddIn.Pipeline.ContractHandle.Finalize%2A> método se invoca automáticamente durante la recolección de elementos no utilizados, a menos que se ha deshabilitado la finalización por el recolector de elementos no utilizados mediante una llamada a la <xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="dcd69-135">Application code should not call this method; an object's <xref:System.AddIn.Pipeline.ContractHandle.Finalize%2A> method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="dcd69-136">Cuando se llama por el recolector de elementos no utilizados, este método llama a la <xref:System.AddIn.Pipeline.ContractHandle.Dispose%28System.Boolean%29> método.</span><span class="sxs-lookup"><span data-stu-id="dcd69-136">When called by the garbage collector, this method calls the <xref:System.AddIn.Pipeline.ContractHandle.Dispose%28System.Boolean%29> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
<Type Name="DecoderExceptionFallback" FullName="System.Text.DecoderExceptionFallback">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f04fe7c1c0d9df1ceefeeb8cc8404b9e1ba06da0" />
    <Meta Name="ms.sourcegitcommit" Value="c0c07dbd19cd7017243f9ac36915755f79bc8da6" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="11/27/2018" />
    <Meta Name="ms.locfileid" Value="52353289" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class DecoderExceptionFallback : System.Text.DecoderFallback" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit DecoderExceptionFallback extends System.Text.DecoderFallback" />
  <TypeSignature Language="DocId" Value="T:System.Text.DecoderExceptionFallback" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DecoderExceptionFallback&#xA;Inherits DecoderFallback" />
  <TypeSignature Language="C++ CLI" Value="public ref class DecoderExceptionFallback sealed : System::Text::DecoderFallback" />
  <TypeSignature Language="F#" Value="type DecoderExceptionFallback = class&#xA;    inherit DecoderFallback" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Encoding</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Text.DecoderFallback</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="bb355-101">Proporciona un mecanismo de control de errores, denominado reserva, para una secuencia codificada de bytes de entrada que no se puede convertir en un carácter de entrada.</span>
      <span class="sxs-lookup">
        <span data-stu-id="bb355-101">Provides a failure-handling mechanism, called a fallback, for an encoded input byte sequence that cannot be converted to an input character.</span>
      </span>
      <span data-ttu-id="bb355-102">La reserva produce una excepción en lugar de descodificar la secuencia de bytes de entrada.</span>
      <span class="sxs-lookup">
        <span data-stu-id="bb355-102">The fallback throws an exception instead of decoding the input byte sequence.</span>
      </span>
      <span data-ttu-id="bb355-103">Esta clase no puede heredarse.</span>
      <span class="sxs-lookup">
        <span data-stu-id="bb355-103">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb355-104">Una codificación asigna un carácter Unicode en una secuencia codificada de bytes, que posteriormente se pueden transferir a un medio físico, como un disco o a través de un vínculo de comunicaciones.</span><span class="sxs-lookup"><span data-stu-id="bb355-104">An encoding maps a Unicode character to an encoded sequence of bytes, which can subsequently be transferred to a physical medium, such as a disk, or over a communications link.</span></span> <span data-ttu-id="bb355-105">Se pueden asignar caracteres de varias maneras, y una codificación determinada se representa mediante un tipo derivado de la <xref:System.Text.Encoding> clase.</span><span class="sxs-lookup"><span data-stu-id="bb355-105">Characters can be mapped in various ways, and a particular encoding is represented by a type derived from the <xref:System.Text.Encoding> class.</span></span> <span data-ttu-id="bb355-106">En concreto, el tipo de codificación `GetBytes` método codifica un carácter en una secuencia de bytes y el `GetChars` método descodifica una secuencia de bytes en un carácter.</span><span class="sxs-lookup"><span data-stu-id="bb355-106">Specifically, the encoding type's `GetBytes` method encodes a character to a byte sequence, and the `GetChars` method decodes a byte sequence to a character.</span></span>  
  
 <span data-ttu-id="bb355-107">Una operación de descodificación puede producir un error si la secuencia de bytes de entrada no se puede asignar la codificación.</span><span class="sxs-lookup"><span data-stu-id="bb355-107">A decoding operation can fail if the input byte sequence cannot be mapped by the encoding.</span></span> <span data-ttu-id="bb355-108">Por ejemplo, un <xref:System.Text.ASCIIEncoding> objeto no puede descodificar una secuencia de bytes que da como resultado un carácter que tiene un valor de punto de código que está fuera del intervalo de u+0000 a 007F U +.</span><span class="sxs-lookup"><span data-stu-id="bb355-108">For example, an <xref:System.Text.ASCIIEncoding> object cannot decode a byte sequence that yields a character having a code point value that is outside the range U+0000 to U+007F.</span></span>  
  
 <span data-ttu-id="bb355-109">En casos donde no se puede realizar una conversión de codificación o descodificación, .NET Framework proporciona un mecanismo de control de errores, denominado reserva.</span><span class="sxs-lookup"><span data-stu-id="bb355-109">In cases where an encoding or decoding conversion cannot be performed, the .NET Framework provides a failure-handling mechanism called a fallback.</span></span> <span data-ttu-id="bb355-110">La aplicación puede usar la reserva del descodificador predefinida de .NET Framework o puede crear una reserva del descodificador personalizado derivado de la <xref:System.Text.DecoderFallback> y <xref:System.Text.DecoderFallbackBuffer> clases.</span><span class="sxs-lookup"><span data-stu-id="bb355-110">Your application can use the predefined .NET Framework decoder fallback, or it can create a custom decoder fallback derived from the <xref:System.Text.DecoderFallback> and <xref:System.Text.DecoderFallbackBuffer> classes.</span></span>  
  
 <span data-ttu-id="bb355-111">.NET Framework proporciona dos clases predefinidas que implementan diferentes estrategias de reserva para el tratamiento de errores de conversión de descodificación.</span><span class="sxs-lookup"><span data-stu-id="bb355-111">The .NET Framework provides two predefined classes that implement different fallback strategies for handling decoding conversion failures.</span></span> <span data-ttu-id="bb355-112">La <xref:System.Text.DecoderReplacementFallback> clase sustituye una cadena proporcionada por cualquier secuencia de bytes de entrada que no se puede convertir.</span><span class="sxs-lookup"><span data-stu-id="bb355-112">The <xref:System.Text.DecoderReplacementFallback> class substitutes a string provided in place of any input byte sequence that cannot be converted.</span></span> <span data-ttu-id="bb355-113">Una vez que se genera la cadena de sustitución, la operación de descodificación continúa convirtiendo el resto de la entrada.</span><span class="sxs-lookup"><span data-stu-id="bb355-113">After the substitute string is emitted, the decoding operation continues converting the remainder of the input.</span></span> <span data-ttu-id="bb355-114">En cambio, el <xref:System.Text.DecoderExceptionFallback> clase produce una <xref:System.Text.DecoderFallbackException> cuando se encuentra una secuencia de bytes no válida.</span><span class="sxs-lookup"><span data-stu-id="bb355-114">In contrast, the <xref:System.Text.DecoderExceptionFallback> class throws a <xref:System.Text.DecoderFallbackException> when an invalid byte sequence is encountered.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb355-115">En el ejemplo de código siguiente se muestra el <xref:System.Text.DecoderExceptionFallback> y <xref:System.Text.DecoderFallbackException> clases.</span><span class="sxs-lookup"><span data-stu-id="bb355-115">The following code example demonstrates the <xref:System.Text.DecoderExceptionFallback> and <xref:System.Text.DecoderFallbackException> classes.</span></span>  
  
 [!code-cpp[sys.txt.fallbackDecExc#1](~/samples/snippets/cpp/VS_Snippets_CLR/sys.txt.fallbackDecExc/cpp/fallDecExc.cpp#1)]
 [!code-csharp[sys.txt.fallbackDecExc#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.txt.fallbackDecExc/cs/fallDecExc.cs#1)]
 [!code-vb[sys.txt.fallbackDecExc#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.txt.fallbackDecExc/vb/fallDecExc.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/standard/base-types/character-encoding.md">
      <span data-ttu-id="bb355-116">Codificaciones de descripción</span>
      <span class="sxs-lookup">
        <span data-stu-id="bb355-116">Understanding Encodings</span>
      </span>
    </related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DecoderExceptionFallback ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.DecoderExceptionFallback.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DecoderExceptionFallback();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bb355-117">Inicializa una nueva instancia de la clase <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb355-117">Initializes a new instance of the <see cref="T:System.Text.DecoderExceptionFallback" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFallbackBuffer">
      <MemberSignature Language="C#" Value="public override System.Text.DecoderFallbackBuffer CreateFallbackBuffer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Text.DecoderFallbackBuffer CreateFallbackBuffer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.DecoderExceptionFallback.CreateFallbackBuffer" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateFallbackBuffer () As DecoderFallbackBuffer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Text::DecoderFallbackBuffer ^ CreateFallbackBuffer();" />
      <MemberSignature Language="F#" Value="override this.CreateFallbackBuffer : unit -&gt; System.Text.DecoderFallbackBuffer" Usage="decoderExceptionFallback.CreateFallbackBuffer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.DecoderFallbackBuffer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bb355-118">Devuelve un búfer de reserva del descodificador que produce una excepción si no puede convertir una secuencia de bytes en un carácter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb355-118">Returns a decoder fallback buffer that throws an exception if it cannot convert a sequence of bytes to a character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bb355-119">Búfer de reserva del descodificador que produce una excepción cuando no puede descodificar una secuencia de bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb355-119">A decoder fallback buffer that throws an exception when it cannot decode a byte sequence.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb355-120">Un búfer de reserva del descodificador es responsable de recibir y controlar las secuencias de bytes que un descodificador no se puede convertir a caracteres.</span><span class="sxs-lookup"><span data-stu-id="bb355-120">A decoder fallback buffer is responsible for receiving and handling byte sequences that a decoder cannot convert to characters.</span></span> <span data-ttu-id="bb355-121">Este método devuelve una instancia de la <xref:System.Text.DecoderExceptionFallbackBuffer> (clase), que es una subclase de la <xref:System.Text.DecoderFallbackBuffer> clase.</span><span class="sxs-lookup"><span data-stu-id="bb355-121">This method returns an instance of the <xref:System.Text.DecoderExceptionFallbackBuffer> class, which is a subclass of  the <xref:System.Text.DecoderFallbackBuffer> class.</span></span> <span data-ttu-id="bb355-122">Un <xref:System.Text.DecoderExceptionFallbackBuffer> objeto produce una <xref:System.Text.DecoderFallbackException> excepción cada vez que una secuencia de bytes que se pasa a su <xref:System.Text.DecoderExceptionFallbackBuffer.Fallback%2A> método.</span><span class="sxs-lookup"><span data-stu-id="bb355-122">A <xref:System.Text.DecoderExceptionFallbackBuffer> object throws an <xref:System.Text.DecoderFallbackException> exception whenever a sequence of bytes is passed to its <xref:System.Text.DecoderExceptionFallbackBuffer.Fallback%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.DecoderExceptionFallback.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="decoderExceptionFallback.Equals value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="bb355-123">Objeto que deriva de la clase <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb355-123">An object that derives from the <see cref="T:System.Text.DecoderExceptionFallback" /> class.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bb355-124">Indica si el objeto <see cref="T:System.Text.DecoderExceptionFallback" /> actual y un objeto especificado son iguales.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb355-124">Indicates whether the current <see cref="T:System.Text.DecoderExceptionFallback" /> object and a specified object are equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bb355-125">Es <see langword="true" /> si <paramref name="value" /> no es <see langword="null" /> y es un objeto <see cref="T:System.Text.DecoderExceptionFallback" />; de lo contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb355-125">
              <see langword="true" /> if <paramref name="value" /> is not <see langword="null" /> and is a <see cref="T:System.Text.DecoderExceptionFallback" /> object; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.DecoderExceptionFallback.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="decoderExceptionFallback.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bb355-126">Recupera el código hash de esta instancia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb355-126">Retrieves the hash code for this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bb355-127">Siempre se devuelve el mismo valor arbitrario, por lo que no tiene especial importancia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb355-127">The return value is always the same arbitrary value, and has no special significance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb355-128">Dado que el <xref:System.Text.DecoderExceptionFallback.GetHashCode%2A> método siempre devuelve el mismo valor, la aplicación no debe usar este valor para distinguir una <xref:System.Text.DecoderExceptionFallback> objeto desde otro.</span><span class="sxs-lookup"><span data-stu-id="bb355-128">Because the <xref:System.Text.DecoderExceptionFallback.GetHashCode%2A> method always returns the same value, the application should not use this value to distinguish one <xref:System.Text.DecoderExceptionFallback> object from another.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxCharCount">
      <MemberSignature Language="C#" Value="public override int MaxCharCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxCharCount" />
      <MemberSignature Language="DocId" Value="P:System.Text.DecoderExceptionFallback.MaxCharCount" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MaxCharCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MaxCharCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MaxCharCount : int" Usage="System.Text.DecoderExceptionFallback.MaxCharCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bb355-129">Obtiene el número máximo de caracteres que esta instancia puede devolver.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb355-129">Gets the maximum number of characters this instance can return.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bb355-130">El valor devuelto siempre es cero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb355-130">The return value is always zero.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
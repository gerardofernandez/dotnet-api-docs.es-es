<Type Name="SecurityTokenService" FullName="System.IdentityModel.SecurityTokenService">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="49a0ab5f150cc09113681aed718c286d237b6643" />
    <Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="11/29/2018" />
    <Meta Name="ms.locfileid" Value="52603587" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class SecurityTokenService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SecurityTokenService extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.SecurityTokenService" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SecurityTokenService" />
  <TypeSignature Language="C++ CLI" Value="public ref class SecurityTokenService abstract" />
  <TypeSignature Language="F#" Value="type SecurityTokenService = class" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="45801-101">La clase base abstracta que define las propiedades y los métodos de un servicio de token de seguridad (STS).</span>
      <span class="sxs-lookup">
        <span data-stu-id="45801-101">The abstract base class that defines the properties and methods of a security token service (STS).</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45801-102">Para crear un STS debe derivar de la <xref:System.IdentityModel.SecurityTokenService> clase.</span><span class="sxs-lookup"><span data-stu-id="45801-102">To create an STS you must derive from the <xref:System.IdentityModel.SecurityTokenService> class.</span></span> <span data-ttu-id="45801-103">En la clase personalizada debe, como mínimo, invalida la <xref:System.IdentityModel.SecurityTokenService.GetScope%2A> y <xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="45801-103">In your custom class you must, at a minimum, override the <xref:System.IdentityModel.SecurityTokenService.GetScope%2A> and <xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A> methods.</span></span> <span data-ttu-id="45801-104">Con estas invalidaciones, el STS creado mediante la implementación predeterminada de todos los demás métodos definidos en la clase es capaz de emitir tokens de seguridad en respuesta a la seguridad de las solicitudes de token (RST).</span><span class="sxs-lookup"><span data-stu-id="45801-104">With these overrides, the STS created using the default implementation of all the other methods defined in the class is capable of issuing security tokens in response to security token requests (RST).</span></span> <span data-ttu-id="45801-105">Es decir, se implementa el enlace Issue definido en la especificación WS-Trust.</span><span class="sxs-lookup"><span data-stu-id="45801-105">That is, the Issue binding defined in the WS-Trust specification is implemented.</span></span> <span data-ttu-id="45801-106">Este enlace se implementa en el <xref:System.IdentityModel.SecurityTokenService.Issue%2A> método.</span><span class="sxs-lookup"><span data-stu-id="45801-106">This binding is implemented in the <xref:System.IdentityModel.SecurityTokenService.Issue%2A> method.</span></span> <span data-ttu-id="45801-107">Ninguno de los otros enlaces de WS-Trust (renovar, Cancelar y validar) se implementan en el caso predeterminado y se devuelve un error adecuado al llamador si se encuentra una RST que corresponde a uno de estos enlaces.</span><span class="sxs-lookup"><span data-stu-id="45801-107">None of the other WS-Trust bindings (Renew, Cancel, and Validate) are implemented in the default case and an appropriate fault is returned to the caller if an RST that corresponds to one of these bindings is encountered.</span></span> <span data-ttu-id="45801-108">Por supuesto, puede invalidar los métodos adecuados (<xref:System.IdentityModel.SecurityTokenService.Renew%2A>, <xref:System.IdentityModel.SecurityTokenService.Cancel%2A>, y <xref:System.IdentityModel.SecurityTokenService.Validate%2A>) para implementar estos enlaces en los STS.</span><span class="sxs-lookup"><span data-stu-id="45801-108">You can, of course, override the appropriate methods (<xref:System.IdentityModel.SecurityTokenService.Renew%2A>, <xref:System.IdentityModel.SecurityTokenService.Cancel%2A>, and <xref:System.IdentityModel.SecurityTokenService.Validate%2A>) to implement these bindings in your STS.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="45801-109">Implementación de un STS para entornos de producción implica una cuidadosa planeación y recursos considerable para mitigar los posibles riesgos de seguridad inherentes a exponer este tipo de servicio.</span><span class="sxs-lookup"><span data-stu-id="45801-109">Implementing a production-ready STS entails careful planning and considerable resources to mitigate the potential security risks inherent in exposing such a service.</span></span> <span data-ttu-id="45801-110">Mayoría de los desarrolladores mediante Windows Identity Foundation (WIF) se pueden desarrollar aplicaciones que externalizar la administración de identidad a un STS, en lugar de desarrollar a un STS de sí mismo.</span><span class="sxs-lookup"><span data-stu-id="45801-110">Most developers using Windows Identity Foundation (WIF) will be developing applications that outsource identity management to an STS, rather than developing an STS itself.</span></span> <span data-ttu-id="45801-111">WIF proporciona una extensión de Visual Studio, la herramienta identidad y acceso para Visual Studio 2012, para ayudar a los desarrolladores probar soluciones en el entorno de desarrollo.</span><span class="sxs-lookup"><span data-stu-id="45801-111">WIF provides a Visual Studio extension, the Identity and Access Tool for Visual Studio 2012, to help developers test solutions in the development environment.</span></span> <span data-ttu-id="45801-112">Esta herramienta incluye un STS, `LocalSTS`, que se pueden configurar para dar servicio a las notificaciones específicas de la aplicación que está desarrollando.</span><span class="sxs-lookup"><span data-stu-id="45801-112">This tool includes an STS, `LocalSTS`, that you can configure to serve specific claims to the application that you are developing.</span></span> <span data-ttu-id="45801-113">Para obtener más información acerca de la herramienta identidad y acceso, consulte [Identity and Access Tool para Visual Studio 2012](~/docs/framework/security/identity-and-access-tool-for-vs.md).</span><span class="sxs-lookup"><span data-stu-id="45801-113">For more information about the Identity and Access tool, see [Identity and Access Tool for Visual Studio 2012](~/docs/framework/security/identity-and-access-tool-for-vs.md).</span></span> <span data-ttu-id="45801-114">En algunos escenarios, `LocalSTS` no se puede proporcionar la funcionalidad necesaria para probar la aplicación de forma adecuada; por ejemplo, en un escenario que implica desarrollar un controlador de token personalizado para su uso por una aplicación.</span><span class="sxs-lookup"><span data-stu-id="45801-114">In some scenarios, `LocalSTS` may not provide the functionality necessary to adequately test your application; for example, in a scenario that involves developing a custom token handler for use by an application.</span></span> <span data-ttu-id="45801-115">En estos casos, puede derivar de <xref:System.IdentityModel.SecurityTokenService> para crear uno o más STS simple que se pueden implementar en el entorno de desarrollo y que se puede utilizar para probar estas características en la aplicación.</span><span class="sxs-lookup"><span data-stu-id="45801-115">In these cases, you can derive from <xref:System.IdentityModel.SecurityTokenService> to create one or more simple STSs that can be deployed in your development environment and that can be used to test such features in your application.</span></span> <span data-ttu-id="45801-116">El resto de esta sección se centra en los métodos expuestos por el <xref:System.IdentityModel.SecurityTokenService> clase que le permiten implementar un STS simple y ampliar la canalización de emisión de tokens.</span><span class="sxs-lookup"><span data-stu-id="45801-116">The rest of this section focuses on the methods exposed by the <xref:System.IdentityModel.SecurityTokenService> class that enable you to implement a simple STS and extend the token issuance pipeline.</span></span>  
  
 <span data-ttu-id="45801-117">En la lista siguiente proporciona una breve descripción de los métodos de importancia primordial al desarrollador para su uso en un entorno de desarrollo o prueba.</span><span class="sxs-lookup"><span data-stu-id="45801-117">The following list provides a brief overview of the methods of primary importance to the developer for use in a test or development environment.</span></span>  
  
-   <span data-ttu-id="45801-118">El método <xref:System.IdentityModel.SecurityTokenService.GetScope%2A> .</span><span class="sxs-lookup"><span data-stu-id="45801-118">The <xref:System.IdentityModel.SecurityTokenService.GetScope%2A> method.</span></span> <span data-ttu-id="45801-119">Este método devuelve un <xref:System.IdentityModel.Scope> objeto que contiene información sobre el RP.</span><span class="sxs-lookup"><span data-stu-id="45801-119">This method returns a <xref:System.IdentityModel.Scope> object that contains information about the RP.</span></span> <span data-ttu-id="45801-120">Este objeto se usa en el resto de la canalización de emisión de tokens e incluye información sobre la firma y cifrado de credenciales para usarlos en la respuesta, así como el `AppliesTo` y `ReplyTo` (si es necesario) las direcciones.</span><span class="sxs-lookup"><span data-stu-id="45801-120">This object is used in the rest of the token issuance pipeline and includes information about the signing and encrypting credentials to use in the response, as well as the `AppliesTo` and `ReplyTo` (if required) addresses.</span></span> <span data-ttu-id="45801-121">Debe invalidar este método.</span><span class="sxs-lookup"><span data-stu-id="45801-121">You must override this method.</span></span>  
  
-   <span data-ttu-id="45801-122">El método <xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A> .</span><span class="sxs-lookup"><span data-stu-id="45801-122">The <xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A> method.</span></span> <span data-ttu-id="45801-123">Este método devuelve un <xref:System.Security.Claims.ClaimsIdentity> objeto que contiene las notificaciones para devolver al RP.</span><span class="sxs-lookup"><span data-stu-id="45801-123">This method returns an <xref:System.Security.Claims.ClaimsIdentity> object that contains the claims to return to the RP.</span></span> <span data-ttu-id="45801-124">Debe invalidar este método.</span><span class="sxs-lookup"><span data-stu-id="45801-124">You must override this method.</span></span>  
  
-   <span data-ttu-id="45801-125">El método <xref:System.IdentityModel.SecurityTokenService.Issue%2A> .</span><span class="sxs-lookup"><span data-stu-id="45801-125">The <xref:System.IdentityModel.SecurityTokenService.Issue%2A> method.</span></span> <span data-ttu-id="45801-126">Este método implementa la canalización de solicitud de token, que procesa una solicitud de token de seguridad de entrada (RST) y devuelve una respuesta (RSTR) para el llamador que contiene un token que se puede usar para autenticar con un punto de reunión.</span><span class="sxs-lookup"><span data-stu-id="45801-126">This method implements the token request pipeline, which processes an incoming security token request (RST) and returns a response (RSTR) to the caller that contains a token that can be used to authenticate with an RP.</span></span> <span data-ttu-id="45801-127">Muchos de los otros métodos definidos en el <xref:System.IdentityModel.SecurityTokenService> clase se llaman desde este método, incluidos el <xref:System.IdentityModel.SecurityTokenService.GetScope%2A> y <xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="45801-127">Many of the other methods defined in the <xref:System.IdentityModel.SecurityTokenService> class are called from this method, including the <xref:System.IdentityModel.SecurityTokenService.GetScope%2A> and <xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A> methods.</span></span> <span data-ttu-id="45801-128">No es necesario invalidar este método, pero una descripción de la canalización de solicitud de token que implementa pueden serle de ayuda.</span><span class="sxs-lookup"><span data-stu-id="45801-128">You do not have to override this method, but an understanding of the token request pipeline it implements may be helpful.</span></span>  
  
 <span data-ttu-id="45801-129">Un STS se configura mediante la <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration> clase.</span><span class="sxs-lookup"><span data-stu-id="45801-129">An STS is configured through the <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="45801-130">Los ejemplos de código que se usan en el <xref:System.IdentityModel.SecurityTokenService> temas se toman de la `Custom Token` ejemplo.</span><span class="sxs-lookup"><span data-stu-id="45801-130">The code examples that are used in the <xref:System.IdentityModel.SecurityTokenService> topics are taken from the `Custom Token` sample.</span></span> <span data-ttu-id="45801-131">Este ejemplo proporciona las clases personalizadas que permiten el procesamiento de Simple Web Tokens (SWT) e incluye una implementación de un STS pasivo que es capaz de atender un token de SWT.</span><span class="sxs-lookup"><span data-stu-id="45801-131">This sample provides custom classes that enable processing of Simple Web Tokens (SWT) and it includes an implementation of a passive STS that is capable of serving an SWT token.</span></span> <span data-ttu-id="45801-132">Para obtener un ejemplo de cómo implementar un STS activo, puede ver el `Federation Metadata` ejemplo.</span><span class="sxs-lookup"><span data-stu-id="45801-132">For an example of how to implement an active STS, you can see the `Federation Metadata` sample.</span></span> <span data-ttu-id="45801-133">Para obtener información acerca de estos ejemplos y otros ejemplos disponibles para WIF y dónde descargarlas, consulte [índice de ejemplo de código WIF](~/docs/framework/security/wif-code-sample-index.md).</span><span class="sxs-lookup"><span data-stu-id="45801-133">For information about these samples and other samples available for WIF and about where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span> <span data-ttu-id="45801-134">El código siguiente muestra la implementación de un STS pasivo mediante el <xref:System.IdentityModel.SecurityTokenService> clase.</span><span class="sxs-lookup"><span data-stu-id="45801-134">The following code shows the implementation of a passive STS using the <xref:System.IdentityModel.SecurityTokenService> class.</span></span>  
  
 [!code-csharp[WIFCustomTokenSTS#3](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokensts/cs/passivests/customsecuritytokenservice.cs#3)]  
  
 <span data-ttu-id="45801-135">El código siguiente muestra cómo invocar un STS pasivo personalizado para procesar una solicitud de WS-Federation mediante una llamada a la <xref:System.IdentityModel.Services.FederatedPassiveSecurityTokenServiceOperations.ProcessRequest%28System.Web.HttpRequest%2CSystem.Security.Claims.ClaimsPrincipal%2CSystem.IdentityModel.SecurityTokenService%2CSystem.Web.HttpResponse%29?displayProperty=nameWithType> método desde el código subyacente en el `default.aspx.cs` archivo.</span><span class="sxs-lookup"><span data-stu-id="45801-135">The following code shows how to invoke a custom passive STS to process a WS-Federation request by calling the <xref:System.IdentityModel.Services.FederatedPassiveSecurityTokenServiceOperations.ProcessRequest%28System.Web.HttpRequest%2CSystem.Security.Claims.ClaimsPrincipal%2CSystem.IdentityModel.SecurityTokenService%2CSystem.Web.HttpResponse%29?displayProperty=nameWithType> method from the code behind in the `default.aspx.cs` file.</span></span>  
  
 [!code-csharp[WIFCustomTokenSTS#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokensts/cs/passivests/default.aspx.cs#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>
        <span data-ttu-id="45801-136">Debe reemplazar ambos el <see cref="M:System.IdentityModel.SecurityTokenService.GetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" /> y <see cref="M:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope)" /> métodos.</span>
        <span class="sxs-lookup">
          <span data-stu-id="45801-136">You must override both the <see cref="M:System.IdentityModel.SecurityTokenService.GetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" /> and the <see cref="M:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope)" /> methods.</span>
        </span>
      </para>
    </block>
    <altmember cref="T:System.IdentityModel.Scope" />
    <altmember cref="T:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration" />
    <altmember cref="T:System.IdentityModel.Services.FederatedPassiveSecurityTokenServiceOperations" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SecurityTokenService (System.IdentityModel.Configuration.SecurityTokenServiceConfiguration securityTokenServiceConfiguration);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.IdentityModel.Configuration.SecurityTokenServiceConfiguration securityTokenServiceConfiguration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.#ctor(System.IdentityModel.Configuration.SecurityTokenServiceConfiguration)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SecurityTokenService(System::IdentityModel::Configuration::SecurityTokenServiceConfiguration ^ securityTokenServiceConfiguration);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.SecurityTokenService : System.IdentityModel.Configuration.SecurityTokenServiceConfiguration -&gt; System.IdentityModel.SecurityTokenService" Usage="new System.IdentityModel.SecurityTokenService securityTokenServiceConfiguration" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="securityTokenServiceConfiguration" Type="System.IdentityModel.Configuration.SecurityTokenServiceConfiguration" />
      </Parameters>
      <Docs>
        <param name="securityTokenServiceConfiguration">
          <span data-ttu-id="45801-137">
            <see cref="T:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration" /> que contiene la configuración para el STS.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-137">A <see cref="T:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration" /> that contains the settings for the STS.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="45801-138">Llamado desde las clases derivadas para inicializar la clase <see cref="T:System.IdentityModel.SecurityTokenService" /> mediante las opciones de configuración especificadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-138">Called from derived classes to initialize the <see cref="T:System.IdentityModel.SecurityTokenService" /> class using the specified configuration settings.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45801-139">Utilice este constructor para inicializar el proveedor de ámbito y el certificado de emisor del token.</span><span class="sxs-lookup"><span data-stu-id="45801-139">Use this constructor to initialize scope provider and token issuer certificate.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="45801-140">El valor de <paramref name="securityTokenServiceConfiguration" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-140">
              <paramref name="securityTokenServiceConfiguration" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginCancel">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginCancel (System.Security.Claims.ClaimsPrincipal principal, System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginCancel(class System.Security.Claims.ClaimsPrincipal principal, class System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.BeginCancel(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginCancel (principal As ClaimsPrincipal, request As RequestSecurityToken, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginCancel(System::Security::Claims::ClaimsPrincipal ^ principal, System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ request, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginCancel : System.Security.Claims.ClaimsPrincipal * System.IdentityModel.Protocols.WSTrust.RequestSecurityToken * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginCancel : System.Security.Claims.ClaimsPrincipal * System.IdentityModel.Protocols.WSTrust.RequestSecurityToken * AsyncCallback * obj -&gt; IAsyncResult" Usage="securityTokenService.BeginCancel (principal, request, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="request" Type="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="principal">
          <span data-ttu-id="45801-141">
            <see cref="T:System.Security.Claims.ClaimsPrincipal" /> que representa la identidad del solicitante del token.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-141">A <see cref="T:System.Security.Claims.ClaimsPrincipal" /> that represents the identity of the token requestor.</span>
          </span>
        </param>
        <param name="request">
          <span data-ttu-id="45801-142">
            <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> que representa la solicitud del token de seguridad.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-142">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> that represents the security token request.</span>
          </span>
          <span data-ttu-id="45801-143">Esto incluye el mensaje de solicitud junto con otra información relacionada del cliente como el contexto de autorización.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-143">This includes the request message as well as other client related information such as authorization context.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="45801-144">Delegado de <see cref="T:System.AsyncCallback" /> que recibe la notificación de la finalización de la operación de cancelación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-144">The <see cref="T:System.AsyncCallback" /> delegate that receives notification of the completion of the asynchronous cancel operation.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="45801-145">Objeto que contiene la información de estado asociada a la operación de cancelación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-145">An object that contains state information associated with the asynchronous cancel operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="45801-146">Cuando se reemplaza en una clase derivada, comienza una solicitud asincrónica de WS-Trust Cancel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-146">When overridden in a derived class, begins an asynchronous WS-Trust Cancel request.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="45801-147">
            <see cref="T:System.IAsyncResult" /> que hace referencia a la operación de cancelación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-147">The <see cref="T:System.IAsyncResult" /> that references the asynchronous cancel operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45801-148">La implementación predeterminada de este método produce una <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.</span><span class="sxs-lookup"><span data-stu-id="45801-148">The default implementation of this method throws an <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginGetOutputClaimsIdentity">
      <MemberSignature Language="C#" Value="protected virtual IAsyncResult BeginGetOutputClaimsIdentity (System.Security.Claims.ClaimsPrincipal principal, System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, System.IdentityModel.Scope scope, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IAsyncResult BeginGetOutputClaimsIdentity(class System.Security.Claims.ClaimsPrincipal principal, class System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, class System.IdentityModel.Scope scope, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.BeginGetOutputClaimsIdentity(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual IAsyncResult ^ BeginGetOutputClaimsIdentity(System::Security::Claims::ClaimsPrincipal ^ principal, System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ request, System::IdentityModel::Scope ^ scope, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginGetOutputClaimsIdentity : System.Security.Claims.ClaimsPrincipal * System.IdentityModel.Protocols.WSTrust.RequestSecurityToken * System.IdentityModel.Scope * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginGetOutputClaimsIdentity : System.Security.Claims.ClaimsPrincipal * System.IdentityModel.Protocols.WSTrust.RequestSecurityToken * System.IdentityModel.Scope * AsyncCallback * obj -&gt; IAsyncResult" Usage="securityTokenService.BeginGetOutputClaimsIdentity (principal, request, scope, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="request" Type="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />
        <Parameter Name="scope" Type="System.IdentityModel.Scope" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="principal">
          <span data-ttu-id="45801-149">
            <see cref="T:System.Security.Claims.ClaimsPrincipal" /> que representa la identidad del solicitante del token.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-149">A <see cref="T:System.Security.Claims.ClaimsPrincipal" /> that represents the identity of the token requestor.</span>
          </span>
        </param>
        <param name="request">
          <span data-ttu-id="45801-150">
            <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> que representa la solicitud del token de seguridad.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-150">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> that represents the security token request.</span>
          </span>
          <span data-ttu-id="45801-151">Esto incluye el mensaje de solicitud junto con otra información relacionada del cliente como el contexto de autorización.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-151">This includes the request message as well as other client related information such as authorization context.</span>
          </span>
        </param>
        <param name="scope">
          <span data-ttu-id="45801-152">
            <see cref="T:System.IdentityModel.Scope" /> que contiene información sobre el usuario de confianza asociado a la solicitud.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-152">The <see cref="T:System.IdentityModel.Scope" /> that contains information about the relying party associated with the request.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="45801-153">El delegado de <see cref="T:System.AsyncCallback" /> que recibe la notificación de la finalización de la operación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-153">The <see cref="T:System.AsyncCallback" /> delegate that receives notification of the completion of the asynchronous operation.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="45801-154">Objeto que contiene la información de estado asociada a la operación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-154">An object that contains state information associated with the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="45801-155">Cuando se invalida en una clase derivada, comienza una llamada asincrónica para el método <see cref="M:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-155">When overridden in a derived class, begins an asynchronous call to the <see cref="M:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="45801-156">
            <see cref="T:System.IAsyncResult" /> que hace referencia a la operación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-156">The <see cref="T:System.IAsyncResult" /> that references the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45801-157">La implementación predeterminada de este método produce una <xref:System.NotImplementedException>.</span><span class="sxs-lookup"><span data-stu-id="45801-157">The default implementation of this method throws a <xref:System.NotImplementedException>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginGetScope">
      <MemberSignature Language="C#" Value="protected virtual IAsyncResult BeginGetScope (System.Security.Claims.ClaimsPrincipal principal, System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IAsyncResult BeginGetScope(class System.Security.Claims.ClaimsPrincipal principal, class System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.BeginGetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function BeginGetScope (principal As ClaimsPrincipal, request As RequestSecurityToken, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual IAsyncResult ^ BeginGetScope(System::Security::Claims::ClaimsPrincipal ^ principal, System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ request, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginGetScope : System.Security.Claims.ClaimsPrincipal * System.IdentityModel.Protocols.WSTrust.RequestSecurityToken * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginGetScope : System.Security.Claims.ClaimsPrincipal * System.IdentityModel.Protocols.WSTrust.RequestSecurityToken * AsyncCallback * obj -&gt; IAsyncResult" Usage="securityTokenService.BeginGetScope (principal, request, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="request" Type="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="principal">
          <span data-ttu-id="45801-158">
            <see cref="T:System.Security.Claims.ClaimsPrincipal" /> que representa la identidad del solicitante del token.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-158">A <see cref="T:System.Security.Claims.ClaimsPrincipal" /> that represents the identity of the token requestor.</span>
          </span>
        </param>
        <param name="request">
          <span data-ttu-id="45801-159">
            <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> que representa la solicitud del token de seguridad.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-159">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> that represents the security token request.</span>
          </span>
          <span data-ttu-id="45801-160">Esto incluye el mensaje de solicitud junto con otra información relacionada del cliente como el contexto de autorización.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-160">This includes the request message as well as other client related information such as authorization context.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="45801-161">El delegado de <see cref="T:System.AsyncCallback" /> que recibe la notificación de la finalización de la operación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-161">The <see cref="T:System.AsyncCallback" /> delegate that receives notification of the completion of the asynchronous operation.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="45801-162">Objeto que contiene la información de estado asociada a la operación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-162">An object that contains state information associated with the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="45801-163">Cuando se invalida en una clase derivada, comienza una llamada asincrónica para el método <see cref="M:System.IdentityModel.SecurityTokenService.GetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-163">When overridden in a derived class, begins an asynchronous call for the <see cref="M:System.IdentityModel.SecurityTokenService.GetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="45801-164">
            <see cref="T:System.IAsyncResult" /> que hace referencia a la operación de cancelación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-164">The <see cref="T:System.IAsyncResult" /> that references the asynchronous cancel operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45801-165">La implementación predeterminada de este método produce una <xref:System.NotImplementedException>.</span><span class="sxs-lookup"><span data-stu-id="45801-165">The default implementation of this method throws a <xref:System.NotImplementedException>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginIssue">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginIssue (System.Security.Claims.ClaimsPrincipal principal, System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginIssue(class System.Security.Claims.ClaimsPrincipal principal, class System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.BeginIssue(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginIssue (principal As ClaimsPrincipal, request As RequestSecurityToken, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginIssue(System::Security::Claims::ClaimsPrincipal ^ principal, System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ request, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginIssue : System.Security.Claims.ClaimsPrincipal * System.IdentityModel.Protocols.WSTrust.RequestSecurityToken * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginIssue : System.Security.Claims.ClaimsPrincipal * System.IdentityModel.Protocols.WSTrust.RequestSecurityToken * AsyncCallback * obj -&gt; IAsyncResult" Usage="securityTokenService.BeginIssue (principal, request, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="request" Type="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="principal">
          <span data-ttu-id="45801-166">
            <see cref="T:System.Security.Claims.ClaimsPrincipal" /> que representa la identidad del solicitante del token.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-166">A <see cref="T:System.Security.Claims.ClaimsPrincipal" /> that represents the identity of the token requestor.</span>
          </span>
        </param>
        <param name="request">
          <span data-ttu-id="45801-167">
            <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> que representa la solicitud del token de seguridad.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-167">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> that represents the security token request.</span>
          </span>
          <span data-ttu-id="45801-168">Esto incluye el mensaje de solicitud junto con otra información relacionada del cliente como el contexto de autorización.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-168">This includes the request message as well as other client related information such as authorization context.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="45801-169">Delegado de <see cref="T:System.AsyncCallback" /> que recibe la notificación de la finalización de la operación de emisión asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-169">The <see cref="T:System.AsyncCallback" /> delegate that receives notification of the completion of the asynchronous issue operation.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="45801-170">Objeto que contiene la información de estado asociada a la operación de emisión asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-170">An object that contains state information associated with the asynchronous issue operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="45801-171">Cuando se reemplaza en una clase derivada, comienza una solicitud asincrónica de WS-Trust Issue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-171">When overridden in a derived class, begins an asynchronous WS-Trust Issue request.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="45801-172">El objeto <see cref="T:System.IAsyncResult" /> que hace referencia a la operación de emisión asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-172">The <see cref="T:System.IAsyncResult" /> that references the asynchronous issue operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45801-173">La implementación predeterminada de este método produce una <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.</span><span class="sxs-lookup"><span data-stu-id="45801-173">The default implementation of this method throws an <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginRenew">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginRenew (System.Security.Claims.ClaimsPrincipal principal, System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginRenew(class System.Security.Claims.ClaimsPrincipal principal, class System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.BeginRenew(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginRenew (principal As ClaimsPrincipal, request As RequestSecurityToken, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginRenew(System::Security::Claims::ClaimsPrincipal ^ principal, System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ request, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginRenew : System.Security.Claims.ClaimsPrincipal * System.IdentityModel.Protocols.WSTrust.RequestSecurityToken * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginRenew : System.Security.Claims.ClaimsPrincipal * System.IdentityModel.Protocols.WSTrust.RequestSecurityToken * AsyncCallback * obj -&gt; IAsyncResult" Usage="securityTokenService.BeginRenew (principal, request, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="request" Type="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="principal">
          <span data-ttu-id="45801-174">
            <see cref="T:System.Security.Claims.ClaimsPrincipal" /> que representa la identidad del solicitante del token.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-174">A <see cref="T:System.Security.Claims.ClaimsPrincipal" /> that represents the identity of the token requestor.</span>
          </span>
        </param>
        <param name="request">
          <span data-ttu-id="45801-175">
            <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> que representa la solicitud del token de seguridad.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-175">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> that represents the security token request.</span>
          </span>
          <span data-ttu-id="45801-176">Esto incluye el mensaje de solicitud junto con otra información relacionada del cliente como el contexto de autorización.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-176">This includes the request message as well as other client related information such as authorization context.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="45801-177">Delegado de <see cref="T:System.AsyncCallback" /> que recibe la notificación de la finalización de la operación de renovación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-177">The <see cref="T:System.AsyncCallback" /> delegate that receives notification of the completion of the asynchronous renew operation.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="45801-178">Objeto que contiene la información de estado asociada a la operación de renovación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-178">An object that contains state information associated with the asynchronous renew operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="45801-179">Cuando se reemplaza en una clase derivada, comienza una solicitud asincrónica de WS-Trust Renew.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-179">When overridden in a derived class, begins an asynchronous WS-Trust Renew request.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="45801-180">
            <see cref="T:System.IAsyncResult" /> que hace referencia a la operación de renovación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-180">The <see cref="T:System.IAsyncResult" /> that references the asynchronous renew operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45801-181">La implementación predeterminada de este método produce una <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.</span><span class="sxs-lookup"><span data-stu-id="45801-181">The default implementation of this method throws an <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginValidate">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginValidate (System.Security.Claims.ClaimsPrincipal principal, System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginValidate(class System.Security.Claims.ClaimsPrincipal principal, class System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.BeginValidate(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginValidate (principal As ClaimsPrincipal, request As RequestSecurityToken, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginValidate(System::Security::Claims::ClaimsPrincipal ^ principal, System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ request, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginValidate : System.Security.Claims.ClaimsPrincipal * System.IdentityModel.Protocols.WSTrust.RequestSecurityToken * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginValidate : System.Security.Claims.ClaimsPrincipal * System.IdentityModel.Protocols.WSTrust.RequestSecurityToken * AsyncCallback * obj -&gt; IAsyncResult" Usage="securityTokenService.BeginValidate (principal, request, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="request" Type="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="principal">
          <span data-ttu-id="45801-182">
            <see cref="T:System.Security.Claims.ClaimsPrincipal" /> que representa la identidad del solicitante del token.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-182">A <see cref="T:System.Security.Claims.ClaimsPrincipal" /> that represents the identity of the token requestor.</span>
          </span>
        </param>
        <param name="request">
          <span data-ttu-id="45801-183">
            <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> que representa la solicitud del token de seguridad.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-183">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> that represents the security token request.</span>
          </span>
          <span data-ttu-id="45801-184">Esto incluye el mensaje de solicitud junto con otra información relacionada del cliente como el contexto de autorización.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-184">This includes the request message as well as other client related information such as authorization context.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="45801-185">Delegado de <see cref="T:System.AsyncCallback" /> que recibe la notificación de la finalización de la operación de creación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-185">The <see cref="T:System.AsyncCallback" /> delegate that receives notification of the completion of the asynchronous validate operation.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="45801-186">Objeto que contiene la información de estado asociada a la operación de validación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-186">An object that contains state information associated with the asynchronous validate operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="45801-187">Cuando se reemplaza en una clase derivada, comienza una solicitud asincrónica de WS-Trust Validate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-187">When overridden in a derived class, begins an asynchronous WS-Trust Validate request.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="45801-188">
            <see cref="T:System.IAsyncResult" /> que hace referencia a la operación de validación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-188">The <see cref="T:System.IAsyncResult" /> that references the asynchronous validate operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45801-189">La implementación predeterminada de este método produce una <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.</span><span class="sxs-lookup"><span data-stu-id="45801-189">The default implementation of this method throws an <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse Cancel (System.Security.Claims.ClaimsPrincipal principal, System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse Cancel(class System.Security.Claims.ClaimsPrincipal principal, class System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.Cancel(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Cancel (principal As ClaimsPrincipal, request As RequestSecurityToken) As RequestSecurityTokenResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Protocols::WSTrust::RequestSecurityTokenResponse ^ Cancel(System::Security::Claims::ClaimsPrincipal ^ principal, System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ request);" />
      <MemberSignature Language="F#" Value="abstract member Cancel : System.Security.Claims.ClaimsPrincipal * System.IdentityModel.Protocols.WSTrust.RequestSecurityToken -&gt; System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse&#xA;override this.Cancel : System.Security.Claims.ClaimsPrincipal * System.IdentityModel.Protocols.WSTrust.RequestSecurityToken -&gt; System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" Usage="securityTokenService.Cancel (principal, request)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="request" Type="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />
      </Parameters>
      <Docs>
        <param name="principal">
          <span data-ttu-id="45801-190">
            <see cref="T:System.Security.Claims.ClaimsPrincipal" /> que representa la identidad del solicitante del token.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-190">A <see cref="T:System.Security.Claims.ClaimsPrincipal" /> that represents the identity of the token requestor.</span>
          </span>
        </param>
        <param name="request">
          <span data-ttu-id="45801-191">
            <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> que representa la solicitud del token de seguridad.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-191">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> that represents the security token request.</span>
          </span>
          <span data-ttu-id="45801-192">Esto incluye el mensaje de solicitud junto con otra información relacionada del cliente como el contexto de autorización.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-192">This includes the request message as well as other client related information such as authorization context.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="45801-193">Cuando se reemplaza en una clase derivada, procesa una solicitud WS-Trust Cancel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-193">When overridden in a derived class, processes a WS-Trust Cancel request.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="45801-194">Clase <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" /> que representa el RSTR para devolver al llamador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-194">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" /> that represents the RSTR to return to the caller.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45801-195">La implementación predeterminada de este método produce una <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.</span><span class="sxs-lookup"><span data-stu-id="45801-195">The default implementation of this method throws an <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSecurityTokenDescriptor">
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Tokens.SecurityTokenDescriptor CreateSecurityTokenDescriptor (System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, System.IdentityModel.Scope scope);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityTokenDescriptor CreateSecurityTokenDescriptor(class System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, class System.IdentityModel.Scope scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.CreateSecurityTokenDescriptor(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::IdentityModel::Tokens::SecurityTokenDescriptor ^ CreateSecurityTokenDescriptor(System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ request, System::IdentityModel::Scope ^ scope);" />
      <MemberSignature Language="F#" Value="abstract member CreateSecurityTokenDescriptor : System.IdentityModel.Protocols.WSTrust.RequestSecurityToken * System.IdentityModel.Scope -&gt; System.IdentityModel.Tokens.SecurityTokenDescriptor&#xA;override this.CreateSecurityTokenDescriptor : System.IdentityModel.Protocols.WSTrust.RequestSecurityToken * System.IdentityModel.Scope -&gt; System.IdentityModel.Tokens.SecurityTokenDescriptor" Usage="securityTokenService.CreateSecurityTokenDescriptor (request, scope)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityTokenDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />
        <Parameter Name="scope" Type="System.IdentityModel.Scope" />
      </Parameters>
      <Docs>
        <param name="request">
          <span data-ttu-id="45801-196">Solicitud de token de entrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-196">The incoming token request.</span>
          </span>
        </param>
        <param name="scope">
          <span data-ttu-id="45801-197">Objeto <see cref="P:System.IdentityModel.SecurityTokenService.Scope" /> devuelto desde <see cref="M:System.IdentityModel.SecurityTokenService.GetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-197">The <see cref="P:System.IdentityModel.SecurityTokenService.Scope" /> object returned from <see cref="M:System.IdentityModel.SecurityTokenService.GetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="45801-198">Crea una instancia de <see cref="P:System.IdentityModel.SecurityTokenService.SecurityTokenDescriptor" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-198">Creates an instance of a <see cref="P:System.IdentityModel.SecurityTokenService.SecurityTokenDescriptor" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="45801-199">
            <see cref="P:System.IdentityModel.SecurityTokenService.SecurityTokenDescriptor" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-199">The <see cref="P:System.IdentityModel.SecurityTokenService.SecurityTokenDescriptor" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45801-200">Se invoca durante la emisión de tokens después <xref:System.IdentityModel.SecurityTokenService.GetScope%2A>.</span><span class="sxs-lookup"><span data-stu-id="45801-200">Invoked during token issuance after <xref:System.IdentityModel.SecurityTokenService.GetScope%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="45801-201">El valor de <paramref name="request" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-201">
              <paramref name="request" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="45801-202">O bien</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-202">-or-</span>
          </span>
          <span data-ttu-id="45801-203">El valor de <paramref name="scope" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-203">
              <paramref name="scope" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EndCancel">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse EndCancel (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse EndCancel(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.EndCancel(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function EndCancel (result As IAsyncResult) As RequestSecurityTokenResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Protocols::WSTrust::RequestSecurityTokenResponse ^ EndCancel(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndCancel : IAsyncResult -&gt; System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse&#xA;override this.EndCancel : IAsyncResult -&gt; System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" Usage="securityTokenService.EndCancel result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="45801-204">
            <see cref="T:System.IAsyncResult" /> que se devuelve al llamar al método <see cref="M:System.IdentityModel.SecurityTokenService.BeginCancel(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-204">The <see cref="T:System.IAsyncResult" /> that is returned by a call to the <see cref="M:System.IdentityModel.SecurityTokenService.BeginCancel(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" /> method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="45801-205">Cuando se reemplaza en una clase derivada, completa la solicitud asincrónica de WS-Trust Cancel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-205">When overridden in a derived class, completes the asynchronous WS-Trust Cancel request.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="45801-206">Clase <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" /> que representa el RSTR para devolver al llamador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-206">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" /> that represents the RSTR to return to the caller.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45801-207">La implementación predeterminada de este método produce una <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.</span><span class="sxs-lookup"><span data-stu-id="45801-207">The default implementation of this method throws an <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndGetOutputClaimsIdentity">
      <MemberSignature Language="C#" Value="protected virtual System.Security.Claims.ClaimsIdentity EndGetOutputClaimsIdentity (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Security.Claims.ClaimsIdentity EndGetOutputClaimsIdentity(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.EndGetOutputClaimsIdentity(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function EndGetOutputClaimsIdentity (result As IAsyncResult) As ClaimsIdentity" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Security::Claims::ClaimsIdentity ^ EndGetOutputClaimsIdentity(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndGetOutputClaimsIdentity : IAsyncResult -&gt; System.Security.Claims.ClaimsIdentity&#xA;override this.EndGetOutputClaimsIdentity : IAsyncResult -&gt; System.Security.Claims.ClaimsIdentity" Usage="securityTokenService.EndGetOutputClaimsIdentity result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Claims.ClaimsIdentity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="45801-208">
            <see cref="T:System.IAsyncResult" /> que se devuelve al llamar al método <see cref="M:System.IdentityModel.SecurityTokenService.BeginGetOutputClaimsIdentity(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope,System.AsyncCallback,System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-208">The <see cref="T:System.IAsyncResult" /> that is returned by a call to the <see cref="M:System.IdentityModel.SecurityTokenService.BeginGetOutputClaimsIdentity(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope,System.AsyncCallback,System.Object)" /> method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="45801-209">Cuando se invalida en una clase derivada, completa la llamada asincrónica para el método <see cref="M:System.IdentityModel.SecurityTokenService.BeginGetOutputClaimsIdentity(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope,System.AsyncCallback,System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-209">When overridden in a derived class, completes the asynchronous call to the <see cref="M:System.IdentityModel.SecurityTokenService.BeginGetOutputClaimsIdentity(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope,System.AsyncCallback,System.Object)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="45801-210">
            <see cref="T:System.Security.Claims.ClaimsIdentity" /> que contiene la colección de reclamaciones que se coloquen en el token de seguridad emitido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-210">A <see cref="T:System.Security.Claims.ClaimsIdentity" /> that contains the collection of claims that will be placed in the issued security token.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45801-211">La implementación predeterminada de este método produce una <xref:System.NotImplementedException>.</span><span class="sxs-lookup"><span data-stu-id="45801-211">The default implementation of this method throws a <xref:System.NotImplementedException>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndGetScope">
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Scope EndGetScope (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Scope EndGetScope(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.EndGetScope(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function EndGetScope (result As IAsyncResult) As Scope" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::IdentityModel::Scope ^ EndGetScope(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndGetScope : IAsyncResult -&gt; System.IdentityModel.Scope&#xA;override this.EndGetScope : IAsyncResult -&gt; System.IdentityModel.Scope" Usage="securityTokenService.EndGetScope result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Scope</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="45801-212">
            <see cref="T:System.IAsyncResult" /> que se devuelve al llamar al método <see cref="M:System.IdentityModel.SecurityTokenService.BeginGetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-212">The <see cref="T:System.IAsyncResult" /> that is returned by a call to the <see cref="M:System.IdentityModel.SecurityTokenService.BeginGetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" /> method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="45801-213">Cuando se invalida en una clase derivada, completa la llamada asincrónica para el método <see cref="M:System.IdentityModel.SecurityTokenService.BeginGetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-213">When overridden in a derived class, completes the asynchronous call to the <see cref="M:System.IdentityModel.SecurityTokenService.BeginGetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="45801-214">
            <see cref="T:System.IdentityModel.Scope" /> que encapsula información (RP) de usuario de confianza asociado con la solicitud (RST) especificada en la llamada al método de <see cref="M:System.IdentityModel.SecurityTokenService.BeginGetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" /> .</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-214">A <see cref="T:System.IdentityModel.Scope" /> that encapsulates the relying party (RP) information associated with the request (RST) specified in the call to the <see cref="M:System.IdentityModel.SecurityTokenService.BeginGetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" /> method.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45801-215">La implementación predeterminada de este método produce una <xref:System.NotImplementedException>.</span><span class="sxs-lookup"><span data-stu-id="45801-215">The default implementation of this method throws a <xref:System.NotImplementedException>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndIssue">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse EndIssue (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse EndIssue(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.EndIssue(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function EndIssue (result As IAsyncResult) As RequestSecurityTokenResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Protocols::WSTrust::RequestSecurityTokenResponse ^ EndIssue(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndIssue : IAsyncResult -&gt; System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse&#xA;override this.EndIssue : IAsyncResult -&gt; System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" Usage="securityTokenService.EndIssue result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="45801-216">
            <see cref="T:System.IAsyncResult" /> que se devuelve al llamar al método <see cref="M:System.IdentityModel.SecurityTokenService.BeginIssue(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-216">The <see cref="T:System.IAsyncResult" /> that is returned by a call to the <see cref="M:System.IdentityModel.SecurityTokenService.BeginIssue(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" /> method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="45801-217">Cuando se reemplaza en una clase derivada, completa la solicitud asincrónica de WS-Trust Issue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-217">When overridden in a derived class, completes the asynchronous WS-Trust Issue request.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="45801-218">Clase <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" /> que representa el RSTR para devolver al llamador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-218">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" /> that represents the RSTR to return to the caller.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45801-219">La implementación predeterminada de este método produce una <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.</span><span class="sxs-lookup"><span data-stu-id="45801-219">The default implementation of this method throws an <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndRenew">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse EndRenew (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse EndRenew(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.EndRenew(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function EndRenew (result As IAsyncResult) As RequestSecurityTokenResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Protocols::WSTrust::RequestSecurityTokenResponse ^ EndRenew(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndRenew : IAsyncResult -&gt; System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse&#xA;override this.EndRenew : IAsyncResult -&gt; System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" Usage="securityTokenService.EndRenew result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="45801-220">
            <see cref="T:System.IAsyncResult" /> que se devuelve al llamar al método <see cref="M:System.IdentityModel.SecurityTokenService.BeginRenew(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-220">The <see cref="T:System.IAsyncResult" /> that is returned by a call to the <see cref="M:System.IdentityModel.SecurityTokenService.BeginRenew(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" /> method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="45801-221">Cuando se reemplaza en una clase derivada, completa la solicitud asincrónica de WS-Trust Renew.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-221">When overridden in a derived class, completes the asynchronous WS-Trust Renew request.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="45801-222">Clase <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" /> que representa el RSTR para devolver al llamador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-222">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" /> that represents the RSTR to return to the caller.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45801-223">La implementación predeterminada de este método produce una <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.</span><span class="sxs-lookup"><span data-stu-id="45801-223">The default implementation of this method throws an <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndValidate">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse EndValidate (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse EndValidate(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.EndValidate(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function EndValidate (result As IAsyncResult) As RequestSecurityTokenResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Protocols::WSTrust::RequestSecurityTokenResponse ^ EndValidate(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndValidate : IAsyncResult -&gt; System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse&#xA;override this.EndValidate : IAsyncResult -&gt; System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" Usage="securityTokenService.EndValidate result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="45801-224">
            <see cref="T:System.IAsyncResult" /> que se devuelve al llamar al método <see cref="M:System.IdentityModel.SecurityTokenService.BeginValidate(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-224">The <see cref="T:System.IAsyncResult" /> that is returned by a call to the <see cref="M:System.IdentityModel.SecurityTokenService.BeginValidate(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" /> method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="45801-225">Cuando se reemplaza en una clase derivada, completa la solicitud asincrónica de WS-Trust Validate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-225">When overridden in a derived class, completes the asynchronous WS-Trust Validate request.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="45801-226">Clase <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" /> que representa el RSTR para devolver al llamador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-226">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" /> that represents the RSTR to return to the caller.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45801-227">La implementación predeterminada de este método produce una <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.</span><span class="sxs-lookup"><span data-stu-id="45801-227">The default implementation of this method throws an <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIssuerName">
      <MemberSignature Language="C#" Value="protected virtual string GetIssuerName ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetIssuerName() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.GetIssuerName" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetIssuerName () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetIssuerName();" />
      <MemberSignature Language="F#" Value="abstract member GetIssuerName : unit -&gt; string&#xA;override this.GetIssuerName : unit -&gt; string" Usage="securityTokenService.GetIssuerName " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="45801-228">Obtiene el nombre del servicio de token de seguridad (STS).</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-228">Gets the name of the security token service (STS).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="45801-229">Nombre del emisor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-229">The issuer name.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45801-230">Este método se llama desde el valor predeterminado la canalización de emisión de tokens se implementa en el <xref:System.IdentityModel.SecurityTokenService.Issue%2A> método.</span><span class="sxs-lookup"><span data-stu-id="45801-230">This method is called from the default token issuance pipeline implemented in the <xref:System.IdentityModel.SecurityTokenService.Issue%2A> method.</span></span>  
  
 <span data-ttu-id="45801-231">La implementación predeterminada devuelve el <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.TokenIssuerName%2A> propiedad de configuración que se tiene acceso a través del <xref:System.IdentityModel.SecurityTokenService.SecurityTokenServiceConfiguration%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="45801-231">The default implementation returns the <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.TokenIssuerName%2A> property from configuration accessed through the <xref:System.IdentityModel.SecurityTokenService.SecurityTokenServiceConfiguration%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IdentityModel.SecurityTokenService.Issue(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
      </Docs>
    </Member>
    <Member MemberName="GetOutputClaimsIdentity">
      <MemberSignature Language="C#" Value="protected abstract System.Security.Claims.ClaimsIdentity GetOutputClaimsIdentity (System.Security.Claims.ClaimsPrincipal principal, System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, System.IdentityModel.Scope scope);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Security.Claims.ClaimsIdentity GetOutputClaimsIdentity(class System.Security.Claims.ClaimsPrincipal principal, class System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, class System.IdentityModel.Scope scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Security::Claims::ClaimsIdentity ^ GetOutputClaimsIdentity(System::Security::Claims::ClaimsPrincipal ^ principal, System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ request, System::IdentityModel::Scope ^ scope);" />
      <MemberSignature Language="F#" Value="abstract member GetOutputClaimsIdentity : System.Security.Claims.ClaimsPrincipal * System.IdentityModel.Protocols.WSTrust.RequestSecurityToken * System.IdentityModel.Scope -&gt; System.Security.Claims.ClaimsIdentity" Usage="securityTokenService.GetOutputClaimsIdentity (principal, request, scope)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Claims.ClaimsIdentity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="request" Type="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />
        <Parameter Name="scope" Type="System.IdentityModel.Scope" />
      </Parameters>
      <Docs>
        <param name="principal">
          <span data-ttu-id="45801-232">
            <see cref="T:System.Security.Claims.ClaimsPrincipal" /> que representa la identidad del solicitante del token.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-232">A <see cref="T:System.Security.Claims.ClaimsPrincipal" /> that represents the identity of the token requestor.</span>
          </span>
        </param>
        <param name="request">
          <span data-ttu-id="45801-233">
            <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> que representa la solicitud del token de seguridad.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-233">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> that represents the security token request.</span>
          </span>
          <span data-ttu-id="45801-234">Esto incluye el mensaje de solicitud junto con otra información relacionada del cliente como el contexto de autorización.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-234">This includes the request message as well as other client related information such as authorization context.</span>
          </span>
        </param>
        <param name="scope">
          <span data-ttu-id="45801-235">
            <see cref="T:System.IdentityModel.Scope" /> que contiene información sobre el usuario de confianza asociado a la solicitud.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-235">The <see cref="T:System.IdentityModel.Scope" /> that contains information about the relying party associated with the request.</span>
          </span>
          <span data-ttu-id="45801-236">Es el objeto <see cref="T:System.IdentityModel.Scope" /> devuelto por el método <see cref="M:System.IdentityModel.SecurityTokenService.GetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-236">This is the <see cref="T:System.IdentityModel.Scope" /> object that was returned by the <see cref="M:System.IdentityModel.SecurityTokenService.GetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" /> method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="45801-237">Cuando se reemplaza en una clase derivada, este método devuelve una colección de asuntos de salida que se incluirán en el token emitido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-237">When overridden in a derived class, this method returns a collection of output subjects to be included in the issued token.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="45801-238">
            <see cref="T:System.Security.Claims.ClaimsIdentity" /> que contiene la colección de reclamaciones que se coloquen en el token de seguridad emitido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-238">A <see cref="T:System.Security.Claims.ClaimsIdentity" /> that contains the collection of claims that will be placed in the issued security token.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45801-239">El <xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A> método se llama desde la canalización de emisión de tokens, que se implementa mediante el <xref:System.IdentityModel.SecurityTokenService.Issue%2A> método.</span><span class="sxs-lookup"><span data-stu-id="45801-239">The <xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A> method is called from the token issuance pipeline, which is implemented by the <xref:System.IdentityModel.SecurityTokenService.Issue%2A> method.</span></span> <span data-ttu-id="45801-240">Devuelve un <xref:System.Security.Claims.ClaimsIdentity> que contiene las notificaciones que se va a incluir en el token de seguridad emitido según el solicitante del token (la `principal` parámetro), el RST entrante (el `request` parámetro), y de confianza para el que el token está pensado () el `scope` parámetro).</span><span class="sxs-lookup"><span data-stu-id="45801-240">It returns an <xref:System.Security.Claims.ClaimsIdentity> that contains the claims to include in the issued security token based on the requestor of the token (the `principal` parameter), the incoming RST (the `request` parameter), and the relying party for which the token is intended (the `scope` parameter).</span></span> <span data-ttu-id="45801-241">La lógica en este método se ocupa principalmente contestar las preguntas siguientes:</span><span class="sxs-lookup"><span data-stu-id="45801-241">The logic in this method is primarily concerned with answering the following questions:</span></span>  
  
-   <span data-ttu-id="45801-242">**¿Tipos de notificación que deben incluirse en la respuesta según el punto de reunión que se dirige?**</span><span class="sxs-lookup"><span data-stu-id="45801-242">**Which claim types should be included in the response based on the RP for which it is intended?**</span></span> <span data-ttu-id="45801-243">Normalmente, esto se decide por RP de listas de tipos de notificación necesarios para cada usuario de confianza o por solicitud examinando el <xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.Claims%2A> propiedad de la solicitud.</span><span class="sxs-lookup"><span data-stu-id="45801-243">Typically this is decided on a per-RP basis from lists of claim types required for each RP or on a per-request basis by examining the <xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.Claims%2A> property of the request.</span></span> <span data-ttu-id="45801-244">Sin embargo, la lógica y los detalles para determinar las notificaciones que se va a incluir en la respuesta es completamente hasta su implementación.</span><span class="sxs-lookup"><span data-stu-id="45801-244">However, the logic and details for determining the claims to include in the response is completely up to your implementation.</span></span>  
  
-   <span data-ttu-id="45801-245">**¿Valores de notificación que se deben asignar a las notificaciones en la respuesta?**</span><span class="sxs-lookup"><span data-stu-id="45801-245">**Which claim values should be assigned to the claims in the response?**</span></span> <span data-ttu-id="45801-246">Para un proveedor de identidades (IP-STS) Esto significa normalmente utilizando una o más notificaciones en el solicitante <xref:System.Security.Claims.ClaimsPrincipal> (proporcionado por el `principal` parámetro) para tener acceso a un almacén (u otra entidad) para devolver valores de los tipos de notificación requeridos.</span><span class="sxs-lookup"><span data-stu-id="45801-246">For an Identity Provider (IP-STS) this typically means using one or more claims in the requestor's <xref:System.Security.Claims.ClaimsPrincipal> (provided by the `principal` parameter) to access a store (or other entity) to return values for the required claim types.</span></span> <span data-ttu-id="45801-247">Para un proveedor de federación (R-STS) Esto normalmente significa realizar algún tipo de procesamiento en las notificaciones entrantes del solicitante para satisfacer la solicitud; Quizá para realizar el filtrado o transformación en algunas notificaciones presentadas por el solicitante, mientras pasa a otras personas a través sin modificar.</span><span class="sxs-lookup"><span data-stu-id="45801-247">For a Federation Provider (R-STS) this typically means performing some kind of processing on the requestor's incoming claims to fulfill the request; perhaps performing filtering or transformation on some claims presented by the requestor, while passing others through unmodified.</span></span> <span data-ttu-id="45801-248">Por supuesto, como se muestra en el caso de decidir qué notificaciones se incluyen en la respuesta, los detalles y la lógica de cómo determinar los valores de estas notificaciones es hasta su implementación.</span><span class="sxs-lookup"><span data-stu-id="45801-248">Of course, as in the case of deciding which claims to include in the response, the details and logic of how to determine the values of these claims is up to your implementation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="45801-249">El ejemplo de código que se usa en este tema se toma de la `Custom Token` ejemplo.</span><span class="sxs-lookup"><span data-stu-id="45801-249">The code example that is used in this topic is taken from the `Custom Token` sample.</span></span> <span data-ttu-id="45801-250">Este ejemplo proporciona las clases personalizadas que permiten el procesamiento de Simple Web Tokens (SWT) e incluye una implementación de un STS pasivo que es capaz de atender un token de SWT.</span><span class="sxs-lookup"><span data-stu-id="45801-250">This sample provides custom classes that enable processing of Simple Web Tokens (SWT) and it includes an implementation of a passive STS that is capable of serving an SWT token.</span></span> <span data-ttu-id="45801-251">Para obtener un ejemplo de cómo implementar un STS activo, puede ver el `Federation Metadata` ejemplo.</span><span class="sxs-lookup"><span data-stu-id="45801-251">For an example of how to implement an active STS, you can see the `Federation Metadata` sample.</span></span> <span data-ttu-id="45801-252">Para obtener información acerca de estos ejemplos y otros ejemplos disponibles para WIF y dónde descargarlas, consulte [índice de ejemplo de código WIF](~/docs/framework/security/wif-code-sample-index.md).</span><span class="sxs-lookup"><span data-stu-id="45801-252">For information about these samples and other samples available for WIF and about where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span> <span data-ttu-id="45801-253">El código siguiente muestra cómo invalidar el <xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A> método para devolver las notificaciones para su STS.</span><span class="sxs-lookup"><span data-stu-id="45801-253">The following code shows how to override the <xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A> method to return claims for your STS.</span></span> <span data-ttu-id="45801-254">En este ejemplo, se omite el mensaje de Token de seguridad de solicitud (RST) y se devuelve una colección de notificaciones en función del usuario autenticado en el STS.</span><span class="sxs-lookup"><span data-stu-id="45801-254">In this example, the Request Security Token (RST) message is ignored and a collection of claims based on the user as authenticated at the STS is returned.</span></span>  
  
 [!code-csharp[WIFCustomTokenSTS#6](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokensts/cs/passivests/customsecuritytokenservice.cs#6)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="45801-255">Debe reemplazar este método en la implementación de la clase <see cref="T:System.IdentityModel.SecurityTokenService" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="45801-255">You must override this method in your implementation of the <see cref="T:System.IdentityModel.SecurityTokenService" /> class.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.IdentityModel.Scope" />
        <altmember cref="M:System.IdentityModel.SecurityTokenService.Issue(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
      </Docs>
    </Member>
    <Member MemberName="GetProofToken">
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Tokens.ProofDescriptor GetProofToken (System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, System.IdentityModel.Scope scope);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Tokens.ProofDescriptor GetProofToken(class System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, class System.IdentityModel.Scope scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.GetProofToken(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::IdentityModel::Tokens::ProofDescriptor ^ GetProofToken(System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ request, System::IdentityModel::Scope ^ scope);" />
      <MemberSignature Language="F#" Value="abstract member GetProofToken : System.IdentityModel.Protocols.WSTrust.RequestSecurityToken * System.IdentityModel.Scope -&gt; System.IdentityModel.Tokens.ProofDescriptor&#xA;override this.GetProofToken : System.IdentityModel.Protocols.WSTrust.RequestSecurityToken * System.IdentityModel.Scope -&gt; System.IdentityModel.Tokens.ProofDescriptor" Usage="securityTokenService.GetProofToken (request, scope)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.ProofDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />
        <Parameter Name="scope" Type="System.IdentityModel.Scope" />
      </Parameters>
      <Docs>
        <param name="request">
          <span data-ttu-id="45801-256">
            <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> que representa la solicitud de token entrante (RST).</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-256">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> that represents the incoming token request (RST).</span>
          </span>
        </param>
        <param name="scope">
          <span data-ttu-id="45801-257">La instancia de <see cref="T:System.IdentityModel.Scope" /> que encapsula información sobre el usuario de confianza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-257">The <see cref="T:System.IdentityModel.Scope" /> instance that encapsulates information about the relying party.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="45801-258">Obtiene el token de prueba que se incluirá en la respuesta (RSTR).</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-258">Gets the proof token to be included in the response (RSTR).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="45801-259">
            <see cref="T:System.IdentityModel.Tokens.ProofDescriptor" /> que representa el nuevo descriptor de prueba que se ha creado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-259">A <see cref="T:System.IdentityModel.Tokens.ProofDescriptor" /> that represents the newly created proof descriptor.</span>
          </span>
          <span data-ttu-id="45801-260">El descriptor de prueba puede ser un descriptor de prueba asimétrica, un descriptor de prueba simétrica o <see langword="null" /> en el caso del token de portador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-260">The proof descriptor can be an asymmetric proof descriptor, a symmetric proof descriptor, or <see langword="null" /> in the bearer token case.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45801-261">Este método se llama desde el valor predeterminado la canalización de emisión de tokens se implementa en el <xref:System.IdentityModel.SecurityTokenService.Issue%2A> método.</span><span class="sxs-lookup"><span data-stu-id="45801-261">This method is called from the default token issuance pipeline implemented in the <xref:System.IdentityModel.SecurityTokenService.Issue%2A> method.</span></span>  
  
 <span data-ttu-id="45801-262">La implementación predeterminada devuelve un descriptor de prueba o produce una excepción adecuada.</span><span class="sxs-lookup"><span data-stu-id="45801-262">The default implementation returns a proof descriptor or throws an appropriate exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="45801-263">El valor de <paramref name="request" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-263">
              <paramref name="request" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="45801-264">O bien</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-264">-or-</span>
          </span>
          <span data-ttu-id="45801-265">El valor de <paramref name="scope" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-265">
              <paramref name="scope" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.IdentityModel.SecurityTokenService.Issue(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
      </Docs>
    </Member>
    <Member MemberName="GetRequestorProofEncryptingCredentials">
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Tokens.EncryptingCredentials GetRequestorProofEncryptingCredentials (System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Tokens.EncryptingCredentials GetRequestorProofEncryptingCredentials(class System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.GetRequestorProofEncryptingCredentials(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetRequestorProofEncryptingCredentials (request As RequestSecurityToken) As EncryptingCredentials" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::IdentityModel::Tokens::EncryptingCredentials ^ GetRequestorProofEncryptingCredentials(System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ request);" />
      <MemberSignature Language="F#" Value="abstract member GetRequestorProofEncryptingCredentials : System.IdentityModel.Protocols.WSTrust.RequestSecurityToken -&gt; System.IdentityModel.Tokens.EncryptingCredentials&#xA;override this.GetRequestorProofEncryptingCredentials : System.IdentityModel.Protocols.WSTrust.RequestSecurityToken -&gt; System.IdentityModel.Tokens.EncryptingCredentials" Usage="securityTokenService.GetRequestorProofEncryptingCredentials request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.EncryptingCredentials</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />
      </Parameters>
      <Docs>
        <param name="request">
          <span data-ttu-id="45801-266">
            <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> que representa la solicitud de token entrante (RST).</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-266">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> that represents the incoming token request (RST).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="45801-267">Obtiene las credenciales de cifrado de prueba del solicitante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-267">Gets the requestor's proof encrypting credentials.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="45801-268">Objeto <see cref="T:System.IdentityModel.Tokens.EncryptingCredentials" /> que representa las credenciales de cifrado del solicitante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-268">An <see cref="T:System.IdentityModel.Tokens.EncryptingCredentials" /> object that represents the requestor's encrypting credentials.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45801-269">Este método se llama desde el <xref:System.IdentityModel.SecurityTokenService.GetProofToken%2A> método.</span><span class="sxs-lookup"><span data-stu-id="45801-269">This method is called from the <xref:System.IdentityModel.SecurityTokenService.GetProofToken%2A> method.</span></span>  
  
 <span data-ttu-id="45801-270">La implementación predeterminada hace lo siguiente.</span><span class="sxs-lookup"><span data-stu-id="45801-270">The default implementation does the following.</span></span> <span data-ttu-id="45801-271">Devuelve `null` si no hay ningún token de cifrado especificado en la solicitud (el <xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.ProofEncryption%2A?displayProperty=nameWithType> propiedad es `null`).</span><span class="sxs-lookup"><span data-stu-id="45801-271">Returns `null` if there is no encryption token specified in the request (the <xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.ProofEncryption%2A?displayProperty=nameWithType> property is `null`).</span></span> <span data-ttu-id="45801-272">En caso contrario, si puede obtener el token como un <xref:System.IdentityModel.Tokens.X509SecurityToken>, devuelve las credenciales según ese token.</span><span class="sxs-lookup"><span data-stu-id="45801-272">Otherwise, if it can get the token as an <xref:System.IdentityModel.Tokens.X509SecurityToken>, it returns credentials based on that token.</span></span> <span data-ttu-id="45801-273">Si no se puede resolver el token como un <xref:System.IdentityModel.Tokens.X509SecurityToken>, un <xref:System.IdentityModel.RequestFailedException> se produce.</span><span class="sxs-lookup"><span data-stu-id="45801-273">If it cannot resolve the token as an <xref:System.IdentityModel.Tokens.X509SecurityToken>, a <xref:System.IdentityModel.RequestFailedException> is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="45801-274">El valor de <paramref name="request" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-274">
              <paramref name="request" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetResponse">
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse GetResponse (System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse GetResponse(class System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, class System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.GetResponse(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Tokens.SecurityTokenDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetResponse (request As RequestSecurityToken, tokenDescriptor As SecurityTokenDescriptor) As RequestSecurityTokenResponse" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::IdentityModel::Protocols::WSTrust::RequestSecurityTokenResponse ^ GetResponse(System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ request, System::IdentityModel::Tokens::SecurityTokenDescriptor ^ tokenDescriptor);" />
      <MemberSignature Language="F#" Value="abstract member GetResponse : System.IdentityModel.Protocols.WSTrust.RequestSecurityToken * System.IdentityModel.Tokens.SecurityTokenDescriptor -&gt; System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse&#xA;override this.GetResponse : System.IdentityModel.Protocols.WSTrust.RequestSecurityToken * System.IdentityModel.Tokens.SecurityTokenDescriptor -&gt; System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" Usage="securityTokenService.GetResponse (request, tokenDescriptor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />
        <Parameter Name="tokenDescriptor" Type="System.IdentityModel.Tokens.SecurityTokenDescriptor" />
      </Parameters>
      <Docs>
        <param name="request">
          <span data-ttu-id="45801-275">RST que contiene el token de la solicitud.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-275">The RST that contains the token request.</span>
          </span>
        </param>
        <param name="tokenDescriptor">
          <span data-ttu-id="45801-276">Descriptor de token que contiene la información para usar con el token emitido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-276">The token descriptor that contains the information to use for the issued token.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="45801-277">Crea la respuesta (RSTR) que contiene el token emitido mediante la solicitud especificada (RST) y el descriptor del token de seguridad.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-277">Creates the response (RSTR) that contains the issued token by using the specified request (RST) and security token descriptor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="45801-278">La respuesta (RSTR) o <see langword="null" /> si una respuesta no se puede crear a partir de la solicitud especificada y el descriptor de token.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-278">The response (RSTR) or <see langword="null" /> if a response cannot be created from the specified request and token descriptor.</span>
          </span>
          <span data-ttu-id="45801-279">La implementación predeterminada devuelve <see langword="null" /> si el parámetro <paramref name="tokenDescriptor" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-279">The default implementation returns <see langword="null" /> if the <paramref name="tokenDescriptor" /> parameter is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45801-280">El <xref:System.IdentityModel.SecurityTokenService.GetResponse%2A> método se llama como último paso desde la canalización de emisión de tokens, que se implementa mediante el <xref:System.IdentityModel.SecurityTokenService.Issue%2A> método.</span><span class="sxs-lookup"><span data-stu-id="45801-280">The <xref:System.IdentityModel.SecurityTokenService.GetResponse%2A> method is called as the last step from the token issuance pipeline, which is implemented by the <xref:System.IdentityModel.SecurityTokenService.Issue%2A> method.</span></span> <span data-ttu-id="45801-281">Crea y devuelve la respuesta (RSTR) mediante el uso de la solicitud entrante original (RST) y el descriptor de token que creó en los pasos anteriores en la canalización de emisión de tokens.</span><span class="sxs-lookup"><span data-stu-id="45801-281">It creates and returns the response (RSTR) by using the original incoming request (RST) and the token descriptor that was built up during previous steps in the token issuance pipeline.</span></span>  
  
 <span data-ttu-id="45801-282">La implementación predeterminada crea el RSTR al pasar el RST especificado en el parámetro de solicitud a la <xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse.%23ctor%28System.IdentityModel.Protocols.WSTrust.WSTrustMessage%29?displayProperty=nameWithType> constructor, invocar el <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.ApplyTo%2A?displayProperty=nameWithType> pasó el método de descriptor de token <xref:System.IdentityModel.SecurityTokenService.GetResponse%2A> para aplicar sus propiedades para el recién crea RSTR, establecer el <xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.AppliesTo%2A> propiedad en el RSTR mediante el uso de la <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.AppliesToAddress%2A> propiedad en el descriptor de token y, por último, estableciendo el <xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.ReplyTo%2A> propiedad en el RSTR según la tabla siguiente:</span><span class="sxs-lookup"><span data-stu-id="45801-282">The default implementation creates the RSTR by passing the RST specified in the request parameter to the <xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse.%23ctor%28System.IdentityModel.Protocols.WSTrust.WSTrustMessage%29?displayProperty=nameWithType> constructor, invoking the <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.ApplyTo%2A?displayProperty=nameWithType> method on the token descriptor passed into <xref:System.IdentityModel.SecurityTokenService.GetResponse%2A> to apply its properties to the newly created RSTR, setting the <xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.AppliesTo%2A> property on the RSTR by using the <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.AppliesToAddress%2A> property on the token descriptor, and finally setting the <xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.ReplyTo%2A> property on the RSTR according to the following table:</span></span>  
  
|<span data-ttu-id="45801-283">Propiedad`RST.ReplyTo` </span><span class="sxs-lookup"><span data-stu-id="45801-283">`RST.ReplyTo` property</span></span>|<span data-ttu-id="45801-284">Propiedad <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.AppliesToAddress%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="45801-284"><xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.AppliesToAddress%2A?displayProperty=nameWithType> property.</span></span>|<span data-ttu-id="45801-285">Propiedad`RSTR.ReplyTo` </span><span class="sxs-lookup"><span data-stu-id="45801-285">`RSTR.ReplyTo` property</span></span>|  
|----------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|-----------------------------|  
|<span data-ttu-id="45801-286">Set</span><span class="sxs-lookup"><span data-stu-id="45801-286">Set</span></span>|<span data-ttu-id="45801-287">No establecido</span><span class="sxs-lookup"><span data-stu-id="45801-287">Not Set</span></span>|<span data-ttu-id="45801-288">No establecido</span><span class="sxs-lookup"><span data-stu-id="45801-288">Not Set</span></span>|  
|<span data-ttu-id="45801-289">Set</span><span class="sxs-lookup"><span data-stu-id="45801-289">Set</span></span>|<span data-ttu-id="45801-290">Set</span><span class="sxs-lookup"><span data-stu-id="45801-290">Set</span></span>|<xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.AppliesToAddress%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="45801-291">No establecido</span><span class="sxs-lookup"><span data-stu-id="45801-291">Not Set</span></span>|<span data-ttu-id="45801-292">Set</span><span class="sxs-lookup"><span data-stu-id="45801-292">Set</span></span>|<span data-ttu-id="45801-293">No establecido</span><span class="sxs-lookup"><span data-stu-id="45801-293">Not Set</span></span>|  
|<span data-ttu-id="45801-294">No establecido</span><span class="sxs-lookup"><span data-stu-id="45801-294">Not Set</span></span>|<span data-ttu-id="45801-295">No establecido</span><span class="sxs-lookup"><span data-stu-id="45801-295">Not Set</span></span>|<span data-ttu-id="45801-296">No establecido</span><span class="sxs-lookup"><span data-stu-id="45801-296">Not Set</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IdentityModel.SecurityTokenService.Issue(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
      </Docs>
    </Member>
    <Member MemberName="GetScope">
      <MemberSignature Language="C#" Value="protected abstract System.IdentityModel.Scope GetScope (System.Security.Claims.ClaimsPrincipal principal, System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Scope GetScope(class System.Security.Claims.ClaimsPrincipal principal, class System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.GetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetScope (principal As ClaimsPrincipal, request As RequestSecurityToken) As Scope" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::IdentityModel::Scope ^ GetScope(System::Security::Claims::ClaimsPrincipal ^ principal, System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ request);" />
      <MemberSignature Language="F#" Value="abstract member GetScope : System.Security.Claims.ClaimsPrincipal * System.IdentityModel.Protocols.WSTrust.RequestSecurityToken -&gt; System.IdentityModel.Scope" Usage="securityTokenService.GetScope (principal, request)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Scope</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="request" Type="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />
      </Parameters>
      <Docs>
        <param name="principal">
          <span data-ttu-id="45801-297">
            <see cref="T:System.Security.Claims.ClaimsPrincipal" /> que representa al cliente que realiza la solicitud.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-297">A <see cref="T:System.Security.Claims.ClaimsPrincipal" /> that represents the client making the request.</span>
          </span>
        </param>
        <param name="request">
          <span data-ttu-id="45801-298">
            <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> que representa la solicitud entrante (RST).</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-298">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> that represents the incoming request (RST).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="45801-299">Obtiene un objeto <see cref="T:System.IdentityModel.Scope" /> que contiene información sobre el usuario de confianza (RP) asociado a la solicitud especificada (RST).</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-299">Gets a <see cref="T:System.IdentityModel.Scope" /> object that contains information about the relying party (RP) associated with the specified request (RST).</span>
          </span>
          <span data-ttu-id="45801-300">Debe reemplazar este método en la implementación de la clase <see cref="T:System.IdentityModel.SecurityTokenService" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-300">You must override this method in your implementation of the <see cref="T:System.IdentityModel.SecurityTokenService" /> class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="45801-301">
            <see cref="T:System.IdentityModel.Scope" /> que encapsula información de RP adjuntada a la solicitud.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-301">A <see cref="T:System.IdentityModel.Scope" /> that encapsulates the RP information associated with the request.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45801-302">El <xref:System.IdentityModel.SecurityTokenService.GetScope%2A> se llama al método de la canalización de emisión de tokens después de la <xref:System.IdentityModel.SecurityTokenService.ValidateRequest%2A> método y debe devolver un <xref:System.IdentityModel.Scope> objeto configurado para la solicitud entrante.</span><span class="sxs-lookup"><span data-stu-id="45801-302">The <xref:System.IdentityModel.SecurityTokenService.GetScope%2A> method is called from the token issuance pipeline after the <xref:System.IdentityModel.SecurityTokenService.ValidateRequest%2A> method and should return a <xref:System.IdentityModel.Scope> object configured for the incoming request.</span></span> <span data-ttu-id="45801-303">(La canalización de emisión de tokens se implementa en el <xref:System.IdentityModel.SecurityTokenService.Issue%2A> método.) La <xref:System.IdentityModel.Scope> objeto encapsula información sobre el RP asociado con la solicitud de token de seguridad (RST).</span><span class="sxs-lookup"><span data-stu-id="45801-303">(The token issuance pipeline is implemented in the <xref:System.IdentityModel.SecurityTokenService.Issue%2A> method.) The <xref:System.IdentityModel.Scope> object encapsulates information about the RP associated with the security token request (RST).</span></span> <span data-ttu-id="45801-304">Esto incluye información acerca de las credenciales de firmas y cifradas que se usará con el RP y si se deben cifrar todos los tokens emitidos y las claves simétricas de la respuesta.</span><span class="sxs-lookup"><span data-stu-id="45801-304">This includes information about the encrypting and signing credentials to be used with the RP and whether or not to encrypt any issued tokens and/or symmetric keys in the response.</span></span> <span data-ttu-id="45801-305">Algunas tareas habituales realizadas en el <xref:System.IdentityModel.SecurityTokenService.GetScope%2A> método son:</span><span class="sxs-lookup"><span data-stu-id="45801-305">Some typical tasks performed in the <xref:System.IdentityModel.SecurityTokenService.GetScope%2A> method are:</span></span>  
  
-   <span data-ttu-id="45801-306">Determinar si el RP que va dirigido el token es un usuario de confianza reconocida.</span><span class="sxs-lookup"><span data-stu-id="45801-306">Determine whether the RP for which the token is intended is a recognized RP.</span></span> <span data-ttu-id="45801-307">Cómo se consigue depende de su implementación.</span><span class="sxs-lookup"><span data-stu-id="45801-307">How this is accomplished depends on your implementation.</span></span> <span data-ttu-id="45801-308">Si el RP previsto no es un usuario de confianza válido para este STS, entonces el método debe producir una <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.</span><span class="sxs-lookup"><span data-stu-id="45801-308">If the intended RP is not a valid RP for this STS, then the method should throw an <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.</span></span>  
  
-   <span data-ttu-id="45801-309">Determinar la firma de credenciales para usarse en la respuesta (RSTR) y establezca el <xref:System.IdentityModel.Scope.SigningCredentials%2A> propiedad según corresponda.</span><span class="sxs-lookup"><span data-stu-id="45801-309">Determine the signing credentials to be used in the response (RSTR) and set the <xref:System.IdentityModel.Scope.SigningCredentials%2A> property accordingly.</span></span>  
  
-   <span data-ttu-id="45801-310">Determinar si se deben cifrar la respuesta o las claves simétricas incluye y las credenciales que se usará para el cifrado.</span><span class="sxs-lookup"><span data-stu-id="45801-310">Determine whether the response and/or any included symmetrical keys should be encrypted and the credentials to be used for encryption.</span></span> <span data-ttu-id="45801-311">Establecer el <xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A>, <xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A>, y <xref:System.IdentityModel.Scope.EncryptingCredentials%2A> propiedades según corresponda.</span><span class="sxs-lookup"><span data-stu-id="45801-311">Set the <xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A>, <xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A>, and <xref:System.IdentityModel.Scope.EncryptingCredentials%2A> properties accordingly.</span></span>  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="45801-312">De forma predeterminada, el <xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A> y <xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A> se establecen propiedades `true` para evitar que el STS de emisión de tokens que no son seguros.</span><span class="sxs-lookup"><span data-stu-id="45801-312">By default, the <xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A> and <xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A> properties are set `true` to prevent the STS from issuing tokens that are not secure.</span></span> <span data-ttu-id="45801-313">Se recomienda que nunca se establecer estas propiedades en `false` en un entorno de producción.</span><span class="sxs-lookup"><span data-stu-id="45801-313">It is recommended that these properties never be set to `false` in a production environment.</span></span>  
  
-   <span data-ttu-id="45801-314">Determinar la dirección a la que se debe devolver la respuesta.</span><span class="sxs-lookup"><span data-stu-id="45801-314">Determine the address to which the response should be returned.</span></span> <span data-ttu-id="45801-315">Establecer el <xref:System.IdentityModel.Scope.AppliesToAddress%2A> o <xref:System.IdentityModel.Scope.ReplyToAddress%2A> propiedad según corresponda.</span><span class="sxs-lookup"><span data-stu-id="45801-315">Set either the <xref:System.IdentityModel.Scope.AppliesToAddress%2A> or <xref:System.IdentityModel.Scope.ReplyToAddress%2A> property accordingly.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="45801-316">El ejemplo de código que se usa en este tema se toma de la `Custom Token` ejemplo.</span><span class="sxs-lookup"><span data-stu-id="45801-316">The code example that is used in this topic is taken from the `Custom Token` sample.</span></span> <span data-ttu-id="45801-317">Este ejemplo proporciona las clases personalizadas que permiten el procesamiento de Simple Web Tokens (SWT) e incluye una implementación de un STS pasivo que es capaz de atender un token de SWT.</span><span class="sxs-lookup"><span data-stu-id="45801-317">This sample provides custom classes that enable processing of Simple Web Tokens (SWT) and it includes an implementation of a passive STS that is capable of serving an SWT token.</span></span> <span data-ttu-id="45801-318">Para obtener un ejemplo de cómo implementar un STS activo, puede ver el `Federation Metadata` ejemplo.</span><span class="sxs-lookup"><span data-stu-id="45801-318">For an example of how to implement an active STS, you can see the `Federation Metadata` sample.</span></span> <span data-ttu-id="45801-319">Para obtener información acerca de estos ejemplos y otros ejemplos disponibles para WIF y dónde descargarlas, consulte [índice de ejemplo de código WIF](~/docs/framework/security/wif-code-sample-index.md).</span><span class="sxs-lookup"><span data-stu-id="45801-319">For information about these samples and other samples available for WIF and about where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span>  
  
 <span data-ttu-id="45801-320">En el siguiente ejemplo de código se muestra la implementación del método <xref:System.IdentityModel.SecurityTokenService.GetScope%2A>.</span><span class="sxs-lookup"><span data-stu-id="45801-320">The following code example shows an implementation of the <xref:System.IdentityModel.SecurityTokenService.GetScope%2A> method.</span></span> <span data-ttu-id="45801-321">Esta implementación comprueba que el RP se reconoce el STS, valida el <xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.ReplyTo%2A> dirección en la solicitud y establece el <xref:System.IdentityModel.Scope.ReplyToAddress%2A?displayProperty=nameWithType> propiedad según corresponda, y los conjuntos de la firma y cifrado de credenciales para usar con el punto de reunión basadas en certificados que están codificados de forma rígida en el archivo.</span><span class="sxs-lookup"><span data-stu-id="45801-321">This implementation verifies that the RP is recognized by the STS, validates the <xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.ReplyTo%2A> address in the request and sets the <xref:System.IdentityModel.Scope.ReplyToAddress%2A?displayProperty=nameWithType> property accordingly, and sets the signing and encrypting credentials to use with the RP based on certificates that are hard-coded in the file.</span></span>  
  
 [!code-csharp[WIFCustomTokenSTS#4](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokensts/cs/passivests/customsecuritytokenservice.cs#4)]  
[!code-csharp[WIFCustomTokenSTS#5](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokensts/cs/passivests/customsecuritytokenservice.cs#5)]  
[!code-csharp[WIFCustomTokenSTS#7](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokensts/cs/passivests/customsecuritytokenservice.cs#7)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="45801-322">Debe reemplazar este método en la implementación de la clase <see cref="T:System.IdentityModel.SecurityTokenService" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="45801-322">You must override this method in your implementation of the <see cref="T:System.IdentityModel.SecurityTokenService" /> class.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.IdentityModel.Scope" />
        <altmember cref="M:System.IdentityModel.SecurityTokenService.Issue(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
      </Docs>
    </Member>
    <Member MemberName="GetSecurityTokenHandler">
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Tokens.SecurityTokenHandler GetSecurityTokenHandler (string requestedTokenType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityTokenHandler GetSecurityTokenHandler(string requestedTokenType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.GetSecurityTokenHandler(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetSecurityTokenHandler (requestedTokenType As String) As SecurityTokenHandler" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::IdentityModel::Tokens::SecurityTokenHandler ^ GetSecurityTokenHandler(System::String ^ requestedTokenType);" />
      <MemberSignature Language="F#" Value="abstract member GetSecurityTokenHandler : string -&gt; System.IdentityModel.Tokens.SecurityTokenHandler&#xA;override this.GetSecurityTokenHandler : string -&gt; System.IdentityModel.Tokens.SecurityTokenHandler" Usage="securityTokenService.GetSecurityTokenHandler requestedTokenType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityTokenHandler</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestedTokenType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="requestedTokenType">
          <span data-ttu-id="45801-323">Cadena que contiene el URI del tipo de token solicitado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-323">A string that contains the requested token type URI.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="45801-324">Obtiene el controlador adecuado de token de seguridad para emitir un token de seguridad del tipo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-324">Gets the appropriate security token handler for issuing a security token of the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="45801-325">
            <see cref="T:System.IdentityModel.Tokens.SecurityTokenHandler" /> que representa el controlador de token que se utilizará para crear el token de seguridad emitido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-325">A <see cref="T:System.IdentityModel.Tokens.SecurityTokenHandler" /> that represents the token handler to be used for creating the issued security token.</span>
          </span>
          <span data-ttu-id="45801-326">Devuelve <see langword="null" /> si no se admite el tipo de token solicitado (no hay ningún controlador configurado para el tipo de token especificado).</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-326">Returns <see langword="null" /> if the requested token type is not supported (there is no handler configured for the specified token type).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45801-327">En la implementación predeterminada si `requestedTokenType` es `null` o una cadena vacía, el valor predeterminado se usa el tipo de token de configuración.</span><span class="sxs-lookup"><span data-stu-id="45801-327">In the default implementation if `requestedTokenType` is `null` or an empty string, the default token type from configuration is used.</span></span> <span data-ttu-id="45801-328">Esto se especifica mediante el <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.DefaultTokenType%2A> propiedad del objeto de configuración de STS tiene acceso a través del <xref:System.IdentityModel.SecurityTokenService.SecurityTokenServiceConfiguration%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="45801-328">This is specified by the <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.DefaultTokenType%2A> property of the STS configuration object accessed through the <xref:System.IdentityModel.SecurityTokenService.SecurityTokenServiceConfiguration%2A> property.</span></span>  
  
 <span data-ttu-id="45801-329">Este método se llama desde el valor predeterminado la canalización de emisión de tokens se implementa en el <xref:System.IdentityModel.SecurityTokenService.Issue%2A> método.</span><span class="sxs-lookup"><span data-stu-id="45801-329">This method is called from the default token issuance pipeline implemented in the <xref:System.IdentityModel.SecurityTokenService.Issue%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IdentityModel.SecurityTokenService.Issue(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
      </Docs>
    </Member>
    <Member MemberName="GetTokenLifetime">
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Protocols.WSTrust.Lifetime GetTokenLifetime (System.IdentityModel.Protocols.WSTrust.Lifetime requestLifetime);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Protocols.WSTrust.Lifetime GetTokenLifetime(class System.IdentityModel.Protocols.WSTrust.Lifetime requestLifetime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.GetTokenLifetime(System.IdentityModel.Protocols.WSTrust.Lifetime)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetTokenLifetime (requestLifetime As Lifetime) As Lifetime" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::IdentityModel::Protocols::WSTrust::Lifetime ^ GetTokenLifetime(System::IdentityModel::Protocols::WSTrust::Lifetime ^ requestLifetime);" />
      <MemberSignature Language="F#" Value="abstract member GetTokenLifetime : System.IdentityModel.Protocols.WSTrust.Lifetime -&gt; System.IdentityModel.Protocols.WSTrust.Lifetime&#xA;override this.GetTokenLifetime : System.IdentityModel.Protocols.WSTrust.Lifetime -&gt; System.IdentityModel.Protocols.WSTrust.Lifetime" Usage="securityTokenService.GetTokenLifetime requestLifetime" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Protocols.WSTrust.Lifetime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestLifetime" Type="System.IdentityModel.Protocols.WSTrust.Lifetime" />
      </Parameters>
      <Docs>
        <param name="requestLifetime">
          <span data-ttu-id="45801-330">Objeto <see cref="T:System.IdentityModel.Protocols.WSTrust.Lifetime" /> que representa la duración solicitada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-330">A <see cref="T:System.IdentityModel.Protocols.WSTrust.Lifetime" /> that represents the requested lifetime.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="45801-331">Obtiene la información de duración del token emitido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-331">Gets the lifetime for the issued token.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="45801-332">
            <see cref="T:System.IdentityModel.Protocols.WSTrust.Lifetime" /> que representa la duración concedida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-332">A <see cref="T:System.IdentityModel.Protocols.WSTrust.Lifetime" /> that represents the granted lifetime.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45801-333">Normalmente se llama a este método con la duración que llegaron en el RST.</span><span class="sxs-lookup"><span data-stu-id="45801-333">This method is normally called with the lifetime that arrived in the RST.</span></span> <span data-ttu-id="45801-334">En la implementación predeterminada, la duración del token se calcula según la tabla siguiente.</span><span class="sxs-lookup"><span data-stu-id="45801-334">In the default implementation, the token lifetime is calculated according to the following table.</span></span>  
  
|<span data-ttu-id="45801-335">Creado (en)</span><span class="sxs-lookup"><span data-stu-id="45801-335">Created (in)</span></span>|<span data-ttu-id="45801-336">Expira (in)</span><span class="sxs-lookup"><span data-stu-id="45801-336">Expires (in)</span></span>|<span data-ttu-id="45801-337">Creado (en)</span><span class="sxs-lookup"><span data-stu-id="45801-337">Created (in)</span></span>|<span data-ttu-id="45801-338">Expira (out)</span><span class="sxs-lookup"><span data-stu-id="45801-338">Expires (out)</span></span>|  
|--------------------|--------------------|--------------------|---------------------|  
|`null`|`null`|<xref:System.DateTime.UtcNow%2A?displayProperty=nameWithType>|<xref:System.DateTime.UtcNow%2A?displayProperty=nameWithType> + <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.DefaultTokenLifetime%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="45801-339">C</span><span class="sxs-lookup"><span data-stu-id="45801-339">C</span></span>|`null`|<span data-ttu-id="45801-340">C</span><span class="sxs-lookup"><span data-stu-id="45801-340">C</span></span>|<span data-ttu-id="45801-341">C + <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.DefaultTokenLifetime%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="45801-341">C + <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.DefaultTokenLifetime%2A?displayProperty=nameWithType></span></span>|  
|`null`|<span data-ttu-id="45801-342">E</span><span class="sxs-lookup"><span data-stu-id="45801-342">E</span></span>|<xref:System.DateTime.UtcNow%2A?displayProperty=nameWithType>|<span data-ttu-id="45801-343">E</span><span class="sxs-lookup"><span data-stu-id="45801-343">E</span></span>|  
|<span data-ttu-id="45801-344">C</span><span class="sxs-lookup"><span data-stu-id="45801-344">C</span></span>|<span data-ttu-id="45801-345">E</span><span class="sxs-lookup"><span data-stu-id="45801-345">E</span></span>|<span data-ttu-id="45801-346">C</span><span class="sxs-lookup"><span data-stu-id="45801-346">C</span></span>|<span data-ttu-id="45801-347">E</span><span class="sxs-lookup"><span data-stu-id="45801-347">E</span></span>|  
  
 <span data-ttu-id="45801-348">Este método se llama desde el valor predeterminado la canalización de emisión de tokens se implementa en el <xref:System.IdentityModel.SecurityTokenService.Issue%2A> método.</span><span class="sxs-lookup"><span data-stu-id="45801-348">This method is called from the default token issuance pipeline implemented in the <xref:System.IdentityModel.SecurityTokenService.Issue%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IdentityModel.SecurityTokenService.Issue(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
      </Docs>
    </Member>
    <Member MemberName="Issue">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse Issue (System.Security.Claims.ClaimsPrincipal principal, System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse Issue(class System.Security.Claims.ClaimsPrincipal principal, class System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.Issue(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Issue (principal As ClaimsPrincipal, request As RequestSecurityToken) As RequestSecurityTokenResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Protocols::WSTrust::RequestSecurityTokenResponse ^ Issue(System::Security::Claims::ClaimsPrincipal ^ principal, System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ request);" />
      <MemberSignature Language="F#" Value="abstract member Issue : System.Security.Claims.ClaimsPrincipal * System.IdentityModel.Protocols.WSTrust.RequestSecurityToken -&gt; System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse&#xA;override this.Issue : System.Security.Claims.ClaimsPrincipal * System.IdentityModel.Protocols.WSTrust.RequestSecurityToken -&gt; System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" Usage="securityTokenService.Issue (principal, request)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="request" Type="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />
      </Parameters>
      <Docs>
        <param name="principal">
          <span data-ttu-id="45801-349">
            <see cref="T:System.Security.Claims.ClaimsPrincipal" /> que representa la identidad del solicitante del token.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-349">A <see cref="T:System.Security.Claims.ClaimsPrincipal" /> that represents the identity of the token requestor.</span>
          </span>
        </param>
        <param name="request">
          <span data-ttu-id="45801-350">
            <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> que representa la solicitud del token de seguridad.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-350">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> that represents the security token request.</span>
          </span>
          <span data-ttu-id="45801-351">Esto incluye el mensaje de solicitud junto con otra información relacionada del cliente como el contexto de autorización.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-351">This includes the request message as well as other client related information such as authorization context.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="45801-352">Emite un token de seguridad.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-352">Issues a security token.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="45801-353">
            <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" /> que contiene el token de seguridad emitido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-353">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" /> that contains the issued security token.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45801-354">Este método implementa el enlace Issue definido en la especificación WS-Trust.</span><span class="sxs-lookup"><span data-stu-id="45801-354">This method implements the Issue binding defined in the WS-Trust specification.</span></span> <span data-ttu-id="45801-355">La implementación predeterminada de la <xref:System.IdentityModel.SecurityTokenService.Issue%2A> método procesa la solicitud entrante (RST) a través de una canalización de emisión de token (emisión de notificaciones) y devuelve una respuesta (RSTR) que contiene un token de seguridad con las notificaciones adecuadas para autenticar el solicitante con el punto de reunión o una excepción adecuada.</span><span class="sxs-lookup"><span data-stu-id="45801-355">The default implementation of the <xref:System.IdentityModel.SecurityTokenService.Issue%2A> method processes the incoming request (RST) through a token issuance (claims issuance) pipeline and returns either a response (RSTR) that contains a security token with the appropriate claims to authenticate the requestor with the RP or an appropriate exception.</span></span> <span data-ttu-id="45801-356">La canalización de emisión de tokens en la implementación predeterminada consta de las llamadas a los métodos siguientes (de la <xref:System.IdentityModel.SecurityTokenService> clase).</span><span class="sxs-lookup"><span data-stu-id="45801-356">The token issuance pipeline in the default implementation consists of calls to the following methods (of the <xref:System.IdentityModel.SecurityTokenService> class).</span></span>  
  
1.  <span data-ttu-id="45801-357">El <xref:System.IdentityModel.SecurityTokenService.ValidateRequest%2A> método para validar la solicitud (RST).</span><span class="sxs-lookup"><span data-stu-id="45801-357">The <xref:System.IdentityModel.SecurityTokenService.ValidateRequest%2A> method to validate the request (RST).</span></span>  
  
2.  <span data-ttu-id="45801-358">El <xref:System.IdentityModel.SecurityTokenService.GetScope%2A> método para obtener un <xref:System.IdentityModel.Scope> objeto que contiene información sobre el usuario de confianza (RP) asociado a la solicitud.</span><span class="sxs-lookup"><span data-stu-id="45801-358">The <xref:System.IdentityModel.SecurityTokenService.GetScope%2A> method to get a <xref:System.IdentityModel.Scope> object that contains information about the relying party (RP) associated with the request.</span></span> <span data-ttu-id="45801-359">Debe invalidar este método.</span><span class="sxs-lookup"><span data-stu-id="45801-359">You must override this method.</span></span> <span data-ttu-id="45801-360">Si <xref:System.IdentityModel.SecurityTokenService.GetScope%2A> devuelve `null`, un <xref:System.InvalidOperationException> se produce.</span><span class="sxs-lookup"><span data-stu-id="45801-360">If <xref:System.IdentityModel.SecurityTokenService.GetScope%2A> returns `null`, a <xref:System.InvalidOperationException> is thrown.</span></span>  
  
3.  <span data-ttu-id="45801-361">El <xref:System.IdentityModel.SecurityTokenService.CreateSecurityTokenDescriptor%2A> método para devolver un descriptor de token de seguridad basada en el RST y <xref:System.IdentityModel.Scope> devuelve el objeto en el paso anterior.</span><span class="sxs-lookup"><span data-stu-id="45801-361">The <xref:System.IdentityModel.SecurityTokenService.CreateSecurityTokenDescriptor%2A> method to return a security token descriptor based on the RST and the <xref:System.IdentityModel.Scope> object returned in the previous step.</span></span> <span data-ttu-id="45801-362">El descriptor de token de seguridad (<xref:System.IdentityModel.Tokens.SecurityTokenDescriptor>) contiene información sobre la solicitud en un formulario que puede usarse en un controlador de token.</span><span class="sxs-lookup"><span data-stu-id="45801-362">The security token descriptor (<xref:System.IdentityModel.Tokens.SecurityTokenDescriptor>) contains information about the request in a form that can be used by a token handler.</span></span> <span data-ttu-id="45801-363">El <xref:System.IdentityModel.SecurityTokenService.SecurityTokenDescriptor%2A?displayProperty=nameWithType> propiedad está establecida en el descriptor de devuelto por la llamada.</span><span class="sxs-lookup"><span data-stu-id="45801-363">The <xref:System.IdentityModel.SecurityTokenService.SecurityTokenDescriptor%2A?displayProperty=nameWithType> property is set to the descriptor returned by the call.</span></span> <span data-ttu-id="45801-364">Si `null` se devuelve o si el <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.SigningCredentials%2A> es propiedad del descriptor `null`, un <xref:System.InvalidOperationException> se produce.</span><span class="sxs-lookup"><span data-stu-id="45801-364">If `null` is returned or if the <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.SigningCredentials%2A> property of the descriptor is `null`, an <xref:System.InvalidOperationException> is thrown.</span></span> <span data-ttu-id="45801-365">La excepción también se produce si el <xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A?displayProperty=nameWithType> propiedad es `true` pero la <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.EncryptingCredentials%2A> propiedad en el descriptor devuelto es `null`.</span><span class="sxs-lookup"><span data-stu-id="45801-365">The exception is also thrown if the <xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A?displayProperty=nameWithType> property is `true` but the <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.EncryptingCredentials%2A> property on the returned descriptor is `null`.</span></span>  
  
4.  <span data-ttu-id="45801-366">El <xref:System.IdentityModel.SecurityTokenService.GetSecurityTokenHandler%2A> método para obtener el controlador de token adecuado en función del tipo de token solicitado.</span><span class="sxs-lookup"><span data-stu-id="45801-366">The <xref:System.IdentityModel.SecurityTokenService.GetSecurityTokenHandler%2A> method to get the appropriate token handler based on the kind of token requested.</span></span> <span data-ttu-id="45801-367">Si `null` se devuelve, un <xref:System.NotImplementedException> se produce.</span><span class="sxs-lookup"><span data-stu-id="45801-367">If `null` is returned, a <xref:System.NotImplementedException> is thrown.</span></span>  
  
5.  <span data-ttu-id="45801-368">El <xref:System.IdentityModel.SecurityTokenService.GetIssuerName%2A> método para obtener el nombre del emisor del token.</span><span class="sxs-lookup"><span data-stu-id="45801-368">The <xref:System.IdentityModel.SecurityTokenService.GetIssuerName%2A> method to get the issuer name for the token.</span></span> <span data-ttu-id="45801-369">Produce una <xref:System.InvalidOperationException> si el nombre es `null` o está vacío; en caso contrario, Establece el <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.TokenIssuerName%2A> el descriptor de propiedad.</span><span class="sxs-lookup"><span data-stu-id="45801-369">Throws an <xref:System.InvalidOperationException> if the name is `null` or empty; otherwise sets the <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.TokenIssuerName%2A> property on the descriptor.</span></span>  
  
6.  <span data-ttu-id="45801-370">El <xref:System.IdentityModel.SecurityTokenService.GetTokenLifetime%2A> método para obtener la duración para el símbolo (token) y establece el <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Lifetime%2A> el descriptor de propiedad.</span><span class="sxs-lookup"><span data-stu-id="45801-370">The <xref:System.IdentityModel.SecurityTokenService.GetTokenLifetime%2A> method to get the lifetime for the token and sets the <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Lifetime%2A> property on the descriptor.</span></span>  
  
7.  <span data-ttu-id="45801-371">El <xref:System.IdentityModel.SecurityTokenService.GetProofToken%2A> método para obtener el token de prueba debe incluir en el token emitido y establece el <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Proof%2A> el descriptor de propiedad.</span><span class="sxs-lookup"><span data-stu-id="45801-371">The <xref:System.IdentityModel.SecurityTokenService.GetProofToken%2A> method to get the proof token to include in the issued token and sets the <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Proof%2A> property on the descriptor.</span></span>  
  
8.  <span data-ttu-id="45801-372">El <xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A> método para obtener las notificaciones que se va a incluir en el token emitido y establece el <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Subject%2A> el descriptor de propiedad.</span><span class="sxs-lookup"><span data-stu-id="45801-372">The <xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A> method to get the claims to include in the issued token and sets the <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Subject%2A> property on the descriptor.</span></span> <span data-ttu-id="45801-373">Debe invalidar este método.</span><span class="sxs-lookup"><span data-stu-id="45801-373">You must override this method.</span></span>  
  
9. <span data-ttu-id="45801-374">El <xref:System.IdentityModel.SecurityTokenService.GetResponse%2A> método para crear una respuesta (RSTR) que contiene el token emitido.</span><span class="sxs-lookup"><span data-stu-id="45801-374">The <xref:System.IdentityModel.SecurityTokenService.GetResponse%2A> method to create a response (RSTR) that contains the issued token.</span></span>  
  
 <span data-ttu-id="45801-375">Puede invalidar el <xref:System.IdentityModel.SecurityTokenService.Issue%2A> método para implementar una canalización de emisión de tokens personalizado; sin embargo esto normalmente no es necesario en los entornos de desarrollo y pruebas para las implementaciones más personalizadas de la <xref:System.IdentityModel.SecurityTokenService> pretenden clase.</span><span class="sxs-lookup"><span data-stu-id="45801-375">You can override the <xref:System.IdentityModel.SecurityTokenService.Issue%2A> method to implement a custom token issuance pipeline; however this is typically not necessary in the development and test environments for which most custom implementations of the <xref:System.IdentityModel.SecurityTokenService> class are intended.</span></span> <span data-ttu-id="45801-376">En muchos de estos casos es reemplazar el <xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A> y <xref:System.IdentityModel.SecurityTokenService.GetScope%2A> métodos y, opcionalmente, invalide el <xref:System.IdentityModel.SecurityTokenService.ValidateRequest%2A> método para proporcionar un STS reparables por el entorno.</span><span class="sxs-lookup"><span data-stu-id="45801-376">In many of these cases you override the <xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A> and <xref:System.IdentityModel.SecurityTokenService.GetScope%2A> methods and optionally override the <xref:System.IdentityModel.SecurityTokenService.ValidateRequest%2A> method  to provide a serviceable STS for your environment.</span></span> <span data-ttu-id="45801-377">Si aún más la personalización es necesaria a menudo puede proporcionar invalidando los métodos que implementan cada fase de la predeterminada de canalización de emisión de tokens enumerado anteriormente.</span><span class="sxs-lookup"><span data-stu-id="45801-377">If further customization is necessary you can often provide it by overriding the methods that implement each stage of the default token issuance pipeline listed above.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Principal">
      <MemberSignature Language="C#" Value="public System.Security.Claims.ClaimsPrincipal Principal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Claims.ClaimsPrincipal Principal" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.SecurityTokenService.Principal" />
      <MemberSignature Language="VB.NET" Value="Public Property Principal As ClaimsPrincipal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Claims::ClaimsPrincipal ^ Principal { System::Security::Claims::ClaimsPrincipal ^ get(); void set(System::Security::Claims::ClaimsPrincipal ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Principal : System.Security.Claims.ClaimsPrincipal with get, set" Usage="System.IdentityModel.SecurityTokenService.Principal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Claims.ClaimsPrincipal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45801-378">Obtiene o establece la entidad de seguridad adjuntada a la instancia actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-378">Gets or sets the principal associated with the current instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45801-379">
            <see cref="T:System.Security.Claims.ClaimsPrincipal" /> que representa la entidad de seguridad actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-379">A <see cref="T:System.Security.Claims.ClaimsPrincipal" /> that represents the current principal.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Renew">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse Renew (System.Security.Claims.ClaimsPrincipal principal, System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse Renew(class System.Security.Claims.ClaimsPrincipal principal, class System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.Renew(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Renew (principal As ClaimsPrincipal, request As RequestSecurityToken) As RequestSecurityTokenResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Protocols::WSTrust::RequestSecurityTokenResponse ^ Renew(System::Security::Claims::ClaimsPrincipal ^ principal, System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ request);" />
      <MemberSignature Language="F#" Value="abstract member Renew : System.Security.Claims.ClaimsPrincipal * System.IdentityModel.Protocols.WSTrust.RequestSecurityToken -&gt; System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse&#xA;override this.Renew : System.Security.Claims.ClaimsPrincipal * System.IdentityModel.Protocols.WSTrust.RequestSecurityToken -&gt; System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" Usage="securityTokenService.Renew (principal, request)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="request" Type="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />
      </Parameters>
      <Docs>
        <param name="principal">
          <span data-ttu-id="45801-380">
            <see cref="T:System.Security.Claims.ClaimsPrincipal" /> que representa la identidad del solicitante del token.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-380">A <see cref="T:System.Security.Claims.ClaimsPrincipal" /> that represents the identity of the token requestor.</span>
          </span>
        </param>
        <param name="request">
          <span data-ttu-id="45801-381">
            <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> que representa la solicitud del token de seguridad.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-381">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> that represents the security token request.</span>
          </span>
          <span data-ttu-id="45801-382">Esto incluye el mensaje de solicitud junto con otra información relacionada del cliente como el contexto de autorización.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-382">This includes the request message as well as other client related information such as authorization context.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="45801-383">Cuando se reemplaza en una clase derivada, procesa una solicitud WS-Trust Renew.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-383">When overridden in a derived class, processes a WS-Trust Renew request.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="45801-384">Clase <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" /> que representa el RSTR para devolver al llamador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-384">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" /> that represents the RSTR to return to the caller.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45801-385">La implementación predeterminada de este método produce una <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.</span><span class="sxs-lookup"><span data-stu-id="45801-385">The default implementation of this method throws an <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Request">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Protocols.WSTrust.RequestSecurityToken Request { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Protocols.WSTrust.RequestSecurityToken Request" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.SecurityTokenService.Request" />
      <MemberSignature Language="VB.NET" Value="Public Property Request As RequestSecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ Request { System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ get(); void set(System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Request : System.IdentityModel.Protocols.WSTrust.RequestSecurityToken with get, set" Usage="System.IdentityModel.SecurityTokenService.Request" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Protocols.WSTrust.RequestSecurityToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45801-386">Obtiene y establece la solicitud de token de seguridad (RST) con la instancia actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-386">Gets or sets the security token request (RST) associated with the current instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45801-387">
            <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> que contiene la solicitud.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-387">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> that contains the request.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scope">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Scope Scope { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Scope Scope" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.SecurityTokenService.Scope" />
      <MemberSignature Language="VB.NET" Value="Public Property Scope As Scope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Scope ^ Scope { System::IdentityModel::Scope ^ get(); void set(System::IdentityModel::Scope ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Scope : System.IdentityModel.Scope with get, set" Usage="System.IdentityModel.SecurityTokenService.Scope" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Scope</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45801-388">Obtiene o establece el ámbito asociado a la instancia actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-388">Gets or sets the scope associated with the current instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45801-389">
            <see cref="T:System.IdentityModel.Scope" /> que representa la configuración de la solicitud de emisión de tokens.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-389">A <see cref="T:System.IdentityModel.Scope" /> that represents the configuration for the token issuance request.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SecurityTokenDescriptor">
      <MemberSignature Language="C#" Value="protected System.IdentityModel.Tokens.SecurityTokenDescriptor SecurityTokenDescriptor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.SecurityTokenDescriptor SecurityTokenDescriptor" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.SecurityTokenService.SecurityTokenDescriptor" />
      <MemberSignature Language="VB.NET" Value="Protected Property SecurityTokenDescriptor As SecurityTokenDescriptor" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::IdentityModel::Tokens::SecurityTokenDescriptor ^ SecurityTokenDescriptor { System::IdentityModel::Tokens::SecurityTokenDescriptor ^ get(); void set(System::IdentityModel::Tokens::SecurityTokenDescriptor ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SecurityTokenDescriptor : System.IdentityModel.Tokens.SecurityTokenDescriptor with get, set" Usage="System.IdentityModel.SecurityTokenService.SecurityTokenDescriptor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityTokenDescriptor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45801-390">Obtiene o establece la <see cref="T:System.IdentityModel.Tokens.SecurityTokenDescriptor" /> adjuntada a la instancia actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-390">Gets or sets the <see cref="T:System.IdentityModel.Tokens.SecurityTokenDescriptor" /> associated with the current instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45801-391">El descriptor del token de seguridad asociado a la instancia actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-391">The security token descriptor that is associated with the current instance.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="45801-392">Se ha intentado establecer la propiedad en <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-392">An attempt to set the property to <see langword="null" /> occurs.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SecurityTokenServiceConfiguration">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Configuration.SecurityTokenServiceConfiguration SecurityTokenServiceConfiguration { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Configuration.SecurityTokenServiceConfiguration SecurityTokenServiceConfiguration" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.SecurityTokenService.SecurityTokenServiceConfiguration" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SecurityTokenServiceConfiguration As SecurityTokenServiceConfiguration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Configuration::SecurityTokenServiceConfiguration ^ SecurityTokenServiceConfiguration { System::IdentityModel::Configuration::SecurityTokenServiceConfiguration ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SecurityTokenServiceConfiguration : System.IdentityModel.Configuration.SecurityTokenServiceConfiguration" Usage="System.IdentityModel.SecurityTokenService.SecurityTokenServiceConfiguration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Configuration.SecurityTokenServiceConfiguration</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45801-393">Obtiene la instancia de configuración del propietario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-393">Gets the owner configuration instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45801-394">
            <see cref="T:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration" /> que contiene la configuración para la instancia actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-394">A <see cref="T:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration" /> that contains the configuration for the current instance.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse Validate (System.Security.Claims.ClaimsPrincipal principal, System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse Validate(class System.Security.Claims.ClaimsPrincipal principal, class System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.Validate(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Validate (principal As ClaimsPrincipal, request As RequestSecurityToken) As RequestSecurityTokenResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Protocols::WSTrust::RequestSecurityTokenResponse ^ Validate(System::Security::Claims::ClaimsPrincipal ^ principal, System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ request);" />
      <MemberSignature Language="F#" Value="abstract member Validate : System.Security.Claims.ClaimsPrincipal * System.IdentityModel.Protocols.WSTrust.RequestSecurityToken -&gt; System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse&#xA;override this.Validate : System.Security.Claims.ClaimsPrincipal * System.IdentityModel.Protocols.WSTrust.RequestSecurityToken -&gt; System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" Usage="securityTokenService.Validate (principal, request)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="request" Type="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />
      </Parameters>
      <Docs>
        <param name="principal">
          <span data-ttu-id="45801-395">
            <see cref="T:System.Security.Claims.ClaimsPrincipal" /> que representa la identidad del solicitante del token.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-395">A <see cref="T:System.Security.Claims.ClaimsPrincipal" /> that represents the identity of the token requestor.</span>
          </span>
        </param>
        <param name="request">
          <span data-ttu-id="45801-396">
            <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> que representa la solicitud del token de seguridad.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-396">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> that represents the security token request.</span>
          </span>
          <span data-ttu-id="45801-397">Esto incluye el mensaje de solicitud junto con otra información relacionada del cliente como el contexto de autorización.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-397">This includes the request message as well as other client related information such as authorization context.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="45801-398">Cuando se reemplaza en una clase derivada, procesa una solicitud WS-Trust Validate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-398">When overridden in a derived class, processes a WS-Trust Validate request.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="45801-399">Clase <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" /> que representa el RSTR para devolver al llamador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-399">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" /> that represents the RSTR to return to the caller.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45801-400">La implementación predeterminada de este método produce una <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.</span><span class="sxs-lookup"><span data-stu-id="45801-400">The default implementation of this method throws an <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateRequest">
      <MemberSignature Language="C#" Value="protected virtual void ValidateRequest (System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ValidateRequest(class System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.ValidateRequest(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ValidateRequest (request As RequestSecurityToken)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ValidateRequest(System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ request);" />
      <MemberSignature Language="F#" Value="abstract member ValidateRequest : System.IdentityModel.Protocols.WSTrust.RequestSecurityToken -&gt; unit&#xA;override this.ValidateRequest : System.IdentityModel.Protocols.WSTrust.RequestSecurityToken -&gt; unit" Usage="securityTokenService.ValidateRequest request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />
      </Parameters>
      <Docs>
        <param name="request">
          <span data-ttu-id="45801-401">Clase <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> que representa la solicitud.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-401">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> that represents the request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="45801-402">Valida la solicitud de token de seguridad (RST) encapsulada por esta instancia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-402">Validates the security token request (RST) encapsulated by this instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45801-403">El <xref:System.IdentityModel.SecurityTokenService.ValidateRequest%2A> se llama al método de la canalización de emisión de tokens (el <xref:System.IdentityModel.SecurityTokenService.Issue%2A> método) para validar el RST entrante.</span><span class="sxs-lookup"><span data-stu-id="45801-403">The <xref:System.IdentityModel.SecurityTokenService.ValidateRequest%2A> method is called from the token issuance pipeline (the <xref:System.IdentityModel.SecurityTokenService.Issue%2A> method) to validate the incoming RST.</span></span> <span data-ttu-id="45801-404">El RST se valida comparándola con los requisitos (directiva) de STS y se produce una excepción adecuada si no es válido.</span><span class="sxs-lookup"><span data-stu-id="45801-404">The RST is validated against the requirements (policy) of the STS and an appropriate exception is thrown if it is not valid.</span></span>  
  
 <span data-ttu-id="45801-405">La implementación predeterminada de la <xref:System.IdentityModel.SecurityTokenService> clase admite solo el patrón de RST y RSTR y solo el enlace Issue de la especificación WS-Trust (el <xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.RequestType%2A> debe establecerse la propiedad de la solicitud <xref:System.IdentityModel.Protocols.WSTrust.RequestTypes.Issue?displayProperty=nameWithType>).</span><span class="sxs-lookup"><span data-stu-id="45801-405">The default implementation of the <xref:System.IdentityModel.SecurityTokenService> class supports only the RST-RSTR pattern and only the Issue binding of the WS-Trust specification (the <xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.RequestType%2A> property of the request must be set to <xref:System.IdentityModel.Protocols.WSTrust.RequestTypes.Issue?displayProperty=nameWithType>).</span></span> <span data-ttu-id="45801-406">La implementación predeterminada de este método aplica estos requisitos (y otros se indican en la sección excepciones).</span><span class="sxs-lookup"><span data-stu-id="45801-406">The default implementation of this method enforces these requirements (and others noted in the exceptions section).</span></span> <span data-ttu-id="45801-407">Puede invalidar este método si se deben aplicar los requisitos de validación diferente para el STS personalizado.</span><span class="sxs-lookup"><span data-stu-id="45801-407">You can override this method if you must enforce different validation requirements for your custom STS.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IdentityModel.Protocols.WSTrust.InvalidRequestException">
          <span data-ttu-id="45801-408">El valor de <paramref name="request" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-408">
              <paramref name="request" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="45801-409">O bien</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-409">-or-</span>
          </span>
          <span data-ttu-id="45801-410">La propiedad <see cref="P:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.RequestType" /> de la solicitud no está establecida en <see cref="F:System.IdentityModel.Protocols.WSTrust.RequestTypes.Issue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-410">The <see cref="P:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.RequestType" /> property of the request is not set to <see cref="F:System.IdentityModel.Protocols.WSTrust.RequestTypes.Issue" />.</span>
          </span>
          <span data-ttu-id="45801-411">O bien</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-411">-or-</span>
          </span>
          <span data-ttu-id="45801-412">La propiedad <see cref="P:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeyType" /> de la solicitud no es <see langword="null" /> o una de las constantes definidas en la clase <see cref="T:System.IdentityModel.Protocols.WSTrust.KeyTypes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-412">The <see cref="P:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeyType" /> property of the request is not <see langword="null" /> or one of the constants defined in the <see cref="T:System.IdentityModel.Protocols.WSTrust.KeyTypes" /> class.</span>
          </span>
          <span data-ttu-id="45801-413">O bien</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-413">-or-</span>
          </span>
          <span data-ttu-id="45801-414">El <see cref="P:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeyType" /> de la solicitud es <see cref="F:System.IdentityModel.Protocols.WSTrust.KeyTypes.Bearer" /> y el elemento <see langword="KeySize" /> está presente, pero su valor no es igual a cero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-414">The <see cref="P:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeyType" /> of the request is <see cref="F:System.IdentityModel.Protocols.WSTrust.KeyTypes.Bearer" /> and the <see langword="KeySize" /> element is present, but its value is not equal to zero.</span>
          </span>
        </exception>
        <exception cref="T:System.IdentityModel.UnsupportedTokenTypeBadRequestException">
          <span data-ttu-id="45801-415">El STS no admite el tipo de token de solicitud (según el valor de la propiedad <see cref="P:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.TokenType" /> de la solicitud).</span>
          <span class="sxs-lookup">
            <span data-stu-id="45801-415">The STS does not support the request token type (based on the value of the <see cref="P:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.TokenType" /> property of the request).</span>
          </span>
        </exception>
        <altmember cref="M:System.IdentityModel.SecurityTokenService.Issue(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
      </Docs>
    </Member>
  </Members>
</Type>
<Type Name="Scope" FullName="System.IdentityModel.Scope">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2c3acf2d186bc00e7836e44ff85edcb61965ed26" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="36556004" /></Metadata><TypeSignature Language="C#" Value="public class Scope" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Scope extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Scope" />
  <TypeSignature Language="VB.NET" Value="Public Class Scope" />
  <TypeSignature Language="C++ CLI" Value="public ref class Scope" />
  <TypeSignature Language="F#" Value="type Scope = class" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="7e1ed-101">Representa la configuración de la solicitud de emisión de tokens.</span><span class="sxs-lookup"><span data-stu-id="7e1ed-101">Represents the configuration for the token issuance request.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e1ed-102">La <xref:System.IdentityModel.Scope> clase encapsula la información sobre el usuario de confianza (RP) asociado a una solicitud de token de seguridad (RST).</span><span class="sxs-lookup"><span data-stu-id="7e1ed-102">The <xref:System.IdentityModel.Scope> class encapsulates information about the relying party (RP) associated with a security token request (RST).</span></span> <span data-ttu-id="7e1ed-103">Esta información se usa por implementaciones de la <xref:System.IdentityModel.SecurityTokenService> (STS) de la clase en la canalización de emisión de tokens para devolver una respuesta (RSTR) a una solicitud de token de seguridad (RST).</span><span class="sxs-lookup"><span data-stu-id="7e1ed-103">This information is used by implementations of the <xref:System.IdentityModel.SecurityTokenService> class (STS) in the token issuance pipeline to return a response (RSTR) to a security token request (RST).</span></span>  
  
 <span data-ttu-id="7e1ed-104"><xref:System.IdentityModel.Scope> objetos contienen información sobre la dirección de RP, el cifrado y credenciales de firma para su uso con el token de seguridad emitido, y si el propio token o las claves simétricas emiten con se debe cifrar el token.</span><span class="sxs-lookup"><span data-stu-id="7e1ed-104"><xref:System.IdentityModel.Scope> objects contain information about the address of the RP, the encrypting and signing credentials to be used with the issued security token, and whether the token itself or symmetric keys issued with the token should be encrypted.</span></span> <span data-ttu-id="7e1ed-105">De forma predeterminada, se cifran las claves simétricas y token.</span><span class="sxs-lookup"><span data-stu-id="7e1ed-105">By default, both the token and symmetric keys are encrypted.</span></span> <span data-ttu-id="7e1ed-106">Puede ampliar el <xref:System.IdentityModel.Scope> predeterminado de clase para incluir información adicional acerca de la solicitud, como tipos de token aceptado por el RP, duración del token, duración máxima del token, los conjuntos de algoritmos utilizados por el RP, y así sucesivamente; sin embargo, la información se encapsula en Esta clase no debería variar para las solicitudes individuales.</span><span class="sxs-lookup"><span data-stu-id="7e1ed-106">You can extend the <xref:System.IdentityModel.Scope> class to carry additional information about the request, such as token types accepted by the RP, default token lifetime, maximum token lifetime, algorithm suites used by the RP, and so on; however, the information encapsulated in this class should not vary for individual requests.</span></span>  
  
 <span data-ttu-id="7e1ed-107">La canalización de emisión de tokens se implementa en el <xref:System.IdentityModel.SecurityTokenService.Issue%2A> invoca este método y el <xref:System.IdentityModel.SecurityTokenService.GetScope%2A> método para obtener la configuración para el RST.</span><span class="sxs-lookup"><span data-stu-id="7e1ed-107">The token issuance pipeline is implemented in the <xref:System.IdentityModel.SecurityTokenService.Issue%2A> method and this method invokes the <xref:System.IdentityModel.SecurityTokenService.GetScope%2A> method to get the configuration for the RST.</span></span> <span data-ttu-id="7e1ed-108">Debe implementar un <xref:System.IdentityModel.SecurityTokenService.GetScope%2A> método en el STS de personalizada y vuelva un <xref:System.IdentityModel.Scope> objeto adecuado para su implementación de STS y el RP.</span><span class="sxs-lookup"><span data-stu-id="7e1ed-108">You must implement a <xref:System.IdentityModel.SecurityTokenService.GetScope%2A> method in your custom STS and return a <xref:System.IdentityModel.Scope> object appropriate for the RP and your STS implementation.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7e1ed-109">Inicializa una nueva instancia de la clase <see cref="T:System.IdentityModel.Scope" />.</span><span class="sxs-lookup"><span data-stu-id="7e1ed-109">Initializes a new instance of the <see cref="T:System.IdentityModel.Scope" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Scope ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Scope.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Scope();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7e1ed-110">Inicializa una nueva instancia de la clase <see cref="T:System.IdentityModel.Scope" />.</span><span class="sxs-lookup"><span data-stu-id="7e1ed-110">Initializes a new instance of the <see cref="T:System.IdentityModel.Scope" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e1ed-111">En la tabla siguiente se muestra los valores de propiedad iniciales para el nuevo <xref:System.IdentityModel.Scope> instancia.</span><span class="sxs-lookup"><span data-stu-id="7e1ed-111">The following table shows the initial property values for the new <xref:System.IdentityModel.Scope> instance.</span></span>  
  
|<span data-ttu-id="7e1ed-112">Propiedad.</span><span class="sxs-lookup"><span data-stu-id="7e1ed-112">Property</span></span>|<span data-ttu-id="7e1ed-113">Valor.</span><span class="sxs-lookup"><span data-stu-id="7e1ed-113">Value.</span></span>|  
|--------------|------------|  
|<xref:System.IdentityModel.Scope.AppliesToAddress%2A>|<span data-ttu-id="7e1ed-114">`null` .</span><span class="sxs-lookup"><span data-stu-id="7e1ed-114">`null` .</span></span>|  
|<xref:System.IdentityModel.Scope.EncryptingCredentials%2A>|<span data-ttu-id="7e1ed-115">`null`.</span><span class="sxs-lookup"><span data-stu-id="7e1ed-115">`null`.</span></span>|  
|<xref:System.IdentityModel.Scope.Properties%2A>|<span data-ttu-id="7e1ed-116">Un diccionario vacío.</span><span class="sxs-lookup"><span data-stu-id="7e1ed-116">An empty dictionary.</span></span>|  
|<xref:System.IdentityModel.Scope.ReplyToAddress%2A>|<span data-ttu-id="7e1ed-117">`null`.</span><span class="sxs-lookup"><span data-stu-id="7e1ed-117">`null`.</span></span>|  
|<xref:System.IdentityModel.Scope.SigningCredentials%2A>|<span data-ttu-id="7e1ed-118">`null`.</span><span class="sxs-lookup"><span data-stu-id="7e1ed-118">`null`.</span></span>|  
|<xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A>|<span data-ttu-id="7e1ed-119">`true`.</span><span class="sxs-lookup"><span data-stu-id="7e1ed-119">`true`.</span></span>|  
|<xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A>|<span data-ttu-id="7e1ed-120">`true`.</span><span class="sxs-lookup"><span data-stu-id="7e1ed-120">`true`.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Scope (string appliesToAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string appliesToAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Scope.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (appliesToAddress As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Scope(System::String ^ appliesToAddress);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Scope : string -&gt; System.IdentityModel.Scope" Usage="new System.IdentityModel.Scope appliesToAddress" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="appliesToAddress" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="appliesToAddress"><span data-ttu-id="7e1ed-121">Dirección appliesTo del usuario de confianza.</span><span class="sxs-lookup"><span data-stu-id="7e1ed-121">The appliesTo address of the relying party.</span></span> <span data-ttu-id="7e1ed-122">Normalmente, e un URI.</span><span class="sxs-lookup"><span data-stu-id="7e1ed-122">This is typically a URI.</span></span></param>
        <summary><span data-ttu-id="7e1ed-123">Inicializa una nueva instancia de la clase <see cref="T:System.IdentityModel.Scope" /> con la dirección appliesTo especificada.</span><span class="sxs-lookup"><span data-stu-id="7e1ed-123">Initializes a new instance of the <see cref="T:System.IdentityModel.Scope" /> class with the specified appliesTo address.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e1ed-124">En la tabla siguiente se muestra los valores de propiedad iniciales para el nuevo <xref:System.IdentityModel.Scope> instancia.</span><span class="sxs-lookup"><span data-stu-id="7e1ed-124">The following table shows the initial property values for the new <xref:System.IdentityModel.Scope> instance.</span></span>  
  
|<span data-ttu-id="7e1ed-125">Propiedad.</span><span class="sxs-lookup"><span data-stu-id="7e1ed-125">Property</span></span>|<span data-ttu-id="7e1ed-126">Valor.</span><span class="sxs-lookup"><span data-stu-id="7e1ed-126">Value.</span></span>|  
|--------------|------------|  
|<xref:System.IdentityModel.Scope.AppliesToAddress%2A>|<span data-ttu-id="7e1ed-127">Valor del parámetro `appliesToAddress`.</span><span class="sxs-lookup"><span data-stu-id="7e1ed-127">The value of the `appliesToAddress` parameter.</span></span>|  
|<xref:System.IdentityModel.Scope.EncryptingCredentials%2A>|<span data-ttu-id="7e1ed-128">`null`.</span><span class="sxs-lookup"><span data-stu-id="7e1ed-128">`null`.</span></span>|  
|<xref:System.IdentityModel.Scope.Properties%2A>|<span data-ttu-id="7e1ed-129">Un diccionario vacío.</span><span class="sxs-lookup"><span data-stu-id="7e1ed-129">An empty dictionary.</span></span>|  
|<xref:System.IdentityModel.Scope.ReplyToAddress%2A>|<span data-ttu-id="7e1ed-130">`null`.</span><span class="sxs-lookup"><span data-stu-id="7e1ed-130">`null`.</span></span>|  
|<xref:System.IdentityModel.Scope.SigningCredentials%2A>|<span data-ttu-id="7e1ed-131">`null`.</span><span class="sxs-lookup"><span data-stu-id="7e1ed-131">`null`.</span></span>|  
|<xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A>|<span data-ttu-id="7e1ed-132">`true`.</span><span class="sxs-lookup"><span data-stu-id="7e1ed-132">`true`.</span></span>|  
|<xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A>|<span data-ttu-id="7e1ed-133">`true`.</span><span class="sxs-lookup"><span data-stu-id="7e1ed-133">`true`.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Scope (string appliesToAddress, System.IdentityModel.Tokens.EncryptingCredentials encryptingCredentials);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string appliesToAddress, class System.IdentityModel.Tokens.EncryptingCredentials encryptingCredentials) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Scope.#ctor(System.String,System.IdentityModel.Tokens.EncryptingCredentials)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Scope(System::String ^ appliesToAddress, System::IdentityModel::Tokens::EncryptingCredentials ^ encryptingCredentials);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Scope : string * System.IdentityModel.Tokens.EncryptingCredentials -&gt; System.IdentityModel.Scope" Usage="new System.IdentityModel.Scope (appliesToAddress, encryptingCredentials)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="appliesToAddress" Type="System.String" />
        <Parameter Name="encryptingCredentials" Type="System.IdentityModel.Tokens.EncryptingCredentials" />
      </Parameters>
      <Docs>
        <param name="appliesToAddress"><span data-ttu-id="7e1ed-134">Dirección appliesTo del usuario de confianza.</span><span class="sxs-lookup"><span data-stu-id="7e1ed-134">The appliesTo address of the relying party.</span></span> <span data-ttu-id="7e1ed-135">Normalmente, e un URI.</span><span class="sxs-lookup"><span data-stu-id="7e1ed-135">This is typically a URI.</span></span></param>
        <param name="encryptingCredentials"><span data-ttu-id="7e1ed-136">Credenciales de cifrado para el usuario de confianza.</span><span class="sxs-lookup"><span data-stu-id="7e1ed-136">The encrypting credentials for the relying party.</span></span></param>
        <summary><span data-ttu-id="7e1ed-137">Inicializa una nueva instancia de la clase <see cref="T:System.IdentityModel.Scope" /> con dirección appliesTo y credenciales de cifrado especificadas.</span><span class="sxs-lookup"><span data-stu-id="7e1ed-137">Initializes a new instance of the <see cref="T:System.IdentityModel.Scope" /> class with the specified appliesTo address and encrypting credentials.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e1ed-138">En la tabla siguiente se muestra los valores de propiedad iniciales para el nuevo <xref:System.IdentityModel.Scope> instancia.</span><span class="sxs-lookup"><span data-stu-id="7e1ed-138">The following table shows the initial property values for the new <xref:System.IdentityModel.Scope> instance.</span></span>  
  
|<span data-ttu-id="7e1ed-139">Propiedad.</span><span class="sxs-lookup"><span data-stu-id="7e1ed-139">Property</span></span>|<span data-ttu-id="7e1ed-140">Valor.</span><span class="sxs-lookup"><span data-stu-id="7e1ed-140">Value.</span></span>|  
|--------------|------------|  
|<xref:System.IdentityModel.Scope.AppliesToAddress%2A>|<span data-ttu-id="7e1ed-141">Valor del parámetro `appliesToAddress`.</span><span class="sxs-lookup"><span data-stu-id="7e1ed-141">The value of the `appliesToAddress` parameter.</span></span>|  
|<xref:System.IdentityModel.Scope.EncryptingCredentials%2A>|<span data-ttu-id="7e1ed-142">`null`.</span><span class="sxs-lookup"><span data-stu-id="7e1ed-142">`null`.</span></span>|  
|<xref:System.IdentityModel.Scope.Properties%2A>|<span data-ttu-id="7e1ed-143">Un diccionario vacío.</span><span class="sxs-lookup"><span data-stu-id="7e1ed-143">An empty dictionary.</span></span>|  
|<xref:System.IdentityModel.Scope.ReplyToAddress%2A>|<span data-ttu-id="7e1ed-144">`null`.</span><span class="sxs-lookup"><span data-stu-id="7e1ed-144">`null`.</span></span>|  
|<xref:System.IdentityModel.Scope.SigningCredentials%2A>|<span data-ttu-id="7e1ed-145">Valor del parámetro `signingCredentials`.</span><span class="sxs-lookup"><span data-stu-id="7e1ed-145">The value of the `signingCredentials` parameter.</span></span>|  
|<xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A>|<span data-ttu-id="7e1ed-146">`true`.</span><span class="sxs-lookup"><span data-stu-id="7e1ed-146">`true`.</span></span>|  
|<xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A>|<span data-ttu-id="7e1ed-147">`true`.</span><span class="sxs-lookup"><span data-stu-id="7e1ed-147">`true`.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Scope (string appliesToAddress, System.IdentityModel.Tokens.SigningCredentials signingCredentials);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string appliesToAddress, class System.IdentityModel.Tokens.SigningCredentials signingCredentials) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Scope.#ctor(System.String,System.IdentityModel.Tokens.SigningCredentials)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Scope(System::String ^ appliesToAddress, System::IdentityModel::Tokens::SigningCredentials ^ signingCredentials);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Scope : string * System.IdentityModel.Tokens.SigningCredentials -&gt; System.IdentityModel.Scope" Usage="new System.IdentityModel.Scope (appliesToAddress, signingCredentials)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="appliesToAddress" Type="System.String" />
        <Parameter Name="signingCredentials" Type="System.IdentityModel.Tokens.SigningCredentials" />
      </Parameters>
      <Docs>
        <param name="appliesToAddress"><span data-ttu-id="7e1ed-148">Dirección appliesTo del usuario de confianza.</span><span class="sxs-lookup"><span data-stu-id="7e1ed-148">The appliesTo address of the relying party.</span></span> <span data-ttu-id="7e1ed-149">Normalmente, e un URI.</span><span class="sxs-lookup"><span data-stu-id="7e1ed-149">This is typically a URI.</span></span></param>
        <param name="signingCredentials"><span data-ttu-id="7e1ed-150">Credenciales de inicio de sesión para el usuario de confianza.</span><span class="sxs-lookup"><span data-stu-id="7e1ed-150">The signing credentials for the relying party.</span></span></param>
        <summary><span data-ttu-id="7e1ed-151">Inicializa una nueva instancia de la clase <see cref="T:System.IdentityModel.Scope" /> con dirección appliesTo y credenciales de firma especificadas.</span><span class="sxs-lookup"><span data-stu-id="7e1ed-151">Initializes a new instance of the <see cref="T:System.IdentityModel.Scope" /> class with the specified appliesTo address and signing credentials.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e1ed-152">En la tabla siguiente se muestra los valores de propiedad iniciales para el nuevo <xref:System.IdentityModel.Scope> instancia.</span><span class="sxs-lookup"><span data-stu-id="7e1ed-152">The following table shows the initial property values for the new <xref:System.IdentityModel.Scope> instance.</span></span>  
  
|<span data-ttu-id="7e1ed-153">Propiedad.</span><span class="sxs-lookup"><span data-stu-id="7e1ed-153">Property</span></span>|<span data-ttu-id="7e1ed-154">Valor.</span><span class="sxs-lookup"><span data-stu-id="7e1ed-154">Value.</span></span>|  
|--------------|------------|  
|<xref:System.IdentityModel.Scope.AppliesToAddress%2A>|<span data-ttu-id="7e1ed-155">Valor del parámetro `appliesToAddress`.</span><span class="sxs-lookup"><span data-stu-id="7e1ed-155">The value of the `appliesToAddress` parameter.</span></span>|  
|<xref:System.IdentityModel.Scope.EncryptingCredentials%2A>|<span data-ttu-id="7e1ed-156">`null`.</span><span class="sxs-lookup"><span data-stu-id="7e1ed-156">`null`.</span></span>|  
|<xref:System.IdentityModel.Scope.Properties%2A>|<span data-ttu-id="7e1ed-157">Un diccionario vacío.</span><span class="sxs-lookup"><span data-stu-id="7e1ed-157">An empty dictionary.</span></span>|  
|<xref:System.IdentityModel.Scope.ReplyToAddress%2A>|<span data-ttu-id="7e1ed-158">`null`.</span><span class="sxs-lookup"><span data-stu-id="7e1ed-158">`null`.</span></span>|  
|<xref:System.IdentityModel.Scope.SigningCredentials%2A>|<span data-ttu-id="7e1ed-159">Valor del parámetro `signingCredentials`.</span><span class="sxs-lookup"><span data-stu-id="7e1ed-159">The value of the `signingCredentials` parameter.</span></span>|  
|<xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A>|<span data-ttu-id="7e1ed-160">`true`.</span><span class="sxs-lookup"><span data-stu-id="7e1ed-160">`true`.</span></span>|  
|<xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A>|<span data-ttu-id="7e1ed-161">`true`.</span><span class="sxs-lookup"><span data-stu-id="7e1ed-161">`true`.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Scope (string appliesToAddress, System.IdentityModel.Tokens.SigningCredentials signingCredentials, System.IdentityModel.Tokens.EncryptingCredentials encryptingCredentials);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string appliesToAddress, class System.IdentityModel.Tokens.SigningCredentials signingCredentials, class System.IdentityModel.Tokens.EncryptingCredentials encryptingCredentials) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Scope.#ctor(System.String,System.IdentityModel.Tokens.SigningCredentials,System.IdentityModel.Tokens.EncryptingCredentials)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Scope(System::String ^ appliesToAddress, System::IdentityModel::Tokens::SigningCredentials ^ signingCredentials, System::IdentityModel::Tokens::EncryptingCredentials ^ encryptingCredentials);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Scope : string * System.IdentityModel.Tokens.SigningCredentials * System.IdentityModel.Tokens.EncryptingCredentials -&gt; System.IdentityModel.Scope" Usage="new System.IdentityModel.Scope (appliesToAddress, signingCredentials, encryptingCredentials)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="appliesToAddress" Type="System.String" />
        <Parameter Name="signingCredentials" Type="System.IdentityModel.Tokens.SigningCredentials" />
        <Parameter Name="encryptingCredentials" Type="System.IdentityModel.Tokens.EncryptingCredentials" />
      </Parameters>
      <Docs>
        <param name="appliesToAddress"><span data-ttu-id="7e1ed-162">Dirección appliesTo del usuario de confianza.</span><span class="sxs-lookup"><span data-stu-id="7e1ed-162">The appliesTo address of the relying party.</span></span> <span data-ttu-id="7e1ed-163">Normalmente, e un URI.</span><span class="sxs-lookup"><span data-stu-id="7e1ed-163">This is typically a URI.</span></span></param>
        <param name="signingCredentials"><span data-ttu-id="7e1ed-164">Credenciales de inicio de sesión para el usuario de confianza.</span><span class="sxs-lookup"><span data-stu-id="7e1ed-164">The signing credentials for the relying party.</span></span></param>
        <param name="encryptingCredentials"><span data-ttu-id="7e1ed-165">Credenciales de cifrado para el usuario de confianza.</span><span class="sxs-lookup"><span data-stu-id="7e1ed-165">The encrypting credentials for the relying party.</span></span></param>
        <summary><span data-ttu-id="7e1ed-166">Inicializa una nueva instancia de la clase <see cref="T:System.IdentityModel.Scope" /> con dirección appliesTo, credenciales de inicio de sesión y credenciales de cifrado especificadas.</span><span class="sxs-lookup"><span data-stu-id="7e1ed-166">Initializes a new instance of the <see cref="T:System.IdentityModel.Scope" /> class with the specified appliesTo address, signing credentials, and encrypting credentials.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e1ed-167">En la tabla siguiente se muestra los valores de propiedad iniciales para el nuevo <xref:System.IdentityModel.Scope> instancia.</span><span class="sxs-lookup"><span data-stu-id="7e1ed-167">The following table shows the initial property values for the new <xref:System.IdentityModel.Scope> instance.</span></span>  
  
|<span data-ttu-id="7e1ed-168">Propiedad.</span><span class="sxs-lookup"><span data-stu-id="7e1ed-168">Property</span></span>|<span data-ttu-id="7e1ed-169">Valor</span><span class="sxs-lookup"><span data-stu-id="7e1ed-169">Value</span></span>|  
|--------------|-----------|  
|<xref:System.IdentityModel.Scope.AppliesToAddress%2A>|<span data-ttu-id="7e1ed-170">Valor del parámetro `appliesToAddress`.</span><span class="sxs-lookup"><span data-stu-id="7e1ed-170">The value of the `appliesToAddress` parameter.</span></span>|  
|<xref:System.IdentityModel.Scope.EncryptingCredentials%2A>|<span data-ttu-id="7e1ed-171">Valor del parámetro `encryptingCredentials`.</span><span class="sxs-lookup"><span data-stu-id="7e1ed-171">The value of the `encryptingCredentials` parameter.</span></span>|  
|<xref:System.IdentityModel.Scope.Properties%2A>|<span data-ttu-id="7e1ed-172">Un diccionario vacío.</span><span class="sxs-lookup"><span data-stu-id="7e1ed-172">An empty dictionary.</span></span>|  
|<xref:System.IdentityModel.Scope.ReplyToAddress%2A>|<span data-ttu-id="7e1ed-173">`null`.</span><span class="sxs-lookup"><span data-stu-id="7e1ed-173">`null`.</span></span>|  
|<xref:System.IdentityModel.Scope.SigningCredentials%2A>|<span data-ttu-id="7e1ed-174">Valor del parámetro `signingCredentials`.</span><span class="sxs-lookup"><span data-stu-id="7e1ed-174">The value of the `signingCredentials` parameter.</span></span>|  
|<xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A>|<span data-ttu-id="7e1ed-175">`true`.</span><span class="sxs-lookup"><span data-stu-id="7e1ed-175">`true`.</span></span>|  
|<xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A>|<span data-ttu-id="7e1ed-176">`true`.</span><span class="sxs-lookup"><span data-stu-id="7e1ed-176">`true`.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppliesToAddress">
      <MemberSignature Language="C#" Value="public virtual string AppliesToAddress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AppliesToAddress" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Scope.AppliesToAddress" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AppliesToAddress As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ AppliesToAddress { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AppliesToAddress : string with get, set" Usage="System.IdentityModel.Scope.AppliesToAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7e1ed-177">Obtiene o establece la dirección appliesTo del usuario de confianza.</span><span class="sxs-lookup"><span data-stu-id="7e1ed-177">Gets or sets the appliesTo address of the relying party.</span></span></summary>
        <value><span data-ttu-id="7e1ed-178">Dirección appliesTo del usuario de confianza.</span><span class="sxs-lookup"><span data-stu-id="7e1ed-178">The appliesTo address of the relying party.</span></span> <span data-ttu-id="7e1ed-179">Normalmente, e un URI.</span><span class="sxs-lookup"><span data-stu-id="7e1ed-179">This is typically a URI.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EncryptingCredentials">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.EncryptingCredentials EncryptingCredentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.EncryptingCredentials EncryptingCredentials" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Scope.EncryptingCredentials" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EncryptingCredentials As EncryptingCredentials" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::IdentityModel::Tokens::EncryptingCredentials ^ EncryptingCredentials { System::IdentityModel::Tokens::EncryptingCredentials ^ get(); void set(System::IdentityModel::Tokens::EncryptingCredentials ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EncryptingCredentials : System.IdentityModel.Tokens.EncryptingCredentials with get, set" Usage="System.IdentityModel.Scope.EncryptingCredentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.EncryptingCredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7e1ed-180">Obtiene o establece las credenciales de cifrado para el usuario de confianza.</span><span class="sxs-lookup"><span data-stu-id="7e1ed-180">Gets or sets the encrypting credentials for the relying party.</span></span></summary>
        <value><span data-ttu-id="7e1ed-181">Credenciales de cifrado que se usarán para el usuario de confianza.</span><span class="sxs-lookup"><span data-stu-id="7e1ed-181">The encrypting credentials to be used for the relying party.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e1ed-182">Si el <xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A> propiedad es `true`, las credenciales se usan para cifrar los tokens de seguridad emitido.</span><span class="sxs-lookup"><span data-stu-id="7e1ed-182">If the <xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A> property is `true`, the credentials are used to encrypt issued security tokens.</span></span> <span data-ttu-id="7e1ed-183">Si el <xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A> propiedad es `true`, las credenciales se usan para cifrar las claves simétricas emitidas con tokens de seguridad.</span><span class="sxs-lookup"><span data-stu-id="7e1ed-183">If the <xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A> property is `true`, the credentials are used to encrypt symmetric keys issued with security tokens.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.Dictionary&lt;string,object&gt; Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.Dictionary`2&lt;string, object&gt; Properties" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Scope.Properties" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Properties As Dictionary(Of String, Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::Dictionary&lt;System::String ^, System::Object ^&gt; ^ Properties { System::Collections::Generic::Dictionary&lt;System::String ^, System::Object ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Collections.Generic.Dictionary&lt;string, obj&gt;" Usage="System.IdentityModel.Scope.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;System.String,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7e1ed-184">Obtiene el contenedor Propiedades para extender el objeto.</span><span class="sxs-lookup"><span data-stu-id="7e1ed-184">Gets the properties bag to extend the object.</span></span></summary>
        <value><span data-ttu-id="7e1ed-185">Contenedor de propiedades.</span><span class="sxs-lookup"><span data-stu-id="7e1ed-185">The properties bag.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplyToAddress">
      <MemberSignature Language="C#" Value="public virtual string ReplyToAddress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ReplyToAddress" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Scope.ReplyToAddress" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ReplyToAddress As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ReplyToAddress { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ReplyToAddress : string with get, set" Usage="System.IdentityModel.Scope.ReplyToAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7e1ed-186">Obtiene o establece la dirección replyTo del usuario de confianza.</span><span class="sxs-lookup"><span data-stu-id="7e1ed-186">Gets or sets the replyTo address of the relying party.</span></span></summary>
        <value><span data-ttu-id="7e1ed-187">La dirección replyTo del usuario de confianza.</span><span class="sxs-lookup"><span data-stu-id="7e1ed-187">The replyTo address of the relying party.</span></span> <span data-ttu-id="7e1ed-188">Normalmente, e un URI.</span><span class="sxs-lookup"><span data-stu-id="7e1ed-188">This is typically a URI.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SigningCredentials">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SigningCredentials SigningCredentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.SigningCredentials SigningCredentials" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Scope.SigningCredentials" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SigningCredentials As SigningCredentials" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::IdentityModel::Tokens::SigningCredentials ^ SigningCredentials { System::IdentityModel::Tokens::SigningCredentials ^ get(); void set(System::IdentityModel::Tokens::SigningCredentials ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SigningCredentials : System.IdentityModel.Tokens.SigningCredentials with get, set" Usage="System.IdentityModel.Scope.SigningCredentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SigningCredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7e1ed-189">Obtiene o establece las credenciales de firma para el usuario de confianza.</span><span class="sxs-lookup"><span data-stu-id="7e1ed-189">Gets or sets the signing credentials for the relying party.</span></span></summary>
        <value><span data-ttu-id="7e1ed-190">Credenciales de firma que se usarán para el usuario de confianza.</span><span class="sxs-lookup"><span data-stu-id="7e1ed-190">The signing credentials to be used for the relying party.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SymmetricKeyEncryptionRequired">
      <MemberSignature Language="C#" Value="public virtual bool SymmetricKeyEncryptionRequired { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SymmetricKeyEncryptionRequired" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SymmetricKeyEncryptionRequired As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SymmetricKeyEncryptionRequired { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SymmetricKeyEncryptionRequired : bool with get, set" Usage="System.IdentityModel.Scope.SymmetricKeyEncryptionRequired" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7e1ed-191">Obtiene o establece un valor que indica si las claves simétricas emitidas deben cifrarse.</span><span class="sxs-lookup"><span data-stu-id="7e1ed-191">Gets or sets a value that indicates whether issued symmetric keys must be encrypted.</span></span></summary>
        <value><span data-ttu-id="7e1ed-192"><see langword="true" /> si las claves simétricas deben estar cifradas; si no, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7e1ed-192"><see langword="true" /> if symmetric keys must be encrypted; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="7e1ed-193">El valor predeterminado es <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="7e1ed-193">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e1ed-194">Si el <xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A> propiedad es `true`, claves simétricas se cifran mediante las credenciales en el <xref:System.IdentityModel.Scope.EncryptingCredentials%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="7e1ed-194">If the <xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A> property is `true`, symmetric keys are encrypted using the credentials in the <xref:System.IdentityModel.Scope.EncryptingCredentials%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TokenEncryptionRequired">
      <MemberSignature Language="C#" Value="public virtual bool TokenEncryptionRequired { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TokenEncryptionRequired" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Scope.TokenEncryptionRequired" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property TokenEncryptionRequired As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool TokenEncryptionRequired { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.TokenEncryptionRequired : bool with get, set" Usage="System.IdentityModel.Scope.TokenEncryptionRequired" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7e1ed-195">Obtiene o establece un valor que indica si los tokens de seguridad emitidos deben cifrarse.</span><span class="sxs-lookup"><span data-stu-id="7e1ed-195">Gets or sets a value that indicates whether issued security tokens must be encrypted.</span></span></summary>
        <value><span data-ttu-id="7e1ed-196"><see langword="true" /> si los tokens de seguridad deben cifrarse; si no, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7e1ed-196"><see langword="true" /> if security tokens must be encrypted; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="7e1ed-197">El valor predeterminado es <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="7e1ed-197">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e1ed-198">Si el <xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A> propiedad es `true`, tokens de seguridad se cifran mediante las credenciales en el <xref:System.IdentityModel.Scope.EncryptingCredentials%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="7e1ed-198">If the <xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A> property is `true`, security tokens are encrypted using the credentials in the <xref:System.IdentityModel.Scope.EncryptingCredentials%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
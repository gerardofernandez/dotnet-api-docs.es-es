<Type Name="WebUtility" FullName="System.Net.WebUtility">
  <Metadata><Meta Name="ms.openlocfilehash" Value="897921efe400b6b55c24d5ca77b0f8414c09c181" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51912789" /></Metadata><TypeSignature Language="C#" Value="public static class WebUtility" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit WebUtility extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.WebUtility" />
  <TypeSignature Language="VB.NET" Value="Public Class WebUtility" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebUtility abstract sealed" />
  <TypeSignature Language="F#" Value="type WebUtility = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="ecf18-101">Proporciona métodos para codificar y descodificar direcciones URL al procesar las solicitudes web.</span><span class="sxs-lookup"><span data-stu-id="ecf18-101">Provides methods for encoding and decoding URLs when processing Web requests.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ecf18-102">La <xref:System.Web.HttpUtility> clase contiene la codificación y descodificación de métodos de utilidad para su uso con las cadenas de codificar en HTML.</span><span class="sxs-lookup"><span data-stu-id="ecf18-102">The <xref:System.Web.HttpUtility> class contains encoding and decoding utility methods for use with HTML-encode strings.</span></span> <span data-ttu-id="ecf18-103">La <xref:System.Uri?displayProperty=nameWithType> clase también contiene métodos y propiedades que pueden utilizarse para propósitos similares.</span><span class="sxs-lookup"><span data-stu-id="ecf18-103">The <xref:System.Uri?displayProperty=nameWithType> class also contains methods and properties that can be used for similar purposes.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Uri" />
    <altmember cref="T:System.Web.HttpUtility" />
    <altmember cref="T:System.Web.HttpServerUtility" />
    <altmember cref="P:System.Web.HttpContext.Server" />
    <related type="Article" href="https://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b"><span data-ttu-id="ecf18-104">Cómo: proteger frente a ataques mediante scripts en una aplicación Web aplicando codificación HTML a cadenas</span><span class="sxs-lookup"><span data-stu-id="ecf18-104">How to: Protect Against Script Exploits in a Web Application by Applying HTML Encoding to Strings</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName="HtmlDecode">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ecf18-105">Convierte una cadena que se ha codificado en HTML para su transmisión HTTP en una cadena descodificada.</span><span class="sxs-lookup"><span data-stu-id="ecf18-105">Converts a string that has been HTML-encoded for HTTP transmission into a decoded string.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HtmlDecode">
      <MemberSignature Language="C#" Value="public static string HtmlDecode (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string HtmlDecode(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.HtmlDecode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HtmlDecode (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ HtmlDecode(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member HtmlDecode : string -&gt; string" Usage="System.Net.WebUtility.HtmlDecode value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ecf18-106">Cadena que se va a descodificar.</span><span class="sxs-lookup"><span data-stu-id="ecf18-106">The string to decode.</span></span></param>
        <summary><span data-ttu-id="ecf18-107">Convierte una cadena que se ha codificado en HTML para su transmisión HTTP en una cadena descodificada.</span><span class="sxs-lookup"><span data-stu-id="ecf18-107">Converts a string that has been HTML-encoded for HTTP transmission into a decoded string.</span></span></summary>
        <returns><span data-ttu-id="ecf18-108">Cadena descodificada.</span><span class="sxs-lookup"><span data-stu-id="ecf18-108">A decoded string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ecf18-109">Si se pasan caracteres como espacios en blanco y puntuación en un flujo HTTP, se pueden malinterpretar en el extremo receptor.</span><span class="sxs-lookup"><span data-stu-id="ecf18-109">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="ecf18-110">Codificación HTML convierte los caracteres que no están permitidos en HTML en entidades de caracteres equivalentes; Descodificación HTML invierte la codificación.</span><span class="sxs-lookup"><span data-stu-id="ecf18-110">HTML encoding converts characters that are not allowed in HTML into character-entity equivalents; HTML decoding reverses the encoding.</span></span> <span data-ttu-id="ecf18-111">Por ejemplo, cuando se insertan en un bloque de texto, los caracteres `<` y `>` se codifican como `&lt;` y `&gt;` para la transmisión HTTP.</span><span class="sxs-lookup"><span data-stu-id="ecf18-111">For example, when embedded in a block of text, the characters `<` and `>` are encoded as `&lt;` and `&gt;` for HTTP transmission.</span></span>  
  
 <span data-ttu-id="ecf18-112">Si el `value` parámetro es `null`, entonces la cadena descodificada devuelta es `null`.</span><span class="sxs-lookup"><span data-stu-id="ecf18-112">If the `value` parameter is `null`, then the returned decoded string is `null`.</span></span> <span data-ttu-id="ecf18-113">Si el `value` parámetro es una cadena vacía, entonces la cadena descodificada devuelta es una cadena vacía.</span><span class="sxs-lookup"><span data-stu-id="ecf18-113">If the `value` parameter is an empty string, then the returned decoded string is an empty string.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.WebUtility.HtmlEncode(System.String)" />
        <altmember cref="M:System.Web.HttpUtility.HtmlEncode(System.String)" />
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
    <Member MemberName="HtmlDecode">
      <MemberSignature Language="C#" Value="public static void HtmlDecode (string value, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void HtmlDecode(string value, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.HtmlDecode(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub HtmlDecode (value As String, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void HtmlDecode(System::String ^ value, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="static member HtmlDecode : string * System.IO.TextWriter -&gt; unit" Usage="System.Net.WebUtility.HtmlDecode (value, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ecf18-114">Cadena que se va a descodificar.</span><span class="sxs-lookup"><span data-stu-id="ecf18-114">The string to decode.</span></span></param>
        <param name="output"><span data-ttu-id="ecf18-115">Secuencia de salida de <see cref="T:System.IO.TextWriter" />.</span><span class="sxs-lookup"><span data-stu-id="ecf18-115">A <see cref="T:System.IO.TextWriter" /> stream of output.</span></span></param>
        <summary><span data-ttu-id="ecf18-116">Convierte una cadena que se ha codificado en HTML en una cadena descodificada y envía la cadena descodificada a una secuencia de salida de <see cref="T:System.IO.TextWriter" />.</span><span class="sxs-lookup"><span data-stu-id="ecf18-116">Converts a string that has been HTML-encoded into a decoded string, and sends the decoded string to a <see cref="T:System.IO.TextWriter" /> output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ecf18-117">Si se pasan caracteres como espacios en blanco y puntuación en un flujo HTTP, se pueden malinterpretar en el extremo receptor.</span><span class="sxs-lookup"><span data-stu-id="ecf18-117">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="ecf18-118">Codificación HTML convierte los caracteres que no están permitidos en HTML en entidades de caracteres equivalentes; Descodificación HTML invierte la codificación.</span><span class="sxs-lookup"><span data-stu-id="ecf18-118">HTML encoding converts characters that are not allowed in HTML into character-entity equivalents; HTML decoding reverses the encoding.</span></span> <span data-ttu-id="ecf18-119">Por ejemplo, cuando se insertan en un bloque de texto, los caracteres `<` y `>` se codifican como `&lt;` y `&gt;` para la transmisión HTTP.</span><span class="sxs-lookup"><span data-stu-id="ecf18-119">For example, when embedded in a block of text, the characters `<` and `>` are encoded as `&lt;` and `&gt;` for HTTP transmission.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ecf18-120">El parámetro <paramref name="output" /> no puede ser <see langword="null" /> si el parámetro <paramref name="value" /> no es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ecf18-120">The <paramref name="output" /> parameter cannot be <see langword="null" /> if the <paramref name="value" /> parameter is not <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Net.WebUtility.HtmlEncode(System.String,System.IO.TextWriter)" />
        <altmember cref="M:System.Web.HttpUtility.HtmlEncode(System.String,System.IO.TextWriter)" />
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
    <MemberGroup MemberName="HtmlEncode">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ecf18-121">Convierte una cadena en una cadena codificada en HTML.</span><span class="sxs-lookup"><span data-stu-id="ecf18-121">Converts a string to an HTML-encoded string.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HtmlEncode">
      <MemberSignature Language="C#" Value="public static string HtmlEncode (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string HtmlEncode(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.HtmlEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HtmlEncode (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ HtmlEncode(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member HtmlEncode : string -&gt; string" Usage="System.Net.WebUtility.HtmlEncode value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ecf18-122">Cadena que se va a codificar.</span><span class="sxs-lookup"><span data-stu-id="ecf18-122">The string to encode.</span></span></param>
        <summary><span data-ttu-id="ecf18-123">Convierte una cadena en una cadena codificada en HTML.</span><span class="sxs-lookup"><span data-stu-id="ecf18-123">Converts a string to an HTML-encoded string.</span></span></summary>
        <returns><span data-ttu-id="ecf18-124">Cadena codificada.</span><span class="sxs-lookup"><span data-stu-id="ecf18-124">An encoded string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ecf18-125">Si se pasan caracteres como espacios en blanco y puntuación en un flujo HTTP, se pueden malinterpretar en el extremo receptor.</span><span class="sxs-lookup"><span data-stu-id="ecf18-125">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="ecf18-126">Codificación HTML convierte los caracteres que no están permitidos en HTML en entidades de caracteres equivalentes; Descodificación HTML invierte la codificación.</span><span class="sxs-lookup"><span data-stu-id="ecf18-126">HTML encoding converts characters that are not allowed in HTML into character-entity equivalents; HTML decoding reverses the encoding.</span></span> <span data-ttu-id="ecf18-127">Por ejemplo, cuando se insertan en un bloque de texto, los caracteres `<` y `>` se codifican como `&lt;` y `&gt;` para la transmisión HTTP.</span><span class="sxs-lookup"><span data-stu-id="ecf18-127">For example, when embedded in a block of text, the characters `<` and `>` are encoded as `&lt;` and `&gt;` for HTTP transmission.</span></span>  
  
 <span data-ttu-id="ecf18-128">Si el `value` parámetro es `null`, entonces la cadena codificada devuelta es `null`.</span><span class="sxs-lookup"><span data-stu-id="ecf18-128">If the `value` parameter is `null`, then the returned encoded string is `null`.</span></span> <span data-ttu-id="ecf18-129">Si el `value` parámetro es una cadena vacía, la cadena codificada devuelta es una cadena vacía.</span><span class="sxs-lookup"><span data-stu-id="ecf18-129">If the `value` parameter is an empty string, then the returned encoded string is an empty string.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.WebUtility.HtmlDecode(System.String)" />
        <altmember cref="M:System.Web.HttpUtility.HtmlDecode(System.String)" />
        <altmember cref="T:System.Uri" />
        <related type="Article" href="https://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b"><span data-ttu-id="ecf18-130">Cómo: proteger frente a ataques mediante scripts en una aplicación Web aplicando codificación HTML a cadenas</span><span class="sxs-lookup"><span data-stu-id="ecf18-130">How to: Protect Against Script Exploits in a Web Application by Applying HTML Encoding to Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="HtmlEncode">
      <MemberSignature Language="C#" Value="public static void HtmlEncode (string value, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void HtmlEncode(string value, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.HtmlEncode(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub HtmlEncode (value As String, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void HtmlEncode(System::String ^ value, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="static member HtmlEncode : string * System.IO.TextWriter -&gt; unit" Usage="System.Net.WebUtility.HtmlEncode (value, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ecf18-131">Cadena que se va a codificar.</span><span class="sxs-lookup"><span data-stu-id="ecf18-131">The string to encode.</span></span></param>
        <param name="output"><span data-ttu-id="ecf18-132">Secuencia de salida <see cref="T:System.IO.TextWriter" /></span><span class="sxs-lookup"><span data-stu-id="ecf18-132">A <see cref="T:System.IO.TextWriter" /> output stream.</span></span></param>
        <summary><span data-ttu-id="ecf18-133">Convierte una cadena en una cadena con codificación HTML y devuelve el resultado como una secuencia <see cref="T:System.IO.TextWriter" /> de salida.</span><span class="sxs-lookup"><span data-stu-id="ecf18-133">Converts a string into an HTML-encoded string, and returns the output as a <see cref="T:System.IO.TextWriter" /> stream of output.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ecf18-134">Si se pasan caracteres como espacios en blanco y puntuación en un flujo HTTP, se pueden malinterpretar en el extremo receptor.</span><span class="sxs-lookup"><span data-stu-id="ecf18-134">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="ecf18-135">Codificación HTML convierte los caracteres que no están permitidos en HTML en entidades de caracteres equivalentes; Descodificación HTML invierte la codificación.</span><span class="sxs-lookup"><span data-stu-id="ecf18-135">HTML encoding converts characters that are not allowed in HTML into character-entity equivalents; HTML decoding reverses the encoding.</span></span> <span data-ttu-id="ecf18-136">Por ejemplo, cuando se insertan en un bloque de texto, los caracteres `<` y `>` se codifican como `&lt;` y `&gt;` para la transmisión HTTP.</span><span class="sxs-lookup"><span data-stu-id="ecf18-136">For example, when embedded in a block of text, the characters `<` and `>` are encoded as `&lt;` and `&gt;` for HTTP transmission.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ecf18-137">El parámetro <paramref name="output" /> no puede ser <see langword="null" /> si el parámetro <paramref name="value" /> no es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ecf18-137">The <paramref name="output" /> parameter cannot be <see langword="null" /> if the <paramref name="value" /> parameter is not <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Net.WebUtility.HtmlDecode(System.String,System.IO.TextWriter)" />
        <altmember cref="M:System.Web.HttpUtility.HtmlDecode(System.String,System.IO.TextWriter)" />
        <altmember cref="T:System.Uri" />
        <related type="Article" href="https://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b"><span data-ttu-id="ecf18-138">Cómo: proteger frente a ataques mediante scripts en una aplicación Web aplicando codificación HTML a cadenas</span><span class="sxs-lookup"><span data-stu-id="ecf18-138">How to: Protect Against Script Exploits in a Web Application by Applying HTML Encoding to Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="UrlDecode">
      <MemberSignature Language="C#" Value="public static string UrlDecode (string encodedValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UrlDecode(string encodedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.UrlDecode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlDecode (encodedValue As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UrlDecode(System::String ^ encodedValue);" />
      <MemberSignature Language="F#" Value="static member UrlDecode : string -&gt; string" Usage="System.Net.WebUtility.UrlDecode encodedValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encodedValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="encodedValue"><span data-ttu-id="ecf18-139">Cadena codificada como dirección URL que se va a descodificar.</span><span class="sxs-lookup"><span data-stu-id="ecf18-139">A URL-encoded string to decode.</span></span></param>
        <summary><span data-ttu-id="ecf18-140">Convierte una cadena que se ha codificado para su transmisión en una dirección URL en una cadena descodificada.</span><span class="sxs-lookup"><span data-stu-id="ecf18-140">Converts a string that has been encoded for transmission in a URL into a decoded string.</span></span></summary>
        <returns><span data-ttu-id="ecf18-141">Cadena descodificada.</span><span class="sxs-lookup"><span data-stu-id="ecf18-141">A decoded string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ecf18-142">Si se pasan caracteres como espacios en blanco y puntuación en un flujo HTTP, se pueden malinterpretar en el extremo receptor.</span><span class="sxs-lookup"><span data-stu-id="ecf18-142">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="ecf18-143">Codificación de direcciones URL convierte los caracteres que no están permitidos en una dirección URL en las secuencias de escape hexadecimal equivalente.</span><span class="sxs-lookup"><span data-stu-id="ecf18-143">URL encoding converts characters that are not allowed in a URL into equivalent hexadecimal escape sequences.</span></span> <span data-ttu-id="ecf18-144">El <xref:System.Net.WebUtility.UrlEncode%2A> método crea una cadena con codificación URL.</span><span class="sxs-lookup"><span data-stu-id="ecf18-144">The <xref:System.Net.WebUtility.UrlEncode%2A> method creates a URL-encoded string.</span></span>  
  
 <span data-ttu-id="ecf18-145">Descodificación de URL reemplaza las secuencias de escape hexadecimales con caracteres ASCII equivalentes correspondientes.</span><span class="sxs-lookup"><span data-stu-id="ecf18-145">URL decoding replaces hexadecimal escape sequences with corresponding ASCII character equivalents.</span></span> <span data-ttu-id="ecf18-146">Por ejemplo, cuando se insertan en un bloque de texto con codificación URL, las secuencias de escape `%3c` y `%3e` se descodifican en los caracteres `<` y `>`.</span><span class="sxs-lookup"><span data-stu-id="ecf18-146">For example, when embedded in a block of URL-encoded text, the escape sequences `%3c` and `%3e` are decoded into the characters `<` and `>`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlDecodeToBytes">
      <MemberSignature Language="C#" Value="public static byte[] UrlDecodeToBytes (byte[] encodedValue, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] UrlDecodeToBytes(unsigned int8[] encodedValue, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.UrlDecodeToBytes(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlDecodeToBytes (encodedValue As Byte(), offset As Integer, count As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ UrlDecodeToBytes(cli::array &lt;System::Byte&gt; ^ encodedValue, int offset, int count);" />
      <MemberSignature Language="F#" Value="static member UrlDecodeToBytes : byte[] * int * int -&gt; byte[]" Usage="System.Net.WebUtility.UrlDecodeToBytes (encodedValue, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encodedValue" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="encodedValue"><span data-ttu-id="ecf18-147">Matriz <see cref="T:System.Byte" /> codificada como dirección URL que se va a descodificar.</span><span class="sxs-lookup"><span data-stu-id="ecf18-147">A URL-encoded <see cref="T:System.Byte" /> array to decode.</span></span></param>
        <param name="offset"><span data-ttu-id="ecf18-148">El desplazamiento, en bytes, desde el principio de la matriz <see cref="T:System.Byte" /> para descodificar.</span><span class="sxs-lookup"><span data-stu-id="ecf18-148">The offset, in bytes, from the start of the <see cref="T:System.Byte" /> array to decode.</span></span></param>
        <param name="count"><span data-ttu-id="ecf18-149">El recuento, en bytes, para descodificar de la matriz <see cref="T:System.Byte" />.</span><span class="sxs-lookup"><span data-stu-id="ecf18-149">The count, in bytes, to decode from the <see cref="T:System.Byte" /> array.</span></span></param>
        <summary><span data-ttu-id="ecf18-150">Convierte una matriz de bytes codificada que se ha codificado para la transmisión en una dirección URL en una matriz de bytes descodificada.</span><span class="sxs-lookup"><span data-stu-id="ecf18-150">Converts an encoded byte array that has been encoded for transmission in a URL into a decoded byte array.</span></span></summary>
        <returns><span data-ttu-id="ecf18-151">Una matriz <see cref="T:System.Byte" /> descodificada.</span><span class="sxs-lookup"><span data-stu-id="ecf18-151">A decoded <see cref="T:System.Byte" /> array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ecf18-152">Si se pasan caracteres como espacios en blanco y puntuación en un flujo HTTP, se pueden malinterpretar en el extremo receptor.</span><span class="sxs-lookup"><span data-stu-id="ecf18-152">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="ecf18-153">Codificación de direcciones URL convierte los caracteres que no están permitidos en una dirección URL en las secuencias de escape hexadecimal equivalente.</span><span class="sxs-lookup"><span data-stu-id="ecf18-153">URL encoding converts characters that are not allowed in a URL into equivalent hexadecimal escape sequences.</span></span> <span data-ttu-id="ecf18-154">El <xref:System.Net.WebUtility.UrlEncodeToBytes%2A> método crea una matriz de bytes con codificación URL.</span><span class="sxs-lookup"><span data-stu-id="ecf18-154">The <xref:System.Net.WebUtility.UrlEncodeToBytes%2A> method creates a URL-encoded byte array.</span></span>  
  
 <span data-ttu-id="ecf18-155">Descodificación de URL reemplaza las secuencias de escape hexadecimales con caracteres ASCII equivalentes correspondientes.</span><span class="sxs-lookup"><span data-stu-id="ecf18-155">URL decoding replaces hexadecimal escape sequences with corresponding ASCII character equivalents.</span></span> <span data-ttu-id="ecf18-156">Por ejemplo, cuando se insertan en un bloque de texto con codificación URL, las secuencias de escape `%3c` y `%3e` se descodifican en los caracteres `<` y `>`.</span><span class="sxs-lookup"><span data-stu-id="ecf18-156">For example, when embedded in a block of URL-encoded text, the escape sequences `%3c` and `%3e` are decoded into the characters `<` and `>`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlEncode">
      <MemberSignature Language="C#" Value="public static string UrlEncode (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UrlEncode(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.UrlEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlEncode (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UrlEncode(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member UrlEncode : string -&gt; string" Usage="System.Net.WebUtility.UrlEncode value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ecf18-157">Texto que se va a codificar con una dirección URL.</span><span class="sxs-lookup"><span data-stu-id="ecf18-157">The text to URL-encode.</span></span></param>
        <summary><span data-ttu-id="ecf18-158">Convierte una cadena de texto en una cadena codificada como una dirección URL.</span><span class="sxs-lookup"><span data-stu-id="ecf18-158">Converts a text string into a URL-encoded string.</span></span></summary>
        <returns><span data-ttu-id="ecf18-159">Cadena codificada como una dirección URL.</span><span class="sxs-lookup"><span data-stu-id="ecf18-159">A URL-encoded string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ecf18-160">Si se pasan caracteres como espacios en blanco y puntuación en un flujo HTTP, se pueden malinterpretar en el extremo receptor.</span><span class="sxs-lookup"><span data-stu-id="ecf18-160">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="ecf18-161">Codificación de direcciones URL reemplaza los caracteres no permitidos en una dirección URL con entidades de caracteres equivalentes que consta de las secuencias de escape hexadecimal.</span><span class="sxs-lookup"><span data-stu-id="ecf18-161">URL encoding replaces characters that are not allowed in a URL with character-entity equivalents consisting of hexadecimal escape sequences.</span></span> <span data-ttu-id="ecf18-162">La cadena convertida se espera que se ajustan al formato UTF-8.</span><span class="sxs-lookup"><span data-stu-id="ecf18-162">The converted string is expected to conform to the UTF-8 format.</span></span>  
  
 <span data-ttu-id="ecf18-163">Codificación de direcciones URL reemplaza todos los códigos de caracteres, excepto las letras, números y signos de puntuación siguientes:</span><span class="sxs-lookup"><span data-stu-id="ecf18-163">URL encoding replaces all character codes except for letters, numbers, and the following punctuation characters:</span></span>  
  
-   <span data-ttu-id="ecf18-164">`-` (signo menos)</span><span class="sxs-lookup"><span data-stu-id="ecf18-164">`-` (minus sign)</span></span>  
  
-   <span data-ttu-id="ecf18-165">`_` (subrayado)</span><span class="sxs-lookup"><span data-stu-id="ecf18-165">`_` (underscore)</span></span>  
  
-   <span data-ttu-id="ecf18-166">`.` (punto)</span><span class="sxs-lookup"><span data-stu-id="ecf18-166">`.` (period)</span></span>  
  
-   <span data-ttu-id="ecf18-167">`!` (signo de exclamación)</span><span class="sxs-lookup"><span data-stu-id="ecf18-167">`!` (exclamation point)</span></span>  
  
-   <span data-ttu-id="ecf18-168">`*` (asterisco)</span><span class="sxs-lookup"><span data-stu-id="ecf18-168">`*` (asterisk)</span></span>  
  
-   <span data-ttu-id="ecf18-169">`(` y `)` (apertura y cierre entre paréntesis)</span><span class="sxs-lookup"><span data-stu-id="ecf18-169">`(` and `)` (opening and closing parentheses)</span></span>  
  
 <span data-ttu-id="ecf18-170">Por ejemplo, cuando se insertan en un bloque de texto que debe transmitirse en una dirección URL, los caracteres `<` y `>` se codifican como `%3c` y `%3e`.</span><span class="sxs-lookup"><span data-stu-id="ecf18-170">For example, when embedded in a block of text to be transmitted in a URL, the characters `<` and `>` are encoded as `%3c` and `%3e`.</span></span>  
  
 <span data-ttu-id="ecf18-171">El <xref:System.Net.WebUtility.UrlDecode%2A> método invierte la codificación.</span><span class="sxs-lookup"><span data-stu-id="ecf18-171">The <xref:System.Net.WebUtility.UrlDecode%2A> method reverses the encoding.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlEncodeToBytes">
      <MemberSignature Language="C#" Value="public static byte[] UrlEncodeToBytes (byte[] value, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] UrlEncodeToBytes(unsigned int8[] value, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.UrlEncodeToBytes(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlEncodeToBytes (value As Byte(), offset As Integer, count As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ UrlEncodeToBytes(cli::array &lt;System::Byte&gt; ^ value, int offset, int count);" />
      <MemberSignature Language="F#" Value="static member UrlEncodeToBytes : byte[] * int * int -&gt; byte[]" Usage="System.Net.WebUtility.UrlEncodeToBytes (value, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ecf18-172">Matriz <see cref="T:System.Byte" /> que se va a codificar con una dirección URL.</span><span class="sxs-lookup"><span data-stu-id="ecf18-172">The <see cref="T:System.Byte" /> array to URL-encode.</span></span></param>
        <param name="offset"><span data-ttu-id="ecf18-173">El desplazamiento, en bytes, desde el principio de la matriz <see cref="T:System.Byte" /> para codificar.</span><span class="sxs-lookup"><span data-stu-id="ecf18-173">The offset, in bytes, from the start of the <see cref="T:System.Byte" /> array to encode.</span></span></param>
        <param name="count"><span data-ttu-id="ecf18-174">El recuento, en bytes, para codificar de la matriz <see cref="T:System.Byte" />.</span><span class="sxs-lookup"><span data-stu-id="ecf18-174">The count, in bytes, to encode from the <see cref="T:System.Byte" /> array.</span></span></param>
        <summary><span data-ttu-id="ecf18-175">Convierte una matriz de bytes en una matriz de bytes con código URL.</span><span class="sxs-lookup"><span data-stu-id="ecf18-175">Converts a byte array into a URL-encoded byte array.</span></span></summary>
        <returns><span data-ttu-id="ecf18-176">Una matriz de <see cref="T:System.Byte" /> codificada.</span><span class="sxs-lookup"><span data-stu-id="ecf18-176">An encoded <see cref="T:System.Byte" /> array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ecf18-177">Si se pasan caracteres como espacios en blanco y puntuación en un flujo HTTP, se pueden malinterpretar en el extremo receptor.</span><span class="sxs-lookup"><span data-stu-id="ecf18-177">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="ecf18-178">Codificación de direcciones URL reemplaza los caracteres no permitidos en una dirección URL con entidades de caracteres equivalentes que consta de las secuencias de escape hexadecimal.</span><span class="sxs-lookup"><span data-stu-id="ecf18-178">URL encoding replaces characters that are not allowed in a URL with character-entity equivalents consisting of hexadecimal escape sequences.</span></span> <span data-ttu-id="ecf18-179">La cadena convertida se espera que se ajustan al formato UTF-8.</span><span class="sxs-lookup"><span data-stu-id="ecf18-179">The converted string is expected to conform to the UTF-8 format.</span></span>  
  
 <span data-ttu-id="ecf18-180">Codificación de direcciones URL reemplaza todos los códigos de caracteres, excepto las letras, números y signos de puntuación siguientes:</span><span class="sxs-lookup"><span data-stu-id="ecf18-180">URL encoding replaces all character codes except for letters, numbers, and the following punctuation characters:</span></span>  
  
-   <span data-ttu-id="ecf18-181">`-` (signo menos)</span><span class="sxs-lookup"><span data-stu-id="ecf18-181">`-` (minus sign)</span></span>  
  
-   <span data-ttu-id="ecf18-182">`_` (subrayado)</span><span class="sxs-lookup"><span data-stu-id="ecf18-182">`_` (underscore)</span></span>  
  
-   <span data-ttu-id="ecf18-183">`.` (punto)</span><span class="sxs-lookup"><span data-stu-id="ecf18-183">`.` (period)</span></span>  
  
-   <span data-ttu-id="ecf18-184">`!` (signo de exclamación)</span><span class="sxs-lookup"><span data-stu-id="ecf18-184">`!` (exclamation point)</span></span>  
  
-   <span data-ttu-id="ecf18-185">`*` (asterisco)</span><span class="sxs-lookup"><span data-stu-id="ecf18-185">`*` (asterisk)</span></span>  
  
-   <span data-ttu-id="ecf18-186">`'` (comilla simple)</span><span class="sxs-lookup"><span data-stu-id="ecf18-186">`'` (single quotation mark)</span></span>  
  
-   <span data-ttu-id="ecf18-187">`(` y `)` (apertura y cierre entre paréntesis)</span><span class="sxs-lookup"><span data-stu-id="ecf18-187">`(` and `)` (opening and closing parentheses)</span></span>  
  
 <span data-ttu-id="ecf18-188">Por ejemplo, cuando se insertan en un bloque de texto que debe transmitirse en una dirección URL, los caracteres `<` y `>` se codifican como `%3c` y `%3e`.</span><span class="sxs-lookup"><span data-stu-id="ecf18-188">For example, when embedded in a block of text to be transmitted in a URL, the characters `<` and `>` are encoded as `%3c` and `%3e`.</span></span>  
  
 <span data-ttu-id="ecf18-189">El <xref:System.Net.WebUtility.UrlDecodeToBytes%2A> método invierte la codificación.</span><span class="sxs-lookup"><span data-stu-id="ecf18-189">The <xref:System.Net.WebUtility.UrlDecodeToBytes%2A> method reverses the encoding.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
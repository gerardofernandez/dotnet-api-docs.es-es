<Type Name="HttpListenerRequest" FullName="System.Net.HttpListenerRequest">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f84e6a16404abfc6d00782a5281e1869cde0e8c5" /><Meta Name="ms.sourcegitcommit" Value="662f143e6be46d519ff8ab4451d543d91e651478" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="12/18/2018" /><Meta Name="ms.locfileid" Value="53567828" /></Metadata><TypeSignature Language="C#" Value="public sealed class HttpListenerRequest" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HttpListenerRequest extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.HttpListenerRequest" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HttpListenerRequest" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpListenerRequest sealed" />
  <TypeSignature Language="F#" Value="type HttpListenerRequest = class" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.HttpListener</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="63409-101">Describe una solicitud HTTP de entrada a un objeto <see cref="T:System.Net.HttpListener" />.</span><span class="sxs-lookup"><span data-stu-id="63409-101">Describes an incoming HTTP request to an <see cref="T:System.Net.HttpListener" /> object.</span></span> <span data-ttu-id="63409-102">Esta clase no puede heredarse.</span><span class="sxs-lookup"><span data-stu-id="63409-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63409-103">Cuando un cliente realiza una solicitud a un identificador uniforme de recursos (URI) controlado por un <xref:System.Net.HttpListener> objeto, el <xref:System.Net.HttpListener> proporciona un <xref:System.Net.HttpListenerContext> objeto que contiene información acerca del remitente, la solicitud y la respuesta que se envía al cliente.</span><span class="sxs-lookup"><span data-stu-id="63409-103">When a client makes a request to a Uniform Resource Identifier (URI) handled by an <xref:System.Net.HttpListener> object, the <xref:System.Net.HttpListener> provides a <xref:System.Net.HttpListenerContext> object that contains information about the sender, the request, and the response that is sent to the client.</span></span> <span data-ttu-id="63409-104">El <xref:System.Net.HttpListenerContext.Request%2A?displayProperty=nameWithType> propiedad devuelve el <xref:System.Net.HttpListenerRequest> objeto que describe la solicitud.</span><span class="sxs-lookup"><span data-stu-id="63409-104">The <xref:System.Net.HttpListenerContext.Request%2A?displayProperty=nameWithType> property returns the <xref:System.Net.HttpListenerRequest> object that describes the request.</span></span>  
  
 <span data-ttu-id="63409-105">El <xref:System.Net.HttpListenerRequest> objeto contiene información sobre la solicitud, como la solicitud <xref:System.Net.HttpListenerRequest.HttpMethod%2A> cadena, <xref:System.Net.HttpListenerRequest.UserAgent%2A> de cadena y de datos del cuerpo de solicitud (consulte la <xref:System.Net.HttpListenerRequest.InputStream%2A> propiedad).</span><span class="sxs-lookup"><span data-stu-id="63409-105">The <xref:System.Net.HttpListenerRequest> object contains information about the request, such as the request <xref:System.Net.HttpListenerRequest.HttpMethod%2A> string, <xref:System.Net.HttpListenerRequest.UserAgent%2A> string, and request body data (see the <xref:System.Net.HttpListenerRequest.InputStream%2A> property).</span></span>  
  
 <span data-ttu-id="63409-106">Para responder a la solicitud, debe obtener la respuesta asociada mediante la <xref:System.Net.HttpListenerContext.Response%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="63409-106">To reply to the request, you must get the associated response using the <xref:System.Net.HttpListenerContext.Response%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="63409-107">En el ejemplo de código siguiente se muestra cómo recibir y responder a un <xref:System.Net.HttpListenerRequest>.</span><span class="sxs-lookup"><span data-stu-id="63409-107">The following code example demonstrates how to receive and respond to a <xref:System.Net.HttpListenerRequest>.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Net.HttpListener" />
    <altmember cref="T:System.Net.HttpListenerContext" />
    <altmember cref="T:System.Net.HttpListenerResponse" />
  </Docs>
  <Members>
    <Member MemberName="AcceptTypes">
      <MemberSignature Language="C#" Value="public string[] AcceptTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] AcceptTypes" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.AcceptTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AcceptTypes As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ AcceptTypes { cli::array &lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AcceptTypes : string[]" Usage="System.Net.HttpListenerRequest.AcceptTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="63409-108">Obtiene los tipos MIME aceptados por el cliente.</span><span class="sxs-lookup"><span data-stu-id="63409-108">Gets the MIME types accepted by the client.</span></span></summary>
        <value><span data-ttu-id="63409-109">Una matriz <see cref="T:System.String" /> que contiene los nombres de tipo especificados en el encabezado <see langword="Accept" /> de la solicitud o bien <see langword="null" />, si la solicitud de cliente no incluía un encabezado <see langword="Accept" />.</span><span class="sxs-lookup"><span data-stu-id="63409-109">A <see cref="T:System.String" /> array that contains the type names specified in the request's <see langword="Accept" /> header or <see langword="null" /> if the client request did not include an <see langword="Accept" /> header.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63409-110">El `Accept` encabezado es una cadena de nombres de tipo Extensiones multipropósito de correo Internet (MIME) separados por espacios (por ejemplo, `image/jpeg`), que indican los tipos MIME que el cliente está preparado para aceptar y procesar en una respuesta.</span><span class="sxs-lookup"><span data-stu-id="63409-110">The `Accept` header is a string of space-separated Multipurpose Internet Mail Extensions (MIME) type names (for example, `image/jpeg`), which indicate the MIME types that the client is prepared to accept and process in a response.</span></span> <span data-ttu-id="63409-111">El `*/*` entrada indica que el cliente acepta cualquier tipo MIME.</span><span class="sxs-lookup"><span data-stu-id="63409-111">The `*/*` entry indicates that the client accepts any MIME type.</span></span> <span data-ttu-id="63409-112">Para obtener una descripción detallada de la `Accept` encabezado, vea RFC 2616, disponible en [ https://www.rfc-editor.org ](https://www.rfc-editor.org/).</span><span class="sxs-lookup"><span data-stu-id="63409-112">For a detailed description of the `Accept` header, see RFC 2616, available at [https://www.rfc-editor.org](https://www.rfc-editor.org/).</span></span>  
  
 <span data-ttu-id="63409-113">Para obtener una lista completa de los encabezados de solicitud, consulte el <xref:System.Net.HttpRequestHeader> enumeración.</span><span class="sxs-lookup"><span data-stu-id="63409-113">For a complete list of request headers, see the <xref:System.Net.HttpRequestHeader> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="63409-114">En el ejemplo de código siguiente se muestra cómo utilizar esta propiedad.</span><span class="sxs-lookup"><span data-stu-id="63409-114">The following code example demonstrates using this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#15](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="BeginGetClientCertificate">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginGetClientCertificate (AsyncCallback requestCallback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginGetClientCertificate(class System.AsyncCallback requestCallback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListenerRequest.BeginGetClientCertificate(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginGetClientCertificate (requestCallback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginGetClientCertificate(AsyncCallback ^ requestCallback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginGetClientCertificate : AsyncCallback * obj -&gt; IAsyncResult" Usage="httpListenerRequest.BeginGetClientCertificate (requestCallback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="requestCallback"><span data-ttu-id="63409-115">Delegado de <see cref="T:System.AsyncCallback" /> que hace referencia al método que se invocará cuando la operación se complete.</span><span class="sxs-lookup"><span data-stu-id="63409-115">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span></span></param>
        <param name="state"><span data-ttu-id="63409-116">Objeto definido por el usuario que contiene información sobre la operación.</span><span class="sxs-lookup"><span data-stu-id="63409-116">A user-defined object that contains information about the operation.</span></span> <span data-ttu-id="63409-117">Este objeto se pasa al delegado de devolución de llamada cuando la operación ha terminado.</span><span class="sxs-lookup"><span data-stu-id="63409-117">This object is passed to the callback delegate when the operation completes.</span></span></param>
        <summary><span data-ttu-id="63409-118">Inicia una solicitud asincrónica para el certificado X.509 v.3 del cliente.</span><span class="sxs-lookup"><span data-stu-id="63409-118">Begins an asynchronous request for the client's X.509 v.3 certificate.</span></span></summary>
        <returns><span data-ttu-id="63409-119">Un valor <see cref="T:System.IAsyncResult" /> que indica el estado de la operación.</span><span class="sxs-lookup"><span data-stu-id="63409-119">An <see cref="T:System.IAsyncResult" /> that indicates the status of the operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientCertificateError">
      <MemberSignature Language="C#" Value="public int ClientCertificateError { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ClientCertificateError" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.ClientCertificateError" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClientCertificateError As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ClientCertificateError { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ClientCertificateError : int" Usage="System.Net.HttpListenerRequest.ClientCertificateError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="63409-120">Obtiene un código de error que identifica un problema con el objeto <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> proporcionado por el cliente.</span><span class="sxs-lookup"><span data-stu-id="63409-120">Gets an error code that identifies a problem with the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> provided by the client.</span></span></summary>
        <value><span data-ttu-id="63409-121">Un valor <see cref="T:System.Int32" /> que contiene un código de error de Windows.</span><span class="sxs-lookup"><span data-stu-id="63409-121">An <see cref="T:System.Int32" /> value that contains a Windows error code.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63409-122">Esta propiedad contiene un código de error de Windows devuelto por la interfaz de proveedor de soporte técnico (SSPI) de canal seguro (Schannel) seguridad, que se usa para validar el certificado.</span><span class="sxs-lookup"><span data-stu-id="63409-122">This property contains a Windows error code returned by the Secure Channel (Schannel) Security Support Provider Interface (SSPI), which is used to validate the certificate.</span></span> <span data-ttu-id="63409-123">Para obtener más información sobre la compatibilidad SSPI de Schannel, vea "Crear unas conexiones seguras mediante Schannel" en la documentación de seguridad en [ http://msdn.microsoft.com/library ](https://msdn.microsoft.com/library).</span><span class="sxs-lookup"><span data-stu-id="63409-123">For more information about SSPI support for Schannel, see "Creating a Secure Connection Using Schannel" in the Security documentation at [http://msdn.microsoft.com/library](https://msdn.microsoft.com/library).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="63409-124">En el ejemplo de código siguiente se comprueba esta propiedad para determinar si la solicitud incluye un certificado de cliente válido.</span><span class="sxs-lookup"><span data-stu-id="63409-124">The following code example checks this property to determine whether the request includes a valid client certificate.</span></span>  
  
 [!code-csharp[NCLListener#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLListener/CS/sample.cs#3)]
 [!code-vb[NCLListener#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLListener/vb/sample.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="63409-125">El certificado de cliente no ha sido inicializado aún por una llamada a los métodos <see cref="M:System.Net.HttpListenerRequest.BeginGetClientCertificate(System.AsyncCallback,System.Object)" /> o <see cref="M:System.Net.HttpListenerRequest.GetClientCertificate" /></span><span class="sxs-lookup"><span data-stu-id="63409-125">The client certificate has not been initialized yet by a call to the <see cref="M:System.Net.HttpListenerRequest.BeginGetClientCertificate(System.AsyncCallback,System.Object)" /> or <see cref="M:System.Net.HttpListenerRequest.GetClientCertificate" /> methods</span></span> 
<span data-ttu-id="63409-126">O bien</span><span class="sxs-lookup"><span data-stu-id="63409-126">-or -</span></span> 
<span data-ttu-id="63409-127">La operación todavía está en curso.</span><span class="sxs-lookup"><span data-stu-id="63409-127">The operation is still in progress.</span></span></exception>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="ContentEncoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding ContentEncoding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding ContentEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.ContentEncoding" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ ContentEncoding { System::Text::Encoding ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContentEncoding : System.Text.Encoding" Usage="System.Net.HttpListenerRequest.ContentEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="63409-128">Obtiene la codificación de contenido que se puede utilizar con los datos enviados con la solicitud</span><span class="sxs-lookup"><span data-stu-id="63409-128">Gets the content encoding that can be used with data sent with the request</span></span></summary>
        <value><span data-ttu-id="63409-129">Un objeto <see cref="T:System.Text.Encoding" /> apto para el uso con los datos de la propiedad <see cref="P:System.Net.HttpListenerRequest.InputStream" />.</span><span class="sxs-lookup"><span data-stu-id="63409-129">An <see cref="T:System.Text.Encoding" /> object suitable for use with the data in the <see cref="P:System.Net.HttpListenerRequest.InputStream" /> property.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63409-130">Un <xref:System.Text.Encoding> objeto puede utilizarse para convertir las secuencias de bytes en juegos de caracteres (páginas de códigos) y caracteres en las secuencias de bytes.</span><span class="sxs-lookup"><span data-stu-id="63409-130">An <xref:System.Text.Encoding> object can be used to convert byte sequences into character sets (code pages) and characters into byte sequences.</span></span> <span data-ttu-id="63409-131">Esta propiedad usa el valor de juego de caracteres de la `Content-Type` encabezado para determinar la codificación.</span><span class="sxs-lookup"><span data-stu-id="63409-131">This property uses the charset value from the `Content-Type` header to determine the encoding.</span></span> <span data-ttu-id="63409-132">Si esa información no está disponible, esta propiedad devuelve <xref:System.Text.Encoding.Default%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="63409-132">If that information is not available, this property returns <xref:System.Text.Encoding.Default%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="63409-133">En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Net.HttpListenerRequest.ContentEncoding%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="63409-133">The following code example demonstrates using the <xref:System.Net.HttpListenerRequest.ContentEncoding%2A> property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#16](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#16)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="ContentLength64">
      <MemberSignature Language="C#" Value="public long ContentLength64 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 ContentLength64" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.ContentLength64" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentLength64 As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long ContentLength64 { long get(); };" />
      <MemberSignature Language="F#" Value="member this.ContentLength64 : int64" Usage="System.Net.HttpListenerRequest.ContentLength64" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="63409-134">Obtiene la longitud de los datos de cuerpo incluidos en la solicitud.</span><span class="sxs-lookup"><span data-stu-id="63409-134">Gets the length of the body data included in the request.</span></span></summary>
        <value><span data-ttu-id="63409-135">Valor del encabezado <see langword="Content-Length" /> de la solicitud.</span><span class="sxs-lookup"><span data-stu-id="63409-135">The value from the request's <see langword="Content-Length" /> header.</span></span> <span data-ttu-id="63409-136">Este valor es -1 si no se conoce la longitud del contenido.</span><span class="sxs-lookup"><span data-stu-id="63409-136">This value is -1 if the content length is not known.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63409-137">El `Content-Length` encabezado expresa la longitud, en bytes, de los datos del cuerpo que acompaña a la solicitud.</span><span class="sxs-lookup"><span data-stu-id="63409-137">The `Content-Length` header expresses the length, in bytes, of the body data that accompanies the request.</span></span>  
  
 <span data-ttu-id="63409-138">Para obtener una lista completa de los encabezados de solicitud, consulte el <xref:System.Net.HttpRequestHeader> enumeración.</span><span class="sxs-lookup"><span data-stu-id="63409-138">For a complete list of request headers, see the <xref:System.Net.HttpRequestHeader> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="63409-139">El siguiente ejemplo de código utiliza el <xref:System.Net.HttpListenerRequest.ContentLength64%2A> propiedad durante el procesamiento de datos del cuerpo.</span><span class="sxs-lookup"><span data-stu-id="63409-139">The following code example uses the <xref:System.Net.HttpListenerRequest.ContentLength64%2A> property while processing body data.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#16](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#16)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="ContentType">
      <MemberSignature Language="C#" Value="public string ContentType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContentType" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.ContentType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ContentType { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContentType : string" Usage="System.Net.HttpListenerRequest.ContentType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="63409-140">Obtiene el tipo MIME de los datos del cuerpo incluidos en la solicitud.</span><span class="sxs-lookup"><span data-stu-id="63409-140">Gets the MIME type of the body data included in the request.</span></span></summary>
        <value><span data-ttu-id="63409-141">Un valor <see cref="T:System.String" /> que contiene el texto del encabezado <see langword="Content-Type" /> de la solicitud.</span><span class="sxs-lookup"><span data-stu-id="63409-141">A <see cref="T:System.String" /> that contains the text of the request's <see langword="Content-Type" /> header.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63409-142">Si un cliente incluye datos del cuerpo de una solicitud, declara el tipo Extensiones multipropósito de correo Internet (MIME) de los datos del cuerpo en el `Content-Type` encabezado.</span><span class="sxs-lookup"><span data-stu-id="63409-142">If a client includes body data in a request, it declares the Multipurpose Internet Mail Extensions (MIME) type of the body data in the `Content-Type` header.</span></span> <span data-ttu-id="63409-143">Por ejemplo, el tipo MIME predeterminado de los datos devueltos desde un formulario Web Forms mediante el `POST` método es `application/x-www-form-urlencoded`.</span><span class="sxs-lookup"><span data-stu-id="63409-143">For example, the default MIME type of data returned from a Web form using the `POST` method is `application/x-www-form-urlencoded`.</span></span>  
  
 <span data-ttu-id="63409-144">Para obtener una lista completa de los encabezados de solicitud, consulte el <xref:System.Net.HttpRequestHeader> enumeración y RFC 2616, disponible en [ https://www.rfc-editor.org ](https://www.rfc-editor.org/).</span><span class="sxs-lookup"><span data-stu-id="63409-144">For a complete list of request headers, see the <xref:System.Net.HttpRequestHeader> enumeration and RFC 2616, available at [https://www.rfc-editor.org](https://www.rfc-editor.org/).</span></span>  
  
 <span data-ttu-id="63409-145">El <xref:System.Net.HttpListenerRequest.ContentType%2A> es null cuando no hay ningún `Content-Type` encabezado de la solicitud.</span><span class="sxs-lookup"><span data-stu-id="63409-145">The <xref:System.Net.HttpListenerRequest.ContentType%2A> is null when there is no `Content-Type` header in the request.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="63409-146">En el ejemplo de código siguiente se muestra cómo utilizar esta propiedad.</span><span class="sxs-lookup"><span data-stu-id="63409-146">The following code example demonstrates how to use this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#16](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#16)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="Cookies">
      <MemberSignature Language="C#" Value="public System.Net.CookieCollection Cookies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.CookieCollection Cookies" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.Cookies" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Cookies As CookieCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::CookieCollection ^ Cookies { System::Net::CookieCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Cookies : System.Net.CookieCollection" Usage="System.Net.HttpListenerRequest.Cookies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.CookieCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="63409-147">Obtiene las cookies enviadas con la solicitud.</span><span class="sxs-lookup"><span data-stu-id="63409-147">Gets the cookies sent with the request.</span></span></summary>
        <value><span data-ttu-id="63409-148">Un objeto <see cref="T:System.Net.CookieCollection" /> que contiene las cookies adjuntas a la solicitud.</span><span class="sxs-lookup"><span data-stu-id="63409-148">A <see cref="T:System.Net.CookieCollection" /> that contains cookies that accompany the request.</span></span> <span data-ttu-id="63409-149">Esta propiedad devuelve una colección vacía si la solicitud no contiene cookies.</span><span class="sxs-lookup"><span data-stu-id="63409-149">This property returns an empty collection if the request does not contain cookies.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63409-150">Una cookie es datos de texto de nombre/valor de un servidor Web que se almacena en el equipo local (cliente).</span><span class="sxs-lookup"><span data-stu-id="63409-150">A cookie is name/value text data from a Web server that is stored on the local (client) computer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="63409-151">El ejemplo de código siguiente muestra los valores de cookies enviada con la solicitud.</span><span class="sxs-lookup"><span data-stu-id="63409-151">The following code example displays the values of cookies sent with the request.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#18](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#18)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="EndGetClientCertificate">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509Certificate2 EndGetClientCertificate (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.Cryptography.X509Certificates.X509Certificate2 EndGetClientCertificate(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListenerRequest.EndGetClientCertificate(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndGetClientCertificate (asyncResult As IAsyncResult) As X509Certificate2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::Cryptography::X509Certificates::X509Certificate2 ^ EndGetClientCertificate(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndGetClientCertificate : IAsyncResult -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="httpListenerRequest.EndGetClientCertificate asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509Certificate2</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="63409-152">La solicitud pendiente para el certificado.</span><span class="sxs-lookup"><span data-stu-id="63409-152">The pending request for the certificate.</span></span></param>
        <summary><span data-ttu-id="63409-153">Finaliza una solicitud asincrónica para el certificado X.509 v.3 del cliente.</span><span class="sxs-lookup"><span data-stu-id="63409-153">Ends an asynchronous request for the client's X.509 v.3 certificate.</span></span></summary>
        <returns><span data-ttu-id="63409-154">El objeto <see cref="T:System.IAsyncResult" /> que se devuelve cuando se inicia la operación.</span><span class="sxs-lookup"><span data-stu-id="63409-154">The <see cref="T:System.IAsyncResult" /> object that is returned when the operation started.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="63409-155">El valor de <paramref name="asyncResult" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="63409-155"><paramref name="asyncResult" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="63409-156"><paramref name="asyncResult" /> no se obtuvo mediante una llamada a <see cref="M:System.Net.HttpListenerRequest.BeginGetClientCertificate(System.AsyncCallback,System.Object)" /><paramref name="e." /></span><span class="sxs-lookup"><span data-stu-id="63409-156"><paramref name="asyncResult" /> was not obtained by calling <see cref="M:System.Net.HttpListenerRequest.BeginGetClientCertificate(System.AsyncCallback,System.Object)" /><paramref name="e." /></span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="63409-157">Ya se llamó a este método para la operación identificada por <paramref name="asyncResult" />.</span><span class="sxs-lookup"><span data-stu-id="63409-157">This method was already called for the operation identified by <paramref name="asyncResult" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetClientCertificate">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509Certificate2 GetClientCertificate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.Cryptography.X509Certificates.X509Certificate2 GetClientCertificate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListenerRequest.GetClientCertificate" />
      <MemberSignature Language="VB.NET" Value="Public Function GetClientCertificate () As X509Certificate2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::Cryptography::X509Certificates::X509Certificate2 ^ GetClientCertificate();" />
      <MemberSignature Language="F#" Value="member this.GetClientCertificate : unit -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="httpListenerRequest.GetClientCertificate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509Certificate2</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="63409-158">Recupera el certificado X.509 v.3 del cliente.</span><span class="sxs-lookup"><span data-stu-id="63409-158">Retrieves the client's X.509 v.3 certificate.</span></span></summary>
        <returns><span data-ttu-id="63409-159">Un objeto <see cref="N:System.Security.Cryptography.X509Certificates" /> que contiene el certificado X.509 v.3 del cliente.</span><span class="sxs-lookup"><span data-stu-id="63409-159">A <see cref="N:System.Security.Cryptography.X509Certificates" /> object that contains the client's X.509 v.3 certificate.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63409-160">Este método se bloquea hasta que se recupere el certificado.</span><span class="sxs-lookup"><span data-stu-id="63409-160">This method blocks until the certificate is retrieved.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="63409-161">Está en curso una llamada a este método para recuperar el certificado X.509 v.3 del cliente y, por consiguiente, no se puede realizar otra llamada a este método.</span><span class="sxs-lookup"><span data-stu-id="63409-161">A call to this method to retrieve the client's X.509 v.3 certificate is in progress and therefore another call to this method cannot be made.</span></span></exception>
        <altmember cref="N:System.Security.Cryptography.X509Certificates" />
      </Docs>
    </Member>
    <Member MemberName="GetClientCertificateAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Security.Cryptography.X509Certificates.X509Certificate2&gt; GetClientCertificateAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Security.Cryptography.X509Certificates.X509Certificate2&gt; GetClientCertificateAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListenerRequest.GetClientCertificateAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function GetClientCertificateAsync () As Task(Of X509Certificate2)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Security::Cryptography::X509Certificates::X509Certificate2 ^&gt; ^ GetClientCertificateAsync();" />
      <MemberSignature Language="F#" Value="member this.GetClientCertificateAsync : unit -&gt; System.Threading.Tasks.Task&lt;System.Security.Cryptography.X509Certificates.X509Certificate2&gt;" Usage="httpListenerRequest.GetClientCertificateAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Security.Cryptography.X509Certificates.X509Certificate2&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="63409-162">Recupera el certificado de X.509 v.3 del cliente como una operación asincrónica.</span><span class="sxs-lookup"><span data-stu-id="63409-162">Retrieves the client's X.509 v.3 certificate as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="63409-163">Objeto de tarea que representa la operación asincrónica.</span><span class="sxs-lookup"><span data-stu-id="63409-163">The task object representing the asynchronous operation.</span></span> <span data-ttu-id="63409-164">La propiedad <see cref="P:System.Threading.Tasks.Task`1.Result" /> en el objeto de tarea devuelve un objeto <see cref="N:System.Security.Cryptography.X509Certificates" /> que contiene el certificado X.509 v.3 del cliente.</span><span class="sxs-lookup"><span data-stu-id="63409-164">The <see cref="P:System.Threading.Tasks.Task`1.Result" /> property on the task object returns a <see cref="N:System.Security.Cryptography.X509Certificates" /> object that contains the client's X.509 v.3 certificate.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63409-165">Esta operación no se bloqueará.</span><span class="sxs-lookup"><span data-stu-id="63409-165">This operation will not block.</span></span> <span data-ttu-id="63409-166">El valor devuelto <xref:System.Threading.Tasks.Task%601> objeto se completará cuando se ha recuperado el certificado.</span><span class="sxs-lookup"><span data-stu-id="63409-166">The returned <xref:System.Threading.Tasks.Task%601> object will complete when the certificate has been retrieved.</span></span>  
  
 <span data-ttu-id="63409-167">Si una llamada a este método para recuperar el certificado X.509 v.3 del cliente está en curso, no se realiza otra llamada a este método.</span><span class="sxs-lookup"><span data-stu-id="63409-167">If a call to this method to retrieve the client's X.509 v.3 certificate is in progress, then another call to this method cannot be made.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="N:System.Security.Cryptography.X509Certificates" />
      </Docs>
    </Member>
    <Member MemberName="HasEntityBody">
      <MemberSignature Language="C#" Value="public bool HasEntityBody { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasEntityBody" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.HasEntityBody" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasEntityBody As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasEntityBody { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasEntityBody : bool" Usage="System.Net.HttpListenerRequest.HasEntityBody" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="63409-168">Obtiene un valor <see cref="T:System.Boolean" /> que indica si la solicitud tiene asociados datos de cuerpo.</span><span class="sxs-lookup"><span data-stu-id="63409-168">Gets a <see cref="T:System.Boolean" /> value that indicates whether the request has associated body data.</span></span></summary>
        <value><span data-ttu-id="63409-169">Es <see langword="true" /> si la solicitud tiene asociados datos de cuerpo; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="63409-169"><see langword="true" /> if the request has associated body data; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63409-170">Una solicitud que envía datos al servidor mediante el `POST` método, por ejemplo, debe tener un cuerpo de entidad.</span><span class="sxs-lookup"><span data-stu-id="63409-170">A request that sends data to the server using the `POST` method, for example, should have an entity body.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="63409-171">En el ejemplo de código siguiente se muestra cómo utilizar esta propiedad.</span><span class="sxs-lookup"><span data-stu-id="63409-171">The following code example demonstrates using this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#16](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#16)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="Headers">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.NameValueCollection Headers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameValueCollection Headers" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.Headers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Headers As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::NameValueCollection ^ Headers { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Headers : System.Collections.Specialized.NameValueCollection" Usage="System.Net.HttpListenerRequest.Headers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="63409-172">Obtiene la colección de pares nombre de encabezado/valor enviados en la solicitud.</span><span class="sxs-lookup"><span data-stu-id="63409-172">Gets the collection of header name/value pairs sent in the request.</span></span></summary>
        <value><span data-ttu-id="63409-173">Un objeto <see cref="T:System.Net.WebHeaderCollection" /> que contiene los encabezados HTTP incluidos en la solicitud.</span><span class="sxs-lookup"><span data-stu-id="63409-173">A <see cref="T:System.Net.WebHeaderCollection" /> that contains the HTTP headers included in the request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63409-174">Los encabezados de solicitud contienen información de metadatos.</span><span class="sxs-lookup"><span data-stu-id="63409-174">Request headers contain metadata information.</span></span> <span data-ttu-id="63409-175">Por ejemplo, los encabezados pueden contener el identificador uniforme de recursos (URI) del recurso que remitió el cliente al servidor, la identidad del agente de usuario empleada por el cliente y el MIME aceptable los tipos de datos en el cuerpo de respuesta.</span><span class="sxs-lookup"><span data-stu-id="63409-175">For example, headers can contain the Uniform Resource Identifier (URI) of the resource that referred the client to the server, the identity of the user agent employed by the client, and the acceptable MIME types for data in the response body.</span></span>  
  
 <span data-ttu-id="63409-176">Para obtener una lista completa de los encabezados de solicitud, consulte el <xref:System.Net.HttpRequestHeader> enumeración.</span><span class="sxs-lookup"><span data-stu-id="63409-176">For a complete list of request headers, see the <xref:System.Net.HttpRequestHeader> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="63409-177">En el ejemplo de código siguiente se muestra toda la información en un determinado <xref:System.Net.WebHeaderCollection> objeto.</span><span class="sxs-lookup"><span data-stu-id="63409-177">The following code example displays all the information in a given <xref:System.Net.WebHeaderCollection> object.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#21](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#21)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="HttpMethod">
      <MemberSignature Language="C#" Value="public string HttpMethod { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HttpMethod" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.HttpMethod" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HttpMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ HttpMethod { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HttpMethod : string" Usage="System.Net.HttpListenerRequest.HttpMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="63409-178">Obtiene el método HTTP especificado por el cliente.</span><span class="sxs-lookup"><span data-stu-id="63409-178">Gets the HTTP method specified by the client.</span></span></summary>
        <value><span data-ttu-id="63409-179">Un valor <see cref="T:System.String" /> que contiene el método utilizado en la solicitud.</span><span class="sxs-lookup"><span data-stu-id="63409-179">A <see cref="T:System.String" /> that contains the method used in the request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63409-180">El método HTTP es normalmente GET o POST, dependiendo de la acción deseada por el cliente.</span><span class="sxs-lookup"><span data-stu-id="63409-180">The HTTP method is typically GET or POST, depending on the action desired by the client.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="63409-181">En el ejemplo de código siguiente se muestra cómo utilizar esta propiedad.</span><span class="sxs-lookup"><span data-stu-id="63409-181">The following code example demonstrates using this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#17](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="InputStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream InputStream { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream InputStream" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.InputStream" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InputStream As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Stream ^ InputStream { System::IO::Stream ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InputStream : System.IO.Stream" Usage="System.Net.HttpListenerRequest.InputStream" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="63409-182">Obtiene una secuencia que contiene los datos del cuerpo enviados por el cliente.</span><span class="sxs-lookup"><span data-stu-id="63409-182">Gets a stream that contains the body data sent by the client.</span></span></summary>
        <value><span data-ttu-id="63409-183">Un objeto <see cref="T:System.IO.Stream" /> legible que contiene los bytes enviados por el cliente en el cuerpo de la solicitud.</span><span class="sxs-lookup"><span data-stu-id="63409-183">A readable <see cref="T:System.IO.Stream" /> object that contains the bytes sent by the client in the body of the request.</span></span> <span data-ttu-id="63409-184">Esta propiedad devuelve <see cref="F:System.IO.Stream.Null" /> si no se envían datos con la solicitud.</span><span class="sxs-lookup"><span data-stu-id="63409-184">This property returns <see cref="F:System.IO.Stream.Null" /> if no data is sent with the request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63409-185">Si el cliente lo transmite datos (por ejemplo, mediante HTTP `POST` método), la secuencia devuelta por este método contiene los datos.</span><span class="sxs-lookup"><span data-stu-id="63409-185">If the client transmits data (for example, using the HTTP `POST` method), the stream returned by this method contains that data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="63409-186">Cerrar la solicitud no cierra la secuencia devuelta por esta propiedad.</span><span class="sxs-lookup"><span data-stu-id="63409-186">Closing the request does not close the stream returned by this property.</span></span> <span data-ttu-id="63409-187">Cuando ya no necesite la secuencia, debe cerrar mediante una llamada a la <xref:System.IO.Stream.Close%2A> método.</span><span class="sxs-lookup"><span data-stu-id="63409-187">When you no longer need the stream, you should close it by calling the <xref:System.IO.Stream.Close%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="63409-188">En el ejemplo de código siguiente se muestra cómo utilizar esta propiedad para leer los datos enviados con una solicitud.</span><span class="sxs-lookup"><span data-stu-id="63409-188">The following code example demonstrates using this property to read the data sent with a request.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#16](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#16)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="63409-189">Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación.</span><span class="sxs-lookup"><span data-stu-id="63409-189">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="63409-190">Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="63409-190">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span></para></block>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="IsAuthenticated">
      <MemberSignature Language="C#" Value="public bool IsAuthenticated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAuthenticated" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.IsAuthenticated" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAuthenticated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAuthenticated { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAuthenticated : bool" Usage="System.Net.HttpListenerRequest.IsAuthenticated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO("Always returns false")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="63409-191">Obtiene un valor <see cref="T:System.Boolean" /> que indica si el cliente que envía esta solicitud está autenticado.</span><span class="sxs-lookup"><span data-stu-id="63409-191">Gets a <see cref="T:System.Boolean" /> value that indicates whether the client sending this request is authenticated.</span></span></summary>
        <value><span data-ttu-id="63409-192">Es <see langword="true" /> si se ha autenticado al cliente; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="63409-192"><see langword="true" /> if the client was authenticated; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63409-193">La aplicación solicita la autenticación de cliente mediante el <xref:System.Net.HttpListener.AuthenticationSchemes%2A> o <xref:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="63409-193">Your application requests client authentication using the <xref:System.Net.HttpListener.AuthenticationSchemes%2A> or <xref:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate%2A> property.</span></span>  
  
 <span data-ttu-id="63409-194">La aplicación no recibe un <xref:System.Net.HttpListenerContext> para solicitudes de clientes que no se ha autenticado correctamente.</span><span class="sxs-lookup"><span data-stu-id="63409-194">Your application does not receive an <xref:System.Net.HttpListenerContext> for requests from clients that are not successfully authenticated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="63409-195">En el ejemplo de código siguiente se muestra el valor de la <xref:System.Net.HttpListenerRequest.IsAuthenticated%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="63409-195">The following code example displays the value of the <xref:System.Net.HttpListenerRequest.IsAuthenticated%2A> property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#17](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="IsLocal">
      <MemberSignature Language="C#" Value="public bool IsLocal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLocal" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.IsLocal" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsLocal As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsLocal { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsLocal : bool" Usage="System.Net.HttpListenerRequest.IsLocal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="63409-196">Obtiene un valor <see cref="T:System.Boolean" /> que indica si la solicitud se envía desde el equipo local.</span><span class="sxs-lookup"><span data-stu-id="63409-196">Gets a <see cref="T:System.Boolean" /> value that indicates whether the request is sent from the local computer.</span></span></summary>
        <value><span data-ttu-id="63409-197">Es <see langword="true" /> si la solicitud se originó en el mismo equipo que el objeto <see cref="T:System.Net.HttpListener" /> que proporcionó la solicitud; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="63409-197"><see langword="true" /> if the request originated on the same computer as the <see cref="T:System.Net.HttpListener" /> object that provided the request; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63409-198">Aplicaciones pueden utilizar esta propiedad para realizar un procesamiento especial cuando las solicitudes proceden del equipo local.</span><span class="sxs-lookup"><span data-stu-id="63409-198">Applications can use this property to perform special processing when requests are from the local computer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="63409-199">En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Net.HttpListenerRequest.IsLocal%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="63409-199">The following code example demonstrates using the <xref:System.Net.HttpListenerRequest.IsLocal%2A> property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#17](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="IsSecureConnection">
      <MemberSignature Language="C#" Value="public bool IsSecureConnection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSecureConnection" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.IsSecureConnection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSecureConnection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSecureConnection { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSecureConnection : bool" Usage="System.Net.HttpListenerRequest.IsSecureConnection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="63409-200">Obtiene un valor <see cref="T:System.Boolean" /> que indica si la conexión TCP utilizada para enviar la solicitud está utilizando el protocolo Secure Sockets Layer (SSL).</span><span class="sxs-lookup"><span data-stu-id="63409-200">Gets a <see cref="T:System.Boolean" /> value that indicates whether the TCP connection used to send the request is using the Secure Sockets Layer (SSL) protocol.</span></span></summary>
        <value><span data-ttu-id="63409-201">Es <see langword="true" /> si la conexión TCP utiliza SSL; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="63409-201"><see langword="true" /> if the TCP connection is using SSL; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63409-202">Para solicitar una conexión segura, la solicitud de cliente utiliza <xref:System.Uri.UriSchemeHttps> en lugar de <xref:System.Uri.UriSchemeHttp>.</span><span class="sxs-lookup"><span data-stu-id="63409-202">To request a secure connection, the client request uses <xref:System.Uri.UriSchemeHttps> instead of <xref:System.Uri.UriSchemeHttp>.</span></span> <span data-ttu-id="63409-203">Si no se puede establecer la conexión mediante SSL, el cliente recibe un <xref:System.Net.WebException> que proporciona información sobre el error.</span><span class="sxs-lookup"><span data-stu-id="63409-203">If the connection cannot be established using SSL, the client receives a <xref:System.Net.WebException> that provides information about the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="63409-204">En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Net.HttpListenerRequest.IsSecureConnection%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="63409-204">The following code example demonstrates using the <xref:System.Net.HttpListenerRequest.IsSecureConnection%2A> property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#17](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="IsWebSocketRequest">
      <MemberSignature Language="C#" Value="public bool IsWebSocketRequest { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsWebSocketRequest" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.IsWebSocketRequest" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsWebSocketRequest As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsWebSocketRequest { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsWebSocketRequest : bool" Usage="System.Net.HttpListenerRequest.IsWebSocketRequest" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="63409-205">Obtiene un valor <see cref="T:System.Boolean" /> que indica si la conexión TCP fue una solicitud WebSocket.</span><span class="sxs-lookup"><span data-stu-id="63409-205">Gets a <see cref="T:System.Boolean" /> value that indicates whether the TCP connection was  a WebSocket request.</span></span></summary>
        <value><span data-ttu-id="63409-206">Devuelva <see cref="T:System.Boolean" />.</span><span class="sxs-lookup"><span data-stu-id="63409-206">Returns <see cref="T:System.Boolean" />.</span></span>  
  
 <span data-ttu-id="63409-207"><see langword="true" /> si la conexión TCP es una solicitud de WebSocket; si no, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="63409-207"><see langword="true" /> if the TCP connection is a WebSocket request; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeepAlive">
      <MemberSignature Language="C#" Value="public bool KeepAlive { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool KeepAlive" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.KeepAlive" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeepAlive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool KeepAlive { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.KeepAlive : bool" Usage="System.Net.HttpListenerRequest.KeepAlive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="63409-208">Obtiene un valor <see cref="T:System.Boolean" /> que indica si el cliente solicita una conexión persistente.</span><span class="sxs-lookup"><span data-stu-id="63409-208">Gets a <see cref="T:System.Boolean" /> value that indicates whether the client requests a persistent connection.</span></span></summary>
        <value><span data-ttu-id="63409-209">Es <see langword="true" /> si la conexión debe mantenerse abierta; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="63409-209"><see langword="true" /> if the connection should be kept open; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63409-210">Si un cliente HTTP y el servidor esperan intercambiar datos varias veces en un breve período de tiempo, una conexión persistente acelera la comunicación, por lo que les permite evitar la sobrecarga necesaria para abrir y cerrar una conexión TCP para cada mensaje.</span><span class="sxs-lookup"><span data-stu-id="63409-210">If an HTTP client and server expect to exchange data multiple times in a short time period, a persistent connection speeds up their communications by allowing them to avoid the overhead required to open and close a TCP connection for each message.</span></span> <span data-ttu-id="63409-211">Los clientes que usan HTTP/1.1, el valor predeterminado de esta propiedad es `true`.</span><span class="sxs-lookup"><span data-stu-id="63409-211">For clients using HTTP/1.1, the default value for this property is `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="63409-212">En el ejemplo de código siguiente se muestra cómo utilizar esta propiedad.</span><span class="sxs-lookup"><span data-stu-id="63409-212">The following code example demonstrates using this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#17](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="LocalEndPoint">
      <MemberSignature Language="C#" Value="public System.Net.IPEndPoint LocalEndPoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.IPEndPoint LocalEndPoint" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.LocalEndPoint" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LocalEndPoint As IPEndPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::IPEndPoint ^ LocalEndPoint { System::Net::IPEndPoint ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LocalEndPoint : System.Net.IPEndPoint" Usage="System.Net.HttpListenerRequest.LocalEndPoint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPEndPoint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="63409-213">Obtiene la dirección IP y el número de puerto del servidor a los que se dirige la solicitud.</span><span class="sxs-lookup"><span data-stu-id="63409-213">Gets the server IP address and port number to which the request is directed.</span></span></summary>
        <value><span data-ttu-id="63409-214">Un objeto <see cref="T:System.Net.IPEndPoint" /> que representa la dirección IP a la que se envía la solicitud.</span><span class="sxs-lookup"><span data-stu-id="63409-214">An <see cref="T:System.Net.IPEndPoint" /> that represents the IP address that the request is sent to.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63409-215">Esta propiedad es útil cuando desea responder a las solicitudes según el modo en que se examinarán.</span><span class="sxs-lookup"><span data-stu-id="63409-215">This property is useful when you want to respond to requests based on the way they are addressed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="63409-216">En el ejemplo de código siguiente se muestra cómo utilizar esta propiedad.</span><span class="sxs-lookup"><span data-stu-id="63409-216">The following code example demonstrates using this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#17](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="ProtocolVersion">
      <MemberSignature Language="C#" Value="public Version ProtocolVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version ProtocolVersion" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.ProtocolVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProtocolVersion As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Version ^ ProtocolVersion { Version ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ProtocolVersion : Version" Usage="System.Net.HttpListenerRequest.ProtocolVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="63409-217">Obtiene la versión de HTTP utilizada por el cliente que hace la solicitud.</span><span class="sxs-lookup"><span data-stu-id="63409-217">Gets the HTTP version used by the requesting client.</span></span></summary>
        <value><span data-ttu-id="63409-218">Un objeto <see cref="T:System.Version" /> que identifica la versión del cliente de HTTP.</span><span class="sxs-lookup"><span data-stu-id="63409-218">A <see cref="T:System.Version" /> that identifies the client's version of HTTP.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63409-219">Las capacidades de diferentes versiones de HTTP se especifican en los documentos disponibles en [ https://www.rfc-editor.org ](https://www.rfc-editor.org/).</span><span class="sxs-lookup"><span data-stu-id="63409-219">The capabilities of different HTTP versions are specified in the documents available at [https://www.rfc-editor.org](https://www.rfc-editor.org/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="63409-220">En el ejemplo de código siguiente se muestra cómo utilizar esta propiedad.</span><span class="sxs-lookup"><span data-stu-id="63409-220">The following code example demonstrates using this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#17](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="QueryString">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.NameValueCollection QueryString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameValueCollection QueryString" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.QueryString" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property QueryString As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::NameValueCollection ^ QueryString { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.QueryString : System.Collections.Specialized.NameValueCollection" Usage="System.Net.HttpListenerRequest.QueryString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="63409-221">Obtiene la cadena de consulta incluida en la solicitud.</span><span class="sxs-lookup"><span data-stu-id="63409-221">Gets the query string included in the request.</span></span></summary>
        <value><span data-ttu-id="63409-222">Un objeto <see cref="T:System.Collections.Specialized.NameValueCollection" /> que contiene los datos de consulta incluidos en la solicitud <see cref="P:System.Net.HttpListenerRequest.Url" />.</span><span class="sxs-lookup"><span data-stu-id="63409-222">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> object that contains the query data included in the request <see cref="P:System.Net.HttpListenerRequest.Url" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63409-223">En una dirección URL, la información de consulta está separada de la información de ruta de acceso por un signo de interrogación (?).</span><span class="sxs-lookup"><span data-stu-id="63409-223">In a URL, the query information is separated from the path information by a question mark (?).</span></span> <span data-ttu-id="63409-224">Pares nombre/valor están separados por un signo igual (=).</span><span class="sxs-lookup"><span data-stu-id="63409-224">Name/value pairs are separated by an equals sign (=).</span></span> <span data-ttu-id="63409-225">Para obtener acceso a los datos de consulta como una cadena única, obtenga el <xref:System.Uri.Query%2A> valor de propiedad de la <xref:System.Uri> objeto devuelto por <xref:System.Net.HttpListenerRequest.Url%2A>.</span><span class="sxs-lookup"><span data-stu-id="63409-225">To access the query data as a single string, get the <xref:System.Uri.Query%2A> property value from the <xref:System.Uri> object returned by <xref:System.Net.HttpListenerRequest.Url%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="63409-226">Las consultas sin un signo igual (ejemplo: [ http://www.contoso.com/query.htm?Name ](http://www.contoso.com/query.htm?Name) ) se agregan a la `null` clave en el <xref:System.Collections.Specialized.NameValueCollection>.</span><span class="sxs-lookup"><span data-stu-id="63409-226">Queries without an equal sign (example: [http://www.contoso.com/query.htm?Name](http://www.contoso.com/query.htm?Name) ) are added to the `null` key in the <xref:System.Collections.Specialized.NameValueCollection>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="63409-227">En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Net.HttpListenerRequest.QueryString%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="63409-227">The following code example demonstrates using the <xref:System.Net.HttpListenerRequest.QueryString%2A> property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#15](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="RawUrl">
      <MemberSignature Language="C#" Value="public string RawUrl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RawUrl" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.RawUrl" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RawUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RawUrl { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RawUrl : string" Usage="System.Net.HttpListenerRequest.RawUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="63409-228">Obtiene la información de la dirección URL (sin el host y el puerto) solicitada por el cliente.</span><span class="sxs-lookup"><span data-stu-id="63409-228">Gets the URL information (without the host and port) requested by the client.</span></span></summary>
        <value><span data-ttu-id="63409-229">Un valor <see cref="T:System.String" /> que contiene la dirección URL original para esta solicitud.</span><span class="sxs-lookup"><span data-stu-id="63409-229">A <see cref="T:System.String" /> that contains the raw URL for this request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63409-230">La dirección URL sin procesar se define como parte de la dirección URL siguiendo la información de dominio.</span><span class="sxs-lookup"><span data-stu-id="63409-230">The raw URL is defined as the part of the URL following the domain information.</span></span> <span data-ttu-id="63409-231">En la cadena de dirección URL `http://www.contoso.com/articles/recent.aspx`, la dirección URL sin procesar es `/articles/recent.aspx`.</span><span class="sxs-lookup"><span data-stu-id="63409-231">In the URL string `http://www.contoso.com/articles/recent.aspx`, the raw URL is `/articles/recent.aspx`.</span></span> <span data-ttu-id="63409-232">Dirección URL original incluye la cadena de consulta, si está presente.</span><span class="sxs-lookup"><span data-stu-id="63409-232">The raw URL includes the query string, if present.</span></span>  
  
 <span data-ttu-id="63409-233">Para obtener la información de host y puerto, use la <xref:System.Net.HttpListenerRequest.RemoteEndPoint%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="63409-233">To obtain the host and port information, use the <xref:System.Net.HttpListenerRequest.RemoteEndPoint%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="63409-234">En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Net.HttpListenerRequest.RawUrl%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="63409-234">The following code example demonstrates using the <xref:System.Net.HttpListenerRequest.RawUrl%2A> property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#11](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="RemoteEndPoint">
      <MemberSignature Language="C#" Value="public System.Net.IPEndPoint RemoteEndPoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.IPEndPoint RemoteEndPoint" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.RemoteEndPoint" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RemoteEndPoint As IPEndPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::IPEndPoint ^ RemoteEndPoint { System::Net::IPEndPoint ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RemoteEndPoint : System.Net.IPEndPoint" Usage="System.Net.HttpListenerRequest.RemoteEndPoint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPEndPoint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="63409-235">Obtiene la dirección IP y el número de puerto de cliente desde los que se originó la solicitud.</span><span class="sxs-lookup"><span data-stu-id="63409-235">Gets the client IP address and port number from which the request originated.</span></span></summary>
        <value><span data-ttu-id="63409-236">Un objeto <see cref="T:System.Net.IPEndPoint" /> que representa la dirección IP y el número de puerto desde los que se originó la solicitud.</span><span class="sxs-lookup"><span data-stu-id="63409-236">An <see cref="T:System.Net.IPEndPoint" /> that represents the IP address and port number from which the request originated.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="63409-237">En el ejemplo de código siguiente se muestra cómo utilizar esta propiedad.</span><span class="sxs-lookup"><span data-stu-id="63409-237">The following code example demonstrates using this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#17](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="RequestTraceIdentifier">
      <MemberSignature Language="C#" Value="public Guid RequestTraceIdentifier { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid RequestTraceIdentifier" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.RequestTraceIdentifier" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RequestTraceIdentifier As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid RequestTraceIdentifier { Guid get(); };" />
      <MemberSignature Language="F#" Value="member this.RequestTraceIdentifier : Guid" Usage="System.Net.HttpListenerRequest.RequestTraceIdentifier" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO("Always returns Guid.Empty")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="63409-238">Obtiene el identificador de la solicitud HTTP de entrada.</span><span class="sxs-lookup"><span data-stu-id="63409-238">Gets the request identifier of the incoming HTTP request.</span></span></summary>
        <value><span data-ttu-id="63409-239">Un objeto <see cref="T:System.Guid" /> que contiene el identificador de la solicitud HTTP.</span><span class="sxs-lookup"><span data-stu-id="63409-239">A <see cref="T:System.Guid" /> object that contains the identifier of the HTTP request.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceName">
      <MemberSignature Language="C#" Value="public string ServiceName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ServiceName" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.ServiceName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServiceName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ServiceName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ServiceName : string" Usage="System.Net.HttpListenerRequest.ServiceName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="63409-240">Obtiene el nombre del proveedor de servicios (SPN) que el cliente envió en la solicitud.</span><span class="sxs-lookup"><span data-stu-id="63409-240">Gets the Service Provider Name (SPN) that the client sent on the request.</span></span></summary>
        <value><span data-ttu-id="63409-241">Objeto <see cref="T:System.String" /> que contiene el SPN que el cliente envió en la solicitud.</span><span class="sxs-lookup"><span data-stu-id="63409-241">A <see cref="T:System.String" /> that contains the SPN the client sent on the request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63409-242">Una aplicación podría utilizar el <xref:System.Net.HttpListenerRequest.ServiceName%2A> propiedad que se va a realizar la validación personalizada de nombre proporcionar servicio (SPN).</span><span class="sxs-lookup"><span data-stu-id="63409-242">An application could use the <xref:System.Net.HttpListenerRequest.ServiceName%2A> property to perform custom Service Provide Name (SPN) validation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.HttpListener.DefaultServiceNames" />
        <altmember cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" />
        <altmember cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" />
        <altmember cref="T:System.Net.HttpListener.ExtendedProtectionSelector" />
        <altmember cref="P:System.Net.HttpListenerRequest.TransportContext" />
        <altmember cref="N:System.Security.Authentication.ExtendedProtection" />
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md"><span data-ttu-id="63409-243">Autenticación de Windows integrada con protección ampliada</span><span class="sxs-lookup"><span data-stu-id="63409-243">Integrated Windows Authentication with Extended Protection</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TransportContext">
      <MemberSignature Language="C#" Value="public System.Net.TransportContext TransportContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.TransportContext TransportContext" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.TransportContext" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TransportContext As TransportContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::TransportContext ^ TransportContext { System::Net::TransportContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TransportContext : System.Net.TransportContext" Usage="System.Net.HttpListenerRequest.TransportContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.TransportContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="63409-244">Obtiene el objeto <see cref="T:System.Net.TransportContext" /> de la solicitud de cliente.</span><span class="sxs-lookup"><span data-stu-id="63409-244">Gets the <see cref="T:System.Net.TransportContext" /> for the client request.</span></span></summary>
        <value><span data-ttu-id="63409-245">Objeto <see cref="T:System.Net.TransportContext" /> de la solicitud de cliente.</span><span class="sxs-lookup"><span data-stu-id="63409-245">A <see cref="T:System.Net.TransportContext" /> object for the client request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63409-246">El <xref:System.Net.TransportContext> propiedad puede usarse para recuperar el token de enlace de canal (CBT) para un <xref:System.Net.HttpListenerRequest> que se envió mediante HTTPS.</span><span class="sxs-lookup"><span data-stu-id="63409-246">The <xref:System.Net.TransportContext> property can be used to retrieve the channel binding token (CBT) for an <xref:System.Net.HttpListenerRequest> which was sent using HTTPS.</span></span>  
  
 <span data-ttu-id="63409-247">Una aplicación podría utilizar el <xref:System.Net.TransportContext> propiedad para realizar la autenticación personalizada mediante llamadas a Win32 nativo [AcceptSecurityContext](https://go.microsoft.com/fwlink/?LinkId=147021) función.</span><span class="sxs-lookup"><span data-stu-id="63409-247">An application could use the <xref:System.Net.TransportContext> property to perform custom authentication using calls to the native Win32 [AcceptSecurityContext](https://go.microsoft.com/fwlink/?LinkId=147021) function.</span></span>  
  
 <span data-ttu-id="63409-248">Si una aplicación intenta recuperar el token de enlace de canal (CBT) de este <xref:System.Net.HttpListenerRequest.TransportContext%2A> propiedad mediante el <xref:System.Net.TransportContext.GetChannelBinding%2A> método y el <xref:System.Security.Authentication.ExtendedProtection.ChannelBindingKind> no <xref:System.Security.Authentication.ExtendedProtection.ChannelBindingKind.Endpoint>, el <xref:System.Net.HttpListenerRequest> producirá <xref:System.NotSupportedException>.</span><span class="sxs-lookup"><span data-stu-id="63409-248">If an application attempts to retrieve the channel binding token (CBT) from this <xref:System.Net.HttpListenerRequest.TransportContext%2A> property using the <xref:System.Net.TransportContext.GetChannelBinding%2A> method and the <xref:System.Security.Authentication.ExtendedProtection.ChannelBindingKind> is not <xref:System.Security.Authentication.ExtendedProtection.ChannelBindingKind.Endpoint>, then the <xref:System.Net.HttpListenerRequest> will throw <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="63409-249">El <xref:System.Net.HttpListenerRequest> invalida la <xref:System.Net.TransportContext.GetChannelBinding%2A> método con una implementación interna.</span><span class="sxs-lookup"><span data-stu-id="63409-249">The <xref:System.Net.HttpListenerRequest> overrides the <xref:System.Net.TransportContext.GetChannelBinding%2A> method with an internal implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.HttpListener.DefaultServiceNames" />
        <altmember cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" />
        <altmember cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" />
        <altmember cref="T:System.Net.HttpListener.ExtendedProtectionSelector" />
        <altmember cref="P:System.Net.HttpListenerRequest.ServiceName" />
        <altmember cref="N:System.Security.Authentication.ExtendedProtection" />
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md"><span data-ttu-id="63409-250">Autenticación de Windows integrada con protección ampliada</span><span class="sxs-lookup"><span data-stu-id="63409-250">Integrated Windows Authentication with Extended Protection</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Url">
      <MemberSignature Language="C#" Value="public Uri Url { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Url" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.Url" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Url As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ Url { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Url : Uri" Usage="System.Net.HttpListenerRequest.Url" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="63409-251">Obtiene el objeto <see cref="T:System.Uri" /> solicitado por el cliente.</span><span class="sxs-lookup"><span data-stu-id="63409-251">Gets the <see cref="T:System.Uri" /> object requested by the client.</span></span></summary>
        <value><span data-ttu-id="63409-252">Un objeto <see cref="T:System.Uri" /> que identifica el recurso solicitado por el cliente.</span><span class="sxs-lookup"><span data-stu-id="63409-252">A <see cref="T:System.Uri" /> object that identifies the resource requested by the client.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63409-253">El <xref:System.Net.HttpListenerRequest.Url%2A> propiedad le permite obtener toda la información disponible en un <xref:System.Uri> objeto.</span><span class="sxs-lookup"><span data-stu-id="63409-253">The <xref:System.Net.HttpListenerRequest.Url%2A> property allows you to obtain all the information available from a <xref:System.Uri> object.</span></span> <span data-ttu-id="63409-254">Si necesita saber sólo el texto sin formato de la solicitud URI, considere el uso de la <xref:System.Net.HttpListenerRequest.RawUrl%2A> propiedad en su lugar.</span><span class="sxs-lookup"><span data-stu-id="63409-254">If you need to know only the raw text of the URI request, consider using the <xref:System.Net.HttpListenerRequest.RawUrl%2A> property instead.</span></span>  
  
 <span data-ttu-id="63409-255">El <xref:System.Net.HttpListenerRequest.Url%2A> propiedad es null si el <xref:System.Uri> desde el cliente no se pudo analizar.</span><span class="sxs-lookup"><span data-stu-id="63409-255">The <xref:System.Net.HttpListenerRequest.Url%2A> property is null if the <xref:System.Uri> from the client could not be parsed.</span></span>  
  
 <span data-ttu-id="63409-256">El <xref:System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl%2A> propiedad indica si <xref:System.Net.HttpListener> usa el URI sin secuencias de escape de formato en lugar del URI convertido donde se convierten los valores codificados por porcentaje y se realizan otros pasos de normalización.</span><span class="sxs-lookup"><span data-stu-id="63409-256">The <xref:System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl%2A> property indicates if <xref:System.Net.HttpListener> uses the raw unescaped URI instead of the converted URI where any percent-encoded values are converted and other normalization steps are taken.</span></span>  
  
 <span data-ttu-id="63409-257">Cuando un <xref:System.Net.HttpListener> instancia recibe una solicitud a través de la `http.sys` servicio, crea una instancia de la cadena URI proporcionada por `http.sys`y lo expone como la <xref:System.Net.HttpListenerRequest.Url%2A?displayProperty=nameWithType> propiedad.</span><span class="sxs-lookup"><span data-stu-id="63409-257">When a <xref:System.Net.HttpListener> instance receives a request through the `http.sys` service, it creates an instance of the URI string provided by `http.sys`, and exposes it as the <xref:System.Net.HttpListenerRequest.Url%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="63409-258">El `http.sys` servicio expone dos cadenas de identificador URI de solicitud:</span><span class="sxs-lookup"><span data-stu-id="63409-258">The `http.sys` service exposes two request URI strings:</span></span>  
  
-   <span data-ttu-id="63409-259">URI sin formato</span><span class="sxs-lookup"><span data-stu-id="63409-259">Raw URI</span></span>  
  
-   <span data-ttu-id="63409-260">URI convertido</span><span class="sxs-lookup"><span data-stu-id="63409-260">Converted URI</span></span>  
  
 <span data-ttu-id="63409-261">El URI sin procesar es el <xref:System.Uri?displayProperty=nameWithType> proporcionado en la línea de solicitud de una solicitud HTTP:</span><span class="sxs-lookup"><span data-stu-id="63409-261">The raw URI is the <xref:System.Uri?displayProperty=nameWithType> provided in the request line of a HTTP request:</span></span>  
  
 `GET /path/`  
  
 `Host: www.contoso.com`  
  
 <span data-ttu-id="63409-262">El URI sin formato proporcionado por `http.sys` para la solicitud se ha mencionado anteriormente, es "/ path /".</span><span class="sxs-lookup"><span data-stu-id="63409-262">The raw URI provided by `http.sys` for the request mentioned above, is "/path/".</span></span> <span data-ttu-id="63409-263">Representa la cadena que sigue el verbo HTTP que se enviaron a través de la red.</span><span class="sxs-lookup"><span data-stu-id="63409-263">This represents the string following the HTTP verb as it was sent over the network.</span></span>  
  
 <span data-ttu-id="63409-264">El `http.sys` servicio crea un URI convertido de la información proporcionada en la solicitud usando el URI proporcionado en la línea de solicitud HTTP y el encabezado de Host para determinar el servidor de origen de la solicitud debe reenviarse al.</span><span class="sxs-lookup"><span data-stu-id="63409-264">The `http.sys` service creates a converted URI from the information provided in the request using the URI provided in the HTTP request line and the Host header to determine the origin server the request should be forwarded to.</span></span> <span data-ttu-id="63409-265">Esto se hace mediante la comparación de la información de la solicitud con un conjunto de prefijos URI registrados.</span><span class="sxs-lookup"><span data-stu-id="63409-265">This is done by comparing the information from the request with a set of registered URI prefixes.</span></span> <span data-ttu-id="63409-266">Para poder comparar esos valores, debe realizarse alguna normalización de la solicitud.</span><span class="sxs-lookup"><span data-stu-id="63409-266">In order to be able to compare those values, some normalization to the request needs to be done.</span></span> <span data-ttu-id="63409-267">Para el ejemplo anterior del URI convertido sería como sigue:</span><span class="sxs-lookup"><span data-stu-id="63409-267">For the sample above the converted URI would be as follows:</span></span>  
  
 `http://www.contoso.com/path/`  
  
 <span data-ttu-id="63409-268">El `http.sys` servicio combina el <xref:System.Uri.Host%2A?displayProperty=nameWithType> valor de propiedad y la cadena en la línea de solicitud para crear un URI convertido.</span><span class="sxs-lookup"><span data-stu-id="63409-268">The `http.sys` service combines the <xref:System.Uri.Host%2A?displayProperty=nameWithType> property value and the string in the request line to create a converted URI.</span></span> <span data-ttu-id="63409-269">Además, `http.sys` y <xref:System.Uri?displayProperty=nameWithType> clase también haga lo siguiente:</span><span class="sxs-lookup"><span data-stu-id="63409-269">In addition, `http.sys` and the <xref:System.Uri?displayProperty=nameWithType> class also do the following:</span></span>  
  
-   <span data-ttu-id="63409-270">Escapes de Naciones Unidas por ciento de todos los valores codificados.</span><span class="sxs-lookup"><span data-stu-id="63409-270">Un-escapes all percent encoded values.</span></span>  
  
-   <span data-ttu-id="63409-271">Caracteres no ASCII de codificación de porcentaje se convierte en una representación de caracteres UTF-16.</span><span class="sxs-lookup"><span data-stu-id="63409-271">Converts percent-encoded non-ASCII characters into a UTF-16 character representation.</span></span> <span data-ttu-id="63409-272">Tenga en cuenta que se admiten caracteres UTF-8 y ANSI/DBCS, así como caracteres Unicode (codificación Unicode con el formato % uXXXX).</span><span class="sxs-lookup"><span data-stu-id="63409-272">Note that UTF-8 and ANSI/DBCS characters are supported as well as Unicode characters (Unicode encoding using the %uXXXX format).</span></span>  
  
-   <span data-ttu-id="63409-273">Ejecuta otros pasos de normalización, como la compresión de la ruta de acceso.</span><span class="sxs-lookup"><span data-stu-id="63409-273">Executes other normalization steps, like path compression.</span></span>  
  
 <span data-ttu-id="63409-274">Puesto que la solicitud no contiene toda la información sobre la codificación utilizada para los valores codificados por porcentaje, no puede ser posible determinar la codificación correcta simplemente analizando los valores codificados por porcentaje.</span><span class="sxs-lookup"><span data-stu-id="63409-274">Since the request doesn't contain any information about the encoding used for percent-encoded values, it may not be possible to determine the correct encoding just by parsing the percent-encoded values.</span></span>  
  
 <span data-ttu-id="63409-275">Por lo tanto, `http.sys` proporciona dos claves del registro para modificar el proceso:</span><span class="sxs-lookup"><span data-stu-id="63409-275">Therefore `http.sys` provides two registry keys for modifying the process:</span></span>  
  
|<span data-ttu-id="63409-276">Clave del Registro</span><span class="sxs-lookup"><span data-stu-id="63409-276">Registry Key</span></span>|<span data-ttu-id="63409-277">Valor predeterminado</span><span class="sxs-lookup"><span data-stu-id="63409-277">Default Value</span></span>|<span data-ttu-id="63409-278">Descripción</span><span class="sxs-lookup"><span data-stu-id="63409-278">Description</span></span>|  
|------------------|-------------------|-----------------|  
|<span data-ttu-id="63409-279">EnableNonUTF8</span><span class="sxs-lookup"><span data-stu-id="63409-279">EnableNonUTF8</span></span>|<span data-ttu-id="63409-280">1</span><span class="sxs-lookup"><span data-stu-id="63409-280">1</span></span>|<span data-ttu-id="63409-281">Si es cero, `http.sys` acepta solo direcciones URL codificado en UTF-8.</span><span class="sxs-lookup"><span data-stu-id="63409-281">If zero, `http.sys` accepts only UTF-8-encoded URLs.</span></span><br /><br /> <span data-ttu-id="63409-282">Si es distinto de cero, `http.sys` también acepta direcciones URL de la codificación ANSI o codificación DBCS en las solicitudes.</span><span class="sxs-lookup"><span data-stu-id="63409-282">If non-zero, `http.sys` also accepts ANSI-encoded or DBCS-encoded URLs in requests.</span></span>|  
|<span data-ttu-id="63409-283">FavorUTF8</span><span class="sxs-lookup"><span data-stu-id="63409-283">FavorUTF8</span></span>|<span data-ttu-id="63409-284">1</span><span class="sxs-lookup"><span data-stu-id="63409-284">1</span></span>|<span data-ttu-id="63409-285">Si es distinto de cero, `http.sys` siempre intenta descodificar una dirección URL como UTF-8 en primer lugar; si se produce un error en esa conversión y EnableNonUTF8 es distinto de cero, Http.sys, a continuación, intenta descodificarlo como ANSI o DBCS.</span><span class="sxs-lookup"><span data-stu-id="63409-285">If non-zero, `http.sys` always tries to decode a URL as UTF-8 first; if that conversion fails and EnableNonUTF8 is non-zero, Http.sys then tries to decode it as ANSI or DBCS.</span></span><br /><br /> <span data-ttu-id="63409-286">Si es cero (y EnableNonUTF8 es distinto de cero), `http.sys` intenta descodificarlo como ANSI o DBCS; si no se realiza correctamente, trata de una conversión de UTF-8.</span><span class="sxs-lookup"><span data-stu-id="63409-286">If zero (and EnableNonUTF8 is non-zero), `http.sys` tries to decode it as ANSI or DBCS; if that is not successful, it tries a UTF-8 conversion.</span></span>|  
  
 <span data-ttu-id="63409-287">Cuando <xref:System.Net.HttpListener> recibe una solicitud, usa el URI convertido de `http.sys` como entrada el <xref:System.Net.HttpListenerRequest.Url%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="63409-287">When <xref:System.Net.HttpListener> receives a request, it uses the converted URI from `http.sys` as input to the <xref:System.Net.HttpListenerRequest.Url%2A> property.</span></span>  
  
 <span data-ttu-id="63409-288">Es necesario para admitir caracteres además de los caracteres y números en los URI.</span><span class="sxs-lookup"><span data-stu-id="63409-288">There is a need for supporting characters besides characters and numbers in URIs.</span></span> <span data-ttu-id="63409-289">Un ejemplo es el URI siguiente, que se usa para recuperar información del cliente para el cliente número "1/3812":</span><span class="sxs-lookup"><span data-stu-id="63409-289">An example is the following URI, which is used to retrieve customer information for customer number "1/3812":</span></span>  
  
 `http://www.contoso.com/Customer('1%2F3812')/`  
  
 <span data-ttu-id="63409-290">Tenga en cuenta la barra diagonal codificada por porcentaje en el Uri (% 2F).</span><span class="sxs-lookup"><span data-stu-id="63409-290">Note the percent-encoded slash in the Uri (%2F).</span></span> <span data-ttu-id="63409-291">Esto es necesario, ya que en este caso el carácter de barra diagonal representa los datos y no un delimitador de ruta de acceso.</span><span class="sxs-lookup"><span data-stu-id="63409-291">This is necessary, since in this case the slash character represents data and not a path delimiter.</span></span>  
  
 <span data-ttu-id="63409-292">Pasar la cadena al constructor Uri dará lugar al URI siguiente:</span><span class="sxs-lookup"><span data-stu-id="63409-292">Passing the string to Uri constructor will lead to the following URI:</span></span>  
  
 `http://www.contoso.com/Customer('1/3812')/`  
  
 <span data-ttu-id="63409-293">Dividir la ruta de acceso en sus segmentos daría lugar a los siguientes elementos:</span><span class="sxs-lookup"><span data-stu-id="63409-293">Splitting the path into its segments would result in the following elements:</span></span>  
  
 `Customer('1`  
  
 `3812')`  
  
 <span data-ttu-id="63409-294">Esto no es la intención del remitente de la solicitud.</span><span class="sxs-lookup"><span data-stu-id="63409-294">This is not the intent of the sender of the request.</span></span>  
  
 <span data-ttu-id="63409-295">Si el <xref:System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl%2A> propiedad está establecida en false, entonces, cuando el <xref:System.Net.HttpListener> recibe una solicitud, usa el URI sin formato en lugar del URI convertido de `http.sys` como entrada el <xref:System.Net.HttpListenerRequest.Url%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="63409-295">If the <xref:System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl%2A> property is set to false, then when the <xref:System.Net.HttpListener> receives a request, it uses the raw URI instead of the converted URI from `http.sys` as input to the <xref:System.Net.HttpListenerRequest.Url%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="63409-296">En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Net.HttpListenerRequest.Url%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="63409-296">The following code example demonstrates using the <xref:System.Net.HttpListenerRequest.Url%2A> property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#15](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Configuration.HttpListenerElement" />
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/network/index.md"><span data-ttu-id="63409-297">Esquema de la configuración de red</span><span class="sxs-lookup"><span data-stu-id="63409-297">Network Settings Schema</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/62f121fd-3f2e-4033-bb39-48ae996bfbd9"><span data-ttu-id="63409-298">&lt;httpListener&gt; elemento (configuración de red)</span><span class="sxs-lookup"><span data-stu-id="63409-298">&lt;httpListener&gt; Element (Network Settings)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="UrlReferrer">
      <MemberSignature Language="C#" Value="public Uri UrlReferrer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri UrlReferrer" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.UrlReferrer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UrlReferrer As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ UrlReferrer { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UrlReferrer : Uri" Usage="System.Net.HttpListenerRequest.UrlReferrer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="63409-299">Obtiene el identificador URI del recurso que remitió el cliente al servidor.</span><span class="sxs-lookup"><span data-stu-id="63409-299">Gets the Uniform Resource Identifier (URI) of the resource that referred the client to the server.</span></span></summary>
        <value><span data-ttu-id="63409-300">Un objeto <see cref="T:System.Uri" /> que contiene el texto del encabezado <see cref="F:System.Net.HttpRequestHeader.Referer" /> de la solicitud o bien <see langword="null" />, si el encabezado no estaba incluido en la solicitud.</span><span class="sxs-lookup"><span data-stu-id="63409-300">A <see cref="T:System.Uri" /> object that contains the text of the request's <see cref="F:System.Net.HttpRequestHeader.Referer" /> header, or <see langword="null" /> if the header was not included in the request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63409-301">Si un cliente ha seguido un hipervínculo al URI solicitado, su solicitud podría contener un `Referrer` encabezado que identifica el URI del recurso que contenía el hipervínculo.</span><span class="sxs-lookup"><span data-stu-id="63409-301">If a client has followed a hyperlink to the requested URI, its request might contain a `Referrer` header that identifies the URI of the resource that contained the hyperlink.</span></span>  
  
 <span data-ttu-id="63409-302">Los clientes pueden falsificar o elija no presentar un <xref:System.Net.HttpRequestHeader.Referer> encabezado.</span><span class="sxs-lookup"><span data-stu-id="63409-302">Clients can falsify or choose not to present a <xref:System.Net.HttpRequestHeader.Referer> header.</span></span> <span data-ttu-id="63409-303">Por tanto, mientras el <xref:System.Net.HttpListenerRequest.UrlReferrer%2A> propiedad puede ser útil para identificar las tendencias básicas del tráfico Web; no debe usarlo como parte de un esquema de autorización para controlar el acceso a datos.</span><span class="sxs-lookup"><span data-stu-id="63409-303">Therefore, while the <xref:System.Net.HttpListenerRequest.UrlReferrer%2A> property can be useful for identifying basic trends in Web traffic; you should not use it as part of an authorization scheme to control access to data.</span></span>  
  
 <span data-ttu-id="63409-304">Para obtener una lista completa de los encabezados de solicitud, consulte el <xref:System.Net.HttpRequestHeader> enumeración.</span><span class="sxs-lookup"><span data-stu-id="63409-304">For a complete list of request headers, see the <xref:System.Net.HttpRequestHeader> enumeration.</span></span>  
  
 <span data-ttu-id="63409-305">El <xref:System.Net.HttpListenerRequest.UrlReferrer%2A> es null cuando no hay ningún `Referrer` encabezado de la solicitud o cuando el `Referrer` encabezado está presente en la solicitud pero no se analiza como válido <xref:System.Uri>.</span><span class="sxs-lookup"><span data-stu-id="63409-305">The <xref:System.Net.HttpListenerRequest.UrlReferrer%2A> is null when there is no `Referrer` header in the request or when the `Referrer` header is present in the request but does not parse to a valid <xref:System.Uri>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="63409-306">En el ejemplo de código siguiente se muestra cómo utilizar esta propiedad.</span><span class="sxs-lookup"><span data-stu-id="63409-306">The following code example demonstrates using this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#15](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="UserAgent">
      <MemberSignature Language="C#" Value="public string UserAgent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserAgent" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.UserAgent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserAgent As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserAgent { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserAgent : string" Usage="System.Net.HttpListenerRequest.UserAgent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="63409-307">Obtiene el agente de usuario presentado por el cliente.</span><span class="sxs-lookup"><span data-stu-id="63409-307">Gets the user agent presented by the client.</span></span></summary>
        <value><span data-ttu-id="63409-308">Un objeto <see cref="T:System.String" /> que contiene el texto del encabezado <see langword="User-Agent" /> de la solicitud.</span><span class="sxs-lookup"><span data-stu-id="63409-308">A <see cref="T:System.String" /> object that contains the text of the request's <see langword="User-Agent" /> header.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63409-309">El `User-Agent` encabezado suele contener el texto que identifica el nombre y número de versión del software que se usa para generar la solicitud.</span><span class="sxs-lookup"><span data-stu-id="63409-309">The `User-Agent` header typically contains text that identifies the name and version number of the software used to generate the request.</span></span>  
  
 <span data-ttu-id="63409-310">Para obtener una lista completa de los encabezados de solicitud, consulte el <xref:System.Net.HttpRequestHeader> enumeración.</span><span class="sxs-lookup"><span data-stu-id="63409-310">For a complete list of request headers, see the <xref:System.Net.HttpRequestHeader> enumeration.</span></span>  
  
 <span data-ttu-id="63409-311">El <xref:System.Net.HttpListenerRequest.UserAgent%2A> es null cuando no hay ningún `User-Agent` encabezado de la solicitud.</span><span class="sxs-lookup"><span data-stu-id="63409-311">The <xref:System.Net.HttpListenerRequest.UserAgent%2A> is null when there is no `User-Agent` header in the request.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="63409-312">En el ejemplo de código siguiente se muestra cómo utilizar esta propiedad.</span><span class="sxs-lookup"><span data-stu-id="63409-312">The following code example demonstrates using this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#15](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="UserHostAddress">
      <MemberSignature Language="C#" Value="public string UserHostAddress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserHostAddress" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.UserHostAddress" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserHostAddress As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserHostAddress { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserHostAddress : string" Usage="System.Net.HttpListenerRequest.UserHostAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="63409-313">Obtiene la dirección IP y el número de puerto del servidor a los que se dirige la solicitud.</span><span class="sxs-lookup"><span data-stu-id="63409-313">Gets the server IP address and port number to which the request is directed.</span></span></summary>
        <value><span data-ttu-id="63409-314">Un valor <see cref="T:System.String" /> que contiene información de la dirección del host.</span><span class="sxs-lookup"><span data-stu-id="63409-314">A <see cref="T:System.String" /> that contains the host address information.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63409-315">La información devuelta por esta propiedad también está disponible en el <xref:System.Net.HttpListenerRequest.LocalEndPoint%2A> valor de propiedad.</span><span class="sxs-lookup"><span data-stu-id="63409-315">The information returned by this property is also available in the <xref:System.Net.HttpListenerRequest.LocalEndPoint%2A> property value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="63409-316">En el ejemplo de código siguiente se muestra el valor de esta propiedad.</span><span class="sxs-lookup"><span data-stu-id="63409-316">The following code example displays the value of this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#15](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="UserHostName">
      <MemberSignature Language="C#" Value="public string UserHostName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserHostName" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.UserHostName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserHostName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserHostName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserHostName : string" Usage="System.Net.HttpListenerRequest.UserHostName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="63409-317">Obtiene el nombre DNS y, si se proporciona, el número de puerto especificado por el cliente.</span><span class="sxs-lookup"><span data-stu-id="63409-317">Gets the DNS name and, if provided, the port number specified by the client.</span></span></summary>
        <value><span data-ttu-id="63409-318">Un valor <see cref="T:System.String" /> que contiene el texto del encabezado <see langword="Host" /> de la solicitud.</span><span class="sxs-lookup"><span data-stu-id="63409-318">A <see cref="T:System.String" /> value that contains the text of the request's <see langword="Host" /> header.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63409-319">El `Host` encabezado contiene el nombre de host de servidor solicitada y número de puerto, si se especifica, separados por dos puntos (por ejemplo, `www.contoso.com:8080`).</span><span class="sxs-lookup"><span data-stu-id="63409-319">The `Host` header contains the requested server host name and port number, if specified, separated by a colon (for example, `www.contoso.com:8080`).</span></span>  
  
 <span data-ttu-id="63409-320">Puede utilizar esta propiedad para devolver respuestas diferentes según el nombre de host especificado en la solicitud.</span><span class="sxs-lookup"><span data-stu-id="63409-320">You can use this property to return different responses depending on the host name specified in the request.</span></span>  
  
 <span data-ttu-id="63409-321">Para obtener una lista completa de los encabezados de solicitud, consulte el <xref:System.Net.HttpRequestHeader> enumeración.</span><span class="sxs-lookup"><span data-stu-id="63409-321">For a complete list of request headers, see the <xref:System.Net.HttpRequestHeader> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="63409-322">En el ejemplo de código siguiente se muestra cómo utilizar esta propiedad.</span><span class="sxs-lookup"><span data-stu-id="63409-322">The following code example demonstrates using this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#15](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="UserLanguages">
      <MemberSignature Language="C#" Value="public string[] UserLanguages { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] UserLanguages" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.UserLanguages" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserLanguages As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ UserLanguages { cli::array &lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserLanguages : string[]" Usage="System.Net.HttpListenerRequest.UserLanguages" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="63409-323">Obtiene los idiomas naturales preferidos para la respuesta.</span><span class="sxs-lookup"><span data-stu-id="63409-323">Gets the natural languages that are preferred for the response.</span></span></summary>
        <value><span data-ttu-id="63409-324">Matriz <see cref="T:System.String" /> que contiene los idiomas especificados en el encabezado <see cref="F:System.Net.HttpRequestHeader.AcceptLanguage" /> de la solicitud o bien <see langword="null" />, si la solicitud de cliente no incluía un encabezado <see cref="F:System.Net.HttpRequestHeader.AcceptLanguage" />.</span><span class="sxs-lookup"><span data-stu-id="63409-324">A <see cref="T:System.String" /> array that contains the languages specified in the request's <see cref="F:System.Net.HttpRequestHeader.AcceptLanguage" /> header or <see langword="null" /> if the client request did not include an <see cref="F:System.Net.HttpRequestHeader.AcceptLanguage" /> header.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63409-325">Para obtener una descripción detallada de la `Accept-Language` encabezado, consulte la sección de RFC 2616 14.4, disponible en [ https://www.rfc-editor.org ](https://www.rfc-editor.org/).</span><span class="sxs-lookup"><span data-stu-id="63409-325">For a detailed description of the `Accept-Language` header, see RFC 2616 Section 14.4, available at [https://www.rfc-editor.org](https://www.rfc-editor.org/).</span></span>  
  
 <span data-ttu-id="63409-326">Para obtener una lista completa de los encabezados de solicitud, consulte el <xref:System.Net.HttpRequestHeader> enumeración.</span><span class="sxs-lookup"><span data-stu-id="63409-326">For a complete list of request headers, see the <xref:System.Net.HttpRequestHeader> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="63409-327">El ejemplo de código siguiente muestra los idiomas de la solicitud `Accept-Language` encabezado.</span><span class="sxs-lookup"><span data-stu-id="63409-327">The following code example displays the languages from the request's `Accept-Language` header.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#15](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
  </Members>
</Type>